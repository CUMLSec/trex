str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 , hexvar ] cmp r3 , num moveq r3 , num movne r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ r2 , hexvar ] ldr r2 , [ fp , - hexvar ] add r2 , r1 , r2 add r3 , r3 , r2 ldrb r3 , [ r3 ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num ble hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r1 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r1 , r3 lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 ] cmn r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r1 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r1 , r3 add r3 , r3 , num cmp r2 , r3 beq hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r1 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r1 , r3 add r3 , r3 , num lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 ] cmn r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ r2 , hexvar ] ldr r2 , [ fp , - hexvar ] add r2 , r1 , r2 add r3 , r3 , r2 ldrb r3 , [ r3 ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 ,
[ fp , - hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ r2 , hexvar ] ldr r2 , [ fp , - hexvar ] add r2 , r1 , r2 add r3 , r3 , r2 ldrb r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] bic r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ r2 , hexvar ] ldr r2 , [ fp , - hexvar ] add r2 , r1 , r2 add r3 , r3 , r2 ldrb r3 , [ r3 ] b hexvar ldr r3 , [ fp , - num ] and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
cmp qword ptr [ rsi + hexvar ] , num mov eax , num je hexvar ret nop push r15 push r14 push r13 push r12 mov r13 , rdx push rbp push rbx mov ebp , ecx mov rbx , rsi mov r12 , rdi sub rsp , hexvar test ecx , ecx mov rsi , qword ptr [ rsi + hexvar ] jne hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov ecx , dword ptr [ rbx + hexvar ] test ecx , ecx je hexvar mov r15 , qword ptr [ rsi + hexvar ] xor r14d , r14d test r15 , r15 je hexvar mov r14 , qword ptr [ r15 + hexvar ] test r14 , r14 je hexvar mov rax , qword ptr [ r15 + hexvar ] xor edx , edx div r14 mov r14 , rax mov r10 , qword ptr [ rsi + hexvar ] test r10 , r10 je hexvar mov rdx , qword ptr [ r10 + hexvar ] mov rsi , r14 test rdx , rdx mov qword ptr [ rsp + num ] , rdx je hexvar mov rax , qword ptr [ r10 + hexvar ] mov rdi , rdx xor edx , edx div rdi
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ esp ] , num lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , - num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ hexvar ] , num jmp hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor eax , eax mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx lea
ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num call hexvar jmp hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ ebp + num ] jge hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ hexvar ] mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ esp ] , num call hexvar call hexvar mov dword ptr [ eax ] , num test byte ptr [ hexvar ] , num je hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx cmp eax , num mov eax , num cmovne eax , ecx mov dword ptr [ ebp - num ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] add eax , num cmp dword ptr [ ebp + hexvar ] , eax jae hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax ] xor eax , hexvar movzx eax , al add eax , - hexvar pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v1 , num ( fp ) lui v0 , hexvar ori v0 , v0 , hexvar addu v0 , v1 , v0 sltiu v1 , v0 , num beqz v1 , hexvar nop sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) jr v0 nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop move v0 , zero move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a1 , hexvar sw s0 , hexvar ( sp ) move s0 , a0 lui a0 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a2 , zero , num lw t9 , - hexvar ( gp ) addiu a1 , a1 , - hexvar jalr t9 addiu a0 , a0 , hexvar ori a3 , zero , hexvar lw gp , hexvar ( sp ) move a0 , v0 lw a2 , hexvar ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move fp , a0 move s2 , a1 move s7 , a2 move s6 , a3 lw s4 , ( a1 )
push esi push ebx sub esp , hexvar mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push esi call dword ptr [ ebx ] push dword ptr [ esp + hexvar ] push eax push esi push ebx call hexvar add esp , hexvar pop ebx pop esi ret
ldr r3 , [ r1 , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r3 , num cmpne r3 , num moveq r3 , num movne r3 , num cmp r2 , num cmpne r2 , num beq hexvar ldr r2 , [ r0 , hexvar ] cmp r3 , num and r2 , r2 , hexvar beq hexvar cmp r2 , hexvar beq hexvar mov r3 , num mov r0 , r3 bx lr cmp r3 , num bne hexvar ldr r3 , [ r1 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar mvn r3 , num mov r0 , r3 bx lr ldr r3 , [ r1 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar cmp r2 , hexvar beq hexvar ldr r2 , [ r1 , hexvar ] ldr r3 , [ r0 , hexvar ] cmp r2 , r3 blt hexvar bgt hexvar ldr r3 , [ r1 , hexvar ] ldr r2 , [ r0 , hexvar ] subs r3 , r3 , r2 bne hexvar ldr r1 , [ r1 ] ldr r0 , [ r0 ] b hexvar
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] add eax , num cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
push r15 push r14 mov r15 , rdi push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rax , qword ptr [ rdi + num ] mov r14 , rsi mov rbp , rdx cmp dword ptr [ rax + num ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] cmp edx , num je hexvar and edx , num jne hexvar mov r13d , dword ptr [ rip + hexvar ] test r13d , r13d jne hexvar mov r12d , dword ptr [ rip + hexvar ] test r12d , r12d jne hexvar mov ebx , dword ptr [ rip + hexvar ] xor esi , esi test ebx , ebx je hexvar movzx eax , byte ptr [ r14 + hexvar ] and eax , num cmp al , num je hexvar mov ebx , dword ptr [ r15 + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ r14 + num ] shr ebx , num and ebx , hexvar or eax , ebx mov ebx , dword ptr [ rip + hexvar ] not ebx and ebx , dword ptr [ rdx + hexvar ] and ebx , eax cmp dword ptr [ rip + hexvar ] , num jne hexvar and ebx , hexvar mov rdi , r14 call hexvar test eax , eax je hexvar mov esi , ebx mov rdi , r14 call hexvar test eax , eax je hexvar mov rdi , r15 call hexvar mov rdi , r15 mov r12d , eax call hexvar test rbp , rbp mov ebx , eax je hexvar mov rdi , r15 call hexvar test rax , rax je hexvar mov rdi , r15 call hexvar mov r10d , dword ptr [ rax + hexvar ] test r10d , r10d jne hexvar mov r12d , dword ptr [ rbp + hexvar ] mov ebx , dword ptr [ rbp + hexvar ] mov rax , qword ptr [ r14 + num ] mov edx , ebx mov esi , r12d mov rdi , r14 call qword ptr [ rax + hexvar ] test eax , eax mov ebx , eax jne hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov rdi , r15 call hexvar mov rdi , r14 mov ebp , eax call hexvar cmp ebp , eax je hexvar mov rdi , r15 call hexvar test eax , eax jne hexvar mov rdi , r15 call hexvar lea rsi , [ rip + hexvar ] mov rbp , rax mov edx , num xor edi , edi call hexvar mov rsi , rbp mov rdi , rax xor eax , eax call hexvar jmp hexvar nop dword ptr [ rax ] mov r11d
, dword ptr [ rip + hexvar ] mov rsi , qword ptr [ rip + hexvar ] test r11d , r11d jne hexvar mov rsi , qword ptr [ r15 + hexvar ] movzx eax , byte ptr [ r14 + hexvar ] add rsi , qword ptr [ rip + hexvar ] and eax , num cmp al , num jne hexvar jmp hexvar nop movzx esi , byte ptr [ r15 + hexvar ] mov rdi , r14 and esi , num call hexvar test eax , eax je hexvar mov rax , qword ptr [ r14 + num ] cmp dword ptr [ rax + num ] , num je hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar mov rdi , rbx call hexvar mov rdi , qword ptr [ rip + hexvar ] cmp rbx , rdi je hexvar call hexvar mov rax , qword ptr [ r15 + num ] mov qword ptr [ rip + hexvar ] , num mov rdi , r15 mov qword ptr [ rip + hexvar ] , num call qword ptr [ rax + hexvar ] test rax , rax js hexvar mov rdi , rax call hexvar mov rdx , qword ptr [ r15 + num ] mov qword ptr [ rip + hexvar ] , rax mov rsi , rax mov qword ptr [ rip + hexvar ] , rax mov rdi , r15 call qword ptr [ rdx + hexvar ] test rax , rax mov qword ptr [ rsp + hexvar ] , rax jns hexvar nop word ptr [ rax + rax ] xor ecx , ecx xor edx , edx mov rsi , r15 xor edi , edi xor eax , eax xor ebx , ebx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , ebx jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r15 , qword ptr [ rdi + hexvar ] mov rbx , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rbx xor ebx , ebx cmp qword ptr [ rsi ] , num mov rbx , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + num ] , rbx je hexvar lea rax , [ r15 * num ] mov r14 , rdi mov qword ptr [ rsp ] , num mov r13 , r15 mov qword ptr [ rsp + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rsp + hexvar ] add qword ptr [ rsp ] , num mov rax , qword ptr [ rsp ] cmp rax , qword ptr [ rcx ] jae hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp ] mov rax , qword ptr [ rax ] mov r12 , qword ptr [ rax + rdi * num ] mov rdi , qword ptr [ rsp + num ] mov rbp , r12 shl rbp , num mov rax , rbp add rax , qword ptr [ rdi ] cmp byte ptr [ rax + num ] , num jne hexvar mov ebx , dword ptr [ rax + num ] test ebx , hexvar je hexvar mov edx , dword ptr [ r14 + hexvar ] shr ebx , num mov rsi , r13 mov rdi , r14 call hexvar mov edx , ebx and dx , hexvar test bl , num je hexvar test al , num je hexvar and ebx , num jne hexvar test dl , hexvar je hexvar test al , num je hexvar and edx , hexvar je hexvar test al , num je hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ r14 + hexvar ] xor ecx , ecx mov rsi , rbx cmp rcx , rsi jae hexvar lea rdx , [ rcx + rsi ] mov rdi , qword ptr [ r14 + hexvar ] shr rdx , num lea rax , [ rdx + rdx * num ] cmp r13 , qword ptr [ rdi + rax * num + num ] jbe hexvar jmp hexvar nop dword ptr [ rax ] lea rax , [ rcx + rdx ] shr rax , num lea rsi , [ rax + rax * num ] cmp r13 , qword ptr [ rdi + rsi * num + num ] ja hexvar mov rdx , rax cmp rcx , rdx jb hexvar cmp rbx , rcx jbe hexvar mov rdx , qword ptr [ r14 + hexvar ] lea rax , [ rcx + rcx * num ] lea rax
, [ rdx + rax * num ] cmp qword ptr [ rax + num ] , r13 jne hexvar cmp rcx , - num jne hexvar jmp hexvar nop dword ptr [ rax ] add rax , hexvar cmp byte ptr [ rax - num ] , num je hexvar cmp r12 , qword ptr [ rax ] jne hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar mov rax , rdx mov rdx , rsi nop word ptr [ rax + rax ] lea rcx , [ rax + num ] mov rsi , rdx jmp hexvar nop dword ptr [ rax ] and ebx , num je hexvar test al , num je hexvar jmp hexvar nop mov rax , qword ptr [ r14 + hexvar ] cmp qword ptr [ r14 + hexvar ] , num mov rdx , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rdx + rbp ] mov qword ptr [ rsp + hexvar ] , rax je hexvar mov r10 , qword ptr [ r14 + num ] mov qword ptr [ rsp + hexvar ] , r13 mov r13 , r14 mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , r12 mov qword ptr [ rsp + hexvar ] , rbx mov r14 , r10 mov rax , qword ptr [ r13 + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rax + rsi * num ] mov rax , qword ptr [ rbx + num ] shl rax , num cmp rcx , qword ptr [ rdx + rax ] je hexvar add qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] cmp rax , qword ptr [ r13 + hexvar ] jae hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rax ] jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rbx + hexvar ] , num mov rcx , qword ptr [ rbx ] mov r15 , qword ptr [ rsp + hexvar ] je hexvar mov r8 , r14 xor ebp , ebp mov r14 , rcx jmp hexvar nop dword ptr [ rax ] lea r10 , [ rdx + r15 ] cmp r10 , qword ptr [ r13 + hexvar ] ja hexvar lea rsi , [ r8 + r14 ] lea rdi , [ r8 + r15 ] mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r10 mov qword ptr [ rsp + hexvar ] , r9 call hexvar test eax , eax mov r8 , qword ptr [ rsp + hexvar ] jne hexvar mov r10 , qword ptr [ rsp +
hexvar ] mov r9 , qword ptr [ rsp + hexvar ] mov r15 , r10 mov r8 , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] mov rdx , r9 mov rsi , rbx mov rdi , r13 call hexvar cmp eax , num mov r8 , qword ptr [ r13 + num ] ja hexvar add rbp , num cmp rbp , qword ptr [ rbx + hexvar ] mov r14 , r12 jae hexvar mov rax , qword ptr [ rbx + hexvar ] mov r9 , qword ptr [ rax + rbp * num ] mov r12 , qword ptr [ r9 + num ] mov rdx , r12 sub rdx , r14 test rdx , rdx jg hexvar add r15 , rdx jmp hexvar nop word ptr [ rax + rax ] cmp r10 , qword ptr [ r13 + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , r9 ja hexvar mov rsi , r10 mov rdi , r13 mov qword ptr [ rsp + hexvar ] , r10 call hexvar test eax , eax jne hexvar mov r8 , qword ptr [ r13 + num ] mov rdx , qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + hexvar ] mov r10 , qword ptr [ rsp + hexvar ] jmp hexvar xor eax , eax nop word ptr [ rax + rax ] mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , num addiu gp , gp , - hexvar addu gp , gp , t9 lw a0 , - hexvar ( gp )
push r15 push r14 lea rax , [ rip + hexvar ] push r13 push r12 mov r13 , rdi push rbp push rbx mov rbx , r8 mov r14 , rsi mov r15 , rdx sub rsp , hexvar test r8 , r8 cmove rbx , rax mov qword ptr [ rsp + num ] , rcx call hexvar mov r8d , dword ptr [ rbx ] mov r12d , dword ptr [ rax ] mov rbp , rax mov rcx , qword ptr [ rsp + num ] mov r9 , rbx mov rdx , r15 mov rsi , r14 mov rdi , r13 call hexvar mov dword ptr [ rbp ] , r12d add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , a0 sw s0 , hexvar ( sp ) addiu a2 , sp , hexvar lw s0 , - hexvar ( gp ) addiu a0 , zero , num lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop bnez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) andi v0 , v0 , hexvar xori v0 , v0 , hexvar sltiu v0 , v0 , num lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr
[ rbp - hexvar ] cmp eax , dword ptr [ rcx ] setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] add rdx , hexvar mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rcx + rdx * num ] mov esi , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx + hexvar ] , esi mov rdi , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov r8d , dword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , r8d xor eax , eax mov ecx , dword ptr [ rbp - hexvar ] cmp ecx , num mov edx , num cmovne eax , edx mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , num mov edx , eax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rsp , rbp pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui v0 , hexvar addiu a2 , v0 , hexvar lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] add r3 , r3 , num cmp r3 , hexvar bhi hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , fp , num pop { fp } bx lr
mov rax , rsi mov edx , dword ptr [ rdi ] mov dword ptr [ rsi ] , edx mov edx , dword ptr [ rdi + num ] mov dword ptr [ rsi + num ] , edx mov edx , dword ptr [ rdi + num ] mov dword ptr [ rsi + num ] , edx mov edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rsi + hexvar ] , edx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar add esp , hexvar pop ebp ret
lw v0 , num ( a0 ) lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a3 , zero , hexvar lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) addiu s2 , a2 , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sb zero , hexvar ( a2 ) lw t9 , - hexvar ( gp ) addiu a3 , zero , hexvar move a2 , zero move a0 , s1 bal hexvar move a1 , s0 addiu s2 , s2 , - num lw gp , hexvar ( sp ) addiu v1 , v1 , hexvar addiu a3 , zero , hexvar move a2 , zero sb v1 , ( s2 ) move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar move a1 , s0 or a0 , v1 , v0 lw gp , hexvar ( sp ) move s1 , v0 bnez a0 , hexvar move s0 , v1 lw ra , hexvar ( sp ) move v0 , s2 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) addiu v0 , zero , num lw v1 , hexvar ( fp ) beq v1 , v0 , hexvar nop b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push rbp mov rbp , rsp lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar nop pop rbp ret
addiu v0 , zero , num beq a1 , v0 , hexvar nop lui v0 , hexvar b hexvar addiu v0 , v0 , - hexvar lw v1 , num ( v0 ) beq v1 , a1 , hexvar nop addiu v0 , v0 , hexvar lw v1 , ( v0 ) bnez v1 , hexvar lui gp , hexvar addiu gp , gp , - hexvar lw t9 , - hexvar ( gp ) b hexvar addiu a1 , zero , hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( a0 )
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v1 , num ( fp ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v1 , num ( fp ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
multu a1 , a2 mflo t1 bltz t1 , hexvar mfhi t0 sltu v0 , zero , t0 bnez v0 , hexvar lui gp , hexvar j hexvar mul a1 , a1 , a2 lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi jne hexvar sub esp , num push esi push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi jne hexvar sub esp , num push esi push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar pop ebx pop esi ret
lea eax , [ rdi - num ] cmp eax , num setbe al cmp edi , hexvar sete dl or eax , edx movzx eax , al ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 move a0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s0 move a1 , s1 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , hexvar mov edx , num div dword ptr [ ebp + hexvar ]
push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push num call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , eax push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar call hexvar add esp , hexvar nop add esp , num pop ebx ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw fp , hexvar ( sp ) lui fp , hexvar sw s6 , hexvar ( sp ) move s6 , a2 sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s2 , hexvar ( sp ) move s4 , v0 lw v0 , ( v0 )
push ebp mov ebp , esp sub esp , num mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar test eax , eax sete cl movzx eax , cl shl eax , num add eax , hexvar xor edx , edx add esp , num pop ebp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] test rsi , rsi sete al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi endbr64 mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax endbr64 mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax endbr64 mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax endbr64 mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar endbr64 mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add edx , hexvar mov byte ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx movzx eax , byte ptr [ eax + num ] movzx eax , al cmp eax , hexvar ja hexvar shl eax , num mov eax , dword ptr [ eax + edx - hexvar ] add eax , edx jmp eax
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] test ebp , ebp je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ eax + hexvar ] , esi jbe hexvar mov edi , dword ptr [ edx + esi * num ] mov eax , dword ptr [ edi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] mov ecx , edx or ecx , dword ptr [ edi + hexvar ] je hexvar cmp byte ptr [ eax + edx - num ] , num jne hexvar mov edx , num cmp edx , dword ptr [ edi + hexvar ] jb hexvar cmp ebp , dword ptr [ edi + hexvar ] jb hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp esi , eax jne hexvar lea ecx , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , ecx cmp dword ptr [ edi ] , ebp je hexvar sub esp , num push dword ptr [ edi ] push eax push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar mov esi , dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + hexvar ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , num push dword ptr [ esp + hexvar ] push edi push esi push ebp push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ edi + num ] cmp eax , num je hexvar cmp eax , hexvar jbe hexvar sub esp , num push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar push esi push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , ebp add eax , dword ptr [ edi + hexvar ] add esp , hexvar pop ebx
pop esi pop edi pop ebp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] sub esp , hexvar push edi call hexvar mov esi , eax cmp byte ptr [ eax ] , num cmove esi , edi mov dword ptr [ esp ] , esi call hexvar add esi , eax add esp , hexvar cmp byte ptr [ esi ] , num setne al mov byte ptr [ esi ] , num pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop jal hexvar nop jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - num ] mov r0 , num bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov esi , dword ptr [ ebp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax lea eax , [ ebp - hexvar ] push eax lea eax , [ ebp - hexvar ] push eax push edi call hexvar add esp , hexvar test eax , eax js hexvar sub esp , num lea eax , [ ebp - hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax js hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num cmp eax , num mov edx , hexvar cmovbe eax , edx add eax , dword ptr [ ebp - hexvar ] jb hexvar lea edx , [ eax + num ] cmp eax , edx ja hexvar cmp edx , hexvar ja hexvar add edx , hexvar and edx , hexvar sub esp , edx lea eax , [ esp + hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar cmp edx , - num je hexvar sub esp , hexvar push edx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ ebp - hexvar ] , eax mov edi , num cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , hexvar mov ecx , dword ptr
[ ebp - hexvar ] cmp eax , ecx cmovb eax , ecx mov edi , eax cmp eax , - num je hexvar mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] cmp ecx , eax sete byte ptr [ ebp - hexvar ] movzx eax , byte ptr [ ebp - hexvar ] test ecx , ecx je hexvar test al , al jne hexvar sub esp , num push edi push dword ptr [ ebp - hexvar ] call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar jmp hexvar sub esp , hexvar push edi call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar mov edx , dword ptr [ ebp - hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ ebp - hexvar ] test ecx , ecx je hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar sub esp , num push ecx push dword ptr [ ebp - hexvar ] push edx call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ebp - hexvar ] sub esp , num push esi push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax + hexvar ] cmp dl , hexvar je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp eax , - num je hexvar cmp dl , hexvar je hexvar mov ecx , edx and ecx , hexvar sub ecx , hexvar cmp cl , num jbe hexvar and edx , hexvar cmp dl , hexvar jne hexvar shl eax , num add eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , hexvar je hexvar mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ecx + hexvar ] shl eax , num mov eax , dword ptr [ edx + eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ecx + num ] mov ecx , dword ptr [ ebp - hexvar ] mov byte ptr [ ecx ] , hexvar lea esi , [ ecx + num ] test al , num je hexvar mov edx , dword ptr [ ebp - hexvar
] lea esi , [ edx + num ] mov byte ptr [ edx + num ] , hexvar test al , num je hexvar mov byte ptr [ esi ] , hexvar lea esi , [ esi + num ] test al , num je hexvar mov byte ptr [ esi ] , hexvar lea esi , [ esi + num ] test al , num je hexvar mov byte ptr [ esi ] , hexvar lea esi , [ esi + num ] test al , hexvar je hexvar mov byte ptr [ esi ] , hexvar lea esi , [ esi + num ] test al , hexvar je hexvar mov byte ptr [ esi ] , hexvar lea esi , [ esi + num ] mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] cmp eax , edx je hexvar sub edx , eax sub esp , num mov dword ptr [ ebp - hexvar ] , edx push edx push eax push esi call hexvar add esi , dword ptr [ ebp - hexvar ] add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ecx + hexvar ] cmp eax , edx je hexvar sub edx , eax sub esp , num mov dword ptr [ ebp - hexvar ] , edx push edx push eax push esi call hexvar add esi , dword ptr [ ebp - hexvar ] add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num cmp eax , num ja hexvar mov edx , ebx add edx , dword ptr [ ebx + eax * num - hexvar ] jmp edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ eax + hexvar ] cmp eax , - num jne hexvar mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ ecx + num ] cmp ecx , edx cmovbe eax , edx mov dword ptr [ ebp - hexvar ] , eax cmp edi , eax jae hexvar test edi , edi je hexvar test edi , edi js hexvar lea eax , [ edi + edi ] jmp hexvar call hexvar mov eax , hexvar mov esi , dword ptr [ ebp - hexvar ] cmp eax , esi cmovb eax , esi mov edi , eax cmp eax , - num je hexvar mov esi , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] cmp esi , eax sete byte ptr [ ebp - hexvar
] movzx eax , byte ptr [ ebp - hexvar ] test esi , esi je hexvar test al , al jne hexvar sub esp , num push edi push dword ptr [ ebp - hexvar ] call hexvar mov esi , eax add esp , hexvar jmp hexvar sub esp , hexvar push edi call hexvar mov esi , eax add esp , hexvar test esi , esi je hexvar mov edx , dword ptr [ ebp - hexvar ] test edx , edx je hexvar cmp byte ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + ecx ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , edx add dword ptr [ ebp - hexvar ] , num add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] cmp esi , eax je hexvar sub esi , eax mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax + esi ] cmp eax , edx mov eax , hexvar cmovbe eax , edx mov dword ptr [ ebp - hexvar ] , eax cmp edi , eax jae hexvar test edi , edi je hexvar test edi , edi js hexvar lea eax , [ edi + edi ] jmp hexvar sub esp , num push edx push dword ptr [ ebp - hexvar ] push esi call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , esi jmp hexvar call hexvar shl eax , num add eax , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax ] lea edx , [ esi - hexvar ] cmp edx , num ja hexvar mov esi , ebx add esi , dword ptr [ ebx + edx * num - hexvar ] jmp esi
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi je hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v0 , hexvar sw s4 , hexvar ( sp ) addiu v1 , sp , hexvar sw s5 , hexvar ( sp ) addiu v0 , v0 , - hexvar lw s4 , - hexvar ( gp ) move s5 , a0 addiu a2 , v0 , hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , ( s4 ) sw a0 , hexvar ( sp ) lw t1 , ( v0 ) addiu v0 , v0 , hexvar addiu v1 , v1 , hexvar lw t0 , - hexvar ( v0 ) lw a3 , - num ( v0 ) lw a0 , - num ( v0 ) sw t1 , - hexvar ( v1 ) sw t0 , - hexvar ( v1 ) sw a3 , - num ( v1 ) bne v0 , a2 , hexvar sw a0 , - num ( v1 ) andi a1 , a1 , hexvar lw t9 , - hexvar ( gp ) srl v1 , a1 , num addiu s6 , sp , hexvar sll v1 , v1 , num andi a1 , a1 , hexvar addu v1 , s6 , v1 lui s1 , hexvar lw a0 , ( v1 ) srlv v0 , a0 , a1 nor v0 , zero , v0 andi v0 , v0 , num sllv v0 , v0 , a1 xor v0 , v0 , a0 jalr t9 sw v0 , ( v1 ) lui v1 , hexvar move s7 , v0 lw v0 , - hexvar ( s1 ) lw gp , hexvar ( sp ) lw fp , ( s7 ) bgtz v0 , hexvar lw s0 , - hexvar ( v1 ) lui s3 , hexvar addiu s2 , s3 , - hexvar beq s0 , s2 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , num sw v1 , hexvar ( sp ) bal hexvar move a0 , s0 lw v1 , hexvar ( sp ) move s0 , v0 lw gp , hexvar ( sp ) sw v0 , - hexvar ( v1 ) lw a0 , - hexvar ( s1 ) addiu s2 , zero , num lw t9 , - hexvar ( gp ) move a1 , zero subu a2 , s2 , a0 sll a0 , a0 , num sll a2 , a2 , num jalr t9 addu a0 , s0 , a0 sw s2 , - hexvar ( s1 ) lw v0 , hexvar ( sp ) addiu a3 , zero , - num lw s2 , ( s0 ) move a2 , s5 lw
s1 , num ( s0 ) lw s3 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a1 , s2 lw v0 , hexvar ( sp ) move a0 , s1 ori s3 , s3 , num sw s6 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) sltu s2 , v0 , s2 bnez s2 , hexvar lw gp , hexvar ( sp ) addiu s2 , v0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar beq s1 , v0 , hexvar sw s2 , ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , s2 addiu a3 , zero , - num move s1 , v0 lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) move a2 , s5 sw s1 , num ( s0 ) move a1 , s2 sw v0 , hexvar ( sp ) move a0 , s1 sw v1 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s1 lw v1 , ( s4 ) bne a0 , v1 , hexvar sw fp , ( s7 ) lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , zero addiu a1 , zero , num bal hexvar sw v1 , hexvar ( sp ) lw v1 , hexvar ( sp ) move s0 , v0 lw a0 , - hexvar ( s3 )
push rbp mov rbp , rsp sub rsp , hexvar mov al , dl mov byte ptr [ rbp - hexvar ] , al mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov sil , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , sil lea rdi , [ rbp - hexvar ] mov rsi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] movsx esi , byte ptr [ rbp - hexvar ] mov edx , num call hexvar xor edi , edi mov rsi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax nop leave ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , num ja hexvar mov edx , dword ptr [ esp + hexvar ] mov word ptr [ edx + hexvar ] , ax mov eax , num add esp , num pop ebx ret
push rbx mov edx , num mov esi , hexvar xor edi , edi call hexvar mov edx , hexvar mov rsi , rax mov edi , num xor eax , eax call hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov ecx , hexvar mov rsi , rax mov edx , hexvar mov edi , num xor eax , eax call hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop word ptr cs : [ rax + rax ] nop
push rbp mov rbp , rsp push r14 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , rsp add r9 , - hexvar mov rsp , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14 , qword ptr [ rdx ] mov qword ptr [ r9 ] , r14 mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] movabs rsi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx ] movabs rsi , hexvar movabs rdx , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar xor eax , eax mov esi , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rcx ] add rax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi ] add rdi , hexvar mov qword ptr
[ rbp - hexvar ] , rdi mov rdi , rax mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx ] mov r8 , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ r8 ] mov r9 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ r9 ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num sete r10b mov byte ptr [ rbp - hexvar ] , r10b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] add rdx , hexvar sub rsp , hexvar movabs rsi , hexvar movabs r8 , hexvar mov qword ptr [ rbp - hexvar ] , rdx mov rdx , r8 mov ecx , hexvar mov r8d , hexvar movabs r9 , hexvar movabs r10 , hexvar mov qword ptr [ rsp ] , r10 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rsp + num ] , r10 mov al , num call hexvar add rsp , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx ] , num setne r11b mov dword ptr [ rbp - hexvar ] , eax mov byte ptr [ rbp - hexvar ] , r11b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar
] mov qword ptr [ rdi ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r14 pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] and ecx , hexvar cmp ecx , hexvar mov dword ptr [ ebp - num ] , eax jne hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar cmp eax , hexvar jne hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar cmp eax , hexvar jne hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar cmp eax , hexvar jne hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar cmp eax , hexvar jne hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar cmp eax , hexvar jne hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar cmp eax , hexvar jne hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , hexvar movsx eax , byte ptr [ ebp - num ] add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi je hexvar cmp dword ptr [ ebp + hexvar ] , hexvar jbe hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , hexvar jbe hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar xor eax , eax lea ecx , [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov bl , dl mov byte ptr [ ebp - hexvar ] , bl mov edx , dword ptr [ ebp + hexvar ] mov bl , dl mov byte ptr [ ebp - hexvar ] , bl mov byte ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , num add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor eax , eax lea ecx , [ ebp - hexvar ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor eax , eax lea ecx , [ ebp - hexvar ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar lea eax , [ ebp - hexvar ] xor ecx , ecx mov byte ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , num mov edx , eax add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [
esp + num ] , hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num jge hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar lea eax , [ ebp - hexvar ] xor ecx , ecx mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , num b hexvar ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar bl hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s2 , a0 move s0 , a1 move s1 , a2 lbu v0 , ( a1 ) sb v0 , ( a2 ) lbu v0 , num ( a1 ) sb v0 , num ( a2 ) lw v0 , num ( a0 ) lw t9 , hexvar ( v0 )
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar mov r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar mvn r3 , num b hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar sub r3 , fp , hexvar str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmn r3 , num bls hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar mov r0 , num bl hexvar mov r3 , r0 eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] strb r3 , [ fp , - hexvar ] ldrb r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw s2 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) slti v1 , v0 , num bnez v1 , hexvar sll v0 , v0 , num addiu s0 , s2 , hexvar addiu s1 , s2 , num addu s1 , s1 , v0 lw a0 , ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu s0 , s0 , num bne s0 , s1 , hexvar nop lw a0 , num ( s2 ) lui v0 , hexvar addiu v0 , v0 , - hexvar beq a0 , v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , hexvar sw v1 , - hexvar ( v0 ) addiu v0 , v0 , - hexvar lui v1 , hexvar addiu v1 , v1 , - hexvar sw v1 , num ( v0 ) lui v0 , hexvar addiu v0 , v0 , - hexvar beq s2 , v0 , hexvar move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , - hexvar ( v1 ) lui v0 , hexvar addiu v1 , zero , num sw v1 , - hexvar ( v0 ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a2 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r4 , r0 mov r5 , r1 mov fp , r2 bl hexvar mov sl , r0 ldr r7 , [ r4 , hexvar ] mov r1 , hexvar mov r0 , r4 bl hexvar subs r6 , r0 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r5 , hexvar ] and r3 , r3 , num cmp r3 , num beq hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r14d , hexvar add esi , - num cmp esi , num ja hexvar mov rbx , rcx mov rbp , rdi jmp qword ptr [ rsi * num + hexvar ] mov r14d , num test rdx , rdx jne hexvar mov qword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , num mov rdi , rbp call hexvar mov ebp , eax lea rdx , [ rsp + num ] lea rcx , [ rsp + hexvar ] mov rdi , rbx xor esi , esi call hexvar jmp hexvar mov r14d , num test rdx , rdx jne hexvar mov rdi , rbp call hexvar test rax , rax je hexvar mov r15 , rax lea rsi , [ rsp + num ] mov rdi , rbx call hexvar jmp hexvar mov dword ptr [ rbx ] , hexvar mov r14d , num jmp hexvar mov r14d , num test rdx , rdx jne hexvar mov qword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , num mov rdi , rbp call hexvar mov ebp , eax lea rcx , [ rsp + num ] lea r8 , [ rsp + hexvar ] mov rdi , rbx xor esi , esi xor edx , edx call hexvar mov rbx , qword ptr [ rsp + num ] mov edi , hexvar call hexvar mov rdi , rbx mov rsi , rax mov edx , num xor ecx , ecx call hexvar test ebp , ebp je hexvar mov rbx , qword ptr [ rsp + hexvar ] mov edi , ebp call hexvar mov rdi , rbx mov rsi , rax mov edx , num xor ecx , ecx jmp hexvar mov r14d , num test rdx , rdx jne hexvar mov rdi , rbp call hexvar test rax , rax je hexvar mov r15 , rax lea rcx , [ rsp + num ] mov rdi , rbx xor esi , esi xor edx , edx call hexvar mov rbx , qword ptr [ rsp + num ] mov edi , dword ptr [ rbp ] call hexvar mov rdi , rbx mov rsi , rax mov edx , hexvar mov rcx , r15 call hexvar jmp hexvar mov r14d , hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push r15 push r14 mov r14 , rdi push r13 push r12 lea r12d , [ r8 + num ] push rbp push rbx mov rdi , rsi and r12d , hexvar mov r15 , rdx mov ebx , r8d sub rsp , hexvar movsxd rsi , dword ptr [ rdx ] movsxd r12 , r12d add r12 , hexvar mov qword ptr [ rsp + num ] , rcx add rsi , r12 call hexvar test rax , rax mov r13 , rax je hexvar movsxd rbp , dword ptr [ r15 ] mov edi , num mov rax , rbp add rbp , r13 add r12d , eax mov rax , qword ptr [ r14 + num ] mov rsi , rbp mov dword ptr [ r15 ] , r12d call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] mov r12 , rdi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] lea rsi , [ rbp + num ] mov edi , hexvar call qword ptr [ rax + hexvar ] lea rcx , [ rbp + hexvar ] mov rsi , qword ptr [ rsp + num ] xor edx , edx mov eax , hexvar mov word ptr [ rbp + hexvar ] , dx mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rcx mov word ptr [ rbp + hexvar ] , ax mov rdx , r12 call hexvar test bl , num lea rdi , [ rax + r12 ] je hexvar add ebx , num add rdi , num mov byte ptr [ rdi - num ] , num test bl , num jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar lw v0 , num ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a2 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) lbu v0 , hexvar ( a1 ) bnez v0 , hexvar lw s0 , num ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lb v0 , ( v0 ) move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi push ebx add esp , - hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] imul eax , eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebp - hexvar ] , edx movzx eax , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , al cmp byte ptr [ ebp - hexvar ] , hexvar jne hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] imul eax , eax , hexvar add eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov
eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] movsx eax , al sub eax , hexvar mov ecx , eax cmp dword ptr [ ebp - hexvar ] , hexvar ja hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , edx shl eax , num add eax , edx add eax , eax jmp hexvar mov eax , hexvar sub esp , num push ecx push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar cmp dword ptr [ ebp - hexvar ] , - num je hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] or eax , num mov edx , eax mov eax , dword ptr [
ebp - hexvar ] mov dword ptr [ eax + num ] , edx add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] or eax , num mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] or eax , num mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] or eax , num mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] or eax , hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] or eax , hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx add dword ptr [ ebp - hexvar ] , num jmp hexvar nop mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx add dword ptr [ ebp - hexvar ] ,
num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] movsx eax , al sub eax , hexvar mov ecx , eax cmp dword ptr [ ebp - hexvar ] , hexvar ja hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , edx shl eax , num add eax , edx add eax , eax jmp hexvar mov eax , hexvar sub esp , num push ecx push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar cmp dword ptr [ ebp - hexvar ] , - num je hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp eax , - num jne hexvar mov eax ,
dword ptr [ ebp - hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp eax , - num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jb hexvar mov eax , dword ptr [ ebp - hexvar ] test eax , eax js hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , eax jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] ja hexvar sub esp , num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , hexvar ja hexvar mov eax , dword ptr [ ebp - hexvar ] shl eax , num jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] lea ecx , [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , ecx shl eax , num add eax , esi mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov eax ,
dword ptr [ eax ] cmp dword ptr [ ebp - hexvar ] , eax jae hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov dword ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar
] lea edx , [ eax - num ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx cmp dword ptr [ ebp - hexvar ] , num ja hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] movsx eax , al sub eax , hexvar mov ecx , eax cmp dword ptr [ ebp - hexvar ] , hexvar ja hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , edx shl eax , num add eax , edx add eax , eax jmp hexvar mov eax , hexvar sub esp , num push ecx push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar cmp dword ptr [ ebp - hexvar ] , - num je hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword
ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp eax , - num jne hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp eax , - num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jb hexvar mov eax , dword ptr [ ebp - hexvar ] test eax , eax js hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , eax jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] ja hexvar sub esp , num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , hexvar ja hexvar mov eax , dword ptr [ ebp - hexvar ] shl eax , num jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] lea ecx , [ eax + num ] mov edx , dword ptr [ ebp + hexvar
] mov dword ptr [ edx ] , ecx shl eax , num add eax , esi mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ ebp - hexvar ] , eax jae hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov dword ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jle hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub edx , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , num mov edx , num mov ecx , eax shl edx , cl mov eax , edx or dword ptr [ ebp
- hexvar ] , eax add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar or dword ptr [ ebp - hexvar ] , num add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar add dword ptr [ ebp - hexvar ] , num add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar add dword ptr [ ebp - hexvar ] , hexvar add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar je hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar add dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar add dword ptr [ ebp - hexvar ] , num jmp hexvar nop mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebp - hexvar ] , edx movzx eax , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , al movsx eax , byte ptr [ ebp - hexvar ] sub eax , hexvar cmp eax , hexvar ja hexvar shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push ebx call hexvar add eax , hexvar sub esp , num test byte ptr [ eax + hexvar ] , num jne hexvar xor ebx , ebx add esp , num mov eax , ebx pop ebx ret
push r15 push r14 mov ecx , esi push r13 push r12 and ecx , hexvar push rbp push rbx mov rbp , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rsp + hexvar ] , eax mov eax , esi shr al , num movzx eax , al lea rdi , [ rsp + rax * num + hexvar ] mov edx , dword ptr [ rdi ] mov eax , edx shr eax , cl xor eax , num and eax , num shl eax , cl xor eax , edx mov dword ptr [ rdi ] , eax call hexvar mov r13 , rax mov r14d , dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov rbx , qword ptr [ rip + hexvar ] mov r10d , r14d mov r15 , qword ptr [ rbx ] mov r12 , qword ptr [ rbx + num ] lea r9 , [ rsp + hexvar ] mov r8d , dword ptr [ rsp + hexvar ] mov rcx , - num mov rdx , rbp mov dword ptr [ rsp + hexvar ] , r10d mov rsi , r15 mov rdi , r12 call hexvar mov r10d , dword ptr [ rsp + hexvar ] cmp r15 , rax mov dword ptr [ r13 ] , r10d ja hexvar lea r15 , [ rax + num ] cmp r12 , hexvar mov qword ptr [ rbx ] , r15 je hexvar mov rdi , r12 call hexvar mov rdi , r15 call hexvar mov r8d , dword ptr [ rsp + hexvar ] lea r9 , [ rsp + hexvar ] mov qword ptr [ rbx + num ] , rax mov rcx , - num mov rdx , rbp mov rsi , r15 mov rdi , rax mov r12 , rax call hexvar mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] mov dword ptr [ r13 ] , r14d mov rax , r12 jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lbu v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lbu v1 , ( v0 ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , edi test eax , eax je hexvar mov eax , ebp or eax , edi je hexvar mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , num test ecx , ecx jne hexvar test edi , edi jne hexvar mov eax , dword ptr [ esp + hexvar ] or eax , dword ptr [ esp + num ] jne hexvar sub esp , num imul ecx , ebp imul edi , esi add ecx , edi mov eax , esi mul ebp add edx , ecx push edx push eax call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui a0 , hexvar lui v0 , hexvar addiu a0 , a0 , - hexvar addiu a1 , v0 , - hexvar subu a1 , a1 , a0 sra a1 , a1 , num srl v0 , a1 , hexvar addu a1 , v0 , a1 sra a1 , a1 , num beqz a1 , hexvar lui gp , hexvar addiu gp , gp , hexvar lw t9 , - hexvar ( gp ) beqz t9 , hexvar nop jr t9 nop jr ra nop
ldr r3 , [ r0 , num ] ldr r3 , [ r3 , num ] cmp r3 , num bxne lr
mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov byte ptr [ eax + hexvar ] , num imul ecx , edx add dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] imul ecx , edx add dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] imul ecx , edx add dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] imul ecx , edx add dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] imul ecx , edx add dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esp + num ] imul ecx , edx add dword ptr [ eax + hexvar ] , ecx imul edx , dword ptr [ esp + num ] add dword ptr [ eax + hexvar ] , edx ret
