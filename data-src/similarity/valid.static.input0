push rbp push r15 push r14 push r12 push rbx mov r14d , r8d mov r15 , rcx mov r12d , edx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rbp mov rsi , rax mov edx , r12d mov rcx , r15 mov r8d , r14d call hexvar mov rbp , rax mov rdi , rbx call hexvar mov rax , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r12 push rbx mov r14d , r8d mov r15 , rcx mov r12d , edx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rbp mov rsi , rax mov edx , r12d mov rcx , r15 mov r8d , r14d call hexvar mov rbp , rax mov rdi , rbx call hexvar mov rax , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov edi , eax add esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov edi , eax add esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push rbp push r15 push r14 push r12 push rbx mov r14d , r8d mov r15 , rcx mov r12d , edx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rbp mov rsi , rax mov edx , r12d mov rcx , r15 mov r8d , r14d call hexvar mov rbp , rax mov rdi , rbx call hexvar mov rax , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move a0 , a1 sw s1 , hexvar ( sp ) move s2 , a3 sw gp , hexvar ( sp ) move s1 , a2 sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) move s0 , v0 lw v0 , hexvar ( sp ) move a0 , s3 move a3 , s2 move a2 , s1 sw v0 , hexvar ( sp ) jal hexvar move a1 , s0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar b hexvar move v0 , zero
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move a0 , a1 sw s1 , hexvar ( sp ) move s2 , a3 sw gp , hexvar ( sp ) move s1 , a2 sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) move s0 , v0 lw v0 , hexvar ( sp ) move a0 , s3 move a3 , s2 move a2 , s1 sw v0 , hexvar ( sp ) jal hexvar move a1 , s0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar b hexvar move v0 , zero
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] shl rdx , num add rax , rdx leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push rbx mov rbx , rdi mov rdi , rsi mov rsi , qword ptr [ rbx + hexvar ] call qword ptr [ rbx + hexvar ] cmp rax , qword ptr [ rbx + hexvar ] jae hexvar shl rax , num add rax , qword ptr [ rbx ] pop rbx ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push rbx mov rbx , rdi mov rdi , rsi mov rsi , qword ptr [ rbx + hexvar ] call qword ptr [ rbx + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jbe hexvar shl rax , num add rax , qword ptr [ rbx ] pop rbx ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rax mov rcx , qword ptr [ rbp - hexvar ] call rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] sub rax , rcx setb dl movzx r8d , dl mov ecx , r8d mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] shl rcx , num add rax , rcx add rsp , hexvar pop rbp ret
push rbx mov rbx , rdi mov rdi , rsi mov rsi , qword ptr [ rbx + hexvar ] call qword ptr [ rbx + hexvar ] cmp rax , qword ptr [ rbx + hexvar ] jb hexvar call hexvar shl rax , num add rax , qword ptr [ rbx ] pop rbx ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub eax , ecx setb cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] cmp edx , hexvar ja hexvar mov eax , dword ptr [ ebx + edx * num - hexvar ] add eax , ebx jmp eax mov esi , esi lea edi , [ edi ]
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , hexvar ja hexvar mov eax , dword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar leave ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , hexvar ja hexvar mov edx , dword ptr [ ebp + num ] shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltiu v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) jr v0 nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu a2 , v0 , - hexvar addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar move t9 , v0 bal - hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] cmp edx , hexvar ja hexvar mov eax , ebx add eax , dword ptr [ ebx + edx * num - hexvar ] jmp eax
cmp edi , hexvar ja hexvar mov edi , edi lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltiu v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) jr v0 nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , hexvar lui v0 , hexvar addiu v0 , v0 , hexvar move t9 , v0 bal - hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] cmp edx , hexvar ja hexvar mov eax , ebx add eax , dword ptr [ ebx + edx * num - hexvar ] jmp eax
cmp edi , hexvar ja hexvar mov edi , edi lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
cmp edi , hexvar ja hexvar mov edi , edi lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rdi mov rdi , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx call hexvar cmp eax , num sete r8b mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , dword ptr [ rcx + hexvar ] and edx , hexvar cmp edx , num setne sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov edi , dword ptr [ rbp - hexvar ] mov rsi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov dword ptr [ rsi ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov edx , hexvar xor edx , hexvar mov esi , ecx xor esi , edx and esi , ecx cmp esi , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov edi , dword ptr [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ eax + num ] cmp dword ptr [ ecx + num ] , num jne hexvar test edx , edx je hexvar test byte ptr [ edx + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , edx mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar lea esi , [ esi ] mov eax , num ret
ldr r1 , [ r0 , hexvar ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r1 , hexvar ] ldr r0 , [ r1 , hexvar ] ldr ip , [ pc , hexvar ] cmp r0 , num beq hexvar b hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r1 , [ r3 , hexvar ] cmp r2 , r1 bne hexvar ldr r1 , [ r3 , hexvar ] cmp r0 , r1 bne hexvar ldr r3 , [ r3 , num ] add r0 , r3 , num cmp r3 , num movlt r3 , r0 asr r0 , r3 , num bx lr ldr r1 , [ r3 , hexvar ] cmp r1 , num beq hexvar ldr r1 , [ r3 , hexvar ] cmp r1 , num bne hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r1 , [ r3 , hexvar ] cmp r2 , r1 beq hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ ip , num ] ! cmp r3 , num bne hexvar mov r0 , num bx lr andeq r1 , ip , r0 , lsr lr andeq r2 , ip , r8 , asr num
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar sub eax , num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] and cl , hexvar shr cl , num movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov edi , dword ptr [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num cmp eax , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , num jmp hexvar push dword ptr [ ebp + num ] call hexvar add esp , num mov ebx , eax push dword ptr [ ebp + num ] call hexvar add esp , num sub esp , num push ebx push eax call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebx mov edx , dword ptr [ esp + num ] call hexvar add ebx , hexvar mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edx + num ] cmp dword ptr [ eax + num ] , num jne hexvar test ecx , ecx je hexvar test byte ptr [ ecx + hexvar ] , hexvar mov eax , num jne hexvar mov eax , dword ptr [ edx + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + hexvar ] lea eax , [ ebx - hexvar ] lea ebx , [ ebx - hexvar ] test ecx , ecx je hexvar jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp edx , dword ptr [ eax + hexvar ] jne hexvar cmp ecx , dword ptr [ eax + hexvar ] jne hexvar mov edx , dword ptr [ eax + num ] lea eax , [ edx + num ] test edx , edx cmovns eax , edx sar eax , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( a0 )
mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar test rsi , rsi je hexvar test byte ptr [ rsi + hexvar ] , hexvar mov eax , num jne hexvar mov rax , qword ptr [ rdi + hexvar ] lea rsi , [ rip + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rax + hexvar ] lea rax , [ rip + hexvar ] test rcx , rcx je hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp edx , dword ptr [ rax + hexvar ] jne hexvar cmp rcx , qword ptr [ rax + hexvar ] jne hexvar mov edx , dword ptr [ rax + num ] lea eax , [ rdx + num ] test edx , edx cmovns eax , edx sar eax , num ret nop dword ptr [ rax ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov edi , dword ptr [ rax + hexvar ] test edi , edi jne hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp edx , dword ptr [ rax + hexvar ] je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar add rsi , num mov rax , qword ptr [ rsi ] test rax , rax jne hexvar mov eax , num ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rbx mov edi , eax call hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ esi ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ esp + num ] jmp hexvar nop nop nop nop
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ esi ] mov esi , dword ptr [ ebx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num call hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
sub esp , hexvar push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ esi ] mov esi , dword ptr [ ebx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num call hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , qword ptr [ rsi + hexvar ] test r12 , r12 jne hexvar mov qword ptr [ rdx ] , num xor ebx , ebx add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ edx + hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , edi mov edi , esi mov ebp , dword ptr [ esp + hexvar ] or edi , ebp jne hexvar mov esi , num test ecx , ecx je hexvar mov dword ptr [ ecx ] , num jmp hexvar mov edi , dword ptr [ edx + hexvar ] mov ebp , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , ebp mov esi , num cmp dword ptr [ esp + hexvar ] , ebp jb hexvar ja hexvar cmp dword ptr [ esp + num ] , edi jb hexvar mov esi , num mov dword ptr [ esp + hexvar ] , ecx mov ebp , edx mov dword ptr [ esp + hexvar ] , eax mov eax , esi test al , al jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , eax or esi , edx je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] cmp ecx , dword ptr [ eax + hexvar ] jb hexvar ja hexvar cmp edx , dword ptr [ eax + num ] jbe hexvar mov edx , ebp mov eax , dword ptr [ esp + hexvar ] call hexvar mov edi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push edi push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov edx , ebp mov eax , dword ptr [ esp + hexvar ] call hexvar mov esi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push esi push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , num mov esi , num mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi mov eax , num cmovne eax , dword ptr [ esp + num ] mov dword ptr [ edi ] , eax mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdx + hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] jbe hexvar movabs rdi , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] jbe hexvar movabs rdi , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor edx , edx div qword ptr [ rcx + hexvar ]
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , qword ptr [ rsi + hexvar ] test r13 , r13 jne hexvar mov ebx , num test rdx , rdx je hexvar mov qword ptr [ rdx ] , num jmp hexvar mov rbp , rdx mov rbx , rsi mov r12 , rdi mov r15 , qword ptr [ rsi + hexvar ] cmp r13 , r15 jb hexvar test r15 , r15 je hexvar cmp r13 , qword ptr [ rdi + hexvar ] ja hexvar mov rax , r13 mov edx , num div r15
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , qword ptr [ rsi + hexvar ] test r12 , r12 jne hexvar mov qword ptr [ rdx ] , num xor ebx , ebx add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , r12 mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , r12 mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rdx + hexvar ] mov edx , num div rbx
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw s3 , hexvar ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw s3 , hexvar ( a1 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov edi , esi mov ebp , dword ptr [ esp + num ] or edi , ebp jne hexvar mov esi , num test ecx , ecx je hexvar mov dword ptr [ ecx ] , num jmp hexvar mov edi , dword ptr [ edx + hexvar ] mov ebp , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , ebp mov esi , num cmp dword ptr [ esp + num ] , ebp jb hexvar ja hexvar cmp dword ptr [ esp ] , edi jb hexvar mov esi , num mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + num ] , edx mov ebp , eax mov eax , esi test al , al jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , eax or esi , edx je hexvar mov eax , dword ptr [ esp ] mov edx , dword ptr [ esp + num ] cmp edx , dword ptr [ ebp + hexvar ] jb hexvar ja hexvar cmp eax , dword ptr [ ebp + num ] jbe hexvar mov edx , dword ptr [ esp + num ] mov eax , ebp call hexvar mov edi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + num ] push edi push eax call hexvar add esp , hexvar mov edi , num mov dword ptr [ esp ] , num jmp hexvar mov edx , dword ptr [ esp + num ] mov eax , ebp call hexvar mov esi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push esi push eax call hexvar add esp , hexvar mov edi , num mov dword ptr [ esp ] , num sub esp , hexvar push edi call hexvar add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov esi , num cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdx + hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] jbe hexvar movabs rdi , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] jbe hexvar movabs rdi , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor edx , edx div qword ptr [ rcx + hexvar ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
test rdi , rdi push rbx je hexvar mov esi , hexvar mov rbx , rdi call hexvar test rax , rax je hexvar lea rdx , [ rax + num ] mov rcx , rdx sub rcx , rbx cmp rcx , num jle hexvar lea rsi , [ rax - num ] mov edi , hexvar mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] jne hexvar mov ecx , num mov rsi , rdx mov edi , hexvar repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] mov rbx , rdx seta sil setb cl cmp sil , cl jne hexvar lea rbx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx pop rbx ret
push { r4 , r5 , r6 , lr } subs r4 , r0 , num beq hexvar mov r1 , hexvar bl hexvar subs r5 , r0 , num beq hexvar add r6 , r5 , num sub r3 , r6 , r4 cmp r3 , num ble hexvar mov r2 , num ldr r1 , [ pc , hexvar ] sub r0 , r5 , num bl hexvar cmp r0 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r6 bl hexvar cmp r0 , num movne r4 , r6 ldreq r3 , [ pc , hexvar ] addeq r4 , r5 , num streq r4 , [ r3 ] ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r4 , [ r2 ] str r4 , [ r3 ] pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push eax push hexvar push num lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar call hexvar sub esp , num push hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] sub edx , eax mov eax , edx cmp eax , num jle hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax push edx call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx nop mov ebx , dword ptr [ ebp - num ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , zero , hexvar jalr t9 move s0 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 addiu s2 , v0 , num subu v0 , s2 , s0 slti v0 , v0 , num bnez v0 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 addiu a0 , s1 , - num bnez v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , s2 bnez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) addiu s0 , s1 , num sw s0 , ( v0 ) lui v0 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) sw s0 , - hexvar ( v0 ) lw v0 , - hexvar ( gp ) sw s0 , ( v0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar lw ra , hexvar ( sp ) move s0 , s2 lw s1 , hexvar ( sp ) lw s2 , hexvar ( sp ) sw s0 , - hexvar ( v0 ) lw v0 , - hexvar ( gp ) sw s0 , ( v0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a0 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , zero , num addiu a0 , a0 , - hexvar jalr t9 lw a3 , ( v0 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push eax push hexvar push num lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar call hexvar sub esp , num push hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] sub edx , eax mov eax , edx cmp eax , num jle hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax push edx call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
test rdi , rdi push rbx je hexvar mov esi , hexvar mov rbx , rdi call hexvar test rax , rax je hexvar lea r8 , [ rax + num ] mov rdx , r8 sub rdx , rbx cmp rdx , num jle hexvar lea rsi , [ rax - num ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , r8 mov rbx , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar lea rbx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx pop rbx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ esi ] , num je hexvar lea edi , [ esi + num ] sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax push edi call hexvar add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r12 push rbx sub rsp , hexvar cmp qword ptr [ rdi ] , num je hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi lea r12 , [ rdi + num ] lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar add rbx , hexvar mov rdi , r12 mov rsi , rbx call hexvar test eax , eax je hexvar mov edx , dword ptr [ rsp + hexvar ] lea rsi , [ rsp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , r12 mov rsi , r15 mov rdx , r14 call hexvar mov ecx , eax mov eax , num test ecx , ecx jne hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s3 , hexvar ( sp ) addiu s3 , sp , hexvar sw s1 , hexvar ( sp ) addiu s1 , a0 , num sw s5 , hexvar ( sp ) move s5 , a2 sw s4 , hexvar ( sp ) addiu a2 , sp , hexvar sw s2 , hexvar ( sp ) move s4 , a1 sw gp , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) move a0 , s1 lw v0 , ( s0 ) move a1 , s3 sw v0 , hexvar ( sp ) jalr t9 nop bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a1 , s2 , hexvar jalr t9 move a0 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea edi , [ esi + num ] lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax push edi call hexvar add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi lea rax , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] lea r12 , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , r12 mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + hexvar ] , rax lea r13 , [ rdi + hexvar ] add rbx , num mov ecx , hexvar jmp hexvar mov ecx , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , r15 mov rdx , r14 call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov qword ptr [ rsp + num ] , rbx mov qword ptr [ rsp + hexvar ] , r12 mov rdi , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] lea rdx , [ rsp + num ] call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar nop dword ptr [ rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar mov ecx , hexvar mov ebp , num jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar mov edx , dword ptr [ rsp + num ] mov rdi , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , r13 call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] lea edx , [ eax + num ] sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax push edx call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] add eax , num sub esp , num push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] add edx , num sub esp , num push eax lea eax , [ esp + hexvar ] push eax push edx call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] add eax , num sub esp , num push dword ptr [ esp + num ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar nop jmp hexvar nop jmp hexvar nop jmp hexvar nop mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi lea r12 , [ rdi + num ] lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar add rbx , hexvar mov rdi , r12 mov rsi , rbx call hexvar test eax , eax je hexvar mov edx , dword ptr [ rsp + hexvar ] lea rsi , [ rsp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , r12 mov rsi , r15 mov rdx , r14 call hexvar mov ecx , eax mov eax , num test ecx , ecx jne hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi lea rdx , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov rax , qword ptr [ rsp + hexvar ] lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rcx , qword ptr [ rsp + hexvar ] lea rcx , [ rdi + num ] mov qword ptr [ rsp + num ] , rcx mov qword ptr [ rsp + hexvar ] , rax mov rdi , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] call hexvar mov dword ptr [ rsp + hexvar ] , eax add rbx , hexvar mov eax , hexvar mov r12d , hexvar jmp hexvar mov eax , hexvar xor ebp , ebp nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r12d jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , rbx call hexvar test eax , eax mov eax , hexvar cmove eax , r12d jmp hexvar mov eax , hexvar mov ebp , num jmp hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , r15 mov rdx , r14 call hexvar test eax , eax mov eax , hexvar cmove eax , r12d jmp hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] call hexvar test eax , eax mov eax , hexvar cmove eax , r12d jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar lw v0 , ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) addiu s2 , a0 , num addiu s3 , sp , hexvar move s5 , a2 addiu a2 , sp , hexvar move s1 , a0 move s4 , a1 move a0 , s2 jalr t9 move a1 , s3 bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a1 , s1 , hexvar jalr t9 move a0 , s2 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , ( a0 )
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bltz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s1 , a0 lw a0 , num ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bltz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s1 , a0 lw a0 , num ( a0 ) jalr t9 move s0 , a1 slt v0 , s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s0 jalr t9 lw a0 , num ( s1 ) beqz v0 , hexvar lw ra , hexvar ( sp ) lw v1 , ( v0 ) addiu v1 , v1 , - num sltiu v1 , v1 , num beqz v1 , hexvar lw s1 , hexvar ( sp ) lw v0 , hexvar ( v0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move v0 , zero lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) jalr t9 addiu a0 , zero , hexvar move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , hexvar b hexvar addiu v0 , zero , hexvar
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bltz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s1 , a0 lw a0 , num ( a0 )
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bltz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s1 , a0 lw a0 , num ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bltz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s1 , a0 lw a0 , num ( a0 ) jalr t9 move s0 , a1 slt v0 , s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s0 jalr t9 lw a0 , num ( s1 ) beqz v0 , hexvar lw ra , hexvar ( sp ) lw v1 , ( v0 ) addiu v1 , v1 , - num sltiu v1 , v1 , num beqz v1 , hexvar lw s1 , hexvar ( sp ) lw v0 , hexvar ( v0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move v0 , zero lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) jalr t9 addiu a0 , zero , hexvar move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , hexvar b hexvar addiu v0 , zero , hexvar
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] test byte ptr [ edx + hexvar ] , num jne hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esi ] , num add esp , num pop ebx pop esi ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar test byte ptr [ rsi + hexvar ] , num jne hexvar call hexvar jmp hexvar call hexvar mov qword ptr [ rbx ] , num pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] test byte ptr [ edx + hexvar ] , num jne hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esi ] , num add esp , num pop ebx pop esi ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar test byte ptr [ rsi + hexvar ] , num jne hexvar call hexvar jmp hexvar call hexvar mov qword ptr [ rbx ] , num pop rbx ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar test byte ptr [ rsi + hexvar ] , num jne hexvar call hexvar jmp hexvar call hexvar mov qword ptr [ rbx ] , num pop rbx ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov r15d , hexvar mov ebp , hexvar jmp hexvar test byte ptr [ r14 + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar cmove eax , r15d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , ebp jmp hexvar mov qword ptr [ rbx ] , num mov eax , hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] test byte ptr [ edx + hexvar ] , num jne hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esi ] , num add esp , num pop ebx pop esi ret
lw v1 , ( a0 ) beqz v1 , hexvar lui gp , hexvar lw v0 , hexvar ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
ldr r3 , [ pc , hexvar ] push { r4 , r5 , r6 , lr } ldr r3 , [ r3 ] mov r5 , r0 cmp r3 , num mov r4 , r1 beq hexvar ldrb r3 , [ r1 ] cmp r3 , num bne hexvar mov r2 , r4 mov r1 , r5 pop { r4 , r5 , r6 , lr } mov r0 , num b hexvar ldr r3 , [ pc , hexvar ] mov r0 , r2 ldr r2 , [ r3 ] bl hexvar subs r6 , r0 , num beq hexvar mov r1 , r5 mov r2 , r6 mov r0 , num bl hexvar mov r0 , r6 pop { r4 , r5 , r6 , lr } b hexvar andeq r1 , sp , r8 , asr r4 andeq r0 , sp , r0 , lsr num
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax ] test al , al je hexvar sub esp , num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar move s0 , a1 lb v0 , ( a1 ) bnez v0 , hexvar move a0 , a2 move a2 , s0 move a1 , s1 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a2 , zero , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 move a2 , v0 move a1 , s1 addiu a0 , zero , num lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax ] test al , al je hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r4 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar mov r0 , r2 ldrb r3 , [ r1 ] cmp r3 , num bne hexvar mov r2 , r4 mov r1 , r5 mov r0 , num bl hexvar pop { r4 , r5 , r6 , pc }
lui v0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar lw v0 , - hexvar ( v0 ) addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lb v0 , ( a1 ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) move a2 , s0 lw s2 , hexvar ( sp ) move a1 , s1 lw s0 , hexvar ( sp ) addiu a0 , zero , num lw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar move a0 , a2 bal hexvar addiu a2 , zero , num lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lw t9 , - hexvar ( gp )
mov eax , dword ptr [ rip + hexvar ] push r12 push rbp mov rbp , rdi push rbx mov rbx , rsi test eax , eax je hexvar cmp byte ptr [ rsi ] , num jne hexvar mov rdx , rbx mov rsi , rbp mov edi , num pop rbx pop rbp pop r12 xor eax , eax jmp hexvar nop mov rdi , rdx mov edx , num call hexvar test rax , rax mov r12 , rax je hexvar mov rdx , rax mov rsi , rbp mov edi , num xor eax , eax call hexvar pop rbx mov rdi , r12 pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] nop word ptr cs : [ rax + rax ]
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r4 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar mov r0 , r2 ldrb r3 , [ r1 ] cmp r3 , num bne hexvar mov r2 , r4 mov r1 , r5 mov r0 , num bl hexvar pop { r4 , r5 , r6 , pc }
lui v0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar lw v0 , hexvar ( v0 ) addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lb v0 , ( a1 ) bnez v0 , hexvar lui v0 , hexvar lw ra , hexvar ( sp ) move a2 , s0 lw s2 , hexvar ( sp ) move a1 , s1 lw s0 , hexvar ( sp ) addiu a0 , zero , num lw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a0 , a2 bal hexvar lw a2 , hexvar ( v0 ) lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar move s0 , a1 lb v0 , ( a1 ) bnez v0 , hexvar move a0 , a2 move a2 , s0 move a1 , s1 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar lw a2 , hexvar ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 move a2 , v0 move a1 , s1 addiu a0 , zero , num lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov esi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov esi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar mov edx , hexvar cmovl edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov esi , num call hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov esi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov esi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov esi , num call hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx sub rsi , rdx mov rdx , rcx sub rdx , num add rsi , rdx sub rcx , rsi mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov esi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov esi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rdi mov qword ptr [ rdx ] , num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] cmp rcx , qword ptr [ rdx ] setl sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov esi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , num mov qword ptr [ rax ] , rcx jmp hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - num ] mov esi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , ( v0 )
push r13 push r12 mov r12 , rsi push rbp push rbx mov esi , num mov r13 , rdx sub rsp , hexvar mov dword ptr [ rdx ] , num mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax je hexvar mov rbx , qword ptr [ rip + hexvar ] mov rbp , rax test rbx , rbx je hexvar cmp rax , qword ptr [ rbx ] jne hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp qword ptr [ rbx ] , rbp je hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar mov edi , hexvar call hexvar test rax , rax mov rbx , rax je hexvar mov qword ptr [ rax ] , rbp mov qword ptr [ rax + num ] , num lea rsi , [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdi , rbp mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , rax call hexvar test rax , rax je hexvar lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov dword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num lea rdi , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rip - hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rcx call rax test eax , eax jne hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rdx mov dword ptr [ r13 ] , num movzx eax , byte ptr [ r12 + hexvar ] and eax , hexvar or eax , hexvar test rdx , rdx mov byte ptr [ r12 + hexvar ] , al jne hexvar xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a1 move s2 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , ( a2 ) addiu a1 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lui v0 , hexvar lw s0 , - hexvar ( v0 ) beqz s0 , hexvar addiu a1 , zero , hexvar lw v0 , ( s0 ) beq s1 , v0 , hexvar move a0 , s1 lw s0 , num ( s0 ) beqz s0 , hexvar addiu a1 , zero , hexvar lw v0 , ( s0 ) bne v0 , s1 , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , num ( s0 ) beqz v0 , hexvar lui v1 , hexvar sw v0 , - hexvar ( v1 ) addiu v0 , zero , num sw v0 , ( s2 ) lhu v0 , hexvar ( s3 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a1 addiu a1 , zero , num sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) move s2 , a2 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , ( s1 ) sw zero , ( a2 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov sb , r2 mov r2 , num ldr r6 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r6 ] mov r7 , r1 str r2 , [ sb ] mov r1 , num str r3 , [ sp , hexvar ] bl hexvar subs r5 , r0 , num beq hexvar ldr r8 , [ pc , hexvar ] ldr r4 , [ r8 , num ] cmp r4 , num beq hexvar ldr r3 , [ r4 ] cmp r5 , r3 bne hexvar b hexvar ldr r3 , [ r4 ] cmp r3 , r5 beq hexvar ldr r4 , [ r4 , num ] cmp r4 , num bne hexvar mov r0 , hexvar bl hexvar subs r4 , r0 , num beq hexvar mov sl , num ldr r3 , [ r8 , num ] str r5 , [ r4 ] str r3 , [ r4 , num ] mov r0 , r5 str sl , [ r4 , num ] ldr r1 , [ pc , hexvar ] str r4 , [ r8 , num ] bl hexvar subs r3 , r0 , num beq hexvar mov r2 , num mov r1 , num mov r0 , hexvar str r2 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] str r0 , [ sp , hexvar ] str sl , [ sp , hexvar ] str sl , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] add r0 , sp , hexvar blx r3 cmp r0 , sl bne hexvar mov r3 , num ldr r2 , [ r8 ] str r2 , [ r4 , num ] str r3 , [ sb ] ldrb r3 , [ r7 , hexvar ] cmp r2 , sl bic r3 , r3 , hexvar orr r3 , r3 , hexvar strb r3 , [ r7 , hexvar ] bne hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , edx mov dword ptr [ esp + hexvar ] , ecx mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx mov dword ptr [ ecx ] , num push num push eax call hexvar add esp , hexvar test eax , eax je hexvar mov edi , eax mov esi , dword ptr [ ebx + hexvar ] test esi , esi je hexvar cmp eax , dword ptr [ esi ] je hexvar mov esi , dword ptr [ esi + num ] test esi , esi je hexvar cmp dword ptr [ esi ] , edi jne hexvar sub esp , hexvar push edi call hexvar mov edx , dword ptr [ esi + num ] add esp , hexvar mov eax , num test edx , edx je hexvar mov dword ptr [ ebx + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num movzx eax , byte ptr [ ebp + hexvar ] and eax , hexvar or eax , hexvar mov byte ptr [ ebp + hexvar ] , al mov eax , num cmp dword ptr [ ebx + hexvar ] , num je hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , ebp sub esp , num lea eax , [ esp + hexvar ] push eax push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar sub esp , num lea edx , [ esp + hexvar ] push edx lea edx , [ esp + hexvar ] push edx call eax add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax je hexvar movzx eax , byte ptr [ ebp + hexvar ] and eax , hexvar or eax , hexvar mov byte ptr [ ebp + hexvar ] , al mov eax , num jmp hexvar call hexvar sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov eax , num mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , lr } sub sp , sp , hexvar mov r4 , r1 mov r5 , r2 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ r2 ] mov r1 , num bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] bl hexvar subs r2 , r0 , num beq hexvar mov r3 , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r0 , sp , hexvar blx r2 cmp r0 , num movne r0 , num bne hexvar mov r3 , num str r3 , [ r5 ] ldrb r3 , [ r4 , hexvar ] bic r3 , r3 , hexvar orr r3 , r3 , hexvar strb r3 , [ r4 , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num moveq r0 , num beq hexvar mov r3 , num str r3 , [ sp , num ] str r4 , [ sp , hexvar ] add r1 , sp , num mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] add r1 , sp , num add r0 , sp , num blx r3 ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldrb r3 , [ r4 , hexvar ] bic r3 , r3 , hexvar orr r3 , r3 , hexvar strb r3 , [ r4 , hexvar ] mov r0 , num b hexvar bl hexvar mov r1 , r0 ldr r0 , [ pc , hexvar ] bl hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s2 , hexvar ( sp ) move s2 , a1 addiu a1 , zero , num sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) move s0 , a2 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , ( s1 ) sw zero , ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov edi , dword ptr [ rbp - hexvar ] push rdi mov r9 , r8 mov r8d , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , r14d movabs r15 , hexvar mov qword ptr [ r8 ] , r15 mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx ] mov r8 , qword ptr [ r8 ] mov r9 , qword ptr [ rsi ] mov r12d , dword ptr [ rdi ] sub rsp , hexvar mov rdi , rax mov rsi , rcx mov rcx , r8 mov r8d , hexvar mov dword ptr [ rsp ] , r12d call hexvar add rsp , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui a3 , hexvar sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov edi , dword ptr [ rbp - hexvar ] push rdi mov r9 , r8 mov r8d , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
push r15 push r14 mov r14 , rdi push r13 push r12 lea r12d , [ r8 + num ] push rbp push rbx mov rdi , rsi and r12d , hexvar mov r15 , rdx mov ebx , r8d sub rsp , hexvar movsxd rsi , dword ptr [ rdx ] movsxd r12 , r12d add r12 , hexvar mov qword ptr [ rsp + num ] , rcx add rsi , r12 call hexvar test rax , rax mov r13 , rax je hexvar movsxd rbp , dword ptr [ r15 ] mov edi , num mov rax , rbp add rbp , r13 add r12d , eax mov rax , qword ptr [ r14 + num ] mov rsi , rbp mov dword ptr [ r15 ] , r12d call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] mov r12 , rdi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] lea rsi , [ rbp + num ] mov edi , hexvar call qword ptr [ rax + hexvar ] lea rcx , [ rbp + hexvar ] mov rsi , qword ptr [ rsp + num ] xor edx , edx mov eax , hexvar mov word ptr [ rbp + hexvar ] , dx mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rcx mov word ptr [ rbp + hexvar ] , ax mov rdx , r12 call hexvar test bl , num lea rdi , [ rax + r12 ] je hexvar add ebx , num add rdi , num mov byte ptr [ rdi - num ] , num test bl , num jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ecx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , ecx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] lea edi , [ esi + num ] mov eax , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , edx and edi , hexvar add edi , hexvar add eax , edi push eax push dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar test eax , eax mov ecx , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num mov eax , dword ptr [ edx ] lea ebx , [ ecx + eax ] add edi , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ edx ] , edi push ebx push num push num call dword ptr [ eax + hexvar ] lea eax , [ ebx + num ] add esp , hexvar mov edi , dword ptr [ ebp + num ] push eax mov eax , esi cdq push edx push esi call dword ptr [ edi + hexvar ] lea edx , [ ebx + num ] add esp , hexvar mov eax , dword ptr [ ebp + num ] lea edi , [ ebx + hexvar ] push edx push num push hexvar call dword ptr [ eax + hexvar ] add esp , hexvar xor edx , edx mov eax , hexvar mov dword ptr [ ebx + hexvar ] , hexvar mov word ptr [ ebx + hexvar ] , ax mov word ptr [ ebx + hexvar ] , dx push esi push dword ptr [ esp + hexvar ] push edi mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test esi , num mov ecx , dword ptr [ esp + hexvar ] je hexvar nop mov byte ptr [ edi + esi ] , num add esi , num test esi , num jne hexvar add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , lr } bl hexvar mov r2 , num ldr r4 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r4 mov r2 , r0 mov r0 , num bl hexvar andeq sl , r2 , r4 , asr num
push rbx mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rbx , rax call hexvar mov esi , dword ptr [ rax ] xor edi , edi mov rdx , rbx xor eax , eax call hexvar mov edi , num call hexvar nop dword ptr [ rax ] nop word ptr cs : [ rax + rax ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar lw s0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero addiu a0 , zero , num lw gp , hexvar ( sp ) move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a1 , s0
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ esp ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx call hexvar nop dword ptr [ eax + eax ]
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push num push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar mov dword ptr [ esp ] , num call hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , hexvar lw s0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , s0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp )
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov rbp , rdx mov rbx , rsi mov r15 , rdi mov edx , num call hexvar test eax , eax jle hexvar test rbp , rbp cmovne rbx , rbp mov r14d , num mov rdi , r15 mov rsi , rbx mov edx , num call hexvar test eax , eax jle hexvar mov rdi , r15 call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov r14d , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar mov rdx , rbx xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov eax , r14d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov rbp , rdx mov rbx , rsi mov r15 , rdi mov edx , num call hexvar test eax , eax jle hexvar test rbp , rbp cmovne rbx , rbp mov r14d , num mov rdi , r15 mov rsi , rbx mov edx , num call hexvar test eax , eax jle hexvar mov rdi , r15 call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov r14d , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar mov rdx , rbx xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov eax , r14d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a1 , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 move s1 , a2 addiu a2 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) blez v0 , hexvar movz s1 , s0 , s1 addiu a2 , zero , num move a1 , s1 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) blez v0 , hexvar move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 b hexvar addiu s0 , zero , num lw s1 , - hexvar ( gp ) move a2 , s0 lui a1 , hexvar addiu a1 , a1 , hexvar lw a0 , ( s1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , ( s1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s0 , zero lw s0 , - hexvar ( gp ) move a2 , s1 lui a1 , hexvar addiu a1 , a1 , hexvar lw a0 , ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s0 , zero lui a1 , hexvar addiu a1 , a1 , hexvar lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , s0 addiu s0 , zero , num move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov rbp , rdx mov rbx , rsi mov r15 , rdi mov edx , num call hexvar test eax , eax jle hexvar test rbp , rbp cmovne rbx , rbp mov r14d , num mov rdi , r15 mov rsi , rbx mov edx , num call hexvar test eax , eax jle hexvar mov rdi , r15 call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov r14d , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar mov rdx , rbx xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov eax , r14d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov rbp , rdx mov rbx , rsi mov r15 , rdi mov edx , num call hexvar test eax , eax jle hexvar test rbp , rbp cmovne rbx , rbp mov r14d , num mov rdi , r15 mov rsi , rbx mov edx , num call hexvar test eax , eax jle hexvar mov rdi , r15 call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov r14d , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar mov rdx , rbx xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov eax , r14d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s0 , a2 addiu a2 , zero , num move s1 , a1 jalr t9 move s2 , a0 blez v0 , hexvar lw gp , hexvar ( sp ) movz s0 , s1 , s0 addiu a2 , zero , num move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 move a1 , s0 blez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) addiu s0 , zero , num lw s2 , hexvar ( sp ) move v0 , s0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , a1 , hexvar jalr t9 lw a0 , ( v0 ) move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw s0 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a2 , s1 addiu a1 , a1 , hexvar jalr t9 lw a0 , ( s0 ) lw gp , hexvar ( sp ) lw a0 , ( s0 ) lw t9 , - hexvar ( gp )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar mov r2 , num ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ sp , num ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] str r3 , [ sp , num ] mov r2 , num ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ sp , num ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , num b hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , num push num push esi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar test edi , edi cmove edi , esi sub esp , num push num push edi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , hexvar mov esi , num pop ebx mov eax , esi pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , num push num push esi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar test edi , edi cmove edi , esi sub esp , num push num push edi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , hexvar mov esi , num pop ebx mov eax , esi pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , num push num push esi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar test edi , edi cmove edi , esi sub esp , num push num push edi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , hexvar mov esi , num pop ebx mov eax , esi pop esi pop edi pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] and eax , hexvar test rax , rax jne hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] and eax , hexvar cmp eax , num sbb eax , eax and eax , hexvar sub eax , hexvar ret
mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar sub eax , hexvar ret
mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] and eax , hexvar cmp eax , num sbb eax , eax and eax , hexvar sub eax , hexvar ret
mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + num ] and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar sub eax , hexvar ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] and eax , hexvar test rax , rax jne hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rdx mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + num ] and rcx , hexvar cmp rcx , num sete sil mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + num ] and rdi , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmove edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] and eax , hexvar cmp eax , num sbb eax , eax and eax , hexvar sub eax , hexvar ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] and eax , hexvar test rax , rax jne hexvar mov eax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx ] mov rsi , qword ptr [ rbp - hexvar ] call rax cmp eax , num mov eax , hexvar mov edx , hexvar cmovne edx , eax mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r12 push rbp push rbx mov r12 , rdi mov rbp , rsi mov rbx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar mov rsi , rbp call r12
push edi push esi push ebx call hexvar add eax , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebx ] test eax , eax je hexvar sub esp , num push esi push eax call edi add esp , hexvar test eax , eax jne hexvar add ebx , num mov eax , dword ptr [ ebx ] test eax , eax jne hexvar jmp hexvar mov eax , dword ptr [ ebx ] pop ebx pop esi pop edi ret
call hexvar add eax , hexvar push edi push esi push ebx mov ebx , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebx ] test eax , eax jne hexvar jmp hexvar nop lea esi , [ esi ] add ebx , num mov eax , dword ptr [ ebx ] test eax , eax je hexvar sub esp , num push esi push eax call edi add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebx ] pop ebx pop esi pop edi ret
push r12 push rbp push rbx mov r12 , rdi mov rbp , rsi mov rbx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar mov rsi , rbp call r12
call hexvar add eax , hexvar push edi push esi push ebx mov ebx , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebx ] test eax , eax jne hexvar jmp hexvar nop lea esi , [ esi ] add ebx , num mov eax , dword ptr [ ebx ] test eax , eax je hexvar sub esp , num push esi push eax call edi add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebx ] pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx ] mov rsi , qword ptr [ rbp - hexvar ] call rax test eax , eax setne dl movzx eax , dl mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
call hexvar add eax , hexvar push edi push esi push ebx mov ebx , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebx ] test eax , eax jne hexvar jmp hexvar nop lea esi , [ esi ] add ebx , num mov eax , dword ptr [ ebx ] test eax , eax je hexvar sub esp , num push esi push eax call edi add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebx ] pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 lw s0 , - hexvar ( v0 ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw a0 , ( s0 ) beqz a0 , hexvar move s1 , a1 b hexvar move t9 , s2 lw a0 , ( s0 ) beqz a0 , hexvar lw ra , hexvar ( sp ) move t9 , s2 jalr t9 move a1 , s1 beqz v0 , hexvar addiu s0 , s0 , num addiu s0 , s0 , - num lw ra , hexvar ( sp ) lw v0 , ( s0 ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r5 , r1 ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] ldr r0 , [ r4 ] cmp r0 , num beq hexvar mov r1 , r5 blx r6 cmp r0 , num bne hexvar ldr r0 , [ r4 , num ] ! cmp r0 , num bne hexvar pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r5 , r0 mov r0 , r1 bl hexvar adds r3 , r4 , num movne r3 , num cmp r0 , num movne r3 , num cmp r3 , num bne hexvar mov r2 , r4 mov r1 , r5 pop { r4 , r5 , r6 , lr } b hexvar bl hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v0 , v1 beqz v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu a0 , v1 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) subu v0 , v1 , v0 move a2 , v0 move a1 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rcx call hexvar leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a1 lw gp , hexvar ( sp ) beqz v0 , hexvar move v1 , v0 lw t9 , - hexvar ( gp ) move a2 , s0 move a1 , s1 jalr t9 move a0 , v1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s0 , hexvar lw t9 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) bal hexvar nop
push rbp push rbx mov rbp , rdi mov rdi , rsi mov rbx , rsi sub rsp , num call hexvar test rax , rax jne hexvar test rbx , rbx jne hexvar add rsp , num mov rdx , rbx mov rsi , rbp pop rbx pop rbp mov rdi , rax jmp hexvar call hexvar nop word ptr [ rax + rax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi jne hexvar sub esp , num push esi push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r5 , r0 mov r0 , r1 bl hexvar adds r3 , r4 , num movne r3 , num cmp r0 , num movne r3 , num cmp r3 , num bne hexvar mov r2 , r4 mov r1 , r5 pop { r4 , r5 , r6 , lr } b hexvar bl hexvar
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) jal hexvar move s0 , a1 move a2 , s0 lw gp , hexvar ( sp ) move a1 , s1 lw ra , hexvar ( sp ) move a0 , v0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
cmp qword ptr [ rdi ] , num je hexvar push r14 xor r14d , r14d push r13 push r12 push rbp mov rbp , rdi push rbx mov rbx , rdi jmp hexvar nop dword ptr [ rax ] mov rdi , r13 add rbp , num call hexvar xor esi , esi xor edi , edi mov r8 , r12 mov rcx , rax mov rdx , r13 call hexvar cmp qword ptr [ rbp ] , num lea r14 , [ r14 + rax + num ] je hexvar mov r12 , qword ptr [ rip + hexvar ] mov r13 , qword ptr [ rbp ] test r12 , r12 jne hexvar xor edi , edi call hexvar mov esi , num mov rdi , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov r12 , qword ptr [ rip + hexvar ] jmp hexvar nop mov rdi , r14 call hexvar mov r13 , rax mov r12 , rax jmp hexvar mov rdi , r14 add rbx , num call hexvar mov r8 , rbp mov rcx , rax mov rdx , r14 mov rsi , - num mov rdi , r12 call hexvar add rax , r12 cmp qword ptr [ rbx ] , num je hexvar lea r12 , [ rax + num ] mov byte ptr [ rax ] , hexvar mov rbp , qword ptr [ rip + hexvar ] mov r14 , qword ptr [ rbx ] test rbp , rbp jne hexvar xor edi , edi call hexvar mov esi , num mov rdi , rax mov qword ptr [ rip + hexvar ] , rax call hexvar mov rbp , qword ptr [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] mov byte ptr [ rax ] , num mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edi , esi xor ebp , ebp sub esp , hexvar add edi , num push eax call hexvar lea ebp , [ eax + ebp + num ] mov eax , dword ptr [ edi ] add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov ebx , eax mov edx , eax jmp hexvar nop lea esi , [ esi ] lea edx , [ eax + num ] mov byte ptr [ eax ] , hexvar sub esp , num push dword ptr [ esi ] add esi , num push edx call hexvar mov edx , dword ptr [ esi ] add esp , hexvar test edx , edx jne hexvar mov byte ptr [ eax ] , num add esp , hexvar mov eax , ebx pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , ( a0 ) beqz a0 , hexvar move s2 , zero move s1 , s0 jal hexvar addiu s1 , s1 , num addiu v0 , v0 , num lw gp , hexvar ( sp ) lw a0 , ( s1 ) bnez a0 , hexvar addu s2 , s2 , v0 lw t9 , - hexvar ( gp ) move a0 , s2 bal hexvar addiu s1 , zero , hexvar move s2 , v0 b hexvar move a0 , v0 sb s1 , ( v0 ) lw a1 , ( s0 ) jal hexvar addiu s0 , s0 , num lw v1 , ( s0 ) bnez v1 , hexvar addiu a0 , v0 , num sb zero , ( v0 ) move v0 , s2 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a0 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) addiu a0 , a0 , hexvar lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) b hexvar addiu sp , sp , hexvar nop
push r12 push rbp push rbx cmp qword ptr [ rdi ] , num je hexvar mov rbx , rdi mov rbp , rdi mov r12d , num mov rdi , qword ptr [ rbp ] call hexvar lea r12 , [ r12 + rax + num ] add rbp , num cmp qword ptr [ rbp ] , num jne hexvar mov rdi , r12 call hexvar mov rbp , rax mov rdi , rax mov rsi , qword ptr [ rbx ] call hexvar add rbx , num cmp qword ptr [ rbx ] , num je hexvar lea rdi , [ rax + num ] mov byte ptr [ rax ] , hexvar jmp hexvar mov byte ptr [ rax ] , num mov rax , rbp jmp hexvar mov edi , hexvar call hexvar pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) beqz v0 , hexvar nop sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) addiu v0 , v0 , num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) beqz v0 , hexvar nop b hexvar nop nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v1 , v0 , num sw v1 , hexvar ( fp ) addiu v1 , zero , hexvar sb v1 , ( v0 ) b hexvar nop nop lw v0 , hexvar ( fp ) sb zero , ( v0 ) lw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , num je hexvar mov edi , esi mov ebp , num sub esp , hexvar push dword ptr [ edi ] call hexvar lea ebp , [ eax + ebp + num ] add edi , num add esp , hexvar cmp dword ptr [ edi ] , num jne hexvar sub esp , hexvar push ebp call hexvar mov ebx , eax add esp , hexvar mov edx , eax sub esp , num push dword ptr [ esi ] push edx call hexvar add esi , num add esp , hexvar cmp dword ptr [ esi ] , num je hexvar lea edx , [ eax + num ] mov byte ptr [ eax ] , hexvar jmp hexvar mov byte ptr [ eax ] , num mov eax , ebx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , num je hexvar mov edi , esi mov ebp , num sub esp , hexvar push dword ptr [ edi ] call hexvar lea ebp , [ eax + ebp + num ] add edi , num add esp , hexvar cmp dword ptr [ edi ] , num jne hexvar sub esp , hexvar push ebp call hexvar mov ebx , eax add esp , hexvar mov edx , eax sub esp , num push dword ptr [ esi ] push edx call hexvar add esi , num add esp , hexvar cmp dword ptr [ esi ] , num je hexvar lea edx , [ eax + num ] mov byte ptr [ eax ] , hexvar jmp hexvar mov byte ptr [ eax ] , num mov eax , ebx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edi , esi xor ebp , ebp sub esp , hexvar add edi , num push eax call hexvar lea ebp , [ eax + ebp + num ] mov eax , dword ptr [ edi ] add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov ebx , eax mov edx , eax jmp hexvar nop lea esi , [ esi ] lea edx , [ eax + num ] mov byte ptr [ eax ] , hexvar sub esp , num push dword ptr [ esi ] add esi , num push edx call hexvar mov edx , dword ptr [ esi ] add esp , hexvar test edx , edx jne hexvar mov byte ptr [ eax ] , num add esp , hexvar mov eax , ebx pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar add eax , num add dword ptr [ ebp - hexvar ] , eax add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar jmp hexvar nop sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] sub esp , num push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ eax ] , hexvar jmp hexvar nop mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov eax , dword ptr [ ebp - hexvar ] jmp hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
sub rsp , num call hexvar test rax , rax je hexvar mov rdi , rax call hexvar add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov eax , num leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx sub esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov esp , ebp pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar mov esi , eax push hexvar call hexvar add esp , hexvar mov dword ptr [ eax ] , esi mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push { r4 , lr } bl hexvar subs r4 , r0 , num beq hexvar mov r0 , hexvar bl hexvar mov r2 , num mov r3 , num str r4 , [ r0 ] str r2 , [ r0 , hexvar ] str r3 , [ r0 , hexvar ] str r2 , [ r0 , num ] str r3 , [ r0 , hexvar ] pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a0 , zero , hexvar bal hexvar move s0 , v0 move a1 , zero move a0 , zero sw s0 , ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rax , qword ptr [ rdi ] movsxd r13 , dword ptr [ rax + num ] cmp r13 , rcx ja hexvar mov r12 , rcx mov r14 , rdx mov r15 , rsi mov rbx , rdi sub r12 , r13 xor ebp , ebp nop dword ptr [ rax + rax ] lea rdi , [ r14 + rbp ] lea rsi , [ r15 + rbp ] mov rdx , qword ptr [ rbx + hexvar ] add rdx , num mov ecx , dword ptr [ rbx + hexvar ] call hexvar add rbp , r13 cmp rbp , r12 jbe hexvar mov eax , num add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rax , qword ptr [ rdi ] movsxd r13 , dword ptr [ rax + num ] cmp r13 , rcx ja hexvar mov r12 , rcx mov r14 , rdx mov r15 , rsi mov rbx , rdi sub r12 , r13 xor ebp , ebp nop dword ptr [ rax + rax ] lea rdi , [ r14 + rbp ] lea rsi , [ r15 + rbp ] mov rdx , qword ptr [ rbx + hexvar ] add rdx , num mov ecx , dword ptr [ rbx + hexvar ] call hexvar add rbp , r13 cmp rbp , r12 jbe hexvar mov eax , num add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lw v0 , ( a0 ) addiu sp , sp , - hexvar lui gp , hexvar sw s4 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s4 , num ( v0 ) sltu v0 , a3 , s4 bnez v0 , hexvar subu s5 , a3 , s4 move s3 , a2 move s2 , a0 move s1 , a1 move s0 , a2 lw a2 , hexvar ( s2 ) move a0 , s0 lw t9 , - hexvar ( gp ) addu s0 , s0 , s4 lw a3 , num ( s2 ) move a1 , s1 addiu a2 , a2 , num jalr t9 addu s1 , s1 , s4 subu v0 , s0 , s3 sltu v0 , s5 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu v0 , zero , num lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] jae hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] lea esi , [ edx + num ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] add ecx , edx mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] add edx , edi push eax push esi push ecx push edx call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] cmp eax , dword ptr [ esp + hexvar ] jbe hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx ] mov ebp , dword ptr [ ecx + num ] cmp ebp , eax ja hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub eax , ebp mov dword ptr [ esp + hexvar ] , ebp mov dword ptr [ esp + num ] , eax mov ebp , edx mov esi , esi lea edi , [ edi ] mov eax , dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] add eax , num push eax push edi push esi call hexvar mov eax , dword ptr [ esp + hexvar ] add esi , eax add edi , eax mov eax , esi sub eax , dword ptr [ esp + hexvar ] add esp , hexvar cmp dword ptr [ esp + num ] , eax jae hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] jae hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] lea esi , [ edx + num ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] add ecx , edx mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] add edx , edi push eax push esi push ecx push edx call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] cmp eax , dword ptr [ esp + hexvar ] jbe hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] jae hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] lea esi , [ edx + num ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] add ecx , edx mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] add edx , edi push eax push esi push ecx push edx call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] cmp eax , dword ptr [ esp + hexvar ] jbe hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ebp ] mov ecx , dword ptr [ edx + num ] mov dword ptr [ esp + num ] , ecx cmp ecx , eax ja hexvar sub eax , ecx mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov esi , eax push dword ptr [ ebp + num ] mov eax , dword ptr [ ebp + hexvar ] add eax , num push eax push edi push esi call hexvar mov eax , dword ptr [ esp + hexvar ] add esi , eax add edi , eax mov eax , esi sub eax , dword ptr [ esp + hexvar ] add esp , hexvar cmp dword ptr [ esp + num ] , eax jae hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] jae hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] lea esi , [ edx + num ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] add ecx , edx mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] add edx , edi push eax push esi push ecx push edx call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] cmp eax , dword ptr [ esp + hexvar ] jbe hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a1 , hexvar addiu a2 , zero , num lw v0 , hexvar ( a1 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi + hexvar ] , num je hexvar mov r15 , rsp mov rdi , r15 mov esi , hexvar mov rdx , rbx xor ecx , ecx call hexvar mov ebp , eax cmp eax , hexvar jl hexvar mov r13d , ebp add r13d , num mov esi , hexvar mov edi , r13d mov edx , hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov esi , r13d mov rdx , rbx xor ecx , ecx call hexvar mov rdi , r14 mov rsi , r12 mov edx , ebp call hexvar cmp r12 , r15 je hexvar mov rdi , r12 call hexvar jmp hexvar mov esi , hexvar mov rdi , r14 mov edx , num call hexvar mov ebp , eax mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi + hexvar ] , num je hexvar mov r15 , rsp mov rdi , r15 mov esi , hexvar mov rdx , rbx xor ecx , ecx call hexvar mov ebp , eax cmp eax , hexvar jl hexvar mov r13d , ebp add r13d , num mov esi , hexvar mov edi , r13d mov edx , hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov esi , r13d mov rdx , rbx xor ecx , ecx call hexvar mov rdi , r14 mov rsi , r12 mov edx , ebp call hexvar cmp r12 , r15 je hexvar mov rdi , r12 call hexvar jmp hexvar mov esi , hexvar mov rdi , r14 mov edx , num call hexvar mov ebp , eax mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi + hexvar ] , num je hexvar mov r15 , rsp mov rdi , r15 mov esi , hexvar mov rdx , rbx xor ecx , ecx call hexvar mov ebp , eax cmp eax , hexvar jl hexvar mov r13d , ebp add r13d , num mov esi , hexvar mov edi , r13d mov edx , hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov esi , r13d mov rdx , rbx xor ecx , ecx call hexvar mov rdi , r14 mov rsi , r12 mov edx , ebp call hexvar cmp r12 , r15 je hexvar mov rdi , r12 call hexvar jmp hexvar mov esi , hexvar mov rdi , r14 mov edx , num call hexvar mov ebp , eax mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi + hexvar ] , num je hexvar mov r15 , rsp mov rdi , r15 mov esi , hexvar mov rdx , rbx xor ecx , ecx call hexvar mov ebp , eax cmp eax , hexvar jl hexvar mov r13d , ebp add r13d , num mov esi , hexvar mov edi , r13d mov edx , hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov esi , r13d mov rdx , rbx xor ecx , ecx call hexvar mov rdi , r14 mov rsi , r12 mov edx , ebp call hexvar cmp r12 , r15 je hexvar mov rdi , r12 call hexvar jmp hexvar mov esi , hexvar mov rdi , r14 mov edx , num call hexvar mov ebp , eax mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a0 sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) beqz a1 , hexvar nop lw v0 , hexvar ( a1 ) beqz v0 , hexvar move s0 , a1 lw t9 , - hexvar ( gp ) addiu s4 , sp , hexvar move a3 , zero addiu a1 , zero , hexvar move a2 , s0 jalr t9 move a0 , s4 move s1 , v0 slti v0 , v0 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) bgtz s1 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar bal - hexvar move a0 , s3 lw gp , hexvar ( sp ) b hexvar move s1 , v0 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar bal - hexvar move a0 , s3 lw gp , hexvar ( sp ) move s1 , v0 lw a0 , hexvar ( sp ) move v0 , s1 lw v1 , ( s2 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a2 , s1 move a1 , s4 bal - hexvar move a0 , s3 b hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi + hexvar ] , num je hexvar mov r15 , rsp mov rdi , r15 mov esi , hexvar mov rdx , rbx xor ecx , ecx call hexvar mov ebp , eax cmp eax , hexvar jl hexvar mov r13d , ebp add r13d , num mov esi , hexvar mov edi , r13d mov edx , hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov esi , r13d mov rdx , rbx xor ecx , ecx call hexvar mov rdi , r14 mov rsi , r12 mov edx , ebp call hexvar cmp r12 , r15 je hexvar mov rdi , r12 call hexvar jmp hexvar mov esi , hexvar mov rdi , r14 mov edx , num call hexvar mov ebp , eax mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi + hexvar ] , num je hexvar mov r15 , rsp mov rdi , r15 mov esi , hexvar mov rdx , rbx xor ecx , ecx call hexvar mov ebp , eax cmp eax , hexvar jl hexvar mov r13d , ebp add r13d , num mov esi , hexvar mov edi , r13d mov edx , hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov esi , r13d mov rdx , rbx xor ecx , ecx call hexvar mov rdi , r14 mov rsi , r12 mov edx , ebp call hexvar cmp r12 , r15 je hexvar mov rdi , r12 call hexvar jmp hexvar mov esi , hexvar mov rdi , r14 mov edx , num call hexvar mov ebp , eax mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi + hexvar ] , num je hexvar mov r15 , rsp mov rdi , r15 mov esi , hexvar mov rdx , rbx xor ecx , ecx call hexvar mov ebp , eax cmp eax , hexvar jl hexvar mov r13d , ebp add r13d , num mov esi , hexvar mov edi , r13d mov edx , hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov esi , r13d mov rdx , rbx xor ecx , ecx call hexvar mov rdi , r14 mov rsi , r12 mov edx , ebp call hexvar cmp r12 , r15 je hexvar mov rdi , r12 call hexvar jmp hexvar mov esi , hexvar mov rdi , r14 mov edx , num call hexvar mov ebp , eax mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp cmp qword ptr [ num ] , num jne hexvar movabs rdi , num call hexvar movabs rdi , num call hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar cmp qword ptr [ num ] , num sete al mov byte ptr [ rbp - num ] , al mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar movabs rdi , num call hexvar movabs rdi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp cmp qword ptr [ hexvar ] , num jne hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar call hexvar pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi movabs rdi , hexvar call hexvar pop rbp ret
push rbp mov rbp , rsp cmp qword ptr [ num ] , num jne hexvar movabs rdi , num call hexvar movabs rdi , num call hexvar pop rbp ret
push rbp mov rbp , rsp cmp qword ptr [ hexvar ] , num jne hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar call hexvar pop rbp ret
push rbp mov rbp , rsp cmp qword ptr [ num ] , num jne hexvar movabs rdi , num call hexvar movabs rdi , num call hexvar pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov edi , num call hexvar mov rdi , qword ptr [ rip ] jmp rdi movabs rdi , num call hexvar pop rbp ret
push rbp mov rbp , rsp cmp qword ptr [ hexvar ] , num jne hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar call hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , num sete cl mov byte ptr [ rbp - num ] , cl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar movabs rdi , num call hexvar jmp hexvar movabs rdi , num call hexvar add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a2 sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move s3 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s2 , hexvar ( sp ) lw gp , hexvar ( sp ) move a0 , v0 move s0 , v0 lw t9 , - hexvar ( gp ) bal hexvar subu s0 , s0 , s4 move a0 , s3 lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 addu s0 , s0 , v0 lw gp , hexvar ( sp ) beqz s1 , hexvar move s5 , v0 addu v1 , s4 , s0 addiu v0 , zero , hexvar lb v1 , - num ( v1 ) beq v1 , v0 , hexvar nop lb s1 , ( s3 ) xori s1 , s1 , hexvar movz v0 , zero , s1 sltu s2 , zero , s1 b hexvar move s1 , v0 lb s1 , ( s3 ) addiu v0 , zero , hexvar xori s1 , s1 , hexvar movn v0 , zero , s1 sltiu s2 , s1 , num move s1 , v0 addiu a0 , s5 , num lw t9 , - hexvar ( gp ) addu a0 , a0 , s0 jalr t9 addu a0 , a0 , s2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s7 , v0 lw t9 , - hexvar ( gp ) move a0 , v0 move a2 , s0 jalr t9 move a1 , s4 lw gp , hexvar ( sp ) addu a0 , v0 , s2 beqz s6 , hexvar sb s1 , ( v0 ) sw a0 , ( s6 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) subu v0 , v1 , v0 move v1 , v0 lw v0 , hexvar ( fp ) addu v0 , v0 , v1 sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) sb zero , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , - num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 lb v1 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s5 , a0 move s3 , a1 move s4 , a2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 subu s0 , s0 , s5 addu s0 , s0 , v0 move a0 , s3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s1 , hexvar move s6 , v0 addu v0 , s5 , s0 lb v1 , - num ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lb s1 , ( s3 ) xori s1 , s1 , hexvar movz v0 , zero , s1 b hexvar move s1 , v0 lb s1 , ( s3 ) xori s1 , s1 , hexvar addiu v0 , zero , hexvar movn v0 , zero , s1 move s1 , v0 sltu s7 , zero , s1 addiu a0 , s6 , num addu a0 , a0 , s0 addu a0 , a0 , s7 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 move a2 , s0 move a1 , s5 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sb s1 , ( v0 ) beqz s4 , hexvar addu a0 , v0 , s7 sw a0 , ( s4 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s5 , a0 move s3 , a1 move s4 , a2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 subu s0 , s0 , s5 addu s0 , s0 , v0 move a0 , s3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s1 , hexvar move s6 , v0 addu v0 , s5 , s0 lb v1 , - num ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lb s1 , ( s3 ) xori s1 , s1 , hexvar movz v0 , zero , s1 b hexvar move s1 , v0 lb s1 , ( s3 ) xori s1 , s1 , hexvar addiu v0 , zero , hexvar movn v0 , zero , s1 move s1 , v0 sltu s7 , zero , s1 addiu a0 , s6 , num addu a0 , a0 , s0 addu a0 , a0 , s7 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 move a2 , s0 move a1 , s5 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sb s1 , ( v0 ) beqz s4 , hexvar addu a0 , v0 , s7 sw a0 , ( s4 ) move a2 , s6 move a1 , s3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sb zero , ( v0 ) move v0 , s2 lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , zero
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a2 sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move s3 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s2 , hexvar ( sp ) lw gp , hexvar ( sp ) move a0 , v0 move s0 , v0 lw t9 , - hexvar ( gp ) bal hexvar subu s0 , s0 , s4 move a0 , s3 lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 addu s0 , s0 , v0 lw gp , hexvar ( sp ) beqz s1 , hexvar move s5 , v0 addu v1 , s4 , s0 addiu v0 , zero , hexvar lb v1 , - num ( v1 ) beq v1 , v0 , hexvar nop lb s1 , ( s3 ) xori s1 , s1 , hexvar movz v0 , zero , s1 sltu s2 , zero , s1 b hexvar move s1 , v0 lb s1 , ( s3 ) addiu v0 , zero , hexvar xori s1 , s1 , hexvar movn v0 , zero , s1 sltiu s2 , s1 , num move s1 , v0 addiu a0 , s5 , num lw t9 , - hexvar ( gp ) addu a0 , a0 , s0 jalr t9 addu a0 , a0 , s2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s7 , v0 lw t9 , - hexvar ( gp ) move a0 , v0 move a2 , s0 jalr t9 move a1 , s4 lw gp , hexvar ( sp ) addu a0 , v0 , s2 beqz s6 , hexvar sb s1 , ( v0 ) sw a0 , ( s6 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s5 , a0 move s3 , a1 move s4 , a2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 subu s0 , s0 , s5 addu s0 , s0 , v0 move a0 , s3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s1 , hexvar move s6 , v0 addu v0 , s5 , s0 lb v1 , - num ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lb s1 , ( s3 ) xori s1 , s1 , hexvar movz v0 , zero , s1 b hexvar move s1 , v0 lb s1 , ( s3 ) xori s1 , s1 , hexvar addiu v0 , zero , hexvar movn v0 , zero , s1 move s1 , v0 sltu s7 , zero , s1 addiu a0 , s6 , num addu a0 , a0 , s0 addu a0 , a0 , s7 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 move a2 , s0 move a1 , s5 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sb s1 , ( v0 ) beqz s4 , hexvar addu a0 , v0 , s7 sw a0 , ( s4 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax mov dword ptr [ esp ] , eax mov edi , ebp call hexvar sub edi , dword ptr [ esp + hexvar ] add esp , hexvar mov esi , eax add edi , eax test eax , eax je hexvar xor eax , eax cmp byte ptr [ ebp + esi - num ] , hexvar setne al mov esi , eax mov eax , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar mov byte ptr [ esp + hexvar ] , al je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov ecx , eax mov dword ptr [ esp + hexvar ] , eax lea eax , [ esi + edi + num ] add eax , ecx mov dword ptr [ esp ] , eax call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar sub esp , num push edi push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov byte ptr [ eax ] , hexvar add eax , esi test edx , edx je hexvar xor edx , edx cmp byte ptr [ esp + hexvar ] , hexvar mov esi , dword ptr [ esp + hexvar ] mov ecx , eax sete dl sub ecx , edx mov dword ptr [ esi ] , ecx sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov byte ptr [ eax ] , num add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) subu v0 , v1 , v0 move v1 , v0 lw v0 , hexvar ( fp ) addu v0 , v0 , v1 sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) sb zero , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , - num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 lb v1 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a2 sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move s3 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s2 , hexvar ( sp ) lw gp , hexvar ( sp ) move a0 , v0 move s0 , v0 lw t9 , - hexvar ( gp ) bal hexvar subu s0 , s0 , s4 move a0 , s3 lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 addu s0 , s0 , v0 lw gp , hexvar ( sp ) beqz s1 , hexvar move s5 , v0 addu v1 , s4 , s0 addiu v0 , zero , hexvar lb v1 , - num ( v1 ) beq v1 , v0 , hexvar nop lb s1 , ( s3 ) xori s1 , s1 , hexvar movz v0 , zero , s1 sltu s2 , zero , s1 b hexvar move s1 , v0 lb s1 , ( s3 ) addiu v0 , zero , hexvar xori s1 , s1 , hexvar movn v0 , zero , s1 sltiu s2 , s1 , num move s1 , v0 addiu a0 , s5 , num lw t9 , - hexvar ( gp ) addu a0 , a0 , s0 jalr t9 addu a0 , a0 , s2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s7 , v0 lw t9 , - hexvar ( gp ) move a0 , v0 move a2 , s0 jalr t9 move a1 , s4 lw gp , hexvar ( sp ) addu a0 , v0 , s2 beqz s6 , hexvar sb s1 , ( v0 ) sw a0 , ( s6 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s5 , a0 move s3 , a1 move s4 , a2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 subu s0 , s0 , s5 addu s0 , s0 , v0 move a0 , s3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s1 , hexvar move s6 , v0 addu v0 , s5 , s0 lb v1 , - num ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lb s1 , ( s3 ) xori s1 , s1 , hexvar movz v0 , zero , s1 b hexvar move s1 , v0 lb s1 , ( s3 ) xori s1 , s1 , hexvar addiu v0 , zero , hexvar movn v0 , zero , s1 move s1 , v0 sltu s7 , zero , s1 addiu a0 , s6 , num addu a0 , a0 , s0 addu a0 , a0 , s7 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 move a2 , s0 move a1 , s5 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sb s1 , ( v0 ) beqz s4 , hexvar addu a0 , v0 , s7 sw a0 , ( s4 ) move a2 , s6 move a1 , s3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sb zero , ( v0 ) move v0 , s2 lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , zero
ldr r3 , [ r0 , num ] ldr r2 , [ r3 , num ] cmp r2 , num beq hexvar push { r4 , lr } ldr r4 , [ r3 ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num ldrne r3 , [ pc , hexvar ] movne r2 , num strne r2 , [ r3 ] mvnne r0 , num pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v1 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rax + hexvar ] shr ecx , num xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , num xor edx , hexvar or ecx , esi or edx , hexvar xor ecx , hexvar and ecx , edx mov dword ptr [ rbp - num ] , ecx jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov edx , num call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov edx , num call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rax + hexvar ] shr ecx , num xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , num xor edx , hexvar or ecx , esi or edx , hexvar xor ecx , hexvar and ecx , edx mov dword ptr [ rbp - num ] , ecx jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov edx , num call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov edx , num call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] movzx eax , byte ptr [ eax + hexvar ] and eax , num movzx eax , al jmp hexvar push dword ptr [ ebp + num ] call hexvar add esp , num mov dword ptr [ ebp - hexvar ] , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov eax , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num je hexvar mov r8 , qword ptr [ rax ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num mov eax , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num movsx eax , al test eax , eax jne hexvar ret mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num ret
mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num je hexvar mov r8 , qword ptr [ rax ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num mov eax , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , hexvar lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num movsx eax , al test eax , eax jne hexvar ret mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] bl hexvar mov r2 , r0 mov r3 , hexvar str r3 , [ r2 ] mvn r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar mov esp , ebp pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] bl hexvar mov r2 , r0 mov r3 , hexvar str r3 , [ r2 ] mvn r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov ebx , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , num pop rbp ret
mov ecx , dword ptr [ esp + num ] xor eax , eax movzx edx , byte ptr [ ecx + hexvar ] and edx , num cmp dl , num je hexvar ret lea esi , [ esi ] mov edx , dword ptr [ ecx + num ] mov edx , dword ptr [ edx + num ] cmp edx , num je hexvar cmp edx , num jne hexvar mov eax , dword ptr [ ecx + hexvar ] mov eax , dword ptr [ eax + hexvar ] ret
ldrb r3 , [ r0 , hexvar ] and r3 , r3 , num cmp r3 , num beq hexvar mov r0 , num bx lr ldr r3 , [ r0 , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar cmp r3 , num bne hexvar ldr r3 , [ r0 , hexvar ] ldr r0 , [ r3 , hexvar ] bx lr ldr r3 , [ r0 , hexvar ] ldr r0 , [ r3 , hexvar ] bx lr
movzx edx , byte ptr [ rdi + hexvar ] xor eax , eax and edx , num cmp dl , num je hexvar ret mov rdx , qword ptr [ rdi + num ] mov edx , dword ptr [ rdx + num ] cmp edx , num je hexvar cmp edx , num jne hexvar mov rax , qword ptr [ rdi + hexvar ] mov eax , dword ptr [ rax + hexvar ] ret
movzx edx , byte ptr [ rdi + hexvar ] xor eax , eax and edx , num cmp dl , num je hexvar ret mov rdx , qword ptr [ rdi + num ] mov edx , dword ptr [ rdx + num ] cmp edx , num je hexvar cmp edx , num jne hexvar mov rax , qword ptr [ rdi + hexvar ] mov eax , dword ptr [ rax + hexvar ] ret
movzx edx , byte ptr [ rdi + hexvar ] and edx , num mov eax , num cmp dl , num je hexvar ret mov rax , qword ptr [ rdi + num ] mov edx , dword ptr [ rax + num ] cmp edx , num je hexvar mov eax , num cmp edx , num jne hexvar mov rax , qword ptr [ rdi + hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rdi + hexvar ] mov eax , dword ptr [ rax + hexvar ] ret
movzx edx , byte ptr [ rdi + hexvar ] and edx , num mov eax , num cmp dl , num je hexvar ret mov rax , qword ptr [ rdi + num ] mov edx , dword ptr [ rax + num ] cmp edx , num je hexvar mov eax , num cmp edx , num jne hexvar mov rax , qword ptr [ rdi + hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rdi + hexvar ] mov eax , dword ptr [ rax + hexvar ] ret
mov ecx , dword ptr [ esp + num ] xor eax , eax movzx edx , byte ptr [ ecx + hexvar ] and edx , num cmp dl , num je hexvar ret lea esi , [ esi ] mov edx , dword ptr [ ecx + num ] mov edx , dword ptr [ edx + num ] cmp edx , num je hexvar cmp edx , num jne hexvar mov eax , dword ptr [ ecx + hexvar ] mov eax , dword ptr [ eax + hexvar ] ret
lw v0 , hexvar ( a0 ) lui a1 , hexvar lui v1 , hexvar and v0 , v0 , a1 beq v0 , v1 , hexvar addiu v1 , zero , num jr ra move v0 , zero lw v0 , num ( a0 ) lw v0 , num ( v0 ) beq v0 , v1 , hexvar addiu v1 , zero , num bne v0 , v1 , hexvar nop lw v0 , hexvar ( a0 ) jr ra lw v0 , hexvar ( v0 ) lw v0 , hexvar ( a0 ) jr ra lw v0 , hexvar ( v0 )
movzx edx , byte ptr [ rdi + hexvar ] xor eax , eax and edx , num cmp dl , num je hexvar ret mov rdx , qword ptr [ rdi + num ] mov edx , dword ptr [ rdx + num ] cmp edx , num je hexvar cmp edx , num jne hexvar mov rax , qword ptr [ rdi + hexvar ] mov eax , dword ptr [ rax + hexvar ] ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , a1 lui a1 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) move a2 , a0 sw zero , hexvar ( sp ) addiu a1 , a1 , hexvar sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) bal hexvar sw zero , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] and eax , hexvar mov ecx , hexvar sub ecx , eax add ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax ] , num je hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] shr eax , num mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] add ecx , num cmp eax , ecx ja hexvar call hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] and rax , hexvar add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num cmp qword ptr [ rbp - hexvar ] , rax ja hexvar call hexvar nop mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] and eax , hexvar mov ecx , hexvar sub ecx , eax add ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax ] , num je hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] shr eax , num mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] add ecx , num cmp eax , ecx ja hexvar call hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r7 , r1 mov r5 , r0 mov r4 , r2 add r6 , r1 , num b hexvar lsr r4 , r4 , num cmp r6 , r4 bhs hexvar bic r4 , r4 , hexvar add r4 , r4 , hexvar mov r0 , r4 bl hexvar cmp r0 , num str r0 , [ r5 ] beq hexvar mov r3 , num str r7 , [ r5 , hexvar ] str r4 , [ r5 , hexvar ] str r3 , [ r5 , num ] str r3 , [ r5 , hexvar ] str r3 , [ r5 , num ] strb r3 , [ r5 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov ecx , eax and ecx , hexvar mov edx , ecx neg rdx lea rax , [ rax + rdx + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax setne sil movzx ecx , sil mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , num sub rax , rcx setbe dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push r13 push r12 mov r13 , rsi push rbp push rbx mov rbp , rdi lea r12 , [ rsi + num ] sub rsp , num jmp hexvar nop word ptr cs : [ rax + rax ] shr rbx , num cmp rbx , r12 mov rdx , rbx jbe hexvar and rdx , hexvar mov rbx , rdx add rbx , hexvar mov rdi , rbx call hexvar test rax , rax mov qword ptr [ rbp ] , rax je hexvar mov qword ptr [ rbp + hexvar ] , r13 mov qword ptr [ rbp + hexvar ] , rbx mov qword ptr [ rbp + hexvar ] , num mov qword ptr [ rbp + hexvar ] , num mov qword ptr [ rbp + num ] , num mov byte ptr [ rbp + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] and eax , hexvar mov ecx , hexvar sub ecx , eax add ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax ] , num je hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] shr eax , num mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] add ecx , num cmp eax , ecx ja hexvar call hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - hexvar and v0 , v1 , v0 addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] and rax , hexvar add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num cmp qword ptr [ rbp - hexvar ] , rax ja hexvar call hexvar nop mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop leave ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r7 , r1 mov r5 , r0 mov r4 , r2 add r6 , r1 , num b hexvar lsr r4 , r4 , num cmp r6 , r4 bhs hexvar bic r4 , r4 , hexvar add r4 , r4 , hexvar mov r0 , r4 bl hexvar cmp r0 , num str r0 , [ r5 ] beq hexvar mov r3 , num str r7 , [ r5 , hexvar ] str r4 , [ r5 , hexvar ] str r3 , [ r5 , num ] str r3 , [ r5 , hexvar ] str r3 , [ r5 , num ] strb r3 , [ r5 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar leave ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar leave ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar mov esp , ebp pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - hexvar ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s6 , hexvar ( sp ) lui s6 , hexvar sw s5 , hexvar ( sp ) lui s5 , hexvar sw s4 , hexvar ( sp ) lui s4 , hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw s0 , hexvar ( sp ) addiu s4 , s4 , - hexvar sw ra , hexvar ( sp ) addiu s5 , s5 , - hexvar sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) jal hexvar addiu s6 , s6 , - hexvar lui v1 , hexvar move s0 , v0 sw v1 , hexvar ( sp ) lui v1 , hexvar sw v1 , hexvar ( sp ) lui v1 , hexvar sw v1 , hexvar ( sp ) lui v1 , hexvar sw v1 , hexvar ( sp ) lui v1 , hexvar b hexvar sw v1 , hexvar ( sp ) jal hexvar move a0 , s5 beqz v0 , hexvar addiu s1 , zero , num jal hexvar move a0 , s3 bnez s3 , hexvar move s2 , v0 move s1 , zero jal hexvar move a0 , s0 jal hexvar move a0 , s2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , hexvar move s0 , v0 sw zero , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - hexvar ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - hexvar ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - hexvar ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s6 , hexvar ( sp ) lui s6 , hexvar lw v0 , - hexvar ( gp ) sw fp , hexvar ( sp ) sw s5 , hexvar ( sp ) lui s5 , hexvar sw v0 , hexvar ( sp ) sw s4 , hexvar ( sp ) lui s4 , hexvar sw s3 , hexvar ( sp ) lui s3 , hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) addiu s3 , s3 , hexvar sw gp , hexvar ( sp ) lui s1 , hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) jal hexvar nop addiu v1 , s6 , hexvar lw gp , hexvar ( sp ) move fp , v0 sw v1 , hexvar ( sp ) lui v1 , hexvar sw v1 , hexvar ( sp ) addiu v1 , s5 , hexvar b hexvar sw v1 , hexvar ( sp ) move s0 , zero lw v1 , ( fp ) addiu v0 , zero , num beq v1 , v0 , hexvar lw t9 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , fp addiu v0 , zero , num lw v1 , ( s5 ) beq v1 , v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s5 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , hexvar lw gp , hexvar ( sp ) move fp , v0 sw zero , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a0 sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) sb zero , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop sw zero , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lbu v0 , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - hexvar ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov byte ptr [ esp + hexvar ] , al movzx eax , al mov dword ptr [ esp + hexvar ] , eax call hexvar mov esi , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea eax , [ ebx - hexvar ] call hexvar test al , al mov dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] xor ebp , ebp call hexvar cmp byte ptr [ esp + hexvar ] , num mov edi , eax jne hexvar mov eax , esi call hexvar mov eax , edi call hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar mov esi , eax mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , ebp mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] call hexvar test al , al je hexvar mov dword ptr [ esp + hexvar ] , num jmp hexvar nop lea esi , [ esi ] mov eax , esi call hexvar mov eax , edi call hexvar mov ebp , dword ptr [ esi + num ] xor edx , edx cmp byte ptr [ ebp ] , hexvar sete dl add edx , ebp movsx eax , byte ptr [ edx ] jmp hexvar lea esi , [ esi ] add edx , num movsx eax , byte ptr [ edx ] test al , al je hexvar sub eax , hexvar cmp eax , num jbe hexvar mov edx , dword ptr [ edi + num ] mov dword ptr [ esp + hexvar ] , edx call hexvar sub esp , num mov dword ptr [ eax ] , num mov edx , dword ptr [ esp + hexvar ] push edx push ebp call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] cmp ecx , num ja hexvar mov edx , dword ptr [ ebx + ecx * num - hexvar ] add edx , ebx jmp edx lea esi , [ esi ]
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - hexvar ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push num push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar mov dword ptr [ esp ] , num call hexvar
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
push rbx mov edx , num mov esi , hexvar mov edi , num call hexvar mov rbx , rax call hexvar mov rdx , rbx mov esi , dword ptr [ rax ] mov edi , num mov eax , num call hexvar mov edi , num call hexvar
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
push rbx mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rbx , rax call hexvar mov esi , dword ptr [ rax ] xor edi , edi mov rdx , rbx xor eax , eax call hexvar mov edi , num call hexvar nop dword ptr [ rax ] nop word ptr cs : [ rax + rax ]
push { r4 , lr } bl hexvar mov r2 , num ldr r4 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r4 mov r2 , r0 mov r0 , num bl hexvar andeq sl , r2 , r4 , asr num
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx xor edx , edx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] push edx push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push dword ptr [ eax + num ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lw v0 , num ( v0 ) lw a0 , hexvar ( fp ) move a3 , a0 move a2 , zero lw t0 , - hexvar ( gp ) move a1 , v1 move a0 , v0 move t9 , t0 bal hexvar nop lw gp , hexvar ( fp ) move v0 , v1 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi call hexvar add esp , hexvar pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a3 , a1 lw a1 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , num push edx push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push dword ptr [ eax + num ] call hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push r13 push r12 push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num mov rax , qword ptr [ rsi + hexvar ] cmp rax , hexvar je hexvar cmp rax , hexvar je hexvar cmp rax , hexvar je hexvar cmp rax , hexvar je hexvar cmp rax , hexvar je hexvar cmp rax , hexvar mov r12d , num je hexvar add rsp , num mov eax , r12d pop rbx pop rbp pop r12 pop r13 ret
lui gp , hexvar lw v0 , num ( a1 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v1 , zero , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) beq v0 , v1 , hexvar sw gp , hexvar ( sp ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar addiu v1 , zero , hexvar beq v0 , v1 , hexvar addiu v1 , zero , hexvar beq v0 , v1 , hexvar addiu v1 , zero , num lw ra , hexvar ( sp ) move v0 , v1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a2 , num ( a1 ) lw v1 , hexvar ( a1 ) lw v0 , hexvar ( a1 ) lui a1 , hexvar addiu a1 , a1 , - hexvar sw v1 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) move v1 , v0 lw s2 , hexvar ( sp ) move v0 , v1 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , num ( a1 ) sltiu v0 , v0 , hexvar bnez v0 , hexvar lw ra , hexvar ( sp ) lw v0 , num ( a0 )
lui gp , hexvar lw v0 , num ( a1 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v1 , zero , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) beq v0 , v1 , hexvar sw gp , hexvar ( sp ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar addiu v1 , zero , hexvar beq v0 , v1 , hexvar addiu v1 , zero , hexvar beq v0 , v1 , hexvar addiu v1 , zero , num lw ra , hexvar ( sp ) move v0 , v1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a2 , num ( a1 ) lw v1 , hexvar ( a1 ) lw v0 , hexvar ( a1 ) lui a1 , hexvar addiu a1 , a1 , hexvar sw v1 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) move v1 , v0 lw s2 , hexvar ( sp ) move v0 , v1 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , num ( a1 ) sltiu v0 , v0 , hexvar bnez v0 , hexvar lw ra , hexvar ( sp ) lw v0 , num ( a0 ) lw a0 , hexvar ( a1 ) lw t9 , hexvar ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + num ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar mov ebp , num je hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rbp , rdi mov rbx , rsi mov rdx , qword ptr [ rsi + hexvar ] cmp rdx , hexvar je hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar je hexvar mov eax , num cmp rdx , hexvar je hexvar pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , r7 , lr } ldr r3 , [ r1 , num ] sub sp , sp , hexvar cmp r3 , hexvar mov r4 , r1 mov r5 , r0 beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar movne r0 , num beq hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , num ( v0 )
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r4 , r1 ldr r3 , [ r1 , num ] cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi + num ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar mov eax , num cmp edx , hexvar je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi + num ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar mov eax , num cmp edx , hexvar je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbx mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax test eax , eax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ rbx ] movsxd rsi , dword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx ] , xmm0 mov qword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] ldr r0 , [ sp , num ] blx r3 mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] mov r1 , r3 mov r0 , r2 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r2 , hexvar mov r1 , num ldr r0 , [ sp , num ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push esi call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ esi ] sub esp , num push dword ptr [ edx + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar lea edi , [ esi + num ] mov dword ptr [ esi ] , num mov dword ptr [ esi + hexvar ] , num xor eax , eax and edi , hexvar sub esi , edi lea ecx , [ esi + hexvar ] shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov eax , num pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push esi call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ esi ] sub esp , num push dword ptr [ edx + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar lea edi , [ esi + num ] mov dword ptr [ esi ] , num mov dword ptr [ esi + hexvar ] , num xor eax , eax and edi , hexvar sub esi , edi lea ecx , [ esi + hexvar ] shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov eax , num pop ebx pop esi pop edi ret
push rbx mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax test eax , eax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ rbx ] movsxd rsi , dword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx ] , xmm0 mov qword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push esi call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ esi ] sub esp , num push dword ptr [ edx + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar lea edi , [ esi + num ] mov dword ptr [ esi ] , num mov dword ptr [ esi + hexvar ] , num xor eax , eax and edi , hexvar sub esi , edi lea ecx , [ esi + hexvar ] shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov eax , num pop ebx pop esi pop edi ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , num push hexvar push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , num push hexvar push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
ldr r3 , [ r0 , hexvar ] cmn r3 , num beq hexvar ldrb r3 , [ r0 , hexvar ] push { r4 , r5 , r6 , r7 , r8 , lr } lsr r3 , r3 , num and r3 , r3 , num cmp r3 , num mov r6 , r1 mov r4 , r0 ldr r7 , [ r0 , num ] bls hexvar mov r1 , hexvar mov r0 , r7 bl hexvar cmp r0 , num beq hexvar sub r8 , r0 , r7 add r0 , r8 , num bl hexvar subs r5 , r0 , num beq hexvar mov r1 , r7 mov r2 , r8 bl hexvar mov r3 , num mov r0 , r5 strb r3 , [ r5 , r8 ] bl hexvar mov r3 , r0 ldr r2 , [ r6 ] mov r0 , r5 add r1 , r2 , num str r1 , [ r6 ] str r3 , [ r2 ] str r3 , [ r4 , hexvar ] bl hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
mov eax , num cmp qword ptr [ rdi + hexvar ] , - num je hexvar push r14 push r13 push r12 push rbp push rbx mov rbp , rsi mov rbx , rdi mov r12 , qword ptr [ rdi + num ] movzx eax , byte ptr [ rdi + hexvar ] shr al , num and eax , num cmp al , num jbe hexvar mov esi , hexvar mov rdi , r12 call hexvar test rax , rax je hexvar sub rax , r12 mov r13 , rax lea rdi , [ rax + num ] call hexvar mov r14 , rax test rax , rax je hexvar mov rdx , r13 mov rsi , r12 mov rdi , rax call hexvar mov byte ptr [ r14 + r13 ] , num mov rdi , r14 call hexvar mov rdx , qword ptr [ rbp ] lea rcx , [ rdx + num ] mov qword ptr [ rbp ] , rcx mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rdi , r14 call hexvar mov eax , num jmp hexvar mov dword ptr [ rbp + num ] , num mov eax , num jmp hexvar mov rdi , r12 call hexvar mov rdx , qword ptr [ rbp ] lea rcx , [ rdx + num ] mov qword ptr [ rbp ] , rcx mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
ldr r3 , [ r0 , hexvar ] cmn r3 , num beq hexvar push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r1 mov r4 , r0 ldr r6 , [ r0 , num ] ldrb r3 , [ r0 , hexvar ] lsr r3 , r3 , num and r3 , r3 , num cmp r3 , num bls hexvar mov r1 , hexvar mov r0 , r6 bl hexvar cmp r0 , num beq hexvar sub r7 , r0 , r6 add r0 , r7 , num bl hexvar subs r8 , r0 , num beq hexvar mov r2 , r7 mov r1 , r6 mov r0 , r8 bl hexvar mov r3 , num strb r3 , [ r8 , r7 ] mov r0 , r8 bl hexvar ldr r3 , [ r5 ] add r2 , r3 , num str r2 , [ r5 ] str r0 , [ r3 ] str r0 , [ r4 , hexvar ] mov r0 , r8 bl hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi mov ebp , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + hexvar ] , - num je hexvar movzx eax , byte ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] shr al , num and eax , num cmp al , num jbe hexvar sub esp , num push hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar sub eax , edi sub esp , num mov dword ptr [ esp + hexvar ] , eax add eax , num cdq push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push eax mov dword ptr [ esp + hexvar ] , eax call hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ edx + eax ] , num mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp ] , edx call hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ ecx ] lea edi , [ ecx + num ] mov dword ptr [ edx ] , edi mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esp ] , edx call hexvar add esp , hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , num cmp dword ptr [ esi + hexvar ] , - num je hexvar mov edi , dword ptr [ esi + num ] movzx eax , byte ptr [ esi + hexvar ] shr al , num and eax , num cmp al , num jbe hexvar sub esp , num push hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar sub eax , edi mov dword ptr [ esp + hexvar ] , eax sub esp , num add eax , num cdq push edx push eax call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push eax call hexvar mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ ebp + eax ] , num mov dword ptr [ esp ] , ebp call hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] lea ecx , [ edx + num ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ edi ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esp ] , ebp call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , num mov eax , num jmp hexvar sub esp , hexvar push edi call hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ecx ] lea ecx , [ edx + num ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ edi ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
mov eax , num cmp qword ptr [ rdi + hexvar ] , - num je hexvar push r14 push r13 push r12 push rbp push rbx mov rbp , rsi mov rbx , rdi mov r12 , qword ptr [ rdi + num ] movzx eax , byte ptr [ rdi + hexvar ] shr al , num and eax , num cmp al , num jbe hexvar mov esi , hexvar mov rdi , r12 call hexvar test rax , rax je hexvar sub rax , r12 mov r13 , rax lea rdi , [ rax + num ] call hexvar mov r14 , rax test rax , rax je hexvar mov rdx , r13 mov rsi , r12 mov rdi , rax call hexvar mov byte ptr [ r14 + r13 ] , num mov rdi , r14 call hexvar mov rdx , qword ptr [ rbp ] lea rcx , [ rdx + num ] mov qword ptr [ rbp ] , rcx mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rdi , r14 call hexvar mov eax , num jmp hexvar mov dword ptr [ rbp + num ] , num mov eax , num jmp hexvar mov rdi , r12 call hexvar mov rdx , qword ptr [ rbp ] lea rcx , [ rdx + num ] mov qword ptr [ rbp ] , rcx mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r15 push r14 push r13 push r12 mov r12d , num push rbp push rbx sub rsp , num cmp qword ptr [ rdi + hexvar ] , - num je hexvar movzx eax , byte ptr [ rdi + hexvar ] mov rbp , rsi mov rbx , rdi mov r13 , qword ptr [ rdi + num ] shr al , num and eax , num cmp al , num jbe hexvar mov esi , hexvar mov rdi , r13 call hexvar test rax , rax je hexvar sub rax , r13 lea rdi , [ rax + num ] mov r15 , rax call hexvar test rax , rax mov r14 , rax je hexvar mov rdx , r15 mov rsi , r13 mov rdi , rax call hexvar mov rdi , r14 mov byte ptr [ r14 + r15 ] , num call hexvar mov rdx , qword ptr [ rbp ] mov rdi , r14 lea rcx , [ rdx + num ] mov qword ptr [ rbp ] , rcx mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + hexvar ] , rax call hexvar add rsp , num mov eax , r12d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 } ldrb r4 , [ r0 , num ] ldrb r2 , [ r0 , num ] lsl r2 , r2 , hexvar orr r2 , r2 , r4 , lsl num ldrb r4 , [ r0 ] orr r2 , r2 , r4 ldrb r0 , [ r0 , num ] orr r0 , r2 , r0 , lsl num pop { r4 , r5 } bx lr
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi ] mov edi , eax mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , num or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
lbu v0 , num ( a0 ) sll v1 , v0 , num lbu a2 , num ( a0 ) srl a1 , v0 , hexvar sll v0 , a2 , hexvar or v1 , v1 , v0 lbu v0 , ( a0 ) or v1 , v1 , v0 lbu v0 , num ( a0 ) sll v0 , v0 , hexvar sltu a1 , zero , a1 or v1 , v1 , v0 lbu v0 , num ( a0 ) or a1 , a1 , v0 lbu v0 , num ( a0 ) sll v0 , v0 , num or a1 , a1 , v0 lbu v0 , num ( a0 ) sll v0 , v0 , hexvar or a1 , a1 , v0 lbu v0 , num ( a0 ) sll v0 , v0 , hexvar jr ra or v0 , a1 , v0
push rbp mov rbp , rsp push rbx mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi ] mov edi , eax mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , num or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar mov rdx , rdi and rdx , rcx xor rdi , rcx or rdx , rdi mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar mov rdi , rdx xor rdi , hexvar mov rsi , rcx xor rsi , hexvar movabs r8 , hexvar mov r9 , - num mov r10 , r9 xor r10 , r8 mov r11 , rdi and r11 , r8 and rdx , r10 mov rbx , rsi and rbx , r8 and rcx , r10 or r11 , rdx or rbx , rcx xor r11 , rbx or rdi , rsi xor rdi , hexvar or r10 , r8 and rdi , r10 or r11 , rdi mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar mov rdx , r11 and rdx , rcx xor r11 , rcx or rdx , r11 mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar mov rsi , rdx xor rsi , hexvar mov rdi , rcx xor rdi , hexvar movabs r8 , hexvar xor r9 , r8 mov r10 , rsi and r10 , r8 and rdx , r9 mov r11 , rdi and r11 , r8 and rcx , r9 or r10 , rdx or r11 , rcx xor r10 , r11 or rsi , rdi xor rsi , hexvar or r9 , r8 and rsi , r9 or r10 , rsi mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar mov rdx , r10 and rdx , rcx xor r10 , rcx or rdx , r10 mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi ] mov edi , eax mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , num or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi ] mov edi , eax mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , num or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi ] mov edi , eax mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , num or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar or rdi , rcx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push { r4 , r5 } ldrb r4 , [ r0 , num ] ldrb r2 , [ r0 , num ] lsl r2 , r2 , hexvar orr r2 , r2 , r4 , lsl num ldrb r4 , [ r0 ] orr r2 , r2 , r4 ldrb r0 , [ r0 , num ] orr r0 , r2 , r0 , lsl num pop { r4 , r5 } bx lr
push ebp push edi push esi sub esp , num mov ecx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ ecx + num ] mov edx , num shld edx , eax , num shl eax , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx movzx esi , byte ptr [ ecx + num ] mov edi , num shld edi , esi , hexvar shl esi , hexvar mov eax , esi mov edx , edi mov edi , dword ptr [ esp ] mov ebp , dword ptr [ esp + num ] mov esi , edi or esi , eax or edx , ebp movzx eax , byte ptr [ ecx ] or eax , esi movzx esi , byte ptr [ ecx + num ] mov edi , num shld edi , esi , hexvar shl esi , hexvar or eax , esi or edx , edi movzx esi , byte ptr [ ecx + num ] or edx , esi movzx esi , byte ptr [ ecx + num ] shl esi , num or edx , esi movzx esi , byte ptr [ ecx + num ] shl esi , hexvar or edx , esi movzx ecx , byte ptr [ ecx + num ] shl ecx , hexvar or edx , ecx add esp , num pop esi pop edi pop ebp ret
push { r4 , r5 } ldrb r4 , [ r0 , num ] ldrb r2 , [ r0 , num ] lsl r2 , r2 , hexvar orr r2 , r2 , r4 , lsl num ldrb r4 , [ r0 ] orr r2 , r2 , r4 ldrb r0 , [ r0 , num ] orr r0 , r2 , r0 , lsl num pop { r4 , r5 } bx lr
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] push hexvar push esi call hexvar pop edx pop ecx mov ebp , eax mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax ] push hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar lea edx , [ ebx - hexvar ] test ebp , ebp cmove ebp , edx sub esp , num push eax push ebp call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push edi push esi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a2 , - hexvar ( gp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r12 push rbp mov r12 , rsi push rbx mov rbp , qword ptr [ rdi ] mov esi , hexvar mov rdi , rbp call hexvar mov r12 , qword ptr [ r12 ] mov esi , hexvar mov rbx , rax mov rdi , r12 call hexvar test rax , rax je hexvar test rbx , rbx mov edi , hexvar mov rsi , rax cmovne rdi , rbx call hexvar test eax , eax je hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] push hexvar push esi call hexvar pop edx pop ecx mov ebp , eax mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax ] push hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar lea edx , [ ebx - hexvar ] test ebp , ebp cmove ebp , edx sub esp , num push eax push ebp call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push edi push esi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp mov r12 , rsi push rbx mov rbp , qword ptr [ rdi ] mov esi , hexvar mov rdi , rbp call hexvar mov r12 , qword ptr [ r12 ] mov esi , hexvar mov rbx , rax mov rdi , r12 call hexvar test rax , rax je hexvar test rbx , rbx mov edi , hexvar mov rsi , rax cmovne rdi , rbx call hexvar test eax , eax je hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num mov eax , dword ptr [ eax + hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a1 lw s1 , ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a1 lw s1 , ( a0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax ] push hexvar push edi call hexvar add esp , num mov esi , eax mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ eax ] push hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar test esi , esi lea edx , [ ebx - hexvar ] cmove esi , edx sub esp , num push eax push esi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push ebp push edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rax ] , num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - num ] mov cl , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , cl mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , cl mov al , byte ptr [ rbp - hexvar ] cmp al , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] imul rcx , rax , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov sil , byte ptr [ rdx ] mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov edx , ecx mov rsi , qword ptr [ rbp - hexvar ] add rsi , rdx mov rax , rsi xor ecx , ecx mov edx , ecx div qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rdx mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - num ] , cl cmp cl , num je hexvar imul eax , dword ptr [ ebp - num ] , hexvar movzx ecx , byte ptr [ ebp - num ] add eax , ecx xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - num ] , cl cmp cl , num je hexvar imul eax , dword ptr [ ebp - num ] , hexvar movzx ecx , byte ptr [ ebp - num ] add eax , ecx xor edx , edx div dword ptr [ ebp + hexvar ]
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , num ( fp ) b hexvar nop lw v1 , num ( fp ) move v0 , v1 sll v0 , v0 , num subu v1 , v0 , v1 lbu v0 , num ( fp ) addu v1 , v1 , v0 lw v0 , hexvar ( fp ) teq v0 , zero , num divu zero , v1 , v0 mfhi v0 sw v0 , num ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) sb v0 , num ( fp ) lbu v0 , num ( fp ) bnez v0 , hexvar nop lw v0 , num ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , num mov eax , dword ptr [ ebp - num ] mov cl , byte ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] cmp al , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] imul ecx , dword ptr [ eax ] , hexvar mov edx , dword ptr [ ebp - hexvar ] movzx esi , byte ptr [ edx ] add ecx , esi mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] xor edx , edx div dword ptr [ ebp - hexvar ]
movzx ecx , byte ptr [ rdi ] xor edx , edx test cl , cl je hexvar nop dword ptr [ rax ] mov rax , rdx add rdi , num shl rax , num sub rax , rdx xor edx , edx add rax , rcx movzx ecx , byte ptr [ rdi ] div rsi test cl , cl jne hexvar mov rax , rdx ret
movzx ecx , byte ptr [ rdi ] test cl , cl je hexvar mov edx , num mov rax , rdx shl rax , num sub rax , rdx movzx ecx , cl add rax , rcx mov edx , num div rsi add rdi , num movzx ecx , byte ptr [ rdi ] test cl , cl jne hexvar jmp hexvar mov edx , num mov rax , rdx ret
lbu a2 , ( a0 ) beqz a2 , hexvar move v0 , zero sll v1 , v0 , num addiu a0 , a0 , num subu v0 , v1 , v0 addu v0 , v0 , a2 lbu a2 , ( a0 ) teq a1 , zero , num divu zero , v0 , a1 bnez a2 , hexvar mfhi v0 jr ra nop
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , num ( fp ) b hexvar nop lw v1 , num ( fp ) move v0 , v1 sll v0 , v0 , num subu v1 , v0 , v1 lbu v0 , num ( fp ) addu v1 , v1 , v0 lw v0 , hexvar ( fp ) teq v0 , zero , num divu zero , v1 , v0 mfhi v0 sw v0 , num ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) sb v0 , num ( fp ) lbu v0 , num ( fp ) bnez v0 , hexvar nop lw v0 , num ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - num ] , cl cmp cl , num mov eax , hexvar mov edx , hexvar cmovne edx , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar imul eax , dword ptr [ ebp - num ] , hexvar movzx ecx , byte ptr [ ebp - num ] add eax , ecx xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar sub esp , hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , num mov r0 , hexvar bl hexvar mov r3 , r0 str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r0 , [ fp , - num ] bl hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
mov r2 , r1 ldr r1 , [ r0 , hexvar ] ldr r3 , [ r2 , hexvar ] cmp r1 , r3 blt hexvar bgt hexvar ldr r3 , [ r0 , hexvar ] ldr r1 , [ r2 , hexvar ] subs r3 , r3 , r1 bne hexvar ldr r1 , [ r0 ] ldr r0 , [ r2 ] b hexvar mov r3 , num mov r0 , r3 bx lr mvn r3 , num b hexvar
mov r2 , r1 ldr r1 , [ r0 , hexvar ] ldr r3 , [ r2 , hexvar ] cmp r1 , r3 blt hexvar bgt hexvar ldr r3 , [ r0 , hexvar ] ldr r1 , [ r2 , hexvar ] subs r3 , r3 , r1 bne hexvar ldr r1 , [ r0 ] ldr r0 , [ r2 ] b hexvar mov r3 , num mov r0 , r3 bx lr mvn r3 , num b hexvar
mov r2 , r1 ldr r1 , [ r0 , hexvar ] ldr r3 , [ r2 , hexvar ] cmp r1 , r3 blt hexvar bgt hexvar ldr r3 , [ r0 , hexvar ] ldr r1 , [ r2 , hexvar ] subs r3 , r3 , r1 bne hexvar ldr r1 , [ r0 ] ldr r0 , [ r2 ] b hexvar mov r3 , num mov r0 , r3 bx lr mvn r3 , num b hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop ebp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx + hexvar ] mov ecx , dword ptr [ edi + hexvar ] cmp esi , ecx jg hexvar mov eax , num jl hexvar mov eax , dword ptr [ edi + hexvar ] sub eax , dword ptr [ edx + hexvar ] jne hexvar sub esp , num push dword ptr [ edi ] push dword ptr [ edx ] call hexvar add esp , hexvar pop ebx pop esi pop edi ret
mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi + hexvar ] , rax mov rdx , rsi jg hexvar jl hexvar mov rax , qword ptr [ rdi + hexvar ] sub eax , dword ptr [ rsi + hexvar ] jne hexvar mov rsi , qword ptr [ rdi ] mov rdi , qword ptr [ rdx ] jmp hexvar nop dword ptr [ rax + rax ] mov eax , num ret nop mov eax , hexvar ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
mov r2 , r1 ldr r1 , [ r0 , hexvar ] ldr r3 , [ r2 , hexvar ] cmp r1 , r3 blt hexvar bgt hexvar ldr r3 , [ r0 , hexvar ] ldr r1 , [ r2 , hexvar ] subs r3 , r3 , r1 bne hexvar ldr r1 , [ r0 ] ldr r0 , [ r2 ] b hexvar mov r3 , num mov r0 , r3 bx lr mvn r3 , num b hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a1 , hexvar sw gp , hexvar ( sp ) lb v0 , ( a1 ) bnez v0 , hexvar move s0 , a1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s1 , a0 move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 move a1 , v0 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) lw v1 , num ( s1 ) addiu v0 , v1 , - num lw a0 , ( s1 ) sltu a1 , v0 , a0 bnez a1 , hexvar move a2 , s2 addiu a0 , s2 , - num addu v1 , v1 , a0 lb a0 , ( v0 ) sb a0 , ( v1 ) addiu v0 , v0 , - num lw a0 , ( s1 ) sltu a1 , v0 , a0 beqz a1 , hexvar addiu v1 , v1 , - num move a2 , s2 move a1 , s0 lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov edx , dword ptr [ ebp + hexvar ] movzx edx , byte ptr [ edx ] test dl , dl je hexvar sub esp , hexvar push dword ptr [ ebp + hexvar ] mov ebx , eax call hexvar add esp , hexvar sub esp , num push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar test edx , edx je hexvar mov ebp , eax cmp byte ptr [ edx ] , num jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } subs r5 , r1 , num popeq { r4 , r5 , r6 , pc } ldrb r3 , [ r5 ] cmp r3 , num popeq { r4 , r5 , r6 , pc } mov r4 , r0 mov r0 , r5 bl hexvar subs r6 , r0 , num popeq { r4 , r5 , r6 , pc } mov r1 , r6 mov r0 , r4 bl hexvar ldr r2 , [ r4 , num ] sub r3 , r2 , num ldr r0 , [ r4 ] cmp r3 , r0 blo hexvar add r2 , r2 , r6 ldrb r1 , [ r3 ] , - num strb r1 , [ r2 , - num ] ! ldr r0 , [ r4 ] cmp r0 , r3 bls hexvar mov r2 , r6 mov r1 , r5 bl hexvar ldr r3 , [ r4 , num ] add r6 , r3 , r6 str r6 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
test rsi , rsi je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov r12 , rdi cmp byte ptr [ rsi ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar test edx , edx je hexvar mov ebp , eax cmp byte ptr [ edx ] , num jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } subs r5 , r1 , num popeq { r4 , r5 , r6 , pc } ldrb r3 , [ r5 ] cmp r3 , num popeq { r4 , r5 , r6 , pc } mov r4 , r0 mov r0 , r5 bl hexvar subs r6 , r0 , num popeq { r4 , r5 , r6 , pc } mov r1 , r6 mov r0 , r4 bl hexvar ldr r2 , [ r4 , num ] sub r3 , r2 , num ldr r0 , [ r4 ] cmp r3 , r0 blo hexvar add r2 , r2 , r6 ldrb r1 , [ r3 ] , - num strb r1 , [ r2 , - num ] ! ldr r0 , [ r4 ] cmp r0 , r3 bls hexvar mov r2 , r6 mov r1 , r5 bl hexvar ldr r3 , [ r4 , num ] add r6 , r3 , r6 str r6 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lbu v1 , ( a0 ) sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl a1 , v1 , hexvar sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num sll v1 , v1 , num lbu a0 , num ( a0 ) or v1 , a0 , v1 jr ra or v0 , v0 , a1
lwl v0 , ( a0 ) lbu a3 , num ( a0 ) lbu a1 , num ( a0 ) lbu a2 , num ( a0 ) lwr v0 , num ( a0 ) lbu v1 , num ( a0 ) sll t0 , v0 , num srl a0 , v0 , hexvar or v0 , a3 , t0 sll a3 , v0 , num sll a0 , a0 , num srl v0 , v0 , hexvar or a2 , a2 , a3 or a0 , v0 , a0 sll a0 , a0 , num sll v0 , a2 , num srl a2 , a2 , hexvar or v0 , a1 , v0 or a0 , a2 , a0 sll a1 , v0 , num sll a0 , a0 , num srl v0 , v0 , hexvar or v1 , v1 , a1 jr ra or v0 , v0 , a0
mov eax , dword ptr [ rdi ] movzx edx , byte ptr [ rdi + num ] bswap eax mov eax , eax shl rax , num or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rax , num or rax , rdx ret
push { r4 , r5 } ldrb r2 , [ r0 ] ldrb r4 , [ r0 , num ] orr r1 , r4 , r2 , lsl num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsr r3 , r1 , hexvar ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num ldrb r4 , [ r0 , num ] orr r0 , r4 , r1 , lsl num orr r1 , r3 , r1 , lsr num pop { r4 , r5 } bx lr
push edi push esi xor edx , edx push ebx mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] movzx edi , byte ptr [ esi + num ] bswap eax shld edx , eax , num shl eax , num or edi , eax mov eax , edi shld edx , edi , num movzx edi , byte ptr [ esi + num ] shl eax , num or edi , eax shld edx , edi , num mov eax , edi movzx edi , byte ptr [ esi + num ] shl eax , num mov ebx , edx or edi , eax movzx eax , byte ptr [ esi + num ] shld ebx , edi , num mov ecx , edi shl ecx , num mov edx , ebx or eax , ecx pop ebx pop esi pop edi ret
movzx edx , byte ptr [ rdi ] shl rdx , num movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num movzx edx , byte ptr [ rdi + num ] or rdx , rax mov rax , rdx shl rax , num movzx edx , byte ptr [ rdi + num ] or rdx , rax shl rdx , num movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num movzx edx , byte ptr [ rdi + num ] or rax , rdx ret
push edi push esi xor edx , edx push ebx mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] movzx edi , byte ptr [ esi + num ] bswap eax shld edx , eax , num shl eax , num or edi , eax mov eax , edi shld edx , edi , num movzx edi , byte ptr [ esi + num ] shl eax , num or edi , eax shld edx , edi , num mov eax , edi movzx edi , byte ptr [ esi + num ] shl eax , num mov ebx , edx or edi , eax movzx eax , byte ptr [ esi + num ] shld ebx , edi , num mov ecx , edi shl ecx , num mov edx , ebx or eax , ecx pop ebx pop esi pop edi ret
push { r4 , r5 } ldrb r2 , [ r0 ] ldrb r4 , [ r0 , num ] orr r1 , r4 , r2 , lsl num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsr r3 , r1 , hexvar ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num ldrb r4 , [ r0 , num ] orr r0 , r4 , r1 , lsl num orr r1 , r3 , r1 , lsr num pop { r4 , r5 } bx lr
lbu v1 , ( a0 ) sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl a1 , v1 , hexvar sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num sll v1 , v1 , num lbu a0 , num ( a0 ) or v1 , a0 , v1 jr ra or v0 , v0 , a1
push edi push esi xor edx , edx push ebx mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] movzx edi , byte ptr [ esi + num ] bswap eax shld edx , eax , num shl eax , num or edi , eax mov eax , edi shld edx , edi , num movzx edi , byte ptr [ esi + num ] shl eax , num or edi , eax shld edx , edi , num mov eax , edi movzx edi , byte ptr [ esi + num ] shl eax , num mov ebx , edx or edi , eax movzx eax , byte ptr [ esi + num ] shld ebx , edi , num mov ecx , edi shl ecx , num mov edx , ebx or eax , ecx pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar call hexvar xor ebp , ebp test eax , eax mov edi , eax jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , r8 mov r13 , rcx mov qword ptr [ rsp + hexvar ] , rdx mov r12 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor r14d , r14d test rbp , rbp je hexvar xor r15d , r15d mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax jne hexvar xor r13d , r13d test r15 , r15 je hexvar mov rdi , r15 call hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar jmp hexvar call hexvar mov rbp , rax mov r15 , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r12 mov rdx , rbp call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdx , r13 add rdx , num mov rdi , r14 mov rsi , rax mov rcx , r13 mov r8 , rbp call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , r14 mov rdi , rbx mov rsi , r12 mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov r8 , rbp call hexvar xor r14d , r14d test eax , eax je hexvar xor r13d , r13d mov r14d , eax test r15 , r15 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , r8 mov r13 , rcx mov qword ptr [ rsp + hexvar ] , rdx mov r12 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor r14d , r14d test rbp , rbp je hexvar xor r15d , r15d mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax jne hexvar xor r13d , r13d test r15 , r15 je hexvar mov rdi , r15 call hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar jmp hexvar call hexvar mov rbp , rax mov r15 , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r12 mov rdx , rbp call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdx , r13 add rdx , num mov rdi , r14 mov rsi , rax mov rcx , r13 mov r8 , rbp call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , r14 mov rdi , rbx mov rsi , r12 mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov r8 , rbp call hexvar xor r14d , r14d test eax , eax je hexvar xor r13d , r13d mov r14d , eax test r15 , r15 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar call hexvar xor ebp , ebp test eax , eax mov edi , eax jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar call hexvar xor ebp , ebp test eax , eax mov edi , eax jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , r8 mov r13 , rcx mov qword ptr [ rsp + hexvar ] , rdx mov r12 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor r14d , r14d test rbp , rbp je hexvar xor r15d , r15d mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax jne hexvar xor r13d , r13d test r15 , r15 je hexvar mov rdi , r15 call hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar jmp hexvar call hexvar mov rbp , rax mov r15 , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r12 mov rdx , rbp call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdx , r13 add rdx , num mov rdi , r14 mov rsi , rax mov rcx , r13 mov r8 , rbp call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , r14 mov rdi , rbx mov rsi , r12 mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov r8 , rbp call hexvar xor r14d , r14d test eax , eax je hexvar xor r13d , r13d mov r14d , eax test r15 , r15 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , r8 mov r13 , rcx mov qword ptr [ rsp + hexvar ] , rdx mov r12 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor r14d , r14d test rbp , rbp je hexvar xor r15d , r15d mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax jne hexvar xor r13d , r13d test r15 , r15 je hexvar mov rdi , r15 call hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar jmp hexvar call hexvar mov rbp , rax mov r15 , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r12 mov rdx , rbp call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdx , r13 add rdx , num mov rdi , r14 mov rsi , rax mov rcx , r13 mov r8 , rbp call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , r14 mov rdi , rbx mov rsi , r12 mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov r8 , rbp call hexvar xor r14d , r14d test eax , eax je hexvar xor r13d , r13d mov r14d , eax test r15 , r15 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , r8 mov r13 , rcx mov qword ptr [ rsp + hexvar ] , rdx mov r12 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor r14d , r14d test rbp , rbp je hexvar xor r15d , r15d mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax jne hexvar xor r13d , r13d test r15 , r15 je hexvar mov rdi , r15 call hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar jmp hexvar call hexvar mov rbp , rax mov r15 , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r12 mov rdx , rbp call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdx , r13 add rdx , num mov rdi , r14 mov rsi , rax mov rcx , r13 mov r8 , rbp call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , r14 mov rdi , rbx mov rsi , r12 mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov r8 , rbp call hexvar xor r14d , r14d test eax , eax je hexvar xor r13d , r13d mov r14d , eax test r15 , r15 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , r8 mov r13 , rcx mov qword ptr [ rsp + hexvar ] , rdx mov r12 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor r14d , r14d test rbp , rbp je hexvar xor r15d , r15d mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax jne hexvar xor r13d , r13d test r15 , r15 je hexvar mov rdi , r15 call hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar jmp hexvar call hexvar mov rbp , rax mov r15 , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r12 mov rdx , rbp call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdx , r13 add rdx , num mov rdi , r14 mov rsi , rax mov rcx , r13 mov r8 , rbp call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , r14 mov rdi , rbx mov rsi , r12 mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov r8 , rbp call hexvar xor r14d , r14d test eax , eax je hexvar xor r13d , r13d mov r14d , eax test r15 , r15 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , r8 mov r13 , rcx mov qword ptr [ rsp + hexvar ] , rdx mov r12 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor r14d , r14d test rbp , rbp je hexvar xor r15d , r15d mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax jne hexvar xor r13d , r13d test r15 , r15 je hexvar mov rdi , r15 call hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar jmp hexvar call hexvar mov rbp , rax mov r15 , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r12 mov rdx , rbp call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdx , r13 add rdx , num mov rdi , r14 mov rsi , rax mov rcx , r13 mov r8 , rbp call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , r14 mov rdi , rbx mov rsi , r12 mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov r8 , rbp call hexvar xor r14d , r14d test eax , eax je hexvar xor r13d , r13d mov r14d , eax test r15 , r15 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar nop dword ptr [ eax ]
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar nop dword ptr [ eax ]
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar nop dword ptr [ eax ]
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar nop dword ptr [ eax ]
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , eax call hexvar call hexvar call hexvar sub esp , hexvar push esi call hexvar
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar nop dword ptr [ eax ]
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi call hexvar call hexvar call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , num call hexvar call hexvar call hexvar sub esp , hexvar push esi call hexvar lea esi , [ esi ]
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar nop dword ptr [ eax ]
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi call hexvar call hexvar call hexvar mov eax , dword ptr [ rbp - num ] mov edi , eax call hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rdi ] mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar mov rbx , qword ptr [ rdi ] call hexvar mov rdi , rbx test rbx , rbx jne hexvar mov qword ptr [ rbp + hexvar ] , num mov dword ptr [ rbp + hexvar ] , hexvar mov qword ptr [ rbp + hexvar ] , num mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov qword ptr [ rbp + hexvar ] , num add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ ebp - num ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx + hexvar ] , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ ebp - num ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx + hexvar ] , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , num add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar move s1 , zero addiu a3 , zero , hexvar lui s2 , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a1 , sp , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 sltiu s1 , v0 , num addiu a3 , zero , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s0 , hexvar lui v0 , hexvar b hexvar addiu a3 , zero , hexvar addiu a3 , zero , hexvar lui s0 , hexvar addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a3 , zero , hexvar addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a1 , sp , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a3 , zero , hexvar addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , num sw v1 , hexvar ( v0 ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lui v0 , hexvar ldc1 f2 , hexvar ( v0 ) lui v0 , hexvar ldc1 f0 , - hexvar ( v0 ) addiu s0 , zero , num
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax sub esp , hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ ebx + hexvar ] push eax call hexvar add esp , hexvar test eax , eax sete al movzx eax , al mov dword ptr [ esp + hexvar ] , eax push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar jmp hexvar mov dword ptr [ esp + hexvar ] , num cmp dword ptr [ esp + hexvar ] , num jne hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ ebx + hexvar ] push eax call hexvar add esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar call hexvar mov dword ptr [ ebx + hexvar ] , num fld qword ptr [ ebx - hexvar ] fld qword ptr [ ebx + hexvar ] fucomip st ( num ) fstp st ( num ) setae al movzx eax , al mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar mov dword ptr [ ebx + hexvar ] , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s2 , hexvar ( sp ) lui s2 , hexvar sw s1 , hexvar ( sp ) addiu s1 , sp , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a0 , s1 sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) jalr t9 nop lw v0 , hexvar ( s2 ) beqz v0 , hexvar lw gp , hexvar ( sp ) lui s0 , hexvar lw t9 , - hexvar ( gp ) addiu a3 , zero , hexvar addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num jalr t9 lui s4 , hexvar move a1 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , s4 , hexvar addiu a3 , zero , hexvar lw gp , hexvar ( sp ) addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num move s6 , v0 lw t9 , - hexvar ( gp ) jalr t9 sltiu s5 , v0 , num bnez s6 , hexvar lw gp , hexvar ( sp ) lui s1 , hexvar lw v0 , hexvar ( s1 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lui v0 , hexvar lui v1 , hexvar ldc1 f2 , hexvar ( v0 ) addiu v0 , zero , num ldc1 f0 , - hexvar ( v1 ) bnez s5 , hexvar movf v0 , zero , fcc3
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + num ] call hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar lea rsi , [ rsp + num ] mov edi , hexvar call hexvar mov ebx , eax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar test ebx , ebx je hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar lea rsi , [ rsp + num ] mov edi , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov byte ptr [ rip + hexvar ] , num xor ebp , ebp cmp byte ptr [ rip + hexvar ] , num jne hexvar call hexvar mov byte ptr [ rip + hexvar ] , num movsd xmm0 , qword ptr [ rip + hexvar ] xor ebx , ebx ucomisd xmm0 , qword ptr [ rip + hexvar ] setae bl test bpl , bpl jne hexvar mov byte ptr [ rip + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , ebx add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar move s1 , zero addiu a3 , zero , hexvar lui s2 , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a1 , sp , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 sltiu s1 , v0 , num addiu a3 , zero , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s0 , hexvar lui v0 , hexvar b hexvar addiu a3 , zero , hexvar addiu a3 , zero , hexvar lui s0 , hexvar addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a3 , zero , hexvar addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a1 , sp , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a3 , zero , hexvar addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , num sw v1 , hexvar ( v0 ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lui v0 , hexvar ldc1 f2 , hexvar ( v0 ) lui v0 , hexvar ldc1 f0 , - hexvar ( v0 ) addiu s0 , zero , num
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + num ] call hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar lea rsi , [ rsp + num ] mov edi , hexvar call hexvar mov ebx , eax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar test ebx , ebx je hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar lea rsi , [ rsp + num ] mov edi , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov byte ptr [ rip + hexvar ] , num xor ebp , ebp cmp byte ptr [ rip + hexvar ] , num jne hexvar call hexvar mov byte ptr [ rip + hexvar ] , num movsd xmm0 , qword ptr [ rip + hexvar ] xor ebx , ebx ucomisd xmm0 , qword ptr [ rip + hexvar ] setae bl test bpl , bpl jne hexvar mov byte ptr [ rip + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , ebx add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + num ] call hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar lea rsi , [ rsp + num ] mov edi , hexvar call hexvar mov ebx , eax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar test ebx , ebx je hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar lea rsi , [ rsp + num ] mov edi , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov byte ptr [ rip + hexvar ] , num xor ebp , ebp cmp byte ptr [ rip + hexvar ] , num jne hexvar call hexvar mov byte ptr [ rip + hexvar ] , num movsd xmm0 , qword ptr [ rip + hexvar ] xor ebx , ebx ucomisd xmm0 , qword ptr [ rip + hexvar ] setae bl test bpl , bpl jne hexvar mov byte ptr [ rip + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , ebx add rsp , hexvar pop rbx pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea edi , [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push edi call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax je hexvar lea esi , [ ebx - hexvar ] push hexvar push esi push hexvar push num call hexvar pop ebp lea ebp , [ ebx + hexvar ] pop eax push edi push ebp call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + hexvar ] , eax sete al movzx eax , al mov dword ptr [ esp + num ] , eax push hexvar push esi push hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar lea esi , [ esi ] fld dword ptr [ ebx - hexvar ] fld qword ptr [ ebx + hexvar ] xor eax , eax mov edx , dword ptr [ esp + num ] fucomip st ( num ) fstp st ( num ) setae al test edx , edx jne hexvar mov dword ptr [ esp + num ] , eax push hexvar push esi push hexvar push hexvar mov dword ptr [ ebx + hexvar ] , num call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea edi , [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push edi call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax je hexvar lea esi , [ ebx - hexvar ] push hexvar push esi push hexvar push num call hexvar pop ebp lea ebp , [ ebx + hexvar ] pop eax push edi push ebp call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + hexvar ] , eax sete al movzx eax , al mov dword ptr [ esp + num ] , eax push hexvar push esi push hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar lea esi , [ esi ] fld dword ptr [ ebx - hexvar ] fld qword ptr [ ebx + hexvar ] xor eax , eax mov edx , dword ptr [ esp + num ] fucomip st ( num ) fstp st ( num ) setae al test edx , edx jne hexvar mov dword ptr [ esp + num ] , eax push hexvar push esi push hexvar push hexvar mov dword ptr [ ebx + hexvar ] , num call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx sub rsp , hexvar lea rdi , [ rsp + num ] call hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar lea rsi , [ rsp + num ] mov edi , hexvar call hexvar mov ebx , eax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar test ebx , ebx je hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar lea rsi , [ rsp + num ] mov edi , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov byte ptr [ rip + hexvar ] , num xor ebp , ebp cmp byte ptr [ rip + hexvar ] , num jne hexvar call hexvar mov byte ptr [ rip + hexvar ] , num movsd xmm0 , qword ptr [ rip + hexvar ] xor ebx , ebx ucomisd xmm0 , qword ptr [ rip + hexvar ] setae bl test bpl , bpl jne hexvar mov byte ptr [ rip + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , ebx add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) bnez a0 , hexvar move s1 , a0 lw v1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , num pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov r13 , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ r13 + hexvar ] call hexvar cmp byte ptr [ r13 + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num je hexvar mov r12 , qword ptr [ r13 ] cmp r12 , hexvar je hexvar cmp r12 , hexvar je hexvar cmp r12 , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rax , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax mov r14d , hexvar xor r15d , r15d jmp hexvar nop dword ptr [ rax + rax ] je hexvar lea r15 , [ rbx + num ] cmp r14 , r15 jbe hexvar lea rcx , [ r15 + r14 ] mov rdi , qword ptr [ rsp + num ] mov rsi , rbp mov qword ptr [ rsp + hexvar ] , r12 shr rcx , num mov rax , rcx mov rbx , rcx shl rax , num lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov edx , num mov qword ptr [ rsp + hexvar ] , rax call hexvar test eax , eax jns hexvar mov r14 , rbx cmp r14 , r15 ja hexvar mov rcx , qword ptr [ r13 + num ] xor eax , eax mov edx , hexvar xor esi , esi xor edi , edi call hexvar mov eax , num jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rax + num ] mov r15d , dword ptr [ rsp + hexvar ] cmp r15d , eax jb hexvar mov dword ptr [ r13 + hexvar ] , r15d mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop leave ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov r13 , rdi mov rdi , qword ptr [ rdi + hexvar ] mov r14d , num call hexvar mov rdi , qword ptr [ r13 + hexvar ] call hexvar cmp byte ptr [ r13 + hexvar ] , num je hexvar mov rax , qword ptr [ r13 ] cmp rax , hexvar je hexvar cmp rax , hexvar je hexvar cmp rax , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov qword ptr [ rsp ] , rax xor r12d , r12d mov r15d , hexvar nop word ptr cs : [ rax + rax ] lea rbx , [ r12 + r15 ] mov rdi , rsp shr rbx , num mov rbp , rbx shl rbp , num add rbp , hexvar mov rsi , rbp call hexvar test eax , eax js hexvar je hexvar lea r12 , [ rbx + num ] cmp r12 , r15 jb hexvar mov rcx , qword ptr [ r13 + num ] xor eax , eax mov edx , hexvar xor esi , esi xor edi , edi call hexvar mov eax , num jmp hexvar nop cmp byte ptr [ r13 + hexvar ] , num sbb eax , eax not eax add eax , num mov r14d , eax mov dword ptr [ r13 + hexvar ] , r14d mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edi , edi jne hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui a3 , hexvar sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp push edi push esi push ebx call hexvar add ecx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , ecx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] lea edi , [ esi + num ] mov eax , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , edx and edi , hexvar add edi , hexvar add eax , edi push eax push dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar test eax , eax mov ecx , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num mov eax , dword ptr [ edx ] lea ebx , [ ecx + eax ] add edi , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ edx ] , edi push ebx push num push num call dword ptr [ eax + hexvar ] lea eax , [ ebx + num ] add esp , hexvar mov edi , dword ptr [ ebp + num ] push eax mov eax , esi cdq push edx push esi call dword ptr [ edi + hexvar ] lea edx , [ ebx + num ] add esp , hexvar mov eax , dword ptr [ ebp + num ] lea edi , [ ebx + hexvar ] push edx push num push hexvar call dword ptr [ eax + hexvar ] add esp , hexvar xor edx , edx mov eax , hexvar mov dword ptr [ ebx + hexvar ] , hexvar mov word ptr [ ebx + hexvar ] , ax mov word ptr [ ebx + hexvar ] , dx push esi push dword ptr [ esp + hexvar ] push edi mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test esi , num mov ecx , dword ptr [ esp + hexvar ] je hexvar nop mov byte ptr [ edi + esi ] , num add esi , num test esi , num jne hexvar add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov edi , dword ptr [ rbp - hexvar ] push rdi mov r9 , r8 mov r8d , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui a3 , hexvar sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r15 push r14 mov r14 , rdi push r13 push r12 lea r12d , [ r8 + num ] push rbp push rbx mov rdi , rsi and r12d , hexvar mov r15 , rdx mov ebx , r8d sub rsp , hexvar movsxd rsi , dword ptr [ rdx ] movsxd r12 , r12d add r12 , hexvar mov qword ptr [ rsp + num ] , rcx add rsi , r12 call hexvar test rax , rax mov r13 , rax je hexvar movsxd rbp , dword ptr [ r15 ] mov edi , num mov rax , rbp add rbp , r13 add r12d , eax mov rax , qword ptr [ r14 + num ] mov rsi , rbp mov dword ptr [ r15 ] , r12d call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] mov r12 , rdi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] lea rsi , [ rbp + num ] mov edi , hexvar call qword ptr [ rax + hexvar ] lea rcx , [ rbp + hexvar ] mov rsi , qword ptr [ rsp + num ] xor edx , edx mov eax , hexvar mov word ptr [ rbp + hexvar ] , dx mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rcx mov word ptr [ rbp + hexvar ] , ax mov rdx , r12 call hexvar test bl , num lea rdi , [ rax + r12 ] je hexvar add ebx , num add rdi , num mov byte ptr [ rdi - num ] , num test bl , num jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a1 sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) lw v0 , ( s1 ) lw s3 , hexvar ( sp ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a2 , zero , num lw gp , hexvar ( sp ) addiu a1 , zero , num addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a3 , s0 addiu v1 , zero , num bne v0 , v1 , hexvar lw gp , hexvar ( sp ) move a0 , v0 lw v0 , hexvar ( sp ) lw v1 , ( s3 ) wsbh s0 , v0 beqz v1 , hexvar rotr s0 , s0 , hexvar xori v1 , v1 , num movz v0 , s0 , v1 lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar slt v1 , s2 , v0 bnez v1 , hexvar nop slt s0 , s2 , s0 beqz s0 , hexvar nop b hexvar sw a0 , ( s3 ) slt s2 , s2 , s0 bnez s2 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , hexvar jalr t9 move a0 , zero addiu a1 , zero , num lw gp , hexvar ( sp ) move a0 , zero move a2 , s4 lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar push esi push num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar cmp eax , num jne hexvar mov eax , dword ptr [ esp + num ] mov esi , eax shr esi , hexvar mov edx , eax shl edx , hexvar or esi , edx mov edx , eax sar edx , num and edx , hexvar or esi , edx mov edx , eax shl edx , num and edx , hexvar or esi , edx mov edx , dword ptr [ edi ] test edx , edx jne hexvar cmp dword ptr [ esp + hexvar ] , eax jl hexvar cmp dword ptr [ esp + hexvar ] , esi jge hexvar mov dword ptr [ edi ] , num jmp hexvar sub esp , num push ebp push num push num call hexvar mov edi , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push edi push eax push num push num call hexvar add esp , hexvar call hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov esi , eax call hexvar push edi push esi push dword ptr [ eax ] push num call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ esp + hexvar ] , esi jl hexvar sub esp , num push ebp push num push num call hexvar mov ebp , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push ebp push eax push num push num call hexvar mov dword ptr [ edi ] , num add esp , hexvar mov eax , esi jmp hexvar cmp edx , num cmove eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar sub r0 , fp , hexvar ldr r3 , [ fp , - hexvar ] mov r2 , num mov r1 , num bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r2 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar str r0 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar b hexvar bl hexvar mov r3 , r0 ldr r4 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] mov r1 , r4 mov r0 , num bl hexvar bl hexvar ldr r1 , [ fp , - hexvar ] sub r0 , fp , hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc } blhi hexvar strheq r0 , [ r0 ] , -r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar push esi push num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar cmp eax , num jne hexvar mov eax , dword ptr [ esp + num ] mov esi , eax shr esi , hexvar mov edx , eax shl edx , hexvar or esi , edx mov edx , eax sar edx , num and edx , hexvar or esi , edx mov edx , eax shl edx , num and edx , hexvar or esi , edx mov edx , dword ptr [ edi ] test edx , edx jne hexvar cmp dword ptr [ esp + hexvar ] , eax jl hexvar cmp dword ptr [ esp + hexvar ] , esi jge hexvar mov dword ptr [ edi ] , num jmp hexvar sub esp , num push ebp push num push num call hexvar mov edi , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push edi push eax push num push num call hexvar add esp , hexvar call hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov esi , eax call hexvar push edi push esi push dword ptr [ eax ] push num call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ esp + hexvar ] , esi jl hexvar sub esp , num push ebp push num push num call hexvar mov ebp , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push ebp push eax push num push num call hexvar mov dword ptr [ edi ] , num add esp , hexvar mov eax , esi jmp hexvar cmp edx , num cmove eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r13 push r12 mov r13 , r8 push rbp push rbx mov rbx , rdi mov r12 , rsi mov rbp , rcx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar mov rcx , rbx mov edx , num mov esi , num mov rdi , rsp call hexvar cmp rax , num jne hexvar mov eax , dword ptr [ rsp ] mov edx , dword ptr [ r13 ] mov ebx , eax test edx , edx bswap ebx je hexvar cmp edx , num cmove eax , ebx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx mov edx , num mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov esi , num mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov esi , num mov edi , num mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , qword ptr [ rbp - hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar sub r0 , fp , hexvar ldr r3 , [ fp , - hexvar ] mov r2 , num mov r1 , num bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r2 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar str r0 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar b hexvar bl hexvar mov r3 , r0 ldr r4 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] mov r1 , r4 mov r0 , num bl hexvar bl hexvar ldr r1 , [ fp , - hexvar ] sub r0 , fp , hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc } blhi hexvar strheq r0 , [ r0 ] , -r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a1 sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) lw v0 , ( s1 ) lw s3 , hexvar ( sp ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a2 , zero , num lw gp , hexvar ( sp ) addiu a1 , zero , num addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a3 , s0 addiu v1 , zero , num bne v0 , v1 , hexvar lw gp , hexvar ( sp ) lw v1 , hexvar ( sp ) move a1 , v0 lw a0 , ( s3 ) wsbh s0 , v1 move v0 , v1 beqz a0 , hexvar rotr s0 , s0 , hexvar xori a0 , a0 , num movz v0 , s0 , a0 lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar slt v1 , s2 , v1 bnez v1 , hexvar nop slt s0 , s2 , s0 beqz s0 , hexvar nop b hexvar sw a1 , ( s3 )
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov r13 , rsi mov r12 , rcx mov rbp , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar mov rcx , rbx mov edx , num mov esi , num mov rdi , rsp call hexvar cmp rax , num je hexvar mov rdx , r13 mov esi , num mov edi , num call hexvar mov rbp , rax mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rcx , rbp mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar jmp hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rbx , rax call hexvar mov rcx , rbp mov rdx , rbx mov esi , dword ptr [ rax ] mov edi , num mov eax , num call hexvar call hexvar mov eax , dword ptr [ rsp ] mov ebx , eax shr ebx , hexvar mov edx , eax shl edx , hexvar or ebx , edx mov ecx , eax and ecx , hexvar sar ecx , num mov edx , ebx or edx , ecx mov ebx , eax and ebx , hexvar shl ebx , num or ebx , edx mov edx , dword ptr [ rbp ] test edx , edx jne hexvar cmp r12d , eax jl hexvar cmp r12d , ebx jge hexvar mov dword ptr [ rbp ] , num jmp hexvar cmp r12d , ebx jl hexvar mov rdx , r13 mov esi , num mov edi , num call hexvar mov r12 , rax mov edx , num mov esi , hexvar mov edi , num call hexvar mov rcx , r12 mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov dword ptr [ rbp ] , num mov eax , ebx jmp hexvar cmp edx , num cmove eax , ebx mov rsi , qword ptr [ rsp + num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov r13 , rsi mov r12 , rcx mov rbp , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar mov rcx , rbx mov edx , num mov esi , num mov rdi , rsp call hexvar cmp rax , num je hexvar mov rdx , r13 mov esi , num mov edi , num call hexvar mov rbp , rax mov rdi , rbx call hexvar test eax , eax je hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rcx , rbp mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar jmp hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rbx , rax call hexvar mov rcx , rbp mov rdx , rbx mov esi , dword ptr [ rax ] mov edi , num mov eax , num call hexvar call hexvar mov eax , dword ptr [ rsp ] mov ebx , eax bswap ebx mov edx , dword ptr [ rbp ] test edx , edx jne hexvar cmp r12d , eax jl hexvar cmp r12d , ebx jge hexvar mov dword ptr [ rbp ] , num jmp hexvar cmp r12d , ebx jl hexvar mov rdx , r13 mov esi , num mov edi , num call hexvar mov r12 , rax mov edx , num mov esi , hexvar mov edi , num call hexvar mov rcx , r12 mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov dword ptr [ rbp ] , num mov eax , ebx jmp hexvar cmp edx , num cmove eax , ebx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
test rdi , rdi je hexvar push rbp push rbx mov rbp , rdi sub rsp , num mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp nop dword ptr [ rax ] add rbx , num call hexvar mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar add rsp , num mov rdi , rbp pop rbx pop rbp jmp hexvar nop ret nop dword ptr [ rax ] nop word ptr cs : [ rax + rax ]
test rdi , rdi je hexvar push rbp push rbx sub rsp , num mov rbp , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rbx , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbx ] mov rdi , rax call hexvar add rbx , num mov rax , qword ptr [ rbx ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
test rdi , rdi je hexvar push rbp push rbx sub rsp , num mov rbp , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rbx , rbp call hexvar add rbx , num mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar mov rdi , rbp call hexvar add rsp , num pop rbx pop rbp ret
beqz a0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw a0 , ( a0 )
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test edi , edi je hexvar mov eax , dword ptr [ edi ] test eax , eax je hexvar mov esi , edi nop sub esp , hexvar add esi , num push eax call hexvar mov eax , dword ptr [ esi ] add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push edi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rbx , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbx ] mov rdi , rax call hexvar add rbx , num mov rax , qword ptr [ rbx ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ edi ] test eax , eax je hexvar mov esi , edi sub esp , hexvar push eax call hexvar add esi , num mov eax , dword ptr [ esi ] add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push edi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test edi , edi je hexvar mov eax , dword ptr [ edi ] test eax , eax je hexvar mov esi , edi nop sub esp , hexvar add esi , num push eax call hexvar mov eax , dword ptr [ esi ] add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push edi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbx test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar lea rdi , [ rbx + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rax , rbx pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push rbx test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar lea rdi , [ rbx + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rax , rbx pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 ) beqz v0 , hexvar move s0 , zero lw s0 , hexvar ( v0 )
push rbx test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar lea rdi , [ rbx + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rax , rbx pop rbx ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r12 , rdi test rdi , rdi mov r14d , hexvar mov ebp , hexvar cmove ebp , r14d mov eax , hexvar mov r15d , hexvar jmp hexvar mov rdi , qword ptr [ rsp ] add rdi , hexvar mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov eax , hexvar nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + num ] mov rbx , qword ptr [ rax + hexvar ] mov eax , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , ebp jmp hexvar nop word ptr cs : [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov qword ptr [ rsp ] , rbx cmp qword ptr [ rsp ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov eax , hexvar xor ebx , ebx jmp hexvar mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov rax , qword ptr [ rsp ] add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbx test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar lea rdi , [ rbx + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rax , rbx pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push rbx test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar lea rdi , [ rbx + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rax , rbx pop rbx ret
push rbx test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar lea rdi , [ rbx + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rax , rbx pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov dword ptr [ ebp - num ] , num test byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , ecx je hexvar mov eax , dword ptr [ ebp - num ] or eax , hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ hexvar ] , num je hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx + edx * num ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , num sete dl and dl , num mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , num cmp byte ptr [ ebp - hexvar ] , num je hexvar or dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ ebp - hexvar ] push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] cmp dword ptr [ ebp - hexvar ] , eax jb hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ ebp - hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax sete al mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi xor eax , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp byte ptr [ esp + hexvar ] , num mov ebp , dword ptr [ esp + hexvar ] setne al mov edi , eax mov eax , dword ptr [ ebx + hexvar ] shl edi , num test eax , eax je hexvar xor esi , esi jmp hexvar nop lea esi , [ esi ] add esi , num cmp dword ptr [ ebx + hexvar ] , esi jbe hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num push edi push dword ptr [ eax + esi * num ] push ebp call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) move v0 , a1 sb v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) ori v0 , v0 , hexvar sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop sw zero , hexvar ( fp ) b hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) lw a2 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a2 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sltiu v0 , v0 , num andi v0 , v0 , hexvar move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , num cmp byte ptr [ ebp - hexvar ] , num je hexvar or dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ ebp - hexvar ] push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] cmp dword ptr [ ebp - hexvar ] , eax jb hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ ebp - hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax sete al mov ebx , dword ptr [ ebp - num ] leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mov r3 , r1 strb r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] orr r3 , r3 , hexvar str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar mov r3 , num str r3 , [ fp , - num ] b hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - num ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - num ] cmp r2 , r3 blo hexvar mov r3 , num b hexvar ldr r2 , [ fp , - hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num moveq r3 , num movne r3 , num and r3 , r3 , hexvar mov r0 , r3 sub sp , fp , num pop { fp , pc } stmdami r4 , { r0 , r2 , r3 , r4 , r6 , r8 , sl , fp , sp , lr , pc } andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] cmp byte ptr [ esp + hexvar ] , num setne al movzx eax , al mov edi , eax shl edi , num cmp dword ptr [ ebx + hexvar ] , num je hexvar mov esi , num sub esp , num push edi mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax + esi * num ] push ebp call hexvar add esp , hexvar test eax , eax je hexvar add esi , num cmp dword ptr [ ebx + hexvar ] , esi ja hexvar mov eax , num jmp hexvar sub esp , num push edi lea eax , [ ebx - hexvar ] push eax push ebp call hexvar add esp , hexvar test eax , eax sete al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi xor eax , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp byte ptr [ esp + hexvar ] , num mov ebp , dword ptr [ esp + hexvar ] setne al mov edi , eax mov eax , dword ptr [ ebx + hexvar ] shl edi , num test eax , eax je hexvar xor esi , esi jmp hexvar nop lea esi , [ esi ] add esi , num cmp dword ptr [ ebx + hexvar ] , esi jbe hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num push edi push dword ptr [ eax + esi * num ] push ebp call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rbp , rdi test sil , sil je hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov r12d , hexvar mov ebx , num mov rax , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rax + rbx * num ] mov edx , r12d mov rdi , rbp call hexvar test eax , eax je hexvar add rbx , num cmp qword ptr [ rip + hexvar ] , rbx ja hexvar mov eax , num jmp hexvar mov edx , hexvar mov esi , hexvar mov rdi , rbp call hexvar test eax , eax sete al jmp hexvar mov eax , num jmp hexvar mov r12d , num mov edx , num cmp qword ptr [ rip + hexvar ] , num je hexvar jmp hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx mov rbp , rdi test sil , sil je hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov r12d , hexvar mov ebx , num mov rax , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rax + rbx * num ] mov edx , r12d mov rdi , rbp call hexvar test eax , eax je hexvar add rbx , num cmp qword ptr [ rip + hexvar ] , rbx ja hexvar mov eax , num jmp hexvar mov edx , hexvar mov esi , hexvar mov rdi , rbp call hexvar test eax , eax sete al jmp hexvar mov eax , num jmp hexvar mov r12d , num mov edx , num cmp qword ptr [ rip + hexvar ] , num je hexvar jmp hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num mov byte ptr [ ebp - hexvar ] , al push dword ptr [ ebp + hexvar ] call hexvar add esp , num mov byte ptr [ ebp - num ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar movzx eax , byte ptr [ ebp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - num ] , num je hexvar mov eax , num jmp hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , esi call hexvar mov ebx , eax mov eax , edi call hexvar mov edx , eax cmp al , num je hexvar test bl , bl jne hexvar cmp bl , num je hexvar mov eax , num test dl , dl je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rbp , rdi mov r12 , rsi call hexvar mov ebx , eax mov rdi , r12 call hexvar cmp bl , al ja hexvar mov eax , num jb hexvar mov rdx , qword ptr [ r12 + hexvar ] mov rcx , qword ptr [ rbp + hexvar ] mov eax , hexvar cmp rcx , rdx jg hexvar jl hexvar mov rsi , qword ptr [ r12 ] mov rdi , qword ptr [ rbp ] call hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , num pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s2 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw v1 , hexvar ( s0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num mov byte ptr [ ebp - hexvar ] , al push dword ptr [ ebp + hexvar ] call hexvar add esp , num mov byte ptr [ ebp - num ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar movzx eax , byte ptr [ ebp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - num ] , num je hexvar mov eax , num jmp hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al test byte ptr [ rbp - hexvar ] , num je hexvar test byte ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar test byte ptr [ rbp - hexvar ] , num jne hexvar test byte ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rax mov rsi , rcx movabs rdx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx call hexvar mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw a2 , - hexvar ( gp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , edi movzx eax , byte ptr [ edi + num ] cmp al , hexvar jl hexvar mov esi , edx cmp al , hexvar jle hexvar cmp al , hexvar jne hexvar movzx eax , byte ptr [ edi + num ] movzx ecx , al lea edx , [ ebx - hexvar ] test byte ptr [ edx + ecx * num ] , num je hexvar cmp al , hexvar je hexvar mov eax , dword ptr [ esp + hexvar ] lea edi , [ eax + num ] sub esp , num push hexvar push num push edi call hexvar mov ebp , eax mov eax , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ eax + num ] movzx ecx , al add esp , hexvar lea edx , [ ebx - hexvar ] test byte ptr [ edx + ecx * num ] , num je hexvar mov ecx , edx add edi , num movzx eax , byte ptr [ edi ] movzx edx , al test byte ptr [ ecx + edx * num ] , num jne hexvar cmp al , hexvar jne hexvar add edi , num mov dword ptr [ esi ] , edi jmp hexvar mov eax , dword ptr [ esp + hexvar ] call hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] call hexvar mov eax , num jmp hexvar movsx ebp , al sub ebp , hexvar mov eax , dword ptr [ esp + hexvar ] cmp byte ptr [ eax + num ] , hexvar je hexvar add dword ptr [ esi ] , num sub ebp , num mov dword ptr [ esp + hexvar ] , num jmp hexvar add eax , num mov dword ptr [ edx ] , eax jmp hexvar mov eax , dword ptr [ esp + hexvar ] call hexvar mov eax , num mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ edx ] movsx ecx , byte ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax cmp cl , hexvar jl hexvar cmp cl , hexvar mov edi , edx jle hexvar cmp cl , hexvar jne hexvar movzx edx , byte ptr [ eax + num ] lea ebp , [ ebx - hexvar ] test byte ptr [ ebp + edx * num ] , num je hexvar cmp dl , hexvar je hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push hexvar push num lea esi , [ eax + num ] push esi call hexvar mov ecx , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar movzx edx , byte ptr [ eax + num ] test byte ptr [ ebp + edx * num ] , num mov eax , edx je hexvar lea esi , [ esi ] add esi , num movzx edx , byte ptr [ esi ] test byte ptr [ ebp + edx * num ] , num mov eax , edx jne hexvar cmp al , hexvar jne hexvar add esi , num mov dword ptr [ edi ] , esi jmp hexvar lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar push dword ptr [ esp + hexvar ] push eax mov eax , dword ptr [ ebx + hexvar ] push num push dword ptr [ eax ] call hexvar add esp , hexvar xor eax , eax mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r1 ldr r1 , [ r1 ] ldr r3 , [ pc , hexvar ] ldrb r7 , [ r1 , num ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r7 , hexvar str r1 , [ sp , hexvar ] str r3 , [ sp , hexvar ] blo hexvar cmp r7 , hexvar mov sb , r0 mov sl , r2 bls hexvar cmp r7 , hexvar bne hexvar ldrb r3 , [ r1 , num ] ldr r5 , [ pc , hexvar ] lsl r2 , r3 , num mov r7 , r1 ldrh r1 , [ r5 , r2 ] lsr r1 , r1 , num eor r1 , r1 , num and r1 , r1 , num cmp r3 , hexvar orreq r1 , r1 , num cmp r1 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar mov r3 , r7 mov r2 , r0 mov r1 , num mov r0 , r4 bl hexvar mov r0 , num ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r1 ldr r1 , [ r1 ] ldr r3 , [ pc , hexvar ] ldrb r7 , [ r1 , num ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r7 , hexvar str r1 , [ sp , hexvar ] str r3 , [ sp , hexvar ] blo hexvar cmp r7 , hexvar mov sb , r0 mov sl , r2 bls hexvar cmp r7 , hexvar bne hexvar ldrb r3 , [ r1 , num ] ldr r5 , [ pc , hexvar ] lsl r2 , r3 , num mov r7 , r1 ldrh r1 , [ r5 , r2 ] lsr r1 , r1 , num eor r1 , r1 , num and r1 , r1 , num cmp r3 , hexvar orreq r1 , r1 , num cmp r1 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar mov r3 , r7 mov r2 , r0 mov r1 , num mov r0 , r4 bl hexvar mov r0 , num ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v1 , ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v1 , ( a1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ edx ] movsx ecx , byte ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax cmp cl , hexvar jl hexvar cmp cl , hexvar mov edi , edx jle hexvar cmp cl , hexvar jne hexvar movzx edx , byte ptr [ eax + num ] lea ebp , [ ebx - hexvar ] test byte ptr [ ebp + edx * num ] , num je hexvar cmp dl , hexvar je hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push hexvar push num lea esi , [ eax + num ] push esi call hexvar mov ecx , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar movzx edx , byte ptr [ eax + num ] test byte ptr [ ebp + edx * num ] , num mov eax , edx je hexvar lea esi , [ esi ] add esi , num movzx edx , byte ptr [ esi ] test byte ptr [ ebp + edx * num ] , num mov eax , edx jne hexvar cmp al , hexvar jne hexvar add esi , num mov dword ptr [ edi ] , esi jmp hexvar lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar push dword ptr [ esp + hexvar ] push eax mov eax , dword ptr [ ebx + hexvar ] push num push dword ptr [ eax ] call hexvar add esp , hexvar xor eax , eax mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rcx , qword ptr [ rsi ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp + num ] , rdx movsx eax , byte ptr [ rcx + num ] mov qword ptr [ rsp + hexvar ] , rcx cmp al , hexvar jl hexvar cmp al , hexvar mov r13 , rdi mov r15 , rsi jle hexvar cmp al , hexvar jne hexvar movzx edx , byte ptr [ rcx + num ] lea rbp , [ rip + hexvar ] test byte ptr [ rbp + rdx * num ] , num je hexvar cmp dl , hexvar je hexvar lea rbx , [ rcx + num ] mov r14 , rcx mov edx , hexvar xor esi , esi mov rdi , rbx call hexvar movzx ecx , byte ptr [ r14 + num ] test byte ptr [ rbp + rcx * num ] , num mov rdx , rcx je hexvar nop dword ptr [ rax ] add rbx , num movzx ecx , byte ptr [ rbx ] test byte ptr [ rbp + rcx * num ] , num mov rdx , rcx jne hexvar cmp dl , hexvar jne hexvar add rbx , num mov qword ptr [ r15 ] , rbx jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov rcx , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax mov esi , num xor eax , eax call hexvar xor eax , eax mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r1 ldr r1 , [ r1 ] ldr r3 , [ pc , hexvar ] ldrb r7 , [ r1 , num ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r7 , hexvar str r1 , [ sp , hexvar ] str r3 , [ sp , hexvar ] blo hexvar cmp r7 , hexvar mov sb , r0 mov sl , r2 bls hexvar cmp r7 , hexvar bne hexvar ldrb r3 , [ r1 , num ] ldr r5 , [ pc , hexvar ] lsl r2 , r3 , num mov r7 , r1 ldrh r1 , [ r5 , r2 ] lsr r1 , r1 , num eor r1 , r1 , num and r1 , r1 , num cmp r3 , hexvar orreq r1 , r1 , num cmp r1 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar mov r3 , r7 mov r2 , r0 mov r1 , num mov r0 , r4 bl hexvar mov r0 , num ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rdx sub rsp , num mov rbx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rsi + num ] movzx eax , byte ptr [ rbx ] cmp al , byte ptr [ rdx + hexvar ] je hexvar cmp al , byte ptr [ rdi + num ] je hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov rax , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] movzx eax , byte ptr [ eax + hexvar ] cmp dl , al je hexvar mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax ] mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + num ] cmp dl , al jne hexvar add dword ptr [ ebp - hexvar ] , num sub esp , num push num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] push num push num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] cmp edx , eax je hexvar sub dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] movzx edx , byte ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push num push num push num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp + hexvar ] , eax cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov eax , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , al push dword ptr [ ebp + hexvar ] call hexvar add esp , num cmp byte ptr [ ebp - hexvar ] , al je hexvar mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax ] mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + num ] cmp dl , al jne hexvar add dword ptr [ ebp - hexvar ] , num sub esp , num push num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] push num push num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] cmp edx , eax je hexvar sub dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] movzx edx , byte ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push num push num push num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp + hexvar ] , eax cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov eax , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rdx sub rsp , num mov rbx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rsi + num ] movzx eax , byte ptr [ rbx ] cmp al , byte ptr [ rdx + hexvar ] je hexvar cmp al , byte ptr [ rdi + num ] je hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar mov rax , rbp add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push { r4 , r5 , r6 , r7 , lr } sub sp , sp , hexvar mov r6 , r0 mov r5 , r2 ldr r4 , [ r2 , num ] ldrb r3 , [ r4 ] ldr r2 , [ r1 , num ] ldrb r2 , [ r2 , hexvar ] cmp r2 , r3 beq hexvar ldrb r2 , [ r0 , num ] cmp r2 , r3 bne hexvar add r4 , r4 , num mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r5 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 lw s0 , num ( a2 ) lb v0 , ( s0 ) lw v1 , num ( a1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edx + num ] mov ecx , dword ptr [ ecx + num ] movzx eax , byte ptr [ ebp ] cmp al , byte ptr [ ecx + hexvar ] je hexvar mov esi , dword ptr [ esp + hexvar ] cmp al , byte ptr [ esi + num ] je hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , ebp repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al je hexvar mov eax , edx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) bgez v0 , hexvar addiu v1 , zero , - hexvar bne v0 , v1 , hexvar lui a3 , hexvar addiu v1 , zero , hexvar sw v1 , hexvar ( sp ) move a3 , a1 move a2 , a0 move a1 , v0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar lui a0 , hexvar addiu a0 , a0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebx sub esp , num call hexvar add ebx , hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jns hexvar cmp eax , - hexvar jne hexvar sub esp , hexvar push hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push num call hexvar add esp , hexvar pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( v0 ) bgez v0 , hexvar addiu v1 , zero , - hexvar bne v0 , v1 , hexvar lui a3 , hexvar lw ra , hexvar ( sp ) addiu a3 , zero , hexvar lw t9 , - hexvar ( gp ) addiu sp , sp , hexvar move a2 , a1 move a1 , a0 b hexvar move a0 , v0 lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , a0 , - hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( v0 ) bgez v0 , hexvar move a2 , a0 addiu v1 , zero , - hexvar bne v0 , v1 , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v1 , zero , hexvar addiu a0 , zero , num sw v1 , hexvar ( sp ) move a3 , a1 jalr t9 move a1 , v0 lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jalr t9 addiu a0 , a0 , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jge hexvar cmp dword ptr [ hexvar ] , - hexvar jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar call hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) bgez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , hexvar ( v0 ) addiu v0 , zero , - hexvar beq v1 , v0 , hexvar nop lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) addiu a3 , zero , hexvar lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , num call hexvar add ebx , hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jns hexvar cmp eax , - hexvar jne hexvar sub esp , hexvar push hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push num call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jge hexvar cmp dword ptr [ hexvar ] , - hexvar jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar call hexvar add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( v0 ) bgez v0 , hexvar move a2 , a0 addiu v1 , zero , - hexvar bne v0 , v1 , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v1 , zero , hexvar addiu a0 , zero , num sw v1 , hexvar ( sp ) move a3 , a1 jalr t9 move a1 , v0 lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , a0 , - hexvar
mov rcx , rsi mov esi , dword ptr [ rip + hexvar ] test esi , esi jns hexvar cmp esi , - hexvar jne hexvar mov rdx , rdi mov r8d , hexvar mov edi , num jmp hexvar push rax mov ecx , hexvar mov edx , hexvar mov esi , hexvar mov edi , hexvar call hexvar nop
push ebx sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] test edx , edx je hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push num push num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push num push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jg hexvar mov eax , dword ptr [ esp + num ] jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + hexvar ] sub esp , num push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push hexvar push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] test edx , edx je hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push num push num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push num push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jg hexvar mov eax , dword ptr [ esp + num ] jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + hexvar ] sub esp , num push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push hexvar push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx ret
push ebp push edi xor eax , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov ebp , dword ptr [ esi + num ] test ebp , ebp je hexvar sub esp , num push num push num push edi lea ebx , [ esp + hexvar ] push ebx push num push esi call ebp add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esi ] sub esp , num push dword ptr [ esp + hexvar ] push edi push esi call dword ptr [ eax + hexvar ] pop edx pop ecx push eax push num push edi push ebx push hexvar push esi call ebp add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar add r2 , sp , hexvar mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] ldr r4 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r1 , num ldr r0 , [ sp , hexvar ] blx r4 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bgt hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] blx r3 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar add r2 , sp , hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] ldr r4 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r1 , hexvar ldr r0 , [ sp , hexvar ] blx r4 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { r4 , pc }
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , num test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov ebx , dword ptr [ esi + num ] test ebx , ebx je hexvar sub esp , num push num push num push edi lea eax , [ esp + hexvar ] push eax push num push esi call ebx add esp , hexvar test eax , eax jle hexvar sub esp , num mov eax , dword ptr [ esi ] push dword ptr [ esp + hexvar ] push edi push esi call dword ptr [ eax + hexvar ] add esp , num push eax push num push edi lea eax , [ esp + hexvar ] push eax push hexvar push esi call ebx add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v0 , hexvar ( v0 )
push rbp push r14 push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdx test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov ebp , esi mov r14 , qword ptr [ rbx + num ] test r14 , r14 je hexvar lea rdx , [ rsp + num ] mov r9d , num mov rdi , rbx mov esi , num mov ecx , ebp xor r8d , r8d call r14
push rbp push r14 push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdx test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov ebp , esi mov r14 , qword ptr [ rbx + num ] test r14 , r14 je hexvar lea rdx , [ rsp + num ] mov r9d , num mov rdi , rbx mov esi , num mov ecx , ebp xor r8d , r8d call r14
push ebp push edi xor eax , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov ebp , dword ptr [ esi + num ] test ebp , ebp je hexvar sub esp , num push num push num push edi lea ebx , [ esp + hexvar ] push ebx push num push esi call ebp add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esi ] sub esp , num push dword ptr [ esp + hexvar ] push edi push esi call dword ptr [ eax + hexvar ] pop edx pop ecx push eax push num push edi push ebx push hexvar push esi call ebp add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v0 , hexvar ( v0 )
push { r4 , r5 } ldrb r2 , [ r0 ] ldrb r4 , [ r0 , num ] orr r1 , r4 , r2 , lsl num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsr r3 , r1 , hexvar ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num ldrb r4 , [ r0 , num ] orr r0 , r4 , r1 , lsl num orr r1 , r3 , r1 , lsr num pop { r4 , r5 } bx lr
push edi push esi xor edx , edx push ebx mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] movzx edi , byte ptr [ esi + num ] bswap eax shld edx , eax , num shl eax , num or edi , eax mov eax , edi shld edx , edi , num movzx edi , byte ptr [ esi + num ] shl eax , num or edi , eax shld edx , edi , num mov eax , edi movzx edi , byte ptr [ esi + num ] shl eax , num mov ebx , edx or edi , eax movzx eax , byte ptr [ esi + num ] shld ebx , edi , num mov ecx , edi shl ecx , num mov edx , ebx or eax , ecx pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp } ldrb r1 , [ r0 , num ] ldrb r3 , [ r0 ] ldrb ip , [ r0 , num ] orr r3 , r3 , r1 , lsl num ldrb r1 , [ r0 , num ] orr r3 , r3 , ip , lsl num orr r1 , r3 , r1 , lsl num eor r3 , r1 , r1 , ror num lsr r3 , r3 , num ldrb r8 , [ r0 , num ] bic r3 , r3 , hexvar ldrb r6 , [ r0 , num ] eor r3 , r3 , r1 , ror num ldrb sl , [ r0 , num ] ldrb r4 , [ r0 , num ] orr r0 , r8 , r3 , lsl num lsr r3 , r3 , hexvar orr r0 , r6 , r0 , lsl num lsl r1 , r3 , num orr r1 , r1 , r0 , lsr num lsl r1 , r1 , num orr r0 , sl , r0 , lsl num orr r1 , r1 , r0 , lsr num orr r0 , r4 , r0 , lsl num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp } bx lr
lbu v1 , ( a0 ) sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl a1 , v1 , hexvar sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num sll v1 , v1 , num lbu a0 , num ( a0 ) or v1 , a0 , v1 jr ra or v0 , v0 , a1
push edi push esi push ebx mov eax , dword ptr [ esp + hexvar ] movzx ecx , byte ptr [ eax ] mov ebx , num mov esi , ecx mov edi , ebx shld edi , ecx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov esi , edx shld edi , edx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov esi , edx shld edi , edx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov ecx , edx mov ebx , edi shld ebx , edx , num shl ecx , num movzx edx , byte ptr [ eax + num ] or edx , ecx mov esi , edx mov edi , ebx shld edi , edx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov esi , edx shld edi , edx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov ecx , edx mov ebx , edi shld ebx , edx , num shl ecx , num movzx eax , byte ptr [ eax + num ] or eax , ecx mov edx , ebx pop ebx pop esi pop edi ret
mov eax , dword ptr [ rdi ] movzx edx , byte ptr [ rdi + num ] bswap eax mov eax , eax shl rax , num or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rax , num or rax , rdx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
mov eax , dword ptr [ rdi ] movzx edx , byte ptr [ rdi + num ] bswap eax mov eax , eax shl rax , num or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx movzx edx , byte ptr [ rdi + num ] shl rax , num or rax , rdx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax shl qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al or qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push { r4 , r5 } ldrb r2 , [ r0 ] ldrb r4 , [ r0 , num ] orr r1 , r4 , r2 , lsl num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsr r3 , r1 , hexvar ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num ldrb r4 , [ r0 , num ] orr r0 , r4 , r1 , lsl num orr r1 , r3 , r1 , lsr num pop { r4 , r5 } bx lr
push rbp push rbx lea rbx , [ rdi + hexvar ] sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp esi , num je hexvar cmp esi , num je hexvar mov rbp , rsp lea r8d , [ rsi * num ] lea rcx , [ rip + hexvar ] mov esi , num mov rdi , rbp mov edx , hexvar xor eax , eax call hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push r12 push rbp mov rbp , rdi push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp esi , num je hexvar cmp esi , num je hexvar lea r8d , [ rsi * num ] mov r12 , rsp lea rcx , [ rip + hexvar ] mov edx , hexvar mov esi , num mov rdi , r12 xor eax , eax call hexvar mov edi , hexvar call hexvar pxor xmm0 , xmm0 mov rbx , rax mov qword ptr [ rax + hexvar ] , num mov rdi , r12 movups xmmword ptr [ rax ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbp + hexvar ] , rbx mov eax , num mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx cmp eax , num lea esi , [ ecx + num ] je hexvar cmp eax , num je hexvar sub esp , hexvar shl eax , num push eax lea eax , [ ebx - hexvar ] push eax push hexvar push num lea edi , [ esp + hexvar ] push edi call hexvar add esp , hexvar mov edx , edi mov eax , esi call hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push r12 push rbp mov rbp , rdi push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp esi , num je hexvar cmp esi , num je hexvar lea r8d , [ rsi * num ] mov r12 , rsp lea rcx , [ rip + hexvar ] mov edx , hexvar mov esi , num mov rdi , r12 xor eax , eax call hexvar mov edi , hexvar call hexvar pxor xmm0 , xmm0 mov rbx , rax mov qword ptr [ rax + hexvar ] , num mov rdi , r12 movups xmmword ptr [ rax ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbp + hexvar ] , rbx mov eax , num mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx cmp eax , num je hexvar cmp eax , num je hexvar sub esp , hexvar shl eax , num push eax lea eax , [ ebx - hexvar ] push eax push hexvar push num lea edi , [ esp + hexvar ] push edi call hexvar add esp , hexvar mov edx , edi mov eax , esi call hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbp push rbx lea rbx , [ rdi + hexvar ] sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp esi , num je hexvar cmp esi , num je hexvar mov rbp , rsp lea r8d , [ rsi * num ] lea rcx , [ rip + hexvar ] mov esi , num mov rdi , rbp mov edx , hexvar xor eax , eax call hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx lea rbx , [ rdi + hexvar ] sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp esi , num je hexvar cmp esi , num je hexvar mov rbp , rsp lea r8d , [ rsi * num ] lea rcx , [ rip + hexvar ] mov esi , num mov rdi , rbp mov edx , hexvar xor eax , eax call hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx xor ecx , ecx cmp eax , num je hexvar cmp eax , num je hexvar sub esp , hexvar shl eax , num push eax lea eax , [ ebx - hexvar ] push eax lea eax , [ ebp - hexvar ] push hexvar push num push eax mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar push hexvar call hexvar lea edx , [ eax + num ] mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num mov esi , eax and edx , hexvar sub eax , edx add eax , hexvar and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov dword ptr [ edx + eax ] , num add eax , num cmp eax , dword ptr [ ebp - hexvar ] jb hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ edi + num ] add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi ] , eax mov dword ptr [ edi + num ] , esi mov eax , num mov edi , dword ptr [ ebp - hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num addiu v1 , fp , hexvar move a2 , v0 lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx cmp eax , num lea esi , [ ecx + num ] je hexvar cmp eax , num je hexvar sub esp , hexvar shl eax , num push eax lea eax , [ ebx - hexvar ] push eax push hexvar push num lea edi , [ esp + hexvar ] push edi call hexvar add esp , hexvar mov edx , edi mov eax , esi call hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push r15 push r14 push r13 push r12 push rbx mov r12 , rsi mov rbx , rdi call hexvar test rax , rax je hexvar mov r15 , rax mov rdi , rbx call hexvar mov qword ptr [ r15 ] , rax test rax , rax je hexvar test r12 , r12 je hexvar cmp qword ptr [ r12 ] , num je hexvar call hexvar mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar cmp qword ptr [ r12 ] , num je hexvar add r12 , num xor r14d , r14d nop dword ptr [ rax + rax ] call hexvar test rax , rax je hexvar mov r13 , rax mov edi , hexvar call hexvar mov qword ptr [ r13 ] , rax test rax , rax je hexvar call hexvar mov qword ptr [ r13 + num ] , rax test rax , rax je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , qword ptr [ r12 - num ] mov rdi , rax mov edx , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ r13 + num ] mov dword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbx mov rdi , qword ptr [ r15 + num ] mov rsi , r13 call hexvar test eax , eax je hexvar cmp qword ptr [ r12 ] , num lea r12 , [ r12 + num ] jne hexvar mov edi , hexvar xor esi , esi mov rdx , r15 call hexvar mov r14 , rax jmp hexvar xor r14d , r14d jmp hexvar xor r14d , r14d mov rdi , r15 call hexvar mov rax , r14 pop rbx pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , ( v0 ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push r15 push r14 push r13 push r12 push rbx mov r12 , rsi mov rbx , rdi call hexvar test rax , rax je hexvar mov r15 , rax mov rdi , rbx call hexvar mov qword ptr [ r15 ] , rax test rax , rax je hexvar test r12 , r12 je hexvar cmp qword ptr [ r12 ] , num je hexvar call hexvar mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar cmp qword ptr [ r12 ] , num je hexvar add r12 , num xor r14d , r14d nop dword ptr [ rax + rax ] call hexvar test rax , rax je hexvar mov r13 , rax mov edi , hexvar call hexvar mov qword ptr [ r13 ] , rax test rax , rax je hexvar call hexvar mov qword ptr [ r13 + num ] , rax test rax , rax je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , qword ptr [ r12 - num ] mov rdi , rax mov edx , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ r13 + num ] mov dword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbx mov rdi , qword ptr [ r15 + num ] mov rsi , r13 call hexvar test eax , eax je hexvar cmp qword ptr [ r12 ] , num lea r12 , [ r12 + num ] jne hexvar mov edi , hexvar xor esi , esi mov rdx , r15 call hexvar mov r14 , rax jmp hexvar xor r14d , r14d jmp hexvar xor r14d , r14d mov rdi , r15 call hexvar mov rax , r14 pop rbx pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbx mov r12 , rsi mov rbx , rdi call hexvar test rax , rax je hexvar mov r15 , rax mov rdi , rbx call hexvar mov qword ptr [ r15 ] , rax test rax , rax je hexvar test r12 , r12 je hexvar cmp qword ptr [ r12 ] , num je hexvar call hexvar mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar cmp qword ptr [ r12 ] , num je hexvar add r12 , num xor r14d , r14d nop dword ptr [ rax + rax ] call hexvar test rax , rax je hexvar mov r13 , rax mov edi , hexvar call hexvar mov qword ptr [ r13 ] , rax test rax , rax je hexvar call hexvar mov qword ptr [ r13 + num ] , rax test rax , rax je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , qword ptr [ r12 - num ] mov rdi , rax mov edx , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ r13 + num ] mov dword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbx mov rdi , qword ptr [ r15 + num ] mov rsi , r13 call hexvar test eax , eax je hexvar cmp qword ptr [ r12 ] , num lea r12 , [ r12 + num ] jne hexvar mov edi , hexvar xor esi , esi mov rdx , r15 call hexvar mov r14 , rax jmp hexvar xor r14d , r14d jmp hexvar xor r14d , r14d mov rdi , r15 call hexvar mov rax , r14 pop rbx pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbx mov r12 , rsi mov rbx , rdi call hexvar test rax , rax je hexvar mov r15 , rax mov rdi , rbx call hexvar mov qword ptr [ r15 ] , rax test rax , rax je hexvar test r12 , r12 je hexvar cmp qword ptr [ r12 ] , num je hexvar call hexvar mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar cmp qword ptr [ r12 ] , num je hexvar add r12 , num xor r14d , r14d nop dword ptr [ rax + rax ] call hexvar test rax , rax je hexvar mov r13 , rax mov edi , hexvar call hexvar mov qword ptr [ r13 ] , rax test rax , rax je hexvar call hexvar mov qword ptr [ r13 + num ] , rax test rax , rax je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , qword ptr [ r12 - num ] mov rdi , rax mov edx , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ r13 + num ] mov dword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbx mov rdi , qword ptr [ r15 + num ] mov rsi , r13 call hexvar test eax , eax je hexvar cmp qword ptr [ r12 ] , num lea r12 , [ r12 + num ] jne hexvar mov edi , hexvar xor esi , esi mov rdx , r15 call hexvar mov r14 , rax jmp hexvar xor r14d , r14d jmp hexvar xor r14d , r14d mov rdi , r15 call hexvar mov rax , r14 pop rbx pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , ( v0 ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push r15 push r14 push r13 push r12 push rbx mov r12 , rsi mov rbx , rdi call hexvar test rax , rax je hexvar mov r15 , rax mov rdi , rbx call hexvar mov qword ptr [ r15 ] , rax test rax , rax je hexvar test r12 , r12 je hexvar cmp qword ptr [ r12 ] , num je hexvar call hexvar mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar cmp qword ptr [ r12 ] , num je hexvar add r12 , num xor r14d , r14d nop dword ptr [ rax + rax ] call hexvar test rax , rax je hexvar mov r13 , rax mov edi , hexvar call hexvar mov qword ptr [ r13 ] , rax test rax , rax je hexvar call hexvar mov qword ptr [ r13 + num ] , rax test rax , rax je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , qword ptr [ r12 - num ] mov rdi , rax mov edx , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ r13 + num ] mov dword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbx mov rdi , qword ptr [ r15 + num ] mov rsi , r13 call hexvar test eax , eax je hexvar cmp qword ptr [ r12 ] , num lea r12 , [ r12 + num ] jne hexvar mov edi , hexvar xor esi , esi mov rdx , r15 call hexvar mov r14 , rax jmp hexvar xor r14d , r14d jmp hexvar xor r14d , r14d mov rdi , r15 call hexvar mov rax , r14 pop rbx pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp + hexvar ] , eax test eax , eax je hexvar mov esi , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi ] , eax add esp , hexvar test eax , eax je hexvar test edi , edi je hexvar cmp dword ptr [ edi ] , num je hexvar call hexvar mov dword ptr [ esi + num ] , eax test eax , eax je hexvar cmp dword ptr [ edi ] , num je hexvar call hexvar mov esi , eax test eax , eax je hexvar sub esp , hexvar push hexvar call hexvar mov dword ptr [ esi ] , eax add esp , hexvar test eax , eax je hexvar call hexvar mov dword ptr [ esi + num ] , eax test eax , eax je hexvar call hexvar mov ebp , eax test eax , eax je hexvar sub esp , num push - num push dword ptr [ edi ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + num ] , ebp sub esp , num push esi mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] call hexvar add esp , hexvar test eax , eax je hexvar add edi , num je hexvar cmp dword ptr [ edi ] , num jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push num push hexvar call hexvar mov esi , eax add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , ( v0 ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push r15 push r14 push r13 push r12 push rbx mov r12 , rsi mov rbx , rdi call hexvar test rax , rax je hexvar mov r15 , rax mov rdi , rbx call hexvar mov qword ptr [ r15 ] , rax test rax , rax je hexvar test r12 , r12 je hexvar cmp qword ptr [ r12 ] , num je hexvar call hexvar mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar cmp qword ptr [ r12 ] , num je hexvar add r12 , num xor r14d , r14d nop dword ptr [ rax + rax ] call hexvar test rax , rax je hexvar mov r13 , rax mov edi , hexvar call hexvar mov qword ptr [ r13 ] , rax test rax , rax je hexvar call hexvar mov qword ptr [ r13 + num ] , rax test rax , rax je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , qword ptr [ r12 - num ] mov rdi , rax mov edx , hexvar call hexvar test eax , eax je hexvar mov rax , qword ptr [ r13 + num ] mov dword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbx mov rdi , qword ptr [ r15 + num ] mov rsi , r13 call hexvar test eax , eax je hexvar cmp qword ptr [ r12 ] , num lea r12 , [ r12 + num ] jne hexvar mov edi , hexvar xor esi , esi mov rdx , r15 call hexvar mov r14 , rax jmp hexvar xor r14d , r14d jmp hexvar xor r14d , r14d mov rdi , r15 call hexvar mov rax , r14 pop rbx pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lui s3 , hexvar sw s6 , hexvar ( sp ) move s6 , a0 sw s4 , hexvar ( sp ) addiu a0 , zero , hexvar sw s2 , hexvar ( sp ) move s4 , a2 sw ra , hexvar ( sp ) addiu a2 , zero , hexvar sw s5 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) addiu a1 , s3 , hexvar sw s0 , hexvar ( sp ) move s1 , a3 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu s5 , zero , hexvar lw gp , hexvar ( sp ) move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 sw s5 , ( v0 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) sw v0 , hexvar ( s0 ) sw s6 , hexvar ( s0 ) blez s1 , hexvar sw zero , hexvar ( s0 ) sw s1 , num ( s0 ) lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , s3 , hexvar jalr t9 move a0 , s1 lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , num ( s0 ) beqz s2 , hexvar nop lui a1 , hexvar lw t9 , - hexvar ( gp ) lw a0 , hexvar ( s0 ) move a2 , s2 jalr t9 addiu a1 , a1 , hexvar blez v0 , hexvar lw ra , hexvar ( sp ) beqz s4 , hexvar move a1 , s4 jal hexvar move a0 , s0 beqz v0 , hexvar lw ra , hexvar ( sp ) move v0 , s0 lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu s1 , zero , hexvar b hexvar sw s5 , num ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s4 , a0 move s1 , a1 move s3 , a2 move s2 , a3 addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 addiu v0 , zero , hexvar sw v0 , ( s0 )
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov rdi , qword ptr [ rbx + hexvar ] xor r15d , r15d mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] xor r15d , r15d mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov r15 , rbx jmp hexvar xor r15d , r15d mov rax , r15 pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea ebp , [ ebx - hexvar ] mov esi , dword ptr [ esp + hexvar ] push hexvar push ebp push hexvar call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar mov dword ptr [ eax ] , hexvar call hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ edi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test esi , esi mov dword ptr [ edi + hexvar ] , num mov dword ptr [ edi + hexvar ] , eax mov eax , hexvar cmovle esi , eax mov dword ptr [ edi + num ] , esi push hexvar push ebp push esi call hexvar add esp , hexvar test eax , eax mov dword ptr [ edi + num ] , eax mov ecx , dword ptr [ edi + hexvar ] je hexvar test ecx , ecx je hexvar mov edx , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] test edx , edx cmovne eax , dword ptr [ esp + hexvar ] sub esp , num mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push eax push ecx call hexvar add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push eax lea eax , [ ebx - hexvar ] push eax push dword ptr [ edi + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ edi + hexvar ] push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar mov dword ptr [ edi ] , hexvar push num push num push num push dword ptr [ edi + hexvar ] call hexvar add esp , hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdi , qword ptr [ rbx + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r2 , hexvar str r2 , [ r3 ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp ] cmp r3 , num ble hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp ] str r2 , [ r3 , num ] b hexvar ldr r3 , [ sp , hexvar ] mov r2 , hexvar str r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , num ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdi , qword ptr [ rbx + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov rdi , qword ptr [ rbx + hexvar ] xor r15d , r15d mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] xor r15d , r15d mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov r15 , rbx jmp hexvar xor r15d , r15d mov rax , r15 pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov rdi , qword ptr [ rbx + hexvar ] xor r15d , r15d mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] xor r15d , r15d mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov r15 , rbx jmp hexvar xor r15d , r15d mov rax , r15 pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax mov dword ptr [ eax ] , hexvar call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , num add esp , hexvar test edi , edi mov eax , hexvar cmovle edi , eax mov dword ptr [ esi + num ] , edi push hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esi + num ] call hexvar mov dword ptr [ esi + num ] , eax add esp , hexvar test eax , eax je hexvar test ebp , ebp lea eax , [ ebx - hexvar ] cmove ebp , eax sub esp , num push ebp lea eax , [ ebx - hexvar ] push eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax mov eax , num cmove esi , eax mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] imul edx , dword ptr [ ebp - num ] , hexvar add ecx , edx cmp eax , dword ptr [ ecx + hexvar ] jg hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] mov ecx , hexvar xor ecx , hexvar mov edx , eax xor edx , ecx and edx , eax cmp edx , hexvar je hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , hexvar xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , hexvar je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , hexvar add eax , num sub eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rcx , [ rcx + rcx * num ] shl rcx , num mov edx , dword ptr [ rax + rcx + hexvar ] test edx , edx setns sil movzx edx , sil mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rcx , [ rcx + rcx * num ] shl rcx , num mov edx , dword ptr [ rax + rcx + hexvar ] and edx , hexvar sub edx , hexvar sete sil movzx edi , sil mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , edx jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rcx , [ rcx + rcx * num ] shl rcx , num mov edx , dword ptr [ rax + rcx + hexvar ] and edx , hexvar sub edx , hexvar sete sil movzx edi , sil mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , edx jmp rax mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov al , byte ptr [ rbp - num ] and al , num movzx eax , al pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] imul edx , dword ptr [ ebp - num ] , hexvar add ecx , edx cmp eax , dword ptr [ ecx + hexvar ] jg hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] test eax , eax js hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] imul edx , dword ptr [ ebp - num ] , hexvar add ecx , edx cmp eax , dword ptr [ ecx + hexvar ] jg hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] imul edx , dword ptr [ ebp - num ] , hexvar add ecx , edx cmp eax , dword ptr [ ecx + hexvar ] jg hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , num ( fp ) b hexvar nop lw v1 , num ( fp ) move v0 , v1 sll v0 , v0 , num addu v0 , v0 , v1 sll v0 , v0 , num move v1 , v0 lw v0 , hexvar ( fp ) addu v0 , v0 , v1 lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] imul edx , dword ptr [ ebp - num ] , hexvar add ecx , edx cmp eax , dword ptr [ ecx + hexvar ] jg hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] test eax , eax js hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov eax , dword ptr [ rax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] imul edx , dword ptr [ ebp - num ] , hexvar add ecx , edx cmp eax , dword ptr [ ecx + hexvar ] jg hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
test esi , esi jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov eax , num ret
lui gp , hexvar bnez a1 , hexvar addiu gp , gp , - hexvar move v1 , a0 lw a0 , - hexvar ( gp ) addiu v0 , zero , num jr ra sw a0 , hexvar ( v1 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rdi mov r8d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , r8d mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , r9 cmp dword ptr [ rdx ] , num setne r10b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , r10b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rcx ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , num mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ rbp - hexvar ] test esi , esi setne al movzx esi , al mov edx , esi mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
test esi , esi jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar bnez a1 , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw v0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
lui gp , hexvar bnez a1 , hexvar addiu gp , gp , - hexvar move v1 , a0 lw a0 , - hexvar ( gp ) addiu v0 , zero , num jr ra sw a0 , hexvar ( v1 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar jmp hexvar mov edx , dword ptr [ ebp + num ] lea eax , [ eax - hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r4 , [ pc , hexvar ] mov r7 , r0 ldr r5 , [ r4 ] cmp r5 , num beq hexvar ldmib r4 , { r3 , r6 } sub r2 , r3 , num cmp r2 , r6 lslhi r3 , r6 , num bls hexvar ldr r2 , [ r5 , r3 ] add r5 , r5 , r3 cmp r2 , r7 popeq { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } cmp r2 , num beq hexvar ldr r2 , [ r4 , hexvar ] ldrb r3 , [ r4 , hexvar ] ldr r1 , [ r4 , hexvar ] strb r3 , [ r2 ] ldr r3 , [ r5 ] str r2 , [ r3 , num ] str r1 , [ r3 , hexvar ] ldr r3 , [ r7 , num ] ldr r2 , [ r7 ] ldr r1 , [ pc , hexvar ] str r7 , [ r5 ] str r2 , [ r4 , hexvar ] str r3 , [ r1 ] ldrb r1 , [ r3 ] ldr r2 , [ r7 , hexvar ] str r3 , [ r4 , hexvar ] strb r1 , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } rsbne r2 , r7 , hexvar andeq r0 , r0 , r0
push rbx mov rbx , rdi call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rdx , [ rax + rdx * num ] mov rcx , qword ptr [ rdx ] cmp rcx , rbx je hexvar test rcx , rcx je hexvar mov rcx , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rip + hexvar ] mov byte ptr [ rcx ] , sil mov rsi , qword ptr [ rdx ] mov qword ptr [ rsi + hexvar ] , rcx mov rdx , qword ptr [ rdx ] mov ecx , dword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , ecx mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + rdx * num ] , rbx call hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) jal hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) b hexvar nop move v0 , zero lw v1 , hexvar ( fp ) beq v0 , v1 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lui v1 , hexvar lb v1 , - hexvar ( v1 ) sb v1 , ( v0 ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) lui v1 , hexvar lw v1 , - hexvar ( v1 ) sw v1 , num ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ ebx + hexvar ] lea ebp , [ ecx - num ] lea edx , [ edi * num ] cmp ebp , edi jbe hexvar add eax , edx mov edx , dword ptr [ eax ] cmp edx , esi je hexvar test edx , edx je hexvar movzx edx , byte ptr [ ebx + hexvar ] mov ecx , dword ptr [ ebx + hexvar ] mov byte ptr [ ecx ] , dl mov edx , dword ptr [ eax ] mov dword ptr [ edx + num ] , ecx mov ecx , dword ptr [ ebx + hexvar ] mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ eax ] , esi mov eax , dword ptr [ esi + hexvar ] lea edx , [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ esi + num ] mov dword ptr [ edx ] , eax mov edx , dword ptr [ esi ] mov dword ptr [ ebx + hexvar ] , eax mov dword ptr [ ebx + hexvar ] , edx movzx eax , byte ptr [ eax ] mov byte ptr [ ebx + hexvar ] , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi call hexvar cmp qword ptr [ hexvar ] , num je hexvar mov rax , qword ptr [ hexvar ] mov rcx , qword ptr [ hexvar ] mov rax , qword ptr [ rax + rcx * num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jne hexvar jmp hexvar cmp qword ptr [ hexvar ] , num je hexvar mov rax , qword ptr [ hexvar ] mov rcx , qword ptr [ hexvar ] cmp qword ptr [ rax + rcx * num ] , num jne hexvar jmp hexvar xor eax , eax mov cl , al test cl , num jne hexvar jmp hexvar mov al , byte ptr [ hexvar ] mov rcx , qword ptr [ hexvar ] mov byte ptr [ rcx ] , al mov rcx , qword ptr [ hexvar ] mov rdx , qword ptr [ hexvar ] mov rsi , qword ptr [ hexvar ] mov rdx , qword ptr [ rdx + rsi * num ] mov qword ptr [ rdx + hexvar ] , rcx mov edi , dword ptr [ hexvar ] mov rcx , qword ptr [ hexvar ] mov rdx , qword ptr [ hexvar ] mov rcx , qword ptr [ rcx + rdx * num ] mov dword ptr [ rcx + hexvar ] , edi mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ hexvar ] mov rdx , qword ptr [ hexvar ] mov qword ptr [ rcx + rdx * num ] , rax call hexvar mov dword ptr [ hexvar ] , num add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 jal hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) beqz v1 , hexvar lui v0 , hexvar lw v0 , - hexvar ( v0 ) sll v0 , v0 , num addu v0 , v1 , v0 lw a0 , ( v0 ) beq a0 , s0 , hexvar lw ra , hexvar ( sp ) beqz a0 , hexvar lui a0 , hexvar lw a0 , - hexvar ( a0 ) lui a1 , hexvar lbu a1 , - hexvar ( a1 ) sb a1 , ( a0 ) lw a1 , ( v0 ) sw a0 , num ( a1 )
push rbx mov rbx , rdi call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rax ] cmp rdx , rbx je hexvar test rdx , rdx je hexvar movzx edx , byte ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov byte ptr [ rcx ] , dl mov rdx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx mov ecx , dword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , ecx mov qword ptr [ rax ] , rbx mov eax , dword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al pop rbx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] call hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ ebx + hexvar ] lea ebp , [ eax + edx * num ] mov ecx , dword ptr [ ebp ] cmp ecx , esi je hexvar test ecx , ecx je hexvar mov ecx , dword ptr [ ebx + hexvar ] movzx edi , byte ptr [ ebx + hexvar ] mov edx , edi mov byte ptr [ ecx ] , dl mov edi , dword ptr [ ebp ] mov dword ptr [ edi + num ] , ecx mov edx , dword ptr [ ebp ] mov ecx , dword ptr [ ebx + hexvar ] mov dword ptr [ edx + hexvar ] , ecx mov edx , dword ptr [ ebx + hexvar ] mov dword ptr [ eax + edx * num ] , esi call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbx mov rbx , rdi call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rdx , [ rax + rdx * num ] mov rcx , qword ptr [ rdx ] cmp rcx , rbx je hexvar test rcx , rcx je hexvar mov rcx , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rip + hexvar ] mov byte ptr [ rcx ] , sil mov rsi , qword ptr [ rdx ] mov qword ptr [ rsi + hexvar ] , rcx mov rdx , qword ptr [ rdx ] mov ecx , dword ptr [ rip + hexvar ] mov dword ptr [ rdx + hexvar ] , ecx mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rax + rdx * num ] , rbx call hexvar pop rbx ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r4 , [ pc , hexvar ] mov r7 , r0 ldr r5 , [ r4 ] cmp r5 , num beq hexvar ldmib r4 , { r3 , r6 } sub r2 , r3 , num cmp r2 , r6 lslhi r3 , r6 , num bls hexvar ldr r2 , [ r5 , r3 ] add r5 , r5 , r3 cmp r2 , r7 popeq { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } cmp r2 , num beq hexvar ldr r2 , [ r4 , hexvar ] ldrb r3 , [ r4 , hexvar ] ldr r1 , [ r4 , hexvar ] strb r3 , [ r2 ] ldr r3 , [ r5 ] str r2 , [ r3 , num ] str r1 , [ r3 , hexvar ] ldr r3 , [ r7 , num ] ldr r2 , [ r7 ] ldr r1 , [ pc , hexvar ] str r7 , [ r5 ] str r2 , [ r4 , hexvar ] str r3 , [ r1 ] ldrb r1 , [ r3 ] ldr r2 , [ r7 , hexvar ] str r3 , [ r4 , hexvar ] strb r1 , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldreq r0 , [ pc , hexvar ] ! andeq r0 , r0 , r0
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , hexvar jne hexvar test edx , edx mov eax , hexvar cmovne eax , edx xor ebx , ebx lea rsi , [ rdi + num ] mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , hexvar jne hexvar test edx , edx mov eax , hexvar cmovne eax , edx xor ebx , ebx lea rsi , [ rdi + num ] mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , hexvar jne hexvar test edx , edx mov eax , hexvar cmovne eax , edx xor ebx , ebx lea rsi , [ rdi + num ] mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , hexvar jne hexvar test edx , edx mov eax , hexvar cmovne eax , edx xor ebx , ebx lea rsi , [ rdi + num ] mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov dword ptr [ rsp + hexvar ] , esi mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rcx cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar cmp dword ptr [ rsp + hexvar ] , num je hexvar cmp dword ptr [ rsp + hexvar ] , num jl hexvar cmp dword ptr [ rsp + hexvar ] , hexvar jle hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar cmp dword ptr [ rsp + hexvar ] , hexvar je hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] add rax , num cmp dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rax je hexvar mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jmp hexvar mov eax , hexvar mov dword ptr [ rsp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rsp + hexvar ] xor ecx , ecx mov rdx , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rdx mov edx , eax mov r8 , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , hexvar jne hexvar test edx , edx mov eax , hexvar cmovne eax , edx xor ebx , ebx lea rsi , [ rdi + num ] mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov dword ptr [ rsp + hexvar ] , esi mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rcx cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar cmp dword ptr [ rsp + hexvar ] , num je hexvar cmp dword ptr [ rsp + hexvar ] , num jl hexvar cmp dword ptr [ rsp + hexvar ] , hexvar jle hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar cmp dword ptr [ rsp + hexvar ] , hexvar je hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] add rax , num cmp dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rax je hexvar mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jmp hexvar mov eax , hexvar mov dword ptr [ rsp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rsp + hexvar ] xor ecx , ecx mov rdx , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rdx mov edx , eax mov r8 , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar test edx , edx je hexvar cmp edx , num setl al cmp edx , hexvar setg cl xor cl , al mov ebx , num jne hexvar mov ebx , num cmp esi , hexvar jne hexvar test edx , edx mov eax , hexvar cmovne eax , edx xor ebx , ebx lea rsi , [ rdi + num ] mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , hexvar jne hexvar test edx , edx mov eax , hexvar cmovne eax , edx xor ebx , ebx lea rsi , [ rdi + num ] mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , hexvar jne hexvar test edx , edx mov eax , hexvar cmovne eax , edx xor ebx , ebx lea rsi , [ rdi + num ] mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r4 , r0 mov r5 , r1 mov fp , r2 bl hexvar mov sl , r0 ldr r7 , [ r4 , hexvar ] mov r1 , hexvar mov r0 , r4 bl hexvar subs r6 , r0 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r5 , hexvar ] and r3 , r3 , num cmp r3 , num beq hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax push num push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax add esp , hexvar push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov edx , edi mov ebp , eax or edx , esi je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax and eax , num cmp eax , num je hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r4 , r0 mov r5 , r1 mov fp , r2 bl hexvar mov sl , r0 ldr r7 , [ r4 , hexvar ] mov r1 , hexvar mov r0 , r4 bl hexvar subs r6 , r0 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r5 , hexvar ] and r3 , r3 , num cmp r3 , num beq hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov r13 , rsi mov qword ptr [ rsp + num ] , rdx mov qword ptr [ rsp ] , rcx mov r12 , r8 call hexvar mov r14d , eax mov r15 , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , rbx call hexvar mov rbp , rax mov eax , num test rbp , rbp je hexvar mov eax , num test r12 , r12 je hexvar mov edx , dword ptr [ r13 + hexvar ] and edx , num cmp edx , num je hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r1 mov r1 , num mov r4 , r0 mov sb , r2 bl hexvar mov r1 , hexvar mov r8 , r0 mov r0 , r4 ldr sl , [ r4 , hexvar ] bl hexvar subs r7 , r0 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r5 , [ r6 , hexvar ] and r5 , r5 , num cmp r5 , num beq hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov r9d , eax mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rdi , qword ptr [ rbp - hexvar ] mov rsi , r9 call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] and ecx , num cmp ecx , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , num xor edx , hexvar or ecx , esi or edx , hexvar xor ecx , hexvar and ecx , edx cmp ecx , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar cmp dword ptr [ hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num jmp hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] movabs r8 , hexvar sub rsi , r8 add rsi , rdi add rsi , r8 movsxd rdi , dword ptr [ rbp - hexvar ] mov rax , rsi xor r9d , r9d mov qword ptr [ rbp - hexvar ] , rdx mov edx , r9d div rdi
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov r9d , eax mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rdi , qword ptr [ rbp - hexvar ] mov rsi , r9 call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov edx , hexvar xor edx , num mov esi , ecx xor esi , edx and esi , ecx cmp esi , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] and ecx , num cmp ecx , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar cmp dword ptr [ hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num jmp hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] add rsi , qword ptr [ rbp - hexvar ] movsxd rdi , dword ptr [ rbp - hexvar ] mov rax , rsi xor r8d , r8d mov qword ptr [ rbp - hexvar ] , rdx mov edx , r8d div rdi
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r4 , r0 mov r5 , r1 mov fp , r2 bl hexvar mov sl , r0 ldr r7 , [ r4 , hexvar ] mov r1 , hexvar mov r0 , r4 bl hexvar subs r6 , r0 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r5 , hexvar ] and r3 , r3 , num cmp r3 , num beq hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r4 , r0 mov r6 , r1 mov sb , r2 bl hexvar mov r1 , hexvar mov r8 , r0 mov r0 , r4 ldr sl , [ r4 , hexvar ] bl hexvar subs r7 , r0 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r5 , [ r6 , hexvar ] and r5 , r5 , num cmp r5 , num beq hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s4 , a1 move fp , a2 lw s6 , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw s5 , hexvar ( s0 ) addiu a3 , zero , hexvar move a2 , zero move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 or v0 , s3 , s2 beqz v0 , hexvar addiu v1 , zero , num lw v0 , hexvar ( s4 ) andi v0 , v0 , num bne v0 , v1 , hexvar addiu v0 , zero , num move a2 , s3 move a3 , s2 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a2 , s2 move a1 , fp move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar addu a1 , s7 , s2 addiu v0 , zero , num sw v0 , num ( s5 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ eax ] , num jge hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov esi , dword ptr [ eax + hexvar ] sub esp , num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esi ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jns hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push num push eax call hexvar add esp , hexvar mov eax , num lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ eax ] , num jge hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov edi , eax mov eax , num call hexvar mov dword ptr [ rbx ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax ] test eax , eax jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax ] mov esi , num mov edi , eax call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , esp mov dword ptr [ esi ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num call hexvar mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) sw zero , num ( v0 ) lw v0 , hexvar ( fp ) lw s0 , hexvar ( v0 ) move a2 , zero lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , ( s0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v0 , ( v0 ) bgez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v0 , ( v0 ) addiu a1 , zero , num move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ eax ] , num jge hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov esi , dword ptr [ eax + hexvar ] sub esp , num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esi ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jns hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push num push eax call hexvar add esp , hexvar mov eax , num lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , esp mov dword ptr [ esi ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num call hexvar mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 move s3 , a2 addiu a0 , zero , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 sw v0 , hexvar ( s1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ edi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num mov byte ptr [ ebp - hexvar ] , al push dword ptr [ ebp + hexvar ] call hexvar add esp , num mov byte ptr [ ebp - num ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar movzx eax , byte ptr [ ebp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - num ] , num je hexvar mov eax , num jmp hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar ldrb r3 , [ fp , - num ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar mvn r3 , num b hexvar ldrb r3 , [ fp , - num ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , edi call hexvar mov ebp , eax mov eax , esi call hexvar mov edx , eax cmp al , num je hexvar mov eax , ebp test al , al jne hexvar mov eax , ebp cmp al , num je hexvar mov eax , num test dl , dl je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx call hexvar mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ edi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov edi , ecx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , num push ecx call hexvar mov ecx , dword ptr [ esi ] mov dword ptr [ esp + hexvar ] , num mov ebp , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num add esp , hexvar mov edx , dword ptr [ esp + hexvar ] test cl , num jne hexvar test cl , num jne hexvar test cl , num jne hexvar test cl , num jne hexvar test cl , hexvar jne hexvar test cl , hexvar jne hexvar test cl , hexvar mov edx , dword ptr [ esp + hexvar ] je hexvar test ebp , ebp jne hexvar and ecx , hexvar mov eax , num jne hexvar nop mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push edx call hexvar pop eax push dword ptr [ esp + hexvar ] call hexvar pop edx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rdx mov rbp , rsi mov rbx , rdi mov qword ptr [ rsp ] , num mov rdi , rdx call hexvar mov r12 , rax mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , qword ptr [ rbx + hexvar ] mov rcx , rsp mov rdi , rbp call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdi , r13 call hexvar cmp rax , num jne hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r13 call hexvar mov rdi , rbp mov rsi , rax call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d xor r15d , r15d xor ebp , ebp mov rdi , qword ptr [ rsp ] call hexvar mov rdi , r14 call hexvar mov rdi , r15 call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi mov edi , ecx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , num push ecx call hexvar mov ecx , dword ptr [ esi ] mov dword ptr [ esp + hexvar ] , num mov ebp , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num add esp , hexvar mov edx , dword ptr [ esp + hexvar ] test cl , num jne hexvar test cl , num jne hexvar test cl , num jne hexvar test cl , num jne hexvar test cl , hexvar jne hexvar test cl , hexvar jne hexvar test cl , hexvar mov edx , dword ptr [ esp + hexvar ] je hexvar test ebp , ebp jne hexvar and ecx , hexvar mov eax , num jne hexvar nop mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push edx call hexvar pop eax push dword ptr [ esp + hexvar ] call hexvar pop edx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rdx mov rbp , rsi mov rbx , rdi mov qword ptr [ rsp ] , num mov rdi , rdx call hexvar mov r12 , rax mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , qword ptr [ rbx + hexvar ] mov rcx , rsp mov rdi , rbp call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdi , r13 call hexvar cmp rax , num jne hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r13 call hexvar mov rdi , rbp mov rsi , rax call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d xor r15d , r15d xor ebp , ebp mov rdi , qword ptr [ rsp ] call hexvar mov rdi , r14 call hexvar mov rdi , r15 call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax mov edi , edx mov ebp , ecx mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num push ecx call hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num add esp , hexvar test byte ptr [ esi ] , num jne hexvar test byte ptr [ esi ] , num jne hexvar test byte ptr [ esi ] , num jne hexvar test byte ptr [ esi ] , num jne hexvar test byte ptr [ esi ] , hexvar jne hexvar test byte ptr [ esi ] , hexvar jne hexvar test byte ptr [ esi ] , hexvar je hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar mov edi , num test byte ptr [ esi ] , hexvar jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rdx mov rbp , rsi mov rbx , rdi mov qword ptr [ rsp ] , num mov rdi , rdx call hexvar mov r12 , rax mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , qword ptr [ rbx + hexvar ] mov rcx , rsp mov rdi , rbp call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdi , r13 call hexvar cmp rax , num jne hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r13 call hexvar mov rdi , rbp mov rsi , rax call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d xor r15d , r15d xor ebp , ebp mov rdi , qword ptr [ rsp ] call hexvar mov rdi , r14 call hexvar mov rdi , r15 call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 move s2 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) move a0 , a2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s3 , v0 sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( s0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rdx mov rbp , rsi mov rbx , rdi mov qword ptr [ rsp ] , num mov rdi , rdx call hexvar mov r12 , rax mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , qword ptr [ rbx + hexvar ] mov rcx , rsp mov rdi , rbp call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdi , r13 call hexvar cmp rax , num jne hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r13 call hexvar mov rdi , rbp mov rsi , rax call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d xor r15d , r15d xor ebp , ebp mov rdi , qword ptr [ rsp ] call hexvar mov rdi , r14 call hexvar mov rdi , r15 call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rdx mov rbp , rsi mov rbx , rdi mov qword ptr [ rsp ] , num mov rdi , rdx call hexvar mov r12 , rax mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , qword ptr [ rbx + hexvar ] mov rcx , rsp mov rdi , rbp call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdi , r13 call hexvar cmp rax , num jne hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r13 call hexvar mov rdi , rbp mov rsi , rax call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d xor r15d , r15d xor ebp , ebp mov rdi , qword ptr [ rsp ] call hexvar mov rdi , r14 call hexvar mov rdi , r15 call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rdx mov rbp , rsi mov rbx , rdi mov qword ptr [ rsp ] , num mov rdi , rdx call hexvar mov r12 , rax mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , qword ptr [ rbx + hexvar ] mov rcx , rsp mov rdi , rbp call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdi , r13 call hexvar cmp rax , num jne hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r13 call hexvar mov rdi , rbp mov rsi , rax call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d xor r15d , r15d xor ebp , ebp mov rdi , qword ptr [ rsp ] call hexvar mov rdi , r14 call hexvar mov rdi , r15 call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , num lea eax , [ esp + num ] call hexvar test eax , eax js hexvar mov esi , eax sub esp , num push eax push dword ptr [ esp + hexvar ] push edi call hexvar mov edi , eax add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp esi , edi mov eax , hexvar cmovne esi , eax mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 lw a1 , ( a1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 lw a1 , ( a1 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] jne hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov eax , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] add r3 , sp , hexvar ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bge hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] mov r1 , r3 ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ sp , hexvar ] b hexvar mvn r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push edi push esi mov edi , eax push ebx lea esi , [ edx + hexvar ] call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , num lea eax , [ esp + num ] sub esp , hexvar push ecx mov edx , dword ptr [ edx ] mov ecx , esi call hexvar add esp , hexvar test eax , eax js hexvar sub esp , num mov esi , eax push eax push dword ptr [ esp + hexvar ] push edi call hexvar mov edi , eax pop eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp esi , edi jne hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] jne hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov eax , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , num lea eax , [ esp + num ] call hexvar test eax , eax js hexvar mov esi , eax sub esp , num push eax push dword ptr [ esp + hexvar ] push edi call hexvar mov edi , eax add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp esi , edi mov eax , hexvar cmovne esi , eax mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] add r3 , sp , hexvar ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bge hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] mov r1 , r3 ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ sp , hexvar ] b hexvar mvn r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 lw a1 , ( a1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp + hexvar ] , edx test eax , eax je hexvar lea edx , [ ebx - hexvar ] mov eax , ebp call hexvar test eax , eax jne hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar lw v0 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lui a1 , hexvar move s0 , a0 addiu a1 , a1 , - hexvar move s3 , a3 jal hexvar move s2 , a2 bnez v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui s4 , hexvar lw t9 , - hexvar ( gp ) addiu s5 , sp , hexvar sw s2 , hexvar ( sp ) addiu a3 , s4 , - hexvar sw s3 , hexvar ( sp ) addiu a2 , zero , hexvar addiu a1 , zero , num jalr t9 move a0 , s5 addiu s2 , sp , hexvar lw gp , hexvar ( sp ) addiu a3 , s4 , - hexvar lw v1 , hexvar ( sp ) addiu a2 , zero , hexvar lw v0 , hexvar ( sp ) addiu a1 , zero , num move a0 , s2 lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp + hexvar ] , edx test eax , eax je hexvar lea edx , [ ebx - hexvar ] mov eax , ebp call hexvar test eax , eax jne hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r12 , rsi lea rsi , [ rip + hexvar ] mov rbx , rdi mov rbp , rdx call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r12 , rsi lea rsi , [ rip + hexvar ] mov rbx , rdi mov rbp , rdx call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rbx , rdi mov r12 , rsi mov rbp , rdx lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r12 , rsi lea rsi , [ rip + hexvar ] mov rbx , rdi mov rbp , rdx call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a3 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rbx , rdi mov r12 , rsi mov rbp , rdx lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
lui gp , hexvar lw v0 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lui a1 , hexvar move s0 , a0 addiu a1 , a1 , - hexvar move s3 , a3 jal hexvar move s2 , a2 bnez v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui s4 , hexvar lw t9 , - hexvar ( gp ) addiu s5 , sp , hexvar sw s2 , hexvar ( sp ) addiu a3 , s4 , - hexvar sw s3 , hexvar ( sp ) addiu a2 , zero , hexvar addiu a1 , zero , num jalr t9 move a0 , s5 addiu s2 , sp , hexvar lw gp , hexvar ( sp ) addiu a3 , s4 , - hexvar lw v1 , hexvar ( sp ) addiu a2 , zero , hexvar lw v0 , hexvar ( sp ) addiu a1 , zero , num move a0 , s2 lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - num ] , dl mov dl , byte ptr [ ebp - num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp + hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov dl , byte ptr [ ebp - hexvar ] movzx esi , dl and esi , num mov dword ptr [ ecx ] , esi call hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] cmp al , num je hexvar jmp hexvar movsx eax , byte ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] add ecx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar cmp byte ptr [ ebp - num ] , num setne al xor al , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] xor al , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
test dil , dil je hexvar mov eax , esi and eax , hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar ret nop word ptr [ rax + rax ] cmp edx , num je hexvar cmp edx , num mov r8d , hexvar sete cl cmp edx , num sete al or eax , ecx mov ecx , hexvar test al , al je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , cl add qword ptr [ rip + hexvar ] , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov bl , byte ptr [ ebp - hexvar ] and bl , num mov byte ptr [ eax ] , bl mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov al , byte ptr [ eax ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] and al , num sub esp , hexvar movzx eax , al mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov byte ptr [ ecx ] , al cmp byte ptr [ ecx ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movsx ecx , byte ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ hexvar ] add ecx , num mov dword ptr [ hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp byte ptr [ eax ] , num setne cl xor cl , hexvar xor cl , hexvar mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push { r4 , lr } bl hexvar subs r4 , r0 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r3 , r2 addlo r2 , r3 , num strlo r2 , [ r0 , hexvar ] strblo r4 , [ r3 ] bhs hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ r2 , hexvar ] add r3 , r3 , num str r3 , [ r2 , hexvar ] adds r0 , r4 , num movne r0 , num pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
beqz a0 , hexvar addiu v0 , zero , num ori v1 , zero , hexvar andi v0 , a1 , hexvar bne v0 , v1 , hexvar lui v1 , hexvar addiu v0 , zero , num lw v1 , hexvar ( v1 ) beq v1 , v0 , hexvar move v0 , zero jr ra nop beq a2 , v0 , hexvar move v0 , zero addiu v0 , zero , num beq a2 , v0 , hexvar xori v0 , a2 , num b hexvar sltiu v0 , v0 , num xori v0 , v0 , hexvar sltiu v0 , v0 , num bnez v0 , hexvar lui a3 , hexvar addiu v1 , zero , num lw a3 , hexvar ( a3 ) beq a3 , v1 , hexvar nop bnez a0 , hexvar ori v0 , zero , hexvar addiu v0 , zero , num beq a2 , v0 , hexvar nop beq a2 , v1 , hexvar xori v0 , a2 , num sltiu v0 , v0 , num beqz v0 , hexvar nop addiu a1 , zero , hexvar b hexvar addiu a2 , zero , hexvar andi a1 , a1 , hexvar beq a1 , v0 , hexvar addiu v0 , zero , hexvar beq a1 , v0 , hexvar nop xori a1 , a1 , hexvar b hexvar sltiu v0 , a1 , num andi a1 , a1 , hexvar beqz a1 , hexvar nop addiu a1 , zero , hexvar b hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a2 , zero , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw gp , hexvar ( sp ) lw a0 , ( v0 ) lw v1 , hexvar ( a0 )
beqz a0 , hexvar addiu v0 , zero , num ori v1 , zero , hexvar andi v0 , a1 , hexvar bne v0 , v1 , hexvar lui v1 , hexvar addiu v0 , zero , num lw v1 , hexvar ( v1 ) beq v1 , v0 , hexvar move v0 , zero jr ra nop beq a2 , v0 , hexvar move v0 , zero addiu v0 , zero , num beq a2 , v0 , hexvar xori v0 , a2 , num b hexvar sltiu v0 , v0 , num xori v0 , v0 , hexvar sltiu v0 , v0 , num bnez v0 , hexvar lui a3 , hexvar addiu v1 , zero , num lw a3 , hexvar ( a3 ) beq a3 , v1 , hexvar nop bnez a0 , hexvar ori v0 , zero , hexvar addiu v0 , zero , num beq a2 , v0 , hexvar nop beq a2 , v1 , hexvar xori v0 , a2 , num sltiu v0 , v0 , num beqz v0 , hexvar nop addiu a1 , zero , hexvar b hexvar addiu a2 , zero , hexvar andi a1 , a1 , hexvar beq a1 , v0 , hexvar addiu v0 , zero , hexvar beq a1 , v0 , hexvar nop xori a1 , a1 , hexvar b hexvar sltiu v0 , a1 , num andi a1 , a1 , hexvar beqz a1 , hexvar nop addiu a1 , zero , hexvar b hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a2 , zero , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw gp , hexvar ( sp ) lw a0 , ( v0 ) lw v1 , hexvar ( a0 ) lw v0 , hexvar ( a0 ) sltu v0 , v1 , v0 beqz v0 , hexvar addiu v0 , v1 , num sw v0 , hexvar ( a0 ) sb a2 , ( v1 ) lui a0 , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num addiu sp , sp , hexvar lw v1 , hexvar ( a0 ) addiu v1 , v1 , num jr ra sw v1 , hexvar ( a0 ) addiu a1 , zero , hexvar b hexvar addiu a2 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop b hexvar lui a0 , hexvar addiu a1 , zero , hexvar b hexvar addiu a2 , zero , hexvar
push esi push ebx movzx eax , al call hexvar add ebx , hexvar sub esp , hexvar call hexvar test al , al mov edx , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ eax + hexvar ] cmp ecx , dword ptr [ eax + hexvar ] jae hexvar lea esi , [ ecx + num ] mov dword ptr [ eax + hexvar ] , esi mov byte ptr [ ecx ] , dl add dword ptr [ ebx + hexvar ] , num test dl , dl setne al add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - num ] , dl mov dl , byte ptr [ ebp - num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp + hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov dl , byte ptr [ ebp - hexvar ] movzx esi , dl and esi , num mov dword ptr [ ecx ] , esi call hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] cmp al , num je hexvar jmp hexvar movsx eax , byte ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] add ecx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar cmp byte ptr [ ebp - num ] , num setne al xor al , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] xor al , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - hexvar ] , dl mov dl , byte ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] and dl , num movzx ebx , dl mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov byte ptr [ ebp - hexvar ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar jmp hexvar movsx eax , byte ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] add ecx , num mov dword ptr [ hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp byte ptr [ ebp - hexvar ] , num setne al xor al , hexvar xor al , hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar movzx eax , al call hexvar mov esi , eax test al , al je hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] cmp edx , dword ptr [ eax + hexvar ] jae hexvar lea ecx , [ edx + num ] mov dword ptr [ eax + hexvar ] , ecx mov eax , esi mov byte ptr [ edx ] , al add dword ptr [ ebx + hexvar ] , num mov eax , esi test al , al setne al add esp , num pop ebx pop esi ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r1 subs r4 , r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r3 , r4 mov r2 , r0 mov r1 , num mov r0 , r5 bl hexvar bl hexvar mov r8 , r0 ldr r3 , [ r0 ] cmp r3 , num beq hexvar mov r4 , r0 ldr r7 , [ pc , hexvar ] mov r6 , num mov r2 , r7 mov r1 , r6 mov r0 , r5 bl hexvar ldr r3 , [ r4 , num ] ! cmp r3 , num bne hexvar mov r1 , r5 mov r0 , hexvar bl hexvar mov r0 , r8 bl hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push r13 push r12 push rbp push rbx mov rbp , rsi sub rsp , num test rdi , rdi je hexvar lea rsi , [ rip + hexvar ] mov rbx , rdi mov edx , num xor edi , edi call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov rdi , rbp xor eax , eax call hexvar call hexvar mov rcx , qword ptr [ rax ] mov r13 , rax test rcx , rcx je hexvar lea r12 , [ rip + hexvar ] mov rbx , rax nop dword ptr [ rax + rax ] xor eax , eax add rbx , num mov rdx , r12 mov esi , num mov rdi , rbp call hexvar mov rcx , qword ptr [ rbx ] test rcx , rcx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov esi , num mov rdx , rax mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ]
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rsi test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov rdi , rbp mov eax , num call hexvar call hexvar mov r13 , rax mov rcx , qword ptr [ rax ] test rcx , rcx je hexvar mov rbx , rax lea r12 , [ rip + hexvar ] mov rdx , r12 mov esi , num mov rdi , rbp mov eax , num call hexvar add rbx , num mov rcx , qword ptr [ rbx ] test rcx , rcx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rdi , r13 call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push { r4 , r5 , r6 , r7 , r8 , lr } subs r4 , r0 , num mov r2 , num mov r5 , r1 beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r3 , r4 mov r2 , r0 mov r1 , num mov r0 , r5 bl hexvar bl hexvar ldr r3 , [ r0 ] mov r7 , r0 cmp r3 , num beq hexvar mov r4 , r0 ldr r6 , [ pc , hexvar ] mov r2 , r6 mov r1 , num mov r0 , r5 bl hexvar ldr r3 , [ r4 , num ] ! cmp r3 , num bne hexvar mov r1 , r5 mov r0 , hexvar bl hexvar mov r0 , r7 pop { r4 , r5 , r6 , r7 , r8 , lr } b hexvar ldr r1 , [ pc , hexvar ] bl hexvar mov r1 , num mov r2 , r0 mov r0 , r5 bl hexvar b hexvar andeq r8 , sb , ip , asr r6 andeq r8 , sb , ip , asr r7 andeq r8 , sb , r0 , asr num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a0 , hexvar move s1 , a1 move s0 , a0 addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a3 , s0 move a2 , v0 addiu a1 , zero , num move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a3 , ( v0 ) beqz a3 , hexvar move s3 , v0 move s0 , v0 lui s2 , hexvar addiu s2 , s2 , - hexvar move a2 , s2 addiu a1 , zero , num move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu s0 , s0 , num lw a3 , ( s0 ) bnez a3 , hexvar move a2 , s2 move a1 , s1 addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , s3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , v0 addiu a1 , zero , num move a0 , s1 lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move s0 , a0 addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , s0 move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw a3 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rax , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rax , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rsi mov dword ptr [ rbp - hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar push edi push eax push num push esi call hexvar add esp , hexvar call hexvar mov ebp , eax mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ eax ] test eax , eax je hexvar lea edi , [ ebx - hexvar ] lea esi , [ esi ] push eax push edi add ebp , num push num push esi call hexvar mov eax , dword ptr [ ebp ] add esp , hexvar test eax , eax jne hexvar sub esp , num push esi push hexvar call hexvar pop eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move s0 , a0 addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , s0 move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw a3 , ( v0 )
push { fp , lr } umull fp , ip , r0 , r1 adds r3 , ip , num movne r3 , num cmp fp , num blt hexvar cmp r3 , num bne hexvar bl hexvar cmp r0 , num popne { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , hexvar xor edx , edx div dword ptr [ ebp - num ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] xor eax , eax mov edx , eax movabs rax , hexvar div rsi mov rdx , qword ptr [ rbp - num ] sub rax , rdx setb cl movzx r8d , cl mov edx , r8d mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] xor eax , eax mov edx , eax movabs rax , hexvar div rsi mov rdx , qword ptr [ rbp - num ] sub rax , rdx setb cl movzx r8d , cl mov edx , r8d mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) move s0 , a0 beqz a1 , hexvar move s1 , a1 lw t9 , - hexvar ( gp ) move a1 , s1 jalr t9 move a0 , s0 beqz v0 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu s1 , zero , num b hexvar addiu s0 , zero , num jal hexvar mul a0 , s0 , s1
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar xor ecx , ecx mov edx , ecx div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx xor ebx , ebx mov dword ptr [ ebp - hexvar ] , edx mov edx , ebx div dword ptr [ ecx ]
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edi mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , num pop esi pop edi pop ebp ret num
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edi mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , num pop esi pop edi pop ebp ret num
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx mov eax , dword ptr [ ebp + num ] leave ret num
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edi mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , num pop esi pop edi pop ebp ret num
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) lw v0 , hexvar ( fp ) lw a0 , ( fp ) lw v1 , num ( fp ) sw a0 , ( v0 ) sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edi mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , num pop esi pop edi pop ebp ret num
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) lw v0 , hexvar ( fp ) lw a0 , ( fp ) lw v1 , num ( fp ) sw a0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx mov eax , dword ptr [ ebp + num ] leave ret num
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx mov eax , dword ptr [ ebp + num ] leave ret num
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx mov rdi , qword ptr [ rax ] call hexvar shr rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx mov rdi , qword ptr [ rax ] call hexvar shr rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rsi cmp qword ptr [ rax ] , num setne dil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , dil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , hexvar cmp qword ptr [ rcx + hexvar ] , rdx sete sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rdx call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] test rsi , rsi setne al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] blx r3 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , num cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) beqz a1 , hexvar addiu v0 , zero , hexvar lw v0 , ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) beqz a1 , hexvar lui a3 , hexvar lw v0 , ( a0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] blx r3 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) beqz a1 , hexvar lui a3 , hexvar lw v0 , ( a0 )
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax test rax , rax je hexvar pop rcx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test eax , eax je hexvar test edx , edx je hexvar mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] test ecx , ecx je hexvar sub esp , num push edx push eax call ecx mov esi , eax add esp , hexvar test eax , eax je hexvar mov eax , esi add esp , num pop ebx pop esi ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov r15 , rdi test rdi , rdi sete byte ptr [ rsp + num ] test rsi , rsi sete byte ptr [ rsp + num ] mov eax , hexvar mov ebp , hexvar mov r12d , hexvar mov r13d , hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov eax , hexvar xor ebx , ebx cmp eax , hexvar jg hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + num ] mov rdi , r15 mov rsi , r14 call rax mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r12d jmp hexvar nop cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar movzx ecx , byte ptr [ rsp + num ] cmp byte ptr [ rsp + num ] , num mov eax , hexvar cmovne eax , ebp test cl , cl cmovne eax , ebp jmp hexvar mov rax , qword ptr [ r15 ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r13d jmp hexvar mov eax , hexvar mov rbx , qword ptr [ rsp + hexvar ] jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax test rax , rax je hexvar pop rcx ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , hexvar ja hexvar mov edx , dword ptr [ ebp + num ] shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax nop dword ptr [ rax ] lea rax , [ rip + hexvar ] ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , hexvar ja hexvar mov edx , dword ptr [ ebp + num ] shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
sltiu v0 , a0 , hexvar beqz v0 , hexvar move v0 , zero sll v0 , a0 , num lui a0 , hexvar addiu a0 , a0 , - hexvar addu a0 , a0 , v0 lw v0 , ( a0 )
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax nop dword ptr [ rax ] lea rax , [ rip + hexvar ] ret
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax nop dword ptr [ rax ] lea rax , [ rip + hexvar ] ret
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax nop dword ptr [ rax ] lea rax , [ rip + hexvar ] ret
sltiu v0 , a0 , hexvar beqz v0 , hexvar nop sll v0 , a0 , num lui a0 , hexvar addiu a0 , a0 , hexvar addu a0 , a0 , v0 lw v0 , ( a0 )
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 ldr r2 , [ fp , - hexvar ] mov r1 , r3 ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 move a2 , s1 lw gp , hexvar ( sp ) move a0 , s0 lw ra , hexvar ( sp ) move a1 , v0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar pop ebx pop esi ret
push rbp push rbx mov ebp , esi mov rbx , rdi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rdi , rbx pop rbx pop rbp mov rsi , rax jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ]
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rcx , rax mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , hexvar cmp ecx , eax mov eax , hexvar mov ecx , hexvar cmovle ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp - hexvar ] , hexvar setle al mov dword ptr [ ebp - hexvar ] , hexvar and al , num mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , hexvar cmp ecx , eax mov eax , hexvar mov ecx , hexvar cmovle ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp - hexvar ] , hexvar setle al mov dword ptr [ ebp - hexvar ] , hexvar and al , num mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - num ] ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 movge r3 , num movlt r3 , num and r2 , r3 , hexvar ldr r3 , [ fp , - hexvar ] lsr r3 , r3 , hexvar and r3 , r3 , hexvar eor r3 , r3 , r2 and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , hexvar cmp ecx , eax mov eax , hexvar mov ecx , hexvar cmovle ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp - hexvar ] , hexvar setle al mov dword ptr [ ebp - hexvar ] , hexvar and al , num mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp + hexvar ] add eax , edx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] setge dl mov eax , dword ptr [ ebp + hexvar ] shr eax , hexvar xor eax , edx movzx eax , al leave ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov bl , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar cmp eax , dword ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , bl jg hexvar cmp dword ptr [ ebp - hexvar ] , hexvar setle al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp + hexvar ] add eax , edx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] setge dl mov eax , dword ptr [ ebp + hexvar ] shr eax , hexvar xor eax , edx movzx eax , al leave ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 sw v0 , num ( fp ) lw v1 , num ( fp ) lw v0 , hexvar ( fp ) slt v0 , v1 , v0 xori v0 , v0 , num andi v1 , v0 , hexvar lw v0 , hexvar ( fp ) srl v0 , v0 , hexvar andi v0 , v0 , hexvar xor v0 , v1 , v0 andi v0 , v0 , hexvar move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp + hexvar ] add eax , edx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] setge dl mov eax , dword ptr [ ebp + hexvar ] shr eax , hexvar xor eax , edx movzx eax , al leave ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - num ] ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 movge r3 , num movlt r3 , num and r2 , r3 , hexvar ldr r3 , [ fp , - hexvar ] lsr r3 , r3 , hexvar and r3 , r3 , hexvar eor r3 , r3 , r2 and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , num add esp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
ldr r3 , [ r0 , num ] ldr r2 , [ r1 , num ] cmp r3 , r2 beq hexvar mov r0 , num bx lr ldr r2 , [ r0 , num ] ldr ip , [ r1 , num ] eor r2 , r2 , ip bics r2 , r2 , hexvar bne hexvar ldr ip , [ r0 , hexvar ] ldr r2 , [ r1 , hexvar ] cmp ip , r2 beq hexvar mov r0 , num bx lr ldr ip , [ r0 , hexvar ] ldr r2 , [ r1 , hexvar ] cmp ip , r2 beq hexvar mov r0 , num bx lr sub r3 , r3 , num cmp r3 , num bls hexvar ldr r0 , [ r0 , hexvar ] ldr r3 , [ r1 , hexvar ] cmp r0 , r3 movne r0 , num moveq r0 , num bx lr mov r0 , num bx lr mov r0 , num bx lr
push edi push esi push ebx mov esi , dword ptr [ eax + num ] cmp esi , dword ptr [ edx + num ] je hexvar xor eax , eax pop ebx pop esi pop edi ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) lw a0 , num ( fp ) lw a1 , num ( a0 )
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) lw a0 , num ( fp ) lw a1 , num ( a0 )
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rsi + num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + num ] mov rdx , rax xor rdx , hexvar movabs rsi , hexvar and rdx , rsi mov rdi , - num mov r8 , rdi xor r8 , rsi and rax , r8 mov r9 , rcx xor r9 , hexvar and r9 , rsi and rcx , r8 or rdx , rax or r9 , rcx xor rdx , r9 xor rdx , hexvar mov rax , rdi xor rax , hexvar movabs rcx , hexvar xor rdi , rcx or rdx , rax or rdi , rcx xor rdx , hexvar and rdx , rdi cmp rdx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] sete dl and dl , num movzx esi , dl mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] pop rbp ret
ldr r3 , [ r0 , num ] ldr r2 , [ r1 , num ] cmp r3 , r2 beq hexvar mov r0 , num bx lr ldr r2 , [ r0 , num ] ldr ip , [ r1 , num ] eor r2 , r2 , ip bics r2 , r2 , hexvar bne hexvar ldr ip , [ r0 , hexvar ] ldr r2 , [ r1 , hexvar ] cmp ip , r2 beq hexvar mov r0 , num bx lr ldr ip , [ r0 , hexvar ] ldr r2 , [ r1 , hexvar ] cmp ip , r2 beq hexvar mov r0 , num bx lr sub r3 , r3 , num cmp r3 , num bls hexvar ldr r0 , [ r0 , hexvar ] ldr r3 , [ r1 , hexvar ] cmp r0 , r3 movne r0 , num moveq r0 , num bx lr mov r0 , num bx lr mov r0 , num bx lr
mov edx , dword ptr [ rdi + num ] mov eax , num cmp edx , dword ptr [ rsi + num ] je hexvar ret mov rcx , qword ptr [ rdi + num ] xor rcx , qword ptr [ rsi + num ] test rcx , - hexvar jne hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx jne hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx jne hexvar sub edx , num mov eax , num cmp edx , num jbe hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rax sete al movzx eax , al jmp hexvar
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) lw a0 , num ( fp ) lw a1 , num ( a0 )
mov edx , dword ptr [ rdi + num ] xor eax , eax cmp edx , dword ptr [ rsi + num ] je hexvar ret nop dword ptr [ rax ] mov rcx , qword ptr [ rdi + num ] xor rcx , qword ptr [ rsi + num ] test rcx , - hexvar jne hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx jne hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx jne hexvar sub edx , num mov eax , num cmp edx , num jbe hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rax sete al movzx eax , al ret
mov edx , dword ptr [ rdi + num ] xor eax , eax cmp edx , dword ptr [ rsi + num ] je hexvar ret nop dword ptr [ rax ] mov rcx , qword ptr [ rdi + num ] xor rcx , qword ptr [ rsi + num ] test rcx , - hexvar jne hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx jne hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx jne hexvar sub edx , num mov eax , num cmp edx , num jbe hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rax sete al movzx eax , al ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 move s0 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw a0 , num ( a2 )
push rbp push rbx mov rbp , rsi mov rbx , rdx xor esi , esi sub rsp , hexvar mov qword ptr [ rdx + num ] , rdi mov dword ptr [ rdx + hexvar ] , num lea rdx , [ rsp + num ] mov rdi , rbp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar lea rsi , [ rip + hexvar ] mov rdx , rbx mov rdi , rax call hexvar test eax , eax js hexvar lea rsi , [ rip - hexvar ] mov dword ptr [ rbx + hexvar ] , num mov rdx , rbx mov rdi , rbp call hexvar test eax , eax js hexvar mov rdi , qword ptr [ rbx ] xor esi , esi call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rip - hexvar ] xor edx , edx call hexvar mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push r12 push rbp mov r12 , rsi push rbx mov rbx , rdx xor esi , esi sub rsp , hexvar mov qword ptr [ rdx + num ] , rdi mov dword ptr [ rdx + hexvar ] , num lea rdx , [ rsp + num ] mov rdi , r12 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax mov rbp , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar mov eax , dword ptr [ rbx + hexvar ] test eax , eax je hexvar lea rsi , [ rip - hexvar ] mov dword ptr [ rbx + hexvar ] , num mov rdx , rbx mov rdi , r12 call hexvar test eax , eax js hexvar mov rdi , qword ptr [ rbx ] xor esi , esi call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rip - hexvar ] xor edx , edx call hexvar mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + hexvar ] , num lea eax , [ esp + hexvar ] push eax push num push edi call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax je hexvar sub esp , num push esi push dword ptr [ ebx + hexvar ] push eax call hexvar add esp , hexvar test eax , eax js hexvar mov dword ptr [ esi + hexvar ] , num sub esp , num push esi lea eax , [ ebx - hexvar ] push eax push edi call hexvar add esp , hexvar test eax , eax js hexvar sub esp , num push num push dword ptr [ esi ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar mov eax , dword ptr [ esi ] mov eax , dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax mov eax , dword ptr [ esi ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push r12 push rbp mov r12 , rsi push rbx mov rbx , rdx xor esi , esi sub rsp , hexvar mov qword ptr [ rdx + num ] , rdi mov dword ptr [ rdx + hexvar ] , num lea rdx , [ rsp + num ] mov rdi , r12 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax mov rbp , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar mov eax , dword ptr [ rbx + hexvar ] test eax , eax je hexvar lea rsi , [ rip - hexvar ] mov dword ptr [ rbx + hexvar ] , num mov rdx , rbx mov rdi , r12 call hexvar test eax , eax js hexvar mov rdi , qword ptr [ rbx ] xor esi , esi call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rip - hexvar ] xor edx , edx call hexvar mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a2 sw s3 , hexvar ( sp ) addiu a2 , sp , hexvar sw s1 , hexvar ( sp ) move s3 , a1 sw gp , hexvar ( sp ) move a1 , zero sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw a0 , num ( s0 ) move a0 , s3 sw zero , hexvar ( s0 ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) bal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 beqz v0 , hexvar sw v0 , hexvar ( s0 ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar lui s5 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , num addiu a1 , a1 , - hexvar sw v0 , hexvar ( s0 ) move a2 , s0 bal hexvar move a0 , s3 bltz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , zero bal hexvar lw a0 , ( s0 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar lw a0 , hexvar ( s0 ) lw v0 , ( s0 ) lw a0 , hexvar ( v0 ) beqz a0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw v0 , ( s0 ) lui a1 , hexvar lw t9 , - hexvar ( gp ) lw a0 , hexvar ( v0 ) move a2 , zero bal hexvar addiu a1 , a1 , - hexvar lw gp , hexvar ( sp ) lw v1 , hexvar ( sp ) lw v0 , ( s2 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , hexvar ( sp ) addiu v0 , zero , hexvar beq a0 , v0 , hexvar lw t9 , - hexvar ( gp ) bal - hexvar lw s0 , num ( s0 ) lui a0 , hexvar lw gp , hexvar ( sp ) move a2 , v0 addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a2 sw s2 , hexvar ( sp ) addiu a2 , sp , hexvar sw gp , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) move a1 , zero sw a0 , num ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a2 sw s2 , hexvar ( sp ) addiu a2 , sp , hexvar sw gp , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) move a1 , zero sw a0 , num ( s0 )
push rbp push rbx mov rbp , rsi mov rbx , rdx xor esi , esi sub rsp , hexvar mov qword ptr [ rdx + num ] , rdi mov dword ptr [ rdx + hexvar ] , num lea rdx , [ rsp + num ] mov rdi , rbp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar lea rsi , [ rip + hexvar ] mov rdx , rbx mov rdi , rax call hexvar test eax , eax js hexvar lea rsi , [ rip - hexvar ] mov dword ptr [ rbx + hexvar ] , num mov rdx , rbx mov rdi , rbp call hexvar test eax , eax js hexvar mov rdi , qword ptr [ rbx ] xor esi , esi call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rip - hexvar ] xor edx , edx call hexvar mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbp , rsi mov rbx , rdx xor esi , esi sub rsp , hexvar mov qword ptr [ rdx + num ] , rdi mov dword ptr [ rdx + hexvar ] , num lea rdx , [ rsp + num ] mov rdi , rbp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar lea rsi , [ rip + hexvar ] mov rdx , rbx mov rdi , rax call hexvar test eax , eax js hexvar lea rsi , [ rip - hexvar ] mov dword ptr [ rbx + hexvar ] , num mov rdx , rbx mov rdi , rbp call hexvar test eax , eax js hexvar mov rdi , qword ptr [ rbx ] xor esi , esi call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rip - hexvar ] xor edx , edx call hexvar mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar call hexvar test eax , eax mov edi , eax je hexvar sub esp , num push num push eax push esi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + hexvar ] , eax je hexvar sub esp , hexvar push edi call hexvar lea edx , [ eax + hexvar ] add esp , hexvar add eax , num mov dword ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , hexvar cmovs eax , edx sar eax , num mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax sub esp , num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar add eax , eax push hexvar push eax push num call hexvar mov dword ptr [ esp ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar nop xor eax , eax mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push r15 push r14 push rbx sub rsp , hexvar xor r15d , r15d test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax call hexvar test rax , rax je hexvar mov r14 , rax xor r15d , r15d mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov rdi , r14 call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea eax , [ rax + rcx ] add eax , num sar eax , num mov dword ptr [ rsp + num ] , eax lea rax , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + hexvar ] , num mov byte ptr [ rsp + num ] , hexvar lea rdi , [ rsp + num ] xor esi , esi call hexvar lea esi , [ rax + rax ] mov edi , num mov edx , hexvar call hexvar mov r15d , eax mov rdi , r14 call hexvar mov eax , r15d add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar xor r15d , r15d test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax call hexvar test rax , rax je hexvar mov r14 , rax xor r15d , r15d mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov rdi , r14 call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea eax , [ rax + rcx ] add eax , num sar eax , num mov dword ptr [ rsp + num ] , eax lea rax , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + hexvar ] , num mov byte ptr [ rsp + num ] , hexvar lea rdi , [ rsp + num ] xor esi , esi call hexvar lea esi , [ rax + rax ] mov edi , num mov edx , hexvar call hexvar mov r15d , eax mov rdi , r14 call hexvar mov eax , r15d add rsp , hexvar pop rbx pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar bl hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar mov r2 , num ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , num b hexvar ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r3 , r3 , num add r2 , r3 , num cmp r3 , num movlt r3 , r2 movge r3 , r3 asr r3 , r3 , num str r3 , [ sp , hexvar ] add r3 , sp , hexvar str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mvn r3 , num strb r3 , [ sp , hexvar ] add r3 , sp , hexvar mov r1 , num mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num str r3 , [ sp , hexvar ] mov r2 , hexvar ldr r1 , [ sp , hexvar ] mov r0 , num bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lw t9 , - hexvar ( gp ) move a2 , zero move a1 , v0 jalr t9 move a0 , s1 lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 addiu v1 , v0 , num bgez v1 , hexvar lw gp , hexvar ( sp ) addiu v1 , v0 , hexvar addiu v0 , zero , num lw t9 , - hexvar ( gp ) sra v1 , v1 , num sw v0 , hexvar ( sp ) addiu v0 , zero , - num move a1 , zero sw v1 , hexvar ( sp ) sb v0 , hexvar ( sp ) addiu v0 , sp , hexvar addiu a0 , sp , hexvar jalr t9 sw v0 , hexvar ( sp ) addiu a2 , zero , hexvar lw gp , hexvar ( sp ) sll a1 , v0 , num lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num move a0 , s2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) b hexvar lw v0 , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) b hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 move a2 , zero move a1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , v0 , num bltz v0 , hexvar nop sra v0 , v0 , num sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar sw v0 , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) addiu v0 , zero , - num sb v0 , hexvar ( sp ) move a1 , zero addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a2 , zero , hexvar sll a1 , v0 , num addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , s0 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , s0 b hexvar addiu v0 , v0 , num move s0 , zero move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s0 , zero b hexvar move s0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
push r15 push r14 push rbx sub rsp , hexvar xor r15d , r15d test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax call hexvar test rax , rax je hexvar mov r14 , rax xor r15d , r15d mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov rdi , r14 call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea eax , [ rax + rcx ] add eax , num sar eax , num mov dword ptr [ rsp + num ] , eax lea rax , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + hexvar ] , num mov byte ptr [ rsp + num ] , hexvar lea rdi , [ rsp + num ] xor esi , esi call hexvar lea esi , [ rax + rax ] mov edi , num mov edx , hexvar call hexvar mov r15d , eax mov rdi , r14 call hexvar mov eax , r15d add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar xor r15d , r15d test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax call hexvar test rax , rax je hexvar mov r14 , rax xor r15d , r15d mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov rdi , r14 call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea eax , [ rax + rcx ] add eax , num sar eax , num mov dword ptr [ rsp + num ] , eax lea rax , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + hexvar ] , num mov byte ptr [ rsp + num ] , hexvar lea rdi , [ rsp + num ] xor esi , esi call hexvar lea esi , [ rax + rax ] mov edi , num mov edx , hexvar call hexvar mov r15d , eax mov rdi , r14 call hexvar mov eax , r15d add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar xor r15d , r15d test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax call hexvar test rax , rax je hexvar mov r14 , rax xor r15d , r15d mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov rdi , r14 call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea eax , [ rax + rcx ] add eax , num sar eax , num mov dword ptr [ rsp + num ] , eax lea rax , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + hexvar ] , num mov byte ptr [ rsp + num ] , hexvar lea rdi , [ rsp + num ] xor esi , esi call hexvar lea esi , [ rax + rax ] mov edi , num mov edx , hexvar call hexvar mov r15d , eax mov rdi , r14 call hexvar mov eax , r15d add rsp , hexvar pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lw t9 , - hexvar ( gp ) move a2 , zero move a1 , v0 jalr t9 move a0 , s1 lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 addiu v1 , v0 , num bgez v1 , hexvar lw gp , hexvar ( sp ) addiu v1 , v0 , hexvar addiu v0 , zero , num lw t9 , - hexvar ( gp ) sra v1 , v1 , num sw v0 , hexvar ( sp ) addiu v0 , zero , - num move a1 , zero sw v1 , hexvar ( sp ) sb v0 , hexvar ( sp ) addiu v0 , sp , hexvar addiu a0 , sp , hexvar jalr t9 sw v0 , hexvar ( sp ) addiu a2 , zero , hexvar lw gp , hexvar ( sp ) sll a1 , v0 , num lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num move a0 , s2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) b hexvar lw v0 , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) b hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rbx + hexvar ] , num lea rcx , [ rip + hexvar ] je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar xor edx , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rbx + hexvar ] , num lea rcx , [ rip + hexvar ] jne hexvar xor edx , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar xor edx , edx cmp dword ptr [ rip + hexvar ] , num mov rcx , qword ptr [ rbx + hexvar ] je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar mov rcx , rbp xor edx , edx xor esi , esi mov rdi , rbx call hexvar mov rbp , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar movzx edi , byte ptr [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] call hexvar movzx eax , al add rbp , rax mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rbx + hexvar ] , num lea rcx , [ rip + hexvar ] je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar xor edx , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rbx + hexvar ] , num lea rcx , [ rip + hexvar ] jne hexvar xor edx , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar xor edx , edx cmp dword ptr [ rip + hexvar ] , num mov rcx , qword ptr [ rbx + hexvar ] je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar mov rcx , rbp xor edx , edx xor esi , esi mov rdi , rbx call hexvar mov rbp , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar movzx edi , byte ptr [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] call hexvar movzx eax , al add rbp , rax mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lbu v0 , hexvar ( v0 ) sw s2 , hexvar ( sp ) move s2 , a1 sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lui v0 , hexvar lui s3 , hexvar addiu v1 , s3 , hexvar lw v0 , hexvar ( v1 ) bnez v0 , hexvar addiu a1 , zero , num lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar lui v0 , hexvar lui v1 , hexvar addiu v0 , zero , num lw v1 , hexvar ( v1 ) beq v1 , v0 , hexvar lui v0 , hexvar lw s3 , hexvar ( v0 ) lbu v0 , hexvar ( s0 ) beqz v0 , hexvar lui a3 , hexvar lw a0 , hexvar ( s0 )
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp byte ptr [ rip + hexvar ] , num je hexvar mov rdi , qword ptr [ rdi + hexvar ] mov rsi , rsp call hexvar cmp dword ptr [ rip + hexvar ] , num mov edx , num cmovne edx , dword ptr [ rip + hexvar ] mov rcx , rax mov esi , hexvar mov edi , num mov eax , num call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rip + hexvar ] mov ecx , hexvar mov edx , dword ptr [ rip + hexvar ] mov rsi , rsp call hexvar cmp dword ptr [ rip + hexvar ] , num mov edx , num cmovne edx , dword ptr [ rip + hexvar ] mov rcx , rax mov esi , hexvar mov edi , num mov eax , num call hexvar movzx eax , byte ptr [ rbx + hexvar ] movzx edx , al cmp byte ptr [ rip + hexvar ] , num je hexvar test al , al je hexvar mov esi , dword ptr [ rbx + hexvar ] jmp hexvar mov esi , dword ptr [ rbx + hexvar ] mov ecx , num mov rdi , qword ptr [ rbx ] call hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v1 , hexvar ( v0 ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lui v0 , hexvar lw s0 , hexvar ( v0 ) b hexvar nop move s0 , zero addiu v0 , fp , hexvar lw a2 , hexvar ( fp ) addiu a1 , zero , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , s0 lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v1 , hexvar ( v0 ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lui v0 , hexvar lw s0 , hexvar ( v0 ) b hexvar nop move s0 , zero lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rbp , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar lea rcx , [ rip + hexvar ] cmp byte ptr [ rbx + hexvar ] , num jne hexvar mov edx , num cmp dword ptr [ rip + hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] mov edx , num cmp dword ptr [ rip + hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rcx , rbp mov edx , num mov esi , num mov rdi , rbx call hexvar mov rbp , rax cmp dword ptr [ rip + hexvar ] , num jne hexvar mov rax , rbp mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rbx + hexvar ] , num mov ecx , hexvar jne hexvar cmp dword ptr [ rip + hexvar ] , num mov edx , num mov esi , hexvar cmovne edx , dword ptr [ rip + hexvar ] mov edi , num xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rbx + hexvar ] , num mov ecx , hexvar jne hexvar cmp dword ptr [ rip + hexvar ] , num mov edx , num mov esi , hexvar cmovne edx , dword ptr [ rip + hexvar ] mov edi , num xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp dword ptr [ rip + hexvar ] , num mov edx , num mov rcx , qword ptr [ rbx + hexvar ] cmovne edx , dword ptr [ rip + hexvar ] mov esi , hexvar mov edi , num xor eax , eax call hexvar mov rcx , rbp xor edx , edx xor esi , esi mov rdi , rbx call hexvar mov rbp , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar movzx edi , byte ptr [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] call hexvar movzx eax , al add rbp , rax mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v1 , hexvar ( v0 ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lui v0 , hexvar lw s0 , hexvar ( v0 ) b hexvar nop move s0 , zero addiu v0 , fp , hexvar lw a2 , hexvar ( fp ) addiu a1 , zero , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , s0 lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v1 , hexvar ( v0 ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lui v0 , hexvar lw s0 , hexvar ( v0 ) b hexvar nop move s0 , zero lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push edi push esi mov edi , edx push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax call hexvar cmp byte ptr [ ebx + hexvar ] , num jne hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar cmp byte ptr [ esi + hexvar ] , num lea eax , [ ebx - hexvar ] jne hexvar xor edx , edx cmp dword ptr [ ebx + hexvar ] , num je hexvar mov edx , dword ptr [ ebx + hexvar ] push eax lea eax , [ ebx - hexvar ] push edx push eax push num call hexvar add esp , hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar xor eax , eax cmp dword ptr [ ebx + hexvar ] , num mov edx , dword ptr [ esi + hexvar ] je hexvar mov eax , dword ptr [ ebx + hexvar ] push edx push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar sub esp , hexvar xor ecx , ecx xor edx , edx push edi mov eax , esi call hexvar mov edi , eax mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax je hexvar movzx eax , byte ptr [ esi + hexvar ] mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] call hexvar movzx eax , al add edi , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rbx + hexvar ] , num lea rcx , [ rip + hexvar ] je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar xor edx , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rbx + hexvar ] , num lea rcx , [ rip + hexvar ] jne hexvar xor edx , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar xor edx , edx cmp dword ptr [ rip + hexvar ] , num mov rcx , qword ptr [ rbx + hexvar ] je hexvar mov edx , dword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar mov rcx , rbp xor edx , edx xor esi , esi mov rdi , rbx call hexvar mov rbp , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar movzx edi , byte ptr [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] call hexvar movzx eax , al add rbp , rax mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , qword ptr [ rbp - hexvar ] cmp rdx , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , hexvar add rax , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] jb hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] movabs rdi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] sub rsi , qword ptr [ rbp - hexvar ] cmp rax , rsi jne hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui v1 , hexvar lui gp , hexvar addiu v1 , v1 , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v0 , hexvar ( v1 ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lw s3 , hexvar ( v1 ) move s0 , a1 lw s4 , hexvar ( v1 ) sltu v1 , a0 , s3 beqz v1 , hexvar move s1 , a0 addu s2 , v0 , s0 lw t9 , - hexvar ( gp ) subu s0 , s4 , s0 subu s1 , s3 , s1 move a0 , s2 move a1 , s0 jalr t9 sltu s4 , s4 , s0 beq s1 , s4 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s2 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bne s3 , a0 , hexvar sltu v1 , a1 , s4 bnez v1 , hexvar addu s2 , v0 , s0 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , hexvar jalr t9 move a0 , zero lui a0 , hexvar move a2 , s1 sw zero , hexvar ( sp ) addiu a0 , a0 , - hexvar move a3 , s0 jal hexvar move s0 , v0 lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw s1 , - hexvar ( v0 ) beqz s1 , hexvar move s3 , a0 lui v0 , hexvar addiu v0 , v0 , - hexvar lw s2 , hexvar ( v0 ) lw s4 , hexvar ( v0 ) sltu v0 , a0 , s2 beqz v0 , hexvar move s0 , a1 addu s1 , s1 , s0 subu s0 , s4 , s0 move a1 , s0 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v1 , s0 sltu s0 , s4 , s0 subu a0 , s2 , s3 beq a0 , s0 , hexvar nop move v0 , s1 lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s1 , v0 bne s2 , a0 , hexvar sltu v0 , a1 , s4 bnez v0 , hexvar nop addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov ebp , dword ptr [ ebx + hexvar ] test ebp , ebp je hexvar mov esi , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] cmp edi , edx ja hexvar jb hexvar cmp esi , eax ja hexvar sub esp , hexvar push num mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push esi push eax call hexvar add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov ebp , eax add esp , hexvar jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov ebp , eax add esp , hexvar jmp hexvar mov eax , dword ptr [ esp + num ] add ebp , eax sub esp , num mov ecx , esi sub ecx , eax push ecx push ebp call hexvar add esp , hexvar sub esi , dword ptr [ esp + num ] sbb edi , dword ptr [ esp + hexvar ] xor eax , esi mov edx , edi or edx , eax je hexvar mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ ebx + hexvar ] test ebp , ebp je hexvar mov edi , dword ptr [ ebx + hexvar ] mov ecx , edx mov esi , dword ptr [ ebx + hexvar ] mov edx , eax cmp edi , ecx ja hexvar jb hexvar cmp esi , eax ja hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num call hexvar mov esi , eax lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar pop edx pop ecx push esi push eax call hexvar add esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar add esp , hexvar mov ebp , eax add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ ebx + hexvar ] test ebp , ebp je hexvar mov edi , dword ptr [ ebx + hexvar ] mov ecx , edx mov esi , dword ptr [ ebx + hexvar ] mov edx , eax cmp edi , ecx ja hexvar jb hexvar cmp esi , eax ja hexvar mov eax , edx mov edx , ecx call hexvar mov esi , eax lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar pop edx pop ecx push esi push eax call hexvar add esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar add esp , hexvar mov ebp , eax add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov ebp , dword ptr [ ebx + hexvar ] test ebp , ebp je hexvar mov esi , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] cmp edi , edx ja hexvar jb hexvar cmp esi , eax ja hexvar sub esp , hexvar push num mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push esi push eax call hexvar add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov ebp , eax add esp , hexvar jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov ebp , eax add esp , hexvar jmp hexvar mov eax , dword ptr [ esp + num ] add ebp , eax sub esp , num mov ecx , esi sub ecx , eax push ecx push ebp call hexvar add esp , hexvar sub esi , dword ptr [ esp + num ] sbb edi , dword ptr [ esp + hexvar ] xor eax , esi mov edx , edi or edx , eax je hexvar mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar push rbp push rbx sub rsp , num mov rsi , qword ptr [ rip + hexvar ] cmp rsi , rdi jbe hexvar lea rbx , [ rax + rdi ] sub rsi , rdi mov rbp , rsi mov rdi , rbx call hexvar cmp rbp , rax je hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
lui v1 , hexvar lui gp , hexvar addiu v1 , v1 , - hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lw v0 , hexvar ( v1 ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lw s3 , hexvar ( v1 ) move s0 , a1 lw s4 , hexvar ( v1 ) sltu v1 , a0 , s3 beqz v1 , hexvar move s1 , a0 addu s2 , v0 , s0 lw t9 , - hexvar ( gp ) subu s0 , s4 , s0 subu s1 , s3 , s1 move a0 , s2 move a1 , s0 jalr t9 sltu s4 , s4 , s0 beq s1 , s4 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s2 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bne s3 , a0 , hexvar sltu v1 , a1 , s4 bnez v1 , hexvar addu s2 , v0 , s0 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero lui a0 , hexvar move a2 , s1 sw zero , hexvar ( sp ) addiu a0 , a0 , - hexvar move a3 , s0 jal hexvar move s0 , v0 lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , hexvar jge hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + hexvar ] mov dl , byte ptr [ eax + ecx ] mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ hexvar ] , num add esp , num pop ebp ret
lea rax , [ rip + hexvar ] lea rcx , [ rax + hexvar ] movzx edx , byte ptr [ rax ] movzx edx , byte ptr [ rdi + rdx ] mov byte ptr [ rax ] , dl add rax , num cmp rax , rcx jne hexvar mov byte ptr [ rip + hexvar ] , num ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , hexvar jge hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + hexvar ] mov dl , byte ptr [ eax + ecx ] mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ hexvar ] , num add esp , num pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw zero , num ( fp ) b hexvar nop lui v0 , hexvar addiu v1 , v0 , - hexvar lw v0 , num ( fp ) addu v0 , v1 , v0 lbu v0 , ( v0 ) move v1 , v0 lw v0 , hexvar ( fp ) addu v0 , v0 , v1 lb v0 , ( v0 ) andi v1 , v0 , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , num ( fp ) addu v0 , a0 , v0 sb v1 , ( v0 ) lw v0 , num ( fp ) addiu v0 , v0 , num sw v0 , num ( fp ) lw v0 , num ( fp ) slti v0 , v0 , hexvar bnez v0 , hexvar nop lui v0 , hexvar addiu v1 , zero , num sb v1 , - hexvar ( v0 ) nop move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - num ] sub eax , hexvar setl cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movzx edx , byte ptr [ ecx + hexvar ] mov bl , byte ptr [ eax + edx ] mov byte ptr [ ecx + hexvar ] , bl mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ hexvar ] , num add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , hexvar jge hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + hexvar ] mov dl , byte ptr [ eax + ecx ] mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ hexvar ] , num add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , hexvar jge hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + hexvar ] mov dl , byte ptr [ eax + ecx ] mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ hexvar ] , num add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ ebp - num ] , hexvar mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + hexvar ] mov dl , byte ptr [ eax + ecx ] mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , dl mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov byte ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - num ] sub eax , hexvar setl cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movzx edx , byte ptr [ ecx + hexvar ] mov bl , byte ptr [ eax + edx ] mov byte ptr [ ecx + hexvar ] , bl mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ hexvar ] , num add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov dword ptr [ ecx ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , hexvar setl cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] movzx esi , byte ptr [ esi + hexvar ] mov bl , byte ptr [ ecx + esi ] mov ecx , dword ptr [ edx ] mov byte ptr [ ecx + hexvar ] , bl jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov byte ptr [ hexvar ] , num lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , num mov ax , word ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov word ptr [ ebp - num ] , ax mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] cmp eax , - num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] movsx ecx , word ptr [ ebp + num ] cmp eax , ecx jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov ax , word ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov word ptr [ ebp - num ] , ax mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] cmp eax , - num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] movsx ecx , word ptr [ ebp + num ] cmp eax , ecx jne hexvar jmp hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] mov edx , eax sub edx , ecx mov ecx , eax sub ecx , num add edx , ecx sub eax , edx mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov ax , word ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov word ptr [ ebp - num ] , ax mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] cmp eax , - num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] movsx ecx , word ptr [ ebp + num ] cmp eax , ecx jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] add esp , num pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp move v0 , a0 sh v0 , hexvar ( fp ) sw zero , num ( fp ) b hexvar nop lui v0 , hexvar lw v1 , num ( fp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lh v0 , ( v0 ) lh v1 , hexvar ( fp ) beq v1 , v0 , hexvar nop lw v0 , num ( fp ) addiu v0 , v0 , num sw v0 , num ( fp ) lui v0 , hexvar lw v1 , num ( fp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lh v1 , ( v0 ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop b hexvar nop nop lui v1 , hexvar lw v0 , num ( fp ) addiu v1 , v1 , hexvar sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , num ( v0 ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov ax , word ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov word ptr [ ebp - num ] , ax mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] cmp eax , - num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] movsx ecx , word ptr [ ebp + num ] cmp eax , ecx jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] add esp , num pop ebp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - hexvar ] , ax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cmp word ptr [ rbp - hexvar ] , ax je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cmp ax , - num jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov ax , word ptr [ ebp + num ] mov word ptr [ ebp - num ] , ax mov eax , esp add eax , - hexvar mov esp , eax mov cx , word ptr [ ebp - num ] mov word ptr [ ebp - num ] , cx mov dword ptr [ eax ] , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] movsx ecx , word ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , - num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] shl ecx , num lea edx , [ hexvar ] add edx , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] movsx ecx , word ptr [ eax ] movsx edx , word ptr [ ebp - num ] cmp ecx , edx jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov esp , ebp pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov ax , word ptr [ ebp + num ] mov word ptr [ ebp - hexvar ] , ax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov dx , word ptr [ ebp - hexvar ] mov word ptr [ eax ] , dx mov dword ptr [ ecx ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] movsx ecx , word ptr [ ecx * num + hexvar ] cmp ecx , - num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] movsx ecx , word ptr [ ecx * num + hexvar ] mov edx , dword ptr [ ebp - hexvar ] movsx esi , word ptr [ edx ] cmp ecx , esi sete bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar mov r3 , r0 strh r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - num ] b hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] lsl r3 , r3 , num add r3 , r2 , r3 ldrsh r3 , [ r3 ] ldrsh r2 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] lsl r3 , r3 , num add r3 , r2 , r3 ldrsh r3 , [ r3 ] cmn r3 , num bne hexvar b hexvar mov r0 , r0 ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 , num ] mov r0 , r3 add sp , fp , num pop { fp } bx lr andeq lr , r6 , r4 , lsl r5
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar mov r3 , r0 strh r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - num ] b hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] lsl r3 , r3 , num add r3 , r2 , r3 ldrsh r3 , [ r3 ] ldrsh r2 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] lsl r3 , r3 , num add r3 , r2 , r3 ldrsh r3 , [ r3 ] cmn r3 , num bne hexvar b hexvar mov r0 , r0 ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 , num ] mov r0 , r3 add sp , fp , num pop { fp } bx lr andeq lr , r6 , r4 , lsl r5
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov ip , num str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr lr , [ sp , hexvar ] str ip , [ sp , hexvar ] ldr ip , [ sp , hexvar ] str r2 , [ sp , num ] str lr , [ sp ] str ip , [ sp , num ] bl hexvar add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] cmp esi , hexvar je hexvar jg hexvar cmp esi , hexvar je hexvar jg hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , num je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx mov edx , num cmove esi , edx sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , esi add esp , num pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bgt hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar bgt hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar bgt hexvar cmp r3 , num beq hexvar b hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar b hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar bgt hexvar cmp r3 , hexvar beq hexvar b hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar b hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bgt hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar cmp r3 , hexvar bge hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar b hexvar cmp r3 , hexvar beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar b hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bgt hexvar cmp r3 , hexvar bge hexvar b hexvar cmp r3 , hexvar bge hexvar b hexvar mov r3 , hexvar b hexvar mov r3 , num b hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] b hexvar mov r3 , hexvar b hexvar mov r3 , hexvar b hexvar ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , num str r3 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , num ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbx mov ebx , dword ptr [ rdi ] cmp ebx , hexvar jg hexvar mov eax , hexvar cmp ebx , hexvar jg hexvar cmp ebx , hexvar jg hexvar cmp ebx , num je hexvar cmp ebx , hexvar je hexvar jmp hexvar lea eax , [ rbx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] cmp ebx , hexvar jg hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar jmp hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar mov eax , hexvar pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] cmp esi , hexvar je hexvar jg hexvar cmp esi , hexvar je hexvar jg hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , num je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx mov edx , num cmove esi , edx sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , esi add esp , num pop ebx pop esi ret
push rbx mov ebx , dword ptr [ rdi ] cmp ebx , hexvar jg hexvar mov eax , hexvar cmp ebx , hexvar jg hexvar cmp ebx , hexvar jg hexvar cmp ebx , num je hexvar cmp ebx , hexvar je hexvar jmp hexvar lea eax , [ rbx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] cmp ebx , hexvar jg hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar jmp hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar mov eax , hexvar pop rbx ret
push rbx mov ebx , dword ptr [ rdi ] cmp ebx , hexvar jg hexvar mov eax , hexvar cmp ebx , hexvar jg hexvar cmp ebx , hexvar jg hexvar cmp ebx , num je hexvar cmp ebx , hexvar je hexvar jmp hexvar lea eax , [ rbx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] cmp ebx , hexvar jg hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar jmp hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar mov eax , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , ( a0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] cmp esi , hexvar je hexvar jg hexvar cmp esi , hexvar je hexvar jg hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , num je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx mov edx , num cmove esi , edx sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , esi add esp , num pop ebx pop esi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , num je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar jge hexvar jmp hexvar cmp eax , hexvar jg hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov dword ptr [ esp + num ] , num sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx ret
push rbx mov ebx , dword ptr [ rdi ] cmp ebx , hexvar jg hexvar mov eax , hexvar cmp ebx , hexvar jg hexvar cmp ebx , hexvar jg hexvar cmp ebx , num je hexvar cmp ebx , hexvar je hexvar jmp hexvar lea eax , [ rbx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] cmp ebx , hexvar jg hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar jmp hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar mov eax , hexvar pop rbx ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] test esi , esi setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push r12 push rbp mov r12 , rsi push rbx mov rax , qword ptr [ rdx + hexvar ] mov rbp , rdi mov rbx , rdx test rax , rax je hexvar mov rdx , rax call qword ptr [ rax ] mov rsi , qword ptr [ rip + hexvar ] mov rcx , rbx mov rdx , r12 mov rdi , rbp call hexvar test eax , eax je hexvar pop rbx xor eax , eax pop rbp pop r12 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ esi + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ esi + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a2 lw a2 , hexvar ( a2 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov esi , dword ptr [ edx ] cmp dword ptr [ esi + hexvar ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov ebx , dword ptr [ ebx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , ebx call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov ebx , dword ptr [ ebx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , ebx call hexvar add esp , hexvar and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ esi + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - num ] , esi mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num mov eax , esi add esp , num pop ebx pop esi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx pop rcx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num mov eax , esi add esp , num pop ebx pop esi ret
push rbx sub rsp , hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + num ] , rax mov ecx , hexvar mov ebx , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , num mov ecx , hexvar mov rax , qword ptr [ rsp + num ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , ebx jmp hexvar add rsp , hexvar pop rbx ret
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx pop rcx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea esi , [ ebx - hexvar ] push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num add esp , hexvar pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea esi , [ ebx - hexvar ] push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num add esp , hexvar pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar test byte ptr [ rax + hexvar ] , num je hexvar sub rsp , num call hexvar add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar leave ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar test byte ptr [ edx + hexvar ] , num je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , num lea ecx , [ esp + hexvar ] push ecx push eax call dword ptr [ edx + hexvar ] add esp , hexvar test eax , eax je hexvar xor eax , eax xor edx , edx jmp hexvar mov esi , esi lea edi , [ edi ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar test byte ptr [ edx + hexvar ] , num je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , num lea ecx , [ esp + hexvar ] push ecx push eax call dword ptr [ edx + hexvar ] add esp , hexvar test eax , eax je hexvar xor eax , eax xor edx , edx jmp hexvar mov esi , esi lea edi , [ edi ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp byte ptr [ edx + hexvar ] , num jns hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , hexvar ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar test byte ptr [ edx + hexvar ] , num je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , num lea ecx , [ esp + hexvar ] push ecx push eax call dword ptr [ edx + hexvar ] add esp , hexvar test eax , eax je hexvar xor eax , eax xor edx , edx jmp hexvar mov esi , esi lea edi , [ edi ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar ret
push rax mov esi , dword ptr [ rdi ] mov edx , hexvar mov edi , num mov ecx , hexvar call hexvar xor eax , eax pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r1 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r0 , num bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rax mov esi , dword ptr [ rdi ] mov edx , hexvar mov edi , num mov ecx , hexvar call hexvar xor eax , eax pop rcx ret
push rax mov esi , dword ptr [ rdi ] mov edx , hexvar mov edi , num mov ecx , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , ( v0 )
push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push num call hexvar mov eax , num add esp , hexvar pop ebx ret
push rax mov esi , dword ptr [ rdi ] mov edx , hexvar mov edi , num mov ecx , hexvar call hexvar xor eax , eax pop rcx ret
push rax mov esi , dword ptr [ rdi ] mov edx , hexvar mov edi , num mov ecx , hexvar call hexvar xor eax , eax pop rcx ret
push rax mov esi , dword ptr [ rdi ] mov edx , hexvar mov edi , num mov ecx , hexvar call hexvar xor eax , eax pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push hexvar push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push num call hexvar add esp , hexvar xor eax , eax pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a3 , zero , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) addiu a2 , s0 , - hexvar sw ra , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) addiu a1 , zero , hexvar lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num addiu a2 , s0 , - hexvar lw gp , hexvar ( sp ) addiu a3 , zero , hexvar addiu a1 , zero , hexvar sw s2 , hexvar ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a3 , zero , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) addiu a2 , s0 , - hexvar sw ra , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) addiu a1 , zero , hexvar lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num addiu a2 , s0 , - hexvar lw gp , hexvar ( sp ) addiu a3 , zero , hexvar addiu a1 , zero , hexvar sw s2 , hexvar ( s1 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea esi , [ ebx - hexvar ] push hexvar push esi push hexvar push num call hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx push hexvar push esi push hexvar push hexvar call hexvar add esp , hexvar mov eax , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 )
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , r14 mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , num add rsp , num pop rbx pop r14 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] mov r3 , hexvar ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , num bl hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp ] str r2 , [ r3 , hexvar ] ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , r14 mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , num add rsp , num pop rbx pop r14 ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea esi , [ ebx - hexvar ] push esi push hexvar push num call hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx push hexvar push esi push hexvar push hexvar call hexvar mov eax , num add esp , hexvar pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a3 , zero , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) addiu a2 , s0 , - hexvar sw ra , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) addiu a1 , zero , hexvar lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num addiu a2 , s0 , - hexvar lw gp , hexvar ( sp ) addiu a3 , zero , hexvar addiu a1 , zero , hexvar sw s2 , hexvar ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a3 , zero , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) addiu a2 , s0 , - hexvar sw ra , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) addiu a1 , zero , hexvar lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num addiu a2 , s0 , - hexvar lw gp , hexvar ( sp ) addiu a3 , zero , hexvar addiu a1 , zero , hexvar sw s2 , hexvar ( s1 )
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov rbx , rdi mov r15 , qword ptr [ rdi + hexvar ] mov rdi , rsi call hexvar mov r14d , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp + num ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rcx movsxd rdx , dword ptr [ rax ] lea rsi , [ rsp + num ] xor edi , edi call hexvar mov rbp , rax mov rax , qword ptr [ rax ] movsxd r12 , dword ptr [ rax ] mov rax , qword ptr [ rbx ] cmp r12d , dword ptr [ rax + hexvar ] jne hexvar mov rdi , qword ptr [ rbp + num ] call hexvar test eax , eax je hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ r15 ] , ecx mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ r15 + num ] , ecx mov dword ptr [ r15 + num ] , num add r15 , hexvar mov rsi , qword ptr [ rax + num ] mov rdi , r15 call hexvar add rbx , hexvar mov rax , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] mov rdi , rbx mov rdx , r12 call hexvar mov rdi , rbp call hexvar mov r14d , num jmp hexvar mov rdi , rbp call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar xor edi , edi call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov rbx , rdi mov r15 , qword ptr [ rdi + hexvar ] mov rdi , rsi call hexvar mov r14d , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp + num ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rcx movsxd rdx , dword ptr [ rax ] lea rsi , [ rsp + num ] xor edi , edi call hexvar mov rbp , rax mov rax , qword ptr [ rax ] movsxd r12 , dword ptr [ rax ] mov rax , qword ptr [ rbx ] cmp r12d , dword ptr [ rax + hexvar ] jne hexvar mov rdi , qword ptr [ rbp + num ] call hexvar test eax , eax je hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ r15 ] , ecx mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ r15 + num ] , ecx mov dword ptr [ r15 + num ] , num add r15 , hexvar mov rsi , qword ptr [ rax + num ] mov rdi , r15 call hexvar add rbx , hexvar mov rax , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] mov rdi , rbx mov rdx , r12 call hexvar mov rdi , rbp call hexvar mov r14d , num jmp hexvar mov rdi , rbp call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar xor edi , edi call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 sw s4 , hexvar ( sp ) move a0 , a1 sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , ( s2 ) lw s4 , hexvar ( s1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esp + hexvar ] , eax push edi call hexvar add esp , hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ edi + num ] sub esp , num mov edx , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , edx push dword ptr [ eax ] lea eax , [ esp + hexvar ] push eax push num call hexvar mov edi , eax mov eax , dword ptr [ esi ] add esp , hexvar mov ebp , dword ptr [ eax + hexvar ] mov eax , dword ptr [ edi ] cmp ebp , dword ptr [ eax ] jne hexvar sub esp , hexvar push dword ptr [ edi + num ] call hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ edi ] sub esp , num add esi , hexvar push ebp push dword ptr [ eax + num ] push esi call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , - num sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov rbx , rdi mov r15 , qword ptr [ rdi + hexvar ] mov rdi , rsi call hexvar mov r14d , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp + num ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rcx movsxd rdx , dword ptr [ rax ] lea rsi , [ rsp + num ] xor edi , edi call hexvar mov rbp , rax mov rax , qword ptr [ rax ] movsxd r12 , dword ptr [ rax ] mov rax , qword ptr [ rbx ] cmp r12d , dword ptr [ rax + hexvar ] jne hexvar mov rdi , qword ptr [ rbp + num ] call hexvar test eax , eax je hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ r15 ] , ecx mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ r15 + num ] , ecx mov dword ptr [ r15 + num ] , num add r15 , hexvar mov rsi , qword ptr [ rax + num ] mov rdi , r15 call hexvar add rbx , hexvar mov rax , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] mov rdi , rbx mov rdx , r12 call hexvar mov rdi , rbp call hexvar mov r14d , num jmp hexvar mov rdi , rbp call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar xor edi , edi call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov rbx , rdi mov r15 , qword ptr [ rdi + hexvar ] mov rdi , rsi call hexvar mov r14d , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp + num ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rcx movsxd rdx , dword ptr [ rax ] lea rsi , [ rsp + num ] xor edi , edi call hexvar mov rbp , rax mov rax , qword ptr [ rax ] movsxd r12 , dword ptr [ rax ] mov rax , qword ptr [ rbx ] cmp r12d , dword ptr [ rax + hexvar ] jne hexvar mov rdi , qword ptr [ rbp + num ] call hexvar test eax , eax je hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ r15 ] , ecx mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ r15 + num ] , ecx mov dword ptr [ r15 + num ] , num add r15 , hexvar mov rsi , qword ptr [ rax + num ] mov rdi , r15 call hexvar add rbx , hexvar mov rax , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] mov rdi , rbx mov rdx , r12 call hexvar mov rdi , rbp call hexvar mov r14d , num jmp hexvar mov rdi , rbp call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar xor edi , edi call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov rbx , rdi mov r15 , qword ptr [ rdi + hexvar ] mov rdi , rsi call hexvar mov r14d , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp + num ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rcx movsxd rdx , dword ptr [ rax ] lea rsi , [ rsp + num ] xor edi , edi call hexvar mov rbp , rax mov rax , qword ptr [ rax ] movsxd r12 , dword ptr [ rax ] mov rax , qword ptr [ rbx ] cmp r12d , dword ptr [ rax + hexvar ] jne hexvar mov rdi , qword ptr [ rbp + num ] call hexvar test eax , eax je hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ r15 ] , ecx mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ r15 + num ] , ecx mov dword ptr [ r15 + num ] , num add r15 , hexvar mov rsi , qword ptr [ rax + num ] mov rdi , r15 call hexvar add rbx , hexvar mov rax , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] mov rdi , rbx mov rdx , r12 call hexvar mov rdi , rbp call hexvar mov r14d , num jmp hexvar mov rdi , rbp call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar xor edi , edi call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov rbx , rdi mov r15 , qword ptr [ rdi + hexvar ] mov rdi , rsi call hexvar mov r14d , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp + num ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rcx movsxd rdx , dword ptr [ rax ] lea rsi , [ rsp + num ] xor edi , edi call hexvar mov rbp , rax mov rax , qword ptr [ rax ] movsxd r12 , dword ptr [ rax ] mov rax , qword ptr [ rbx ] cmp r12d , dword ptr [ rax + hexvar ] jne hexvar mov rdi , qword ptr [ rbp + num ] call hexvar test eax , eax je hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ r15 ] , ecx mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ r15 + num ] , ecx mov dword ptr [ r15 + num ] , num add r15 , hexvar mov rsi , qword ptr [ rax + num ] mov rdi , r15 call hexvar add rbx , hexvar mov rax , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] mov rdi , rbx mov rdx , r12 call hexvar mov rdi , rbp call hexvar mov r14d , num jmp hexvar mov rdi , rbp call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar xor edi , edi call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esp + hexvar ] , eax push edi call hexvar add esp , hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ edi + num ] mov edx , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , edx sub esp , num push dword ptr [ eax ] lea eax , [ esp + hexvar ] push eax push num call hexvar mov edi , eax mov eax , dword ptr [ esi ] mov ebp , dword ptr [ eax + hexvar ] mov eax , dword ptr [ edi ] add esp , hexvar cmp ebp , dword ptr [ eax ] jne hexvar sub esp , hexvar push dword ptr [ edi + num ] call hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esi , hexvar mov eax , dword ptr [ edi ] sub esp , num push ebp push dword ptr [ eax + num ] push esi call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , num ( fp ) andi v0 , v0 , hexvar bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop addiu v0 , zero , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) andi v0 , v0 , num beqz v0 , hexvar nop lw v0 , num ( fp ) andi v0 , v0 , hexvar bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop addiu v0 , zero , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rbp - num ] and edi , hexvar cmp edi , num je hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar cmp eax , num sete cl mov byte ptr [ rbp - num ] , cl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , num ( fp ) andi v0 , v0 , hexvar bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop addiu v0 , zero , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) andi v0 , v0 , num beqz v0 , hexvar nop lw v0 , num ( fp ) andi v0 , v0 , hexvar bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop addiu v0 , zero , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) andi v0 , v0 , num beqz v0 , hexvar nop lw v0 , num ( fp ) andi v0 , v0 , hexvar bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop addiu v0 , zero , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 lw a0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
addiu sp , sp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) lw a0 , hexvar ( s0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx call eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx call eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push esi push ebx sub esp , num mov ebx , eax mov esi , edx mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar sub esp , hexvar push ebx call esi mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar add esp , num pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx call eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] blx r3 ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp + num ] mov eax , dword ptr [ ebp + hexvar ] call eax add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx call eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push r13 push r12 mov r12 , rsi push rbp push rbx mov rbp , rdi sub rsp , num cmp byte ptr [ rip + hexvar ] , num mov rbx , qword ptr [ rip + hexvar ] jne hexvar mov r13 , qword ptr [ rip + hexvar ] xor edx , edx mov rax , rdi div r13
push ebp push edi mov edi , eax push esi push ebx mov ebp , edx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] lea eax , [ ebx + hexvar ] cmp byte ptr [ eax ] , num jne hexvar lea eax , [ ebx + hexvar ] xor edx , edx mov ecx , dword ptr [ eax ] mov eax , edi div ecx
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a1 lw v0 , - hexvar ( gp ) lw v1 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw gp , hexvar ( sp ) lbu v0 , ( v0 ) bnez v0 , hexvar lw s0 , ( v1 ) lw v0 , - hexvar ( gp ) lw s3 , ( v0 ) teq s3 , zero , num divu zero , a0 , s3 addu v0 , s3 , a0 mfhi v1 subu v0 , v0 , v1 sltu v1 , a1 , v0 bnez v1 , hexvar nop move s1 , v0 b hexvar addiu s4 , zero , num move s1 , v0 lw v1 , hexvar ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax test byte ptr [ hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rax , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , rdx xor esi , esi mov edx , esi div qword ptr [ rbp - hexvar ]
push ebp push edi mov edi , eax push esi push ebx mov ebp , edx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] lea eax , [ ebx + hexvar ] cmp byte ptr [ eax ] , num jne hexvar lea eax , [ ebx + hexvar ] xor edx , edx mov ecx , dword ptr [ eax ] mov eax , edi div ecx
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r4 , r2 , r3 ldr r3 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r1 sub r3 , r4 , r3 str r3 , [ fp , - hexvar ] b hexvar ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 bls hexvar b hexvar ldr r1 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar ldr r3 , [ fp , - hexvar ] add r2 , r3 , num str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bhi hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r4 , r2 , r3 ldr r3 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r1 sub r3 , r4 , r3 str r3 , [ fp , - hexvar ] b hexvar ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 bls hexvar b hexvar ldr r1 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar ldr r3 , [ fp , - hexvar ] add r2 , r3 , num str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bhi hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push ebp push edi mov edi , eax push esi push ebx mov ebp , edx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] lea eax , [ ebx + hexvar ] cmp byte ptr [ eax ] , num jne hexvar lea eax , [ ebx + hexvar ] xor edx , edx mov ecx , dword ptr [ eax ] mov eax , edi div ecx
push r13 push r12 push rbp push rbx sub rsp , num mov r12 , rsi mov rbx , qword ptr [ rip + hexvar ] cmp byte ptr [ rip + hexvar ] , num jne hexvar mov r13 , qword ptr [ rip + hexvar ] lea rbp , [ r13 + rdi ] mov rax , rdi mov edx , num div r13
push ebp push edi mov edi , eax push esi push ebx mov ebp , edx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] lea eax , [ ebx + hexvar ] cmp byte ptr [ eax ] , num jne hexvar lea eax , [ ebx + hexvar ] xor edx , edx mov ecx , dword ptr [ eax ] mov eax , edi div ecx
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push r14 push rbx push rax mov rbx , rsi mov r14 , rdi mov rdi , rsi call hexvar mov rdi , r14 mov rsi , rbx mov edx , eax add rsp , num pop rbx pop r14 jmp hexvar nop word ptr cs : [ rax + rax ]
push r14 push rbx push rax mov rbx , rsi mov r14 , rdi mov rdi , rsi call hexvar mov rdi , r14 mov rsi , rbx mov edx , eax add rsp , num pop rbx pop r14 jmp hexvar nop word ptr cs : [ rax + rax ]
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push eax push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi ret
push r14 push rbx push rax mov rbx , rsi mov r14 , rdi mov rdi , rsi call hexvar mov rdi , r14 mov rsi , rbx mov edx , eax add rsp , num pop rbx pop r14 jmp hexvar nop word ptr cs : [ rax + rax ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) move a0 , a1 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw a1 , hexvar ( sp ) move a0 , s0 lw gp , hexvar ( sp ) move a2 , v0 lw a1 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
push r14 push rbx push rax mov rbx , rsi mov r14 , rdi mov rdi , rsi call hexvar mov rdi , r14 mov rsi , rbx mov edx , eax add rsp , num pop rbx pop r14 jmp hexvar nop word ptr cs : [ rax + rax ]
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push eax push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push eax push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r0 , [ sp ] bl hexvar mov r3 , r0 mov r2 , r3 ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push eax push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx call hexvar mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx call hexvar mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
ldr r2 , [ r1 , hexvar ] ldr r3 , [ r0 , hexvar ] cmp r2 , num cmpne r2 , num moveq r2 , num movne r2 , num cmp r3 , num cmpne r3 , num moveq r3 , num movne r3 , num mov ip , r1 eor r1 , r2 , num tst r3 , r1 bne hexvar eor r3 , r3 , num tst r2 , r3 beq hexvar mov r3 , num mov r0 , r3 bx lr ldr r2 , [ r0 , hexvar ] ldr r3 , [ ip , hexvar ] cmp r2 , r3 blt hexvar bgt hexvar ldr r3 , [ r0 , hexvar ] ldr r2 , [ ip , hexvar ] subs r3 , r3 , r2 bne hexvar ldr r1 , [ r0 ] ldr r0 , [ ip ] b hexvar mvn r3 , num b hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov eax , dword ptr [ edi + hexvar ] mov edx , dword ptr [ esi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar pop ebx pop esi pop edi ret
mov edx , dword ptr [ rdi + hexvar ] mov r8 , rsi cmp edx , num sete cl cmp edx , num sete al or eax , ecx mov ecx , dword ptr [ rsi + hexvar ] cmp ecx , num sete sil cmp ecx , num sete dl or edx , esi cmp dl , al jb hexvar mov eax , num jbe hexvar ret nop dword ptr [ rax ] mov rsi , qword ptr [ rdi + hexvar ] cmp qword ptr [ r8 + hexvar ] , rsi jg hexvar jl hexvar mov rsi , qword ptr [ rdi + hexvar ] cmp qword ptr [ r8 + hexvar ] , rsi jg hexvar jl hexvar mov rsi , qword ptr [ rdi ] mov rdi , qword ptr [ r8 ] jmp hexvar nop dword ptr [ rax + rax ] mov eax , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s2 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw v0 , hexvar ( s1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ecx + hexvar ] cmp esi , num sete al cmp esi , num mov ebp , eax sete al mov esi , eax mov eax , ebp or eax , esi cmp edi , num je hexvar cmp edi , num je hexvar mov esi , dword ptr [ ecx + hexvar ] and esi , hexvar test al , al je hexvar cmp esi , hexvar je hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r6 , [ pc , hexvar ] ldr r4 , [ r6 , num ] cmp r4 , num beq hexvar ldr r3 , [ r4 ] cmp r0 , r3 bne hexvar b hexvar ldr r3 , [ r4 ] cmp r3 , r0 beq hexvar ldr r4 , [ r4 , num ] cmp r4 , num bne hexvar mov r5 , r0 bl hexvar cmp r0 , num beq hexvar ldr r7 , [ r0 ] mov r0 , r7 bl hexvar add r0 , r0 , hexvar bic r0 , r0 , num bl hexvar mov r4 , r0 mov r1 , r7 str r5 , [ r0 ] , num bl hexvar ldr r3 , [ r6 , num ] str r4 , [ r6 , num ] str r3 , [ r4 , num ] ldrb r0 , [ r4 , num ] cmp r0 , num addne r0 , r4 , num pop { r4 , r5 , r6 , r7 , r8 , pc } adcs fp , ip , sp , lsl num andeq r0 , r0 , r0
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 add r3 , r3 , hexvar bic r3 , r3 , num mov r0 , r3 bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num ldr r1 , [ fp , - num ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ r2 ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num b hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc } bge hexvar andeq r0 , r0 , r0
push r12 push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar cmp edi , dword ptr [ rbx ] jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx ] , edi je hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx jne hexvar mov ebp , edi lea r12 , [ rip + hexvar ] call hexvar test rax , rax mov edi , hexvar je hexvar mov r12 , qword ptr [ rax ] mov rdi , r12 call hexvar lea rdi , [ rax + hexvar ] and rdi , hexvar call hexvar lea rdi , [ rax + hexvar ] mov dword ptr [ rax ] , ebp mov rsi , r12 mov rbx , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + num ] , rax cmp byte ptr [ rbx + hexvar ] , num je hexvar lea rax , [ rbx + hexvar ] pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar cmp edi , dword ptr [ esi ] jne hexvar jmp hexvar lea esi , [ esi ] lea edi , [ edi ] cmp dword ptr [ esi ] , edi je hexvar mov esi , dword ptr [ esi + num ] test esi , esi jne hexvar sub esp , hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar mov ebp , dword ptr [ eax ] sub esp , hexvar push ebp call hexvar add eax , hexvar add esp , hexvar and eax , hexvar sub esp , hexvar push eax call hexvar mov esi , eax mov dword ptr [ eax ] , edi pop eax lea eax , [ esi + num ] pop edx push ebp push eax call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar mov dword ptr [ ebx + hexvar ] , esi mov dword ptr [ esi + num ] , eax cmp byte ptr [ esi + num ] , num je hexvar lea eax , [ esi + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx je hexvar cmp edi , dword ptr [ rbx ] jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] cmp dword ptr [ rbx ] , edi je hexvar mov rbx , qword ptr [ rbx + num ] test rbx , rbx jne hexvar mov ebp , edi mov r12d , hexvar call hexvar test rax , rax mov edi , hexvar je hexvar mov r12 , qword ptr [ rax ] mov rdi , r12 call hexvar lea rdi , [ rax + hexvar ] call hexvar lea rdi , [ rax + hexvar ] mov dword ptr [ rax ] , ebp mov rsi , r12 mov rbx , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rbx + num ] , rax cmp byte ptr [ rbx + hexvar ] , num lea rax , [ rbx + hexvar ] mov edx , num pop rbx pop rbp pop r12 cmove rax , rdx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebx + hexvar ] test edi , edi je hexvar cmp esi , dword ptr [ edi ] je hexvar mov edi , dword ptr [ edi + num ] test edi , edi je hexvar cmp dword ptr [ edi ] , esi jne hexvar cmp byte ptr [ edi + num ] , num je hexvar lea eax , [ edi + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r6 , [ pc , hexvar ] ldr r4 , [ r6 , num ] cmp r4 , num beq hexvar ldr r3 , [ r4 ] cmp r0 , r3 bne hexvar b hexvar ldr r3 , [ r4 ] cmp r3 , r0 beq hexvar ldr r4 , [ r4 , num ] cmp r4 , num bne hexvar mov r5 , r0 bl hexvar cmp r0 , num beq hexvar ldr r7 , [ r0 ] mov r0 , r7 bl hexvar add r0 , r0 , hexvar bic r0 , r0 , num bl hexvar mov r4 , r0 mov r1 , r7 str r5 , [ r0 ] , num bl hexvar ldr r3 , [ r6 , num ] str r4 , [ r6 , num ] str r3 , [ r4 , num ] ldrb r0 , [ r4 , num ] cmp r0 , num addne r0 , r4 , num pop { r4 , r5 , r6 , r7 , r8 , pc } stclvc p0 , c13 , [ sb ] , { hexvar }
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar jmp hexvar mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw s0 , - hexvar ( v0 ) beqz s0 , hexvar nop lw v0 , ( s0 ) beq a0 , v0 , hexvar nop lw s0 , num ( s0 ) beqz s0 , hexvar move s1 , a0 lw v0 , ( s0 ) bne v0 , a0 , hexvar nop lb v0 , num ( s0 ) beqz v0 , hexvar move v0 , zero addiu v0 , s0 , num lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s1 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop b hexvar lw s2 , ( v0 ) lui s2 , hexvar addiu s2 , s2 , hexvar move a0 , s2 lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ ebp + num ] , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] jmp hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar add eax , num sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] add eax , num sub esp , num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax + num ] test al , al je hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num jmp hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
mov eax , num test rsi , rsi je hexvar push rbx movq rbx , xmm0 mov ecx , num mov edx , num call hexvar mov rdx , rax mov eax , num test rdx , rdx je hexvar mov qword ptr [ rdx + hexvar ] , rbx mov eax , num pop rbx ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , num jmp hexvar push num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] fld qword ptr [ ebp - hexvar ] fstp qword ptr [ eax + hexvar ] mov eax , num leave ret
xor eax , eax test rsi , rsi je hexvar push r12 push rbp mov r12 , rsi push rbx sub rsp , hexvar cmp qword ptr [ rdi + num ] , num movsd qword ptr [ rsp + num ] , xmm0 je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rdi + hexvar ] add rax , hexvar mov edi , hexvar lea rbp , [ rdx + hexvar ] test rdx , rdx cmove rbp , rax call hexvar pxor xmm0 , xmm0 mov rbx , rax mov qword ptr [ rax + hexvar ] , num movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + num ] , r12 mov rax , qword ptr [ rbp ] test rax , rax je hexvar mov rdx , qword ptr [ rax + num ] movsd xmm1 , qword ptr [ rsp + num ] mov qword ptr [ rdx ] , rbx mov qword ptr [ rax + num ] , rbx mov eax , num movsd qword ptr [ rbx + hexvar ] , xmm1 add rsp , hexvar pop rbx pop rbp pop r12 ret
sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] fld qword ptr [ esp + hexvar ] fstp qword ptr [ esp + num ] mov eax , num test edx , edx je hexvar sub esp , hexvar push num mov ecx , num mov eax , dword ptr [ esp + hexvar ] call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar fld qword ptr [ esp + num ] fstp qword ptr [ edx + hexvar ] mov eax , num add esp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , num jmp hexvar push num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] fld qword ptr [ ebp - hexvar ] fstp qword ptr [ eax + hexvar ] mov eax , num leave ret
xor eax , eax test rsi , rsi je hexvar push r12 push rbp mov r12 , rsi push rbx sub rsp , hexvar cmp qword ptr [ rdi + num ] , num movsd qword ptr [ rsp + num ] , xmm0 je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rdi + hexvar ] add rax , hexvar mov edi , hexvar lea rbp , [ rdx + hexvar ] test rdx , rdx cmove rbp , rax call hexvar pxor xmm0 , xmm0 mov rbx , rax mov qword ptr [ rax + hexvar ] , num movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + num ] , r12 mov rax , qword ptr [ rbp ] test rax , rax je hexvar mov rdx , qword ptr [ rax + num ] movsd xmm1 , qword ptr [ rsp + num ] mov qword ptr [ rdx ] , rbx mov qword ptr [ rax + num ] , rbx mov eax , num movsd qword ptr [ rbx + hexvar ] , xmm1 add rsp , hexvar pop rbx pop rbp pop r12 ret
sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] fld qword ptr [ esp + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , num fstp qword ptr [ esp + num ] call hexvar test eax , eax je hexvar fld qword ptr [ esp + num ] fstp qword ptr [ eax + hexvar ] mov eax , num add esp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 mov eax , num leave ret
test rsi , rsi je hexvar sub rsp , hexvar mov edx , num movsd qword ptr [ rsp + num ] , xmm0 call hexvar test rax , rax je hexvar movsd xmm1 , qword ptr [ rsp + num ] movsd qword ptr [ rax + hexvar ] , xmm1 mov eax , num add rsp , hexvar ret
push { r4 , r5 , r6 , r7 , r8 , lr } subs r4 , r1 , num beq hexvar mov r7 , r3 ldr r3 , [ r0 , num ] mov r6 , r2 cmp r3 , num beq hexvar ldr r8 , [ r0 , num ] cmp r8 , num beq hexvar ldr r3 , [ r0 , hexvar ] mov r0 , hexvar cmp r3 , num addne r8 , r3 , hexvar addeq r8 , r8 , num bl hexvar mov r2 , hexvar mov r1 , num mov r5 , r0 bl hexvar mov r1 , num mov r2 , num ldr r3 , [ r8 ] str r4 , [ r5 , num ] cmp r3 , num str r1 , [ r5 , hexvar ] str r2 , [ r5 , hexvar ] beq hexvar ldr r2 , [ r3 , num ] str r5 , [ r2 ] mov r0 , num str r5 , [ r3 , num ] str r6 , [ r5 , hexvar ] str r7 , [ r5 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] test edx , edx je hexvar cmp edx , num je hexvar jmp hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebx sub esp , num call hexvar add ebx , hexvar test eax , eax je hexvar cmp eax , num je hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] test edi , edi mov dword ptr [ rbp - hexvar ] , edi je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
test edi , edi je hexvar cmp edi , num jne hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi jmp hexvar nop dword ptr [ rax + rax ]
subs r3 , r0 , num beq hexvar cmp r3 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num b hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num b hexvar mov r2 , num ldr r1 , [ pc , num ] b hexvar andeq lr , sl , ip , lsl sb andeq r1 , sl , r8 , lsr r1 andeq r1 , sl , ip , lsr num
subs r3 , r0 , num beq hexvar cmp r3 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num b hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num b hexvar mov r2 , num ldr r1 , [ pc , num ] b hexvar strheq r8 , [ sl ] , -r4 strheq fp , [ sb ] , -ip strheq fp , [ sb ] , -r0
lui gp , hexvar beqz a0 , hexvar addiu gp , gp , hexvar addiu v1 , zero , num bne a0 , v1 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar addiu a2 , zero , num addiu a1 , a1 , - hexvar jr t9 move a0 , zero lui a1 , hexvar addiu a2 , zero , num addiu a1 , a1 , - hexvar jr t9 move a0 , zero lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num jr t9 addiu a1 , a1 , - hexvar
push ebx call hexvar add ebx , hexvar sub esp , num test eax , eax je hexvar cmp eax , num je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar add esp , hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] test edi , edi mov dword ptr [ rbp - hexvar ] , edi je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num bne v0 , v1 , hexvar nop lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , num sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) beq a0 , v0 , hexvar lw s0 , ( a1 ) addiu v0 , zero , num beq a0 , v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , - num addiu a2 , s0 , hexvar sw zero , hexvar ( s0 )
push rbx mov rbx , qword ptr [ rsi ] cmp edi , num je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num lea rdx , [ rbx + hexvar ] xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov edi , hexvar mov rsi , rbx call hexvar mov eax , num pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] cmp eax , num mov esi , dword ptr [ edx ] je hexvar cmp eax , num je hexvar cmp eax , num je hexvar add esp , num mov eax , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] cmp eax , num mov esi , dword ptr [ edx ] je hexvar cmp eax , num je hexvar cmp eax , num je hexvar add esp , num mov eax , num pop ebx pop esi ret
push rbx mov rbx , qword ptr [ rsi ] cmp edi , num je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num lea rdx , [ rbx + hexvar ] xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov edi , hexvar mov rsi , rbx call hexvar mov eax , num pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , num sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) beq a0 , v0 , hexvar lw s0 , ( a1 ) addiu v0 , zero , num beq a0 , v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , - num addiu a2 , s0 , hexvar sw zero , hexvar ( s0 )
push rbx mov rbx , qword ptr [ rsi ] cmp edi , num je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num lea rdx , [ rbx + hexvar ] xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov edi , hexvar mov rsi , rbx call hexvar mov eax , num pop rbx ret
push rbx mov rbx , qword ptr [ rsi ] cmp edi , num je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num lea rdx , [ rbx + hexvar ] xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov edi , hexvar mov rsi , rbx call hexvar mov eax , num pop rbx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx ] cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num je hexvar mov eax , num add esp , num pop ebx pop esi ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
mov ecx , dword ptr [ esp + num ] call hexvar add edx , hexvar mov eax , ecx and ecx , hexvar shr al , num movzx eax , al mov eax , dword ptr [ edx + eax * num - hexvar ] shr eax , cl and eax , num ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , dl movzx edx , byte ptr [ ebp - num ] shr dl , num movzx edx , dl mov edx , dword ptr [ eax + edx * num - hexvar ] movzx eax , byte ptr [ ebp - num ] movzx eax , al and eax , hexvar mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax setne al leave ret
mov eax , edi shr al , num and eax , num mov ecx , edi and ecx , hexvar lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax * num ] shr eax , cl and eax , num ret
andi a0 , a0 , hexvar srl v1 , a0 , num lui a1 , hexvar sll v1 , v1 , num addiu a1 , a1 , hexvar addu v1 , v1 , a1 lw v0 , ( v1 ) srlv v0 , v0 , a0 jr ra andi v0 , v0 , num
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov byte ptr [ ebp - num ] , al mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax * num + hexvar ] mov dl , byte ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] movzx ecx , al and ecx , hexvar mov edx , dword ptr [ ebp - hexvar ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx eax , cl add esp , hexvar pop ebp ret
mov ecx , dword ptr [ esp + num ] call hexvar add edx , hexvar mov eax , ecx and ecx , hexvar shr al , num movzx eax , al mov eax , dword ptr [ edx + eax * num - hexvar ] shr eax , cl and eax , num ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 lui a1 , hexvar addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lui a1 , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw v0 , num ( s0 ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , ( s0 ) lui v0 , hexvar addiu v1 , zero , num sb v1 , hexvar ( v0 ) lw a0 , ( s0 ) beqz a0 , hexvar addiu a1 , zero , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sw zero , num ( s0 ) sb zero , hexvar ( s0 ) lui v1 , hexvar lw v0 , hexvar ( v1 ) addiu v0 , v0 , num sw v0 , hexvar ( v1 ) addiu s0 , zero , num move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar sw s1 , num ( s0 )
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r4 , [ r3 ] ldr r2 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] mov r1 , r4 mov r0 , num bl hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] mov r1 , num mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] add r3 , r3 , num ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] mov r3 , num mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , num ( v0 )
push ebp push edi mov ecx , num push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov ebp , edx lea edi , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar mov byte ptr [ ebx + hexvar ] , num mov eax , dword ptr [ eax ] test eax , eax mov dword ptr [ ebp ] , eax je hexvar sub esp , num push num push eax call hexvar add esp , hexvar mov dword ptr [ ebp + num ] , num mov byte ptr [ ebp + hexvar ] , num add dword ptr [ ebx + hexvar ] , num mov edx , num add esp , hexvar pop ebx mov eax , edx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a1 lui a1 , hexvar sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) bnez v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , zero addiu a2 , zero , num jalr t9 addiu a1 , a1 , - hexvar addiu v1 , zero , num lw gp , hexvar ( sp ) sw v0 , num ( s0 ) lui v0 , hexvar sb v1 , - hexvar ( v0 ) lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) beqz a0 , hexvar sw a0 , ( s0 ) lw t9 , - hexvar ( gp ) addiu a1 , zero , num bal hexvar addiu s1 , zero , num lui v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw v0 , - hexvar ( v1 ) sw zero , num ( s0 ) sb zero , hexvar ( s0 ) addiu v0 , v0 , num lw s0 , hexvar ( sp ) sw v0 , - hexvar ( v1 ) move v0 , s1 lw s1 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s2 sw s2 , num ( s0 )
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r1 ldr r1 , [ pc , hexvar ] mov r7 , r0 bl hexvar cmp r0 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] bl hexvar mov r3 , num ldr r2 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r4 , [ r2 ] str r0 , [ r5 , num ] cmp r4 , num str r4 , [ r5 ] strb r3 , [ r6 , hexvar ] beq hexvar mov r0 , r4 mov r1 , num bl hexvar mov r2 , num str r2 , [ r5 , num ] strb r2 , [ r5 , hexvar ] mov r5 , num ldr r3 , [ r6 , hexvar ] add r3 , r3 , num str r3 , [ r6 , hexvar ] mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num cmp byte ptr [ rdi ] , hexvar jne hexvar cmp byte ptr [ rdi + num ] , num jne hexvar xor edi , edi mov edx , num mov esi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax mov byte ptr [ rip + hexvar ] , num test rdi , rdi mov qword ptr [ rbx ] , rdi je hexvar mov esi , num call hexvar add dword ptr [ rip + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov byte ptr [ rbx + hexvar ] , num mov ebx , num add rsp , num mov eax , ebx pop rbx pop rbp ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax push edi push num call hexvar add esp , hexvar test eax , eax js hexvar mov eax , dword ptr [ esp + hexvar ] and eax , hexvar mov esi , num cmp eax , hexvar jne hexvar sub esp , num push hexvar push num call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push edi call hexvar mov dword ptr [ esi + num ] , eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi ] , edi mov eax , esi call hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] or eax , dword ptr [ esi + hexvar ] je hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar mov edx , num mov eax , esi call hexvar test eax , eax jne hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov esi , num mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebp push edi mov ecx , num push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov ebp , edx lea edi , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar mov byte ptr [ ebx + hexvar ] , num mov eax , dword ptr [ eax ] test eax , eax mov dword ptr [ ebp ] , eax je hexvar sub esp , num push num push eax call hexvar add esp , hexvar mov dword ptr [ ebp + num ] , num mov byte ptr [ ebp + hexvar ] , num add dword ptr [ ebx + hexvar ] , num mov edx , num add esp , hexvar pop ebx mov eax , edx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } ldr r5 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r5 ] mov r1 , r0 mov r6 , r0 mov r2 , sp mov r0 , num str r3 , [ sp , hexvar ] bl hexvar cmp r0 , num blt hexvar ldr r3 , [ sp , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar bne hexvar mov r1 , hexvar mov r0 , num bl hexvar subs r4 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r6 bl hexvar cmp r0 , num str r0 , [ r4 , num ] beq hexvar add r3 , sp , hexvar ldm r3 , { r2 , r3 } str r6 , [ r4 ] str r2 , [ r4 , num ] str r3 , [ r4 , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar add r3 , r4 , hexvar ldm r3 , { r2 , r3 } orrs r3 , r2 , r3 beq hexvar ldr r3 , [ pc , hexvar ] ldr r1 , [ r3 ] cmp r1 , num bne hexvar mov r0 , r4 bl hexvar cmp r0 , num bne hexvar ldr r0 , [ r4 , num ] cmp r0 , num beq hexvar bl hexvar mov r0 , r4 bl hexvar mov r4 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] mov r0 , r4 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc } ldrmi r7 , [ ip , - hexvar ] ldrmi r7 , [ ip , - hexvar ]
push rax mov rdi , qword ptr [ rdi + num ] call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea eax , [ rax + rcx ] add eax , num sar eax , num pop rcx ret
push rax mov rdi , qword ptr [ rdi + num ] call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea eax , [ rax + rcx ] add eax , num sar eax , num pop rcx ret
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar add eax , num lea edx , [ eax + num ] test eax , eax cmovs eax , edx sar eax , num add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] call hexvar lea edx , [ eax + hexvar ] add eax , num cmovs eax , edx add esp , hexvar sar eax , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] call hexvar lea edx , [ eax + hexvar ] add eax , num cmovs eax , edx add esp , hexvar sar eax , num pop ebx ret
push rax mov rdi , qword ptr [ rdi + num ] call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea eax , [ rax + rcx ] add eax , num sar eax , num pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a0 , num ( a0 )
push rax mov rdi , qword ptr [ rdi + num ] call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea eax , [ rax + rcx ] add eax , num sar eax , num pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a0 , num ( a0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , v0 , num bltz v0 , hexvar nop sra v0 , v0 , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , v0 , num
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar add eax , num lea edx , [ eax + num ] test eax , eax cmovs eax , edx sar eax , num add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp ecx , dword ptr [ ebp + num ] mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar lea eax , [ hexvar ] cmp eax , dword ptr [ ebp + num ] sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp ecx , dword ptr [ ebp + num ] mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar lea eax , [ hexvar ] cmp eax , dword ptr [ ebp + num ] sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp ecx , dword ptr [ ebp + num ] mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar lea eax , [ hexvar ] cmp eax , dword ptr [ ebp + num ] sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] lea ecx , [ hexvar ] cmp ecx , eax mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - num ] , ecx mov byte ptr [ ebp - num ] , num jmp hexvar lea eax , [ hexvar ] cmp eax , dword ptr [ ebp + num ] sete cl mov dword ptr [ ebp - num ] , hexvar and cl , num mov byte ptr [ ebp - num ] , cl jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
lui gp , hexvar addiu gp , gp , hexvar lw v0 , - hexvar ( gp ) beq a0 , v0 , hexvar nop lw v0 , - hexvar ( gp ) subu a0 , a0 , v0 jr ra sltiu v0 , a0 , num jr ra addiu v0 , zero , num
lui gp , hexvar addiu gp , gp , hexvar lw v0 , - hexvar ( gp ) beq a0 , v0 , hexvar nop lw v0 , - hexvar ( gp ) subu a0 , a0 , v0 jr ra sltiu v0 , a0 , num jr ra addiu v0 , zero , num
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp ecx , dword ptr [ ebp + num ] mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar lea eax , [ hexvar ] cmp eax , dword ptr [ ebp + num ] sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp ecx , dword ptr [ ebp + num ] mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar lea eax , [ hexvar ] cmp eax , dword ptr [ ebp + num ] sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - num ] , al jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
lui gp , hexvar addiu gp , gp , - hexvar lw v0 , - hexvar ( gp ) beq a0 , v0 , hexvar nop lw v0 , - hexvar ( gp ) subu a0 , a0 , v0 jr ra sltiu v0 , a0 , num jr ra addiu v0 , zero , num
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp ecx , dword ptr [ ebp + num ] mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar lea eax , [ hexvar ] cmp eax , dword ptr [ ebp + num ] sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax call hexvar lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar movd edx , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] bl hexvar sub r3 , fp , hexvar mov r2 , r3 ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] strb r2 , [ r3 , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r1 , num mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , hexvar ] mov r3 , num b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] call hexvar xor eax , eax test esi , esi je hexvar mov edx , dword ptr [ edi ] mov esi , dword ptr [ esi + edx * num ] test esi , esi je hexvar sub esp , num add edx , num mov dword ptr [ edi ] , edx push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar xor edx , edx mov ebx , eax mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , esi mov eax , esi call hexvar fstp dword ptr [ ebx + hexvar ] add esp , hexvar mov eax , num pop ebx pop esi pop edi ret
push r12 push rbp mov r12 , rdx push rbx mov rbp , rsi mov rbx , rdi mov edx , num mov esi , hexvar xor edi , edi call hexvar xor esi , esi mov rdx , rax xor edi , edi xor eax , eax call hexvar mov rdx , r12 mov rsi , rbp mov rdi , rbx pop rbx pop rbp pop r12 jmp hexvar nop
push ebp mov ebp , esp push eax mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num mov byte ptr [ hexvar ] , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al mov eax , esp add eax , - hexvar mov esp , eax mov cl , byte ptr [ ebp - num ] and cl , num mov byte ptr [ eax ] , cl mov cl , byte ptr [ eax ] and cl , num mov byte ptr [ hexvar ] , cl mov esp , ebp pop ebp ret
push ebp mov ebp , esp push eax mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num mov byte ptr [ hexvar ] , al add esp , num pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp move v0 , a0 sb v0 , num ( fp ) lui v0 , hexvar lbu v1 , num ( fp ) sb v1 , hexvar ( v0 ) nop move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al mov eax , esp add eax , - hexvar mov esp , eax mov cl , byte ptr [ ebp - num ] and cl , num mov byte ptr [ eax ] , cl mov cl , byte ptr [ eax ] and cl , num mov byte ptr [ hexvar ] , cl mov esp , ebp pop ebp ret
push ebp mov ebp , esp push eax mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num mov byte ptr [ hexvar ] , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , dl movzx edx , byte ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , dl nop leave ret
push ebp mov ebp , esp push eax mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num mov byte ptr [ hexvar ] , al add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num mov byte ptr [ hexvar ] , al add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num mov byte ptr [ hexvar ] , al add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) move a3 , s1 move a2 , v0 addiu a1 , zero , num move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) move a3 , s1 move a2 , v0 addiu a1 , zero , num move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw s1 , ( s0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw s3 , hexvar ( sp ) move a3 , s2 move a2 , v0 addiu a1 , zero , num move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , ( s0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar cmp eax , num jge hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar cmp eax , num jge hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v0 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar cmp eax , num jge hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar cmp eax , num jge hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push edi push esi mov esi , eax push ebx mov edi , edx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar mov dword ptr [ esp ] , edi push esi mov esi , dword ptr [ ebx + hexvar ] push eax push num push dword ptr [ esi ] call hexvar add esp , hexvar push dword ptr [ esi ] call hexvar call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar cmp eax , num jge hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s4 , a0 move s1 , a1 move s3 , a2 move s2 , a3 addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 addiu v0 , zero , hexvar sw v0 , ( s0 )
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdi , qword ptr [ rbx + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov rdi , qword ptr [ rbx + hexvar ] xor r15d , r15d mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] xor r15d , r15d mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov r15 , rbx jmp hexvar xor r15d , r15d mov rax , r15 pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdi , qword ptr [ rbx + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdi , qword ptr [ rbx + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea ebp , [ ebx - hexvar ] mov esi , dword ptr [ esp + hexvar ] push hexvar push ebp push hexvar call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar mov dword ptr [ eax ] , hexvar call hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ edi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test esi , esi mov dword ptr [ edi + hexvar ] , num mov dword ptr [ edi + hexvar ] , eax mov eax , hexvar cmovle esi , eax mov dword ptr [ edi + num ] , esi push hexvar push ebp push esi call hexvar add esp , hexvar test eax , eax mov dword ptr [ edi + num ] , eax mov ecx , dword ptr [ edi + hexvar ] je hexvar test ecx , ecx je hexvar mov edx , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] test edx , edx cmovne eax , dword ptr [ esp + hexvar ] sub esp , num mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push eax push ecx call hexvar add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push eax lea eax , [ ebx - hexvar ] push eax push dword ptr [ edi + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ edi + hexvar ] push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar mov dword ptr [ edi ] , hexvar push num push num push num push dword ptr [ edi + hexvar ] call hexvar add esp , hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov rdi , qword ptr [ rbx + hexvar ] xor r15d , r15d mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] xor r15d , r15d mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov r15 , rbx jmp hexvar xor r15d , r15d mov rax , r15 pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov rdi , qword ptr [ rbx + hexvar ] xor r15d , r15d mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] xor r15d , r15d mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov r15 , rbx jmp hexvar xor r15d , r15d mov rax , r15 pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lui s3 , hexvar sw s6 , hexvar ( sp ) move s6 , a0 sw s4 , hexvar ( sp ) addiu a0 , zero , hexvar sw s2 , hexvar ( sp ) move s4 , a2 sw s1 , hexvar ( sp ) move s2 , a1 sw s0 , hexvar ( sp ) addiu a1 , s3 , hexvar sw gp , hexvar ( sp ) addiu a2 , zero , hexvar sw ra , hexvar ( sp ) move s1 , a3 lw t9 , - hexvar ( gp ) jalr t9 sw s5 , hexvar ( sp ) lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) addiu s5 , zero , hexvar jalr t9 sw s5 , ( v0 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) sw v0 , hexvar ( s0 ) sw s6 , hexvar ( s0 ) blez s1 , hexvar sw zero , hexvar ( s0 ) sw s1 , num ( s0 ) lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , s3 , hexvar jalr t9 move a0 , s1 lw a0 , hexvar ( s0 ) lw gp , hexvar ( sp ) beqz a0 , hexvar sw v0 , num ( s0 ) beqz v0 , hexvar nop beqz s2 , hexvar nop lui a1 , hexvar lw t9 , - hexvar ( gp ) move a2 , s2 jalr t9 addiu a1 , a1 , hexvar blez v0 , hexvar nop beqz s4 , hexvar move a1 , s4 jal hexvar move a0 , s0 beqz v0 , hexvar nop lw ra , hexvar ( sp ) move v0 , s0 lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu s1 , zero , hexvar b hexvar sw s5 , num ( s0 )
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax mov rdi , qword ptr [ rbx + hexvar ] test rax , rax je hexvar test rdi , rdi je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push r14 push r13 mov edi , hexvar push r12 push rbp mov r14 , rsi push rbx mov r13 , rdx mov r12d , ecx mov ebp , r8d mov ebx , r9d call hexvar pxor xmm0 , xmm0 mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , r14 mov qword ptr [ rax + num ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov dword ptr [ rax + hexvar ] , ebp movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax + hexvar ] , ebx mov qword ptr [ rax + hexvar ] , - num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov dword ptr [ rbp - hexvar ] , r9d mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , - num mov rax , qword ptr [ rbp - num ] leave ret
push r14 push r13 push r12 push rbp push rbx mov r14 , rsi mov r13 , rdx mov r12d , ecx mov ebp , r8d mov ebx , r9d mov edi , hexvar call hexvar mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , r14 mov qword ptr [ rax + num ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov dword ptr [ rax + hexvar ] , ebp mov dword ptr [ rax + hexvar ] , ebx mov qword ptr [ rax + hexvar ] , - num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 push r12 push rbp push rbx mov r14 , rsi mov r13 , rdx mov r12d , ecx mov ebp , r8d mov ebx , r9d mov edi , hexvar call hexvar mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , r14 mov qword ptr [ rax + num ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov dword ptr [ rax + hexvar ] , ebp mov dword ptr [ rax + hexvar ] , ebx mov qword ptr [ rax + hexvar ] , - num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push hexvar call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx add esp , hexvar pop ebx ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , num push hexvar push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push hexvar call hexvar mov dword ptr [ eax + hexvar ] , num mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov dword ptr [ rbp - hexvar ] , r9d mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , - num mov rax , qword ptr [ rbp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a1 move s2 , a2 move s1 , a3 addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 addiu a2 , zero , hexvar move a1 , zero addiu a0 , v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw s3 , ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov dword ptr [ rbp - hexvar ] , r9d mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , - num mov rax , qword ptr [ rbp - num ] leave ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push r15 push r14 push r12 push rbx push rax mov rax , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov r14 , rdi mov r12 , qword ptr [ rdi + hexvar ] mov r15 , qword ptr [ rax + hexvar ] mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] cmp rcx , r15 je hexvar test rcx , rcx jne hexvar cmp r15 , num jb hexvar mov ecx , dword ptr [ rax + num ] cmp ecx , dword ptr [ r12 + hexvar ] jae hexvar mov qword ptr [ rax ] , r15 mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rbx ] , rdx mov qword ptr [ rax + hexvar ] , rbx add ecx , num mov dword ptr [ rax + num ] , ecx mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov rax , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov r14 , rdi mov r12 , qword ptr [ rdi + hexvar ] mov r15 , qword ptr [ rax + hexvar ] mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] cmp rcx , r15 je hexvar test rcx , rcx jne hexvar cmp r15 , num jb hexvar mov ecx , dword ptr [ rax + num ] cmp ecx , dword ptr [ r12 + hexvar ] jae hexvar mov qword ptr [ rax ] , r15 mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rbx ] , rdx mov qword ptr [ rax + hexvar ] , rbx add ecx , num mov dword ptr [ rax + num ] , ecx mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edi , dword ptr [ eax + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esi + hexvar ] lea ebp , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + num ] , edx push hexvar push ebp push hexvar push num call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ eax ] test ecx , ecx je hexvar cmp dword ptr [ esp + hexvar ] , ecx jne hexvar mov ecx , dword ptr [ eax + num ] cmp ecx , dword ptr [ edx + hexvar ] jae hexvar mov edx , dword ptr [ esp + hexvar ] cmp edx , num jbe hexvar mov dword ptr [ eax ] , edx mov edx , dword ptr [ eax + num ] add ecx , num mov dword ptr [ edi ] , edx mov dword ptr [ eax + num ] , edi mov dword ptr [ eax + num ] , ecx push hexvar push ebp push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ] push hexvar push ebp push hexvar push hexvar call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r12 push rbx push rax mov rax , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov r14 , rdi mov r12 , qword ptr [ rdi + hexvar ] mov r15 , qword ptr [ rax + hexvar ] mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] cmp rcx , r15 je hexvar test rcx , rcx jne hexvar cmp r15 , num jb hexvar mov ecx , dword ptr [ rax + num ] cmp ecx , dword ptr [ r12 + hexvar ] jae hexvar mov qword ptr [ rax ] , r15 mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rbx ] , rdx mov qword ptr [ rax + hexvar ] , rbx add ecx , num mov dword ptr [ rax + num ] , ecx mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov rax , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov r14 , rdi mov r12 , qword ptr [ rdi + hexvar ] mov r15 , qword ptr [ rax + hexvar ] mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] cmp rcx , r15 je hexvar test rcx , rcx jne hexvar cmp r15 , num jb hexvar mov ecx , dword ptr [ rax + num ] cmp ecx , dword ptr [ r12 + hexvar ] jae hexvar mov qword ptr [ rax ] , r15 mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rbx ] , rdx mov qword ptr [ rax + hexvar ] , rbx add ecx , num mov dword ptr [ rax + num ] , ecx mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov rax , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov r14 , rdi mov r12 , qword ptr [ rdi + hexvar ] mov r15 , qword ptr [ rax + hexvar ] mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] cmp rcx , r15 je hexvar test rcx , rcx jne hexvar cmp r15 , num jb hexvar mov ecx , dword ptr [ rax + num ] cmp ecx , dword ptr [ r12 + hexvar ] jae hexvar mov qword ptr [ rax ] , r15 mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rbx ] , rdx mov qword ptr [ rax + hexvar ] , rbx add ecx , num mov dword ptr [ rax + num ] , ecx mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , rdi sub rax , - hexvar mov qword ptr [ rsp ] , rax mov rax , qword ptr [ rsp ] mov ecx , hexvar add rcx , qword ptr [ rax ] mov qword ptr [ rsp + num ] , rcx mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov ebp , hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , ebp nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rsp + num ] mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ rsp + hexvar ] xor esi , esi call hexvar mov rax , qword ptr [ rsp ] mov rax , qword ptr [ rax ] mov qword ptr [ rax + hexvar ] , num mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
push r15 push r14 push r12 push rbx push rax mov rax , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov r14 , rdi mov r12 , qword ptr [ rdi + hexvar ] mov r15 , qword ptr [ rax + hexvar ] mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] cmp rcx , r15 je hexvar test rcx , rcx jne hexvar cmp r15 , num jb hexvar mov ecx , dword ptr [ rax + num ] cmp ecx , dword ptr [ r12 + hexvar ] jae hexvar mov qword ptr [ rax ] , r15 mov rdx , qword ptr [ rax + hexvar ] mov qword ptr [ rbx ] , rdx mov qword ptr [ rax + hexvar ] , rbx add ecx , num mov dword ptr [ rax + num ] , ecx mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num add rsp , num pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edi , dword ptr [ eax + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esi + hexvar ] lea ebp , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + num ] , edx push hexvar push ebp push hexvar push num call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ eax ] test ecx , ecx je hexvar cmp dword ptr [ esp + hexvar ] , ecx jne hexvar mov ecx , dword ptr [ eax + num ] cmp ecx , dword ptr [ edx + hexvar ] jae hexvar mov edx , dword ptr [ esp + hexvar ] cmp edx , num jbe hexvar mov dword ptr [ eax ] , edx mov edx , dword ptr [ eax + num ] add ecx , num mov dword ptr [ edi ] , edx mov dword ptr [ eax + num ] , edi mov dword ptr [ eax + num ] , ecx push hexvar push ebp push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ] push hexvar push ebp push hexvar push hexvar call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rcx mov r14d , edx mov r15d , esi mov rdx , qword ptr [ rdi + num ] test rdx , rdx je hexvar mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rbp call hexvar mov r12d , eax test eax , eax js hexvar mov edi , num call hexvar test rax , rax jne hexvar jmp hexvar mov rbx , rdi mov rdi , rbp xor esi , esi call qword ptr [ rbx + hexvar ] mov r12d , eax mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , rax lea rsi , [ rsp + num ] mov rdi , rbp call qword ptr [ rbx + hexvar ] mov edi , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov dword ptr [ rbx ] , r12d xor edi , edi mov esi , r15d mov edx , r14d mov rcx , rbx call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rcx mov r14d , edx mov r15d , esi mov rdx , qword ptr [ rdi + num ] test rdx , rdx je hexvar mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rbp call hexvar mov r12d , eax test eax , eax js hexvar mov edi , num call hexvar test rax , rax jne hexvar jmp hexvar mov rbx , rdi mov rdi , rbp xor esi , esi call qword ptr [ rbx + hexvar ] mov r12d , eax mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , rax lea rsi , [ rsp + num ] mov rdi , rbp call qword ptr [ rbx + hexvar ] mov edi , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov dword ptr [ rbx ] , r12d xor edi , edi mov esi , r15d mov edx , r14d mov rcx , rbx call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + num ] test eax , eax jne hexvar sub esp , num push num push ebp call dword ptr [ esi + hexvar ] mov edi , eax add esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push edi call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , num lea eax , [ esp + hexvar ] push eax push ebp call dword ptr [ esi + hexvar ] add esp , hexvar sub esp , hexvar push num call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax mov dword ptr [ esi ] , edi push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a1 move s4 , a2 move s2 , a3 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw a2 , num ( a0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + num ] test eax , eax jne hexvar sub esp , num push num push ebp call dword ptr [ esi + hexvar ] mov edi , eax add esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push edi call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , num lea eax , [ esp + hexvar ] push eax push ebp call dword ptr [ esi + hexvar ] add esp , hexvar sub esp , hexvar push num call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax mov dword ptr [ esi ] , edi push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rcx mov r14d , edx mov r15d , esi mov rdx , qword ptr [ rdi + num ] test rdx , rdx je hexvar mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rbp call hexvar mov r12d , eax test eax , eax js hexvar mov edi , num call hexvar test rax , rax jne hexvar jmp hexvar mov rbx , rdi mov rdi , rbp xor esi , esi call qword ptr [ rbx + hexvar ] mov r12d , eax mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , rax lea rsi , [ rsp + num ] mov rdi , rbp call qword ptr [ rbx + hexvar ] mov edi , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov dword ptr [ rbx ] , r12d xor edi , edi mov esi , r15d mov edx , r14d mov rcx , rbx call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rcx mov r14d , edx mov r15d , esi mov rdx , qword ptr [ rdi + num ] test rdx , rdx je hexvar mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rbp call hexvar mov r12d , eax test eax , eax js hexvar mov edi , num call hexvar test rax , rax jne hexvar jmp hexvar mov rbx , rdi mov rdi , rbp xor esi , esi call qword ptr [ rbx + hexvar ] mov r12d , eax mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , rax lea rsi , [ rsp + num ] mov rdi , rbp call qword ptr [ rbx + hexvar ] mov edi , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov dword ptr [ rbx ] , r12d xor edi , edi mov esi , r15d mov edx , r14d mov rcx , rbx call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rcx mov r14d , edx mov r15d , esi mov rdx , qword ptr [ rdi + num ] test rdx , rdx je hexvar mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rbp call hexvar mov r12d , eax test eax , eax js hexvar mov edi , num call hexvar test rax , rax jne hexvar jmp hexvar mov rbx , rdi mov rdi , rbp xor esi , esi call qword ptr [ rbx + hexvar ] mov r12d , eax mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , rax lea rsi , [ rsp + num ] mov rdi , rbp call qword ptr [ rbx + hexvar ] mov edi , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov dword ptr [ rbx ] , r12d xor edi , edi mov esi , r15d mov edx , r14d mov rcx , rbx call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rcx mov r14d , edx mov r15d , esi mov rdx , qword ptr [ rdi + num ] test rdx , rdx je hexvar mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rbp call hexvar mov r12d , eax test eax , eax js hexvar mov edi , num call hexvar test rax , rax jne hexvar jmp hexvar mov rbx , rdi mov rdi , rbp xor esi , esi call qword ptr [ rbx + hexvar ] mov r12d , eax mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , rax lea rsi , [ rsp + num ] mov rdi , rbp call qword ptr [ rbx + hexvar ] mov edi , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov dword ptr [ rbx ] , r12d xor edi , edi mov esi , r15d mov edx , r14d mov rcx , rbx call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rcx mov r14d , edx mov r15d , esi mov rdx , qword ptr [ rdi + num ] test rdx , rdx je hexvar mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rbp call hexvar mov r12d , eax test eax , eax js hexvar mov edi , num call hexvar test rax , rax jne hexvar jmp hexvar mov rbx , rdi mov rdi , rbp xor esi , esi call qword ptr [ rbx + hexvar ] mov r12d , eax mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , rax lea rsi , [ rsp + num ] mov rdi , rbp call qword ptr [ rbx + hexvar ] mov edi , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov dword ptr [ rbx ] , r12d xor edi , edi mov esi , r15d mov edx , r14d mov rcx , rbx call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] test edx , edx je hexvar lea ecx , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num push num push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx cmp dword ptr [ esp + hexvar ] , num jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov edx , hexvar jmp hexvar mov edx , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx nop add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) move s0 , a1 lw v0 , num ( a0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] test edx , edx je hexvar sub esp , num push num lea eax , [ esp + hexvar ] push eax call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar cmp esi , num mov dword ptr [ eax ] , esi je hexvar mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , ecx add esp , num pop ebx pop esi ret
push rbp push rbx push rax mov rbx , rdx mov ebp , esi mov qword ptr [ rsp ] , rdi cmp qword ptr [ rdi + num ] , num je hexvar mov rdi , rsp xor esi , esi call hexvar mov rdi , qword ptr [ rsp ] mov dword ptr [ rdi ] , ebp cmp ebp , num jne hexvar xor eax , eax test rbx , rbx mov ecx , hexvar cmove ecx , eax mov dword ptr [ rdi + num ] , ecx add rsp , num pop rbx pop rbp ret
push rbp push rbx push rax mov rbx , rdx mov ebp , esi mov qword ptr [ rsp ] , rdi cmp qword ptr [ rdi + num ] , num je hexvar mov rdi , rsp xor esi , esi call hexvar mov rdi , qword ptr [ rsp ] mov dword ptr [ rdi ] , ebp cmp ebp , num jne hexvar xor eax , eax test rbx , rbx mov ecx , hexvar cmove ecx , eax mov dword ptr [ rdi + num ] , ecx add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
lui gp , hexvar lw v1 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) beqz v1 , hexvar sw a0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , zero bal hexvar addiu a0 , sp , hexvar addiu v1 , zero , num lw v0 , hexvar ( sp ) beq s0 , v1 , hexvar sw s0 , ( v0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) sw s1 , num ( v0 ) lw s1 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move v0 , a0 addiu v1 , zero , num bne s0 , v1 , hexvar sw s0 , ( v0 ) addiu a2 , zero , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) movz a2 , zero , s1 lw s1 , hexvar ( sp ) sw a2 , num ( v0 ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rdx mov r12d , esi mov qword ptr [ rsp + num ] , rdi mov rax , qword ptr [ rdi + num ] xor ecx , ecx test rdx , rdx mov ebx , hexvar cmove ebx , ecx cmp esi , num mov ecx , hexvar mov ebp , hexvar cmove ebp , ecx mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r13d , hexvar lea r14 , [ rsp + num ] jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r13d cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + num ] , r15 mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , r14 xor esi , esi call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , r12d mov eax , ebp jmp hexvar mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + num ] , ebx mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) move s0 , a1 lw v0 , num ( a0 )
push r15 push r14 push r12 push rbx push rax test rsi , rsi je hexvar mov r15 , rsi cmp qword ptr [ rsi ] , num je hexvar mov r14 , rdx mov r12 , rdi test rdi , rdi je hexvar mov rbx , qword ptr [ r12 ] test rbx , rbx jne hexvar call hexvar test rax , rax je hexvar mov rbx , rax test r12 , r12 je hexvar mov qword ptr [ r12 ] , rbx lea rdi , [ rbx + num ] mov rsi , r15 mov rdx , r14 call hexvar test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar call hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] add eax , num sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push r15 push r14 push r12 push rbx push rax test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi ] , num je hexvar mov r15 , rdx mov r14 , rdi test rdi , rdi je hexvar mov r12 , qword ptr [ r14 ] test r12 , r12 jne hexvar call hexvar mov r12 , rax test rax , rax je hexvar lea rdi , [ r12 + num ] mov rsi , rbx mov rdx , r15 call hexvar test rax , rax je hexvar test r14 , r14 je hexvar mov qword ptr [ r14 ] , r12 jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r12d , r12d mov rax , r12 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar call hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] add eax , num sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ esp + hexvar ] , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ edi ] test eax , eax je hexvar test ebp , ebp je hexvar mov esi , dword ptr [ ebp ] test esi , esi je hexvar lea eax , [ esi + num ] sub esp , num push dword ptr [ esp + hexvar ] push edi push eax call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ ebp ] , esi add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) lw s4 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s4 ) sw v0 , hexvar ( sp ) beqz a1 , hexvar lui a3 , hexvar lw v0 , ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push r15 push r14 push r12 push rbx push rax test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi ] , num je hexvar mov r15 , rdx mov r14 , rdi test rdi , rdi je hexvar mov r12 , qword ptr [ r14 ] test r12 , r12 jne hexvar call hexvar mov r12 , rax test rax , rax je hexvar lea rdi , [ r12 + num ] mov rsi , rbx mov rdx , r15 call hexvar test rax , rax je hexvar test r14 , r14 je hexvar mov qword ptr [ r14 ] , r12 jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r12d , r12d mov rax , r12 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test ebp , ebp je hexvar mov eax , dword ptr [ ebp ] test eax , eax je hexvar test edi , edi je hexvar mov esi , dword ptr [ edi ] test esi , esi je hexvar lea edi , [ ebx - hexvar ] push edi push dword ptr [ esp + hexvar ] push ebp push num call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar mov eax , dword ptr [ eax ] test eax , eax je hexvar cmp eax , num je hexvar cmp eax , num lea esi , [ ebx - hexvar ] je hexvar sub esp , hexvar push hexvar push esi push hexvar push hexvar push hexvar call hexvar add esp , hexvar sub esp , hexvar push hexvar push esi push hexvar push hexvar push hexvar call hexvar add esp , hexvar push edi push ebp call hexvar add esp , hexvar sub esp , hexvar push hexvar push esi push hexvar jmp hexvar mov esi , esi lea edi , [ edi ] sub esp , hexvar push dword ptr [ ebp + num ] call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num push eax mov dword ptr [ esp + hexvar ] , eax call hexvar mov edx , dword ptr [ esi + num ] add esp , hexvar mov eax , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push edx call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num mov dword ptr [ esi + num ] , eax push edi push ebp call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ edi ] test eax , eax je hexvar test ebp , ebp je hexvar mov esi , dword ptr [ ebp ] test esi , esi je hexvar lea eax , [ esi + num ] sub esp , num push dword ptr [ esp + hexvar ] push edi push eax call hexvar add esp , hexvar test eax , eax je hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
test edi , edi mov byte ptr [ rip + hexvar ] , num je hexvar mov eax , edi push rbx mov ebx , edi and eax , num test dil , num jne hexvar test eax , eax je hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , hexvar call hexvar test bl , num je hexvar test bl , num jne hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , hexvar call hexvar test ebx , hexvar lea rax , [ rip + hexvar ] je hexvar and ebx , num jne hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar lea rdi , [ rip + hexvar ] mov edx , hexvar mov rsi , rax call hexvar lea rax , [ rip + hexvar ] pop rbx ret
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) beqz a0 , hexvar sb zero , hexvar ( s1 ) andi v0 , a0 , num move s0 , a0 andi v1 , a0 , num bnez v0 , hexvar addiu s2 , s1 , hexvar beqz v1 , hexvar andi v0 , s0 , num lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jalr t9 addiu a0 , s1 , hexvar lw gp , hexvar ( sp ) andi v0 , s0 , num beqz v0 , hexvar addiu v0 , zero , - num andi v0 , s0 , num bnez v0 , hexvar lui a1 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , s1 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , - num and v0 , s0 , v0 beqz v0 , hexvar andi s0 , s0 , num bnez s0 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , hexvar jalr t9 move a0 , zero addiu a2 , zero , hexvar lw gp , hexvar ( sp ) addiu a0 , s1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lw ra , hexvar ( sp ) move v0 , s2 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( s1 )
push edi push esi push ebx call hexvar add ebx , hexvar test eax , eax mov byte ptr [ ebx + hexvar ] , num je hexvar mov esi , eax and eax , num test esi , num jne hexvar test eax , eax jne hexvar lea edi , [ ebx + hexvar ] test esi , num je hexvar test esi , num jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push hexvar push eax push edi call hexvar add esp , hexvar test esi , hexvar mov eax , edi je hexvar and esi , num jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar add esp , hexvar push hexvar push eax push edi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar test eax , eax mov byte ptr [ ebx + hexvar ] , num je hexvar mov esi , eax and eax , num test esi , num jne hexvar test eax , eax jne hexvar lea edi , [ ebx + hexvar ] test esi , num je hexvar test esi , num jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push hexvar push eax push edi call hexvar add esp , hexvar test esi , hexvar mov eax , edi je hexvar and esi , num jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar add esp , hexvar push hexvar push eax push edi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar test eax , eax mov byte ptr [ ebx + hexvar ] , num je hexvar mov esi , eax and eax , num test esi , num jne hexvar test eax , eax jne hexvar lea edi , [ ebx + hexvar ] test esi , num je hexvar test esi , num jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push hexvar push eax push edi call hexvar add esp , hexvar test esi , hexvar mov eax , edi je hexvar and esi , num jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar add esp , hexvar push hexvar push eax push edi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) beqz a0 , hexvar sb zero , hexvar ( s1 ) andi v0 , a0 , num move s0 , a0 andi v1 , a0 , num bnez v0 , hexvar addiu s2 , s1 , hexvar beqz v1 , hexvar andi v0 , s0 , num lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , s1 , hexvar lw gp , hexvar ( sp ) andi v0 , s0 , num beqz v0 , hexvar addiu v0 , zero , - num andi v0 , s0 , num bnez v0 , hexvar lui a1 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , s1 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , - num and v0 , s0 , v0 beqz v0 , hexvar andi s0 , s0 , num bnez s0 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero addiu a2 , zero , hexvar lw gp , hexvar ( sp ) addiu a0 , s1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lw ra , hexvar ( sp ) move v0 , s2 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( s1 ) beqz v1 , hexvar sb zero , num ( s2 ) lui v0 , hexvar lui v1 , hexvar addiu v0 , v0 , hexvar b hexvar sw v0 , hexvar ( v1 ) lui a1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) addiu a2 , zero , num lw s1 , hexvar ( sp ) addiu a1 , a1 , - hexvar lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar lui a1 , hexvar addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , s1 , hexvar b hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
test edi , edi mov byte ptr [ rip + hexvar ] , num je hexvar mov eax , edi push rbx mov ebx , edi and eax , num test dil , num jne hexvar test eax , eax je hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , hexvar call hexvar test bl , num je hexvar test bl , num jne hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , hexvar call hexvar test ebx , hexvar lea rax , [ rip + hexvar ] je hexvar and ebx , num jne hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar lea rdi , [ rip + hexvar ] mov edx , hexvar mov rsi , rax call hexvar lea rax , [ rip + hexvar ] pop rbx ret
test edi , edi mov byte ptr [ rip + hexvar ] , num je hexvar mov eax , edi push rbx mov ebx , edi and eax , num test dil , num jne hexvar test eax , eax je hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , hexvar call hexvar test bl , num je hexvar test bl , num jne hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , hexvar call hexvar test ebx , hexvar lea rax , [ rip + hexvar ] je hexvar and ebx , num jne hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar lea rdi , [ rip + hexvar ] mov edx , hexvar mov rsi , rax call hexvar lea rax , [ rip + hexvar ] pop rbx ret
mov r2 , num ldr r3 , [ pc , hexvar ] push { r4 , lr } subs r4 , r0 , num strb r2 , [ r3 , hexvar ] beq hexvar tst r4 , num and r2 , r4 , num bne hexvar cmp r2 , num beq hexvar mov r2 , hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar tst r4 , num beq hexvar tst r4 , num bne hexvar mov r2 , hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar bics r3 , r4 , num beq hexvar tst r4 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r2 , hexvar mov r1 , r0 ldr r0 , [ pc , hexvar ] bl hexvar ldr r0 , [ pc , hexvar ] pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar beqz a0 , hexvar sb zero , hexvar ( v0 ) andi v0 , a0 , num bnez v0 , hexvar move s0 , a0 andi v0 , a0 , num beqz v0 , hexvar andi v0 , s0 , num addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) andi v0 , s0 , num beqz v0 , hexvar addiu v0 , zero , - num andi v0 , s0 , num bnez v0 , hexvar addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , zero , - num and v0 , s0 , v0 beqz v0 , hexvar andi s0 , s0 , num bnez s0 , hexvar addiu a2 , zero , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a2 , zero , hexvar move a1 , v0 lui s0 , hexvar addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , s0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] call rax test eax , eax setne cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rdi , rax call rcx test eax , eax sete dl movzx eax , dl mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax setne dl movzx eax , dl mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , num ( a0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + num ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar mov eax , dword ptr [ esi + hexvar ] push esi call dword ptr [ eax + hexvar ] xor edx , edx add esp , hexvar test eax , eax sete dl mov edi , edx je hexvar mov eax , esi call hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax test eax , eax sete al movzx eax , al mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
lui gp , hexvar lw v1 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , hexvar ( v1 ) sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) lw t9 , hexvar ( v0 ) jalr t9 move a0 , s0 lw gp , hexvar ( sp ) beqz v0 , hexvar sltiu s1 , v0 , num jal hexvar move a0 , s0 lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s1 lw v1 , ( s2 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v1 , hexvar ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov rax , qword ptr [ rbp - hexvar ] call rax cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax cmp eax , num sete cl and cl , num movzx eax , cl mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov rax , qword ptr [ rbp - hexvar ] call rax cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax cmp eax , num sete cl and cl , num movzx eax , cl mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov ebp , eax test eax , eax je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , rbx call qword ptr [ rax + hexvar ] test eax , eax sete bpl movzx ebp , bpl je hexvar mov rdi , rbx call hexvar mov eax , ebp mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] blx r3 subs r5 , r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 cmp r0 , num moveq r5 , num movne r5 , num beq hexvar mov r0 , r4 bl hexvar mov r0 , r5 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp push rbx sub rsp , num mov rbx , rdi lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret
push edi push esi push ebx call hexvar add esi , hexvar mov ebx , dword ptr [ esp + hexvar ] lea edx , [ esi - hexvar ] mov eax , ebx call hexvar test eax , eax jne hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop beqz v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push rbx sub rsp , num mov rbx , rdi lea rsi , [ rip + hexvar ] call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push r12 lea rsi , [ rip + hexvar ] push rbp push rbx mov rbx , rdi call hexvar test eax , eax jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret
push r12 lea rsi , [ rip + hexvar ] push rbp push rbx mov rbx , rdi call hexvar test eax , eax jne hexvar xor eax , eax pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esi + num ] test ebp , ebp je hexvar mov edi , dword ptr [ ebp + num ] sub esp , num push hexvar push edi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + num ] , eax je hexvar sub esp , hexvar push edi call hexvar mov dword ptr [ esp ] , eax call hexvar mov ebp , dword ptr [ esi + num ] mov edx , dword ptr [ esp + hexvar ] mov edi , eax add esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , edx sub ecx , eax push ecx push eax push edi call hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , edx sub eax , dword ptr [ ebp + num ] add edx , num mov byte ptr [ edi + eax ] , num pop eax pop ecx push edx push edi call hexvar pop eax push dword ptr [ ebp + num ] call hexvar mov ebp , dword ptr [ esi + num ] add esp , hexvar mov dword ptr [ ebp + num ] , edi mov eax , dword ptr [ ebp ] sub esp , hexvar mov dword ptr [ esi + num ] , eax push ebp call hexvar lea edx , [ ebx - hexvar ] mov eax , esi call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar xor ecx , ecx mov dl , cl cmp eax , num mov byte ptr [ rbp - hexvar ] , dl je hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar xor ecx , ecx mov dl , cl cmp eax , num mov byte ptr [ rbp - hexvar ] , dl je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar xor ecx , ecx mov dl , cl cmp eax , num mov byte ptr [ rbp - hexvar ] , dl je hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar cmp eax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] and al , num movzx ecx , al mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , lr } ldr r4 , [ r0 , num ] sub sp , sp , hexvar cmp r4 , num beq hexvar ldr r6 , [ r4 , num ] mov r5 , r0 mov r1 , hexvar mov r0 , r6 bl hexvar subs r7 , r0 , num beq hexvar mov r0 , r6 bl hexvar bl hexvar ldr r4 , [ r5 , num ] mov r6 , r0 ldr r1 , [ r4 , num ] sub r2 , r7 , r1 bl hexvar mov r3 , num ldr r2 , [ r4 , num ] add r1 , r7 , num sub r7 , r7 , r2 strb r3 , [ r6 , r7 ] mov r0 , r6 bl hexvar ldr r0 , [ r4 , num ] bl hexvar ldr r4 , [ r5 , num ] str r6 , [ r4 , num ] ldr r3 , [ r4 ] mov r0 , r4 str r3 , [ r5 , num ] bl hexvar ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar cmp r0 , num bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num call hexvar add ebx , hexvar push esi push edi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] xor edx , dword ptr [ esi + hexvar ] and edx , hexvar mov edx , num cmovne eax , edx pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , eax and ecx , hexvar mov eax , ecx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov ecx , edx and ecx , hexvar mov edx , ecx sub rax , rdx setne sil movzx ecx , sil mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] xor rax , rdx and eax , hexvar test rax , rax je hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] xor rax , hexvar mov rcx , - num mov rdx , rcx xor rdx , hexvar movabs rsi , hexvar xor rcx , rsi or rax , rdx or rcx , rsi xor rax , hexvar and rax , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] and rcx , hexvar cmp rax , rcx je hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num push esi push edi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] xor edx , dword ptr [ esi + hexvar ] and edx , hexvar mov edx , num cmovne eax , edx pop ebx pop esi pop edi ret
push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp + hexvar ] xor rdx , qword ptr [ rbx + hexvar ] and edx , hexvar mov edx , num cmovne rax , rdx add rsp , num pop rbx pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num call hexvar add ebx , hexvar push esi push edi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] xor edx , dword ptr [ esi + hexvar ] and edx , hexvar mov edx , num cmovne eax , edx pop ebx pop esi pop edi ret
push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp + hexvar ] xor rdx , qword ptr [ rbx + hexvar ] and edx , hexvar mov edx , num cmovne rax , rdx add rsp , num pop rbx pop rbp ret
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp + hexvar ] xor rdx , qword ptr [ rbx + hexvar ] and edx , hexvar mov edx , num cmovne rax , rdx add rsp , num pop rbx pop rbp ret
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp + hexvar ] xor rdx , qword ptr [ rbx + hexvar ] and edx , hexvar mov edx , num cmovne rax , rdx add rsp , num pop rbx pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar cmp dword ptr [ edi + hexvar ] , num sbb eax , eax sub esp , hexvar xor al , al add eax , hexvar mov dword ptr [ esi + num ] , eax push edi call hexvar add esp , hexvar test eax , eax mov edx , num je hexvar lea edx , [ eax + num ] test eax , eax cmovns edx , eax sar edx , num lea eax , [ edx + num ] add edx , num cmp dword ptr [ esi ] , edx mov ecx , dword ptr [ esi + num ] jg hexvar lea edx , [ eax + num ] lea ebp , [ ebx - hexvar ] push hexvar push ebp push edx push ecx call hexvar add esp , hexvar test eax , eax mov ecx , eax je hexvar mov dword ptr [ esi + num ] , eax sub esp , num push ecx push edi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax jne hexvar mov eax , dword ptr [ esi + num ] mov byte ptr [ eax ] , num mov dword ptr [ esi ] , num add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push r15 push r14 push rbx mov r14 , rsi mov r15 , rdi mov rbx , rsi test rsi , rsi jne hexvar mov edi , num call hexvar mov rbx , rax test rax , rax je hexvar xor eax , eax cmp dword ptr [ r15 + hexvar ] , num setne al shl eax , num or eax , num mov dword ptr [ rbx + num ] , eax mov rdi , r15 call hexvar test eax , eax je hexvar mov esi , eax sar esi , hexvar shr esi , hexvar add esi , eax sar esi , num add esi , num mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , esi jl hexvar jmp hexvar mov esi , num mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , esi jge hexvar mov edx , hexvar mov rdi , rax mov ecx , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rbx + num ] , rax mov rdi , r15 mov rsi , rax call hexvar mov dword ptr [ rbx ] , eax test eax , eax jne hexvar mov rax , qword ptr [ rbx + num ] mov byte ptr [ rax ] , num mov dword ptr [ rbx ] , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar cmp rbx , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx cmp rbx , r14 je hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) move s0 , a1 lw v0 , hexvar ( s1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar cmp dword ptr [ edi + hexvar ] , num sbb eax , eax sub esp , hexvar xor al , al add eax , hexvar mov dword ptr [ esi + num ] , eax push edi call hexvar add esp , hexvar test eax , eax mov edx , num je hexvar lea edx , [ eax + num ] test eax , eax cmovns edx , eax sar edx , num lea eax , [ edx + num ] add edx , num cmp dword ptr [ esi ] , edx mov ecx , dword ptr [ esi + num ] jg hexvar lea edx , [ eax + num ] lea ebp , [ ebx - hexvar ] push hexvar push ebp push edx push ecx call hexvar add esp , hexvar test eax , eax mov ecx , eax je hexvar mov dword ptr [ esi + num ] , eax sub esp , num push ecx push edi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax jne hexvar mov eax , dword ptr [ esi + num ] mov byte ptr [ eax ] , num mov dword ptr [ esi ] , num add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) move s0 , a1 lw v0 , hexvar ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) move s0 , a1 lw v0 , hexvar ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 beqz a1 , hexvar move s2 , a1 move s0 , a1 lw v0 , hexvar ( s1 )
push r15 push r14 push rbx mov r14 , rsi mov r15 , rdi mov rbx , rsi test rsi , rsi jne hexvar mov edi , num call hexvar mov rbx , rax test rax , rax je hexvar xor eax , eax cmp dword ptr [ r15 + hexvar ] , num setne al shl eax , num or eax , num mov dword ptr [ rbx + num ] , eax mov rdi , r15 call hexvar test eax , eax je hexvar mov esi , eax sar esi , hexvar shr esi , hexvar add esi , eax sar esi , num add esi , num mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , esi jl hexvar jmp hexvar mov esi , num mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , esi jge hexvar mov edx , hexvar mov rdi , rax mov ecx , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rbx + num ] , rax mov rdi , r15 mov rsi , rax call hexvar mov dword ptr [ rbx ] , eax test eax , eax jne hexvar mov rax , qword ptr [ rbx + num ] mov byte ptr [ rax ] , num mov dword ptr [ rbx ] , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar cmp rbx , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx cmp rbx , r14 je hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov r14 , rsi mov r15 , rdi mov rbx , rsi test rsi , rsi jne hexvar mov edi , num call hexvar mov rbx , rax test rax , rax je hexvar cmp dword ptr [ r15 + hexvar ] , num je hexvar mov eax , hexvar cmp dword ptr [ r15 + num ] , num jne hexvar mov eax , num mov dword ptr [ rbx + num ] , eax mov rdi , r15 call hexvar test eax , eax je hexvar mov esi , eax sar esi , hexvar shr esi , hexvar add esi , eax sar esi , num add esi , num mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , esi jl hexvar jmp hexvar mov esi , num mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , esi jge hexvar mov edx , hexvar mov rdi , rax mov ecx , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rbx + num ] , rax mov rdi , r15 mov rsi , rax call hexvar mov dword ptr [ rbx ] , eax test eax , eax jne hexvar mov rax , qword ptr [ rbx + num ] mov byte ptr [ rax ] , num mov dword ptr [ rbx ] , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar cmp rbx , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx cmp rbx , r14 je hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , num mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - num ] str r2 , [ r3 ] mov r0 , r0 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , num mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx nop pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) sw zero , num ( v0 )
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - num ] str r2 , [ r3 ] mov r0 , r0 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] mov dword ptr [ edx + num ] , num mov eax , dword ptr [ eax ] mov dword ptr [ eax ] , num mov esp , ebp pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) sw zero , num ( v0 )
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx nop pop rbp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , num mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov byte ptr [ esp + hexvar ] , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push - num push num push num mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx xor eax , eax mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , hexvar lea esi , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] xor ebx , ebx mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] xor ebx , ebx mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov byte ptr [ rbp - num ] , num mov r8 , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov ecx , dword ptr [ rbp - hexvar ] push rcx mov r9 , r8 mov r8 , rdi mov ecx , num mov rdi , rax call hexvar add rsp , hexvar mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov byte ptr [ esp + hexvar ] , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push - num push num push num mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar ret
sub rsp , hexvar mov r9 , rcx xor ecx , ecx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov byte ptr [ rsp + hexvar ] , num push r8 lea r8 , [ rsp + hexvar ] call hexvar pop rdx pop rcx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , esp add edi , - hexvar mov esp , edi mov ebx , esp add ebx , - hexvar mov esp , ebx mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ edi ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ esi ] mov edi , dword ptr [ edi ] mov ebx , dword ptr [ ebx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , ebx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , num call hexvar add esp , hexvar ret
addiu sp , sp , - hexvar lui gp , hexvar addiu v0 , sp , hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw a3 , hexvar ( sp ) move a3 , zero sw v0 , hexvar ( sp ) addiu v0 , zero , - num sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sb zero , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jal hexvar nop lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push num call hexvar add esp , hexvar mov eax , num jmp hexvar push dword ptr [ esp + hexvar ] push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , r9 mov r15 , r8 mov r12 , rcx mov r14 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar sub rsp , num mov rdi , rbp mov rsi , r13 mov rdx , rbx mov rcx , r12 mov r8 , r15 mov r9 , qword ptr [ rsp + num ] push qword ptr [ rsp + hexvar ] push qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] push rax call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , r9 mov r15 , r8 mov r12 , rcx mov r14 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar sub rsp , num mov rdi , rbp mov rsi , r13 mov rdx , rbx mov rcx , r12 mov r8 , r15 mov r9 , qword ptr [ rsp + num ] push qword ptr [ rsp + hexvar ] push qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] push rax call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 move s4 , a2 move s3 , a3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a3 , s4 move a2 , zero addiu a1 , zero , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a3 , s3 move a2 , s0 move a1 , s2 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s1 , zero
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push num mov esi , eax push hexvar push eax call hexvar pop eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edi , eax push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push num call hexvar add esp , hexvar mov eax , num jmp hexvar push dword ptr [ esp + hexvar ] push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push num call hexvar add esp , hexvar mov eax , num jmp hexvar push dword ptr [ esp + hexvar ] push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , r9 mov r15 , r8 mov r12 , rcx mov r14 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar sub rsp , num mov rdi , rbp mov rsi , r13 mov rdx , rbx mov rcx , r12 mov r8 , r15 mov r9 , qword ptr [ rsp + num ] push qword ptr [ rsp + hexvar ] push qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] push rax call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push num mov esi , eax push hexvar push eax call hexvar pop eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edi , eax push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , r9 mov r15 , r8 mov r12 , rcx mov r14 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar sub rsp , num mov rdi , rbp mov rsi , r13 mov rdx , rbx mov rcx , r12 mov r8 , r15 mov r9 , qword ptr [ rsp + num ] push qword ptr [ rsp + hexvar ] push qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] push rax call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , num mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , hexvar mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , hexvar mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , num mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rbx , rax test rbx , rbx je hexvar mov byte ptr [ rbx ] , num lea rdx , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , hexvar mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , hexvar mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , hexvar mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , num mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , hexvar mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , hexvar mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a3 , hexvar lui a1 , hexvar sw ra , hexvar ( sp ) lui a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jalr t9 addiu a0 , a0 , hexvar
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar andseq sb , r1 , r8 , ror r2 andeq r0 , r0 , r1 , lsl r8 ldrsbeq sb , [ r1 ] , -r8 andseq sb , r1 , r0 , lsl r6
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push hexvar push eax lea eax , [ ebx - hexvar ] push eax call hexvar
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar andseq sb , r1 , r8 , ror r2 andeq r0 , r0 , r1 , lsl r8 ldrsbeq sb , [ r1 ] , -r8 andseq sb , r1 , r0 , lsl r6
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push hexvar push eax lea eax , [ ebx - hexvar ] push eax call hexvar
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push hexvar push eax lea eax , [ ebx - hexvar ] push eax call hexvar
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar andseq sb , r2 , ip , asr num andeq r0 , r0 , pc , lsl num andseq sb , r2 , ip , lsr num andseq sb , r2 , r4 , ror num
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar andseq sb , r2 , ip , asr num andeq r0 , r0 , pc , lsl num andseq sb , r2 , ip , lsr num andseq sb , r2 , r4 , ror num
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar andseq sb , r2 , ip , asr num andeq r0 , r0 , pc , lsl num andseq sb , r2 , ip , lsr num andseq sb , r2 , r4 , ror num
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar andseq sb , r1 , r8 , ror r2 andeq r0 , r0 , r1 , lsl r8 ldrsbeq sb , [ r1 ] , -r8 andseq sb , r1 , r0 , lsl r6
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 addiu a0 , zero , num lw gp , hexvar ( sp ) move a1 , s1 lw t9 , - hexvar ( gp ) bal hexvar lw s1 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dl , byte ptr [ ebp - num ] and dl , num movzx eax , dl mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , dil and al , num mov byte ptr [ rbp - num ] , al mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx call hexvar mov esi , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edi , num mov dword ptr [ rbp - hexvar ] , esi mov rsi , rax mov qword ptr [ rbp - hexvar ] , rdx call hexvar xor edi , edi mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rax mov al , num call hexvar mov al , byte ptr [ rbp - num ] and al , num movzx edi , al call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dl , byte ptr [ ebp - num ] and dl , num movzx eax , dl mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 addiu a0 , zero , num lw gp , hexvar ( sp ) move a1 , s1 lw t9 , - hexvar ( gp ) bal hexvar lw s1 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dl , byte ptr [ ebp - num ] and dl , num movzx eax , dl mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dl , byte ptr [ ebp - num ] and dl , num movzx eax , dl mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov bl , byte ptr [ ebp - hexvar ] and bl , num mov byte ptr [ eax ] , bl mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ esi ] sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar xor ecx , ecx sub esp , hexvar mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov bl , byte ptr [ eax ] and bl , num sub esp , hexvar movzx ecx , bl mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r1 mov r7 , r2 mov r4 , r0 bl hexvar ldr r5 , [ r0 ] mov r0 , r7 bl hexvar mov r2 , r6 mov r3 , r0 mov r1 , r5 mov r0 , num bl hexvar cmp r4 , num beq hexvar mov r2 , num ldr r3 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp push rbx lea rsi , [ rip + hexvar ] mov rbp , rdi mov edx , hexvar mov edi , hexvar sub rsp , num call hexvar test rax , rax mov rbx , rax je hexvar lea rsi , [ rip + hexvar ] mov edx , hexvar mov edi , hexvar call hexvar test rax , rax mov qword ptr [ rbx + num ] , rax je hexvar mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num movabs rax , hexvar mov qword ptr [ rbx + hexvar ] , rbp mov dword ptr [ rbx ] , num mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num lea edi , [ ebx - hexvar ] push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + hexvar ] , eax mov eax , esi pop ebx pop esi pop edi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + num ] shl edx , num add eax , edx mov dword ptr [ eax ] , num add dword ptr [ esp + num ] , num cmp dword ptr [ esp + num ] , num jle hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] jmp hexvar nop jmp hexvar nop cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx ret
push r14 push rbx push rax mov r14 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov qword ptr [ rax ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx ] , num movabs rax , hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) beqz v0 , hexvar nop sw zero , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v1 , num ( v0 ) lw v0 , hexvar ( sp ) sll v0 , v0 , num addu v0 , v1 , v0 sw zero , ( v0 ) lw v0 , hexvar ( sp ) addiu v0 , v0 , num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) slti v0 , v0 , num bnez v0 , hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , ( v0 ) lw v0 , hexvar ( sp ) sw zero , num ( v0 ) lw v0 , hexvar ( sp ) b hexvar nop nop b hexvar nop nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw s0 , hexvar ( sp ) addiu a1 , s1 , - hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , s1 , - hexvar jalr t9 addiu a0 , zero , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , num ( s0 ) sw zero , ( v0 ) sw zero , num ( v0 ) sw zero , num ( v0 ) sw zero , hexvar ( v0 ) addiu v0 , zero , num sw s2 , hexvar ( s0 ) sw v0 , hexvar ( s0 ) sw zero , ( s0 ) sw zero , num ( s0 ) lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 move s0 , zero move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) beqz v0 , hexvar nop sw zero , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v1 , num ( v0 ) lw v0 , hexvar ( sp ) sll v0 , v0 , num addu v0 , v1 , v0 sw zero , ( v0 ) lw v0 , hexvar ( sp ) addiu v0 , v0 , num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) slti v0 , v0 , num bnez v0 , hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , ( v0 ) lw v0 , hexvar ( sp ) sw zero , num ( v0 ) lw v0 , hexvar ( sp ) b hexvar nop nop b hexvar nop nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num lea edi , [ ebx - hexvar ] push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + hexvar ] , eax mov eax , esi pop ebx pop esi pop edi ret
push r14 push rbx push rax mov r14 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov qword ptr [ rax ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx ] , num movabs rax , hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov qword ptr [ rax ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx ] , num movabs rax , hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call eax fstp qword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jne hexvar jp hexvar jmp hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax movsd xmm0 , qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] movsd qword ptr [ eax ] , xmm0 mov cl , byte ptr [ ebp - hexvar ] and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
push r14 push r13 mov r14 , rcx push r12 push rbp mov rbp , rdi push rbx mov r13 , rdx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar mov rsi , rsp mov r12 , rax mov dword ptr [ rax ] , num mov rdi , rbp call r14
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov byte ptr [ ebp - hexvar ] , num call hexvar mov dword ptr [ eax ] , num sub esp , num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] call eax add esp , hexvar fstp qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ ebp - hexvar ] , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] test al , al je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar fld qword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) jp hexvar fld qword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) je hexvar call hexvar mov eax , dword ptr [ eax ] cmp eax , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] fld qword ptr [ ebp - hexvar ] fstp qword ptr [ eax ] movzx eax , byte ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call eax fstp qword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jne hexvar jp hexvar jmp hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax movsd xmm0 , qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] movsd qword ptr [ eax ] , xmm0 mov cl , byte ptr [ ebp - hexvar ] and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax call hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ eax ] , num sub esp , num lea eax , [ esp + hexvar ] push eax push edi call dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] add esp , hexvar cmp edx , edi je hexvar test esi , esi je hexvar fldz fxch st ( num ) fucomi st ( num ) fstp st ( num ) jp hexvar mov eax , num je hexvar mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ eax ] , hexvar setne al jmp hexvar mov eax , num cmp byte ptr [ edx ] , num jne hexvar fldz fxch st ( num ) fucomi st ( num ) fstp st ( num ) jp hexvar jne hexvar mov eax , num jmp hexvar mov eax , num test esi , esi je hexvar mov dword ptr [ esi ] , edx fstp qword ptr [ ebp ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push r13 mov r14 , rcx push r12 push rbp mov rbp , rdi push rbx mov r13 , rdx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar mov rsi , rsp mov r12 , rax mov dword ptr [ rax ] , num mov rdi , rbp call r14
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] mov r3 , num strb r3 , [ fp , - hexvar ] bl hexvar mov r2 , r0 mov r3 , num str r3 , [ r2 ] sub r2 , fp , hexvar ldr r3 , [ fp , - hexvar ] mov r1 , r2 ldr r0 , [ fp , - hexvar ] blx r3 str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , num beq hexvar mov r3 , num strb r3 , [ fp , - hexvar ] b hexvar mov r2 , num mov r3 , num sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 cmp r3 , num bne hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] cmp r3 , hexvar bne hexvar mov r3 , num strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r2 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } stm r2 , { r3 , r4 } ldrb r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc } andeq r0 , r0 , r6 , asr num andeq r0 , r0 , r0
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call eax fstp qword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jne hexvar jp hexvar jmp hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax movsd xmm0 , qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] movsd qword ptr [ eax ] , xmm0 mov cl , byte ptr [ ebp - hexvar ] and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call eax fstp qword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jne hexvar jp hexvar jmp hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax movsd xmm0 , qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] movsd qword ptr [ eax ] , xmm0 mov cl , byte ptr [ ebp - hexvar ] and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , zero , num sb v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw zero , ( v0 ) addiu v1 , fp , hexvar lw v0 , hexvar ( fp ) move a1 , v1 lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sdc1 f0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) beqz v0 , hexvar nop sb zero , hexvar ( fp ) b hexvar nop ldc1 f0 , hexvar ( fp ) mtc1 zero , f2 mthc1 zero , f2 c.eq.d f0 , f2 bc1t hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop sb zero , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) ldc1 f0 , hexvar ( fp ) sdc1 f0 , ( v0 )
cmp r0 , hexvar movlo r0 , hexvar push { r4 , r5 , r6 , r7 , r8 , lr } orr r6 , r0 , num cmn r6 , num beq hexvar ldr r8 , [ pc , hexvar ] umull r2 , r3 , r6 , r8 lsr r3 , r3 , num add r3 , r3 , r3 , lsl num cmp r6 , num sub r3 , r6 , r3 bls hexvar cmp r3 , num beq hexvar mov r7 , hexvar mov r5 , num mov r4 , num b hexvar cmp r1 , num add r7 , r7 , num beq hexvar add r4 , r4 , num mov r1 , r4 mov r0 , r6 bl hexvar add r5 , r5 , r7 cmp r5 , r6 mov r3 , r1 blo hexvar cmp r3 , num bne hexvar add r6 , r6 , num cmn r6 , num bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] sub ecx , hexvar setb dl movzx esi , dl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp esi mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp + num ] or al , num mov byte ptr [ ebp + num ] , al mov ecx , dword ptr [ hexvar ] jmp ecx mov eax , dword ptr [ ebp + num ] sub eax , - num setne cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] xor ebx , ebx mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar xor al , num mov ecx , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp ecx mov al , byte ptr [ ebp - hexvar ] movzx ecx , al and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , hexvar jae hexvar mov dword ptr [ ebp + num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] or eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx setne dl mov byte ptr [ ebp - hexvar ] , dl xor eax , eax mov cl , al mov dl , byte ptr [ ebp - hexvar ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] xor al , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltiu v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) ori v0 , v0 , num sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num beq v1 , v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop xori v0 , v0 , num andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] or eax , num mov dword ptr [ ebp + num ] , eax xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor al , hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
cmp r0 , hexvar movlo r0 , hexvar push { r4 , r5 , r6 , r7 , r8 , lr } orr r6 , r0 , num cmn r6 , num beq hexvar ldr r8 , [ pc , hexvar ] umull r2 , r3 , r6 , r8 lsr r3 , r3 , num add r3 , r3 , r3 , lsl num cmp r6 , num sub r3 , r6 , r3 bls hexvar cmp r3 , num beq hexvar mov r7 , hexvar mov r5 , num mov r4 , num b hexvar cmp r1 , num add r7 , r7 , num beq hexvar add r4 , r4 , num mov r1 , r4 mov r0 , r6 bl hexvar add r5 , r5 , r7 cmp r5 , r6 mov r3 , r1 blo hexvar cmp r3 , num bne hexvar add r6 , r6 , num cmn r6 , num bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] or eax , num mov dword ptr [ ebp + num ] , eax xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor al , hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar movz v1 , a0 , v0 move v0 , v1 addiu v1 , zero , - num ori v0 , v0 , num beq v0 , v1 , hexvar lui t1 , hexvar addiu t2 , zero , - num ori t1 , t1 , hexvar multu v0 , t1 sltiu v1 , v0 , hexvar mfhi a2 srl a2 , a2 , num sll a0 , a2 , num addu a2 , a0 , a2 bnez v1 , hexvar subu a2 , v0 , a2 beqz a2 , hexvar nop addiu a1 , zero , hexvar addiu a0 , zero , num b hexvar addiu v1 , zero , num beqz a3 , hexvar nop addiu v1 , v1 , num addu a0 , a0 , a1 teq v1 , zero , num divu zero , v0 , v1 sltu t0 , a0 , v0 addiu a1 , a1 , num mfhi a3 bnez t0 , hexvar move a2 , a3 bnez a2 , hexvar nop addiu v0 , v0 , num bne v0 , t2 , hexvar multu v0 , t1 jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , hexvar jae hexvar mov qword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rbp - num ] or rax , num mov qword ptr [ rbp - num ] , rax xor eax , eax mov cl , al mov rdx , - num cmp rdx , qword ptr [ rbp - num ] mov byte ptr [ rbp - num ] , cl je hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov cl , al xor cl , hexvar and cl , num mov dl , num xor dl , num and al , dl or cl , al mov byte ptr [ rbp - num ] , cl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movabs rcx , hexvar add rax , rcx add rax , num sub rax , rcx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , hexvar jae hexvar mov qword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rbp - num ] or rax , num mov qword ptr [ rbp - num ] , rax xor eax , eax mov cl , al mov rdx , - num cmp rdx , qword ptr [ rbp - num ] mov byte ptr [ rbp - num ] , cl je hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov cl , al xor cl , hexvar and cl , num mov dl , num xor dl , num and al , dl or cl , al mov byte ptr [ rbp - num ] , cl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movabs rcx , hexvar add rax , rcx add rax , num sub rax , rcx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdi mov rbx , rsi mov r13 , rdx mov r14 , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar mov r12 , rax mov dword ptr [ rax ] , num mov rsi , rsp mov rdi , rbp call r14
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a3 sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 sw s0 , hexvar ( sp ) move s0 , a1 lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a1 , sp , hexvar move a0 , s2 sw zero , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax sub esp , num mov dword ptr [ eax ] , num lea eax , [ esp + hexvar ] push eax push edi call dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] add esp , hexvar cmp edx , edi je hexvar test esi , esi mov ecx , dword ptr [ esp + hexvar ] je hexvar fldz fxch st ( num ) fucomi st ( num ) fstp st ( num ) jp hexvar mov eax , num je hexvar cmp dword ptr [ ecx ] , hexvar setne al test esi , esi je hexvar mov dword ptr [ esi ] , edx mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] fstp xword ptr [ ebp ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp lea esi , [ ebp - hexvar ] mov dword ptr [ edx + num ] , esi mov dword ptr [ edx ] , ecx call eax fstp xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar fld xword ptr [ ebp - hexvar ] fldz fxch st ( num ) fucomip st ( num ) fstp st ( num ) jne hexvar jp hexvar jmp hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax fld xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] fstp xword ptr [ eax ] mov cl , byte ptr [ ebp - hexvar ] and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp lea esi , [ ebp - hexvar ] mov dword ptr [ edx + num ] , esi mov dword ptr [ edx ] , ecx call eax fstp xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar fld xword ptr [ ebp - hexvar ] fldz fxch st ( num ) fucomip st ( num ) fstp st ( num ) jne hexvar jp hexvar jmp hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax fld xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] fstp xword ptr [ eax ] mov cl , byte ptr [ ebp - hexvar ] and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] mov r3 , num strb r3 , [ fp , - hexvar ] bl hexvar mov r2 , r0 mov r3 , num str r3 , [ r2 ] sub r2 , fp , hexvar ldr r3 , [ fp , - hexvar ] mov r1 , r2 ldr r0 , [ fp , - hexvar ] blx r3 str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , num beq hexvar mov r3 , num strb r3 , [ fp , - hexvar ] b hexvar mov r2 , num mov r3 , num sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 cmp r3 , num bne hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] cmp r3 , hexvar bne hexvar mov r3 , num strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r2 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } stm r2 , { r3 , r4 } ldrb r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc } andeq r0 , r0 , sl , lsr r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , zero , num sb v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw zero , ( v0 ) addiu v1 , fp , hexvar lw v0 , hexvar ( fp ) move a1 , v1 lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sdc1 f0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) beqz v0 , hexvar nop sb zero , hexvar ( fp ) b hexvar nop ldc1 f0 , hexvar ( fp ) mtc1 zero , f2 mthc1 zero , f2 c.eq.d f0 , f2 bc1t hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop sb zero , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , zero , num sb v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw zero , ( v0 ) addiu v1 , fp , hexvar lw v0 , hexvar ( fp ) move a1 , v1 lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sdc1 f0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) beqz v0 , hexvar nop sb zero , hexvar ( fp ) b hexvar nop ldc1 f0 , hexvar ( fp ) mtc1 zero , f2 mthc1 zero , f2 c.eq.d f0 , f2 bc1t hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop sb zero , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) ldc1 f0 , hexvar ( fp ) sdc1 f0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 move s3 , a2 move s4 , a3 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s2 , v0 sw zero , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp lea esi , [ ebp - hexvar ] mov dword ptr [ edx + num ] , esi mov dword ptr [ edx ] , ecx call eax fstp xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar fld xword ptr [ ebp - hexvar ] fldz fxch st ( num ) fucomip st ( num ) fstp st ( num ) jne hexvar jp hexvar jmp hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax fld xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] fstp xword ptr [ eax ] mov cl , byte ptr [ ebp - hexvar ] and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ eax ] mov ecx , dword ptr [ eax + num ] cmp edx , ecx jb hexvar jmp hexvar lea esi , [ esi ] add edx , num cmp edx , ecx jae hexvar mov eax , dword ptr [ edx ] test eax , eax je hexvar add esp , num pop ebx ret
sub rsp , num cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rdx , qword ptr [ rdi ] mov rcx , qword ptr [ rdi + num ] cmp rdx , rcx jb hexvar jmp hexvar nop dword ptr [ rax ] add rdx , hexvar cmp rdx , rcx jae hexvar mov rax , qword ptr [ rdx ] test rax , rax je hexvar add rsp , num ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ eax ] mov ecx , dword ptr [ eax + num ] cmp edx , ecx jb hexvar jmp hexvar lea esi , [ esi ] add edx , num cmp edx , ecx jae hexvar mov eax , dword ptr [ edx ] test eax , eax je hexvar add esp , num pop ebx ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - num ] cmp r2 , r3 blo hexvar bl hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] b hexvar mov r0 , r3 sub sp , fp , num pop { fp , pc } ldclpl p4 , c1 , [ sl ] , { num }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , hexvar jmp hexvar leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] cmp dword ptr [ ebp - hexvar ] , edx jb hexvar mov ebx , eax call hexvar mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] test edx , edx je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] jmp hexvar add dword ptr [ ebp - hexvar ] , num jmp hexvar add esp , hexvar pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi sete al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + num ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - num ] , hexvar jmp hexvar leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - num ] cmp r2 , r3 blo hexvar bl hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] b hexvar mov r0 , r3 sub sp , fp , num pop { fp , pc } cdple p13 , hexvar , c14 , c14 , c15 , num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v1 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , num ( v0 ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + num ] cmp dword ptr [ esi + num ] , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ eax ] mov ebp , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , dword ptr [ edx ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ edx + num ] xor ecx , ebp mov ebp , dword ptr [ esp + num ] or ebp , ecx je hexvar mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov eax , num test ebp , ebp je hexvar mov esi , dword ptr [ edi ] sub esp , num push hexvar push esi call hexvar pop edx lea edx , [ eax + num ] test eax , eax pop ecx cmovne esi , edx push ebp push esi call hexvar add esp , hexvar test eax , eax sete al movzx eax , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + num ] cmp qword ptr [ rdi + num ] , rax jne hexvar mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbp , qword ptr [ rax + hexvar ] mov eax , num test rbp , rbp je hexvar mov rbx , qword ptr [ rsi ] mov esi , hexvar mov rdi , rbx call hexvar lea rdx , [ rax + num ] test rax , rax mov rsi , rbp cmovne rbx , rdx mov rdi , rbx call hexvar test eax , eax sete al movzx eax , al add rsp , num pop rbx pop rbp ret
push r12 push rbp push rbx mov rax , qword ptr [ rsi + num ] cmp qword ptr [ rdi + num ] , rax jne hexvar mov rbx , rdi mov rbp , rsi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar mov rsi , qword ptr [ rsi + hexvar ] test rsi , rsi je hexvar mov rdx , qword ptr [ rdi ] cmp rdx , qword ptr [ rsi ] je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov r12 , qword ptr [ rax + hexvar ] mov eax , num test r12 , r12 je hexvar mov rbx , qword ptr [ rbp ] mov esi , hexvar mov rdi , rbx call hexvar lea rdx , [ rax + num ] test rax , rax cmovne rbx , rdx mov rsi , r12 mov rdi , rbx call hexvar test eax , eax sete al movzx eax , al jmp hexvar mov edi , num call hexvar mov eax , num pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + num ] cmp dword ptr [ esi + num ] , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ eax + num ] xor ecx , dword ptr [ edx ] mov dword ptr [ esp + num ] , ecx mov ecx , ebp xor ecx , dword ptr [ edx + num ] mov ebp , dword ptr [ esp + num ] or ebp , ecx je hexvar mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , num test esi , esi je hexvar mov edi , dword ptr [ edi ] sub esp , num push hexvar push edi call hexvar add esp , num lea edx , [ eax + num ] test eax , eax cmovne edi , edx push esi push edi call hexvar add esp , hexvar test eax , eax sete al movzx eax , al jmp hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + num ] cmp dword ptr [ esi + num ] , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ eax + num ] xor ecx , dword ptr [ edx ] mov dword ptr [ esp + num ] , ecx mov ecx , ebp xor ecx , dword ptr [ edx + num ] mov ebp , dword ptr [ esp + num ] or ebp , ecx je hexvar mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , num test esi , esi je hexvar mov edi , dword ptr [ edi ] sub esp , num push hexvar push edi call hexvar add esp , num lea edx , [ eax + num ] test eax , eax cmovne edi , edx push esi push edi call hexvar add esp , hexvar test eax , eax sete al movzx eax , al jmp hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + num ] cmp dword ptr [ esi + num ] , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ eax ] mov ebp , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , dword ptr [ edx ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ edx + num ] xor ecx , ebp mov ebp , dword ptr [ esp + num ] or ebp , ecx je hexvar mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov eax , num test ebp , ebp je hexvar mov esi , dword ptr [ edi ] sub esp , num push hexvar push esi call hexvar pop edx lea edx , [ eax + num ] test eax , eax pop ecx cmovne esi , edx push ebp push esi call hexvar add esp , hexvar test eax , eax sete al movzx eax , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar lw v1 , num ( a0 ) addiu sp , sp , - hexvar lw v0 , num ( a1 )
lui gp , hexvar lw v1 , num ( a0 ) addiu sp , sp , - hexvar lw v0 , num ( a1 ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bne v1 , v0 , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw a0 , hexvar ( a0 ) beqz a0 , hexvar move s1 , a1 lw a1 , hexvar ( a1 ) beqz a1 , hexvar nop lw v0 , ( a0 ) lw v1 , ( a1 ) beq v1 , v0 , hexvar lw a3 , num ( a0 ) lw v0 , hexvar ( s0 ) lw v0 , hexvar ( v0 ) lw s0 , hexvar ( v0 ) beqz s0 , hexvar addiu a1 , zero , hexvar lw s1 , ( s1 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) addiu s1 , v0 , num lw t9 , - hexvar ( gp ) move a1 , s0 jalr t9 move a0 , s1 lw ra , hexvar ( sp ) sltiu v0 , v0 , num lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a2 , num ( a1 ) bne a2 , a3 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , a1 , num jalr t9 addiu a0 , a0 , num bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu v0 , zero , num lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v1 , a3 addiu v0 , zero , num beq a1 , v0 , hexvar lw s0 , hexvar ( a0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] cmp eax , num mov esi , dword ptr [ edx + hexvar ] je hexvar cmp eax , hexvar je hexvar cmp eax , num je hexvar add esp , num mov eax , hexvar pop ebx pop esi ret
push r14 push rbx push rax mov r14 , qword ptr [ rdi + hexvar ] cmp esi , num je hexvar cmp esi , hexvar je hexvar mov ebx , hexvar cmp esi , num jne hexvar xor ebx , ebx test edx , edx js hexvar test rcx , rcx je hexvar movsxd rdx , edx xor ebx , ebx mov rdi , r14 mov rsi , rcx jmp hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rsi , qword ptr [ rax + hexvar ] mov rdi , r14 call hexvar test eax , eax je hexvar xor ebx , ebx mov rdi , r14 xor esi , esi xor edx , edx xor ecx , ecx xor r8d , r8d call hexvar test eax , eax jne hexvar jmp hexvar mov r8 , qword ptr [ rdi + num ] xor ebx , ebx mov rdi , r14 xor esi , esi xor edx , edx call hexvar test eax , eax je hexvar mov ebx , num mov eax , ebx add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , num sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) beq a1 , v0 , hexvar lw s0 , hexvar ( a0 )
push r14 push rbx push rax mov r14 , qword ptr [ rdi + hexvar ] cmp esi , num je hexvar cmp esi , hexvar je hexvar mov ebx , hexvar cmp esi , num jne hexvar xor ebx , ebx test edx , edx js hexvar test rcx , rcx je hexvar movsxd rdx , edx xor ebx , ebx mov rdi , r14 mov rsi , rcx jmp hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rsi , qword ptr [ rax + hexvar ] mov rdi , r14 call hexvar test eax , eax je hexvar xor ebx , ebx mov rdi , r14 xor esi , esi xor edx , edx xor ecx , ecx xor r8d , r8d call hexvar test eax , eax jne hexvar jmp hexvar mov r8 , qword ptr [ rdi + num ] xor ebx , ebx mov rdi , r14 xor esi , esi xor edx , edx call hexvar test eax , eax je hexvar mov ebx , num mov eax , ebx add rsp , num pop rbx pop r14 ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] cmp eax , num mov esi , dword ptr [ edx + hexvar ] je hexvar cmp eax , hexvar je hexvar cmp eax , num je hexvar add esp , num mov eax , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v1 , a3 addiu v0 , zero , num beq a1 , v0 , hexvar lw s0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v1 , a3 addiu v0 , zero , num beq a1 , v0 , hexvar lw s0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v1 , a3 addiu v0 , zero , num beq a1 , v0 , hexvar lw s0 , hexvar ( a0 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] cmp eax , num je hexvar cmp eax , hexvar je hexvar cmp eax , num je hexvar jmp hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , hexvar push num push num push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax push dword ptr [ esp + hexvar ] push num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push edx push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar push num push num push num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar nop jmp hexvar nop jmp hexvar nop mov eax , num add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar addiu v1 , zero , hexvar move a2 , v1 move a1 , zero move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rsp mov ecx , num rep stosq qword ptr [ rdi ] , rax test rsi , rsi je hexvar mov rbp , rsi cmp qword ptr [ rbx + hexvar ] , rdx ja hexvar mov eax , hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rax , rdi add rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax cmp rdi , rax seta al movzx eax , al add qword ptr [ rbx + hexvar ] , rax cmp byte ptr [ rbx + hexvar ] , num je hexvar mov qword ptr [ rbx + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , - num lea r12 , [ rbx + hexvar ] mov edx , hexvar sub rdx , rdi add rdi , r12 mov esi , num call hexvar mov rsi , r12 mov rdi , rbx call hexvar mov rcx , rbx mov rax , rsp lea rdi , [ rsp + hexvar ] mov rdx , qword ptr [ rcx ] mov byte ptr [ rax ] , dl mov rsi , rdx shr rsi , num mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil shr rdx , hexvar mov byte ptr [ rax + num ] , dl add rcx , num add rax , num cmp rax , rdi jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , rsp mov rdi , rbp call hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , hexvar mov esi , num mov rdi , rsp call rax mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx pxor xmm0 , xmm0 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rsi , rsi movaps xmmword ptr [ rsp ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , rdx ja hexvar cmp qword ptr [ rdi + hexvar ] , num jne hexvar mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax mov r12 , rsi mov rdx , rdi add rdx , qword ptr [ rbx + hexvar ] setb al add qword ptr [ rbx + hexvar ] , rax cmp byte ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rdx jne hexvar lea rbp , [ rbx + hexvar ] mov edx , hexvar xor esi , esi sub rdx , rdi mov qword ptr [ rbx + hexvar ] , - num add rdi , rbp call hexvar mov rsi , rbp mov rdi , rbx mov rbp , rsp call hexvar xor eax , eax nop dword ptr [ rax ] mov rdx , qword ptr [ rbx + rax * num ] mov qword ptr [ rbp + rax * num ] , rdx add rax , num cmp rax , num jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , rbp mov rdi , r12 call hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , hexvar xor esi , esi mov rdi , rbp call rax xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 move s2 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu a2 , zero , hexvar move a1 , zero addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s1 , hexvar addiu v0 , zero , - num lw a2 , hexvar ( s0 )
push r12 push rbp push rbx pxor xmm0 , xmm0 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rsi , rsi movaps xmmword ptr [ rsp ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , rdx ja hexvar cmp qword ptr [ rdi + hexvar ] , num jne hexvar mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax mov r12 , rsi mov rdx , rdi add rdx , qword ptr [ rbx + hexvar ] setb al add qword ptr [ rbx + hexvar ] , rax cmp byte ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rdx jne hexvar lea rbp , [ rbx + hexvar ] mov edx , hexvar xor esi , esi sub rdx , rdi mov qword ptr [ rbx + hexvar ] , - num add rdi , rbp call hexvar mov rsi , rbp mov rdi , rbx mov rbp , rsp call hexvar xor eax , eax nop dword ptr [ rax ] mov rdx , qword ptr [ rbx + rax * num ] mov qword ptr [ rbp + rax * num ] , rdx add rax , num cmp rax , num jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , rbp mov rdi , r12 call hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , hexvar xor esi , esi mov rdi , rbp call rax xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) addiu s0 , sp , hexvar sw s4 , hexvar ( sp ) move s4 , a2 sw s2 , hexvar ( sp ) addiu a2 , zero , hexvar sw s3 , hexvar ( sp ) move s2 , a1 sw gp , hexvar ( sp ) move a1 , zero sw ra , hexvar ( sp ) move s3 , a0 lw v0 , ( s1 ) move a0 , s0 sw v0 , hexvar ( sp ) jalr t9 nop beqz s2 , hexvar lw gp , hexvar ( sp ) lw a2 , hexvar ( s3 )
push r12 push rbp push rbx pxor xmm0 , xmm0 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rsi , rsi movaps xmmword ptr [ rsp ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , rdx ja hexvar cmp qword ptr [ rdi + hexvar ] , num jne hexvar mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax mov rbp , rsi mov rdx , rdi add rdx , qword ptr [ rbx + hexvar ] setb al add qword ptr [ rbx + hexvar ] , rax cmp byte ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rdx jne hexvar lea r12 , [ rbx + hexvar ] mov edx , hexvar xor esi , esi sub rdx , rdi mov qword ptr [ rbx + hexvar ] , - num add rdi , r12 call hexvar mov rsi , r12 mov rdi , rbx mov r12 , rsp call hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov rsi , r12 mov rdx , qword ptr [ rbx + hexvar ] mov rdi , rbp movaps xmmword ptr [ rsp ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 call hexvar mov edx , hexvar xor esi , esi mov rdi , r12 mov rax , qword ptr [ rip + hexvar ] call rax xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , r7 , r8 , sl , fp , lr } mov r8 , r1 ldr r5 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r5 ] mov r4 , r0 mov r6 , r2 add r0 , sp , hexvar mov r2 , hexvar mov r1 , num str r3 , [ sp , hexvar ] bl hexvar cmp r8 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , r6 bhi hexvar add r3 , r4 , hexvar ldm r3 , { r2 , r3 } orrs r3 , r2 , r3 bne hexvar add r1 , r4 , hexvar ldm r1 , { r0 , r1 } mov r7 , num ldr r2 , [ r4 , hexvar ] mov r3 , num adds sl , r2 , r0 adcs fp , r7 , r1 movhs r3 , num add r1 , r4 , hexvar ldm r1 , { r0 , r1 } adds r6 , r0 , r3 ldrb r3 , [ r4 , hexvar ] adc r7 , r1 , num cmp r3 , num str sl , [ r4 , hexvar ] str fp , [ r4 , hexvar ] str r6 , [ r4 , hexvar ] str r7 , [ r4 , hexvar ] bne hexvar mvn r0 , num mvn r1 , num add r6 , r4 , hexvar str r0 , [ r4 , hexvar ] str r1 , [ r4 , hexvar ] add r0 , r6 , r2 mov r1 , num rsb r2 , r2 , hexvar bl hexvar mov r1 , r6 mov r0 , r4 bl hexvar mov r2 , r4 mov ip , sp add r3 , sp , hexvar add lr , r4 , hexvar ldm r2 ! , { r0 , r1 } stm sp , { r0 , r1 } cmp r2 , lr ldm ip , { r0 , r1 } stm r3 , { r0 , r1 } add r3 , r3 , num bne hexvar ldr r2 , [ r4 , hexvar ] add r1 , sp , hexvar mov r0 , r8 bl hexvar ldr r3 , [ pc , hexvar ] add r0 , sp , hexvar ldr r3 , [ r3 ] mov r2 , hexvar mov r1 , num blx r3 mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sl , fp , pc }
push r12 push rbp push rbx pxor xmm0 , xmm0 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rsi , rsi movaps xmmword ptr [ rsp ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , rdx ja hexvar cmp qword ptr [ rdi + hexvar ] , num jne hexvar mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax mov r12 , rsi mov rdx , rdi add rdx , qword ptr [ rbx + hexvar ] setb al add qword ptr [ rbx + hexvar ] , rax cmp byte ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rdx jne hexvar lea rbp , [ rbx + hexvar ] mov edx , hexvar xor esi , esi sub rdx , rdi mov qword ptr [ rbx + hexvar ] , - num add rdi , rbp call hexvar mov rsi , rbp mov rdi , rbx mov rbp , rsp call hexvar xor eax , eax nop dword ptr [ rax ] mov rdx , qword ptr [ rbx + rax * num ] mov qword ptr [ rbp + rax * num ] , rdx add rax , num cmp rax , num jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , rbp mov rdi , r12 call hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , hexvar xor esi , esi mov rdi , rbp call rax xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rsp mov ecx , num rep stosq qword ptr [ rdi ] , rax test rsi , rsi je hexvar mov rbp , rsi cmp qword ptr [ rbx + hexvar ] , rdx ja hexvar mov eax , hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rax , rdi add rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax cmp rdi , rax seta al movzx eax , al add qword ptr [ rbx + hexvar ] , rax cmp byte ptr [ rbx + hexvar ] , num je hexvar mov qword ptr [ rbx + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , - num lea r12 , [ rbx + hexvar ] mov edx , hexvar sub rdx , rdi add rdi , r12 mov esi , num call hexvar mov rsi , r12 mov rdi , rbx call hexvar mov rcx , rbx mov rax , rsp lea rdi , [ rsp + hexvar ] mov rdx , qword ptr [ rcx ] mov byte ptr [ rax ] , dl mov rsi , rdx shr rsi , num mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil mov rsi , rdx shr rsi , hexvar mov byte ptr [ rax + num ] , sil shr rdx , hexvar mov byte ptr [ rax + num ] , dl add rcx , num add rax , num cmp rax , rdi jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , rsp mov rdi , rbp call hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , hexvar mov esi , num mov rdi , rsp call rax mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , hexvar mov eax , dword ptr [ edi + num ] push ebx call dword ptr [ eax + hexvar ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , edx lea edx , [ ebx + num ] add ebx , num mov dword ptr [ esp ] , edx call dword ptr [ eax + hexvar ] mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esp ] , ebx call dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , edx pop ebx pop esi pop edi ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , hexvar mov eax , dword ptr [ edi + num ] push ebx call dword ptr [ eax + hexvar ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , edx lea edx , [ ebx + num ] add ebx , num mov dword ptr [ esp ] , edx call dword ptr [ eax + hexvar ] mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esp ] , ebx call dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , edx pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r5 , r1 mov r4 , r2 ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r1 blx r3 str r0 , [ r4 ] ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r5 , r1 mov r4 , r2 ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r1 blx r3 str r0 , [ r4 ] ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , hexvar mov eax , dword ptr [ edi + num ] push ebx call dword ptr [ eax + hexvar ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , edx lea edx , [ ebx + num ] add ebx , num mov dword ptr [ esp ] , edx call dword ptr [ eax + hexvar ] mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esp ] , ebx call dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , edx pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] sub esp , hexvar push edx call eax add esp , hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] add edx , num sub esp , hexvar push edx call eax add esp , hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] add edx , num sub esp , hexvar push edx call eax add esp , hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx nop leave ret
push r12 push rbp mov r12 , rdi push rbx mov rax , qword ptr [ rdi + num ] mov rbp , rdx mov rbx , rsi mov rdi , rsi call qword ptr [ rax + hexvar ] mov qword ptr [ rbp ] , rax mov rax , qword ptr [ r12 + num ] lea rdi , [ rbx + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + num ] , rax mov rax , qword ptr [ r12 + num ] lea rdi , [ rbx + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , rax pop rbx pop rbp pop r12 ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , hexvar mov eax , dword ptr [ edi + num ] push ebx call dword ptr [ eax + hexvar ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , edx lea edx , [ ebx + num ] add ebx , num mov dword ptr [ esp ] , edx call dword ptr [ eax + hexvar ] mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esp ] , ebx call dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , edx pop ebx pop esi pop edi ret
push r12 push rbp mov r12 , rsi push rbx mov rbp , qword ptr [ rdi ] mov esi , hexvar mov rdi , rbp call hexvar mov r12 , qword ptr [ r12 ] mov esi , hexvar mov rbx , rax mov rdi , r12 call hexvar test rax , rax je hexvar lea rdx , [ rip + hexvar ] test rbx , rbx mov rsi , rax cmove rbx , rdx mov rdi , rbx call hexvar test eax , eax jne hexvar pop rbx mov rsi , r12 mov rdi , rbp pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] test rbx , rbx lea rax , [ rip + hexvar ] je hexvar mov rsi , rax mov rdi , rbx call hexvar test eax , eax je hexvar pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num mov eax , dword ptr [ eax + hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push r12 push rbp push rbx mov rbp , rsi test rsi , rsi lea rax , [ rip + hexvar ] cmove rbp , rax mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar mov r12 , rdi mov rbx , qword ptr [ rax + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rax ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + num ] , rbp mov rdx , qword ptr [ r12 + hexvar ] mov rcx , qword ptr [ rdx ] test rcx , rcx jne hexvar mov rcx , rdx jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdi , rax call hexvar mov eax , num jmp hexvar mov qword ptr [ r12 + hexvar ] , rbx mov eax , num jmp hexvar mov rcx , rdx mov rdx , qword ptr [ rcx ] test rdx , rdx jne hexvar mov qword ptr [ rcx ] , rax mov qword ptr [ r12 + hexvar ] , rax mov eax , num pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] test edi , edi cmove edi , eax mov eax , dword ptr [ ebp + num ] test eax , eax je hexvar mov esi , dword ptr [ eax + num ] test esi , esi jne hexvar jmp hexvar lea esi , [ esi ] mov esi , dword ptr [ esi ] test esi , esi je hexvar sub esp , num push edi push dword ptr [ esi + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov dword ptr [ ebp + num ] , esi add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rbp , rsi test rsi , rsi lea rax , [ rip + hexvar ] cmove rbp , rax mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar mov r12 , rdi mov rbx , qword ptr [ rax + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rax ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + num ] , rbp mov rdx , qword ptr [ r12 + hexvar ] mov rcx , qword ptr [ rdx ] test rcx , rcx jne hexvar mov rcx , rdx jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdi , rax call hexvar mov eax , num jmp hexvar mov qword ptr [ r12 + hexvar ] , rbx mov eax , num jmp hexvar mov rcx , rdx mov rdx , qword ptr [ rcx ] test rdx , rdx jne hexvar mov qword ptr [ rcx ] , rax mov qword ptr [ r12 + hexvar ] , rax mov eax , num pop rbx pop rbp pop r12 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw v0 , num ( s2 )
lea rax , [ rip + hexvar ] push r12 test rsi , rsi push rbp mov rbp , rsi push rbx cmove rbp , rax mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar mov rbx , qword ptr [ rax + num ] mov r12 , rdi test rbx , rbx jne hexvar jmp hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov qword ptr [ r12 + hexvar ] , rbx mov eax , num pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
lea rax , [ rip + hexvar ] push r12 test rsi , rsi push rbp mov rbp , rsi push rbx cmove rbp , rax mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar mov rbx , qword ptr [ rax + num ] mov r12 , rdi test rbx , rbx jne hexvar jmp hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov qword ptr [ r12 + hexvar ] , rbx mov eax , num pop rbx pop rbp pop r12 ret
lea rax , [ rip + hexvar ] push r12 test rsi , rsi push rbp mov rbp , rsi push rbx cmove rbp , rax mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar mov rbx , qword ptr [ rax + num ] mov r12 , rdi test rbx , rbx jne hexvar jmp hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax jne hexvar mov qword ptr [ r12 + hexvar ] , rbx mov eax , num pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 beqz a1 , hexvar move s1 , a1 lw v0 , num ( s2 ) beqz v0 , hexvar addiu a2 , zero , num lw s0 , num ( v0 )
push r12 push rbp push rbx mov rbp , rsi test rsi , rsi lea rax , [ rip + hexvar ] cmove rbp , rax mov rax , qword ptr [ rdi + num ] test rax , rax je hexvar mov r12 , rdi mov rbx , qword ptr [ rax + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , rbp call hexvar test eax , eax je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rax ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + num ] , rbp mov rdx , qword ptr [ r12 + hexvar ] mov rcx , qword ptr [ rdx ] test rcx , rcx jne hexvar mov rcx , rdx jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdi , rax call hexvar mov eax , num jmp hexvar mov qword ptr [ r12 + hexvar ] , rbx mov eax , num jmp hexvar mov rcx , rdx mov rdx , qword ptr [ rcx ] test rdx , rdx jne hexvar mov qword ptr [ rcx ] , rax mov qword ptr [ r12 + hexvar ] , rax mov eax , num pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r4 , r1 ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar cmp r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi lea rsi , [ rip + hexvar ] call hexvar test rax , rax je hexvar mov edx , num mov esi , hexvar mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar cmp rax , num je hexvar xor eax , eax mov edx , eax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar xor eax , eax mov edx , eax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar xor eax , eax mov edx , eax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar cmp rax , num je hexvar xor eax , eax mov edx , eax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar xor eax , eax mov edx , eax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r4 , r1 ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar cmp r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , r5 , r6 , pc }
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r4 , r1 ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar cmp r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , r5 , r6 , pc }
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] sub esp , num lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push num push num push num push hexvar push edi call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , num lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push num push num push num push hexvar push edi call hexvar add esp , hexvar test eax , eax jne hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , num lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push num push num push num push hexvar push edi call hexvar add esp , hexvar test eax , eax jne hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] xor eax , eax mov edx , eax mov esi , hexvar call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rdi , qword ptr [ rbp - hexvar ] xor eax , eax mov edx , eax mov esi , hexvar call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rdi , qword ptr [ rbp - hexvar ] xor eax , eax mov edx , eax mov esi , hexvar call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] xor eax , eax mov edx , eax mov esi , hexvar call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rdi , qword ptr [ rbp - hexvar ] xor eax , eax mov edx , eax mov esi , hexvar call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , num ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) blez v0 , hexvar nop lw v0 , hexvar ( fp ) slti v0 , v0 , num bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , num ( fp ) sw zero , num ( v0 ) lw v0 , num ( fp ) addiu v1 , zero , num sw v1 , ( v0 ) lw v0 , num ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 ) lw v0 , num ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) addiu v0 , zero , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
beqz a0 , hexvar nop beqz a2 , hexvar nop addiu v0 , a1 , - num sltiu v0 , v0 , num beqz v0 , hexvar addiu v1 , zero , num sw zero , num ( a0 ) sw a1 , num ( a0 ) addiu v0 , zero , num sw v1 , ( a0 ) jr ra sw a2 , hexvar ( a0 ) jr ra move v0 , zero
test rdi , rdi je hexvar test rdx , rdx je hexvar lea ecx , [ rsi - num ] mov eax , num cmp ecx , num ja hexvar mov dword ptr [ rdi + num ] , num mov dword ptr [ rdi ] , num mov dword ptr [ rdi + num ] , esi mov qword ptr [ rdi + hexvar ] , rdx mov eax , num ret
push ebx mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] test edx , edx je hexvar test ecx , ecx je hexvar mov eax , dword ptr [ esp + hexvar ] lea ebx , [ eax - num ] mov eax , num cmp ebx , num ja hexvar mov dword ptr [ edx + num ] , num mov dword ptr [ edx ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx + num ] , eax mov dword ptr [ edx + hexvar ] , ecx mov eax , num jmp hexvar mov eax , num pop ebx ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , num jle hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num pop ebp ret
beqz a0 , hexvar nop beqz a2 , hexvar nop addiu v0 , a1 , - num sltiu v0 , v0 , num beqz v0 , hexvar addiu v1 , zero , num sw zero , num ( a0 )
beqz a0 , hexvar nop beqz a2 , hexvar nop addiu v0 , a1 , - num sltiu v0 , v0 , num beqz v0 , hexvar addiu v1 , zero , num sw zero , num ( a0 )
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , num jle hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num pop ebp ret
test rdi , rdi je hexvar test rdx , rdx je hexvar lea ecx , [ rsi - num ] xor eax , eax cmp ecx , num ja hexvar mov qword ptr [ rdi + num ] , num mov dword ptr [ rdi ] , num mov eax , num mov dword ptr [ rdi + hexvar ] , esi mov qword ptr [ rdi + hexvar ] , rdx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jle hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rdi call hexvar mov ecx , hexvar sub ecx , eax lea r13 , [ rsp + num ] test ecx , ecx jle hexvar mov r12d , ecx mov rbx , rsp mov rdi , rbx mov esi , hexvar mov rdx , r12 call hexvar lea rax , [ r12 - num ] mov rcx , r12 and rcx , num je hexvar neg rcx xor edx , edx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] add rdx , - num cmp rcx , rdx jne hexvar sub rbx , rdx lea rcx , [ rbx + num ] add r13 , r12 cmp rax , num jae hexvar jmp hexvar mov rbx , rsp jmp hexvar mov rcx , r13 add r13 , r12 cmp rax , num jb hexvar add rcx , - num lea rax , [ rsp + r12 ] mov rbx , rcx nop word ptr [ rax + rax ] add rbx , num cmp rax , rbx jne hexvar mov byte ptr [ rbx ] , hexvar mov byte ptr [ r13 ] , num mov rsi , rsp mov rdi , r15 call hexvar mov edx , dword ptr [ r14 + num ] lea eax , [ rdx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] mov esi , hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jg hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jle hexvar mov rbx , qword ptr [ r14 + num ] nop word ptr cs : [ rax + rax ] movsx edx , byte ptr [ rbx ] cmp edx , hexvar jl hexvar cmp dl , hexvar je hexvar mov esi , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop test dl , dl js hexvar add edx , hexvar mov esi , hexvar jmp hexvar mov esi , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 xor eax , eax call hexvar add rbx , num add ebp , - num jg hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) lw s4 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s2 , hexvar ( sp ) move s2 , a2 sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw v0 , ( s4 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu v1 , zero , hexvar lw gp , hexvar ( sp ) subu v0 , v1 , v0 blez v0 , hexvar addiu a1 , sp , hexvar addiu a0 , zero , hexvar addu v0 , a1 , v0 move v1 , a1 addiu v1 , v1 , num bne v0 , v1 , hexvar sb a0 , - num ( v1 ) lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar sb zero , num ( v1 ) move a0 , s0 jalr t9 sb v0 , ( v1 ) addiu v0 , zero , hexvar lw a2 , num ( s2 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rdi call hexvar mov ecx , hexvar sub ecx , eax lea r13 , [ rsp + num ] test ecx , ecx jle hexvar mov r12d , ecx mov rbx , rsp mov rdi , rbx mov esi , hexvar mov rdx , r12 call hexvar lea rax , [ r12 - num ] mov rcx , r12 and rcx , num je hexvar neg rcx xor edx , edx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] add rdx , - num cmp rcx , rdx jne hexvar sub rbx , rdx lea rcx , [ rbx + num ] add r13 , r12 cmp rax , num jae hexvar jmp hexvar mov rbx , rsp jmp hexvar mov rcx , r13 add r13 , r12 cmp rax , num jb hexvar add rcx , - num lea rax , [ rsp + r12 ] mov rbx , rcx nop word ptr [ rax + rax ] add rbx , num cmp rax , rbx jne hexvar mov byte ptr [ rbx ] , hexvar mov byte ptr [ r13 ] , num mov rsi , rsp mov rdi , r15 call hexvar mov edx , dword ptr [ r14 + num ] lea eax , [ rdx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] mov esi , hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jg hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jle hexvar mov rbx , qword ptr [ r14 + num ] nop word ptr cs : [ rax + rax ] movsx edx , byte ptr [ rbx ] cmp edx , hexvar jl hexvar cmp dl , hexvar je hexvar mov esi , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop test dl , dl js hexvar add edx , hexvar mov esi , hexvar jmp hexvar mov esi , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 xor eax , eax call hexvar add rbx , num add ebp , - num jg hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rdi call hexvar mov ecx , hexvar sub ecx , eax lea r13 , [ rsp + num ] test ecx , ecx jle hexvar mov r12d , ecx mov rbx , rsp mov rdi , rbx mov esi , hexvar mov rdx , r12 call hexvar lea rax , [ r12 - num ] mov rcx , r12 and rcx , num je hexvar neg rcx xor edx , edx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] add rdx , - num cmp rcx , rdx jne hexvar sub rbx , rdx lea rcx , [ rbx + num ] add r13 , r12 cmp rax , num jae hexvar jmp hexvar mov rbx , rsp jmp hexvar mov rcx , r13 add r13 , r12 cmp rax , num jb hexvar add rcx , - num lea rax , [ rsp + r12 ] mov rbx , rcx nop word ptr [ rax + rax ] add rbx , num cmp rax , rbx jne hexvar mov byte ptr [ rbx ] , hexvar mov byte ptr [ r13 ] , num mov rsi , rsp mov rdi , r15 call hexvar mov edx , dword ptr [ r14 + num ] lea eax , [ rdx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] mov esi , hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jg hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jle hexvar mov rbx , qword ptr [ r14 + num ] nop word ptr cs : [ rax + rax ] movsx edx , byte ptr [ rbx ] cmp edx , hexvar jl hexvar cmp dl , hexvar je hexvar mov esi , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop test dl , dl js hexvar add edx , hexvar mov esi , hexvar jmp hexvar mov esi , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 xor eax , eax call hexvar add rbx , num add ebp , - num jg hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v1 , zero , hexvar subu v0 , v1 , v0 blez v0 , hexvar addiu a0 , zero , hexvar addiu v1 , sp , hexvar addu v0 , v1 , v0 addiu v1 , v1 , num bne v1 , v0 , hexvar sb a0 , - num ( v1 ) addiu v0 , zero , hexvar sb v0 , ( v1 ) sb zero , num ( v1 ) addiu a1 , sp , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a2 , num ( s2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v1 , zero , hexvar subu v0 , v1 , v0 blez v0 , hexvar addiu a0 , zero , hexvar addiu v1 , sp , hexvar addu v0 , v1 , v0 addiu v1 , v1 , num bne v1 , v0 , hexvar sb a0 , - num ( v1 ) addiu v0 , zero , hexvar sb v0 , ( v1 ) sb zero , num ( v1 ) addiu a1 , sp , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a2 , num ( s2 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rdi call hexvar mov ecx , hexvar sub ecx , eax lea r13 , [ rsp + num ] test ecx , ecx jle hexvar mov r12d , ecx mov rbx , rsp mov rdi , rbx mov esi , hexvar mov rdx , r12 call hexvar lea rax , [ r12 - num ] mov rcx , r12 and rcx , num je hexvar neg rcx xor edx , edx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] add rdx , - num cmp rcx , rdx jne hexvar sub rbx , rdx lea rcx , [ rbx + num ] add r13 , r12 cmp rax , num jae hexvar jmp hexvar mov rbx , rsp jmp hexvar mov rcx , r13 add r13 , r12 cmp rax , num jb hexvar add rcx , - num lea rax , [ rsp + r12 ] mov rbx , rcx nop word ptr [ rax + rax ] add rbx , num cmp rax , rbx jne hexvar mov byte ptr [ rbx ] , hexvar mov byte ptr [ r13 ] , num mov rsi , rsp mov rdi , r15 call hexvar mov edx , dword ptr [ r14 + num ] lea eax , [ rdx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] mov esi , hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jg hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jle hexvar mov rbx , qword ptr [ r14 + num ] nop word ptr cs : [ rax + rax ] movsx edx , byte ptr [ rbx ] cmp edx , hexvar jl hexvar cmp dl , hexvar je hexvar mov esi , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop test dl , dl js hexvar add edx , hexvar mov esi , hexvar jmp hexvar mov esi , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 xor eax , eax call hexvar add rbx , num add ebp , - num jg hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx mov esi , hexvar call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push dword ptr [ esp + hexvar ] push edi call hexvar sub esi , eax add esp , hexvar test esi , esi jle hexvar sub esp , num push esi push hexvar lea edx , [ esp + hexvar ] push edx mov dword ptr [ esp + hexvar ] , edx call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar add esi , edx sub esp , num mov eax , hexvar mov word ptr [ esi ] , ax push edx push edi call hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar sub esp , num push eax lea eax , [ ebx - hexvar ] push eax push edi call hexvar add esp , hexvar mov esi , dword ptr [ ebp + num ] mov ebp , dword ptr [ ebp ] test ebp , ebp jle hexvar lea eax , [ ebx - hexvar ] add ebp , esi mov dword ptr [ esp + num ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea esi , [ esi ] test dl , dl js hexvar sub esp , num add edx , hexvar push edx push dword ptr [ esp + hexvar ] push edi call hexvar add esp , hexvar add esi , num cmp esi , ebp je hexvar movsx edx , byte ptr [ esi ] lea ecx , [ edx - hexvar ] cmp cl , hexvar ja hexvar lea eax , [ ebx - hexvar ] sub esp , num add esi , num push edx push eax push edi call hexvar add esp , hexvar cmp esi , ebp jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push edi call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v1 , zero , hexvar subu v0 , v1 , v0 blez v0 , hexvar addiu a0 , zero , hexvar addiu v1 , sp , hexvar addu v0 , v1 , v0 addiu v1 , v1 , num bne v1 , v0 , hexvar sb a0 , - num ( v1 ) addiu v0 , zero , hexvar sb v0 , ( v1 ) sb zero , num ( v1 ) addiu a1 , sp , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a2 , num ( s2 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push dword ptr [ esp + hexvar ] push edi call hexvar mov edx , hexvar add esp , hexvar sub edx , eax lea ecx , [ esp + hexvar ] test edx , edx jle hexvar add edx , ecx mov eax , ecx lea esi , [ esi ] add eax , num mov byte ptr [ eax - num ] , hexvar cmp edx , eax jne hexvar sub esp , num mov edx , hexvar mov word ptr [ eax ] , dx push ecx push edi call hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar sub esp , num push eax lea eax , [ ebx - hexvar ] push eax push edi call hexvar add esp , hexvar mov esi , dword ptr [ ebp + num ] mov ebp , dword ptr [ ebp ] test ebp , ebp jle hexvar lea eax , [ ebx - hexvar ] add ebp , esi mov dword ptr [ esp + num ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea esi , [ esi ] test dl , dl js hexvar sub esp , num add edx , hexvar push edx push dword ptr [ esp + hexvar ] push edi call hexvar add esp , hexvar add esi , num cmp ebp , esi je hexvar movsx edx , byte ptr [ esi ] lea ecx , [ edx - hexvar ] cmp cl , hexvar ja hexvar lea eax , [ ebx - hexvar ] sub esp , num add esi , num push edx push eax push edi call hexvar add esp , hexvar cmp ebp , esi jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push edi call hexvar add esp , hexvar mov eax , num mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov dword ptr [ esp ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret num
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rsp call hexvar mov rax , qword ptr [ rsp ] mov rdx , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push eax push num call hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , eax mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar mov eax , esi pop ebx pop esi ret num
sub rsp , hexvar xor edi , edi mov rsi , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov rax , qword ptr [ rsp ] mov rdx , qword ptr [ rsp + num ] jne hexvar add rsp , hexvar ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov dword ptr [ esp ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret num
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov dword ptr [ esp ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret num
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov dword ptr [ esp ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret num
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar leave ret num
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push eax push num call hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , eax mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar mov eax , esi pop ebx pop esi ret num
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov dword ptr [ esp ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret num
cmp r2 , num movgt r3 , num movle r3 , num cmp r1 , num moveq r3 , num cmp r0 , num moveq r3 , num cmp r3 , num streq r3 , [ r0 , num ] streq r3 , [ r0 , num ] streq r3 , [ r0 ] streq r1 , [ r0 , hexvar ] streq r2 , [ r0 , hexvar ] moveq r0 , num movne r0 , num bx lr
mov ip , r2 clz r2 , r2 lsr r2 , r2 , num cmp r1 , num moveq r2 , num cmp r0 , num moveq r2 , num cmp r2 , num beq hexvar mov r0 , num bx lr str lr , [ sp , - num ] ! mov lr , r1 mov r3 , r0 str r2 , [ r0 , num ] str r2 , [ r0 ] str r1 , [ r3 , num ] str ip , [ r0 , hexvar ] mov r0 , num pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , num pop rbp ret
push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test ecx , ecx sete dl test esi , esi sete bl or dl , bl jne hexvar test eax , eax jne hexvar xor eax , eax pop ebx pop esi ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num pop ebp ret
clz r3 , r2 cmp r1 , num lsr r3 , r3 , num moveq r3 , num cmp r0 , num moveq r3 , num cmp r3 , num streq r3 , [ r0 , num ] streq r3 , [ r0 ] streq r1 , [ r0 , num ] streq r2 , [ r0 , hexvar ] moveq r0 , num movne r0 , num bx lr
beqz a0 , hexvar nop beqz a1 , hexvar nop beqz a2 , hexvar nop sw zero , num ( a0 )
beqz a0 , hexvar nop beqz a1 , hexvar nop blez a2 , hexvar nop sw zero , num ( a0 )
test rsi , rsi sete cl test edx , edx sete al or cl , al jne hexvar test rdi , rdi jne hexvar xor eax , eax ret
push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test ecx , ecx sete dl test esi , esi sete bl or dl , bl jne hexvar test eax , eax jne hexvar xor eax , eax pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rsi mov rsi , qword ptr [ rbp - hexvar ] cmp qword ptr [ rsi + num ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shl rax , num mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num sete dl and dl , num movzx esi , dl movsxd rax , esi cmp rax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] shl rdx , num mov rdi , rax mov rsi , rcx call hexvar jmp hexvar xor esi , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + num ] , edx mov edx , dword ptr [ ebp + hexvar ] cmp dword ptr [ edx + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jle hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] shl eax , num mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] shl edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push r12 push rbp push rbx mov rax , qword ptr [ rsi + num ] mov qword ptr [ rdi + num ] , rax mov r12 , qword ptr [ rsi + num ] test r12 , r12 jle hexvar mov rbx , rdi mov qword ptr [ rdi ] , rax lea rdi , [ rax * num ] mov rbp , rsi call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbp + hexvar ] lea rdx , [ r12 * num ] mov rdi , rax call hexvar xor eax , eax pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ esi + num ] , eax mov edi , dword ptr [ ebp + num ] test edi , edi jle hexvar sub esp , hexvar mov dword ptr [ esi ] , eax shl eax , num push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar sub esp , num shl edi , num push edi push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + num ] , edx mov edx , dword ptr [ ebp + hexvar ] cmp dword ptr [ edx + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jle hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] shl eax , num mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] shl edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rsi mov rsi , qword ptr [ rbp - hexvar ] cmp qword ptr [ rsi + num ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shl rax , num mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num sete dl and dl , num movzx esi , dl movsxd rax , esi cmp rax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] shl rdx , num mov rdi , rax mov rsi , rcx call hexvar jmp hexvar xor esi , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
ldr r3 , [ r1 , num ] push { r4 , r5 , r6 , lr } str r3 , [ r0 , num ] ldr r6 , [ r1 , num ] cmp r6 , num ble hexvar mov r5 , r0 str r3 , [ r0 ] lsl r0 , r3 , num mov r4 , r1 bl hexvar cmp r0 , num str r0 , [ r5 , num ] beq hexvar lsl r2 , r6 , num ldr r1 , [ r4 , num ] bl hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jle hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] shl rax , num mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete al movzx eax , al test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rcx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov eax , num leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ esi + num ] , eax mov edi , dword ptr [ ebp + num ] test edi , edi jle hexvar sub esp , hexvar mov dword ptr [ esi ] , eax shl eax , num push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar sub esp , num shl edi , num push edi push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] test rsi , rsi setg al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rax ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shl rax , num mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rsi , qword ptr [ rax + hexvar ] shl rcx , num mov rdx , rcx call hexvar mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , eax add ecx , num mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r1 , num mov r2 , r4 mov r5 , r0 bl hexvar cmp r0 , num subne r0 , r0 , r5 addne r0 , r0 , num moveq r0 , r4 pop { r4 , r5 , r6 , pc }
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num push esi push num push edi call hexvar add esp , hexvar mov edx , eax sub edx , edi add edx , num test eax , eax mov eax , esi cmovne eax , edx pop ebx pop esi pop edi ret
push rbp push rbx mov rdx , rsi mov rbp , rsi xor esi , esi mov rbx , rdi sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbx add rsp , num add rax , num pop rbx pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] sub eax , edx add ecx , eax sub ecx , hexvar add ecx , num add ecx , hexvar mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] xor r8d , r8d mov esi , r8d mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw s1 , hexvar ( sp ) move a1 , zero sw ra , hexvar ( sp ) move a2 , s0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , a0 beqz v0 , hexvar lw ra , hexvar ( sp ) subu v0 , v0 , s1 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) addiu v0 , v0 , num jr ra addiu sp , sp , hexvar move v0 , s0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov edi , dword ptr [ ecx ] mov ebx , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + num ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub ecx , esi add ecx , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al test byte ptr [ rbp - hexvar ] , num je hexvar test byte ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar test byte ptr [ rbp - hexvar ] , num jne hexvar test byte ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rax mov rsi , rcx movabs rdx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw s2 , ( s2 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , ebp call hexvar mov edi , eax mov eax , esi call hexvar mov edx , eax cmp al , num je hexvar mov eax , edi test al , al jne hexvar mov eax , edi cmp al , num je hexvar mov eax , num test dl , dl je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx call hexvar mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lw v0 , hexvar ( a0 ) addiu a2 , zero , num beq v0 , a2 , hexvar lw v1 , hexvar ( a1 )
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar lea edx , [ ebx + hexvar ] mov edx , dword ptr [ edx ] push eax lea eax , [ ebx - hexvar ] push eax push num push edx call hexvar add esp , hexvar call hexvar nop
ldr r3 , [ pc , hexvar ] push { r4 , lr } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar ldr r2 , [ pc , hexvar ] mov r3 , r0 mov r1 , num mov r0 , r4 bl hexvar bl hexvar andeq r8 , r3 , r0 , lsr num andeq r7 , r2 , ip , ror num andeq r7 , r2 , r4 , lsr r0
sub rsp , num mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , num mov eax , num call hexvar call hexvar
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] push edx lea edx , [ ebx - hexvar ] push edx push num push eax call hexvar add esp , hexvar call hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a1 , hexvar addiu a2 , zero , num sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a1 , a1 , hexvar sw gp , hexvar ( sp ) move a0 , zero lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw s0 , ( v0 ) jalr t9 nop lui a2 , hexvar lw gp , hexvar ( sp ) move a1 , zero addiu a2 , a2 , hexvar move a3 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop nop
sub rsp , num mov edx , num mov esi , hexvar mov edi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num mov eax , num call hexvar call hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a3 , v0 lui v0 , hexvar addiu a2 , v0 , - hexvar move a1 , zero move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar jmp hexvar nop nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , hexvar call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ edi + hexvar ] cmp eax , num je hexvar jb hexvar cmp eax , num jne hexvar sub esp , num push dword ptr [ edi + hexvar ] push edx call hexvar sub esi , dword ptr [ edi + hexvar ] add esp , hexvar mov dword ptr [ esp + hexvar ] , esi fild dword ptr [ esp + hexvar ] fmul qword ptr [ ebx - hexvar ] faddp st ( num ) fldz fxch st ( num ) fucomi st ( num ) fstp st ( num ) jbe hexvar fld dword ptr [ ebx - hexvar ] fucomip st ( num ) fstp st ( num ) setae al add esp , hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , hexvar call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rax mov rbx , rdx mov rdi , rcx mov rax , rdx mov ecx , hexvar mov rdx , rsi mov rsi , rax call hexvar add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) move v0 , a2 lw a0 , hexvar ( a1 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , hexvar call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rcx , rax mov rbx , rdx mov rdi , rcx mov rax , rdx mov ecx , hexvar mov rdx , rsi mov rsi , rax call hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , hexvar call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , hexvar call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } subs r4 , r0 , num beq hexvar mov r1 , hexvar bl hexvar subs r5 , r0 , num beq hexvar add r6 , r5 , num sub r3 , r6 , r4 cmp r3 , num ble hexvar mov r2 , num ldr r1 , [ pc , hexvar ] sub r0 , r5 , num bl hexvar cmp r0 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r6 bl hexvar cmp r0 , num movne r4 , r6 ldreq r3 , [ pc , hexvar ] addeq r4 , r5 , num streq r4 , [ r3 ] ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r4 , [ r2 ] str r4 , [ r3 ] pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push eax push hexvar push num lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar call hexvar sub esp , num push hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] sub edx , eax mov eax , edx cmp eax , num jle hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax push edx call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push rbx test rdi , rdi je hexvar mov rbx , rdi mov esi , hexvar call hexvar lea rdx , [ rax + num ] test rax , rax mov rax , rdx cmove rax , rbx mov rdx , rax sub rdx , rbx cmp rdx , num jle hexvar lea rsi , [ rax - num ] mov ecx , num lea rdi , [ rip + hexvar ] repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num mov rbx , rax test dl , dl jne hexvar lea rbx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx pop rbx ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] push hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar lea edx , [ eax + num ] mov ecx , edx sub ecx , ebp cmp ecx , num jle hexvar lea esi , [ eax - num ] lea edi , [ ebx - hexvar ] mov ecx , num repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num test cl , cl jne hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num add eax , num test cl , cl cmove edx , eax mov ebp , edx mov dword ptr [ ebx + hexvar ] , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] sub rax , num mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar mov rsi , qword ptr [ hexvar ] movabs rdi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , qword ptr [ rbp - num ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] sub rax , rcx cmp rax , num jl hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov rdi , rax movabs rsi , hexvar mov edx , num call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov edx , num call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ hexvar ] , rax add rsp , hexvar pop rbp ret
test rdi , rdi push rbx je hexvar mov esi , hexvar mov rbx , rdi call hexvar test rax , rax je hexvar lea r8 , [ rax + num ] mov rdx , r8 sub rdx , rbx cmp rdx , num jle hexvar lea rsi , [ rax - num ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , r8 mov rbx , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar lea rbx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx pop rbx ret
test rdi , rdi push rbx je hexvar mov esi , hexvar mov rbx , rdi call hexvar test rax , rax je hexvar lea r8 , [ rax + num ] mov rdx , r8 sub rdx , rbx cmp rdx , num jle hexvar lea rsi , [ rax - num ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , r8 mov rbx , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar lea rbx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx pop rbx ret
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ edx + hexvar ] cmp dword ptr [ edx + hexvar ] , eax ja hexvar mov eax , dword ptr [ edx + num ] mov edx , dword ptr [ edx + num ] sub edx , eax je hexvar mov ecx , dword ptr [ esp + num ] mov dword ptr [ ecx ] , edx ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ edx + hexvar ] cmp dword ptr [ edx + hexvar ] , eax ja hexvar mov eax , dword ptr [ edx + num ] mov edx , dword ptr [ edx + num ] sub edx , eax je hexvar mov ecx , dword ptr [ esp + num ] mov dword ptr [ ecx ] , edx ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + num ] add esi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx jbe hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] sub ecx , edx mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - hexvar ] , num sete bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ edx + hexvar ] cmp dword ptr [ edx + hexvar ] , eax ja hexvar mov eax , dword ptr [ edx + num ] mov edx , dword ptr [ edx + num ] sub edx , eax je hexvar mov ecx , dword ptr [ esp + num ] mov dword ptr [ ecx ] , edx ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub edx , esi seta bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax jbe hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub edx , eax mov eax , edx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] leave ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
call hexvar add edx , hexvar mov ecx , dword ptr [ esp + num ] mov eax , ecx shr al , num movzx eax , al and ecx , hexvar mov eax , dword ptr [ edx + eax * num - hexvar ] shr eax , cl and eax , num ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
mov eax , edi mov ecx , edi shr al , num and ecx , hexvar and eax , num mov eax , dword ptr [ rax * num + hexvar ] shr eax , cl and eax , num ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
andi a0 , a0 , hexvar srl v1 , a0 , num lui a1 , hexvar sll v1 , v1 , num addiu a1 , a1 , - hexvar addu v1 , v1 , a1 lw v0 , ( v1 ) srlv v0 , v0 , a0 jr ra andi v0 , v0 , num
mov eax , edi mov ecx , edi shr al , num and ecx , hexvar and eax , num mov eax , dword ptr [ rax * num + hexvar ] shr eax , cl and eax , num ret
push rbp mov rbp , rsp mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] shr al , num movzx eax , al cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov edx , dword ptr [ rdx + rax ] movzx eax , byte ptr [ rbp - num ] movzx eax , al and eax , hexvar mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax setne al pop rbp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] lsr r3 , r3 , num and r3 , r3 , hexvar mov r2 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 , r2 , lsl num ] ldrb r3 , [ fp , - num ] and r3 , r3 , hexvar lsr r3 , r2 , r3 and r3 , r3 , num cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr andeq r2 , r2 , ip , lsr num
mov eax , edi lea rdx , [ rip + hexvar ] mov ecx , edi shr al , num and ecx , hexvar and eax , num mov eax , dword ptr [ rdx + rax * num ] shr eax , cl and eax , num ret
test rsi , rsi je hexvar push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov ebp , dword ptr [ rax + hexvar ] cmp ebp , hexvar jb hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar add rbx , hexvar mov rdi , r14 mov rsi , rbx mov edx , ebp pop rbx pop r14 pop rbp jmp hexvar xor eax , eax ret
test rsi , rsi je hexvar push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov ebp , dword ptr [ rax + hexvar ] cmp ebp , hexvar jb hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar add rbx , hexvar mov rdi , r14 mov rsi , rbx mov edx , ebp pop rbx pop r14 pop rbp jmp hexvar xor eax , eax ret
test rsi , rsi je hexvar push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov ebp , dword ptr [ rax + hexvar ] cmp ebp , hexvar jb hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar add rbx , hexvar mov rdi , r14 mov rsi , rbx mov edx , ebp pop rbx pop r14 pop rbp jmp hexvar xor eax , eax ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , rsi mov r12 , rdi lea r15 , [ rdi + hexvar ] test rsi , rsi mov eax , hexvar mov ebx , hexvar cmove ebx , eax mov eax , hexvar mov r13d , hexvar jmp hexvar mov edx , dword ptr [ rsp + num ] mov rdi , r14 mov rsi , r15 call hexvar mov ebp , eax mov eax , hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ r12 ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rsp + num ] , eax mov eax , dword ptr [ rsp + num ] cmp eax , hexvar mov eax , hexvar cmovb eax , r13d jmp hexvar xor ebp , ebp mov eax , ebx jmp hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar mov eax , hexvar jmp hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
test rsi , rsi je hexvar push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov ebp , dword ptr [ rax + hexvar ] cmp ebp , hexvar jb hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar add rbx , hexvar mov rdi , r14 mov rsi , rbx mov edx , ebp pop rbx pop r14 pop rbp jmp hexvar xor eax , eax ret
push ebp push edi xor eax , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ esi ] mov ebp , dword ptr [ eax + hexvar ] cmp ebp , hexvar ja hexvar sub esp , num add esi , hexvar push ebp push esi push edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , num test edi , edi je hexvar mov eax , dword ptr [ esi ] mov ebp , dword ptr [ eax + hexvar ] cmp ebp , hexvar ja hexvar sub esp , num push ebp add esi , hexvar push esi push edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rsi , rsi je hexvar push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov ebp , dword ptr [ rax + hexvar ] cmp ebp , hexvar jb hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar add rbx , hexvar mov rdi , r14 mov rsi , rbx mov edx , ebp pop rbx pop r14 pop rbp jmp hexvar xor eax , eax ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , num test edi , edi je hexvar mov eax , dword ptr [ esi ] mov ebp , dword ptr [ eax + hexvar ] cmp ebp , hexvar ja hexvar sub esp , num push ebp add esi , hexvar push esi push edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rsi , rsi je hexvar push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov ebp , dword ptr [ rax + hexvar ] cmp ebp , hexvar jb hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar add rbx , hexvar mov rdi , r14 mov rsi , rbx mov edx , ebp pop rbx pop r14 pop rbp jmp hexvar xor eax , eax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 beqz v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v0 , hexvar ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r7 , r0 mov r8 , r1 mov r4 , r2 mov r5 , r3 mov r2 , hexvar mov r1 , num mov r0 , r8 bl hexvar add sb , r4 , num cmp sb , r5 bhi hexvar ldr r3 , [ r7 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 str r0 , [ r8 ] cmp r0 , num beq hexvar add r6 , r4 , r0 cmp r6 , r5 bhi hexvar cmp r0 , num bls hexvar add r4 , r4 , num cmp r6 , r4 blo hexvar ldr r3 , [ r7 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , sb blx r3 strh r0 , [ r8 , hexvar ] ldr sb , [ pc , hexvar ] ldr sl , [ pc , hexvar ] b hexvar mov r3 , num strh r3 , [ r8 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 beqz v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 beqz v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s0 , a2 move s1 , a3 addiu a2 , zero , hexvar move a1 , zero move a0 , s4 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu s5 , s0 , num sltu v0 , s1 , s5 bnez v0 , hexvar move a0 , s0 lw v0 , num ( s3 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s0 , a2 move s1 , a3 addiu a2 , zero , hexvar move a1 , zero move a0 , s4 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu s5 , s0 , num sltu v0 , s1 , s5 bnez v0 , hexvar move a0 , s0 lw v0 , num ( s3 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add edi , hexvar mov dword ptr [ esp + num ] , edi mov ebx , ecx mov ecx , num mov dword ptr [ edx ] , num mov dword ptr [ edx + hexvar ] , num lea esi , [ edx + num ] and esi , hexvar mov ebp , edx sub ebp , esi add ebp , hexvar and ebp , hexvar mov edi , num mov dword ptr [ esi + edi ] , ecx add edi , num cmp edi , ebp jb hexvar lea esi , [ ebx + num ] cmp esi , dword ptr [ esp + hexvar ] ja hexvar mov ebp , edx mov dword ptr [ esp + hexvar ] , edx mov edi , eax sub esp , hexvar mov eax , dword ptr [ eax + num ] push ebx call dword ptr [ eax + hexvar ] mov edx , eax mov ecx , ebp mov dword ptr [ ecx ] , eax add esp , hexvar mov eax , num test edx , edx je hexvar lea ebp , [ ebx + edx ] cmp ebp , dword ptr [ esp + hexvar ] ja hexvar cmp edx , num jbe hexvar add ebx , num cmp ebp , ebx jb hexvar sub esp , hexvar mov eax , dword ptr [ edi + num ] push esi call dword ptr [ eax + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov word ptr [ esi + hexvar ] , ax add esp , hexvar mov dword ptr [ esp + num ] , edi jmp hexvar mov word ptr [ ecx + hexvar ] , num mov eax , num jmp hexvar
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r7 , r0 mov r8 , r1 mov r4 , r2 mov r5 , r3 mov r2 , hexvar mov r1 , num mov r0 , r8 bl hexvar add sb , r4 , num cmp sb , r5 bhi hexvar ldr r3 , [ r7 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 str r0 , [ r8 ] cmp r0 , num beq hexvar add r6 , r4 , r0 cmp r6 , r5 bhi hexvar cmp r0 , num bls hexvar add r4 , r4 , num cmp r6 , r4 blo hexvar ldr r3 , [ r7 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , sb blx r3 strh r0 , [ r8 , hexvar ] ldr sb , [ pc , hexvar ] ldr sl , [ pc , hexvar ] b hexvar mov r3 , num strh r3 , [ r8 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r6 , r0 mov r5 , r1 mov r4 , r2 mov r7 , r3 mov r2 , hexvar mov r1 , num mov r0 , r5 bl hexvar add sb , r4 , num cmp sb , r7 bhi hexvar ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 str r0 , [ r5 ] cmp r0 , num beq hexvar add r8 , r4 , r0 cmp r8 , r7 bhi hexvar cmp r0 , num bls hexvar add r4 , r4 , num cmp r8 , r4 blo hexvar ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , sb blx r3 strh r0 , [ r5 , hexvar ] ldr sb , [ pc , hexvar ] ldr sl , [ pc , hexvar ] add r7 , r4 , num cmp r8 , r7 blo hexvar ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 lsl r0 , r0 , hexvar lsr r0 , r0 , hexvar and r3 , r0 , hexvar sub r3 , r3 , num cmp r3 , num ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq r0 , fp , r4 , lsr r1 ldrdeq r0 , r1 , [ fp ] , -r4 andeq r0 , fp , r0 , lsl num andeq r0 , fp , r8 , lsr num andeq r0 , fp , ip , asr num ldrdeq r0 , r1 , [ fp ] , -r4 andeq r0 , fp , ip , lsr num ldrdeq r0 , r1 , [ fp ] , -r0 mov r3 , num strh r3 , [ r5 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add edi , hexvar mov dword ptr [ esp + num ] , edi mov ebx , ecx mov ecx , num mov dword ptr [ edx ] , num mov dword ptr [ edx + hexvar ] , num lea esi , [ edx + num ] and esi , hexvar mov ebp , edx sub ebp , esi add ebp , hexvar and ebp , hexvar mov edi , num mov dword ptr [ esi + edi ] , ecx add edi , num cmp edi , ebp jb hexvar lea esi , [ ebx + num ] cmp esi , dword ptr [ esp + hexvar ] ja hexvar mov ebp , edx mov dword ptr [ esp + hexvar ] , edx mov edi , eax sub esp , hexvar mov eax , dword ptr [ eax + num ] push ebx call dword ptr [ eax + hexvar ] mov edx , eax mov ecx , ebp mov dword ptr [ ecx ] , eax add esp , hexvar mov eax , num test edx , edx je hexvar lea ebp , [ ebx + edx ] cmp ebp , dword ptr [ esp + hexvar ] ja hexvar cmp edx , num jbe hexvar add ebx , num cmp ebp , ebx jb hexvar sub esp , hexvar mov eax , dword ptr [ edi + num ] push esi call dword ptr [ eax + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov word ptr [ esi + hexvar ] , ax add esp , hexvar mov dword ptr [ esp + num ] , edi jmp hexvar mov word ptr [ ecx + hexvar ] , num mov eax , num jmp hexvar
push rbx cmp qword ptr [ rip + hexvar ] , num je hexvar call qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov ebx , num test eax , eax jne hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov eax , ebx pop rbx ret
push rbx cmp qword ptr [ rip + hexvar ] , num je hexvar call qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov ebx , num test eax , eax jne hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov eax , ebx pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar jal hexvar nop lw gp , hexvar ( sp ) sw zero , hexvar ( sp ) b hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar jal hexvar nop lw gp , hexvar ( sp ) sw zero , hexvar ( sp ) b hexvar nop nop lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar addiu a2 , zero , hexvar lui s2 , hexvar lw t9 , hexvar ( s2 ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( s0 ) lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 addiu s1 , zero , num lui v0 , hexvar lw a0 , hexvar ( v0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lui v0 , hexvar lw ra , hexvar ( sp ) lui v1 , hexvar sw zero , hexvar ( s0 ) sw zero , hexvar ( s2 ) sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v1 ) lui v1 , hexvar lw s2 , hexvar ( sp ) sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v1 ) lw s0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) move v0 , s1 lw s1 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar jal hexvar addiu a0 , zero , hexvar b hexvar lw gp , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar jal hexvar move s1 , zero lui s2 , hexvar b hexvar lw gp , hexvar ( sp )
push esi push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar call dword ptr [ ebx + hexvar ] sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov esi , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov eax , esi add esp , num pop ebx pop esi ret
push rbx cmp qword ptr [ rip + hexvar ] , num je hexvar call qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov ebx , num test eax , eax jne hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov eax , ebx pop rbx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , num jmp hexvar mov eax , dword ptr [ ebx + hexvar ] call eax mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , num jmp hexvar nop mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push rbx cmp qword ptr [ rip + hexvar ] , num je hexvar call qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov ebx , num test eax , eax jne hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov eax , ebx pop rbx ret
push rbx cmp qword ptr [ rip + hexvar ] , num je hexvar call qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov ebx , num test eax , eax jne hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov eax , ebx pop rbx ret
push rbx cmp qword ptr [ rip + hexvar ] , num je hexvar call qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] call hexvar mov ebx , num test eax , eax jne hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov eax , ebx pop rbx ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov eax , dword ptr [ eax ] mov dword ptr [ ecx ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num sete bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ fp , - num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar cmp eax , num sbb eax , eax add esp , hexvar and eax , num add eax , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num call hexvar cmp eax , num jne hexvar sub esp , num push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar cmp eax , num sbb eax , eax add esp , hexvar and eax , num add eax , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp rax , num sbb eax , eax add rsp , num and eax , num add eax , num ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 addiu v1 , zero , num bne v0 , v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s1 jalr t9 lw a0 , hexvar ( s0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov rbx , rdi test rsi , rsi sete al movzx eax , al sub rdi , rax mov rax , rdi mov qword ptr [ rsp + hexvar ] , rdi mov rdi , rsi sub rdi , num mov qword ptr [ rsp + num ] , rdi jne hexvar bsf rcx , rax shr rax , cl mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , num lea eax , [ rcx + hexvar ] mov dword ptr [ rsp + hexvar ] , eax mov rax , rbp shr rax , num and eax , hexvar lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] lea rdx , [ rax + rax ] imul rax , rax imul rax , rbp sub rdx , rax lea rax , [ rdx + rdx ] imul rdx , rdx imul rdx , rbp sub rax , rdx lea rdx , [ rax + rax ] imul rax , rax imul rax , rbp sub rdx , rax mov r15 , rdx cmp rbx , num sbb rsi , rsi and esi , hexvar add rsi , hexvar cmp rbx , num setb cl movzx ecx , cl sbb rax , rax add rax , num jmp hexvar mov rdi , rsi call hexvar mov byte ptr [ rsp + hexvar ] , al movzx eax , byte ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
test rdi , rdi jne hexvar cmp rsi , num jbe hexvar cmp rsi , hexvar mov eax , num ja hexvar ret nop dword ptr [ rax + rax ] jmp hexvar nop dword ptr [ rax ] xor eax , eax ret
push esi mov esi , edx push ebx or esi , eax mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] jne hexvar cmp ecx , num ja hexvar cmp ebx , num ja hexvar xor eax , eax pop ebx pop esi ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov rbx , rdi test rsi , rsi sete al movzx eax , al sub rdi , rax mov rax , rdi mov qword ptr [ rsp + hexvar ] , rdi mov rdi , rsi sub rdi , num mov qword ptr [ rsp + num ] , rdi jne hexvar bsf rcx , rax shr rax , cl mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , num lea eax , [ rcx + hexvar ] mov dword ptr [ rsp + hexvar ] , eax mov rax , rbp shr rax , num and eax , hexvar lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] lea rdx , [ rax + rax ] imul rax , rax imul rax , rbp sub rdx , rax lea rax , [ rdx + rdx ] imul rdx , rdx imul rdx , rbp sub rax , rdx lea rdx , [ rax + rax ] imul rax , rax imul rax , rbp sub rdx , rax mov r15 , rdx cmp rbx , num sbb rsi , rsi and esi , hexvar add rsi , hexvar cmp rbx , num setb cl movzx ecx , cl sbb rax , rax add rax , num jmp hexvar mov rdi , rsi call hexvar mov byte ptr [ rsp + hexvar ] , al movzx eax , byte ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
or v0 , a0 , a1 move v1 , a2 bnez v0 , hexvar move t0 , a3 beqz a2 , hexvar sltiu v0 , a3 , num move a0 , v1 j hexvar move a1 , t0 j hexvar nop bnez v0 , hexvar nop lui v0 , hexvar ori v0 , v0 , hexvar sltu v0 , a3 , v0 beqz v0 , hexvar addiu v0 , zero , num jr ra nop jr ra move v0 , zero
or v0 , a0 , a1 move v1 , a2 bnez v0 , hexvar move t0 , a3 beqz a2 , hexvar sltiu v0 , a3 , num move a0 , v1 j hexvar move a1 , t0 j hexvar nop bnez v0 , hexvar nop lui v0 , hexvar ori v0 , v0 , hexvar sltu v0 , a3 , v0 beqz v0 , hexvar addiu v0 , zero , num jr ra nop jr ra move v0 , zero
test rdi , rdi jne hexvar cmp rsi , num jbe hexvar cmp rsi , hexvar mov eax , num ja hexvar ret nop dword ptr [ rax + rax ] jmp hexvar nop dword ptr [ rax ] xor eax , eax ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov rbx , rdi test rsi , rsi sete al movzx eax , al sub rdi , rax mov rax , rdi mov qword ptr [ rsp + hexvar ] , rdi mov rdi , rsi sub rdi , num mov qword ptr [ rsp + num ] , rdi jne hexvar bsf rcx , rax shr rax , cl mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , num lea eax , [ rcx + hexvar ] mov dword ptr [ rsp + hexvar ] , eax mov rax , rbp shr rax , num and eax , hexvar lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] lea rdx , [ rax + rax ] imul rax , rax imul rax , rbp sub rdx , rax lea rax , [ rdx + rdx ] imul rdx , rdx imul rdx , rbp sub rax , rdx lea rdx , [ rax + rax ] imul rax , rax imul rax , rbp sub rdx , rax mov r15 , rdx cmp rbx , num sbb rsi , rsi and esi , hexvar add rsi , hexvar cmp rbx , num setb cl movzx ecx , cl sbb rax , rax add rax , num jmp hexvar mov rdi , rsi call hexvar mov byte ptr [ rsp + hexvar ] , al movzx eax , byte ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push esi mov esi , edx push ebx or esi , eax mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] jne hexvar cmp ecx , num ja hexvar cmp ebx , num ja hexvar xor eax , eax pop ebx pop esi ret
push esi mov esi , edx push ebx or esi , eax mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] jne hexvar cmp ecx , num ja hexvar cmp ebx , num ja hexvar xor eax , eax pop ebx pop esi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move a2 , a1 move a1 , a0 lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move a2 , a1 move a1 , a0 lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov edx , dword ptr [ rcx + hexvar ] mov ecx , edx shl rcx , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] xor rax , hexvar mov rcx , - num mov rdx , rcx xor rdx , num movabs rsi , hexvar xor rcx , rsi or rax , rdx or rcx , rsi xor rax , hexvar and rax , rcx cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov eax , num test rdi , rdi je hexvar mov rdx , qword ptr [ rdi + num ] cmp dword ptr [ rdx + num ] , num je hexvar ret mov rdx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdx + hexvar ] mov edx , dword ptr [ rdx + hexvar ] lea rcx , [ rax + rdx * num ] cmp rax , rcx jb hexvar mov eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov edx , dword ptr [ rcx + hexvar ] mov ecx , edx shl rcx , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] xor rax , hexvar mov rcx , - num mov rdx , rcx xor rdx , num movabs rsi , hexvar xor rcx , rsi or rax , rdx or rcx , rsi xor rax , hexvar and rax , rcx cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
xor eax , eax test rdi , rdi je hexvar mov rdx , qword ptr [ rdi + num ] cmp dword ptr [ rdx + num ] , num je hexvar ret nop dword ptr [ rax + rax ] mov rdx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdx + hexvar ] mov edx , dword ptr [ rdx + hexvar ] lea rcx , [ rax + rdx * num ] cmp rax , rcx jae hexvar nop word ptr [ rax + rax ] mov rdx , qword ptr [ rax ] test byte ptr [ rdx + num ] , num je hexvar mov edx , dword ptr [ rdx + num ] sub edx , num cmp edx , num ja hexvar add rax , num cmp rcx , rax ja hexvar mov eax , num ret
mov eax , dword ptr [ esp + num ] test eax , eax je hexvar mov edx , dword ptr [ eax + num ] cmp dword ptr [ edx + num ] , num je hexvar xor eax , eax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop move v1 , v0 addiu v0 , zero , num beq v1 , v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] and eax , num test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num je hexvar mov eax , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov edx , dword ptr [ rcx + hexvar ] mov ecx , edx shl rcx , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] xor rax , hexvar mov rcx , - num mov rdx , rcx xor rdx , num movabs rsi , hexvar xor rcx , rsi or rax , rdx or rcx , rsi xor rax , hexvar and rax , rcx cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov edx , dword ptr [ rcx + hexvar ] mov ecx , edx shl rcx , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] setb cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] and rax , num cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num je hexvar push dword ptr [ ebp + num ] call hexvar add esp , num cmp eax , num je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov ecx , eax and ecx , num mov ebx , ecx mov eax , edx and eax , num mov esi , eax mov eax , ebx xor ah , num mov dword ptr [ ebp - hexvar ] , eax mov eax , esi xor ah , num mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , ecx or eax , edx test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] cmp eax , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] cmp eax , num je hexvar mov eax , num jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jb hexvar mov eax , num lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push { r4 , lr } sub sp , sp , hexvar ldr ip , [ sp , hexvar ] ldr lr , [ pc , hexvar ] ldr lr , [ lr ] str lr , [ sp , hexvar ] cmp ip , num beq hexvar blo hexvar cmp ip , num beq hexvar ldr ip , [ sp , hexvar ] ldr lr , [ sp , hexvar ] cmp lr , ip bne hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] mov r3 , r2 mov r2 , r1 add r1 , sp , hexvar bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc } vstrhi s14 , [ sp , hexvar ] andeq r0 , r0 , r0
sub rsp , hexvar mov r10 , rsi mov eax , dword ptr [ rsp + hexvar ] mov rsi , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rsi xor esi , esi cmp eax , num je hexvar jb hexvar cmp eax , num je hexvar mov eax , dword ptr [ rsp ] cmp r8 , rax jne hexvar mov rsi , rsp sub rsp , num xor r8d , r8d push r9 mov r9 , rcx mov rcx , rdx mov rdx , r10 call hexvar pop rdx pop rcx mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
sub rsp , hexvar mov r10 , rsi mov eax , dword ptr [ rsp + hexvar ] mov rsi , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rsi xor esi , esi cmp eax , num je hexvar jb hexvar cmp eax , num je hexvar mov eax , dword ptr [ rsp ] cmp r8 , rax jne hexvar mov rsi , rsp sub rsp , num xor r8d , r8d push r9 mov r9 , rcx mov rcx , rdx mov rdx , r10 call hexvar pop rdx pop rcx mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push { r4 , r5 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ sp , hexvar ] ldr lr , [ r4 ] cmp ip , num str lr , [ sp , hexvar ] beq hexvar blo hexvar cmp ip , num beq hexvar ldr ip , [ sp , hexvar ] ldr lr , [ sp , hexvar ] cmp lr , ip bne hexvar mov ip , num ldr lr , [ sp , hexvar ] str ip , [ sp ] stmib sp , { r3 , lr } mov r3 , r2 mov r2 , r1 add r1 , sp , hexvar bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc } ldrtgt r6 , [ sl ] , - hexvar andeq r0 , r0 , r0
sub rsp , hexvar mov r10 , rsi mov eax , dword ptr [ rsp + hexvar ] mov rsi , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rsi xor esi , esi cmp eax , num je hexvar jb hexvar cmp eax , num je hexvar mov eax , dword ptr [ rsp ] cmp r8 , rax jne hexvar mov rsi , rsp sub rsp , num xor r8d , r8d push r9 mov r9 , rcx mov rcx , rdx mov rdx , r10 call hexvar pop rdx pop rcx mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push { r4 , r5 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ sp , hexvar ] ldr lr , [ r4 ] cmp ip , num str lr , [ sp , hexvar ] beq hexvar blo hexvar cmp ip , num beq hexvar ldr ip , [ sp , hexvar ] ldr lr , [ sp , hexvar ] cmp lr , ip bne hexvar mov ip , num ldr lr , [ sp , hexvar ] str ip , [ sp ] stmib sp , { r3 , lr } mov r3 , r2 mov r2 , r1 add r1 , sp , hexvar bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc } ldrtgt r6 , [ sl ] , - hexvar andeq r0 , r0 , r0
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num move t0 , a1 lw v0 , hexvar ( sp ) addiu v1 , zero , num sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , ( gp ) lw a1 , ( s0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add edx , num mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov ebp , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ebp xor ebp , ebp cmp ebx , num je hexvar cmp ebx , num jb hexvar cmp ebx , num je hexvar mov ebx , dword ptr [ esp + hexvar ] cmp dword ptr [ esp + num ] , ebx jne hexvar lea edx , [ esp + num ] push dword ptr [ esp + hexvar ] push edi push num push esi call hexvar add esp , hexvar mov esi , dword ptr [ esp + hexvar ] xor esi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num move t0 , a1 lw v0 , hexvar ( sp ) addiu v1 , zero , num sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , ( gp ) lw a1 , ( s0 )
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num move t0 , a1 lw v0 , hexvar ( sp ) addiu v1 , zero , num sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , ( gp ) lw a1 , ( s0 )
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp push edi push esi push ebx call hexvar add ecx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , ecx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] lea edi , [ esi + num ] mov eax , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , edx and edi , hexvar add edi , hexvar add eax , edi push eax push dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar test eax , eax mov ecx , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num mov eax , dword ptr [ edx ] lea ebx , [ ecx + eax ] add edi , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ edx ] , edi push ebx push num push num call dword ptr [ eax + hexvar ] lea eax , [ ebx + num ] add esp , hexvar mov edi , dword ptr [ ebp + num ] push eax mov eax , esi cdq push edx push esi call dword ptr [ edi + hexvar ] lea edx , [ ebx + num ] add esp , hexvar mov eax , dword ptr [ ebp + num ] lea edi , [ ebx + hexvar ] push edx push num push hexvar call dword ptr [ eax + hexvar ] add esp , hexvar xor edx , edx mov eax , hexvar mov dword ptr [ ebx + hexvar ] , hexvar mov word ptr [ ebx + hexvar ] , ax mov word ptr [ ebx + hexvar ] , dx push esi push dword ptr [ esp + hexvar ] push edi mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test esi , num mov ecx , dword ptr [ esp + hexvar ] je hexvar nop mov byte ptr [ edi + esi ] , num add esi , num test esi , num jne hexvar add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lw v0 , ( a2 ) lui gp , hexvar addiu v1 , zero , - num sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw s4 , hexvar ( sp ) move s4 , a0 addiu s1 , s0 , num sw s6 , hexvar ( sp ) move a0 , a1 sw s5 , hexvar ( sp ) and s1 , s1 , v1 sw s3 , hexvar ( sp ) addiu s1 , s1 , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s6 , a2 addu a1 , s1 , v0 sw gp , hexvar ( sp ) jalr t9 move s5 , a3 beqz v0 , hexvar move s3 , v0 lw v1 , num ( s4 ) addiu a1 , zero , num lw v0 , ( s6 ) move a0 , zero addu s2 , s3 , v0 lw t9 , hexvar ( v1 )
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
call hexvar add eax , hexvar sub esp , hexvar lea eax , [ eax - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
call hexvar add eax , hexvar sub esp , hexvar lea eax , [ eax - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp push edi mov ecx , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , edx xor edx , edx jmp hexvar lea esi , [ esi ] cmp edi , hexvar je hexvar add eax , num movsx edi , byte ptr [ eax - num ] test edi , edi jne hexvar lea eax , [ edx * num + num ] mov dword ptr [ esp ] , ecx sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax mov ecx , dword ptr [ esp ] je hexvar mov edx , eax mov ebp , edi mov edi , ecx jmp hexvar nop lea esi , [ esi ] cmp eax , hexvar mov edi , esi je hexvar lea esi , [ edi + num ] movsx eax , byte ptr [ esi - num ] test eax , eax jne hexvar mov eax , edx mov edx , edi mov edi , ebp sub edx , ecx mov ebp , eax lea eax , [ edi * num ] mov esi , edx mov dword ptr [ esp + num ] , ecx test esi , esi mov dword ptr [ esp ] , eax lea edx , [ ebp + eax ] jg hexvar mov dword ptr [ edx ] , num mov eax , dword ptr [ ebp + edi * num - num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edi add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a0 sw s4 , hexvar ( sp ) move s4 , a0 sw s2 , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) addiu a1 , zero , hexvar sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lb v1 , ( a0 ) b hexvar move a0 , zero beq v1 , a1 , hexvar nop lb v1 , ( v0 ) move s1 , v1 bnez v1 , hexvar addiu v0 , v0 , num addiu a0 , a0 , num lw t9 , - hexvar ( gp ) jalr t9 sll a0 , a0 , num lw gp , hexvar ( sp ) beqz v0 , hexvar move s5 , v0 addiu s3 , zero , hexvar move s7 , v0 b hexvar move v1 , s4 beq v0 , s3 , hexvar move v1 , s0 addiu s0 , v1 , num lb v0 , - num ( s0 ) bnez v0 , hexvar nop sll s3 , s1 , num subu s0 , v1 , s4 bgtz s0 , hexvar addu s6 , s5 , s3 sll v0 , s1 , num sw zero , ( s6 )
push r15 push r14 mov rdx , rdi push r13 push r12 xor ecx , ecx push rbp push rbx mov r12 , rdi mov rbp , rsi sub rsp , hexvar movsx eax , byte ptr [ rdi ] jmp hexvar nop cmp eax , hexvar je hexvar movsx eax , byte ptr [ rdx ] add rdx , num test eax , eax jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar test rax , rax mov r13 , rax je hexvar xor r14d , r14d mov r15d , r14d mov rdx , r12 jmp hexvar nop word ptr cs : [ rax + rax ] cmp eax , hexvar mov rdx , rbx je hexvar lea rbx , [ rdx + num ] movsx eax , byte ptr [ rbx - num ] test eax , eax jne hexvar mov rbx , rdx movsxd r14 , r15d sub rbx , r12 shl r14 , num test rbx , rbx lea rcx , [ r13 + r14 ] jg hexvar mov qword ptr [ rcx ] , num cmp qword ptr [ r13 + r14 - num ] , num je hexvar mov dword ptr [ rbp ] , r15d add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi mov ecx , eax push esi push ebx xor edi , edi call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , edx movzx edx , byte ptr [ eax ] jmp hexvar nop cmp esi , hexvar je hexvar movzx edx , byte ptr [ eax ] movsx esi , dl add eax , num test esi , esi jne hexvar lea eax , [ edi * num + num ] mov dword ptr [ esp ] , ecx sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax mov ecx , dword ptr [ esp ] je hexvar mov edx , eax mov ebp , esi mov esi , ecx jmp hexvar lea esi , [ esi ] cmp eax , hexvar mov esi , edi je hexvar lea edi , [ esi + num ] movsx eax , byte ptr [ edi - num ] test eax , eax jne hexvar mov eax , edx mov edx , esi mov esi , ebp sub edx , ecx mov ebp , eax lea eax , [ esi * num ] mov edi , edx mov dword ptr [ esp + num ] , ecx test edi , edi mov dword ptr [ esp ] , eax lea edx , [ ebp + eax ] jg hexvar mov dword ptr [ edx ] , num mov eax , dword ptr [ ebp + esi * num - num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , esi add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push r15 push r14 mov rax , rdi push r13 push r12 xor ecx , ecx push rbp push rbx mov r12 , rdi mov rbp , rsi sub rsp , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp edx , hexvar je hexvar add rax , num movsx edx , byte ptr [ rax - num ] test edx , edx jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar test rax , rax mov r13 , rax je hexvar xor r14d , r14d mov r15d , r14d mov rdx , r12 jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar mov rdx , rbx je hexvar lea rbx , [ rdx + num ] movsx eax , byte ptr [ rbx - num ] test eax , eax jne hexvar mov rbx , rdx movsxd r14 , r15d sub rbx , r12 shl r14 , num test rbx , rbx lea rcx , [ r13 + r14 ] jg hexvar mov qword ptr [ rcx ] , num cmp qword ptr [ r13 + r14 - num ] , num je hexvar mov dword ptr [ rbp ] , r15d add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , edx cmp byte ptr [ eax ] , num je hexvar mov ebp , eax mov edx , num add eax , num movsx edi , byte ptr [ eax - num ] test edi , edi je hexvar cmp edi , hexvar jne hexvar add edx , num cmp byte ptr [ eax ] , hexvar jne hexvar add eax , num cmp byte ptr [ eax ] , hexvar je hexvar jmp hexvar sub esp , hexvar lea eax , [ edx * num + num ] push eax call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov edx , ebp lea esi , [ edx + num ] movsx eax , byte ptr [ esi - num ] test eax , eax je hexvar mov edx , esi cmp eax , hexvar jne hexvar cmp byte ptr [ esi ] , hexvar jne hexvar add esi , num cmp byte ptr [ esi ] , hexvar je hexvar mov eax , esi sub eax , ebp add edi , num sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax add eax , num push eax call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push ebp mov ebp , eax push eax call hexvar mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ ebp + eax ] , num mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + edi * num - num ] , ebp add esp , hexvar test ebp , ebp je hexvar mov ebp , esi jmp hexvar mov ebx , dword ptr [ esp + num ] mov dword ptr [ ebx + edi * num ] , num mov eax , ebx call hexvar mov dword ptr [ esp + num ] , num jmp hexvar sub edx , ebp mov esi , edx test edx , edx jg hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ eax + edi * num ] , num cmp dword ptr [ eax + edi * num - num ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov dword ptr [ eax ] , edi mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 mov rax , rdi push r13 push r12 xor ecx , ecx push rbp push rbx mov r12 , rdi mov rbp , rsi sub rsp , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp edx , hexvar je hexvar add rax , num movsx edx , byte ptr [ rax - num ] test edx , edx jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar test rax , rax mov r13 , rax je hexvar xor r14d , r14d mov r15d , r14d mov rdx , r12 jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar mov rdx , rbx je hexvar lea rbx , [ rdx + num ] movsx eax , byte ptr [ rbx - num ] test eax , eax jne hexvar mov rbx , rdx movsxd r14 , r15d sub rbx , r12 shl r14 , num test rbx , rbx lea rcx , [ r13 + r14 ] jg hexvar mov qword ptr [ rcx ] , num cmp qword ptr [ r13 + r14 - num ] , num je hexvar mov dword ptr [ rbp ] , r15d add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s2 , a1 move v0 , a0 move a0 , zero addiu v1 , zero , hexvar addiu v0 , v0 , num lb s1 , - num ( v0 ) beqz s1 , hexvar lw t9 , - hexvar ( gp ) bne s1 , v1 , hexvar addiu v0 , v0 , num addiu v0 , v0 , - num lb a1 , ( v0 ) bne a1 , v1 , hexvar addiu a0 , a0 , num addiu v0 , v0 , num lb a1 , ( v0 ) beq a1 , v1 , hexvar nop b hexvar addiu v0 , v0 , num addiu a0 , a0 , num sll a0 , a0 , num jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s4 , v0 move s6 , v0 addiu s5 , zero , hexvar move v1 , s3 addiu s0 , v1 , num lb v0 , - num ( s0 ) beqz v0 , hexvar nop bne v0 , s5 , hexvar move v1 , s0 lb v0 , ( s0 ) bne v0 , s5 , hexvar subu s7 , s0 , s3 addiu s0 , s0 , num lb v0 , ( s0 ) beq v0 , s5 , hexvar subu s7 , s0 , s3 addiu a0 , s7 , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move fp , v0 move a2 , s7 move a1 , s3 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addu s7 , fp , s7 sb zero , ( s7 ) sw fp , ( s6 ) addiu s6 , s6 , num lw v0 , - num ( s6 ) beqz v0 , hexvar addiu s1 , s1 , num b hexvar move s3 , s0 sll v0 , s1 , num addu v0 , s4 , v0 sw zero , ( v0 ) move a0 , s4 jal hexvar nop lw gp , hexvar ( sp ) b hexvar move s4 , zero subu s0 , v1 , s3 bgtz s0 , hexvar addiu s6 , s1 , num sll v0 , s1 , num addu v0 , s4 , v0 sw zero , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move v0 , a0 sw s4 , hexvar ( sp ) addiu v1 , zero , hexvar sw s2 , hexvar ( sp ) move s4 , a0 sw ra , hexvar ( sp ) move s2 , a1 sw s7 , hexvar ( sp ) move a0 , zero sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) b hexvar sw gp , hexvar ( sp ) beq s1 , v1 , hexvar nop addiu v0 , v0 , num lb s1 , - num ( v0 ) bnez s1 , hexvar lw t9 , - hexvar ( gp ) addiu a0 , a0 , num jalr t9 sll a0 , a0 , num lw gp , hexvar ( sp ) beqz v0 , hexvar move s5 , v0 addiu s3 , zero , hexvar move s7 , v0 b hexvar move v1 , s4 beq v0 , s3 , hexvar move v1 , s0 addiu s0 , v1 , num lb v0 , - num ( s0 ) bnez v0 , hexvar nop sll s3 , s1 , num subu s0 , v1 , s4 bgtz s0 , hexvar addu s6 , s5 , s3 sll v0 , s1 , num sw zero , ( s6 )
push ebp push edi mov ecx , eax push esi push ebx xor edi , edi call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , edx movzx edx , byte ptr [ eax ] jmp hexvar nop cmp esi , hexvar je hexvar movzx edx , byte ptr [ eax ] movsx esi , dl add eax , num test esi , esi jne hexvar lea eax , [ edi * num + num ] mov dword ptr [ esp ] , ecx sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax mov ecx , dword ptr [ esp ] je hexvar mov edx , eax mov ebp , esi mov esi , ecx jmp hexvar lea esi , [ esi ] cmp eax , hexvar mov esi , edi je hexvar lea edi , [ esi + num ] movsx eax , byte ptr [ edi - num ] test eax , eax jne hexvar mov eax , edx mov edx , esi mov esi , ebp sub edx , ecx mov ebp , eax lea eax , [ esi * num ] mov edi , edx mov dword ptr [ esp + num ] , ecx test edi , edi mov dword ptr [ esp ] , eax lea edx , [ ebp + eax ] jg hexvar mov dword ptr [ edx ] , num mov eax , dword ptr [ ebp + esi * num - num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , esi add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push rbx mov rax , rsi or rax , rdx je hexvar mov r14 , rdx mov r15 , rdi mov rbx , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov eax , dword ptr [ r15 + hexvar ] shl eax , num test byte ptr [ rip + hexvar ] , num jne hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar jmp hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar mov rcx , rbx call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num test r14 , r14 je hexvar add r15 , hexvar movsxd rax , dword ptr [ rbx + hexvar ] mov edx , hexvar sub rdx , rax mov rdi , r15 mov rsi , r14 call hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov rax , rsi or rax , rdx je hexvar mov r14 , rdx mov r15 , rdi mov rbx , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov eax , dword ptr [ r15 + hexvar ] shl eax , num test byte ptr [ rip + hexvar ] , num jne hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar jmp hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar mov rcx , rbx call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num test r14 , r14 je hexvar add r15 , hexvar movsxd rax , dword ptr [ rbx + hexvar ] mov edx , hexvar sub rdx , rax mov rdi , r15 mov rsi , r14 call hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov rax , rsi or rax , rdx je hexvar mov r14 , rdx mov r15 , rdi mov rbx , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov eax , dword ptr [ r15 + hexvar ] shl eax , num test byte ptr [ rip + hexvar ] , num jne hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar jmp hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar mov rcx , rbx call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num test r14 , r14 je hexvar add r15 , hexvar mov eax , hexvar sub eax , dword ptr [ rbx + hexvar ] movsxd rdx , eax mov rdi , r15 mov rsi , r14 call hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test edi , edi jne hexvar test eax , eax jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move a0 , a1 beqz a2 , hexvar lw s0 , hexvar ( s1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test edi , edi jne hexvar test eax , eax jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push rbx mov rax , rsi or rax , rdx je hexvar mov r14 , rdx mov r15 , rdi mov rbx , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov eax , dword ptr [ r15 + hexvar ] shl eax , num test byte ptr [ rip + hexvar ] , num jne hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar jmp hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar mov rcx , rbx call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num test r14 , r14 je hexvar add r15 , hexvar movsxd rax , dword ptr [ rbx + hexvar ] mov edx , hexvar sub rdx , rax mov rdi , r15 mov rsi , r14 call hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test edi , edi jne hexvar test eax , eax jne hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push r15 push r14 push rbx mov rax , rsi or rax , rdx je hexvar mov r14 , rdx mov r15 , rdi mov rbx , qword ptr [ rdi + hexvar ] test rsi , rsi je hexvar mov eax , dword ptr [ r15 + hexvar ] shl eax , num test byte ptr [ rip + hexvar ] , num jne hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar jmp hexvar mov rdi , rsi mov esi , eax mov rdx , rbx call hexvar lea rdi , [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov r8d , hexvar mov rcx , rbx call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num test r14 , r14 je hexvar add r15 , hexvar movsxd rax , dword ptr [ rbx + hexvar ] mov edx , hexvar sub rdx , rax mov rdi , r15 mov rsi , r14 call hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) sw v1 , hexvar ( sp ) beqz a0 , hexvar nop beqz a1 , hexvar move v0 , a1 lw v1 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move s1 , a0 move s2 , a2 beqz a1 , hexvar move s0 , a3 lw v0 , hexvar ( a0 )
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov ebp , ecx mov rcx , rsi test rsi , rsi je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r14 , rdx mov rdi , rbx mov esi , hexvar xor edx , edx xor r8d , r8d call hexvar test eax , eax jle hexvar mov r15d , eax movsxd rbp , eax mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num je hexvar mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num jne hexvar test r14 , r14 je hexvar test al , num jne hexvar test al , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax movzx eax , al add rsp , num pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move s1 , a0 move s2 , a2 beqz a1 , hexvar move s0 , a3 lw v0 , hexvar ( a0 )
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov ebp , ecx mov rcx , rsi test rsi , rsi je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r14 , rdx mov rdi , rbx mov esi , hexvar xor edx , edx xor r8d , r8d call hexvar test eax , eax jle hexvar mov r15d , eax movsxd rbp , eax mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num je hexvar mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num jne hexvar test r14 , r14 je hexvar test al , num jne hexvar test al , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax movzx eax , al add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov ebp , ecx mov rcx , rsi test rsi , rsi je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r14 , rdx mov rdi , rbx mov esi , hexvar xor edx , edx xor r8d , r8d call hexvar test eax , eax jle hexvar mov r15d , eax movsxd rbp , eax mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num je hexvar mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num jne hexvar test r14 , r14 je hexvar test al , num jne hexvar test al , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax movzx eax , al add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov ebp , ecx mov rcx , rsi test rsi , rsi je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r14 , rdx mov rdi , rbx mov esi , hexvar xor edx , edx xor r8d , r8d call hexvar test eax , eax jle hexvar mov r15d , eax movsxd rbp , eax mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num je hexvar mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num jne hexvar test r14 , r14 je hexvar test al , num jne hexvar test al , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax movzx eax , al add rsp , num pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov ebp , ecx mov rcx , rsi test rsi , rsi je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r14 , rdx mov rdi , rbx mov esi , hexvar xor edx , edx xor r8d , r8d call hexvar test eax , eax jle hexvar mov r15d , eax movsxd rbp , eax mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num je hexvar mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num jne hexvar test r14 , r14 je hexvar test al , num jne hexvar test al , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax movzx eax , al add rsp , num pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) sw v1 , hexvar ( sp ) beqz a0 , hexvar nop beqz a1 , hexvar move v0 , a1 lw v1 , hexvar ( a0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + hexvar ] , num jbe hexvar mov eax , dword ptr [ ebp + hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + num ] add eax , edx movzx eax , byte ptr [ eax ] test al , al jne hexvar mov eax , dword ptr [ ebp + hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + num ] add eax , edx movzx eax , byte ptr [ eax ] test al , al je hexvar mov eax , num jmp hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar mov eax , dword ptr [ ebp + hexvar ] sub eax , num mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] cmp eax , num jbe hexvar cmp byte ptr [ edi + eax - num ] , num lea ebp , [ eax - num ] jne hexvar cmp byte ptr [ edi + eax - num ] , num jne hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , hexvar mov dword ptr [ eax + hexvar ] , ebp mov dword ptr [ eax + num ] , edi mov dword ptr [ eax + num ] , edi mov dword ptr [ eax + hexvar ] , ebp mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num push eax call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp eax , num jbe hexvar lea ebp , [ eax - num ] cmp byte ptr [ edi + eax - num ] , num jne hexvar cmp byte ptr [ edi + eax - num ] , num jne hexvar sub esp , hexvar push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , ebp mov dword ptr [ eax + num ] , edi mov dword ptr [ eax + num ] , edi mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , ebp mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
cmp rsi , num push r12 push rbp push rbx jbe hexvar cmp byte ptr [ rdi + rsi - num ] , num jne hexvar cmp byte ptr [ rdi + rsi - num ] , num jne hexvar mov r12 , rdi mov edi , hexvar mov rbp , rsi call hexvar test rax , rax mov rbx , rax je hexvar lea esi , [ rbp - num ] mov qword ptr [ rax + num ] , r12 mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rax ] , num mov qword ptr [ rax + hexvar ] , num mov rdi , rax mov dword ptr [ rax + hexvar ] , esi mov dword ptr [ rax + hexvar ] , esi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + hexvar ] , num jbe hexvar mov eax , dword ptr [ ebp + hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + num ] add eax , edx movzx eax , byte ptr [ eax ] test al , al jne hexvar mov eax , dword ptr [ ebp + hexvar ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + num ] add eax , edx movzx eax , byte ptr [ eax ] test al , al je hexvar mov eax , num jmp hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar mov eax , dword ptr [ ebp + hexvar ] sub eax , num mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp eax , num jbe hexvar lea ebp , [ eax - num ] cmp byte ptr [ edi + eax - num ] , num jne hexvar cmp byte ptr [ edi + eax - num ] , num jne hexvar sub esp , hexvar push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , ebp mov dword ptr [ eax + num ] , edi mov dword ptr [ eax + num ] , edi mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , ebp mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
cmp rsi , num push r12 push rbp push rbx jbe hexvar cmp byte ptr [ rdi + rsi - num ] , num jne hexvar cmp byte ptr [ rdi + rsi - num ] , num jne hexvar mov r12 , rdi mov edi , hexvar mov rbp , rsi call hexvar test rax , rax mov rbx , rax je hexvar lea esi , [ rbp - num ] mov qword ptr [ rax + num ] , r12 mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rax ] , num mov qword ptr [ rax + hexvar ] , num mov rdi , rax mov dword ptr [ rax + hexvar ] , esi mov dword ptr [ rax + hexvar ] , esi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
cmp rsi , num jbe hexvar cmp byte ptr [ rdi + rsi - num ] , num jne hexvar cmp byte ptr [ rdi + rsi - num ] , num jne hexvar push r13 push r12 mov r12 , rdi push rbp push rbx mov edi , hexvar mov rbp , rsi sub rsp , num call hexvar test rax , rax mov rbx , rax je hexvar lea esi , [ rbp - num ] mov qword ptr [ rax + num ] , r12 mov qword ptr [ rax + hexvar ] , r12 mov qword ptr [ rax ] , num mov qword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , esi mov dword ptr [ rax + hexvar ] , esi mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] lea rcx , [ rbp - num ] lea r12 , [ rdx * num ] cmp rcx , rdx jbe hexvar lea rdi , [ rax + r12 ] mov rax , qword ptr [ rdi ] cmp rbx , rax je hexvar test rax , rax je hexvar movzx eax , byte ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rdx ] , al mov rax , qword ptr [ rdi ] mov qword ptr [ rax + hexvar ] , rdx mov edx , dword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , dword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx ] mov qword ptr [ rdi ] , rbx mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , rdx mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al mov rax , rbx add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r12 push rbp push rbx cmp rsi , num jbe hexvar cmp byte ptr [ rdi + rsi - num ] , num jne hexvar cmp byte ptr [ rdi + rsi - num ] , num jne hexvar mov rbp , rsi mov r12 , rdi mov edi , hexvar call hexvar mov rbx , rax test rax , rax je hexvar lea esi , [ rbp - num ] mov dword ptr [ rax + hexvar ] , esi mov qword ptr [ rax + num ] , r12 mov qword ptr [ rax + hexvar ] , r12 mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , num mov dword ptr [ rax + hexvar ] , esi mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov rdi , rax call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rcx , num movsx edx , byte ptr [ rax + rcx ] cmp edx , num jne hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] sub rcx , num add rsi , rcx movsx eax , byte ptr [ rdx + rsi ] cmp eax , num je hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar movabs rdi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rcx , hexvar add rax , rcx sub rax , num sub rax , rcx mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rbx , qword ptr [ rdi + hexvar ] movups xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 mov edx , hexvar mov rdi , rbx xor esi , esi call hexvar movaps xmm0 , xmmword ptr [ rsp ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + num ] , num movlps qword ptr [ r14 + hexvar ] , xmm0 mov dword ptr [ r14 ] , num mov dword ptr [ r14 + hexvar ] , num add rsp , hexvar pop rbx pop r14 ret
push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ esp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ esp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edx sub esp , num push hexvar push num push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num nop add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rbx , qword ptr [ rdi + hexvar ] movups xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 mov edx , hexvar mov rdi , rbx xor esi , esi call hexvar movaps xmm0 , xmmword ptr [ rsp ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + num ] , num movlps qword ptr [ r14 + hexvar ] , xmm0 mov dword ptr [ r14 ] , num mov dword ptr [ r14 + hexvar ] , num add rsp , hexvar pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rbx , qword ptr [ rdi + hexvar ] movups xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 mov edx , hexvar mov rdi , rbx xor esi , esi call hexvar movaps xmm0 , xmmword ptr [ rsp ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + num ] , num movlps qword ptr [ r14 + hexvar ] , xmm0 mov dword ptr [ r14 ] , num mov dword ptr [ r14 + hexvar ] , num add rsp , hexvar pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw s0 , hexvar ( a0 )
push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rbx , qword ptr [ rdi + hexvar ] movups xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 mov edx , hexvar mov rdi , rbx xor esi , esi call hexvar movaps xmm0 , xmmword ptr [ rsp ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + num ] , num movlps qword ptr [ r14 + hexvar ] , xmm0 mov dword ptr [ r14 ] , num mov dword ptr [ r14 + hexvar ] , num add rsp , hexvar pop rbx pop r14 ret
push ebp push edi xor eax , eax push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi + hexvar ] lea edi , [ edx + num ] mov ecx , edx mov dword ptr [ edx ] , num mov dword ptr [ edx + hexvar ] , num mov ebx , dword ptr [ edx + hexvar ] and edi , hexvar mov ebp , dword ptr [ edx + hexvar ] sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx + hexvar ] , ebx mov dword ptr [ edx + hexvar ] , ebp mov dword ptr [ edx + num ] , num mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi ] , num mov dword ptr [ esi + hexvar ] , num pop ebx pop esi pop edi pop ebp ret
push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rbx , qword ptr [ rdi + hexvar ] movups xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 mov edx , hexvar mov rdi , rbx xor esi , esi call hexvar movaps xmm0 , xmmword ptr [ rsp ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + num ] , num movlps qword ptr [ r14 + hexvar ] , xmm0 mov dword ptr [ r14 ] , num mov dword ptr [ r14 + hexvar ] , num add rsp , hexvar pop rbx pop r14 ret
push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi lea rdi , [ rdi + hexvar ] lea rsi , [ rsi + hexvar ] call hexvar xor ebp , ebp test rax , rax je hexvar lea rdi , [ rbx + hexvar ] lea rsi , [ r14 + hexvar ] call hexvar test rax , rax je hexvar lea rdi , [ rbx + hexvar ] lea rsi , [ r14 + hexvar ] call hexvar test rax , rax je hexvar mov eax , dword ptr [ r14 + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov ebp , num mov eax , ebp pop rbx pop r14 pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num lea eax , [ edi + hexvar ] call hexvar add ebx , hexvar push eax lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar lea eax , [ edi + hexvar ] sub esp , num push eax lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar lea eax , [ edi + hexvar ] sub esp , num push eax lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ edi + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , num pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi lea rdi , [ rdi + hexvar ] lea rsi , [ rsi + hexvar ] call hexvar mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rbx + hexvar ] mov qword ptr [ rsp + num ] , rax lea r12 , [ r14 + hexvar ] lea r13 , [ rbx + hexvar ] lea rbp , [ r14 + hexvar ] mov ecx , hexvar jmp hexvar nop mov ecx , hexvar xor r15d , r15d cmp ecx , hexvar jle hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , r12 call hexvar mov ecx , hexvar test rax , rax je hexvar mov ecx , hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar mov rdi , r13 mov rsi , rbp call hexvar mov ecx , hexvar test rax , rax je hexvar mov ecx , hexvar jmp hexvar mov eax , dword ptr [ r14 + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov ecx , hexvar mov r15d , num jmp hexvar mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 addiu a1 , a1 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a1 , s1 , hexvar addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a1 , s1 , hexvar addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( s1 )
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , num lea eax , [ edi + hexvar ] push eax lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar mov edx , num test eax , eax je hexvar sub esp , num lea eax , [ edi + hexvar ] push eax lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar mov edx , num test eax , eax je hexvar sub esp , num lea eax , [ edi + hexvar ] push eax lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar mov edx , num test eax , eax je hexvar mov eax , dword ptr [ edi + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov edx , num mov eax , edx pop ebx pop esi pop edi ret
push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi lea rdi , [ rdi + hexvar ] lea rsi , [ rsi + hexvar ] call hexvar xor ebp , ebp test rax , rax je hexvar lea rdi , [ rbx + hexvar ] lea rsi , [ r14 + hexvar ] call hexvar test rax , rax je hexvar lea rdi , [ rbx + hexvar ] lea rsi , [ r14 + hexvar ] call hexvar test rax , rax je hexvar mov eax , dword ptr [ r14 + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov ebp , num mov eax , ebp pop rbx pop r14 pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num lea eax , [ edi + hexvar ] call hexvar add ebx , hexvar push eax lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar lea eax , [ edi + hexvar ] sub esp , num push eax lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar lea eax , [ edi + hexvar ] sub esp , num push eax lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ edi + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , num pop ebx pop esi pop edi ret
push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi lea rdi , [ rdi + hexvar ] lea rsi , [ rsi + hexvar ] call hexvar xor ebp , ebp test rax , rax je hexvar lea rsi , [ r14 + hexvar ] lea rdi , [ rbx + hexvar ] call hexvar test rax , rax je hexvar lea rdi , [ rbx + hexvar ] lea rsi , [ r14 + hexvar ] call hexvar test rax , rax je hexvar mov eax , dword ptr [ r14 + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov ebp , num mov eax , ebp pop rbx pop r14 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw v1 , hexvar ( v0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
sub rsp , hexvar mov rsi , qword ptr [ rdi + hexvar ] mov edi , num mov rdx , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar cmp eax , num sbb eax , eax and eax , hexvar add eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push num call hexvar add esp , hexvar cmp eax , num sbb eax , eax and eax , hexvar add eax , num mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov eax , num pop rbx ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov eax , num pop rbx ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov eax , num pop rbx ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , hexvar lw a0 , hexvar ( a0 ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , hexvar lw a0 , hexvar ( a0 ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , hexvar lw a0 , hexvar ( a0 ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov eax , num pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , num mov eax , num pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 sltiu v1 , v0 , num bnez v1 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , zero , hexvar bal hexvar move a0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar cmp eax , num jbe hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jg hexvar cmp dword ptr [ ebp - num ] , num jg hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jg hexvar cmp dword ptr [ ebp - num ] , num jg hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar cmp eax , num jbe hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push r14 push r13 push r12 push rbp push rbx call hexvar test rax , rax mov rbx , rax je hexvar mov rdi , rax call hexvar cmp eax , num jbe hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax setns cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov eax , dword ptr [ rbp - hexvar ] sub eax , num setl cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov edi , dword ptr [ rbp - hexvar ] xor eax , eax mov cl , al mov esi , hexvar mov edx , num mov al , cl call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax sets cl movzx eax , cl mov r8d , eax mov r8 , qword ptr [ r8 * num + hexvar ] jmp r8
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jg hexvar cmp dword ptr [ ebp - num ] , num jg hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jg hexvar cmp dword ptr [ ebp - num ] , num jg hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] leave ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub edx , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax sete al movzx eax , al pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , num ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] sub eax , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx + hexvar ] jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx + hexvar ] sete dl and dl , num movzx eax , dl mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] sub eax , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx + hexvar ] jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx + hexvar ] sete dl and dl , num movzx eax , dl mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] sub r2 , r2 , r3 ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r2 , r3 bne hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r2 , r3 moveq r3 , num movne r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] movsxd rdx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax sete al movzx eax , al pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] test esi , esi setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] sub eax , edx sub eax , ecx sete bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] sub eax , ecx sete dl movzx ecx , dl mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] test esi , esi setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] sub eax , edx sub eax , ecx sete bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] sub eax , ecx sete dl movzx ecx , dl mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub edx , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax sete al movzx eax , al pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] sub eax , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx + hexvar ] jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx + hexvar ] sete dl and dl , num movzx eax , dl mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num sw s5 , hexvar ( sp ) move s5 , a2 sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , ( gp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , ( gp ) addiu s4 , v0 , hexvar addiu v0 , zero , - num move a1 , zero sw v0 , hexvar ( s0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } adds r5 , r0 , num movne r5 , num mov r7 , r1 cmp r1 , num moveq r1 , r5 movne r1 , num cmp r1 , num bne hexvar mov sb , r2 mov r8 , r3 mov r6 , r0 mov r1 , hexvar mov r0 , num bl hexvar subs r4 , r0 , num beq hexvar mvn r3 , num str r3 , [ r4 , hexvar ] add sl , r4 , hexvar mov r1 , num mov r0 , sl bl hexvar cmp r0 , num bne hexvar cmp r8 , num moveq r5 , num cmp r5 , num bne hexvar cmp sb , num beq hexvar ldr r3 , [ pc , hexvar ] str r3 , [ r4 , hexvar ] str r7 , [ r4 , num ] mov r3 , num str r3 , [ r4 , hexvar ] str r6 , [ r4 , hexvar ] mov r3 , num str r3 , [ r4 , hexvar ] str r7 , [ r4 , num ] str r6 , [ r4 , hexvar ] mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , ip
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } adds r5 , r0 , num movne r5 , num cmp r1 , num moveq r6 , r5 movne r6 , num cmp r6 , num bne hexvar mov r7 , r0 mov r8 , r1 mov r0 , num mov r1 , hexvar mov sl , r2 mov fp , r3 bl hexvar subs r4 , r0 , num beq hexvar mvn r3 , num add sb , r4 , hexvar str r3 , [ r4 , hexvar ] mov r0 , sb mov r1 , r6 bl hexvar cmp r0 , num bne hexvar cmp fp , num moveq r5 , num cmp r5 , num bne hexvar cmp sl , num beq hexvar ldr r3 , [ pc , hexvar ] str r8 , [ r4 , num ] str r3 , [ r4 , hexvar ] mov r2 , num mov r3 , num str r7 , [ r4 , hexvar ] str r8 , [ r4 , num ] str r7 , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] mov r0 , r4 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 ldrble ip , [ r4 ]
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num sw s5 , hexvar ( sp ) move s5 , a2 sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , ( gp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , ( gp ) addiu s4 , v0 , hexvar addiu v0 , zero , - num move a1 , zero sw v0 , hexvar ( s0 )
push r15 push r14 mov r15d , edx push r13 push r12 mov r13d , ecx push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , hexvar test rdi , rdi setne r12b test rsi , rsi jne hexvar test r12b , r12b jne hexvar mov esi , hexvar mov edi , num call hexvar test rax , rax mov r14 , rax je hexvar mov dword ptr [ rax + hexvar ] , hexvar lea rax , [ rax + hexvar ] xor esi , esi mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar test eax , eax jne hexvar test r13d , r13d je hexvar test r12b , r12b je hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rsi , rbp mov rdx , rbx mov rdi , rax call hexvar mov rbp , rax jmp hexvar nop dword ptr [ rax ] test r15d , r15d je hexvar mov rax , qword ptr [ rip ] mov qword ptr [ r14 + hexvar ] , rbp mov qword ptr [ r14 + hexvar ] , rax mov dword ptr [ r14 + hexvar ] , num mov qword ptr [ r14 + hexvar ] , rbx mov qword ptr [ r14 + num ] , rbp mov qword ptr [ r14 + hexvar ] , rbx add rsp , hexvar mov rax , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , num mov edi , dword ptr [ esp + hexvar ] test edi , edi setne byte ptr [ esp + hexvar ] movzx eax , byte ptr [ esp + hexvar ] cmp dword ptr [ esp + hexvar ] , num jne hexvar test al , al jne hexvar sub esp , num push hexvar push num call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , hexvar lea ebp , [ eax + hexvar ] sub esp , num push num push ebp call hexvar add esp , hexvar test eax , eax jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar cmp byte ptr [ esp + hexvar ] , num jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ ebx ] mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , edi mov dword ptr [ esi + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + hexvar ] , edi mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } adds r5 , r0 , num movne r5 , num mov r7 , r1 cmp r1 , num moveq r1 , r5 movne r1 , num cmp r1 , num bne hexvar mov sb , r2 mov r8 , r3 mov r6 , r0 mov r1 , hexvar mov r0 , num bl hexvar subs r4 , r0 , num beq hexvar mvn r3 , num str r3 , [ r4 , hexvar ] add sl , r4 , hexvar mov r1 , num mov r0 , sl bl hexvar cmp r0 , num bne hexvar cmp r8 , num moveq r5 , num cmp r5 , num bne hexvar cmp sb , num beq hexvar ldr r3 , [ pc , hexvar ] str r3 , [ r4 , hexvar ] str r7 , [ r4 , num ] mov r3 , num str r3 , [ r4 , hexvar ] str r6 , [ r4 , hexvar ] mov r3 , num str r3 , [ r4 , hexvar ] str r7 , [ r4 , num ] str r6 , [ r4 , hexvar ] mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , ip
push ebp push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] test esi , esi setne byte ptr [ esp + hexvar ] test ecx , ecx movzx eax , byte ptr [ esp + hexvar ] jne hexvar test al , al jne hexvar sub esp , num push hexvar push num call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar lea ebp , [ eax + hexvar ] sub esp , num mov dword ptr [ eax + hexvar ] , hexvar push num push ebp call hexvar add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar cmp byte ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push esi push dword ptr [ esp + hexvar ] push eax mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebx ] mov dword ptr [ edi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + hexvar ] , num mov dword ptr [ edi + hexvar ] , esi mov dword ptr [ edi + hexvar ] , num mov dword ptr [ edi + hexvar ] , esi mov dword ptr [ edi + num ] , eax add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push r15 push r14 mov r15d , edx push r13 push r12 mov r13d , ecx push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , hexvar test rdi , rdi setne r12b test rsi , rsi jne hexvar test r12b , r12b jne hexvar mov esi , hexvar mov edi , num call hexvar test rax , rax mov r14 , rax je hexvar mov dword ptr [ rax + hexvar ] , hexvar lea rax , [ rax + hexvar ] xor esi , esi mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar test eax , eax jne hexvar test r13d , r13d je hexvar test r12b , r12b je hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rsi , rbp mov rdx , rbx mov rdi , rax call hexvar mov rbp , rax jmp hexvar nop dword ptr [ rax ] test r15d , r15d je hexvar mov rax , qword ptr [ rip ] mov qword ptr [ r14 + hexvar ] , rbp mov qword ptr [ r14 + hexvar ] , rax mov dword ptr [ r14 + hexvar ] , num mov qword ptr [ r14 + hexvar ] , rbx mov qword ptr [ r14 + num ] , rbp mov qword ptr [ r14 + hexvar ] , rbx add rsp , hexvar mov rax , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 mov r15d , edx push r13 push r12 mov r13d , ecx push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , hexvar test rdi , rdi setne r12b test rsi , rsi jne hexvar test r12b , r12b jne hexvar mov esi , hexvar mov edi , num call hexvar test rax , rax mov r14 , rax je hexvar mov dword ptr [ rax + hexvar ] , hexvar lea rax , [ rax + hexvar ] xor esi , esi mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar test eax , eax jne hexvar test r13d , r13d je hexvar test r12b , r12b je hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rsi , rbp mov rdx , rbx mov rdi , rax call hexvar mov rbp , rax jmp hexvar nop dword ptr [ rax ] test r15d , r15d je hexvar mov rax , qword ptr [ rip ] mov qword ptr [ r14 + hexvar ] , rbp mov qword ptr [ r14 + hexvar ] , rax mov dword ptr [ r14 + hexvar ] , num mov qword ptr [ r14 + hexvar ] , rbx mov qword ptr [ r14 + num ] , rbp mov qword ptr [ r14 + hexvar ] , rbx add rsp , hexvar mov rax , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ num ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx mov esi , hexvar call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jae hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar nop add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jae hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar nop add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 lw v0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jae hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar nop add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 lw v0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jae hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar nop add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar movabs rdi , hexvar mov esi , hexvar call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] cmp eax , dword ptr [ rcx + hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx cmp qword ptr [ rax + rdx * num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx mov rdi , qword ptr [ rax + rdx * num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] cmp eax , dword ptr [ rcx + hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx mov rax , qword ptr [ rax + rdx * num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ rbp - hexvar ] sub eax , num sub ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 lw v0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 lw v0 , hexvar ( a0 ) beqz a1 , hexvar lw s1 , hexvar ( v0 )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ ebp + hexvar ] push edx push eax call hexvar add esp , hexvar test eax , eax jns hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jns hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , num leave ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ ebp + hexvar ] push edx push eax call hexvar add esp , hexvar test eax , eax jns hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , num call hexvar add ebx , hexvar push edi push dword ptr [ edi + num ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax js hexvar sub esp , num add esi , hexvar push edi push esi call hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi ret
push rbp push rbx mov rbp , rsi mov rbx , rdi mov rdx , rbp sub rsp , num mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] call hexvar test eax , eax js hexvar lea rdi , [ rbx + hexvar ] mov rsi , rbp call hexvar xor eax , eax add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ ebp + hexvar ] push edx push eax call hexvar add esp , hexvar test eax , eax jns hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jns hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , num leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) move a2 , s0 sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a1 , num ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw a2 , hexvar ( fp ) move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) bgez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar lw a1 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax jns hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov eax , num leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a1 , zero sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , zero lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , hexvar lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move a1 , zero move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov r1 , num push { r4 , lr } mov r0 , r1 bl hexvar subs r4 , r0 , num beq hexvar mov r0 , r4 pop { r4 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a1 , zero sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , zero lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , hexvar lw v0 , ( v0 )
push rbx xor esi , esi xor edi , edi call hexvar test rax , rax mov rbx , rax je hexvar mov rax , rbx pop rbx ret
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push num push num call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push rbx xor esi , esi xor edi , edi call hexvar test rax , rax mov rbx , rax je hexvar mov rax , rbx pop rbx ret
push rbx mov esi , num mov edi , num call hexvar mov rbx , rax test rax , rax je hexvar mov rax , rbx pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move a1 , zero move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) move s2 , a0 sw gp , hexvar ( sp ) move a0 , a1 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s2 , hexvar addiu a2 , zero , - num lw s2 , ( s2 ) slti s0 , s3 , num lw t9 , - hexvar ( gp ) movz a2 , s3 , s0 move s1 , v0 move a0 , s2 jalr t9 move s0 , a2 addiu s0 , s0 , num move s3 , v0 slt v0 , s0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) addiu s0 , s0 , num beq s3 , s0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s0 jalr t9 move a0 , s2 move a1 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( v0 ) bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu s0 , zero , - num lw s3 , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu s0 , zero , - num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar test edi , edi je hexvar mov edi , dword ptr [ edi ] test ebp , ebp mov esi , eax mov eax , hexvar cmovs ebp , eax sub esp , hexvar push edi add ebp , num call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar cmp eax , ebp jg hexvar jmp hexvar lea esi , [ esi ] add ebp , num cmp dword ptr [ esp + hexvar ] , ebp je hexvar sub esp , num push ebp push edi call hexvar pop edx pop ecx push esi push dword ptr [ eax ] call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , esi pop ebx pop esi pop edi jmp hexvar lea esi , [ esi ] pop ebx mov eax , hexvar pop esi pop edi ret
push rbp push r15 push r14 push rbx push rax mov ebx , edx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar test rbp , rbp je hexvar mov r14 , rax cmp ebx , - num mov eax , hexvar cmovle ebx , eax mov r15 , qword ptr [ rbp ] mov rdi , r15 call hexvar mov ebp , eax nop dword ptr [ rax ] add ebx , num cmp ebx , ebp jge hexvar mov rdi , r15 mov esi , ebx call hexvar mov rdi , qword ptr [ rax ] mov rsi , r14 call hexvar test eax , eax jne hexvar jmp hexvar mov ebx , hexvar jmp hexvar mov ebx , hexvar mov eax , ebx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) move s2 , a0 sw gp , hexvar ( sp ) move a0 , a1 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s2 , hexvar addiu a2 , zero , - num lw s2 , ( s2 ) slti s0 , s3 , num lw t9 , - hexvar ( gp ) movz a2 , s3 , s0 move s1 , v0 move a0 , s2 jalr t9 move s0 , a2 addiu s0 , s0 , num move s3 , v0 slt v0 , s0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) addiu s0 , s0 , num beq s3 , s0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s0 jalr t9 move a0 , s2 move a1 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( v0 ) bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu s0 , zero , - num lw s3 , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu s0 , zero , - num
push rbp push r15 push r14 push rbx push rax mov ebx , edx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar test rbp , rbp je hexvar mov r14 , rax cmp ebx , - num mov eax , hexvar cmovle ebx , eax mov r15 , qword ptr [ rbp ] mov rdi , r15 call hexvar mov ebp , eax nop dword ptr [ rax ] add ebx , num cmp ebx , ebp jge hexvar mov rdi , r15 mov esi , ebx call hexvar mov rdi , qword ptr [ rax ] mov rsi , r14 call hexvar test eax , eax jne hexvar jmp hexvar mov ebx , hexvar jmp hexvar mov ebx , hexvar mov eax , ebx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov ebp , edx mov rbx , rdi mov edi , esi call hexvar mov qword ptr [ rsp + num ] , rax mov ecx , hexvar mov r14d , hexvar jmp hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , rbx mov edx , ebp call hexvar mov ecx , hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , r14d jmp hexvar nop dword ptr [ rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov ebp , edx mov rbx , rdi mov edi , esi call hexvar mov qword ptr [ rsp + num ] , rax mov ecx , hexvar mov r14d , hexvar jmp hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , rbx mov edx , ebp call hexvar mov ecx , hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov eax , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , r14d jmp hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r15 push r14 push rbx push rax mov ebx , edx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar test rbp , rbp je hexvar mov r14 , rax cmp ebx , - num mov eax , hexvar cmovle ebx , eax mov r15 , qword ptr [ rbp ] mov rdi , r15 call hexvar mov ebp , eax nop dword ptr [ rax ] add ebx , num cmp ebx , ebp jge hexvar mov rdi , r15 mov esi , ebx call hexvar mov rdi , qword ptr [ rax ]
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , esi xor esi , esi mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , ecx test edx , edx je hexvar mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar push eax push ebp push ecx push edi call edx add esp , hexvar mov esi , eax mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , esi xor esi , esi mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , ecx test edx , edx je hexvar mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar push eax push ebp push ecx push edi call edx add esp , hexvar mov esi , eax mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , esi xor esi , esi mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , ecx test edx , edx je hexvar mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar push eax push ebp push ecx push edi call edx add esp , hexvar mov esi , eax mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax mov ebx , eax mov eax , ebx add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax mov ebx , eax mov eax , ebx add rsp , hexvar pop rbx ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov esi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , esi xor esi , esi mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar push eax push edi push dword ptr [ esp + hexvar ] push ecx call edx mov esi , eax add esp , hexvar mov eax , esi mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax mov ebx , eax mov eax , ebx add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax mov ebx , eax mov eax , ebx add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax mov ebx , eax mov eax , ebx add rsp , hexvar pop rbx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r1 , r2 , r3 } push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] add r3 , fp , num str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , lr } add sp , sp , hexvar bx lr andeq r1 , r3 , r8 , lsl num
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , sp , hexvar sw s0 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a2 , v0 sw a3 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jal hexvar nop lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) addiu a2 , sp , hexvar sw a2 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rbp - hexvar ] , xmm0 movaps xmmword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movaps xmmword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm4 movaps xmmword ptr [ rbp - hexvar ] , xmm5 movaps xmmword ptr [ rbp - hexvar ] , xmm6 movaps xmmword ptr [ rbp - hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar lea rax , [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx lea eax , [ ebp - num ] lea ecx , [ ebp + hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
adds r3 , r0 , num movne r3 , num cmp r1 , num movne r3 , num cmp r3 , num push { r4 , lr } bne hexvar mov r4 , r1 bl hexvar adds r4 , r4 , num movne r4 , num cmp r0 , num movne r4 , num cmp r4 , num popeq { r4 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar cmp dword ptr [ ebp + num ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test esi , esi jne hexvar test eax , eax jne hexvar sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi jne hexvar add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] test edx , edx setne bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] test edx , edx setne bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] test rsi , rsi setne al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar call hexvar nop word ptr cs : [ eax + eax ] nop
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rbp - num ] mov esi , ecx mov edi , eax mov eax , num call hexvar call hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , v0 move a1 , s1 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar call hexvar nop word ptr cs : [ eax + eax ] nop
ldr r3 , [ pc , hexvar ] push { r4 , lr } mov r5 , r0 mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar mov r1 , r5 mov r2 , r0 mov r0 , r4 bl hexvar bl hexvar andeq r8 , r5 , r8 , ror r5 andeq r5 , r4 , ip , lsr num
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar call hexvar nop word ptr cs : [ eax + eax ] nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 lw a1 , hexvar ( fp ) move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , v0 move a1 , s1 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop
push rbx mov ebx , edi mov edx , num mov esi , hexvar mov edi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov rdx , rax mov esi , ebx mov eax , num call hexvar call hexvar
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar call hexvar nop word ptr cs : [ eax + eax ] nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] call hexvar add eax , hexvar mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ esp + num ] lea eax , [ eax - hexvar ] jmp hexvar lea esi , [ esi ] lea edi , [ edi ]
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] lea eax , [ eax - hexvar ] call hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a2 , hexvar ( sp ) move a3 , a1 addiu a2 , zero , - num move a1 , a0 lui a0 , hexvar addiu a0 , a0 , - hexvar jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] sub esp , hexvar lea esi , [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al lea eax , [ hexvar ] mov dword ptr [ hexvar ] , num mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edi mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ esi ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar add esp , hexvar and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp - hexvar ] lea esi , [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ esi ] sub esp , hexvar lea ebx , [ hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , edi call hexvar add esp , hexvar and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , num je hexvar cmp eax , num jb hexvar cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] push eax push dword ptr [ ebp - hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar jmp hexvar nop nop mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , r5 , r6 , lr } cmp r3 , num sub sp , sp , num mov r4 , r2 beq hexvar cmp r3 , num bne hexvar mov r5 , r1 ldr r3 , [ r2 , hexvar ] ldr r6 , [ r3 ] bl hexvar ldr r2 , [ r4 , num ] mov r3 , r6 str r2 , [ sp ] mov r0 , r5 ldr r2 , [ pc , hexvar ] mov r1 , num bl hexvar add sp , sp , num pop { r4 , r5 , r6 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a2 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz a3 , hexvar sw gp , hexvar ( sp ) addiu t0 , zero , num bne a3 , t0 , hexvar lw ra , hexvar ( sp ) lw v0 , hexvar ( a2 ) move s1 , a1 lw t9 , - hexvar ( gp ) jalr t9 lw s2 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a2 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz a3 , hexvar sw gp , hexvar ( sp ) addiu t0 , zero , num bne a3 , t0 , hexvar lw ra , hexvar ( sp ) lw v0 , hexvar ( a2 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov ecx , dword ptr [ rbp - hexvar ] test ecx , ecx mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov esi , hexvar xor ecx , ecx mov r8b , cl mov al , r8b call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rdx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov esi , hexvar xor r8d , r8d mov r9b , r8b mov al , r9b call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx add rsp , hexvar pop rbp ret
test ecx , ecx je hexvar cmp ecx , num jne hexvar push r12 push rbp mov rbp , rsi push rbx mov rax , qword ptr [ rdx + hexvar ] mov rbx , rdx mov r12 , qword ptr [ rax ] call hexvar mov r8 , qword ptr [ rbx + num ] mov rdi , rbp lea rdx , [ rip + hexvar ] pop rbx mov rcx , r12 mov esi , num xor eax , eax pop rbp pop r12 jmp hexvar ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdx + num ] jmp hexvar nop dword ptr [ rax + rax ] nop word ptr cs : [ rax + rax ]
test ecx , ecx je hexvar cmp ecx , num jne hexvar push r12 push rbp mov rbp , rsi push rbx mov rax , qword ptr [ rdx + hexvar ] mov rbx , rdx mov r12 , qword ptr [ rax ] call hexvar mov r8 , qword ptr [ rbx + num ] mov rdi , rbp lea rdx , [ rip + hexvar ] pop rbx mov rcx , r12 mov esi , num xor eax , eax pop rbp pop r12 jmp hexvar ret nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdx + num ] jmp hexvar nop dword ptr [ rax + rax ] nop word ptr cs : [ rax + rax ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar cmp eax , num jb hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar nop nop leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , zero , num beq v0 , v1 , hexvar nop sltiu v1 , v0 , num bnez v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , zero , num beq v0 , v1 , hexvar nop sltiu v1 , v0 , num bnez v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push { r4 , lr } mov r1 , num bl hexvar subs r4 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num popeq { r4 , pc } mov r0 , r4 ldr r1 , [ pc , hexvar ] bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rbp - num ] lea rsi , [ rbp - hexvar ] mov edx , hexvar call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov esi , hexvar lea rdi , [ rbp - hexvar ] call hexvar test eax , eax sete cl movzx eax , cl mov esi , eax mov rsi , qword ptr [ rsi * num + hexvar ] mov cl , num mov byte ptr [ rbp - hexvar ] , cl jmp rsi mov esi , hexvar lea rdi , [ rbp - hexvar ] call hexvar test eax , eax sete cl mov rsi , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rsi mov al , byte ptr [ rbp - hexvar ] not al and al , num mov byte ptr [ rbp - num ] , al mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , zero sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , v0 addiu a1 , a1 , hexvar jalr t9 move s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu a1 , a1 , hexvar lw ra , hexvar ( sp ) sltu v0 , zero , v0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , zero sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , v0 addiu a1 , a1 , - hexvar jalr t9 move s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu a1 , a1 , - hexvar lw ra , hexvar ( sp ) sltu v0 , zero , v0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , zero sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , v0 addiu a1 , a1 , hexvar jalr t9 move s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu a1 , a1 , hexvar lw ra , hexvar ( sp ) sltu v0 , zero , v0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move v0 , zero lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sltu v0 , zero , v0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov byte ptr [ ebp - num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push { r4 , lr } mov r1 , num bl hexvar subs r4 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num popeq { r4 , pc } mov r0 , r4 ldr r1 , [ pc , hexvar ] bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , pc }
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num xor eax , eax test cl , cl jne hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ hexvar ] call hexvar call hexvar movabs rdi , hexvar mov rsi , rax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar xor ecx , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , ecx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ hexvar ] call hexvar call hexvar movabs rdi , hexvar mov rsi , rax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ num ] call hexvar call hexvar movabs rdi , num mov rsi , rax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar xor ecx , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , ecx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ num ] call hexvar call hexvar movabs rdi , num mov rsi , rax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar xor ecx , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , ecx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ num ] call hexvar call hexvar movabs rdi , num mov rsi , rax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ hexvar ] call hexvar call hexvar movabs rdi , hexvar mov rsi , rax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar xor ecx , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , ecx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ hexvar ] call hexvar call hexvar movabs rdi , hexvar mov rsi , rax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar xor ecx , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , ecx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ hexvar ] call hexvar call hexvar movabs rdi , hexvar mov rsi , rax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar xor ecx , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , ecx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ hexvar ] call hexvar call hexvar movabs rdi , hexvar mov rsi , rax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ num ] call hexvar call hexvar movabs rdi , num mov rsi , rax call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar xor ecx , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , ecx add rsp , hexvar pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] push dword ptr [ eax + num ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] push dword ptr [ eax + num ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] push dword ptr [ eax + num ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] push dword ptr [ eax + num ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] push dword ptr [ eax + num ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar move a3 , zero move a2 , zero move a1 , zero sw zero , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar addiu a0 , a0 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( sp ) move a3 , zero move a2 , zero move a1 , zero lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar addiu a2 , zero , hexvar lw gp , hexvar ( sp ) move s0 , v0 move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , v0 , hexvar addiu v0 , zero , num lbu v1 , hexvar ( s0 ) lw a0 , hexvar ( s1 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov r8d , num mov ecx , num mov edx , num mov esi , num mov rdi , rax call hexvar leave ret
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r0 , hexvar bl hexvar mov r2 , hexvar mov r4 , r0 mov r1 , num add r0 , r0 , hexvar bl hexvar mov r1 , num ldr r2 , [ r5 , hexvar ] strb r1 , [ r4 , hexvar ] str r2 , [ r4 ] str r4 , [ r5 , hexvar ] str r1 , [ r4 , num ] str r1 , [ r4 , num ] mov r0 , num pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push num push num push num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar xor esi , esi push hexvar call hexvar lea ecx , [ eax + hexvar ] lea edx , [ eax + hexvar ] xor ebx , ebx mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num and ecx , hexvar sub edx , ecx add edx , hexvar and edx , hexvar mov dword ptr [ ecx + esi ] , ebx add esi , num cmp esi , edx jb hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num add esp , hexvar mov dword ptr [ eax + num ] , num and byte ptr [ eax + hexvar ] , hexvar mov edx , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ eax ] , edx lea esp , [ ebp - num ] mov eax , num pop ebx pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar addiu a2 , zero , hexvar lw gp , hexvar ( sp ) move s0 , v0 move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , v0 , hexvar addiu v0 , zero , num lbu v1 , hexvar ( s0 ) lw a0 , hexvar ( s1 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push num push num push num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( sp ) move a3 , zero move a2 , zero move a1 , zero lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] push ebp call hexvar mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ ecx + hexvar ] , eax movzx eax , byte ptr [ ebp + hexvar ] and eax , num cmp al , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] push ebp call hexvar mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ ecx + hexvar ] , eax movzx eax , byte ptr [ ebp + hexvar ] and eax , num cmp al , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi call hexvar mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp + hexvar ] , eax movzx eax , byte ptr [ rbx + hexvar ] and eax , num cmp al , num je hexvar mov rsi , rbp mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] push ebp call hexvar mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ ecx + hexvar ] , eax movzx eax , byte ptr [ ebp + hexvar ] and eax , num cmp al , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , num call hexvar mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp + hexvar ] , eax movzx eax , byte ptr [ rbx + hexvar ] and eax , num cmp al , num je hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rbx + hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar nop mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] push ebp call hexvar mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ ecx + hexvar ] , eax movzx eax , byte ptr [ ebp + hexvar ] and eax , num cmp al , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] push ebp call hexvar mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ ecx + hexvar ] , eax movzx eax , byte ptr [ ebp + hexvar ] and eax , num add esp , hexvar cmp al , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , num call hexvar mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp + hexvar ] , eax movzx eax , byte ptr [ rbx + hexvar ] and eax , num cmp al , num je hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rbx + hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar nop mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar nop
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , num call hexvar mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp + hexvar ] , eax movzx eax , byte ptr [ rbx + hexvar ] and eax , num cmp al , num je hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rbx + hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar nop mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar nop
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , num call hexvar mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp + hexvar ] , eax movzx eax , byte ptr [ rbx + hexvar ] and eax , num cmp al , num je hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rbx + hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar nop mov rsi , qword ptr [ rbp ] lea rdi , [ rip + hexvar ] mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov qword ptr [ rax + hexvar ] , rbp mov dword ptr [ rbp + hexvar ] , num jmp hexvar nop
lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , s1 , hexvar lw a2 , ( a0 )
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bxeq lr cmp r0 , num push { r4 , lr } mov r4 , r1 beq hexvar ldr r2 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r2 , [ r4 ] ldr r1 , [ pc , hexvar ] mov r0 , num pop { r4 , lr } b hexvar andeq ip , pc , r8 , lsl num andeq r4 , ip , r4 , asr num
call hexvar add ecx , hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ ecx + hexvar ] test ecx , ecx je hexvar jmp hexvar lea esi , [ esi ] ret lea esi , [ esi ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move a1 , v0 lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move a1 , v0 lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar lw ra , hexvar ( sp ) beqz a0 , hexvar move s0 , a1 lw a2 , ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar lw ra , hexvar ( sp ) beqz a0 , hexvar move s0 , a1 lw a2 , ( a0 ) lui a1 , hexvar addiu a1 , a1 , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a2 , ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ ebx + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] lea esi , [ ebx - hexvar ] test eax , eax je hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push esi push num call hexvar add esp , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push esi push num call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar test rdi , rdi push rbx mov rbx , rsi je hexvar mov rdx , qword ptr [ rdi ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar mov rdx , qword ptr [ rbx ] lea rsi , [ rip + hexvar ] mov edi , num pop rbx xor eax , eax jmp hexvar ret nop dword ptr [ rax ] nop word ptr cs : [ rax + rax ]
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar cmp dword ptr [ ebp + num ] , num je hexvar push dword ptr [ ebp + num ] call hexvar add esp , num sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] cmp esi , edx je hexvar test byte ptr [ esi + hexvar ] , hexvar jne hexvar add eax , hexvar cmp esi , eax je hexvar sub esp , hexvar mov edi , dword ptr [ esi + hexvar ] mov ebp , dword ptr [ esi + hexvar ] push dword ptr [ esi ] call hexvar add esp , hexvar cmp dword ptr [ ebx + hexvar ] , eax jge hexvar mov dword ptr [ ebx + hexvar ] , eax add dword ptr [ ebx + hexvar ] , edi mov eax , dword ptr [ esi + hexvar ] adc dword ptr [ ebx + hexvar ] , ebp cmp eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ esi + hexvar ] jb hexvar ja hexvar cmp edx , dword ptr [ ebx + hexvar ] ja hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar lea rax , [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jle hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rip + hexvar ] , eax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar lea edx , [ ebx + hexvar ] lea ecx , [ edx + hexvar ] cmp esi , ecx je hexvar test ah , hexvar jne hexvar lea eax , [ edx + hexvar ] cmp esi , eax je hexvar sub esp , hexvar mov edi , dword ptr [ esi + hexvar ] mov ebp , dword ptr [ esi + hexvar ] push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , dword ptr [ ebx + hexvar ] jle hexvar mov dword ptr [ ebx + hexvar ] , eax add dword ptr [ ebx + hexvar ] , edi mov eax , dword ptr [ esi + hexvar ] adc dword ptr [ ebx + hexvar ] , ebp cmp eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ esi + hexvar ] jb hexvar jbe hexvar mov dword ptr [ ebx + hexvar ] , edx mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar lea edx , [ ebx + hexvar ] lea ecx , [ edx + hexvar ] cmp esi , ecx je hexvar test ah , hexvar jne hexvar lea eax , [ edx + hexvar ] cmp esi , eax je hexvar sub esp , hexvar mov edi , dword ptr [ esi + hexvar ] mov ebp , dword ptr [ esi + hexvar ] push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , dword ptr [ ebx + hexvar ] jle hexvar mov dword ptr [ ebx + hexvar ] , eax add dword ptr [ ebx + hexvar ] , edi mov eax , dword ptr [ esi + hexvar ] adc dword ptr [ ebx + hexvar ] , ebp cmp eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ esi + hexvar ] jb hexvar jbe hexvar mov dword ptr [ ebx + hexvar ] , edx mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push edi push esi push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp edx , eax je hexvar test byte ptr [ edx + hexvar ] , hexvar jne hexvar lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp edx , eax je hexvar mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov edi , dword ptr [ edx ] mov ecx , hexvar mov eax , num repne scasb al , byte ptr es : [ edi ] mov esi , ecx not esi mov ecx , esi sub ecx , num cmp dword ptr [ ebx + hexvar ] , ecx jge hexvar mov dword ptr [ ebx + hexvar ] , ecx mov esi , dword ptr [ esp ] mov edi , dword ptr [ esp + num ] add dword ptr [ ebx + hexvar ] , esi adc dword ptr [ ebx + hexvar ] , edi mov ecx , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + hexvar ] cmp eax , dword ptr [ ebx + hexvar ] jb hexvar ja hexvar cmp ecx , dword ptr [ ebx + hexvar ] jbe hexvar mov dword ptr [ ebx + hexvar ] , ecx mov dword ptr [ ebx + hexvar ] , eax add esp , num pop ebx pop esi pop edi ret
lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar test byte ptr [ rsi + hexvar ] , hexvar jne hexvar sub rax , hexvar cmp rsi , rax je hexvar push rbp push rbx mov rbx , rsi sub rsp , num mov rdi , qword ptr [ rsi ] mov rbp , qword ptr [ rsi + hexvar ] call hexvar cmp dword ptr [ rip + hexvar ] , eax jge hexvar mov dword ptr [ rip + hexvar ] , eax add qword ptr [ rip + hexvar ] , rbp mov rax , qword ptr [ rbx + hexvar ] cmp rax , qword ptr [ rip + hexvar ] jbe hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num pop rbx pop rbp ret
push edi push esi push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp edx , eax je hexvar test byte ptr [ edx + hexvar ] , hexvar jne hexvar lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp edx , eax je hexvar mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov edi , dword ptr [ edx ] mov ecx , hexvar mov eax , num repne scasb al , byte ptr es : [ edi ] mov esi , ecx not esi mov ecx , esi sub ecx , num cmp dword ptr [ ebx + hexvar ] , ecx jge hexvar mov dword ptr [ ebx + hexvar ] , ecx mov esi , dword ptr [ esp ] mov edi , dword ptr [ esp + num ] add dword ptr [ ebx + hexvar ] , esi adc dword ptr [ ebx + hexvar ] , edi mov ecx , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + hexvar ] cmp eax , dword ptr [ ebx + hexvar ] jb hexvar ja hexvar cmp ecx , dword ptr [ ebx + hexvar ] jbe hexvar mov dword ptr [ ebx + hexvar ] , ecx mov dword ptr [ ebx + hexvar ] , eax add esp , num pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) addiu v1 , v0 , hexvar sw s0 , hexvar ( sp ) beq a1 , v1 , hexvar sw gp , hexvar ( sp ) lw v1 , hexvar ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar lw v0 , - hexvar ( gp ) addiu v0 , v0 , hexvar beq a1 , v0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a1 )
mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdi , qword ptr [ rax ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] test eax , eax jle hexvar or dword ptr [ rdi + hexvar ] , hexvar call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx xor edx , edx call hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , num pop rbx jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , qword ptr [ rip + hexvar ] mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax mov rcx , rbx xor eax , eax mov esi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar pop rbx ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push esi push edx push eax call hexvar add esp , hexvar call hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jle hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebx + hexvar ] or dh , hexvar mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num push num push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , num sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] ldr r0 , [ r4 , num ] cmp r0 , num beq hexvar ldr r0 , [ r0 ] bl hexvar mov r5 , r0 ldr r3 , [ pc , hexvar ] ldr r0 , [ r4 , num ] ldr r3 , [ r3 ] cmp r3 , num ldrgt r3 , [ r0 , hexvar ] orrgt r3 , r3 , hexvar strgt r3 , [ r0 , hexvar ] bl hexvar ldr r1 , [ r4 , num ] mov r0 , r5 mov r2 , num bl hexvar mov r3 , num mov r0 , r5 str r3 , [ r4 , num ] pop { r4 , r5 , r6 , lr } b hexvar ldr r3 , [ pc , hexvar ] mov r2 , num ldr r1 , [ pc , hexvar ] ldr r4 , [ r3 ] bl hexvar ldr r3 , [ pc , hexvar ] mov r2 , r0 ldr r3 , [ r3 ] mov r0 , r4 mov r1 , num bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num popne { r4 , r5 , r6 , pc } mov r0 , num bl hexvar muleq pc , r4 , r1 stmdbvs r3 , { r2 , r3 , r5 , r7 , r8 , sl , fp , sp } ^ andeq r0 , r0 , r0
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( v0 ) lw gp , hexvar ( sp ) move s1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) blez v0 , hexvar lw a0 , hexvar ( s0 ) lw v0 , hexvar ( a0 ) lui v1 , hexvar or v0 , v0 , v1 sw v0 , hexvar ( a0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lui v0 , hexvar lw gp , hexvar ( sp ) move a2 , zero move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar lw a1 , hexvar ( v0 ) move a0 , s1 lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) sw zero , hexvar ( s0 ) lw t9 , - hexvar ( gp ) lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar move a0 , zero jalr t9 lw s0 , ( v0 ) addiu a1 , zero , num lw gp , hexvar ( sp ) move a2 , v0 move a0 , s0 lw v0 , - hexvar ( gp )
mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdi , qword ptr [ rax ] call hexvar mov rbx , rax mov eax , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] test eax , eax jle hexvar or dword ptr [ rdi + hexvar ] , hexvar call hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , rbx xor edx , edx call hexvar mov rdi , rbx mov qword ptr [ rip + hexvar ] , num pop rbx jmp hexvar nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , qword ptr [ rip + hexvar ] mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax mov rcx , rbx xor eax , eax mov esi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar pop rbx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ eax ] call hexvar mov esi , eax add esp , hexvar lea eax , [ ebx + hexvar ] cmp dword ptr [ eax ] , num jle hexvar mov eax , dword ptr [ ebx + hexvar ] or dword ptr [ eax + hexvar ] , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar push num push dword ptr [ ebx + hexvar ] push esi call hexvar mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ esp ] , esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw a0 , ( v0 ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) blez v0 , hexvar lui v0 , hexvar lw v1 , - hexvar ( v0 ) lw v0 , hexvar ( v1 ) ori v0 , v0 , hexvar sw v0 , hexvar ( v1 ) lui s1 , hexvar lw a0 , - hexvar ( s1 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a2 , zero lui v0 , hexvar lw a1 , - hexvar ( v0 ) move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sw zero , - hexvar ( s1 ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ eax ] call hexvar mov esi , eax lea eax , [ ebx + hexvar ] add esp , hexvar mov eax , dword ptr [ eax ] test eax , eax mov eax , dword ptr [ ebx + hexvar ] jle hexvar or dword ptr [ eax + hexvar ] , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar push num push dword ptr [ ebx + hexvar ] push esi call hexvar mov dword ptr [ esp ] , esi mov dword ptr [ ebx + hexvar ] , num call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw a0 , ( v0 ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) blez v0 , hexvar lui v0 , hexvar lw v1 , - hexvar ( v0 ) lw v0 , hexvar ( v1 ) lui a0 , hexvar or v0 , v0 , a0 sw v0 , hexvar ( v1 ) lui s1 , hexvar lw a0 , - hexvar ( s1 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a2 , zero lui v0 , hexvar lw a1 , - hexvar ( v0 ) move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sw zero , - hexvar ( s1 ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a2 , v0 move a1 , v1 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) blez v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v0 , hexvar ( v0 ) ext v0 , v0 , num , hexvar lui v1 , hexvar lw v1 , - hexvar ( v1 ) ori a0 , v0 , hexvar lw v0 , hexvar ( v1 ) ins v0 , a0 , num , hexvar sw v0 , hexvar ( v1 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a2 , zero move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rip + hexvar ] , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop leave ret
