push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov edi , eax add esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , num mov rdi , rax mov rsi , rax movabs rdx , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) beqz a0 , hexvar sw a1 , hexvar ( sp ) lw v0 , ( a0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num jbe hexvar mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num test byte ptr [ ebp - num ] , num je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar xor ecx , ecx mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , s1 , - hexvar lw t9 , - hexvar ( gp ) ori v1 , zero , hexvar sltu v0 , v0 , v1 bnez v0 , hexvar addiu a2 , zero , num lui a1 , hexvar move a0 , zero addiu a1 , a1 , hexvar jalr t9 lui s0 , hexvar addiu a3 , zero , hexvar lw gp , hexvar ( sp ) addiu a0 , s0 , hexvar addiu a2 , zero , num sw s1 , hexvar ( sp ) addiu a1 , zero , hexvar lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar bsr rax , qword ptr [ rbp - num ] xor rax , hexvar jmp hexvar mov eax , hexvar pop rbp ret
push ebp mov ebp , esp push eax mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ hexvar ] , num jmp hexvar cmp dword ptr [ hexvar ] , num jne hexvar mov dword ptr [ hexvar ] , num jmp hexvar add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , rax mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] sub rax , rcx seta dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] xor esi , esi mov dl , sil mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , dl jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax - num ] sub cl , hexvar sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dl , num mov byte ptr [ rbp - hexvar ] , cl mov byte ptr [ rbp - hexvar ] , dl jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax - num ] sub cl , hexvar sete dl mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , cl mov byte ptr [ rbp - hexvar ] , dl jmp rax mov al , byte ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp rcx mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov edx , ecx mov ecx , edx and ecx , num mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , - num mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rax - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax add rsp , hexvar pop rbp ret
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rsi ] mov rcx , qword ptr [ rcx + hexvar ] mov rdx , rax sub rdx , rcx xor esi , esi test rdx , rdx setg sil xor edx , edx cmp rax , rcx lea eax , [ rsi + rsi - num ] cmove eax , edx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ eax + num ] push edx call dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ esi + num ] , eax jbe hexvar mov edx , dword ptr [ esi ] add esp , num pop ebx pop esi lea eax , [ edx + eax * num ] ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r6 , [ pc , hexvar ] ldrb r3 , [ r2 ] mov r5 , r2 ldr r2 , [ r6 ] sub sp , sp , hexvar cmp r3 , num mov r4 , r0 str r2 , [ sp , hexvar ] strbeq r3 , [ r0 ] beq hexvar ldr sb , [ pc , hexvar ] mov r8 , r1 ldr r7 , [ sb ] cmp r7 , num beq hexvar cmp r7 , num blt hexvar mov r0 , r5 bl hexvar add r0 , r0 , hexvar cmp r0 , hexvar bls hexvar bl hexvar subs r4 , r0 , num beq hexvar str r5 , [ sp , num ] str r8 , [ sp ] ldr r3 , [ pc , hexvar ] mvn r2 , num mov r1 , num mov r0 , r4 bl hexvar mov r0 , r4 ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) ori v1 , zero , hexvar bne v0 , v1 , hexvar move a0 , s0 addiu v0 , zero , hexvar lw v1 , hexvar ( s0 )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
ldr r2 , [ r1 , hexvar ] ldr r3 , [ r0 , hexvar ] cmp r2 , num cmpne r2 , num moveq r2 , num movne r2 , num cmp r3 , num cmpne r3 , num moveq r3 , num movne r3 , num eor ip , r2 , num tst r3 , ip bne hexvar eor r3 , r3 , num tst r2 , r3 beq hexvar mov r0 , num bx lr push { r4 , r5 , r6 , lr } mov r4 , r1 mov r5 , r0 mov r1 , hexvar ldr r0 , [ r4 ] bl hexvar mov r1 , hexvar mov r6 , r0 ldr r0 , [ r5 ] bl hexvar ldr r3 , [ pc , hexvar ] cmp r0 , num movne r1 , r0 moveq r1 , r3 cmp r6 , num movne r0 , r6 moveq r0 , r3 bl hexvar cmp r0 , num popne { r4 , r5 , r6 , pc } strhi r0 , [ sl , - hexvar ] andeq r0 , r0 , r5 , asr r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov ebp , edx cmp dword ptr [ ebx + hexvar ] , num je hexvar call hexvar movzx edx , byte ptr [ ebx + hexvar ] or dl , byte ptr [ ebx + hexvar ] movzx edx , dl or edx , eax jne hexvar mov eax , dword ptr [ ebp + num ] lea esi , [ eax - num ] mov eax , dword ptr [ edi + num ] sub eax , num mov dword ptr [ esp + hexvar ] , eax jne hexvar test esi , esi setne al movzx eax , al neg eax cmp byte ptr [ ebx + hexvar ] , num je hexvar neg eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r5 , r1 ldr r1 , [ pc , hexvar ] bl hexvar mov r1 , r5 mov r0 , r4 bl hexvar pop { r4 , r5 , r6 , pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] lea eax , [ esi + num ] push eax call hexvar mov dword ptr [ esi + hexvar ] , hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar pop ebx pop esi ret
lui gp , hexvar lui a1 , hexvar addiu gp , gp , - hexvar lui a0 , hexvar addiu a3 , zero , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jr t9 addiu a0 , a0 , - hexvar
push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] cmp edx , hexvar ja hexvar mov eax , dword ptr [ ebx + edx * num - hexvar ] add eax , ebx jmp eax mov esi , esi lea edi , [ edi ]
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) bnez a2 , hexvar lw s1 , ( a1 ) lui s0 , hexvar addiu s0 , s0 , - hexvar beqz s1 , hexvar lw t9 , - hexvar ( gp ) move s2 , a0 jalr t9 move a0 , s0 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s3 , v0 move a2 , zero lw gp , hexvar ( sp ) addu v0 , s3 , v0 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 addiu a3 , v0 , num lui a3 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , - num addiu a3 , a3 , - hexvar sw s1 , hexvar ( sp ) addiu a1 , zero , num sw s0 , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move s2 , v0 lw ra , hexvar ( sp ) move v0 , s2 lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui s0 , hexvar b hexvar addiu s0 , s0 , hexvar b hexvar move s2 , zero
beqz a0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov edi , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar cmp rcx , rdx mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , rax mov ecx , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jg hexvar mov qword ptr [ rbp - hexvar ] , num call hexvar cmp dword ptr [ rax ] , num je hexvar jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar nop leave ret
ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar cmp r1 , num beq hexvar cmp r1 , hexvar beq hexvar cmp r1 , num beq hexvar add r0 , r0 , num bx lr cmp r0 , num subne r0 , r0 , num bx lr bic r0 , r0 , num add r0 , r0 , num bx lr mov r0 , r3 bx lr andeq r8 , r2 , ip , ror r1
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , hexvar cmp rdx , rax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov esi , num mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov edi , hexvar mov esi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov ecx , dword ptr [ rbp - hexvar ] sub ecx , eax setge dl movzx eax , dl mov esi , eax mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rsi call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov ecx , dword ptr [ rip + hexvar ] add ecx , num mov dword ptr [ rip + hexvar ] , ecx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add rsp , hexvar pop rbp ret
test rdi , rdi je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , hexvar xor eax , eax ret
push { r4 , lr } mov r4 , r0 ldr r0 , [ r0 , num ] bl hexvar ldr r0 , [ r4 , hexvar ] bl hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num popeq { r4 , pc }
push rbp push r15 push r14 push rbx push rax mov ebp , edx mov r15 , rsi mov r14 , rdi cmp edx , num je hexvar test ebp , ebp jne hexvar mov edi , hexvar call hexvar mov qword ptr [ r14 + num ] , rax test rax , rax je hexvar mov rbx , rax mov rdi , r15 call hexvar mov rdi , rbx mov rsi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ r14 + num ] mov rbx , qword ptr [ rax + num ] mov rdi , r15 call hexvar mov rdi , rbx mov rsi , rax call hexvar test eax , eax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , qword ptr [ r15 + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r14 + num ] , rax test rax , rax je hexvar mov dword ptr [ r14 ] , ebp mov eax , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar mov byte ptr [ hexvar ] , num cmp dword ptr [ ebp - num ] , - num jne hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + hexvar ] lea ecx , [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push eax push ecx push edx push hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub dword ptr [ esp + hexvar ] , hexvar add dword ptr [ esp + hexvar ] , hexvar add dword ptr [ esp + hexvar ] , hexvar cmp dword ptr [ esp + hexvar ] , hexvar ja hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + hexvar ] lea ecx , [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push eax push ecx push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , ebp test ebp , ebp je hexvar cmp dword ptr [ edi + hexvar ] , num je hexvar mov dword ptr [ esi + num ] , hexvar sub esp , hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar lea edx , [ eax + num ] test eax , eax cmovns edx , eax sar edx , num lea eax , [ edx + num ] add eax , num cmp dword ptr [ esi ] , eax jge hexvar push hexvar lea edx , [ ebx - hexvar ] push edx push eax push dword ptr [ esi + num ] call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + num ] , eax sub esp , num push dword ptr [ esi + num ] push edi call hexvar mov dword ptr [ esi ] , eax add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , esi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ eax ] , num mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] test edx , edx jne hexvar sub esp , hexvar mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esi + num ] push num push ebp push edi push hexvar push esi call dword ptr [ eax + hexvar ] add esp , hexvar cmp eax , - num mov edx , dword ptr [ esi + hexvar ] je hexvar mov dword ptr [ edx + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] mov r3 , hexvar str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 bhs hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar ldr r2 , [ sp , hexvar ] add r2 , r2 , hexvar ldr r1 , [ sp , hexvar ] ldr r1 , [ r1 , num ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , r0 ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] sub r3 , r2 , r3 str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r3 , r2 , r3 str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r3 , r2 , r3 str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 bhs hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 bhs hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar test rsi , rsi je hexvar mov eax , num test byte ptr [ rsi + hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov edi , dword ptr [ rax + hexvar ] call hexvar ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop dword ptr [ eax ]
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num setne dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al mov esp , ebp pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , v0 , num sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) sll v1 , v0 , num addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v1 , hexvar ( sp ) lw v0 , hexvar ( sp ) slt v0 , v0 , v1 beqz v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) b hexvar nop nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s3 , hexvar ( sp ) addiu a1 , zero , hexvar sw s0 , hexvar ( sp ) move s3 , a2 sw gp , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a0 , zero , hexvar jalr t9 move s1 , v0 subu a1 , s1 , s0 lw gp , hexvar ( sp ) move a0 , s0 move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 addiu s1 , s1 , num lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) sw v0 , num ( s0 )
push r15 push r14 push r13 push r12 mov r13 , rsi push rbp push rbx mov r12 , rdi mov rbp , rdx mov ebx , ecx sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] mov rdx , rax mov esi , ebx mov rdi , rbp call hexvar xor edx , edx mov esi , ebx mov rdi , rbp call hexvar test rax , rax jne hexvar xor edx , edx mov rdi , r12 mov rsi , r13 call hexvar mov r12 , rax xor eax , eax test r12 , r12 je hexvar lea r13 , [ rip + hexvar ] mov r14 , r12 nop dword ptr [ rax + rax ] movsx eax , byte ptr [ r14 ] test al , al je hexvar xor r15d , r15d mov rdx , r12 jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar jne hexvar movsx eax , byte ptr [ r14 + num ] lea rsi , [ r14 + num ] test eax , eax mov byte ptr [ rdx - num ] , al mov r14 , rsi cmove r15 , rdx movsx eax , byte ptr [ rsi ] test al , al je hexvar cmp al , hexvar je hexvar add rdx , num cmp eax , hexvar lea rsi , [ r14 + num ] jne hexvar mov byte ptr [ rdx - num ] , num mov r15 , rdx mov r14 , rsi jmp hexvar nop cmp al , hexvar mov byte ptr [ rdx ] , num sete al movzx eax , al add r14 , rax test r15 , r15 cmove r15 , rdx cmp ebx , hexvar jne hexvar mov esi , hexvar mov rdi , r12 call hexvar test rax , rax je hexvar mov rdi , r12 call hexvar mov esi , hexvar mov r15 , rax mov rdi , rax call hexvar mov rcx , r13 mov byte ptr [ rax ] , hexvar mov rdx , r15 mov esi , hexvar mov rdi , rbp call hexvar mov rdi , r15 call hexvar movsx eax , byte ptr [ r14 ] test al , al jne hexvar mov rdi , r12 call hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar sub sp , sp , num ldr r3 , [ r7 ] add r2 , sp , hexvar add r2 , r2 , num mov r4 , r1 mov r1 , num str r3 , [ r2 ] bl hexvar subs r6 , r0 , num blt hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar mov r5 , r0 bl hexvar cmp r5 , num mov r8 , r0 bge hexvar b hexvar mov r2 , r4 add r1 , sp , num mov r0 , r5 bl hexvar cmp r0 , r4 bne hexvar mov r2 , hexvar add r1 , sp , num mov r0 , r6 bl hexvar subs r4 , r0 , num bgt hexvar mov r0 , r6 ldr r6 , [ r8 ] bl hexvar mov r0 , r5 bl hexvar cmp r4 , num mvnne r4 , num strne r6 , [ r8 ] add r3 , sp , hexvar add r3 , r3 , num ldr r2 , [ r3 ] ldr r3 , [ r7 ] mov r0 , r4 cmp r2 , r3 bne hexvar add sp , sp , hexvar add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , hexvar bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] b hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , num ] b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc } ldclt p9 , c9 , [ r2 ] , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] jae hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + edx * num ] shl ecx , num add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] sub eax , num sub ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push r12 push rbp push rbx mov rbp , rdi lea r12 , [ rip + hexvar ] lea rbx , [ rip + hexvar ] test rbx , rbx je hexvar mov rsi , rbp mov rdi , rbx call qword ptr [ rbx + hexvar ] test eax , eax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add r12 , num mov rbx , qword ptr [ r12 ] test rbx , rbx jne hexvar mov ebx , num mov rax , rbx pop rbx pop rbp pop r12 ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] setl cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + rdi * num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) sw s4 , hexvar ( sp ) move s4 , a3 sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) beqz a1 , hexvar lui a3 , hexvar move s2 , a1 lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar addiu a2 , zero , hexvar lw gp , hexvar ( sp ) move a1 , zero move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw v1 , num ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldrb r6 , [ r0 ] sub sp , sp , num tst r6 , hexvar and r6 , r6 , hexvar add r8 , r0 , num and r6 , r6 , hexvar beq hexvar mov r7 , num mov r3 , num ldrb r0 , [ r8 ] , num add r3 , r3 , num and r4 , r0 , hexvar and r4 , r4 , hexvar sub r2 , r3 , hexvar lsl r2 , r4 , r2 rsb ip , r3 , hexvar orr r2 , r2 , r4 , lsr ip orr r2 , r2 , r7 orr r4 , r6 , r4 , lsl r3 tst r0 , hexvar mov r6 , r4 mov r7 , r2 bne hexvar and r1 , r1 , hexvar str r1 , [ sp ] mov r3 , r6 ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r0 , r8 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a1 , zero , num addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltiu v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num lw a1 , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , zero , v0 andi v0 , v0 , hexvar beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) addiu v1 , v0 , num lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v1 , ( v0 )
addiu sp , sp , - hexvar lui gp , hexvar addiu v1 , zero , num sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , hexvar lw a0 , ( a0 ) lw v0 , num ( s0 ) beq a0 , v1 , hexvar sw gp , hexvar ( sp ) slti v1 , a0 , num bnez v1 , hexvar addiu v1 , zero , num beq a0 , v1 , hexvar addiu v1 , zero , num bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw v0 , num ( v0 ) lw ra , hexvar ( sp ) sll a0 , a0 , hexvar ext v0 , v0 , num , hexvar lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra or v0 , a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( v0 )
add esi , num cmp edi , esi ja hexvar xor eax , eax cmp ebp , edi jae hexvar mov edx , edi sub edx , ebp lea ecx , [ edx - num ] cmp ecx , num jbe hexvar lea esi , [ esi ] add ebp , num sub esp , num mov dword ptr [ esp + hexvar ] , ebp push eax lea eax , [ ebx - hexvar ] jmp hexvar nop
push r12 push rbp push rbx mov rbx , rdi mov rbp , rsi lea rsi , [ rdi + hexvar ] call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov eax , dword ptr [ rdx + num ] cmp eax , hexvar ja hexvar lea ecx , [ rax + num ] mov dword ptr [ rdx + num ] , ecx mov eax , eax mov byte ptr [ rdx + rax + hexvar ] , hexvar lea rsi , [ rbp - num ] mov rdi , rbx call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ edx + hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , edi mov edi , esi mov ebp , dword ptr [ esp + hexvar ] or edi , ebp jne hexvar mov esi , num test ecx , ecx je hexvar mov dword ptr [ ecx ] , num jmp hexvar mov edi , dword ptr [ edx + hexvar ] mov ebp , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , ebp mov esi , num cmp dword ptr [ esp + hexvar ] , ebp jb hexvar ja hexvar cmp dword ptr [ esp + num ] , edi jb hexvar mov esi , num mov dword ptr [ esp + hexvar ] , ecx mov ebp , edx mov dword ptr [ esp + hexvar ] , eax mov eax , esi test al , al jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , eax or esi , edx je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] cmp ecx , dword ptr [ eax + hexvar ] jb hexvar ja hexvar cmp edx , dword ptr [ eax + num ] jbe hexvar mov edx , ebp mov eax , dword ptr [ esp + hexvar ] call hexvar mov edi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push edi push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov edx , ebp mov eax , dword ptr [ esp + hexvar ] call hexvar mov esi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push esi push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , num mov esi , num mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi mov eax , num cmovne eax , dword ptr [ esp + num ] mov dword ptr [ edi ] , eax mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
mov ecx , num xor eax , eax nop word ptr [ rax + rax ] cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar add rax , num lea rdx , [ rcx + num ] add rcx , num cmp rcx , hexvar mov rcx , rdx jb hexvar mov eax , hexvar ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push ebp push num lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push eax push edi call hexvar add edi , dword ptr [ esp + hexvar ] mov esi , eax add esp , hexvar xor eax , eax jmp hexvar lea esi , [ esi ] add eax , num cmp eax , hexvar je hexvar mov ecx , eax shl ecx , num mov edx , dword ptr [ ecx + ebx + hexvar ] cmp edx , esi jne hexvar lea ecx , [ ebx + ecx + hexvar ] mov dword ptr [ esp + num ] , edx lea eax , [ ebx - hexvar ] sub esp , num push dword ptr [ ecx + num ] mov dword ptr [ esp + hexvar ] , ecx push eax push num call hexvar mov ecx , dword ptr [ esp + hexvar ] add esp , hexvar mov eax , dword ptr [ ecx + num ] cmp eax , num je hexvar mov edx , dword ptr [ esp + num ] jb hexvar cmp eax , num je hexvar test al , hexvar je hexvar mov dword ptr [ esp + num ] , ecx push ebp push num push dword ptr [ esp + hexvar ] push edi call hexvar mov ecx , dword ptr [ esp + hexvar ] add edi , dword ptr [ esp + hexvar ] add esp , hexvar mov edx , dword ptr [ ecx + num ] and edx , hexvar cmp edx , eax ja hexvar sub esp , num push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ] mov edx , edi mov ecx , ebp mov eax , esi call hexvar mov edi , eax mov eax , edi mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , num lea eax , [ ebp + num ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax jge hexvar xor eax , eax sub eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + num ] , num jne hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovl ecx , eax add ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] ja hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ hexvar ] shl esi , num add edx , esi mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] cmp eax , dword ptr [ ebp - hexvar ] je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov eax , esi call hexvar mov dword ptr [ esp ] , eax mov eax , dword ptr [ esi + hexvar ] mov edi , dword ptr [ eax + hexvar ] test edi , edi je hexvar mov edx , hexvar mov eax , num mov ecx , edx repne scasb al , byte ptr es : [ edi ] mov dword ptr [ esp + num ] , ecx mov ecx , edx mov edi , dword ptr [ esp + hexvar ] repne scasb al , byte ptr es : [ edi ] mov edi , ecx not edi mov dword ptr [ esp + num ] , edi mov ecx , edx mov edi , dword ptr [ esp ] repne scasb al , byte ptr es : [ edi ] mov dword ptr [ esp + hexvar ] , ecx mov ecx , edx mov edi , dword ptr [ esp + hexvar ] repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] sub edx , dword ptr [ esp + hexvar ] sub eax , dword ptr [ esp + hexvar ] lea eax , [ eax + edx + num ] push eax call hexvar mov edi , eax add esp , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jb hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] push dword ptr [ eax + hexvar ] lea eax , [ ebx - hexvar ] push eax push - num push num push edi call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] push dword ptr [ eax + hexvar ] call hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , edi add esp , hexvar test ebp , ebp je hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbx mov rbx , rdi mov rcx , qword ptr [ rdi + hexvar ] cmp rcx , num je hexvar cmp rcx , num je hexvar mov rdx , qword ptr [ rdi + num ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar mov rdi , qword ptr [ rdi + hexvar ] mov esi , num call qword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar mul edx mov esi , edx shr esi , hexvar mov edx , hexvar mov eax , esi mul edx mov edi , edx shr edi , num imul edi , edi , hexvar mov eax , esi sub eax , edi mov edi , eax je hexvar mov edx , hexvar mov eax , esi mul edx shr edx , num imul edx , edx , hexvar sub esi , edx add esi , hexvar cmp edi , hexvar lea r10 , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmovbe r10 , rax mov r9d , hexvar mov eax , ecx mul r9d mov r9d , edx shr r9d , hexvar mov edi , hexvar mov eax , r9d mul edi shr edx , num imul edi , edx , hexvar mov r8d , hexvar mov eax , ecx mul r8d mov r8d , edx mov rdx , qword ptr [ rbx + num ] push rsi push r10 sub r9d , edi shr r8d , hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar add rsp , hexvar mov eax , num jmp hexvar mov r9d , hexvar mov eax , ecx mul r9d mov r9d , edx shr r9d , hexvar mov esi , hexvar mov eax , r9d mul esi shr edx , num imul r11d , edx , hexvar mov r8d , hexvar mov eax , ecx mul r8d mov r8d , edx mov r10 , qword ptr [ rbx + num ] sub rsp , num mov eax , ecx mul esi mov edi , edx shr edi , num mov eax , edi mul esi mov esi , edx shr esi , num imul esi , esi , hexvar sub edi , esi push rdi sub r9d , r11d shr r8d , hexvar mov rdx , r10 lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar add rsp , hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + num ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov eax , num pop rbx ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub ecx , hexvar setb dl movzx esi , dl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp esi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ eax + hexvar ] , ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub eax , hexvar seta cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ eax + hexvar ] , ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rip ] mulsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar cvtss2sd xmm0 , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } subs r4 , r0 , num beq hexvar mov r1 , hexvar bl hexvar subs r5 , r0 , num beq hexvar add r6 , r5 , num sub r3 , r6 , r4 cmp r3 , num ble hexvar mov r2 , num ldr r1 , [ pc , hexvar ] sub r0 , r5 , num bl hexvar cmp r0 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r6 bl hexvar cmp r0 , num movne r4 , r6 ldreq r3 , [ pc , hexvar ] addeq r4 , r5 , num streq r4 , [ r3 ] ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r4 , [ r2 ] str r4 , [ r3 ] pop { r4 , r5 , r6 , pc }
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui s0 , hexvar lw s1 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a0 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) lw v0 , hexvar ( s0 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar nop lw t9 , hexvar ( v0 ) jalr t9 addiu a0 , zero , num lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , hexvar ( sp ) lui s2 , hexvar lw t9 , - hexvar ( gp ) addiu a3 , zero , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , num jalr t9 addiu a0 , zero , num move a1 , s3 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar lw a0 , hexvar ( sp ) addiu a3 , zero , hexvar lw gp , hexvar ( sp ) addiu a2 , s2 , - hexvar addiu a1 , zero , num sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar lw v1 , hexvar ( s0 ) lw t9 , hexvar ( v1 ) jalr t9 addiu a0 , sp , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop b hexvar lw v0 , hexvar ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] add rcx , - hexvar mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] cmp dword ptr [ rcx + num ] , num setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r2 , r0 mov r1 , hexvar add r0 , sp , hexvar bl hexvar cmp r0 , num moveq r0 , num beq hexvar cmp r0 , hexvar movne r0 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp eax , - num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp eax , - num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num add eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ rbp - hexvar ] , ecx cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , - num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rax add rdi , hexvar call hexvar xor ecx , ecx test rax , rax setne cl mov eax , ecx pop rcx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp + hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
cmp edx , num ja hexvar lea r8 , [ rip + hexvar ] mov ecx , edx movsxd rax , dword ptr [ r8 + rcx * num ] add rax , r8 jmp rax nop dword ptr [ rax + rax ] lea rax , [ rip + hexvar ] ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi lea rax , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] lea r12 , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , r12 mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + hexvar ] , rax lea r13 , [ rdi + hexvar ] add rbx , num mov ecx , hexvar jmp hexvar mov ecx , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , r15 mov rdx , r14 call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov qword ptr [ rsp + num ] , rbx mov qword ptr [ rsp + hexvar ] , r12 mov rdi , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] lea rdx , [ rsp + num ] call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar nop dword ptr [ rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar mov ecx , hexvar mov ebp , num jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar mov edx , dword ptr [ rsp + num ] mov rdi , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] mov rsi , r13 call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar cmp dword ptr [ hexvar ] , num mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi jne hexvar mov al , byte ptr [ hexvar ] xor al , num mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov dword ptr [ rip + hexvar ] , num mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rdi cmp qword ptr [ rdx ] , num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar movabs rsi , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov edx , num call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov eax , ecx mov rsp , rbp pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov r12 , rsi mov r14 , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar mov esi , hexvar call hexvar mov rdi , r12 call hexvar mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rdi , r12 call hexvar mov r15d , num test eax , eax jle hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ r14 + hexvar ] mov rdi , r12 mov esi , ebp call hexvar mov rdi , rax call hexvar mov rdi , rbx mov esi , ebp mov rdx , rax call hexvar test rax , rax je hexvar add ebp , num mov rdi , r12 call hexvar cmp ebp , eax jl hexvar jmp hexvar xor r15d , r15d mov eax , r15d pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s2 , hexvar ( sp ) lui s2 , hexvar sw s3 , hexvar ( sp ) sw s5 , hexvar ( sp ) addiu a3 , s1 , hexvar sw s4 , hexvar ( sp ) move s3 , a1 sw s0 , hexvar ( sp ) addiu a1 , s2 , hexvar sw gp , hexvar ( sp ) move s4 , a2 sw ra , hexvar ( sp ) move a2 , a3 lw t9 , - hexvar ( gp ) jalr t9 move s5 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) addiu a0 , s0 , hexvar lw s5 , hexvar ( sp ) move a2 , s4 lw s2 , hexvar ( sp ) move a1 , s3 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 addiu a3 , s1 , hexvar lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , num mov edx , num call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
ldr r3 , [ r0 , num ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ r0 , hexvar ] ldr r0 , [ r3 , hexvar ] lsl r0 , r0 , num bx lr push { r4 , lr } mov r0 , num bl hexvar mvn r0 , num pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + rcx * num ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] xor edx , dword ptr [ rax + rcx * num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + rcx * num ] , edx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar pop rbp ret
push rbp push r14 push rbx mov r14d , edx mov rbp , rsi mov rbx , rdi call hexvar mov dword ptr [ rax ] , num mov rdi , rbx call hexvar test eax , hexvar je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rdi , rbx call hexvar mov eax , hexvar pop rbx pop r14 pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] and cl , num mov byte ptr [ ebp - num ] , cl test byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi je hexvar test byte ptr [ hexvar ] , num jne hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp ] , num call hexvar test byte ptr [ ebp - num ] , num je hexvar mov byte ptr [ hexvar ] , num add esp , hexvar pop esi pop ebp ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp ] , rax mov eax , hexvar mov r14d , hexvar mov ebp , hexvar jmp hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar cmove eax , ebp nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + num ] xor edi , edi mov esi , num call rax mov eax , hexvar jmp hexvar mov rdi , rbx call qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov rax , qword ptr [ rsp ] mov rdi , rbx xor esi , esi call rax mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14d , esi mov r15 , rdi add r15 , num test esi , esi mov eax , hexvar mov ebx , hexvar cmovs ebx , eax mov eax , hexvar mov r13d , hexvar mov r12d , hexvar jmp hexvar call hexvar mov eax , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov qword ptr [ rsp ] , r15 mov rax , qword ptr [ rsp ] mov rdi , qword ptr [ rax ] call hexvar cmp eax , r14d mov eax , hexvar cmovg eax , r12d jmp hexvar mov eax , ebx jmp hexvar mov rax , qword ptr [ rsp ] mov rdi , qword ptr [ rax ] mov esi , r14d call hexvar test rax , rax mov ecx , hexvar mov edx , hexvar cmove ecx , edx mov edx , hexvar jmp hexvar mov edx , hexvar xor ebp , ebp nop dword ptr [ rax + rax ] cmp edx , hexvar jg hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov rbp , qword ptr [ rax + hexvar ] mov edx , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov edx , dword ptr [ rax ] add edx , - num cmp edx , num mov edx , hexvar cmovb edx , r13d jmp hexvar mov edx , ecx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov rax , rbp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar shr dword ptr [ ebp + num ] , num add dword ptr [ ebp - num ] , num cmp dword ptr [ ebp + num ] , hexvar ja hexvar mov eax , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , rdi mov rdi , rsi call hexvar xor ebx , ebx test rax , rax je hexvar cmp qword ptr [ r14 ] , num jne hexvar mov r15 , rax mov rdi , rax call hexvar test eax , eax jle hexvar xor ebp , ebp mov rdi , r15 mov esi , ebp call hexvar mov rbx , qword ptr [ rax + num ] mov r12 , qword ptr [ r14 ] test r12 , r12 jne hexvar call hexvar mov r12 , rax mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax jne hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov eax , hexvar mov r13d , hexvar jmp hexvar nop dword ptr [ rax ] mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar nop dword ptr [ rax ] mov esi , dword ptr [ rax ] mov rdi , r12 mov edx , num call hexvar xor ebx , ebx test eax , eax je hexvar cmp qword ptr [ r13 ] , num je hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar mov ebx , num mov esi , hexvar mov rdi , r15 call hexvar mov eax , ebx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r0 , [ fp , - num ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r5 , r1 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r1 , r5 mov r0 , r4 bl hexvar pop { r4 , r5 , r6 , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r5 , r0 mov r6 , r1 mov sb , r2 mov r7 , r3 ldr r8 , [ r0 , hexvar ] mov r1 , hexvar ldr r0 , [ r0 ] bl hexvar subs r4 , r0 , num beq hexvar mov r3 , num str r3 , [ r4 ] str r6 , [ r4 , num ] strb sb , [ r4 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ r4 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ r4 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ r4 , hexvar ] ldr r3 , [ sp , hexvar ] strb r3 , [ r4 , hexvar ] cmp r7 , num beq hexvar ldrb r3 , [ r7 ] cmp r3 , num bne hexvar mov r3 , num str r3 , [ r4 , num ] cmp r8 , num beq hexvar ldr r3 , [ r8 , num ] ldr r2 , [ r3 , num ] cmp r2 , r6 beq hexvar ldrb r1 , [ r3 , hexvar ] cmp r1 , num beq hexvar mov r0 , hexvar bl hexvar cmp r0 , num beq hexvar str r6 , [ r0 ] ldr r3 , [ r5 , hexvar ] str r3 , [ r0 , num ] str r4 , [ r0 , num ] str r4 , [ r5 , hexvar ] str r0 , [ r5 , hexvar ] ldr r3 , [ r5 , hexvar ] add r3 , r3 , num str r3 , [ r5 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 sbcsne sp , r8 , hexvar
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
mov ip , num str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr lr , [ sp , hexvar ] str ip , [ sp , num ] str ip , [ sp , num ] str lr , [ sp ] bl hexvar add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar lui gp , hexvar sw s4 , hexvar ( sp ) lui s4 , hexvar sw s2 , hexvar ( sp ) lui s2 , hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) addiu s4 , s4 , hexvar sw s6 , hexvar ( sp ) move s0 , zero sw s5 , hexvar ( sp ) addiu s2 , s2 , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) move s5 , a0 sw s3 , hexvar ( sp ) move s6 , a1 sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s6 slt v0 , s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s0 move a0 , s6 jalr t9 move s1 , zero lw gp , hexvar ( sp ) move s3 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s3 move a1 , s1 lw gp , hexvar ( sp ) slt v0 , s1 , v0 move a0 , s3 addiu s1 , s1 , num beqz v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop move a1 , s4 lw gp , hexvar ( sp ) move a0 , s5 lw t9 , - hexvar ( gp ) jalr t9 move s7 , v0 move a1 , s7 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s5 move a1 , s2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s5 b hexvar lw gp , hexvar ( sp ) b hexvar addiu s0 , s0 , num lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov r15d , hexvar mov ebp , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , ebp nop dword ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov qword ptr [ rbx ] , num mov eax , hexvar jmp hexvar test byte ptr [ r14 + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar cmove eax , r15d jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push r12 push rbp push rbx mov r12 , rsi mov rbp , rdx mov ebx , ecx test rdi , rdi je hexvar mov esi , ecx mov r9 , rdi lea r8 , [ rip + hexvar ] mov rcx , - num mov edx , num mov rdi , rbp mov eax , num call hexvar mov esi , ebx sub esi , eax cdqe lea rdi , [ rbp + rax ] mov r9 , r12 lea r8 , [ rip + hexvar ] mov rcx , - num mov edx , num mov eax , num call hexvar mov rax , rbp pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num add qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov esi , eax lea rdi , [ rip + hexvar ] call hexvar test rax , rax jne hexvar jmp hexvar add qword ptr [ rbp - num ] , num call hexvar mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] add rdx , rcx movzx edx , byte ptr [ rdx ] movzx edx , dl add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num call hexvar mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] add rdx , rcx movzx edx , byte ptr [ rdx ] movzx edx , dl add rdx , rdx add rax , rdx movzx eax , word ptr [ rax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
push ebx sub esp , hexvar mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , ebx call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx js hexvar mov ecx , dword ptr [ esp + num ] mov eax , ebx call hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movss dword ptr [ rbp - hexvar ] , xmm3 movaps xmmword ptr [ rbp - hexvar ] , xmm2 movss dword ptr [ rbp - hexvar ] , xmm1 movaps xmmword ptr [ rbp - hexvar ] , xmm0 mov rax , rsp mov rcx , rax add rcx , - hexvar mov rsp , rcx mov rdx , rsp mov rsi , rdx add rsi , - hexvar mov rsp , rsi mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp mov r8 , rdi add r8 , - hexvar mov rsp , r8 mov r9 , rsp add r9 , - hexvar mov rsp , r9 movaps xmm0 , xmmword ptr [ rbp - hexvar ] movlps qword ptr [ rdx - hexvar ] , xmm0 movss xmm1 , dword ptr [ rbp - hexvar ] movss dword ptr [ rdx - num ] , xmm1 mov r10d , dword ptr [ rdx - num ] mov dword ptr [ rax - num ] , r10d mov rdx , qword ptr [ rdx - hexvar ] mov qword ptr [ rax - hexvar ] , rdx movaps xmm2 , xmmword ptr [ rbp - hexvar ] movlps qword ptr [ rdi - hexvar ] , xmm2 movss xmm3 , dword ptr [ rbp - hexvar ] movss dword ptr [ r8 + num ] , xmm3 mov rax , qword ptr [ r8 ] mov qword ptr [ rsi ] , rax mov r10d , dword ptr [ r8 + num ] mov dword ptr [ rsi + num ] , r10d mov rax , qword ptr [ rbp - num ] mov qword ptr [ r9 ] , rax movss xmm4 , dword ptr [ rcx ] mulss xmm4 , dword ptr [ rsi ] mov rdx , qword ptr [ r9 ] movss dword ptr [ rdx ] , xmm4 movss xmm4 , dword ptr [ rcx + num ] mulss xmm4 , dword ptr [ rsi + num ] mov rdx , qword ptr [ r9 ] movss dword ptr [ rdx + num ] , xmm4 movss xmm4 , dword ptr [ rcx + num ] mulss xmm4 , dword ptr [ rsi + num ] mov rcx , qword ptr [ r9 ] movss dword ptr [ rcx + num ] , xmm4 mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rdx mov esi , num cmp qword ptr [ rcx ] , rsi mov qword ptr [ rbp - hexvar ] , rax jne hexvar mov byte ptr [ rbp - num ] , num jmp hexvar call hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , ecx mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdx ] call hexvar and al , num mov rdx , qword ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al mov al , byte ptr [ rdx ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , ecx mov rdx , qword ptr [ rbp - hexvar ] mov sil , byte ptr [ rdx ] mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] and al , num mov byte ptr [ rbp - num ] , al mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al mov rsp , rbp pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v1 , a1 sw s0 , hexvar ( sp ) addiu a2 , zero , hexvar sw ra , hexvar ( sp ) move a1 , zero sw gp , hexvar ( sp ) lw s0 , num ( a0 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v1 lw a1 , num ( s0 ) move v1 , v0 lw a0 , ( s0 ) move v0 , zero lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) sw a1 , hexvar ( v1 )
test byte ptr [ rdi + hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax + hexvar ] lea rcx , [ rdx - num ] cmp rcx , - num ja hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar cmp dword ptr [ rax - num ] , num je hexvar mov eax , num ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r5 , [ pc , hexvar ] ldr r4 , [ r5 , num ] cmp r4 , num beq hexvar mov r7 , num ldr r3 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num str r3 , [ r5 ] str r7 , [ r6 ] bl hexvar ldr r2 , [ r4 ] mov r1 , r0 mov r0 , r7 bl hexvar ldr r3 , [ r5 , num ] ldr r4 , [ r3 , hexvar ] cmp r4 , num popeq { r4 , r5 , r6 , r7 , r8 , pc } rscsle r6 , r4 , hexvar andeq r0 , r0 , r0
push edi push esi mov esi , eax push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar cmp byte ptr [ edx ] , num jne hexvar sub esp , num push edx push esi push num call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi ret
push r12 lea rsi , [ rip + hexvar ] push rbp push rbx mov r12 , rdi call hexvar test rax , rax je hexvar mov rdi , rax mov rbp , rax call hexvar test rax , rax mov rbx , rax je hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbx + rax ] , num mov rdi , rbp call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
movzx eax , byte ptr [ rdi ] sub eax , hexvar cmp al , hexvar ja hexvar movzx eax , al lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax mov eax , num ret
test rsi , rsi je hexvar mov eax , dword ptr [ rsi + num ] cmp eax , num jle hexvar ret cmp dword ptr [ rdi + hexvar ] , hexvar jg hexvar add eax , num mov dword ptr [ rsi + num ] , eax cmp dword ptr [ rsi ] , hexvar ja hexvar push rbp push rbx sub rsp , num mov rbx , rsi mov rbp , rdi mov eax , dword ptr [ rsi ] lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax add dword ptr [ rdi + hexvar ] , num mov eax , dword ptr [ rbp + hexvar ] cmp eax , hexvar jle hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , hexvar lea edi , [ hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebx + hexvar ] sub edi , ebx mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] cmp edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx + hexvar ] add edx , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , - hexvar mov dword ptr [ ebp - hexvar ] , eax movsd xmm0 , qword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax + num ] , xmm0 movsd xmm0 , qword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax ] , xmm0 add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
test rdi , rdi je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rdi + hexvar ] cmp dword ptr [ rdx + num ] , hexvar je hexvar ret nop dword ptr [ rax + rax ] mov edx , dword ptr [ rdx + hexvar ] xor eax , eax test edx , edx sete al ret
cmp r0 , num push { r4 , lr } mov r4 , r1 beq hexvar ldr r2 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r2 , [ r4 ] ldr r1 , [ pc , num ] mov r0 , num pop { r4 , lr } b hexvar andeq sl , sb , ip , ror r3
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s5 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw v0 , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , a0 sw s0 , hexvar ( sp ) addiu a0 , zero , hexvar sw gp , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) addiu a1 , zero , num sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) jalr t9 nop lw a0 , ( s5 ) beqz a0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , zero beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( s0 )
test rdi , rdi je hexvar mov dword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi ] , num movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + num ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 xor eax , eax ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rdi mov qword ptr [ rdx ] , num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] cmp rcx , qword ptr [ rdx ] setl sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rdx , qword ptr [ rax ] mov esi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , num mov qword ptr [ rax ] , rcx jmp hexvar mov rsp , rbp pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax mov dword ptr [ esp + hexvar ] , eax mov ebp , edx mov edi , ecx mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ecx + num ] mov dword ptr [ esp + hexvar ] , eax push ecx lea eax , [ esp + hexvar ] push eax push num push esi call hexvar mov esi , eax mov edx , dword ptr [ esp + hexvar ] lea eax , [ edx - hexvar ] add esp , hexvar cmp eax , num setbe al cmp edx , - num sete cl or eax , ecx xor eax , num mov byte ptr [ esp + num ] , al cmp esi , - num je hexvar mov dword ptr [ esp + num ] , num cmp esi , - num je hexvar cmp dword ptr [ esp + hexvar ] , - num cmovne edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx test ebp , ebp je hexvar cmp byte ptr [ esp + num ] , num jne hexvar push edi lea eax , [ esp + hexvar ] push eax push dword ptr [ ebp ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp dword ptr [ esp + num ] , num jne hexvar add dword ptr [ ebp ] , esi cmp byte ptr [ esp + num ] , num jne hexvar mov eax , esi mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbx sub rsp , hexvar mov rax , qword ptr [ rsp + hexvar ] mov r10 , qword ptr [ rsp + hexvar ] mov r11 , qword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp ] , rbx mov qword ptr [ rsp + num ] , r11 mov qword ptr [ rsp + hexvar ] , r10 mov qword ptr [ rsp + hexvar ] , rax mov al , num call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp eax , - num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp eax , - num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] shl eax , num add eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ rbp - hexvar ] , ecx cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , - num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num lea edx , [ ebx + hexvar ] push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num lea edx , [ ebx + hexvar ] push edx push eax call hexvar add esp , hexvar sub esp , num lea eax , [ ebx + hexvar ] push eax push num call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , num nop add esp , num pop ebx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , - num pop rbp ret
push rax add rdi , hexvar call hexvar xor ecx , ecx test rax , rax setne cl mov eax , ecx pop rcx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov edx , eax mov dword ptr [ esp + hexvar ] , eax add esp , hexvar mov eax , num test edx , edx je hexvar call hexvar sub esp , hexvar push eax call hexvar mov edi , eax mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test edi , edi je hexvar test eax , eax je hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar mov dword ptr [ esp + hexvar ] , num cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax js hexvar push num push hexvar push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , zero move a2 , zero sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a1 , zero , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar move s0 , v0 move a1 , s0 jal hexvar move a0 , v0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push r14 push rbx push rax mov r14 , rdi mov edi , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar test rax , rax jne hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov sb , r2 mov r2 , num ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r7 ] mov r8 , r1 str r2 , [ sb ] mov r1 , num str r3 , [ sp , hexvar ] bl hexvar subs r5 , r0 , num beq hexvar ldr r6 , [ pc , hexvar ] ldr r4 , [ r6 , hexvar ] cmp r4 , num beq hexvar ldr r3 , [ r4 ] cmp r5 , r3 bne hexvar b hexvar ldr r3 , [ r4 ] cmp r3 , r5 beq hexvar ldr r4 , [ r4 , num ] cmp r4 , num bne hexvar mov r0 , hexvar bl hexvar mov sl , num mov r4 , r0 ldr r3 , [ r6 , hexvar ] mov r0 , r5 str r3 , [ r4 , num ] str r5 , [ r4 ] ldr r1 , [ pc , hexvar ] str sl , [ r4 , num ] str r4 , [ r6 , hexvar ] bl hexvar subs r3 , r0 , num beq hexvar mov r2 , num mov r1 , num mov r0 , hexvar str r2 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] str r0 , [ sp , hexvar ] str sl , [ sp , hexvar ] str sl , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] add r0 , sp , hexvar blx r3 cmp r0 , sl bne hexvar mov r3 , num str r3 , [ sb ] ldrb r3 , [ r8 , hexvar ] ldr r2 , [ r6 ] bic r3 , r3 , hexvar orr r3 , r3 , hexvar cmp r2 , sl strb r3 , [ r8 , hexvar ] str r2 , [ r4 , num ] bne hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r7 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } asrlt r8 , ip , hexvar andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push rbx push rax test rdi , rdi je hexvar mov rbx , rdi mov ebp , hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov eax , dword ptr [ rbx ] cmp eax , hexvar ja hexvar bt ebp , eax jae hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , num mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp ret
push rax call hexvar mov rdi , rax call hexvar call hexvar mov rdi , rax call hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar call hexvar mov rdi , rax call hexvar call hexvar mov rdi , rax call hexvar call hexvar mov rdi , rax call hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar call hexvar mov rdi , rax call hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar call hexvar mov rdi , rax call hexvar call hexvar mov rdi , rax call hexvar call hexvar mov rdi , rax call hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar call hexvar mov rdi , rax call hexvar call hexvar mov rdi , rax call hexvar call hexvar mov rdi , rax call hexvar call hexvar mov rdi , rax call hexvar call hexvar mov rdi , rax pop rax jmp hexvar nop dword ptr [ rax ]
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , r14d movabs r15 , hexvar mov qword ptr [ r8 ] , r15 mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx ] mov r8 , qword ptr [ r8 ] mov r9 , qword ptr [ rsi ] mov r12d , dword ptr [ rdi ] sub rsp , hexvar mov rdi , rax mov rsi , rcx mov rcx , r8 mov r8d , hexvar mov dword ptr [ rsp ] , r12d call hexvar add rsp , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r14 pop r15 pop rbp ret
add esi , num cmp edi , esi ja hexvar mov ecx , dword ptr [ esp ] xor eax , eax cmp ecx , edi jae hexvar mov edx , edi sub edx , ecx lea esi , [ edx - num ] cmp esi , num jbe hexvar lea esi , [ esi ] mov ecx , dword ptr [ esp ] sub esp , num add ecx , num mov dword ptr [ esp + hexvar ] , ecx push eax lea eax , [ ebx - hexvar ] jmp hexvar lea esi , [ esi ]
push esi push ebx mov eax , num call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edx , edx je hexvar push edx push esi push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp esi , eax sete al movzx eax , al add esp , num pop ebx pop esi ret
cmp r2 , hexvar push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r2 mov r5 , r1 mov r8 , r3 mov r7 , r0 bhi hexvar mov r6 , hexvar add r3 , r2 , r2 , lsl num lsl r3 , r3 , num add r2 , r3 , hexvar mla r3 , r6 , r1 , r2 ldr r6 , [ r0 , hexvar ] add r6 , r6 , r3 cmp r5 , num beq hexvar cmp r5 , num bne hexvar cmp r4 , hexvar moveq r5 , num beq hexvar tst r4 , num movne r5 , num ldr r0 , [ sp , hexvar ] stm r6 , { r5 , r8 } bl hexvar add r4 , r0 , num mov r1 , r4 mov r0 , r7 bl hexvar mov r2 , r4 ldr r1 , [ sp , hexvar ] bl hexvar str r0 , [ r6 , num ] pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ ebp + eax * num - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + eax * num - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jl hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + eax * num - hexvar ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] sub eax , num sub ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] lea ecx , [ edi - hexvar ] mov dword ptr [ esp + num ] , ecx mov eax , ebx mov edx , esi xor esi , esi or edx , eax mov ebx , num je hexvar lea esi , [ esi ] mov ecx , esi mov eax , num shl eax , cl cdq mov ecx , eax mov eax , dword ptr [ ebp + hexvar ] and ecx , dword ptr [ ebp + num ] and eax , edx or eax , ecx je hexvar test ebx , ebx lea eax , [ edi - hexvar ] cmovne eax , dword ptr [ esp + num ] push dword ptr [ edi + esi * num - hexvar ] mov ebx , edi push eax lea eax , [ edi - hexvar ] push eax push num call hexvar add esp , hexvar xor ebx , ebx add esi , num cmp esi , hexvar jne hexvar jmp hexvar
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor eax , eax mov edx , eax call hexvar test rax , rax setne r8b movzx r9d , r8b mov eax , r9d mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8d , hexvar mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rcx mov rcx , r8 mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] test byte ptr [ edx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar movss xmm0 , dword ptr [ hexvar ] movsd xmm1 , qword ptr [ hexvar ] movaps xmm2 , xmm1 movd xmm3 , dword ptr [ ebp + num ] por xmm3 , xmm2 subsd xmm3 , xmm1 cvtsd2ss xmm1 , xmm3 mov eax , dword ptr [ ebp + hexvar ] divss xmm1 , dword ptr [ eax + num ] movss dword ptr [ ebp - num ] , xmm1 movss xmm1 , dword ptr [ ebp - num ] ucomiss xmm1 , xmm0 jb hexvar mov dword ptr [ ebp - num ] , num jmp hexvar movss xmm0 , dword ptr [ ebp - num ] movss xmm1 , dword ptr [ hexvar ] movaps xmm2 , xmm0 subss xmm2 , xmm1 cvttss2si eax , xmm2 xor eax , hexvar cvttss2si ecx , xmm0 ucomiss xmm1 , xmm0 cmova eax , ecx mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp + num ] , eax mov eax , hexvar cmp eax , dword ptr [ ebp + num ] jae hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] mov r3 , num str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] sub r1 , fp , hexvar sub r0 , fp , hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num blt hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r2 , [ fp , num ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bls hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar mvn r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , num ] add r0 , r2 , r3 ldr r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num mov r2 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar cmp eax , num sete bl mov eax , dword ptr [ ebp + num ] mov bh , bl and bh , num mov byte ptr [ eax + hexvar ] , bh mov eax , dword ptr [ ebp + num ] and bl , num mov byte ptr [ eax + hexvar ] , bl add esp , hexvar pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rip + hexvar ] cmp eax , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax jmp hexvar nop leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ esi ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a1 sw s2 , hexvar ( sp ) addiu a1 , zero , num sw s3 , hexvar ( sp ) move s2 , a2 sw gp , hexvar ( sp ) move a2 , zero sw ra , hexvar ( sp ) move s3 , a0 sw s5 , hexvar ( sp ) move a0 , s2 sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) addiu v1 , zero , - num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) andi v0 , v0 , num beqz v0 , hexvar slti v0 , v0 , num beqz v0 , hexvar lui s1 , hexvar addiu s1 , s1 , hexvar lui t9 , hexvar addiu a1 , zero , hexvar addiu t9 , t9 , hexvar bal hexvar move a0 , zero lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lui a0 , hexvar lw v0 , - hexvar ( a0 ) bnez v0 , hexvar lui a1 , hexvar lui v1 , hexvar lw v0 , - hexvar ( v1 ) addiu a0 , v0 , num sw a0 , - hexvar ( v1 ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( s0 )
push rax mov dword ptr [ rsp + num ] , hexvar mov rdi , qword ptr [ rdi + hexvar ] mov esi , hexvar call hexvar test rax , rax je hexvar lea rcx , [ rsp + num ] mov rdi , rax mov esi , hexvar xor edx , edx call hexvar mov eax , dword ptr [ rsp + num ] pop rcx ret
push rbx mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rbx , rax call hexvar mov esi , dword ptr [ rax ] mov rdx , rbx mov edi , num xor eax , eax call hexvar nop dword ptr [ rax + rax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push r14 push rbx push rax test rdi , rdi je hexvar mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rbx , rsi mov rdi , qword ptr [ rax + hexvar ] call hexvar test rax , rax je hexvar mov r14 , rax mov rdi , rax mov rsi , rbx call hexvar test eax , eax je hexvar mov ebx , eax cmp eax , - num je hexvar cmp ebx , - num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , r14 call hexvar xor eax , eax add rsp , num pop rbx pop r14 ret
mov rax , rdi mov qword ptr [ rdi ] , num mov qword ptr [ rdi + num ] , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , - num ret
push r15 push r14 push rbx mov r15 , rdi call hexvar mov r14 , rax call hexvar mov rbx , rax mov rdi , r15 call hexvar test rax , rax je hexvar mov rdi , rax mov rsi , r14 xor edx , edx call hexvar test eax , eax je hexvar nop word ptr cs : [ rax + rax ] mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar cmp dword ptr [ rbx + num ] , num je hexvar mov rdi , r15 mov rsi , rbx call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar mov rdi , r14 call hexvar mov rdi , r15 pop rbx pop r14 pop r15 jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , rbx call hexvar mov rdi , r14 call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop dword ptr [ eax + eax ]
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rcx , qword ptr [ rbx ] mov qword ptr [ rax ] , rcx mov qword ptr [ rax + num ] , r14 mov qword ptr [ rax + hexvar ] , num add rsp , num pop rbx pop r14 ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test edi , edi je hexvar mov esi , dword ptr [ edi + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , num push hexvar push esi call hexvar mov dword ptr [ esp ] , esi call hexvar mov dword ptr [ edi + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov edx , ecx sub edx , num mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , edx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rdi + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rsi + hexvar ] , num mov rsi , qword ptr [ rbp - num ] movsx ecx , byte ptr [ rsi ] cmp ecx , num mov dword ptr [ rbp - hexvar ] , eax je hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rdi + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 ] mov r1 , r0 mov r2 , sp mov r0 , num str r3 , [ sp , hexvar ] bl hexvar subs r5 , r0 , num movne r0 , num bne hexvar mov r0 , hexvar ldr r6 , [ sp , hexvar ] bl hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] str r6 , [ r0 , num ] strb r5 , [ r0 , hexvar ] strh r2 , [ r0 ] str r3 , [ r0 , num ] str r3 , [ r0 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , num push num push esi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar test edi , edi cmove edi , esi sub esp , num push num push edi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , hexvar mov esi , num pop ebx mov eax , esi pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 ) beqz s0 , hexvar lui a3 , hexvar lw v0 , hexvar ( s0 )
sub r0 , r0 , num cmp r0 , hexvar ldrls pc , [ pc , r0 , lsl num ] b hexvar andeq sl , r6 , r4 , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , r4 , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , ip , lsr num andeq sl , r6 , r4 , lsr num mov r0 , num bx lr mov r0 , num bx lr
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
push edi push esi mov esi , eax push ebx mov eax , dword ptr [ eax + num ] call hexvar add ebx , hexvar cmp eax , dword ptr [ esi + num ] mov dword ptr [ ebx + hexvar ] , num jae hexvar lea edx , [ eax + num ] mov dword ptr [ esi + num ] , edx xor edx , edx movzx eax , byte ptr [ eax ] jmp hexvar nop lea esi , [ esi ] cmp eax , num jne hexvar lea eax , [ edx + num ] test edx , edx mov byte ptr [ ebx + hexvar ] , num cmovs edx , eax sar edx , num lea eax , [ edx * num + num ] mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ esi + num ] cmp eax , dword ptr [ esi + num ] jae hexvar lea edx , [ eax + num ] mov dword ptr [ esi + num ] , edx movzx eax , byte ptr [ eax ] mov edx , dword ptr [ ebx + hexvar ] cmp eax , hexvar jne hexvar add edx , num mov eax , dword ptr [ esi + num ] cmp eax , dword ptr [ esi + num ] mov dword ptr [ ebx + hexvar ] , edx jb hexvar sub esp , hexvar push esi call hexvar add esp , hexvar jmp hexvar mov esi , esi lea edi , [ edi ] mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar mov edi , dword ptr [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , edx movzx ecx , byte ptr [ edi ] test cl , cl je hexvar cmp eax , ecx je hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] movsx edx , byte ptr [ edx ] mov esi , edx sub esi , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov al , num and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax setne al add esp , num movzx eax , al pop ebx pop esi ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + num ] and rdi , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmove edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax ] call hexvar mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rsi + hexvar ] , num mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi ] mov edi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar call hexvar xor esi , esi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , - num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push rbx push rbp push r12 push r13 push r14 push r15 mov r10 , rsp lea rcx , [ rdx - hexvar ] and rsp , hexvar sub rcx , rsp neg rcx and rcx , hexvar sub rsp , rcx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , r10 mov r15 , rdx mov r13d , dword ptr [ r15 + hexvar ] mov eax , dword ptr [ rdi ] mov ebx , dword ptr [ rdi + num ] mov ecx , dword ptr [ rdi + num ] mov edx , dword ptr [ rdi + hexvar ] shl r13d , num lea rbp , [ r15 + r13 ] mov qword ptr [ rsp ] , r15 mov qword ptr [ rsp + num ] , rbp lea r14 , [ rip + hexvar ] lea rbp , [ rsp + hexvar ] sub rbp , r14 and rbp , hexvar lea r14 , [ r14 + rbp ] shr rbp , num add r14 , rbp call hexvar mov r9 , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov dword ptr [ r9 ] , eax mov dword ptr [ r9 + num ] , ebx mov dword ptr [ r9 + num ] , ecx mov dword ptr [ r9 + hexvar ] , edx mov r15 , qword ptr [ rsi ] mov r14 , qword ptr [ rsi + num ] mov r13 , qword ptr [ rsi + hexvar ] mov r12 , qword ptr [ rsi + hexvar ] mov rbp , qword ptr [ rsi + hexvar ] mov rbx , qword ptr [ rsi + hexvar ] lea rsp , [ rsi + hexvar ] ret nop dword ptr [ rax + rax ]
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
mov rdx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rsi + hexvar ] cmp rdx , rcx je hexvar test rdx , rdx mov eax , num je hexvar cmp rdx , hexvar je hexvar test rcx , rcx je hexvar ret nop word ptr [ rax + rax ] mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rax jb hexvar mov eax , num ja hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx ja hexvar jb hexvar xor eax , eax cmp qword ptr [ rdi ] , num jbe hexvar cmp qword ptr [ rsi ] , num jbe hexvar mov rdx , qword ptr [ rdi + hexvar ] movzx ecx , byte ptr [ rdx + num ] mov rdx , qword ptr [ rsi + hexvar ] movsx edx , byte ptr [ rdx + num ] cmp cl , dl je hexvar movsx eax , cl sub eax , edx ret
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
push r12 push rbp push rbx mov r12 , rdi mov rbp , rsi mov rbx , rdx mov rax , qword ptr [ rdi + num ] mov rdi , rdx call qword ptr [ rax + hexvar ] mov qword ptr [ rbp ] , rax lea rdi , [ rbx + num ] mov rax , qword ptr [ r12 + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + num ] , rax lea rdi , [ rbx + num ] mov rax , qword ptr [ r12 + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , rax pop rbx pop rbp pop r12 ret
push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ecx + hexvar ] mov esi , dword ptr [ ebx + hexvar ] cmp edx , num sete al cmp edx , num sete dl or eax , edx cmp esi , num je hexvar cmp esi , num je hexvar mov edx , dword ptr [ ebx + hexvar ] and edx , hexvar test al , al je hexvar cmp edx , hexvar je hexvar mov eax , num pop ebx pop esi ret
addiu sp , sp , - hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 lw s0 , - hexvar ( v0 ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw a0 , ( s0 ) beqz a0 , hexvar move s1 , a1 b hexvar move t9 , s2 lw a0 , ( s0 ) beqz a0 , hexvar lw ra , hexvar ( sp ) move t9 , s2 jalr t9 move a1 , s1 beqz v0 , hexvar addiu s0 , s0 , num addiu s0 , s0 , - num lw ra , hexvar ( sp ) lw v0 , ( s0 ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov ebx , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , eax shr rdx , cl mov rax , rdx and eax , hexvar mov r12d , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , hexvar mov rsi , rdx sub rsi , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , r12d lea rdx , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , rbx and eax , num test rax , rax je hexvar cmp rbx , num jg hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rax ] , hexvar sub dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num add rbx , num cmp rbx , num jle hexvar nop add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] cmp qword ptr [ rsi + num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] add rax , hexvar mov rsi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r14 push r13 push r12 push rbp mov r12d , esi push rbx mov rbx , rdi call hexvar test r12d , hexvar mov r13 , rax jne hexvar mov rbp , qword ptr [ rbx ] mov dword ptr [ rax ] , num test byte ptr [ rbx + hexvar ] , hexvar jne hexvar movzx eax , word ptr [ rbp + hexvar ] cmp ax , num je hexvar cmp ax , num jne hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar cmp r12d , hexvar mov r14d , num jne hexvar or dword ptr [ rbx + hexvar ] , hexvar mov r14d , num cmp qword ptr [ rbp + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar mov eax , dword ptr [ rbx + hexvar ] test al , num je hexvar mov esi , r14d mov rdi , rbx call hexvar mov qword ptr [ rbx + num ] , rax pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r15 push r14 push rbx mov rbx , rdx mov r14 , rsi mov r15 , rdi mov eax , dword ptr [ rip ] test eax , eax jne hexvar mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al enter num , num add byte ptr [ rax ] , al xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al xchg eax , ebx add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al retf
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r2 , [ sp ] ldr r1 , [ sp , num ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] imul eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , num sub eax , num shr eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lbu v1 , num ( v0 ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push r13 push r12 mov r13 , rdi push rbp push rbx sub rsp , num mov rbp , qword ptr [ rdi + num ] lea r12 , [ rbp + hexvar ] nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rbp , num cmp rbp , r12 jne hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop dword ptr [ rax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) addiu a3 , zero , num move a2 , zero jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push r15 push r14 push r12 push rbx sub rsp , hexvar xorps xmm0 , xmm0 movaps xmmword ptr [ rsp ] , xmm0 xor eax , eax test rdx , rdx je hexvar mov rbx , rdi test rdi , rdi je hexvar mov r15 , rcx mov r14 , rdx mov r12 , rsi cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rax , qword ptr [ rbx + hexvar ] and eax , hexvar mov edx , hexvar sub rdx , rax cmp rdx , hexvar ja hexvar mov rsi , rsp mov rdi , rbx call hexvar test eax , eax jne hexvar mov dword ptr [ rbx + hexvar ] , num mov rdi , rbx mov rsi , r12 mov rdx , r14 call hexvar test eax , eax jne hexvar lea rdi , [ rbx + hexvar ] mov rsi , r12 mov rdx , r14 mov rcx , r15 call hexvar test eax , eax jne hexvar add qword ptr [ rbx + hexvar ] , r14 xor eax , eax add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , num test byte ptr [ hexvar ] , num je hexvar mov dword ptr [ esp ] , num call hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] add eax , hexvar mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] add eax , num mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rsi , rax call hexvar mov eax , num add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r5 , r0 ldr ip , [ r0 , hexvar ] mov r6 , r1 ldr r1 , [ ip ] ldr sl , [ ip , hexvar ] sub sp , sp , hexvar str r1 , [ r0 , hexvar ] mov r0 , ip mov sb , r3 mov r8 , r2 ldr r7 , [ ip , num ] bl hexvar ldr r3 , [ r5 , hexvar ] ldr r0 , [ r3 , hexvar ] cmp r0 , num beq hexvar bl hexvar mov r4 , r0 mov r0 , r6 bl hexvar str r0 , [ sp , hexvar ] mov r0 , r7 bl hexvar mov fp , r0 mov r0 , r8 bl hexvar ldr r3 , [ sp , hexvar ] add r4 , r4 , r3 add r4 , r4 , hexvar add r4 , r4 , fp add r0 , r4 , r0 bl hexvar cmp sb , num mov r4 , r0 beq hexvar blo hexvar cmp sb , num bne hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ r5 , hexvar ] str r8 , [ sp , hexvar ] str r7 , [ sp , hexvar ] str r2 , [ sp , num ] str r6 , [ sp , num ] ldr r2 , [ r3 , hexvar ] mov r1 , num str r2 , [ sp ] ldr r3 , [ pc , hexvar ] mvn r2 , num mov r0 , r4 bl hexvar ldr r3 , [ r5 , hexvar ] ldr r0 , [ r3 , hexvar ] bl hexvar cmp sl , num movne r2 , num mov r0 , num ldr r3 , [ r5 , hexvar ] str r4 , [ r3 , hexvar ] strne r2 , [ r3 , hexvar ] add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] shr eax , hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov ecx , dword ptr [ rbp - hexvar ] shr ecx , hexvar mov ecx , ecx mov edx , ecx shl rdx , num add rax , rdx cmp qword ptr [ rax ] , num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov r8 , qword ptr [ rbp - hexvar ] call hexvar cmp rax , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov al , num call hexvar add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r4 , r3 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r2 , num ldrb r3 , [ r4 , hexvar ] strb r2 , [ r4 , hexvar ] and r2 , r3 , num cmp r2 , num bne hexvar ldr r3 , [ r4 ] tst r3 , num bne hexvar ldr r1 , [ r5 , hexvar ] ldr r3 , [ r1 , hexvar ] cmp r3 , num bne hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] movzx edx , byte ptr [ edx + hexvar ] mov esi , edx sub esi , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar xor eax , eax add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar add r6 , sp , hexvar ldm r6 , { r5 , r6 } mov lr , num str r5 , [ sp , hexvar ] str r6 , [ sp , hexvar ] orrs r5 , r5 , r6 mov r5 , num ldr r4 , [ sp , hexvar ] ldr r7 , [ sp , hexvar ] str r4 , [ sp , hexvar ] strb r5 , [ r7 ] str lr , [ r4 ] str lr , [ r4 , num ] ldrb r4 , [ sp , hexvar ] ldr r5 , [ sp , hexvar ] str r4 , [ sp , hexvar ] ldr r4 , [ sp , hexvar ] str r7 , [ sp , hexvar ] str r4 , [ sp , hexvar ] ldr r4 , [ sp , hexvar ] str r5 , [ sp , hexvar ] str r4 , [ sp , hexvar ] beq hexvar str r2 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r1 , [ sp , hexvar ] subs r1 , r2 , num moveq r1 , r3 str r3 , [ sp , hexvar ] mov r3 , num mov r6 , lr mov r7 , lr mov sb , r3 str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] mov r1 , num add r4 , sp , hexvar ldm r4 , { r3 , r4 } ldr r0 , [ sp , hexvar ] cmp r1 , r4 cmpeq r0 , r3 movhi r0 , r3 ldr r1 , [ sp , hexvar ] mov r2 , r0 ldr r0 , [ sp , hexvar ] bl hexvar subs r8 , r0 , num bge hexvar bl hexvar ldr r4 , [ r0 ] cmp r4 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r1 , [ sp , hexvar ] mov r5 , r0 mov r0 , num bl hexvar mov r2 , r5 mov r3 , r0 mov r1 , r4 mov r0 , num bl hexvar mov r3 , num mov sb , r3 mov r0 , sb add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rdi - hexvar ] , num mov qword ptr [ rsp + num ] , rsi je hexvar lea rbp , [ rsp + hexvar ] mov rbx , rdi mov r12 , rdx mov rdi , rbp call hexvar mov rsi , qword ptr [ rsp + num ] mov rdx , r12 mov rdi , rbp call hexvar mov rsi , qword ptr [ rbx - hexvar ] test rsi , rsi je hexvar mov rdi , qword ptr [ rbx - hexvar ] mov rdx , rbp mov rax , qword ptr [ rdi ] call qword ptr [ rax + hexvar ] test eax , eax js hexvar mov rdi , qword ptr [ rbx - hexvar ] xor esi , esi mov rax , qword ptr [ rdi ] call qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbx - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax ] call hexvar lea rdi , [ rbx - hexvar ] mov rsi , rax call hexvar cmp qword ptr [ rbx - hexvar ] , num je hexvar mov rdi , rbp call hexvar movsxd rax , dword ptr [ rbx - hexvar ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov rbp , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + num ] , rcx lea r14 , [ rax + num ] movabs r15 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ rbp + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , r14 mov r8 , qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + num ] call hexvar add r12 , r15 add rbx , r15 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ rbp + hexvar ] lea r8 , [ rbp + hexvar ] add rbp , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r9 , rbp call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov r9 , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar ldr ip , [ sp , hexvar ] ldr r5 , [ ip ] cmp r5 , num moveq r0 , num beq hexvar ldr r4 , [ r0 , hexvar ] ldr lr , [ r4 , hexvar ] clz ip , r4 lsr ip , ip , num cmp lr , num orrne ip , ip , num cmp ip , num movne r0 , num beq hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] or edx , num mov byte ptr [ rax + hexvar ] , dl mov eax , num pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
ldr r0 , [ r0 ] ldr r3 , [ r1 ] cmp r0 , r3 blo hexvar cmp r0 , r3 movls r0 , num movhi r0 , num bx lr mvn r0 , num bx lr
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rbp , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov r8d , hexvar mov rcx , rsp mov edx , num mov esi , num call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp ] cmp rax , rbp jbe hexvar mov rdi , rbx call hexvar mov rbx , rax mov edx , num mov esi , hexvar mov edi , num call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov esp , ebp pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ ebp + hexvar ] cmp esi , num je hexvar jbe hexvar cmp esi , num je hexvar cmp esi , num mov dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar xor edi , edi push hexvar call hexvar lea ecx , [ eax + hexvar ] lea edx , [ eax + hexvar ] xor ebx , ebx mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num and ecx , hexvar sub edx , ecx add edx , hexvar and edx , hexvar mov dword ptr [ ecx + edi ] , ebx add edi , num cmp edi , edx jb hexvar mov ecx , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ eax + num ] , esi mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ ebp + num ] or edx , num and edx , hexvar mov byte ptr [ eax + hexvar ] , dl mov edx , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ eax ] , edx lea esp , [ ebp - hexvar ] mov eax , num pop ebx pop esi pop edi pop ebp ret
subs r3 , r0 , num beq hexvar ldr r2 , [ r3 ] cmp r2 , hexvar bne hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar mov r0 , num add r0 , r0 , num ldr r3 , [ r3 , hexvar ] cmp r3 , num bxeq lr ldr r2 , [ r3 ] cmp r2 , hexvar bxne lr strgt sl , [ r8 , - hexvar ] andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rsi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp push r15 push r14 push rbx push rax mov r14 , rdx mov r15d , esi mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ rbx ] , rax test rax , rax je hexvar call hexvar mov rdi , qword ptr [ rbx ] cmp eax , r15d jg hexvar mov ebp , eax add ebp , - num nop word ptr [ rax + rax ] xor esi , esi call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx ] add ebp , num cmp ebp , r15d jl hexvar mov esi , r15d mov rdx , r14 call hexvar mov eax , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi mov rax , qword ptr [ rdi + hexvar ] cmp rax , - num je hexvar mov rdx , qword ptr [ rdi + num ] lea rsi , [ rdx + rax + num ] mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + num ] mov rdi , rbp call qword ptr [ rax + hexvar ] mov qword ptr [ rbx + hexvar ] , - num mov rax , qword ptr [ rbx + hexvar ] cmp rax , - num je hexvar mov rdx , qword ptr [ rbx + num ] lea rsi , [ rdx + rax + num ] mov rax , qword ptr [ rbx ] mov rax , qword ptr [ rax + num ] mov rdi , rbp call qword ptr [ rax + hexvar ] mov qword ptr [ rbx + hexvar ] , - num mov eax , dword ptr [ rbx + hexvar ] add eax , num mov dword ptr [ rbx + hexvar ] , eax cmp eax , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] cmp rcx , - num jne hexvar sub rbp , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rbp mov eax , num add rsp , num pop rbx pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rax , qword ptr [ rdi ] movsxd r13 , dword ptr [ rax + num ] cmp r13 , rcx ja hexvar mov r12 , rcx mov r14 , rdx mov r15 , rsi mov rbx , rdi sub r12 , r13 xor ebp , ebp nop dword ptr [ rax + rax ] lea rdi , [ r14 + rbp ] lea rsi , [ r15 + rbp ] mov rdx , qword ptr [ rbx + hexvar ] add rdx , num mov ecx , dword ptr [ rbx + hexvar ] call hexvar add rbp , r13 cmp rbp , r12 jbe hexvar mov eax , num add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , num cmp r0 , num beq hexvar cmp r2 , num beq hexvar ldr r4 , [ r0 , hexvar ] cmp r4 , num beq hexvar mov r8 , r3 mov r7 , r2 mov r6 , r1 mov r5 , num b hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num moveq r5 , num beq hexvar mov r5 , num ldr r2 , [ r3 , hexvar ] tst r1 , r2 addne r5 , r5 , num ldr r3 , [ r3 ] cmp r3 , num bne hexvar b hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar ldr r1 , [ r4 , hexvar ] tst r1 , r6 beq hexvar add r5 , r5 , num ldr r3 , [ r4 , num ] ldr r2 , [ r4 , num ] ldr r0 , [ r4 , hexvar ] str r0 , [ sp , num ] ldr r0 , [ r4 , hexvar ] str r0 , [ sp ] mov r0 , r8 blx r7 cmp r0 , num bne hexvar mov r0 , r5 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
mov ecx , dword ptr [ esp + num ] call hexvar add edx , hexvar mov eax , ecx and ecx , hexvar shr al , num movzx eax , al mov eax , dword ptr [ edx + eax * num - hexvar ] shr eax , cl and eax , num ret
push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] test edx , edx je hexvar lea ecx , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num push num push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx cmp dword ptr [ esp + hexvar ] , num jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov edx , hexvar jmp hexvar mov edx , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx nop add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , num setne cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] movzx ecx , byte ptr [ rax + num ] mov eax , ecx mov ecx , eax and ecx , num mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rip + hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax ] mov rsi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r14 push rbx sub rsp , hexvar mov r8 , rdx mov rbx , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + num ] , rax lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] call hexvar test al , al js hexvar mov edx , hexvar cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov edx , hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov rax , qword ptr [ rsp + num ] lea rcx , [ rax + num ] mov qword ptr [ rsp + num ] , rcx movzx eax , byte ptr [ rax ] test r14 , r14 je hexvar mov dword ptr [ r14 ] , eax mov qword ptr [ rbx ] , rcx add rsp , hexvar pop rbx pop r14 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov rbx , rdi call hexvar cmp rax , hexvar ja hexvar xor ebp , ebp mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] mov eax , ebp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx add esp , hexvar pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi test rsi , rsi je hexvar mov rbx , rsi cmp qword ptr [ rsi + hexvar ] , num je hexvar mov r15 , rsp mov rdi , r15 mov esi , hexvar mov rdx , rbx xor ecx , ecx call hexvar mov ebp , eax cmp eax , hexvar jl hexvar mov r13d , ebp add r13d , num mov esi , hexvar mov edi , r13d mov edx , hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov esi , r13d mov rdx , rbx xor ecx , ecx call hexvar mov rdi , r14 mov rsi , r12 mov edx , ebp call hexvar cmp r12 , r15 je hexvar mov rdi , r12 call hexvar jmp hexvar mov esi , hexvar mov rdi , r14 mov edx , num call hexvar mov ebp , eax mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push r15 push r14 mov r15 , rsi push r13 push r12 mov r13d , edi push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test edi , edi js hexvar je hexvar mov byte ptr [ rsp + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov r9d , hexvar mov qword ptr [ rsp + hexvar ] , num lea r12 , [ rip + hexvar ] test eax , eax lea rax , [ rsp + hexvar ] cmove r9d , r13d xor ebx , ebx mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov r14d , r9d mov qword ptr [ rsp + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] cmp r14d , num je hexvar lea edx , [ rdi + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax sub r14d , num add ebx , num mov r15 , rbp call hexvar test r14d , r14d je hexvar movzx eax , byte ptr [ r15 ] lea rbp , [ r15 + num ] test al , al je hexvar movsx edi , al movzx eax , al movzx eax , word ptr [ r12 + rax * num ] test al , num jne hexvar sub r14d , num add ebx , num test al , hexvar je hexvar mov rsi , qword ptr [ rip + hexvar ] mov r15 , rbp call hexvar test r14d , r14d jne hexvar nop dword ptr [ rax ] cmp ebx , r13d jge hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar mov edx , r13d lea rcx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] sub edx , ebx mov edi , num xor eax , eax mov ebx , r13d call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , ebx jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rcx mov rbx , rdi call hexvar mov dword ptr [ rsp + hexvar ] , eax mov eax , hexvar mov r15d , hexvar mov r12d , hexvar jmp hexvar mov eax , hexvar mov ebp , num nop dword ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r12d jmp hexvar mov rdi , rbx mov rsi , rbx mov rdx , r14 call hexvar mov ebp , eax mov eax , hexvar jmp hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov rdi , rbx mov rsi , r14 call hexvar test eax , eax mov eax , hexvar cmovns eax , r15d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
add r3 , r1 , num ldm r3 , { r2 , r3 } push { r4 , r5 , r6 , lr } add r5 , r0 , num ldm r5 , { r4 , r5 } cmp r5 , r3 cmpeq r4 , r2 beq hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
cmp r3 , num beq hexvar ldrb ip , [ r2 , num ] sub ip , ip , hexvar cmp ip , num bls hexvar str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp ] bl hexvar add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a0 sw a0 , hexvar ( sp ) lw s3 , - hexvar ( gp ) lw a0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar movsd xmm1 , qword ptr [ rip ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rbp - hexvar ] subsd xmm1 , qword ptr [ rbp - num ] subsd xmm1 , qword ptr [ rbp - hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
cmp byte ptr [ rdi ] , hexvar sete al movzx eax , al add rdi , rax movsx eax , byte ptr [ rdi ] sub eax , hexvar cmp eax , num ja hexvar add rdi , num cmp byte ptr [ rdi ] , num jne hexvar mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a2 , hexvar nop addiu s1 , sp , hexvar move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s3 move a1 , s2 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) addiu a1 , zero , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui s0 , hexvar b hexvar addiu s0 , s0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp mov rbp , rsp mov rax , qword ptr [ rip ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov edi , num call hexvar mov rdi , qword ptr [ rip ] jmp rdi movabs rdi , num call hexvar pop rbp ret
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov ebx , edx mov r14 , rsi cmp edx , - num mov eax , hexvar cmovle ebx , eax mov r15 , qword ptr [ rdi ] mov rdi , r15 call hexvar mov ebp , eax nop dword ptr [ rax ] add ebx , num cmp ebx , ebp jge hexvar mov rdi , r15 mov esi , ebx call hexvar mov rdi , qword ptr [ rax ] mov rsi , r14 call hexvar test eax , eax jne hexvar jmp hexvar mov ebx , hexvar mov eax , ebx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] xor edx , edx div dword ptr [ ebp - hexvar ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + hexvar ] , edi mov dword ptr [ ebx + hexvar ] , esi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx + num ] , ecx mov dword ptr [ ebx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov edx , dword ptr [ rip + hexvar ] mov eax , num cmp edx , num je hexvar cmp edx , num jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax sete al ret nop word ptr [ rax + rax ] xor eax , eax ret
sub rsp , hexvar mov rax , qword ptr [ rsp + hexvar ] mov r10 , qword ptr [ rsp + hexvar ] mov r11 , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp ] , r11 mov qword ptr [ rsp + num ] , r10 mov qword ptr [ rsp + hexvar ] , rax mov al , num call hexvar add rsp , hexvar ret
push rax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdi , rsi mov rsi , rax call hexvar mov rcx , rax xor eax , eax test rcx , rcx setne al pop rcx ret
push { r4 , r5 , r6 , r7 , r8 , sb , lr } sub sp , sp , hexvar add r5 , sp , hexvar ldm r5 , { r4 , r5 } ldr r7 , [ sp , hexvar ] ldr r3 , [ r1 , hexvar ] tst r3 , hexvar beq hexvar mov r8 , r0 mov r6 , r1 mov sb , r2 ldr r2 , [ r1 , hexvar ] cmp r2 , r4 cmphs r2 , r7 bhs hexvar mov r0 , hexvar bl hexvar mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s5 , a0 move s4 , a1 jalr t9 lui s3 , hexvar addiu a2 , zero , hexvar lw gp , hexvar ( sp ) addiu a1 , s3 , hexvar lw t9 , - hexvar ( gp ) jalr t9 sra a0 , v0 , num lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 addiu s1 , zero , hexvar move s0 , v0 lbu s6 , ( s5 ) beqz s6 , hexvar nop beq s6 , s1 , hexvar addiu v0 , s5 , num lbu s7 , num ( s5 ) beqz s7 , hexvar addiu s5 , s5 , num lw t9 , - hexvar ( gp ) jalr t9 nop sll v1 , s6 , num lw fp , ( v0 )
subs r1 , r1 , num beq hexvar mov r3 , num lsrs r1 , r1 , num add r3 , r3 , num bne hexvar mul r1 , r3 , r0 add r1 , r1 , num lsr r1 , r1 , num mov r0 , r1 bx lr
push r15 push r14 mov r15 , rdx push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rsi sub rsp , hexvar call hexvar mov rbx , rax mov rdi , rax call hexvar sub rbx , r12 mov r13 , rax mov rdi , rbp add rbx , rax call hexvar test r13 , r13 mov r14 , rax je hexvar cmp byte ptr [ r12 + rbx - num ] , hexvar je hexvar xor eax , eax cmp byte ptr [ rbp ] , hexvar mov edx , num setne al mov qword ptr [ rsp ] , rax mov eax , hexvar cmove eax , edx mov byte ptr [ rsp + hexvar ] , al jmp hexvar nop dword ptr [ rax ] xor eax , eax cmp byte ptr [ rbp ] , hexvar mov edx , num sete al mov qword ptr [ rsp ] , rax mov eax , hexvar cmovne eax , edx mov byte ptr [ rsp + hexvar ] , al lea rdi , [ rbx + r14 + num ] add rdi , qword ptr [ rsp ] call hexvar test rax , rax mov r13 , rax je hexvar mov rdi , rax mov rdx , rbx mov rsi , r12 call hexvar movzx ecx , byte ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp ] add rdi , rax test r15 , r15 mov byte ptr [ rax ] , cl je hexvar mov qword ptr [ r15 ] , rdi mov rdx , r14 mov rsi , rbp call hexvar mov byte ptr [ rax ] , num add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push num call hexvar mov esi , eax add esp , hexvar xor eax , eax test esi , esi je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + hexvar ] , eax je hexvar sub esp , num push esi push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ ebp - num ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar test al , num jne hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar movsd xmm0 , qword ptr [ ebp - num ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jb hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + num ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ ebp - num ] mov dword ptr [ esp ] , ecx movsx eax , byte ptr [ eax ] mov dword ptr [ esp + num ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ esp ] , hexvar call hexvar movsd xmm0 , qword ptr [ ebp - num ] movsd qword ptr [ ebp - hexvar ] , xmm0 fld qword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jge hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] lea ecx , [ hexvar ] cmp dword ptr [ eax + num ] , ecx je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar lea eax , [ hexvar ] mov dword ptr [ hexvar ] , eax lea eax , [ hexvar ] cmp dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
ldr r3 , [ r0 , num ] ldr r2 , [ r3 , num ] cmp r2 , num beq hexvar push { r4 , lr } ldr r4 , [ r3 ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num ldrne r3 , [ pc , hexvar ] movne r2 , num strne r2 , [ r3 ] mvnne r0 , num pop { r4 , pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar push num call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 )
push rbp mov rbp , rsp mov al , dil mov byte ptr [ rbp - num ] , al movzx edi , byte ptr [ rbp - num ] and edi , hexvar sar edi , num mov eax , edi pop rbp ret
push rbx mov ebx , edi mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rsi , qword ptr [ rax ] ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp ebx , hexvar jne hexvar sar eax , num cmp dword ptr [ rip + hexvar ] , num je hexvar and eax , num mov edx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov rdx , qword ptr [ rip + hexvar ] jmp hexvar call hexvar jmp hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , qword ptr [ rdx + rax * num ] call hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
test rdi , rdi je hexvar push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , rbx test r14 , r14 je hexvar mov rdi , rsp mov rsi , r14 call hexvar add rsp , hexvar pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar sub esp , num push hexvar push num push eax call hexvar mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar test eax , eax jg hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebx + hexvar ] , num jmp hexvar
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num lea edi , [ eax + num ] and edi , hexvar mov ecx , eax sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax call hexvar mov dword ptr [ esi + num ] , eax test eax , eax je hexvar test ebp , ebp je hexvar mov dword ptr [ esi ] , ebp mov dword ptr [ esi + num ] , num mov eax , dword ptr [ esi ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push esi call eax add esp , hexvar test eax , eax je hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
sub sp , sp , num str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] and r3 , r3 , num cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 add sp , sp , num bx lr
push rbp mov rbp , rsp sub rsp , hexvar mov edx , dword ptr [ rbp + hexvar ] mov eax , dword ptr [ rbp + hexvar ] cmp edx , eax cmovge eax , edx mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar mov eax , dword ptr [ rbp + hexvar ] cmp eax , hexvar je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rdx , qword ptr [ rbp + hexvar ] mov eax , dword ptr [ rbp + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] sub ecx , eax mov eax , ecx cdqe add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp + hexvar ] mov eax , dword ptr [ rbp + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] sub ecx , eax mov eax , ecx cdqe add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp + hexvar ] test eax , eax je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar sub qword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp + hexvar ] test eax , eax jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovae rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , hexvar ja hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , edx mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov dword ptr [ ecx + edx * num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] add ecx , num mov dword ptr [ hexvar ] , ecx mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rbp - num ] test edi , edi setns al movzx edi , al mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - num ] test eax , eax sets cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar mov esp , ebp pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov edi , dword ptr [ rbp - num ] mov dword ptr [ rcx ] , edi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r8 mov edi , dword ptr [ rcx ] mov rcx , qword ptr [ rdx ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rcx mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax cmp qword ptr [ rcx ] , num setne r9b mov byte ptr [ rbp - hexvar ] , r9b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , dword ptr [ rcx + num ] mov eax , edx cdq mov esi , num idiv esi mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
lbu v0 , hexvar ( a0 ) addiu v1 , zero , hexvar andi v0 , v0 , hexvar beq v0 , v1 , hexvar addiu v1 , zero , num jr ra move v0 , zero lw v0 , num ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx sub edx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
ldr r3 , [ r0 , hexvar ] cmp r3 , num bxeq lr ldrb r3 , [ r0 , hexvar ] cmp r3 , num bxne lr push { r4 , r5 , r6 , lr } mov r4 , r0 ldr r5 , [ r0 , hexvar ] bl hexvar str r0 , [ r4 , hexvar ] ldr r3 , [ r5 , hexvar ] tst r3 , num popne { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx ] cmp dword ptr [ eax + ecx * num ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar mov r3 , num str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num bl hexvar add sp , sp , hexvar pop { pc }
sub rsp , hexvar test al , al mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rsp + hexvar ] mov rsi , rsp mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp ] , num mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov ebx , edi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ edi + hexvar ] add eax , num push eax call hexvar add esp , hexvar mov esi , eax lea eax , [ esp + hexvar ] lea ebp , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ edi - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ebx , dword ptr [ edi + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test ebx , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx jle hexvar xor ebx , ebx lea esi , [ edi - hexvar ] jmp hexvar lea esi , [ esi ] cmp eax , hexvar ja hexvar cmp eax , num je hexvar movzx edx , word ptr [ esi + eax * num ] test dl , hexvar jne hexvar cmp byte ptr [ edi + hexvar ] , hexvar jne hexvar cmp eax , hexvar jg hexvar mov ecx , dword ptr [ edi + hexvar ] test ecx , ecx je hexvar and edx , hexvar je hexvar mov ecx , dword ptr [ esp + hexvar ] mov byte ptr [ ecx + ebx ] , al add ebx , num cmp ebx , dword ptr [ edi + hexvar ] jge hexvar sub esp , hexvar push ebp mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp eax , - num jne hexvar mov esi , dword ptr [ esp + hexvar ] sub esp , hexvar mov ebx , edi push esi call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r4 , r0 bl hexvar add r0 , r0 , num bl hexvar mov sb , hexvar mov r6 , r0 mov r5 , r0 mov r7 , hexvar mov r8 , num mov sl , num mov fp , num ldrb r3 , [ r4 ] cmp r3 , num beq hexvar mov r2 , r4 cmp r3 , hexvar ldrb r1 , [ r2 , num ] ! beq hexvar strb r3 , [ r5 ] mov r3 , r1 cmp r3 , num mov r4 , r2 add r5 , r5 , num bne hexvar mov r3 , num mov r0 , r6 strb r3 , [ r5 ] add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 push r12 push rbx sub rsp , hexvar mov r12 , r9 mov rbx , r8 mov r14 , rcx mov r15 , rdx mov rdx , rsi mov rsi , rdi test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 test rsi , rsi je hexvar test rbx , rbx je hexvar test r15 , r15 je hexvar test r14 , r14 je hexvar lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax movabs rax , hexvar mov qword ptr [ rsp ] , rax lea rdi , [ rsp + hexvar ] call hexvar test eax , eax jne hexvar lea rdi , [ rsp + hexvar ] mov rsi , rbx mov rdx , r12 call hexvar test eax , eax jne hexvar lea rbx , [ rsp + hexvar ] nop dword ptr [ rax ] movsxd rax , dword ptr [ rsp ] cmp rax , hexvar ja hexvar mov rcx , rax add rcx , qword ptr [ rsp + hexvar ] lea eax , [ rax + num ] mov dword ptr [ rsp ] , eax mov rsi , qword ptr [ rcx ] test rsi , rsi je hexvar cmp eax , hexvar ja hexvar movsxd rcx , eax add rcx , qword ptr [ rsp + hexvar ] add eax , num mov dword ptr [ rsp ] , eax jmp hexvar nop word ptr cs : [ rax + rax ] nop mov rcx , qword ptr [ rsp + num ] lea rdx , [ rcx + num ] mov qword ptr [ rsp + num ] , rdx mov rsi , qword ptr [ rcx ] test rsi , rsi jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rsp + num ] lea rax , [ rcx + num ] mov qword ptr [ rsp + num ] , rax mov rdx , qword ptr [ rcx ] mov rdi , rbx call hexvar test eax , eax je hexvar jmp hexvar lea rdi , [ rsp + hexvar ] mov rsi , r15 mov rdx , r14 call hexvar add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] mov r2 , num mov r1 , num ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num ble hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar bl hexvar b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , r2 blt hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ fp , - num ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edx mov esi , dword ptr [ ebp - num ] cmp dword ptr [ esi + num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al jmp hexvar lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jge hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] lea ecx , [ hexvar ] cmp dword ptr [ eax + num ] , ecx je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar lea eax , [ hexvar ] mov dword ptr [ hexvar ] , eax lea eax , [ hexvar ] cmp dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push rbp push r14 push rbx sub rsp , hexvar mov ebx , esi mov ebp , edi mov edi , hexvar call hexvar mov qword ptr [ rsp + num ] , rax movsxd rbx , ebx mov ecx , hexvar mov r14d , hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] mov esi , hexvar mov rdx , rbx mov ecx , ebp call hexvar mov ecx , hexvar mov rax , qword ptr [ rsp + num ] nop dword ptr [ rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , r14d jmp hexvar nop dword ptr [ rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw a1 , hexvar ( s0 ) beqz a1 , hexvar addiu s2 , sp , hexvar b hexvar lw t9 , - hexvar ( gp ) addiu s0 , s0 , hexvar lw a1 , hexvar ( s0 ) beqz a1 , hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) lw a1 , hexvar ( s1 )
push r13 push r12 push rbp push rbx sub rsp , num mov r12d , dword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rdi + hexvar ] test r12d , r12d jne hexvar xor eax , eax test rbx , rbx je hexvar nop dword ptr [ rax ] add eax , dword ptr [ rbx + hexvar ] mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a3 , ( a0 ) lw a2 , num ( a0 ) lw v0 , num ( a0 ) sw a1 , hexvar ( sp ) move a1 , v0 lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rsi , rsp call qword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdx , qword ptr [ rsp ] mov qword ptr [ rbx ] , rdx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] and eax , hexvar mov ecx , hexvar sub ecx , eax add ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax ] , num je hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] shr eax , num mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] add ecx , num cmp eax , ecx ja hexvar call hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 cmp qword ptr [ rip + hexvar ] , num je hexvar mov ebx , r8d mov r14 , rdx mov r15 , rsi mov ebp , edi mov esi , dword ptr [ rip + hexvar ] mov rdi , rcx call hexvar test rax , rax je hexvar cmp ebx , num jne hexvar mov dword ptr [ rsp ] , num lea r12 , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , ebp mov rdx , r15 mov r8 , r14 mov r9 , rax call qword ptr [ rip + hexvar ] mov ebx , eax mov rdi , r12 mov esi , hexvar mov edx , eax call hexvar cmp ebx , num jne hexvar mov ebx , dword ptr [ rsp + hexvar ] jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] add r2 , sp , hexvar add r3 , sp , hexvar mov r1 , r2 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r2 , [ sp , num ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , hexvar ble hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , hexvar bgt hexvar ldr r1 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 b hexvar ldr r1 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , hexvar mov rdi , rax mov rsi , rax movabs rdx , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] or ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rdi , qword ptr [ rbp - num ] call hexvar movabs rdi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] or ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } subs r6 , r0 , num beq hexvar mov r5 , r1 mov r0 , num mov r1 , hexvar bl hexvar subs r4 , r0 , num beq hexvar mov r1 , num add r0 , r4 , hexvar bl hexvar cmp r0 , num bne hexvar mvn r0 , num mvn r1 , num mov r3 , num str r0 , [ r4 , hexvar ] str r1 , [ r4 , hexvar ] str r5 , [ r4 , hexvar ] str r6 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar subs r5 , r0 , num beq hexvar mov r0 , r4 pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp push rbx push rax mov ebp , edi mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar mov rbx , qword ptr [ rip + hexvar ] test ebp , ebp je hexvar test rbx , rbx jne hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar call hexvar mov edi , hexvar mov esi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax call hexvar mov rbx , qword ptr [ rip + hexvar ] mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a1 , zero , hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) subu v0 , v1 , v0 move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , v0 , num lw v0 , hexvar ( fp ) sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx xor edx , edx mov esi , dword ptr [ ebp - hexvar ] div esi
push ebp mov ebp , esp sub esp , hexvar fld xword ptr [ ebp + num ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) jbe hexvar jmp hexvar fld xword ptr [ ebp - hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar fld xword ptr [ ebp - hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , ecx inc edx mov dword ptr [ hexvar ] , edx shl ecx , num add eax , ecx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp push r14 push rbx sub rsp , hexvar mov rax , qword ptr [ rbp + hexvar ] mov r10 , qword ptr [ rbp + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp + hexvar ] mov r9 , qword ptr [ rbp + hexvar ] mov r11 , qword ptr [ rcx ] mov r11 , qword ptr [ r11 + hexvar ] mov qword ptr [ rbp - hexvar ] , r11 mov r11 , qword ptr [ rbp - hexvar ] add r11 , - num mov qword ptr [ rbp - hexvar ] , r11 mov qword ptr [ rbp - hexvar ] , num mov r11 , qword ptr [ rbp - hexvar ] test r11 , r11 setg bl movzx r14d , bl mov r11d , r14d mov r11 , qword ptr [ r11 * num ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , r10 mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 jmp r11
and ecx , hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num jne hexvar lea esi , [ esi ] mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov esi , eax mov eax , dword ptr [ edi + hexvar ] and esi , dword ptr [ edi + num ] and eax , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax jmp hexvar nop
push r13 push r12 push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , num cmp qword ptr [ rip + hexvar ] , num je hexvar call hexvar test eax , eax jne hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar nop dword ptr [ rax ] mov r8 , qword ptr [ rbx + num ] mov rcx , qword ptr [ rbp + num ] mov r13 , r8 lea r12 , [ rcx - num ] sub r13 , num jne hexvar xor eax , eax test r12 , r12 setne al neg eax cmp byte ptr [ rip + hexvar ] , num je hexvar neg eax add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , hexvar jne hexvar test edx , edx mov eax , hexvar cmovne eax , edx xor ebx , ebx lea rsi , [ rdi + num ] mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test esi , esi je hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov ebp , num mov eax , ebp mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r0 , [ sp ] bl hexvar mov r3 , r0 sub r3 , r3 , num cmp r3 , num bhi hexvar ldr r0 , [ sp ] bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar b hexvar mov r0 , r0 mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 add r0 , r4 , r3 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] mov r1 , r3 bl hexvar b hexvar ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 add r0 , r4 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r1 , [ pc , hexvar ] bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - hexvar ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
mov rcx , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov eax , hexvar cmp rcx , rdx jg hexvar mov eax , num jl hexvar mov rax , qword ptr [ rsi + hexvar ] sub eax , dword ptr [ rdi + hexvar ] jne hexvar sub rsp , num mov rsi , qword ptr [ rsi ] mov rdi , qword ptr [ rdi ] call hexvar add rsp , num ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rbp , rsi mov rbx , rdi mov qword ptr [ rdi ] , rsi xorps xmm0 , xmm0 movups xmmword ptr [ rdi + num ] , xmm0 mov dword ptr [ rdi + hexvar ] , num mov eax , num movd xmm1 , eax movdqu xmmword ptr [ rdi + hexvar ] , xmm1 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rdi + hexvar ] , num mov dword ptr [ rdi + hexvar ] , num movups xmmword ptr [ rdi + hexvar ] , xmm0 mov qword ptr [ rsp ] , rdi lea rax , [ rdi + hexvar ] mov qword ptr [ rsp + num ] , rax mov rsi , qword ptr [ rsp ] mov rdx , qword ptr [ rsp + num ] xor edi , edi call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar jmp hexvar mov eax , hexvar mov ebp , num nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r15d jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdi , rbx call rax test eax , eax mov eax , hexvar cmove eax , r14d jmp hexvar mov rsi , qword ptr [ rsp ] mov rdx , qword ptr [ rsp + num ] xor ebp , ebp xor edi , edi call hexvar mov eax , hexvar jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test ecx , hexvar jne hexvar mov r12d , edi mov rbp , rsi mov r14 , rdx mov ebx , ecx cmp edi , - hexvar je hexvar cmp byte ptr [ rsi ] , hexvar jne hexvar cmp ebx , hexvar je hexvar mov rsi , r14 mov rdi , rbp call hexvar mov r13d , eax mov eax , r13d mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop leave ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] mov cl , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] movsx ecx , al mov dword ptr [ esp ] , ecx call hexvar movzx ecx , al mov al , byte ptr [ ecx + hexvar ] mov byte ptr [ ebp - num ] , al xor eax , eax mov cl , byte ptr [ ebp - num ] movsx edx , cl cmp eax , edx setle ch and ch , num movzx eax , ch add esp , num pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar call hexvar mov esi , eax mov eax , num test esi , esi je hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , num add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi ] mov rdi , qword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi ] mov rsi , qword ptr [ rsi + num ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , qword ptr [ rax + num ] call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov r8 , qword ptr [ rdi ] xor eax , eax cmp byte ptr [ r8 + rsi ] , hexvar je hexvar ret nop mov r10 , qword ptr [ rdi + num ] movzx eax , byte ptr [ r10 + rsi ] test al , al jne hexvar mov r9 , qword ptr [ rdi + hexvar ] lea rdx , [ rsi + num ] cmp rdx , r9 jae hexvar movzx ecx , byte ptr [ r8 + rsi + num ] mov edi , ecx sub ecx , hexvar cmp ecx , num ja hexvar cmp byte ptr [ r10 + rsi + num ] , num je hexvar jmp hexvar nop dword ptr [ rax ] movzx ecx , byte ptr [ r8 + rdx ] mov edi , ecx sub ecx , hexvar cmp ecx , num ja hexvar cmp byte ptr [ r10 + rdx ] , num jne hexvar add rdx , num cmp rdx , r9 jb hexvar xor eax , eax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar bnez a0 , hexvar sw gp , hexvar ( sp ) bne a1 , a1 , hexvar move s1 , a1 bltz a1 , hexvar move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar move s0 , zero beqz s1 , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , v0 move a1 , s0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , byte ptr [ eax + hexvar ] shr cl , num mov dl , hexvar xor dl , num mov ch , cl xor ch , dl and ch , cl movzx eax , ch cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , byte ptr [ eax + hexvar ] and cl , num movzx eax , cl cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , esp mov dword ptr [ ebx + hexvar ] , edi mov dword ptr [ ebx + hexvar ] , esi mov dword ptr [ ebx + num ] , ecx mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp lea esi , [ ebp - hexvar ] mov dword ptr [ edx + hexvar ] , esi mov dword ptr [ edx ] , ecx mov dword ptr [ edx + hexvar ] , hexvar mov dword ptr [ edx + num ] , num mov dword ptr [ edx + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , eax test eax , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor edx , edx mov esi , hexvar sub esi , eax sbb edx , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar xor eax , eax mov ecx , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , ecx mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ hexvar ] , hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , lr } sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs r4 , r0 , num beq hexvar mov r2 , sp mov r1 , r4 mov r0 , num bl hexvar cmp r0 , num blt hexvar ldr r3 , [ sp , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar bne hexvar add r1 , sp , hexvar ldm r1 , { r0 , r1 } cmp r0 , num sbcs r3 , r1 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dl , al mov byte ptr [ esp + hexvar ] , dl add esp , hexvar ret
push rbx sub rsp , hexvar mov rcx , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rcx xor ecx , ecx test rdi , rdi je hexvar cmp byte ptr [ rdi ] , num mov rax , rdi je hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , rax pxor xmm0 , xmm0 mov qword ptr [ rsp + hexvar ] , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl movaps xmmword ptr [ rsp + hexvar ] , xmm0 je hexvar lea rdi , [ rsp + hexvar ] xor edx , edx mov rsi , rax call hexvar test rax , rax mov rdi , qword ptr [ rsp + hexvar ] je hexvar mov rax , qword ptr [ rsp + hexvar ] cmp rdi , rax je hexvar mov rbx , rax sub rbx , rdi test ebx , ebx jle hexvar test rdi , rdi je hexvar mov rdx , qword ptr [ rsp + hexvar ] sub rdx , rax test rdx , rdx jg hexvar lea esi , [ rbx + rbx + num ] movsxd rbx , ebx movsxd rsi , esi call hexvar mov qword ptr [ rsp + hexvar ] , rax add rax , rbx mov byte ptr [ rax ] , num mov rax , qword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r0 ldr r0 , [ r0 , hexvar ] sub sp , sp , num ldr r3 , [ r0 ] ldr r4 , [ r0 , num ] ldr r7 , [ r0 , hexvar ] ldr r8 , [ r0 , hexvar ] str r3 , [ r5 , hexvar ] bl hexvar mov r0 , r4 bl hexvar add r0 , r0 , num bl hexvar mov r3 , hexvar mov r1 , num mvn r2 , num stm sp , { r3 , r4 } ldr r3 , [ pc , hexvar ] mov r6 , r0 bl hexvar mov r0 , r4 bl hexvar mov r0 , hexvar bl hexvar mov r4 , r0 mov r0 , r6 bl hexvar mov r3 , num ldr r2 , [ r5 , hexvar ] str r0 , [ r4 , num ] str r4 , [ r5 , hexvar ] mov r0 , r6 str r8 , [ r4 , hexvar ] str r7 , [ r4 , hexvar ] str r2 , [ r4 ] str r3 , [ r4 , num ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] bl hexvar mov r0 , num add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
lw v0 , hexvar ( a1 ) addiu sp , sp , - hexvar lui a1 , hexvar lui v1 , hexvar and v0 , v0 , a1 sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s2 , hexvar ( sp ) beq v0 , v1 , hexvar lw s1 , hexvar ( sp ) lw s0 , hexvar ( a2 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , a1 lw a1 , hexvar ( a0 ) lw a0 , num ( a0 ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) bal hexvar move a2 , zero lw ra , hexvar ( sp ) move v0 , v1 jr ra addiu sp , sp , hexvar
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] mov r2 , num str r2 , [ r3 ] add r1 , sp , num mov r0 , num bl hexvar cmp r0 , num bne hexvar ldr r3 , [ pc , hexvar ] mov r2 , num str r2 , [ r3 ] ldr r2 , [ sp , num ] str r2 , [ r3 , num ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] str r0 , [ r3 , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { pc } andeq r0 , r0 , r6 andeq r0 , r0 , r0
push r14 push rbx push rax test rdi , rdi je hexvar mov r14 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax movabs rax , hexvar mov qword ptr [ rbx ] , rax xorps xmm0 , xmm0 movups xmmword ptr [ rbx + num ] , xmm0 mov eax , dword ptr [ r14 + num ] mov dword ptr [ rbx + num ] , eax mov rsi , qword ptr [ r14 + num ] mov edx , dword ptr [ r14 ] mov rdi , rbx call hexvar test eax , eax je hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov rax , rbx add rax , num mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar test byte ptr [ rbx + hexvar ] , hexvar jne hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] cmp edx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ecx + edx * num + num ] , eax mov eax , dword ptr [ hexvar ] sub eax , hexvar add eax , num add eax , hexvar mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push rbp push rbx lea rsi , [ rip + hexvar ] mov rbx , rdi mov edx , num sub rsp , num mov ebp , dword ptr [ rdi + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov edx , ebp mov rsi , rbx mov rdi , rax mov ecx , hexvar xor eax , eax call hexvar mov edi , hexvar call hexvar add rsp , num xor eax , eax pop rbx pop rbp ret
cmp esi , num je hexvar ja hexvar cmp esi , num lea rax , [ rip + hexvar ] je hexvar ja hexvar sub rax , hexvar cmp esi , num je hexvar add rax , hexvar cmp esi , num jne hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 ) lui v0 , hexvar and v1 , v1 , v0 lui v0 , hexvar beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , ( v0 ) lui v0 , hexvar and v1 , v1 , v0 lui v0 , hexvar beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
lw v0 , num ( a2 ) lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar srl v0 , v0 , hexvar sw ra , hexvar ( sp ) sltiu v1 , v0 , num beqz v1 , hexvar sw gp , hexvar ( sp ) lui v1 , hexvar sll v0 , v0 , num addiu v1 , v1 , - hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) jr v0 nop lw v0 , num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] add rsi , - num mov rdi , rsi sub rdi , num mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov ecx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov ecx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , num ( a1 )
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] test esi , esi sete bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ hexvar ] jmp eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar cmp eax , num setg bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar lw v0 , num ( a0 ) sw s0 , hexvar ( sp ) move s0 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw s2 , hexvar ( sp ) move s2 , a2 sw ra , hexvar ( sp ) lw a0 , ( s0 )
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar move v0 , a0 sb v0 , num ( fp ) lbu v0 , num ( fp ) srl v0 , v0 , num andi v0 , v0 , hexvar lw v1 , - hexvar ( gp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v1 , ( v0 ) lbu v0 , num ( fp ) andi v0 , v0 , hexvar srlv v0 , v1 , v0 andi v0 , v0 , num sltu v0 , zero , v0 andi v0 , v0 , hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
mov eax , num test rsi , rsi je hexvar push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r15 , rdi mov rbp , rsi mov rbx , qword ptr [ rdi ] lea r13 , [ rip + hexvar ] movabs r14 , hexvar mov eax , num test rbx , rbx je hexvar movzx eax , byte ptr [ rbx ] test al , al jne hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r15 , num mov rbx , qword ptr [ r15 ] test rbx , rbx jne hexvar mov eax , num jmp hexvar bt r14 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r12d call hexvar cmp eax , - num je hexvar add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar movsx r12d , al movzx edx , al test byte ptr [ r13 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r14 push rbx push rax test rdi , rdi je hexvar mov r14 , rsi test rsi , rsi je hexvar mov rbx , rdi mov rcx , qword ptr [ rdi + hexvar ] mov eax , hexvar cmp rcx , hexvar ja hexvar mov al , hexvar sub al , cl lea rdi , [ rbx + rcx ] add rdi , hexvar mov edx , hexvar sub rdx , rcx movzx esi , al call hexvar mov rdi , rbx call hexvar mov rdi , rbx call hexvar movups xmm0 , xmmword ptr [ rbx ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov rdi , rbx call hexvar movups xmm0 , xmmword ptr [ rbx + hexvar ] movups xmmword ptr [ r14 ] , xmm0 xor eax , eax add rsp , num pop rbx pop r14 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , num movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar mov r8d , hexvar movabs r9 , hexvar movabs r10 , hexvar mov qword ptr [ rsp ] , r10 mov qword ptr [ rsp + num ] , rax mov al , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp push rbx mov ebp , edi mov r8 , rsi lea rcx , [ rip + hexvar ] sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp eax , num lea rcx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmovne rcx , rax mov rbx , rsp mov edx , hexvar mov esi , num mov rdi , rbx xor eax , eax call hexvar lea rsi , [ rip + hexvar ] xor eax , eax mov rcx , rbx mov edx , ebp mov edi , num call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbx sub rsp , hexvar mov rbx , rsi call hexvar mov qword ptr [ rsp + num ] , rax mov edx , hexvar mov ecx , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + num ] , rbx mov edx , hexvar mov eax , num nop dword ptr [ rax ] cmp edx , hexvar jg hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov edx , hexvar xor eax , eax jmp hexvar cmp qword ptr [ rsp + num ] , num mov edx , hexvar cmove edx , ecx jmp hexvar add rsp , hexvar pop rbx ret
push r14 shl rdx , num push r13 push r12 push rbp add rdi , rdx push rbx sub rsp , hexvar movzx r10d , byte ptr [ rdi + num ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp r10b , num je hexvar cmp dword ptr [ rcx + hexvar ] , num je hexvar mov rdx , qword ptr [ rcx + hexvar ] lea rax , [ r8 + num ] cmp rdx , rax jbe hexvar mov r9 , qword ptr [ rcx + hexvar ] lea r11 , [ rax * num ] cmp dword ptr [ r9 + rax * num ] , - num jne hexvar sub rdx , r8 lea r9 , [ r9 + r11 - num ] mov eax , num jmp hexvar nop word ptr [ rax + rax ] add rax , num cmp dword ptr [ r9 + rax * num - num ] , - num jne hexvar cmp rdx , rax mov ebx , eax jne hexvar cmp r10b , num je hexvar cmp r10b , num je hexvar xor ebx , ebx mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] mov eax , ebx jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbx mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax test eax , eax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ rbx ] movsxd rsi , dword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx ] , xmm0 mov qword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov dword ptr [ rax ] , num mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rax ] , num je hexvar call hexvar mov esi , dword ptr [ rax ] movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , esi call hexvar xor edi , edi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov edi , num mov qword ptr [ rbp - hexvar ] , rax call hexvar xor edi , edi mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , rax mov al , num call hexvar xor edi , edi call hexvar movabs rdi , hexvar mov esi , num call hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] lea esi , [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ ebp ] , num mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar pop ecx pop eax push edi push esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push eax push esi call hexvar add esp , hexvar test eax , eax jne hexvar xor edx , edx xor esi , esi sub esp , hexvar push edx call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar movsd xmm1 , qword ptr [ rip ] movsd qword ptr [ rbp - hexvar ] , xmm0 ucomisd xmm1 , qword ptr [ rbp - hexvar ] ja hexvar movsd xmm0 , qword ptr [ rip ] movsd xmm1 , qword ptr [ rbp - hexvar ] ucomisd xmm1 , xmm0 ja hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movaps xmm0 , xmm1 call hexvar movsd xmm1 , qword ptr [ rbp - hexvar ] ucomisd xmm1 , xmm0 jne hexvar jp hexvar jmp hexvar movsd xmm0 , qword ptr [ rip ] movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rbp - hexvar ] subsd xmm2 , xmm1 ucomisd xmm2 , xmm0 jbe hexvar mov qword ptr [ rbp - num ] , num jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip ] movaps xmm2 , xmm0 addsd xmm2 , xmm1 movsd xmm1 , qword ptr [ rip ] addsd xmm0 , xmm1 mulsd xmm2 , xmm0 divsd xmm2 , xmm1 movaps xmm0 , xmm2 call hexvar movsd xmm1 , qword ptr [ rip ] movaps xmm2 , xmm0 subsd xmm2 , xmm1 cvttsd2si rax , xmm2 movabs rcx , hexvar xor rax , rcx cvttsd2si rcx , xmm0 ucomisd xmm0 , xmm1 cmovb rax , rcx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ eax + num ] test eax , eax je hexvar sub esp , num push dword ptr [ ebx + hexvar ] push eax call hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + num ] , num add esp , hexvar add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp sw a1 , hexvar ( fp ) sw a0 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar xor eax , eax mov cl , al cmp dword ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar xor ecx , ecx mov dl , cl cmp rax , - num mov byte ptr [ rbp - hexvar ] , dl je hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] cmp dword ptr [ ecx + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebx sub esp , num call hexvar add eax , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov ebx , eax call hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov eax , num jmp hexvar mov eax , num add esp , num pop ebx ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r0 ldr r0 , [ pc , hexvar ] sub sp , sp , hexvar ldr r4 , [ r0 ] mov fp , r1 cmp r4 , num mov r8 , r2 str r3 , [ sp , hexvar ] add r7 , r6 , num add sb , r6 , num beq hexvar mov r5 , num mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar mov r3 , fp str r0 , [ sp , num ] str r8 , [ sp ] str r5 , [ sp , num ] mov r2 , sb mov r1 , r7 mov r0 , r5 bl hexvar subs r3 , r0 , num str r3 , [ sp , hexvar ] beq hexvar lsr r8 , r8 , num mov r0 , r8 mov r1 , hexvar bl hexvar subs sl , r0 , num beq hexvar cmp r8 , num beq hexvar mov fp , sl mov r6 , num mov r7 , num ldr r3 , [ sp , hexvar ] ldr r5 , [ pc , hexvar ] add sb , r3 , r8 , lsl num add sb , sb , num add r4 , r3 , num ldr r3 , [ r5 ] sub r0 , r4 , num mov r1 , num blx r3 ldr r3 , [ r5 ] stm fp , { r0 , r1 } mov r0 , r4 mov r1 , num blx r3 add r4 , r4 , num cmp sb , r4 str r0 , [ fp , num ] str r1 , [ fp , hexvar ] str r6 , [ fp , hexvar ] str r7 , [ fp , hexvar ] add fp , fp , hexvar bne hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r4 , num mov r0 , r4 ldr r3 , [ sp , hexvar ] str sl , [ r3 ] ldr r3 , [ sp , hexvar ] str r8 , [ r3 ] add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } eorseq r8 , r4 , r2 , ror num andeq r0 , r0 , r0
mov eax , num cmp qword ptr [ rdi + hexvar ] , - num je hexvar push r14 push r13 push r12 push rbp push rbx mov rbp , rsi mov rbx , rdi mov r12 , qword ptr [ rdi + num ] movzx eax , byte ptr [ rdi + hexvar ] shr al , num and eax , num cmp al , num jbe hexvar mov esi , hexvar mov rdi , r12 call hexvar test rax , rax je hexvar sub rax , r12 mov r13 , rax lea rdi , [ rax + num ] call hexvar mov r14 , rax test rax , rax je hexvar mov rdx , r13 mov rsi , r12 mov rdi , rax call hexvar mov byte ptr [ r14 + r13 ] , num mov rdi , r14 call hexvar mov rdx , qword ptr [ rbp ] lea rcx , [ rdx + num ] mov qword ptr [ rbp ] , rcx mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + hexvar ] , rax mov rdi , r14 call hexvar mov eax , num jmp hexvar mov dword ptr [ rbp + num ] , num mov eax , num jmp hexvar mov rdi , r12 call hexvar mov rdx , qword ptr [ rbp ] lea rcx , [ rdx + num ] mov qword ptr [ rbp ] , rcx mov qword ptr [ rdx ] , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , lr } mov r6 , r2 ldr r3 , [ r0 , hexvar ] lsr r3 , r3 , num bic r2 , r3 , hexvar tst r2 , hexvar beq hexvar mov r4 , r0 mov r5 , r1 bic r3 , r2 , hexvar ldr r2 , [ r0 , num ] ldr r1 , [ r2 , num ] cmp r1 , num popne { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 svclo hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov dword ptr [ rsp + num ] , edi mov r13 , rsi mov r14 , rdx mov r15 , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov dword ptr [ rsp + hexvar ] , num mov ebx , edi sub ebx , num js hexvar movsxd rax , ebx mov rax , qword ptr [ rsi + rax * num ] cmp byte ptr [ rax ] , hexvar je hexvar jmp hexvar movsxd rax , ebx mov rax , qword ptr [ r13 + rax * num ] cmp byte ptr [ rax ] , hexvar je hexvar test ebx , ebx jg hexvar mov ebp , num mov ebx , num jmp hexvar sub ebx , num cmp ebx , - num jne hexvar mov ebp , num mov ebx , num jmp hexvar lea r12 , [ r13 + num ] lea eax , [ rbx - num ] lea rax , [ r13 + rax * num + hexvar ] mov qword ptr [ rsp + num ] , rax mov ebp , num cmp dword ptr [ rsp + hexvar ] , num jne hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov rax , qword ptr [ r12 ] cmp byte ptr [ rax ] , hexvar je hexvar mov esi , ebp lea rdi , [ rsp + hexvar ] call hexvar cmp ebp , eax cmovl ebp , eax add r12 , num cmp r12 , qword ptr [ rsp + num ] jne hexvar lea rdi , [ rsp + hexvar ] call hexvar cmp dword ptr [ rsp + num ] , ebx jle hexvar movsxd rax , ebx mov rdi , qword ptr [ r13 + rax * num ] mov rdx , r15 lea rsi , [ rsp + hexvar ] call r14
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] and eax , num add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rdi + hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , num add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jb hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dx , word ptr [ ecx ] mov si , word ptr [ eax ] sub si , dx setne bl movzx eax , bl cmp eax , num mov word ptr [ ebp - hexvar ] , si je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ hexvar ] jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar cmp eax , num jne hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ hexvar ] jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar cmp eax , num jne hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ hexvar ] jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar cmp eax , num jne hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push { r4 , r5 } ldrb r4 , [ r0 , num ] ldrb r2 , [ r0 , num ] lsl r2 , r2 , hexvar orr r2 , r2 , r4 , lsl num ldrb r4 , [ r0 ] orr r2 , r2 , r4 ldrb r0 , [ r0 , num ] orr r0 , r2 , r0 , lsl num pop { r4 , r5 } bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - num ] cmp edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jge hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp - num ] setg cl and cl , num movzx eax , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edi mov edi , dword ptr [ esp + hexvar ] add ebp , esi test edi , edi js hexvar cmp dword ptr [ esp + hexvar ] , ecx jg hexvar cmp ebp , ecx mov edi , ecx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , eax jg hexvar test esi , esi js hexvar cmp dword ptr [ esp + hexvar ] , ebp jg hexvar test ebp , ebp js hexvar test esi , esi jns hexvar cmp dword ptr [ esp + hexvar ] , ebp jle hexvar mov esi , dword ptr [ esp + num ] movzx eax , byte ptr [ esi + hexvar ] mov edx , eax shr dl , num mov ecx , edx and ecx , num cmp ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx jle hexvar mov ecx , dword ptr [ esi + hexvar ] test ecx , ecx je hexvar test al , num je hexvar test al , hexvar jne hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ esp + num ] and eax , num cmp al , num mov edx , dword ptr [ edx + hexvar ] je hexvar lea ecx , [ edx + num ] mov esi , ecx lea eax , [ ecx * num ] mov dword ptr [ esp + hexvar ] , ecx sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push eax mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push ecx push dword ptr [ esp + hexvar ] push ebp push dword ptr [ esp + hexvar ] push edi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ esp + hexvar ] je hexvar cmp eax , num mov esi , hexvar je hexvar mov esi , hexvar sub esp , hexvar push edx call hexvar add esp , hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r4 , r1 sub sp , sp , num mov r7 , r0 ldr r1 , [ sp , hexvar ] mov r0 , r4 mov r8 , r3 blx r2 subs r6 , r0 , num beq hexvar mov r0 , r7 bl hexvar mov r4 , r0 bl hexvar subs r5 , r0 , num beq hexvar sub r3 , r5 , num ldrb r2 , [ r4 , r3 ] add r3 , r4 , r3 cmp r2 , hexvar bne hexvar b hexvar ldrb r2 , [ r3 , - num ] ! cmp r2 , hexvar beq hexvar cmp r3 , r4 sub r5 , r3 , r4 bne hexvar mov r2 , r4 mov r5 , num mov r3 , num mov r0 , r6 strb r3 , [ r2 ] bl hexvar mov sb , r0 add r0 , r0 , r5 add r0 , r0 , hexvar bl hexvar subs r5 , r0 , num beq hexvar add r2 , sb , num mov r1 , r6 bl hexvar ldr r1 , [ sp , hexvar ] mov r0 , r5 blx r8 cmp r0 , num bne hexvar ldr r3 , [ pc , hexvar ] mvn r2 , num mov r1 , num str r6 , [ sp ] mov r0 , r5 bl hexvar ldr r1 , [ sp , hexvar ] mov r0 , r5 blx r8 cmp r0 , num beq hexvar mov r0 , r4 bl hexvar mov r0 , r5 bl hexvar ldr r6 , [ pc , hexvar ] cmp r0 , num mov r8 , r0 mov r2 , num str r0 , [ r6 , hexvar ] beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r3 , r5 mov r1 , r0 mov r2 , r7 mov r0 , num bl hexvar ldr r8 , [ r6 , hexvar ] str r5 , [ r6 , hexvar ] mov r0 , r8 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push r15 push r14 mov r14 , rdi push r13 push r12 mov r12 , rsi push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp + hexvar ] , num call hexvar test byte ptr [ r12 + hexvar ] , num mov dword ptr [ rsp + hexvar ] , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ ebp - num ] , num mov eax , hexvar mov ecx , hexvar cmovg ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test ecx , ecx sete dl test esi , esi setle bl or dl , bl jne hexvar test eax , eax je hexvar mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + hexvar ] , esi mov eax , num pop ebx pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] lea ecx , [ hexvar ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , num and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
lui gp , hexvar lw v0 , num ( a3 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , a1 sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s0 , hexvar ( a2 )
push rbp push rbx mov rbp , rsi mov rbx , rdx sub rsp , num mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num je hexvar call hexvar cmp eax , hexvar setbe al movzx eax , al test eax , eax mov ecx , ebx lea rdx , [ rip + hexvar ] jne hexvar lea rdx , [ rip + hexvar ] mov rcx , rbx add rsp , num mov rdi , rbp mov esi , num pop rbx pop rbp xor eax , eax jmp hexvar mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp byte ptr [ rax + hexvar ] , num sete al movzx eax , al jmp hexvar nop word ptr [ rax + rax ]
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r1 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] smull r3 , r4 , r1 , r2 asr r2 , r4 , num asr r3 , r1 , hexvar sub r2 , r2 , r3 mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 lsl r3 , r3 , num sub r2 , r1 , r3 cmp r2 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar mov r3 , num b hexvar ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] add r3 , r2 , r3 ldrb r3 , [ r3 ] mov r1 , r3 ldr r3 , [ sp , hexvar ] add r3 , r3 , num ldr r2 , [ sp , hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] mov r2 , r1 ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 blt hexvar mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { r4 , pc } andeq r0 , r0 , sl , ror num andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar lw s0 , hexvar ( sp ) move a1 , zero jr t9 addiu sp , sp , hexvar lui a2 , hexvar lw t9 , - hexvar ( gp ) lui a0 , hexvar addiu a2 , a2 , hexvar addiu a1 , zero , hexvar jalr t9 addiu a0 , a0 , hexvar move a0 , s0 lw gp , hexvar ( sp ) addiu a2 , zero , hexvar lw ra , hexvar ( sp ) move a1 , zero lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push r15 push r14 mov r14 , rdi push r13 push r12 push rbp push rbx sub rsp , hexvar test rsi , rsi mov qword ptr [ rsp + num ] , rdi je hexvar mov r12 , rsi mov rbp , rsi mov rbx , rsi lea r13 , [ rsp + num ] jmp hexvar nop cmp rax , rbp je hexvar test rax , rax mov rbp , rbx je hexvar mov rbx , rax mov rsi , rbx mov rdi , r13 call hexvar test rax , rax mov r15 , rax je hexvar mov rax , qword ptr [ rsp + num ] mov edi , dword ptr [ r15 + num ] mov rax , qword ptr [ rax ] call qword ptr [ rax ] sub eax , hexvar cmp eax , num ja hexvar mov eax , dword ptr [ r15 + num ] cmp rax , rbx sete cl cmp rax , r12 sete dl or cl , dl je hexvar lea rdi , [ rip + hexvar ] mov rsi , r12 xor eax , eax call hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rbx , rax add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r12 push rbp mov r12 , rcx push rbx mov rbp , rsi mov ebx , edx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax js hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
sub rsp , num mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl mov eax , dword ptr [ rip + hexvar ] and eax , hexvar or dword ptr [ rip + hexvar ] , eax cmp dword ptr [ rip + hexvar ] , num je hexvar test sil , num jne hexvar movsxd rdi , edi mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + rdi * num - hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx edx , byte ptr [ rip + hexvar ] mov byte ptr [ rax ] , dl mov byte ptr [ rax + num ] , num add rsp , num ret
push { r4 , r5 , r6 , lr } mov r6 , r1 mov r5 , r0 ldr r3 , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] ldr r0 , [ r3 ] bl hexvar ldr r3 , [ pc , hexvar ] ldr r0 , [ r4 ] ldr r3 , [ r3 ] ldr r2 , [ pc , hexvar ] mov r1 , num bl hexvar mov r3 , r6 mov r2 , r5 ldr r0 , [ r4 ] mov r1 , num bl hexvar ldr r1 , [ r4 ] mov r0 , hexvar pop { r4 , r5 , r6 , lr } b hexvar andseq sl , r8 , ip , lsl r2 andseq sl , r8 , r8 , lsl r2 andseq r1 , sb , r8 , lsr num andseq r3 , r3 , r0 , lsr r8
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - num ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ esp ] , hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num mov eax , hexvar mov ecx , hexvar cmova ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r4 , r2 ldr r2 , [ r2 , num ] add r3 , r1 , num ldr r5 , [ r4 , num ] add r3 , r3 , r2 cmp r3 , r5 mov r6 , r1 mov r8 , r0 ldr r7 , [ r4 , hexvar ] bhi hexvar cmp r7 , num popne { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldm r4 , { r0 , r3 } mov r2 , r6 add r0 , r0 , r3 mov r1 , r8 bl hexvar ldr r3 , [ r4 ] ldr r2 , [ r4 , num ] add r3 , r3 , r6 strb r7 , [ r3 , r2 ] ldr r3 , [ r4 , num ] add r6 , r3 , r6 str r6 , [ r4 , num ] pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
movzx ecx , byte ptr [ rdi ] xor edx , edx test cl , cl je hexvar nop dword ptr [ rax ] mov rax , rdx add rdi , num shl rax , num sub rax , rdx xor edx , edx add rax , rcx movzx ecx , byte ptr [ rdi ] div rsi test cl , cl jne hexvar mov rax , rdx ret
mov rax , qword ptr [ rdi ] mov qword ptr [ rdi ] , rsi mov qword ptr [ rsi ] , rax mov qword ptr [ rsi + num ] , num test rax , rax je hexvar mov qword ptr [ rax + num ] , rsi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw zero , hexvar ( sp ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) nop lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) sw zero , ( v0 ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar addiu a2 , zero , hexvar move a1 , zero move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx lea rbx , [ rip - hexvar ] mov ebp , esi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rip - hexvar ] test edx , edx cmovne rbx , rax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx jne hexvar cmp qword ptr [ rip + hexvar ] , - num jne hexvar mov rdx , r12 lea rsi , [ rip + hexvar ] mov edi , ebp call rbx mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm3 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] movsd xmm3 , qword ptr [ rbp - hexvar ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar mov rsi , rdx mov edx , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar cmp eax , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar cmp eax , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgtz v0 , hexvar nop move v0 , zero b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 )
sub esp , hexvar call hexvar add eax , hexvar cmp byte ptr [ eax + hexvar ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r9 mov r13d , r8d mov rbx , rcx mov r12 , rsi cmp byte ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rsp ] , rdx mov rdi , qword ptr [ rip + hexvar ] xor ebp , ebp mov esi , hexvar xor eax , eax call hexvar test r13d , r13d je hexvar nop test ebp , ebp je hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] lea esi , [ rbp + num ] add rsi , rbx mov r15d , ebp movzx edx , byte ptr [ rbx + r15 ] call hexvar movzx eax , byte ptr [ rbx + r15 ] lea ebp , [ rax + rbp ] add ebp , num cmp ebp , r13d jb hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar mov edx , num call hexvar mov rdx , qword ptr [ rsp ] mov r8 , qword ptr [ r14 ] movzx r9d , word ptr [ r14 + num ] mov rdi , r12 mov rsi , rdx mov rdx , rbx mov ecx , r13d call hexvar mov dword ptr [ r14 + hexvar ] , eax xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - num ] sub esp , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar and al , num movzx eax , al mov esp , ebp pop ebp ret
push r13 push r12 mov r13 , r8 push rbp push rbx mov rbp , rdx mov r12 , rcx sub rsp , hexvar test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edi , num mov ebx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] mov dword ptr [ rip + hexvar ] , ebx mov dword ptr [ rip + hexvar ] , num jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rdx , rdi mov edi , hexvar mov esi , hexvar mov ecx , hexvar mov r8d , num xor r9d , r9d jmp hexvar mov eax , num ret
ldr r3 , [ pc , hexvar ] add ip , r1 , num push { r4 , r5 , r6 , r7 , r8 , lr } umull r4 , r5 , ip , r3 lsr r5 , r5 , num lsl r5 , r5 , num add r4 , r5 , num cmp r1 , r4 bls hexvar mov r4 , num str r4 , [ r2 ] mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , hexvar add ecx , - num sub ecx , hexvar mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - num ] , cl mov dword ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp - hexvar ] , num jge hexvar movzx eax , byte ptr [ ebp - num ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , num xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov bl , cl mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , num mov dword ptr [ ebp + hexvar ] , ecx mov byte ptr [ eax ] , bl movzx eax , byte ptr [ ebp - num ] sar eax , num mov bl , al mov byte ptr [ ebp - num ] , bl xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , eax sub edx , ecx mov ecx , eax sub ecx , num add edx , ecx sub eax , edx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] sub eax , num mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar add esp , hexvar pop esi pop ebx pop ebp ret
push r15 push r14 mov r15 , rdi push r13 push r12 mov r13 , rsi push rbp push rbx mov r14d , r8d sub rsp , hexvar mov rbx , qword ptr [ rdx + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp ] , r9 mov rbp , qword ptr [ rbx + hexvar ] mov rsi , rbx mov rdi , rbp call hexvar test rax , rax js hexvar lea rdx , [ rsp + hexvar ] mov rsi , rbx mov rdi , rbp mov r12 , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax je hexvar test r12 , r12 jne hexvar mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp push r14 push rbx mov ebp , edx mov r14 , rdi test rsi , rsi je hexvar mov rdi , rsi call hexvar test rax , rax je hexvar mov rbx , rax test bpl , hexvar jne hexvar mov rdi , rbx xor esi , esi call hexvar test ebp , hexvar jne hexvar mov rdi , rbx mov rsi , r14 xor edx , edx mov ecx , ebp call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar jmp hexvar call hexvar mov rsi , rax mov rdi , rsi call hexvar test rax , rax jne hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r7 , num bic r5 , r0 , hexvar cmp r7 , r1 cmpeq r5 , r0 mov r6 , r2 mov r4 , r3 bne hexvar cmp r2 , num moveq r2 , num bne hexvar mov r3 , r5 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r1 , [ pc , hexvar ] mov r0 , num b hexvar ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar sub r2 , r4 , num and r2 , r2 , num add r2 , r2 , num b hexvar mov sb , num lsr r8 , r1 , hexvar orrs r2 , r8 , sb lsr r7 , r0 , hexvar orr r7 , r7 , r1 , lsl num lsr r8 , r1 , hexvar add sb , r6 , num bne hexvar mov r2 , sb mov r0 , r7 mov r1 , r8 bl hexvar mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r2 , num b hexvar mov r0 , hexvar bl hexvar mov r3 , r4 mov r2 , sb mov r0 , r7 mov r1 , r8 bl hexvar add r2 , r6 , num ldr r3 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar b hexvar andeq r0 , r1 , r4 , asr lr andeq r0 , r1 , r4 , asr num andeq r0 , r1 , r8 , lsr lr andeq r0 , r1 , ip , lsl pc andeq r0 , r1 , r0 , lsr lr
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov sl , r3 mov r3 , num mov r7 , r0 mov sb , r2 add r0 , r0 , hexvar mov r2 , r3 mov r8 , r1 bl hexvar subs r4 , r0 , num beq hexvar ldr r5 , [ r4 , num ] mov r3 , r5 b hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar ldr r3 , [ r4 , num ] cmp r3 , r5 bne hexvar mov r1 , r8 ldr r0 , [ r4 , num ] bl hexvar cmp r0 , num add r6 , r4 , hexvar bne hexvar mov r2 , sl mov r1 , r6 mov r0 , r7 blx sb cmp r0 , num beq hexvar mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] test eax , eax mov dword ptr [ ebp - num ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar cmp dword ptr [ hexvar ] , num sete al and al , num mov byte ptr [ ebp - num ] , al jmp hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx add edx , - hexvar sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - hexvar sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
test edx , edx jle hexvar push r13 push r12 mov r13 , rdi push rbp push rbx mov rbp , rsi mov ebx , edx xor r12d , r12d sub rsp , num jmp hexvar nop dword ptr [ rax + rax ] je hexvar movsxd rdx , eax sub ebx , eax add r12d , eax add rbp , rdx test ebx , ebx jle hexvar mov edi , dword ptr [ r13 ] movsxd rdx , ebx mov rsi , rbp call hexvar test eax , eax mov edx , eax jns hexvar add rsp , num mov eax , edx pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a1 , zero , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) addiu a1 , zero , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar sw zero , hexvar ( v0 ) addiu v0 , v0 , hexvar sw zero , num ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ eax ] mov dword ptr [ eax ] , num mov esp , ebp pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] add rdi , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rcx , qword ptr [ rdi + hexvar ] shl rax , cl mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , num mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a3 , zero lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] jae hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ecx + edx * num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movsx ecx , byte ptr [ ebp + hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , num jge hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , lr } subs r5 , r1 , num popeq { r4 , r5 , r6 , pc } ldrb r3 , [ r5 ] cmp r3 , num popeq { r4 , r5 , r6 , pc } mov r4 , r0 mov r0 , r5 bl hexvar subs r6 , r0 , num popeq { r4 , r5 , r6 , pc } mov r1 , r6 mov r0 , r4 bl hexvar ldr r2 , [ r4 , num ] sub r3 , r2 , num ldr r0 , [ r4 ] cmp r3 , r0 blo hexvar add r2 , r2 , r6 ldrb r1 , [ r3 ] , - num strb r1 , [ r2 , - num ] ! ldr r0 , [ r4 ] cmp r0 , r3 bls hexvar mov r2 , r6 mov r1 , r5 bl hexvar ldr r3 , [ r4 , num ] add r6 , r3 , r6 str r6 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r12d , r8d mov r13 , rcx mov ebp , edx mov rbx , rsi mov r14 , rdi mov rdi , rsi xor esi , esi call hexvar test rax , rax je hexvar mov r15 , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ rax ] call hexvar mov rdi , r15 call hexvar mov qword ptr [ rbx ] , rax mov rdi , rbx mov esi , ebp mov rdx , r13 mov ecx , r12d call hexvar test eax , eax je hexvar mov rdi , r15 call hexvar mov rdi , r14 mov rsi , rbx call hexvar mov rbp , rax mov rdi , rbx call hexvar mov rax , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov esi , hexvar mov edi , num mov rdx , rbx xor eax , eax call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov rdi , rbx call hexvar mov rdi , r15 call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbx mov esi , hexvar mov rbx , rdi mov edi , num sub rsp , hexvar mov rdx , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov rax , rbx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
sub sp , sp , num str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] ldr r3 , [ r3 , hexvar ] b hexvar mov r3 , num mov r0 , r3 add sp , sp , num bx lr
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax ] , ebx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ edx ] , eax mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] cmp dword ptr [ rcx ] , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , hexvar seta cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , hexvar jbe hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num seta cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx + hexvar ] , rax sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rcx mov edx , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , num add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
mov edx , hexvar sub edx , num movzx ecx , byte ptr [ eax + edx ] add ecx , num mov byte ptr [ eax + edx ] , cl test edx , edx je hexvar test cl , cl je hexvar ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + num ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx ret
push { r4 , r5 } ldrb r2 , [ r0 ] ldrb r4 , [ r0 , num ] orr r1 , r4 , r2 , lsl num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsr r3 , r1 , hexvar ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num orr r3 , r3 , r1 , lsr num ldrb r4 , [ r0 , num ] orr r1 , r4 , r1 , lsl num lsl r3 , r3 , num ldrb r4 , [ r0 , num ] orr r0 , r4 , r1 , lsl num orr r1 , r3 , r1 , lsr num pop { r4 , r5 } bx lr
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) addiu v0 , sp , hexvar lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v1 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v1 , ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr fp , [ r1 ] sub sp , sp , hexvar cmp fp , num ldr r6 , [ r0 , hexvar ] ble hexvar mov sl , r3 mov r7 , r2 mov r8 , r0 mov sb , r1 mov r4 , num b hexvar cmp r4 , fp bge hexvar ldr r3 , [ r7 ] ldr ip , [ r6 ] ldr r5 , [ r3 , r4 , lsl num ] add r4 , r4 , num add lr , ip , r5 , lsl num ldrb lr , [ lr , num ] cmp lr , num bne hexvar ldr r3 , [ ip , r5 , lsl num ] cmp r3 , hexvar bgt hexvar ldr r2 , [ r6 , hexvar ] lsr r3 , r2 , r3 tst r3 , num beq hexvar ldr fp , [ r8 , hexvar ] ldr r2 , [ r8 , hexvar ] ldr r3 , [ r8 , hexvar ] cmp fp , r2 beq hexvar mov r1 , hexvar mov r0 , num str r3 , [ sp , num ] bl hexvar ldr r3 , [ sp , num ] cmp r0 , num str r0 , [ r3 , fp , lsl num ] beq hexvar add fp , fp , num str fp , [ r8 , hexvar ] ldr fp , [ sb ] str r5 , [ r0 , num ] cmp r4 , fp str sl , [ r0 ] blt hexvar mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } and r7 , sp , hexvar ldrdeq r0 , r1 , [ r0 ] , -ip
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx sete dl mov byte ptr [ rbp - num ] , dl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] mov dword ptr [ rdi + hexvar ] , eax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] add eax , num adc edx , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar mov r3 , r0 str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar mov r3 , num str r3 , [ fp , - hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r2 , r3 ldr r3 , [ fp , - num ] str r2 , [ r3 ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] str r3 , [ r2 , hexvar ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 addiu a2 , zero , num move a1 , a0 move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s5 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s3 , v0 lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s6 , s1 move s0 , zero move s4 , zero beqz s1 , hexvar move s3 , s2 move s3 , s1 move a1 , s2 move a0 , s5 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a1 , s2 beqz s4 , hexvar nop beq s4 , s3 , hexvar move a0 , s4 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s0 , hexvar move v0 , s3 beq s0 , s3 , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s3 lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a2 , s3 lui s7 , hexvar addiu a1 , s7 , - hexvar move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s4 , v0 move a0 , s3 lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , zero , hexvar sb v0 , hexvar ( fp ) addiu v0 , zero , hexvar sb v0 , hexvar ( fp ) sb zero , hexvar ( fp ) sb zero , hexvar ( fp ) addiu v0 , fp , hexvar lw a3 , hexvar ( fp ) addiu a2 , zero , num addiu a1 , zero , num move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop lw v0 , - hexvar ( gp ) lw v1 , hexvar ( fp ) lw v0 , ( v0 ) beq v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov dword ptr [ rsp - num ] , edi mov dword ptr [ rsp - num ] , esi mov esi , dword ptr [ rsp - num ] shr esi , num and esi , hexvar mov dword ptr [ rsp - hexvar ] , esi mov esi , dword ptr [ rsp - num ] and esi , hexvar mov dword ptr [ rsp - hexvar ] , esi mov esi , dword ptr [ rsp - hexvar ] mov eax , esi mov esi , dword ptr [ rax * num ] xor esi , dword ptr [ rsp - hexvar ] mov dword ptr [ rsp - hexvar ] , esi mov esi , dword ptr [ rsp - hexvar ] mov eax , esi mov esi , dword ptr [ rax * num ] mov edi , dword ptr [ rsp - hexvar ] and edi , hexvar xor esi , edi mov dword ptr [ rsp - hexvar ] , esi mov esi , dword ptr [ rsp - num ] shr esi , num xor esi , dword ptr [ rsp - hexvar ] mov dword ptr [ rsp - hexvar ] , esi mov esi , dword ptr [ rsp - num ] and esi , hexvar xor esi , dword ptr [ rsp - hexvar ] mov dword ptr [ rsp - hexvar ] , esi mov esi , dword ptr [ rsp - hexvar ] mov eax , esi mov esi , dword ptr [ rax * num ] xor esi , dword ptr [ rsp - hexvar ] mov dword ptr [ rsp - hexvar ] , esi mov esi , dword ptr [ rsp - hexvar ] mov eax , esi mov esi , dword ptr [ rax * num ] mov edi , dword ptr [ rsp - hexvar ] and edi , hexvar xor esi , edi mov dword ptr [ rsp - hexvar ] , esi mov esi , dword ptr [ rsp - hexvar ] shl esi , num add esi , dword ptr [ rsp - hexvar ] mov eax , esi ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r7 , [ r1 , hexvar ] sub sp , sp , hexvar ldr r3 , [ r7 , hexvar ] cmp r3 , num beq hexvar mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , r8 mov r13 , rcx mov qword ptr [ rsp + hexvar ] , rdx mov r12 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor r14d , r14d test rbp , rbp je hexvar xor r15d , r15d mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax jne hexvar xor r13d , r13d test r15 , r15 je hexvar mov rdi , r15 call hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar jmp hexvar call hexvar mov rbp , rax mov r15 , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , r13 call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r12 mov rdx , rbp call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdx , r13 add rdx , num mov rdi , r14 mov rsi , rax mov rcx , r13 mov r8 , rbp call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , r14 mov rdi , rbx mov rsi , r12 mov rdx , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov r8 , rbp call hexvar xor r14d , r14d test eax , eax je hexvar xor r13d , r13d mov r14d , eax test r15 , r15 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d test r15 , r15 jne hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v0 , hexvar sw s4 , hexvar ( sp ) lw s4 , - hexvar ( gp ) sw s0 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 sw ra , hexvar ( sp ) lw v1 , ( s4 ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw v1 , hexvar ( sp ) lw s0 , - hexvar ( v0 ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) addiu v1 , s0 , num beq a0 , v1 , hexvar sw gp , hexvar ( sp ) lw v0 , ( s0 ) addiu v1 , v0 , num beq v1 , s3 , hexvar move s2 , s0 move s0 , v0 lw v0 , ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s0 , hexvar ( sp ) addiu a0 , zero , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a1 , s1 , - hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar move a1 , zero jalr t9 move a0 , v0 addiu v0 , zero , num lw gp , hexvar ( sp ) move a0 , zero sw v0 , hexvar ( s0 ) sw v0 , hexvar ( s0 ) addiu v0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( s0 ) addiu a2 , s0 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num sw v0 , hexvar ( s0 ) move a1 , s0 sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) lw t9 , - hexvar ( gp ) bal hexvar sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) lw ra , hexvar ( sp ) move v0 , s0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , s1 , - hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar b hexvar lw ra , hexvar ( sp )
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rdx mov ecx , num mov edx , num mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] lea rcx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov edx , num mov esi , hexvar mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ hexvar ] mov ebx , dword ptr [ hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar xor ecx , ecx cmp ecx , eax sete al and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov eax , num test byte ptr [ rsi + hexvar ] , num jne hexvar ret sub rsp , num mov r9d , num call hexvar mov eax , num add rsp , num ret
push r15 push r14 push rbx test rdi , rdi je hexvar mov r15 , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx pop r14 pop r15 ret
push { r4 , lr } ldr r3 , [ r0 ] mov r4 , r2 cmp r3 , num movhi ip , num movls ip , num cmp r2 , num movne r2 , ip moveq r2 , num cmp r2 , num moveq r2 , num beq hexvar sub r1 , r1 , num mov r2 , num b hexvar add r2 , r2 , num cmp r4 , r2 movls ip , num movhi ip , num cmp r3 , num movhi ip , num cmp ip , num beq hexvar ldrb ip , [ r1 , num ] ! cmp r3 , num movlo lr , num movhs lr , hexvar cmp ip , lr addeq r3 , r3 , num beq hexvar cmp ip , num rsbeq r3 , r3 , num movne r3 , num b hexvar str r3 , [ r0 ] mov r0 , r2 pop { r4 , pc }
sub r3 , r0 , hexvar cmp r3 , hexvar ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq r1 , r1 , r0 , asr r5 andeq r1 , r1 , r8 , asr r5 andeq r1 , r1 , r0 , ror num andeq r1 , r1 , r8 , ror num andeq r1 , r1 , r0 , ror r5 andeq r1 , r1 , r8 , ror r5 andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , lsl num andeq r1 , r1 , r0 , asr r5 andeq r1 , r1 , r8 , asr r5 andeq r1 , r1 , r0 , ror num andeq r1 , r1 , r8 , ror num andeq r1 , r1 , r0 , ror r5 andeq r1 , r1 , r8 , ror r5 mov r0 , hexvar bx lr mov r0 , hexvar bx lr mov r0 , hexvar bx lr mov r0 , hexvar bx lr mov r0 , hexvar bx lr mov r0 , hexvar bx lr sub r0 , r0 , hexvar bx lr
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar nop dword ptr [ eax ]
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp + num ] add eax , edx mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp - num ] lea ecx , [ eax * num ] mov eax , dword ptr [ ebp + num ] add eax , ecx not edx mov dword ptr [ eax ] , edx add dword ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num jle hexvar nop leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp + num ] , num cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , num mov eax , hexvar cmovl ecx , eax mov eax , ecx add esp , hexvar pop ebp ret
addiu v0 , zero , hexvar beq a0 , v0 , hexvar addiu v0 , zero , num slti v0 , a0 , hexvar beqz v0 , hexvar addiu v0 , zero , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar addiu v0 , zero , num addiu v0 , zero , hexvar beq a0 , v0 , hexvar nop move v0 , zero jr ra nop beq a0 , v0 , hexvar addiu v0 , zero , num slti v0 , a0 , hexvar bnez v0 , hexvar addiu a0 , a0 , - hexvar sltiu a0 , a0 , num beqz a0 , hexvar nop jr ra addiu v0 , zero , num
push rbp push rbx push rax mov rax , rsi mov rcx , qword ptr [ rsi ] test ecx , hexvar je hexvar mov ebp , edx mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rdi ] add rax , qword ptr [ rbx + num ] je hexvar mov rdi , qword ptr [ rax ] test ecx , hexvar jne hexvar call hexvar mov rcx , rax mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx jg hexvar jmp hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax jne hexvar jmp hexvar call hexvar movsxd rcx , eax mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx jle hexvar mov rax , qword ptr [ rbx + hexvar ] add rax , num xor esi , esi nop word ptr cs : [ rax + rax ] nop cmp qword ptr [ rax - num ] , rcx je hexvar add rsi , num add rax , hexvar cmp rdx , rsi jg hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , num jne hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push edi push ebx sub esp , num mov edx , dword ptr [ esp + hexvar ] mov ecx , hexvar mov eax , num mov edi , edx repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub eax , num push eax push edx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop edi ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov edi , ecx mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx push esi call hexvar add esp , hexvar cmp eax , hexvar jg hexvar lea eax , [ esp + hexvar ] call hexvar test eax , eax jne hexvar sub esp , num push num push dword ptr [ esp + hexvar ] push esi push edi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] call hexvar mov edx , eax mov eax , num test edx , edx je hexvar sub esp , hexvar push hexvar lea ecx , [ ebx - hexvar ] mov edx , hexvar mov eax , hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar sub esp , hexvar push hexvar lea ecx , [ ebx - hexvar ] mov edx , hexvar mov eax , hexvar call hexvar mov dword ptr [ esp ] , ebp push esi push edi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ ebp - num ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] cmp r3 , hexvar bhs hexvar ldr r3 , [ fp , - num ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - num ] str r2 , [ r3 , hexvar ] b hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] cmp r3 , hexvar bls hexvar ldr r3 , [ fp , - num ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - num ] str r2 , [ r3 , hexvar ] b hexvar ldr r3 , [ fp , - num ] mov r2 , hexvar str r2 , [ r3 , hexvar ] mov r0 , r0 add sp , fp , num pop { fp } bx lr
test rcx , rcx je hexvar test rsi , rsi mov rax , rdx je hexvar bsr r10 , rcx bsr rdx , rsi xor r10d , hexvar xor edx , hexvar mov r9 , rcx sub r10d , edx mov rdx , r8 mov ecx , r10d shl r9 , cl mov ecx , hexvar sub ecx , r10d shr rdx , cl mov ecx , r10d or r9 , rdx shl r8 , cl test r10d , r10d jle hexvar xor edx , edx nop word ptr [ rax + rax ] cmp rsi , r9 ja hexvar jne hexvar cmp rax , r8 jb hexvar sub rax , r8 sbb rsi , r9 mov rcx , r9 shr r8 , num add edx , num shl rcx , hexvar shr r9 , num or r8 , rcx cmp r10d , edx jne hexvar mov qword ptr [ rdi ] , rsi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) move s7 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( s7 )
push r15 push r14 push r13 push r12 mov r13 , rsi push rbp push rbx sub rsp , num mov r14 , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rdi + hexvar ] mov rdi , rsi call hexvar sub ebx , r14d mov r12 , rax mov rbp , qword ptr [ rip + hexvar ] lea r15 , [ rbx + rax + num ] cmp qword ptr [ rip + hexvar ] , r15 jb hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , r13 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar test rbx , rbx jne hexvar mov rdx , rbx mov rsi , r14 mov rdi , rbp call hexvar lea rdx , [ r12 + num ] mov rsi , r13 mov rdi , rax call hexvar mov rdi , rbp call hexvar add rax , num cmp rax , r15 jne hexvar add rsp , num mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rdx mov rbx , rsi mov r14 , rdi mov r12 , qword ptr [ rsi + hexvar ] mov eax , hexvar xor ebp , ebp jmp hexvar mov ebp , dword ptr [ rsp + hexvar ] add ebp , num mov eax , hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov dword ptr [ rsp + hexvar ] , ebp mov qword ptr [ rsp + hexvar ] , r12 mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] cmp ecx , eax mov eax , hexvar mov ecx , hexvar cmovl eax , ecx jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov r13 , qword ptr [ rsp + hexvar ] jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] mov esi , dword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rsp + hexvar ] , rax mov rdx , qword ptr [ rsp + hexvar ] mov rdi , rbx mov rsi , r15 call qword ptr [ rbx + hexvar ] test eax , eax mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov eax , hexvar xor r13d , r13d jmp hexvar mov qword ptr [ rsp + hexvar ] , r13 mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r14 ] , rax mov eax , hexvar mov ebp , hexvar jmp hexvar mov eax , hexvar xor ebx , ebx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , ebp jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] add rdi , hexvar mov ebx , num mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov eax , hexvar jmp hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
ldrb r3 , [ r0 ] and r3 , r3 , num cmp r3 , num bxeq lr push { r4 , r5 , r6 , lr } mov r3 , num mov r5 , r0 ldr r6 , [ pc , hexvar ] b hexvar mov r1 , r6 ldr r0 , [ r5 , hexvar ] bl hexvar cmp r0 , num ldrne r3 , [ r0 , hexvar ] orrne r3 , r3 , hexvar strne r3 , [ r0 , hexvar ] mov r3 , r4 cmp r3 , hexvar add r4 , r3 , num beq hexvar cmp r4 , hexvar bls hexvar pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , esi mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edi ] , ebx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov al , num and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ecx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ ecx ] mov edx , dword ptr [ edx + eax * num ] test edx , edx je hexvar add eax , num mov dword ptr [ ecx ] , eax movzx eax , byte ptr [ edx ] cmp al , hexvar je hexvar cmp al , hexvar je hexvar mov edi , num lea eax , [ ebx - hexvar ] sub esp , hexvar push eax lea eax , [ esp + hexvar ] push eax push hexvar lea eax , [ esp + hexvar ] push eax push edx call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push esi call hexvar lea ecx , [ ebx + hexvar ] mov esi , eax mov dword ptr [ eax + hexvar ] , edi mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test byte ptr [ ecx + hexvar ] , num mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + hexvar ] , eax jne hexvar cmp eax , num ja hexvar cmp edx , hexvar ja hexvar fld dword ptr [ ebx - hexvar ] fstp dword ptr [ esi + hexvar ] mov eax , num mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea edi , [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push edi call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax je hexvar lea esi , [ ebx - hexvar ] push hexvar push esi push hexvar push num call hexvar pop ebp lea ebp , [ ebx + hexvar ] pop eax push edi push ebp call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + hexvar ] , eax sete al movzx eax , al mov dword ptr [ esp + num ] , eax push hexvar push esi push hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar lea esi , [ esi ] fld dword ptr [ ebx - hexvar ] fld qword ptr [ ebx + hexvar ] xor eax , eax mov edx , dword ptr [ esp + num ] fucomip st ( num ) fstp st ( num ) setae al test edx , edx jne hexvar mov dword ptr [ esp + num ] , eax push hexvar push esi push hexvar push hexvar mov dword ptr [ ebx + hexvar ] , num call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) addiu v0 , zero , hexvar sb v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v1 , hexvar ( sp ) lui v0 , hexvar and v1 , v1 , v0 lui v0 , num bne v1 , v0 , hexvar nop addiu v0 , zero , hexvar sb v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) andi v0 , v0 , num bnez v0 , hexvar nop addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) blez v0 , hexvar nop addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) blez v0 , hexvar nop lw v0 , hexvar ( sp ) andi v0 , v0 , num bnez v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ hexvar ] , eax test byte ptr [ hexvar ] , num je hexvar movsd xmm0 , qword ptr [ hexvar ] movsd qword ptr [ hexvar ] , xmm0 jmp hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov ebx , dword ptr [ rsi ] mov r12d , dword ptr [ rsi + num ] test ebx , ebx js hexvar cmp dword ptr [ rdi + hexvar ] , ebx jbe hexvar test r12d , r12d js hexvar movsxd rbx , ebx mov rax , qword ptr [ rdi + hexvar ] lea rbx , [ rax + rbx * num ] cmp r12d , hexvar jle hexvar lea r14d , [ r12 - hexvar ] mov r13d , r14d and r13d , hexvar mov ebp , r12d mov r15d , num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov ecx , ebx mov rdx , rax mov esi , num mov rdi , qword ptr [ rip + hexvar ] mov eax , num call hexvar mov eax , num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov ecx , r12d mov rdx , rax mov esi , num mov rdi , qword ptr [ rip + hexvar ] mov eax , num call hexvar mov eax , num jmp hexvar mov rbx , qword ptr [ rbx ] sub ebp , hexvar cmp ebp , r13d je hexvar cmp qword ptr [ rbx ] , num jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rax ] , num mov qword ptr [ rax + hexvar ] , num lea rdi , [ rax + num ] and rdi , hexvar sub rax , rdi lea ecx , [ rax + hexvar ] shr ecx , num mov ecx , ecx mov rax , r15 rep stosq qword ptr [ rdi ] , rax jmp hexvar and r14d , hexvar neg r14d lea r12d , [ r12 + r14 - hexvar ] cmp qword ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx ] movsxd r12 , r12d lea rax , [ rax + r12 * num + num ] add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbx push rbp push r12 push r13 push r14 push r15 mov r10 , rsp lea rcx , [ rdx - hexvar ] and rsp , hexvar sub rcx , rsp neg rcx and rcx , hexvar sub rsp , rcx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , r10 mov r15 , rdx mov r13d , dword ptr [ r15 + hexvar ] mov eax , dword ptr [ rdi ] mov ebx , dword ptr [ rdi + num ] mov ecx , dword ptr [ rdi + num ] mov edx , dword ptr [ rdi + hexvar ] shl r13d , num lea rbp , [ r15 + r13 ] mov qword ptr [ rsp ] , r15 mov qword ptr [ rsp + num ] , rbp lea r14 , [ rip + hexvar ] lea rbp , [ rsp + hexvar ] sub rbp , r14 and rbp , hexvar lea r14 , [ r14 + rbp ] call hexvar mov r9 , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov dword ptr [ r9 ] , eax mov dword ptr [ r9 + num ] , ebx mov dword ptr [ r9 + num ] , ecx mov dword ptr [ r9 + hexvar ] , edx mov r15 , qword ptr [ rsi ] mov r14 , qword ptr [ rsi + num ] mov r13 , qword ptr [ rsi + hexvar ] mov r12 , qword ptr [ rsi + hexvar ] mov rbp , qword ptr [ rsi + hexvar ] mov rbx , qword ptr [ rsi + hexvar ] lea rsp , [ rsi + hexvar ] ret nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lbu v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) andi v0 , v0 , num sb v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lbu v0 , ( v0 ) addiu v0 , v0 , - num sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lbu v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sltiu v0 , v0 , num bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) andi v0 , v0 , num sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sltiu v0 , v0 , num bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) andi v0 , v0 , num sb v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw v1 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + num ] call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) bnez a0 , hexvar move s1 , a0 lw v1 , hexvar ( sp ) lw v0 , ( s3 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar lw a0 , hexvar ( a0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , dl mov ebx , eax call hexvar mov eax , dword ptr [ eax ] movzx edx , byte ptr [ ebp - hexvar ] add edx , edx add eax , edx movzx eax , word ptr [ eax ] movzx eax , ax and eax , num test eax , eax jne hexvar cmp byte ptr [ ebp - hexvar ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num add esp , hexvar pop ebx pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdi , qword ptr [ rbp - hexvar ] movzx esi , word ptr [ rdi + hexvar ] mov eax , esi sub eax , hexvar mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jne hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar sete al and al , num movzx ecx , al mov dword ptr [ rbp - num ] , ecx jmp hexvar cmp dword ptr [ rbp - hexvar ] , num sete al and al , num movzx ecx , al mov dword ptr [ rbp - num ] , ecx jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax js hexvar cmp eax , num jg hexvar lea eax , [ eax + eax * num ] lea eax , [ ebx + eax * num + hexvar ] add esp , num pop ebx ret
push r14 push rbx push rax mov r14 , rsi mov rbx , qword ptr [ rdi ] mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar mov edi , hexvar call hexvar mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , r14 call hexvar test eax , eax je hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , num add rsp , num pop rbx pop r14 ret
mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ eax ] , num jmp hexvar mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx jmp hexvar mov edx , dword ptr [ esp + num ] mov eax , num mov ecx , esi shl eax , cl or dword ptr [ edx + hexvar ] , eax jmp hexvar
push rbx call hexvar test rax , rax je hexvar mov rbx , rax nop cmp qword ptr [ rbx + hexvar ] , num je hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar mov rdx , rbx mov r8d , num xor r9d , r9d call hexvar mov rdi , rbx call hexvar mov rbx , rax test rax , rax jne hexvar pop rbx ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
push rbp push r14 push rbx sub rsp , hexvar mov ebp , esi mov rbx , rdi cmp esi , num jl hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] call hexvar test rax , rax je hexvar mov qword ptr [ rbx ] , rax add rbx , num add ebp , - num cmp ebp , num jg hexvar mov qword ptr [ rsp + num ] , rax mov r14d , num test ebp , ebp je hexvar call hexvar mov qword ptr [ rsp + num ] , rax test rax , rax je hexvar movsxd rdx , ebp lea rsi , [ rsp + num ] mov rdi , rbx call hexvar jmp hexvar mov qword ptr [ rsp + num ] , num xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] sub esi , num setne bl movzx edi , bl mov edi , dword ptr [ edi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jmp edi mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + num ] , cl mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , al test al , al je hexvar mov eax , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ eax ] cmp byte ptr [ edi + num ] , num je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push edi call hexvar add esp , hexvar test eax , eax jne hexvar mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] cmp eax , hexvar je hexvar movsx edx , byte ptr [ ebp - hexvar ] cmp eax , edx je hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar add esp , hexvar movsx eax , byte ptr [ ebp - hexvar ] mov dword ptr [ ebx + hexvar ] , eax jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar add esp , hexvar jmp hexvar sub esp , hexvar push edi call hexvar mov edi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push edi push eax push num push num call hexvar add esp , hexvar jmp hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + num ] add edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp - num ] jae hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - num ] movsx ecx , byte ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar movzx ecx , al mov edx , dword ptr [ ebp - hexvar ] movzx ecx , word ptr [ edx + ecx * num ] and ecx , hexvar cmp ecx , num jne hexvar mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar pop ebp ret
push { r4 , lr } mov r2 , hexvar mov r1 , num mov r4 , r0 bl hexvar bl hexvar clz r0 , r0 lsr r0 , r0 , num strb r0 , [ r4 , hexvar ] strb r0 , [ r4 , hexvar ] pop { r4 , pc }
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , hexvar ] add r2 , sp , hexvar mov r3 , num mov r1 , num ldr r0 , [ sp , hexvar ] blx r4 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num ble hexvar ldr r2 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] mov r3 , r2 ldr r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { r4 , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
push edi push esi xor eax , eax push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ edi ] mov esi , dword ptr [ edx + ecx * num ] test esi , esi je hexvar sub esp , num add ecx , num mov dword ptr [ edi ] , ecx push esi push dword ptr [ esp + hexvar ] call hexvar xor edx , edx mov edi , eax mov dword ptr [ eax + hexvar ] , esi mov eax , esi call hexvar fld qword ptr [ ebx - hexvar ] mov eax , num fmulp st ( num ) fstp dword ptr [ edi + hexvar ] add esp , hexvar add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) lw s4 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 move a0 , zero sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , ( s4 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , zero move a2 , zero sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , sp , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw s1 , hexvar ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) move a0 , a1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s3 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s4 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 lw a0 , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ebp , dword ptr [ esp + hexvar ] push edi call hexvar push edi push num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar cmp eax , num jne hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ ebp ] mov edi , eax test edx , edx bswap edi je hexvar cmp edx , num cmove eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdx mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rax ] , rsi mov rsi , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] test byte ptr [ rax ] , num jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor eax , eax mov edx , eax mov edi , num mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdx , qword ptr [ rdx + num ] mov rdi , qword ptr [ rcx ] call rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsp , rbp pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push rbp push rbx mov rbp , rsi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] cmp rax , rdi je hexvar test byte ptr [ rdi + hexvar ] , num mov rbx , rdi jne hexvar mov rdx , qword ptr [ rdi + hexvar ] test rdx , rdx je hexvar cmp byte ptr [ rdx + hexvar ] , num jns hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] test rax , rax mov qword ptr [ rdx + hexvar ] , rcx mov rcx , qword ptr [ rbx + hexvar ] mov qword ptr [ rcx + hexvar ] , rdx je hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rax + hexvar ] , rbx mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rdx , rbp mov esi , eax mov edi , num call hexvar test eax , eax js hexvar add rsp , hexvar pop rbx pop rbp ret
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar test rdx , rdx je hexvar mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdx ] , rax jb hexvar mov qword ptr [ rdx ] , rax pop rax jmp hexvar mov edi , num mov esi , num mov edx , hexvar call hexvar mov edi , num mov esi , num mov edx , hexvar call hexvar mov edi , num mov esi , num mov edx , hexvar call hexvar mov edi , num mov esi , num mov edx , hexvar call hexvar
push ebp mov ebp , esp push eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , ecx add edx , - num mov dword ptr [ eax ] , edx cmp ecx , num seta bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] movzx ecx , byte ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] add edx , num mov dword ptr [ ecx ] , edx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] lea edx , [ hexvar ] cmp dword ptr [ ecx ] , edx mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num add esp , num pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r3 , [ r0 , hexvar ] ldr r8 , [ r0 , hexvar ] ldr sl , [ pc , hexvar ] cmp r8 , r3 movge r8 , r3 ldr r4 , [ r0 , hexvar ] ldr r3 , [ sl ] sub sp , sp , hexvar cmp r8 , r4 mov r5 , r0 str r3 , [ sp , hexvar ] ble hexvar mvn r6 , num add r7 , r0 , hexvar add sb , sp , num ldr ip , [ r5 , hexvar ] ldm r7 , { r0 , r1 } cmp ip , num stm sb , { r0 , r1 } sub r2 , r8 , r4 bne hexvar ldr r3 , [ r5 , hexvar ] ldr r1 , [ r5 ] add r3 , r4 , r3 add r1 , r1 , r3 mov r3 , r7 mov r0 , sp bl hexvar sub r3 , r0 , num cmn r3 , num bhi hexvar cmn r0 , num ldrne r3 , [ sp ] beq hexvar add r0 , r4 , r0 add r1 , r4 , num ldr r2 , [ r5 , num ] cmp r1 , r0 str r3 , [ r2 , r4 , lsl num ] add r3 , r2 , r4 , lsl num movge r4 , r1 bge hexvar sub r2 , r2 , num add r2 , r2 , r0 , lsl num str r6 , [ r3 , num ] ! cmp r2 , r3 bne hexvar mov r4 , r0 cmp r8 , r4 bgt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sl ] str r4 , [ r5 , hexvar ] cmp r2 , r3 str r4 , [ r5 , hexvar ] bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 ] subs r5 , r0 , num str r3 , [ sp , hexvar ] beq hexvar mov r2 , sp mov r1 , r5 mov r0 , num bl hexvar cmp r0 , num blt hexvar ldr r3 , [ sp , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar moveq r2 , num ldreq r1 , [ pc , hexvar ] beq hexvar cmp r3 , hexvar movne r2 , num ldrne r1 , [ pc , hexvar ] bne hexvar add r1 , sp , hexvar ldm r1 , { r0 , r1 } cmp r0 , num sbcs r3 , r1 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push { r4 , r5 , r6 , lr } subs r5 , r0 , num popeq { r4 , r5 , r6 , pc } ldr r0 , [ r5 ] cmp r0 , num beq hexvar mov r4 , r5 bl hexvar ldr r0 , [ r4 , num ] ! cmp r0 , num bne hexvar mov r0 , r5 pop { r4 , r5 , r6 , lr } b hexvar
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar call hexvar nop word ptr cs : [ eax + eax ] nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rcx ] mov rdi , rax call hexvar mov rsp , rbp pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) move s0 , a0 lui a0 , hexvar sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 sw s2 , hexvar ( sp ) lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lb v0 , num ( s0 ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) jal hexvar move a0 , s1 beqz v0 , hexvar move s2 , v0 lb v0 , num ( s0 ) bnez v0 , hexvar addiu a0 , s0 , num move a0 , zero jal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , num beq s2 , v1 , hexvar lw s0 , ( v0 )
test rdi , rdi je hexvar mov word ptr [ rdi + hexvar ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 xor eax , eax ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) addiu v0 , s0 , - num sw s5 , hexvar ( sp ) negu a1 , s1 sw s4 , hexvar ( sp ) sltu v1 , v0 , s0 sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) bne a1 , v1 , hexvar sw gp , hexvar ( sp ) sltiu v0 , v0 , - num bnez v0 , hexvar addiu v0 , zero , num lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move s3 , a3 sw zero , hexvar ( sp ) move s2 , a2 jalr t9 move s4 , a0 beqz v0 , hexvar addiu a1 , s0 , num move v0 , zero lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui t9 , hexvar sltu a0 , a1 , s0 addiu t9 , t9 , hexvar jalr t9 addu a0 , a0 , s1 lw gp , hexvar ( sp ) beqz v0 , hexvar move s5 , v0 addu v0 , v0 , s0 lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax call hexvar test eax , eax je hexvar lea edi , [ esp + num ] lea ebp , [ ebx - hexvar ] mov esi , eax nop lea esi , [ esi ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar push num push edi push num push esi call eax add esp , hexvar test eax , eax jle hexvar sub esp , num push num push eax lea eax , [ ebx + hexvar ] push dword ptr [ esp + hexvar ] push esi push ebp push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax mov esi , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] sub esi , - num sete bl movzx edi , bl mov edi , dword ptr [ edi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jmp edi mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 ) beqz v0 , hexvar move s0 , zero lw s0 , hexvar ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( s0 ) bnez v0 , hexvar nop lw v0 , hexvar ( a1 ) andi v0 , v0 , num beqz v0 , hexvar lui a3 , hexvar lw t0 , hexvar ( a1 ) lw v0 , - hexvar ( a3 ) lw t1 , - hexvar ( a3 ) sltu a3 , v0 , t0 bnez a3 , hexvar lw v1 , hexvar ( a1 ) beq t0 , v0 , hexvar sltu a3 , t1 , v1 lw a3 , hexvar ( a1 ) lw t2 , hexvar ( a1 ) addu a3 , v1 , a3 addu t3 , t0 , t2 sltu t2 , a3 , v1 addu t2 , t2 , t3 sltu t3 , v0 , t2 beqz t3 , hexvar nop subu v1 , t1 , v1 lw t2 , num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx je hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al lea eax , [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ hexvar ] , num mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , esp add edi , - hexvar mov esp , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edi ] , ebx mov ebx , dword ptr [ edx ] mov esi , dword ptr [ esi ] sub esp , hexvar mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui v0 , hexvar addiu a2 , v0 , hexvar lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , num mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esi + num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx add esp , num pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] imul ecx , dword ptr [ ebp - hexvar ] , hexvar add eax , ecx mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push r15 push r14 push r13 push r12 push rbx test rdi , rdi je hexvar mov r15 , rcx mov rbx , rdi mov rcx , qword ptr [ rdi ] test rcx , rcx je hexvar mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar mov r14 , r8 mov r12 , rdx mov r13 , rsi test byte ptr [ rcx + num ] , num je hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar cdqe test r13 , r13 je hexvar cmp qword ptr [ r12 ] , rax jae hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 addiu s1 , zero , hexvar lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar movz s1 , zero , a1 move s0 , zero lui s3 , hexvar lui s4 , hexvar lw v0 , - hexvar ( s3 ) sll v1 , s0 , num addu v0 , v0 , v1 move a2 , s1 lw a1 , ( v0 ) move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu s0 , s0 , num lw v0 , - hexvar ( s4 ) sltu v0 , s0 , v0 bnez v0 , hexvar lw ra , hexvar ( sp ) b hexvar lw s4 , hexvar ( sp ) move a2 , s1 lui a1 , hexvar addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sltiu v0 , v0 , num lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , num
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , ecx mov edx , ecx add esp , num pop ebp ret
ldrb r3 , [ r1 ] and r3 , r3 , num cmp r3 , num bxeq lr ldr r3 , [ r0 , num ] ldr r3 , [ r3 , num ] cmp r3 , num bxne lr
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rdi , rdi je hexvar mov r14 , rdx test rdx , rdx je hexvar mov rbx , rcx test rcx , rcx je hexvar mov qword ptr [ rsp + hexvar ] , rsi cmp qword ptr [ rsp + hexvar ] , num je hexvar mov r12d , dword ptr [ rsp + hexvar ] lea ecx , [ r12 - num ] mov eax , hexvar cmp ecx , num ja hexvar mov r15 , rdi mov r13 , r8 mov rbp , r9 mov edi , dword ptr [ rsp + hexvar ] call hexvar test eax , eax je hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num mov edi , num test byte ptr [ esi + hexvar ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] cmp dword ptr [ eax + hexvar ] , num setne al movzx eax , al mov edi , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esp + num ] , eax sub esp , num push hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar test ebp , ebp je hexvar test edi , edi je hexvar lea edx , [ esp + hexvar ] mov ecx , ebp mov eax , dword ptr [ esp + num ] call hexvar mov edx , eax mov eax , num test edx , edx jne hexvar mov edi , num lea ebp , [ esp + hexvar ] sub esp , hexvar mov eax , dword ptr [ esi + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar cmp eax , edi jle hexvar sub esp , num push edi mov eax , dword ptr [ esi + hexvar ] push dword ptr [ eax + hexvar ] call hexvar mov ecx , eax mov edx , ebp mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar add edi , num jmp hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push hexvar call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lw v0 , hexvar ( a0 ) ext v1 , v0 , hexvar , num beqz v1 , hexvar lui gp , hexvar andi v1 , v0 , hexvar beqz v1 , hexvar nop jr ra move v0 , zero addiu sp , sp , - hexvar addiu a2 , zero , num sw s2 , hexvar ( sp ) addiu gp , gp , hexvar lw s2 , ( a0 ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v1 , num ( s2 ) sw gp , hexvar ( sp ) lw a3 , num ( v1 )
push { r4 , r5 , r6 , r7 , lr } ldr r5 , [ pc , hexvar ] ldr r3 , [ r0 , num ] ldr r2 , [ r5 ] sub sp , sp , hexvar ldr r3 , [ r3 , hexvar ] mov r4 , r0 str r2 , [ sp , hexvar ] blx r3 subs r6 , r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] mov r0 , r4 ldr r3 , [ r3 , hexvar ] blx r3 cmp r0 , num moveq r6 , num movne r6 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar add r0 , r4 , hexvar bl hexvar ldr r0 , [ r4 , hexvar ] bl hexvar ldr r0 , [ r4 ] cmp r0 , num beq hexvar bl hexvar ldr r0 , [ r4 , hexvar ] bl hexvar mov r0 , r4 bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] mov r0 , r6 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 addiu a3 , zero , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , num addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw s0 , - hexvar ( v0 ) addiu a3 , zero , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , num addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s0 , hexvar addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar lui a0 , hexvar addiu a0 , a0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push rbx push rax mov ebp , edx call hexvar mov qword ptr [ rsp ] , rax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar jmp hexvar mov eax , hexvar xor ebx , ebx nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov rax , qword ptr [ rsp ] mov rbx , qword ptr [ rax + num ] mov eax , hexvar jmp hexvar mov rdi , qword ptr [ rsp ] call hexvar cmp eax , ebp mov eax , hexvar cmove eax , r14d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov rax , rbx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
lw v0 , hexvar ( a0 ) addiu a2 , zero , num beq v0 , a2 , hexvar lw v1 , hexvar ( a1 )
ldr r3 , [ r0 ] cmp r3 , num beq hexvar push { r4 , r5 , lr } cmp r3 , num sub sp , sp , hexvar mov r4 , r0 bne hexvar ldr r5 , [ r0 , num ] ldrb r3 , [ r5 ] sub r3 , r3 , hexvar clz r3 , r3 lsr r3 , r3 , num ldrb r1 , [ r5 , r3 ] add r3 , r5 , r3 b hexvar ldrb r1 , [ r3 , num ] ! cmp r1 , num beq hexvar sub r1 , r1 , hexvar cmp r1 , num bls hexvar mov r0 , num add sp , sp , hexvar pop { r4 , r5 , pc } strheq r0 , [ r0 ] , -r8 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v1 , hexvar ( sp ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v0 , hexvar ( v0 ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx push dword ptr [ esp + hexvar ] push num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , ecx call hexvar test byte ptr [ hexvar ] , num je hexvar mov dword ptr [ esp ] , num call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov edi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar xor eax , eax mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ hexvar ] test dl , num mov esi , hexvar cmovne esi , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , esi call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] shl rax , num add rdx , rax mov rcx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov cl , al test cl , num jne hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar xor eax , eax mov cl , al test cl , num jne hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] add qword ptr [ rax ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] add qword ptr [ rax ] , rcx jae hexvar add qword ptr [ rax + num ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } cmp r1 , num sub sp , sp , hexvar str r3 , [ sp , num ] moveq r3 , r1 str r1 , [ sp ] mov sl , r2 mov r6 , r0 streq r3 , [ sp , hexvar ] moveq r8 , hexvar bne hexvar cmp sl , num bgt hexvar mov r3 , num add r8 , r8 , hexvar str r3 , [ sp , num ] mov r0 , r8 bl hexvar ldr r3 , [ sp ] mov r4 , r0 cmp r3 , num strbeq r3 , [ r0 ] bne hexvar mov r0 , r4 bl hexvar mov r2 , num mov r5 , r0 ldr r1 , [ pc , hexvar ] add r0 , r4 , r0 bl hexvar cmp sl , num blt hexvar beq hexvar ldr r3 , [ sp , num ] ldr r8 , [ pc , hexvar ] add r7 , r3 , sl , lsl num sub r7 , r7 , num sub r5 , r3 , num b hexvar mov r2 , num mov r1 , r8 bl hexvar mov r0 , r4 bl hexvar ldr r1 , [ r5 , num ] ! add r0 , r4 , r0 bl hexvar cmp r7 , r5 mov sb , r0 bne hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r0 , [ sp , num ] bl hexvar mov r0 , r4 bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r4 , r0 bl hexvar mov r1 , r4 mov r0 , r6 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 bl hexvar mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } rsbsle sl , r0 , r3 , lsr sl andeq r0 , r0 , r0
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
push rbp mov rbp , rsp add rsp , - hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov r9d , esi mov r8d , num mov esi , hexvar mov rdi , rax call hexvar test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rsi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar lea eax , [ ebx + hexvar ] sub esp , num push eax push dword ptr [ ebx + hexvar ] call hexvar pop eax lea eax , [ ebx + hexvar ] pop edx push eax push dword ptr [ ebx + hexvar ] call hexvar pop ecx pop eax lea eax , [ ebx + hexvar ] push eax push num call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar add esp , num mov eax , num pop ebx ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r1 ldr r1 , [ r1 ] ldr r3 , [ pc , hexvar ] ldrb r7 , [ r1 , num ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r7 , hexvar str r1 , [ sp , hexvar ] str r3 , [ sp , hexvar ] blo hexvar cmp r7 , hexvar mov sb , r0 mov sl , r2 bls hexvar cmp r7 , hexvar bne hexvar ldrb r3 , [ r1 , num ] ldr r5 , [ pc , hexvar ] lsl r2 , r3 , num mov r7 , r1 ldrh r1 , [ r5 , r2 ] lsr r1 , r1 , num eor r1 , r1 , num and r1 , r1 , num cmp r3 , hexvar orreq r1 , r1 , num cmp r1 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar mov r3 , r7 mov r2 , r0 mov r1 , num mov r0 , r4 bl hexvar mov r0 , num ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , num cmp dword ptr [ ebp + hexvar ] , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar mov dword ptr [ ebx + hexvar ] , eax add esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar mov eax , num add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] call hexvar mov dword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov esi , dword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax test rax , rax setne cl movzx esi , cl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax xor eax , eax mov edx , eax mov edi , num mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx add rsi , hexvar movsxd rdx , dword ptr [ rdx ] mov edx , dword ptr [ rdx * num + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rsi mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r1 , num mov r2 , r4 mov r5 , r0 bl hexvar cmp r0 , num subne r0 , r0 , r5 addne r0 , r0 , num moveq r0 , r4 pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rsi mov eax , dword ptr [ rip ] test eax , eax jne hexvar mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al out dx , al add eax , num xor al , num mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al jmp hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al
sub rsp , num mov ecx , num mov edx , num mov rsi , qword ptr [ rip + hexvar ] mov edi , dword ptr [ rip + hexvar ] call hexvar test eax , eax sete al add rsp , num ret
cmp r1 , hexvar bne hexvar add r0 , r0 , hexvar add r0 , r0 , num bx lr push { r4 , lr } mov r0 , r1 bl hexvar cmp r0 , num bne hexvar mov r0 , num pop { r4 , pc }
push rbx sub rsp , hexvar mov rbx , rdi mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rsp + hexvar ] , eax mov rax , qword ptr [ rdi + hexvar ] mov r10 , qword ptr [ rax + hexvar ] lea r8 , [ rdi + hexvar ] lea r9 , [ rdi + hexvar ] test r10 , r10 je hexvar lea r11 , [ rsp + hexvar ] mov rdi , rdx mov rdx , rcx mov rcx , rax push r10 push r11 call hexvar jmp hexvar lea r10 , [ rsp + hexvar ] mov rdi , rdx mov rdx , rcx mov rcx , rax push qword ptr [ rax + hexvar ] push r10 call hexvar add rsp , hexvar mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov eax , num add rsp , hexvar pop rbx ret
push rbp push r15 push r14 push rbx push rax mov ebx , ecx mov r14 , rdx mov r15d , esi mov rbp , rdi call hexvar test eax , hexvar je hexvar cmp dword ptr [ rbp + hexvar ] , num je hexvar cmp ebx , hexvar jl hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push { r4 , r5 , r6 , r7 , lr } sub sp , sp , hexvar mov r6 , r0 mov r5 , r2 ldr r4 , [ r2 , num ] ldrb r3 , [ r4 ] ldr r2 , [ r1 , num ] ldrb r2 , [ r2 , hexvar ] cmp r2 , r3 beq hexvar ldrb r2 , [ r0 , num ] cmp r2 , r3 bne hexvar add r4 , r4 , num mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r5 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov bl , num and bl , num movzx esi , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx add esp , hexvar pop esi pop ebx pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov lr , num ldr ip , [ pc , hexvar ] sub sp , sp , hexvar ldr r8 , [ pc , hexvar ] add r4 , sp , hexvar ldr r3 , [ ip , num ] strb r2 , [ r4 , - num ] ! ldr r5 , [ ip ] ldr r2 , [ r8 ] cmp r3 , hexvar mov r6 , r0 mov r7 , r1 sub r5 , r4 , r5 str r2 , [ sp , hexvar ] strb lr , [ sp , hexvar ] beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , num beq hexvar cmp r5 , r4 movlo r0 , r4 movlo r3 , hexvar bhs hexvar strb r3 , [ r0 , - num ] ! cmp r5 , r0 bne hexvar mov r4 , r5 ldr r3 , [ pc , hexvar ] mov r0 , r4 ldr r1 , [ r3 ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r8 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rcx mov dword ptr [ rsp + hexvar ] , edx mov r13 , rsi mov r12 , rdi xorps xmm0 , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 call hexvar mov rdi , rax xor esi , esi xor edx , edx call hexvar mov rbp , rax mov qword ptr [ rsp + hexvar ] , rax mov rdi , r12 call hexvar mov rdi , rax xor esi , esi call hexvar mov r15d , hexvar test rax , rax je hexvar mov r14 , rax cmp dword ptr [ rax + num ] , num mov qword ptr [ rsp + hexvar ] , rbx je hexvar mov rdi , r14 call hexvar jmp hexvar mov edi , hexvar call hexvar mov r15 , rax mov qword ptr [ rsp + hexvar ] , rax mov rdi , r14 call hexvar test rbp , rbp je hexvar test r15 , r15 je hexvar mov rdi , qword ptr [ r13 + num ] lea rdx , [ rsp + hexvar ] mov esi , num call hexvar test rax , rax je hexvar mov rbp , rax lea rdi , [ rsp + hexvar ] mov rsi , rax call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov esi , hexvar xor eax , eax call hexvar mov r15d , hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi jne hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar xor eax , eax call hexvar mov r15d , hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar call hexvar mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) move a2 , zero lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , lr } sub sp , sp , hexvar mov r5 , r1 mov r4 , r2 cmp r3 , num beq hexvar bl hexvar ldr r3 , [ r4 , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ r4 , num ] str r2 , [ sp ] ldr r2 , [ pc , hexvar ] mov r1 , num mov r0 , r5 bl hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov r12 , rcx mov r15 , rdx mov r13 , rsi mov rax , qword ptr [ rdi ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rbx , r9 mov rbp , rdi xor r14d , r14d test r9 , r9 je hexvar xor eax , eax mov qword ptr [ rsp + num ] , rax test r15 , r15 jne hexvar jmp hexvar test r15 , r15 je hexvar lea rsi , [ r13 + num ] mov rdi , r15 call hexvar test rax , rax je hexvar test r12 , r12 je hexvar lea rsi , [ r13 + hexvar ] mov rdi , r12 call hexvar test rax , rax je hexvar xor r14d , r14d mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar add r13 , hexvar mov rsi , r13 call hexvar test rax , rax je hexvar xor edi , edi mov r14d , num test rdi , rdi jne hexvar jmp hexvar call hexvar mov rbx , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , rax test r15 , r15 je hexvar mov rax , qword ptr [ rbp ] lea rdx , [ r13 + num ] mov rdi , rbp mov rsi , r15 mov rcx , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar test r12 , r12 je hexvar mov rax , qword ptr [ rbp ] lea rdx , [ r13 + hexvar ] mov rdi , rbp mov rsi , r12 mov rcx , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rsi , qword ptr [ rsp + hexvar ] test rsi , rsi je hexvar mov rax , qword ptr [ rbp ] add r13 , hexvar mov rdi , rbp mov rdx , r13 mov rcx , rbx call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rdi , qword ptr [ rsp + num ] mov r14d , num test rdi , rdi jne hexvar jmp hexvar xor r14d , r14d mov rdi , qword ptr [ rsp + num ] test rdi , rdi je hexvar call hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
sub sp , sp , num str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 add sp , sp , num bx lr
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov byte ptr [ rbp - hexvar ] , num lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rbp - hexvar ] test al , al je hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , eax mov dword ptr [ esi ] , ecx call hexvar add esp , hexvar pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jge hexvar cmp dword ptr [ hexvar ] , - hexvar jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] add ecx , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar lea ecx , [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , hexvar lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push rax mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar pop rax jmp hexvar
lea ecx , [ ebp + num ] cmp ecx , edi mov dword ptr [ esp + hexvar ] , ecx jb hexvar cmp esi , edi jae hexvar mov eax , edi sub eax , esi lea edx , [ eax - num ] cmp edx , num ja hexvar sub esp , num add ebp , num push eax push esi lea esi , [ ebx - hexvar ] mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax ] add esp , hexvar push eax push esi push num call hexvar add esp , hexvar xor eax , eax cmp edi , ebp mov ecx , dword ptr [ esp + hexvar ] jbe hexvar lea esi , [ esi ] sub esp , num push dword ptr [ esp + hexvar ] push ecx mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax ] add esp , hexvar sub esp , num push eax push esi push num call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ]
add r3 , r1 , num ldm r3 , { r2 , r3 } push { r4 , r5 } add r5 , r0 , num ldm r5 , { r4 , r5 } cmp r5 , r3 cmpeq r4 , r2 movne r0 , num bne hexvar ldm r0 , { r4 , r5 } ldm r1 , { r2 , r3 } cmp r5 , r3 cmpeq r4 , r2 moveq r0 , num movne r0 , num pop { r4 , r5 } bx lr
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] mvn r2 , r3 ldr r3 , [ fp , - hexvar ] and r3 , r3 , r2 cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
mov ip , r1 cmp r2 , hexvar bls hexvar ldr r3 , [ r0 , hexvar ] add r1 , r3 , r1 , lsl num ldr r3 , [ r1 , hexvar ] cmp r3 , num beq hexvar ldr r1 , [ r3 , num ] cmp r2 , r1 beq hexvar blo hexvar ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r1 , [ r3 , num ] cmp r1 , r2 beq hexvar cmp r1 , r2 bls hexvar mov r0 , num bx lr ldr r3 , [ r0 , hexvar ] add r2 , r2 , r2 , lsl num mov r0 , hexvar mul r1 , r0 , ip add r2 , r1 , r2 , lsl num add r2 , r3 , r2 ldr r0 , [ r2 , hexvar ] bx lr ldr r0 , [ r3 , hexvar ] bx lr mov r0 , num bx lr mov r0 , num bx lr mov r0 , num bx lr
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] b hexvar ldr r3 , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bgt hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar b hexvar mov r0 , r0 mov r0 , r0 add sp , sp , hexvar pop { pc }
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r0 mov r7 , r1 mov r8 , r2 mov r6 , r3 bl hexvar mov r4 , r0 mov r2 , r8 mov r1 , r7 mov r0 , r5 bl hexvar str r0 , [ r4 ] mov r1 , r6 mov r0 , r5 bl hexvar str r0 , [ r4 , num ] pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi xor eax , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov ebp , dword ptr [ esi + num ] test ebp , ebp je hexvar sub esp , num push num push num push edi lea ebx , [ esp + hexvar ] push ebx push num push esi call ebp add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esi ] sub esp , num push dword ptr [ esp + hexvar ] push edi push esi call dword ptr [ eax + hexvar ] pop edx pop ecx push eax push num push edi push ebx push hexvar push esi call ebp add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , num beq a3 , v0 , hexvar addiu v0 , zero , num bne a3 , v0 , hexvar move v0 , zero addiu a1 , zero , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lui t9 , hexvar addiu t9 , t9 , hexvar jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s0 , a0 move s1 , a1 move s2 , a2 addiu v0 , sp , hexvar sw v0 , hexvar ( sp ) addiu a2 , zero , hexvar move a1 , zero addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , v0 , num sw v1 , hexvar ( sp ) lw a1 , ( v0 ) lw v0 , num ( s0 ) lw t9 , hexvar ( v0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ ebp + hexvar ] sub edx , num cmp edx , num jbe hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num jmp hexvar nop sub esp , num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
cmp r1 , num bxlt lr cmp r0 , num bxeq lr ldr r3 , [ r0 ] cmp r3 , hexvar bne hexvar cmp r1 , num ble hexvar sub r1 , r1 , num ldr r0 , [ r0 , hexvar ] cmp r0 , num bxeq lr ldr r3 , [ r0 ] cmp r3 , hexvar bne hexvar cmp r1 , num bne hexvar ldr r0 , [ r0 , num ] bx lr clz r3 , r0 lsr r3 , r3 , num cmp r1 , num movne r3 , num cmp r3 , num beq hexvar mov r0 , num bx lr mov r0 , num bx lr mov r0 , num bx lr
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw a0 , hexvar ( sp ) addiu a0 , sp , hexvar sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a3 lw s0 , - hexvar ( gp ) lui a3 , hexvar lw t9 , - hexvar ( gp ) sw s5 , hexvar ( sp ) addiu a3 , a3 , hexvar sw s2 , hexvar ( sp ) move s5 , a1 sw gp , hexvar ( sp ) move s2 , a2 sw ra , hexvar ( sp ) addiu a2 , sp , hexvar sw s4 , hexvar ( sp ) addiu a1 , sp , hexvar sw s1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw s1 , hexvar ( sp ) lui s4 , hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , s4 , hexvar move a0 , s1 jalr t9 sw v0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s1 jalr t9 addiu a1 , a1 , hexvar bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , sp , hexvar lw a2 , hexvar ( sp ) bal - hexvar move a0 , zero lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 beqz s2 , hexvar move a2 , zero addiu s4 , sp , hexvar addiu a1 , zero , hexvar move a3 , s3 move t9 , s2 jalr t9 move a0 , s4 lw gp , hexvar ( sp ) blez v0 , hexvar lw t9 , - hexvar ( gp ) move a0 , s1 move a2 , v0 jalr t9 move a1 , s4 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar move s2 , v0 beqz s2 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) beqz s5 , hexvar move s1 , v0 lw a0 , ( s5 )
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar lea eax , [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax xor eax , eax cmp eax , dword ptr [ ebp - num ] jg hexvar mov eax , dword ptr [ ebp - num ] shl eax , num lea ecx , [ hexvar ] add ecx , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi call hexvar cmp rax , num je hexvar mov ecx , hexvar mov edx , hexvar mov esi , hexvar mov edi , hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] mov rsi , rbx call hexvar cmp rax , num sbb eax , eax and eax , num add eax , num add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s4 , a0 move s2 , a1 move s3 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw s1 , hexvar ( a0 )
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num pop rbp ret
push edi push esi push ebx mov eax , dword ptr [ esp + hexvar ] movzx ecx , byte ptr [ eax ] mov ebx , num mov esi , ecx mov edi , ebx shld edi , ecx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov esi , edx shld edi , edx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov esi , edx shld edi , edx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov ecx , edx mov ebx , edi shld ebx , edx , num shl ecx , num movzx edx , byte ptr [ eax + num ] or edx , ecx mov esi , edx mov edi , ebx shld edi , edx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov esi , edx shld edi , edx , num shl esi , num movzx edx , byte ptr [ eax + num ] or edx , esi mov ecx , edx mov ebx , edi shld ebx , edx , num shl ecx , num movzx eax , byte ptr [ eax + num ] or eax , ecx mov edx , ebx pop ebx pop esi pop edi ret
xor ecx , ecx mov edx , num mov eax , esi call hexvar test eax , eax je hexvar xor ebp , ebp mov edi , dword ptr [ esp + hexvar ] add edi , dword ptr [ esp + num ] adc ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] mov ecx , edi and ecx , ebp mov eax , ecx add eax , num mov eax , dword ptr [ esp + hexvar ] sete cl xor edx , edi xor eax , ebp or edx , eax sete al or cl , al jne hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] mov ecx , eax and ecx , edx mov eax , ecx add eax , num jne hexvar mov edi , num jmp hexvar
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movaps xmm0 , xmm1 call hexvar movsd xmm1 , qword ptr [ rbp - hexvar ] subsd xmm1 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar subsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - num ] ucomisd xmm1 , xmm0 mov eax , hexvar mov ecx , hexvar cmova ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar ldr r4 , [ r7 , num ] cmp r4 , num beq hexvar cmp r0 , num mov r5 , r0 beq hexvar ldr sl , [ r4 , hexvar ] ! ldr fp , [ pc , hexvar ] cmp sl , num ldr sb , [ pc , hexvar ] ldr r8 , [ pc , hexvar ] movne r6 , num beq hexvar ldr r1 , [ r5 ] ldr r0 , [ sl ] bl hexvar cmp r0 , num bne hexvar ldr r2 , [ sl , hexvar ] str r2 , [ r4 ] ldr sl , [ sl , hexvar ] cmp sl , num beq hexvar mov r6 , num b hexvar add r4 , sl , hexvar ldr sl , [ sl , hexvar ] cmp sl , num bne hexvar cmp r6 , num beq hexvar ldr r5 , [ r5 , num ] cmp r5 , num beq hexvar ldr r4 , [ r7 , num ] ldr sl , [ r4 , hexvar ] ! cmp sl , num movne r6 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ fp ] bl hexvar ldr r1 , [ r5 ] ldr r3 , [ sb ] mov r2 , r0 str r1 , [ sp ] mov r0 , r4 mov r1 , num bl hexvar ldr r3 , [ r8 ] cmp r3 , num bne hexvar mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] mov r0 , r4 mov r2 , num ldr r1 , [ pc , hexvar ] ldr r4 , [ r3 ] bl hexvar ldr r3 , [ pc , hexvar ] mov r2 , r0 ldr r3 , [ r3 ] mov r0 , r4 mov r1 , num bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a1 lui a1 , hexvar sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) addiu a1 , a1 , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , a3 sw gp , hexvar ( sp ) move s0 , a3 sw ra , hexvar ( sp ) move s3 , a2 lw t9 , - hexvar ( gp ) lw s4 , hexvar ( sp ) jalr t9 lw s5 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu a1 , a1 , - hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu a1 , a1 , - hexvar bnez v0 , hexvar lw gp , hexvar ( sp ) lw v1 , num ( s1 )
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push rbx mov rbx , rdi mov edi , dword ptr [ rdi ] test edi , edi jns hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar pop rbx ret
push r14 push r13 push r12 push rbp push rbx mov rbp , rdi mov rbx , rsi mov r14 , rdx mov r13 , rcx mov r12 , r8 test byte ptr [ rdi + hexvar ] , hexvar je hexvar mov rax , qword ptr [ rbp + hexvar ] cmp qword ptr [ rax + hexvar ] , rbx je hexvar mov rdx , qword ptr [ rax + hexvar ] cmp rdx , rbx je hexvar mov rcx , qword ptr [ rax + hexvar ] cmp rcx , rbx je hexvar mov eax , dword ptr [ rbx + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar test rdx , rdx setne sil test rcx , rcx setne al test sil , al jne hexvar mov edx , num lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r0 , [ r0 ] ldr r3 , [ r0 ] ands r4 , r3 , hexvar bne hexvar bl hexvar cmp r0 , num bne hexvar ldr r0 , [ pc , hexvar ] ldrb r3 , [ r0 , hexvar ] cmp r3 , num bne hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ r0 ] ldr r2 , [ r2 ] cmp r2 , num beq hexvar mov ip , num ldr r1 , [ r3 , hexvar ] str ip , [ r3 , num ] cmp r1 , num streq r1 , [ r3 , hexvar ] subs r2 , r2 , num add r3 , r3 , hexvar bne hexvar b hexvar mov r2 , num mov r3 , num str r2 , [ r5 , num ] str r3 , [ r5 , hexvar ] ldr r3 , [ r0 , num ] sub r3 , r3 , num str r3 , [ r0 , num ] pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push rbp push rbx lea rbx , [ rdi + hexvar ] sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp esi , num je hexvar cmp esi , num je hexvar mov rbp , rsp lea r8d , [ rsi * num ] lea rcx , [ rip + hexvar ] mov esi , num mov rdi , rbp mov edx , hexvar xor eax , eax call hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] bl hexvar str r0 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmn r3 , hexvar beq hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] jmp hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] movsxd rdx , eax mov rax , rdx add rax , rax add rax , rdx shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] test rax , rax jne hexvar mov eax , num pop rbp ret
push r14 push rbx push rax mov r14 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov qword ptr [ rax ] , num movabs rax , hexvar mov qword ptr [ rbx + num ] , rax xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov rdi , rbx add rdi , hexvar call hexvar mov qword ptr [ r14 + hexvar ] , rbx mov dword ptr [ r14 + hexvar ] , num mov eax , num add rsp , num pop rbx pop r14 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ecx , hexvar mov edi , edx repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub eax , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num test esi , esi je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax setne al movzx eax , al mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , lr } mov r4 , r0 bl hexvar ldr r3 , [ pc , hexvar ] str r0 , [ r3 , hexvar ] cmn r0 , num popne { r4 , pc }
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ ebx + hexvar ] , eax add eax , num mov dword ptr [ esp ] , eax call hexvar pop edx pop ecx push esi push eax mov dword ptr [ ebx + hexvar ] , eax call hexvar add esp , hexvar pop ebx pop esi ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx mov eax , esi call hexvar sub esp , num push ebp push edi lea eax , [ ebx - hexvar ] push eax push hexvar push num lea edi , [ esp + hexvar ] push edi call hexvar add esp , hexvar push edi push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push num push dword ptr [ esi ] call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ esi + num ] call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] add esi , num lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num mov eax , dword ptr [ ebp + num ] add eax , num lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] call hexvar test eax , eax mov dword ptr [ esp + hexvar ] , eax je hexvar sub esp , hexvar mov esi , eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax je hexvar test edi , edi je hexvar mov edx , dword ptr [ edi ] test edx , edx je hexvar call hexvar test eax , eax mov dword ptr [ esi + num ] , eax jne hexvar jmp hexvar lea esi , [ esi ] sub esp , hexvar push hexvar call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax je hexvar call hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar call hexvar test eax , eax mov ebp , eax je hexvar sub esp , num push - num push dword ptr [ edi ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + num ] sub esp , num mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , ebp push esi mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] call hexvar add esp , hexvar test eax , eax je hexvar add edi , num je hexvar mov eax , dword ptr [ edi ] test eax , eax je hexvar call hexvar test eax , eax mov esi , eax jne hexvar lea esi , [ esi ] xor esi , esi sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r8d , dword ptr [ rip + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test r8d , r8d jne hexvar mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) move a3 , a2 move a2 , a1 move a1 , a0 addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] xor edi , edi and al , num mov byte ptr [ ebp - hexvar ] , al mov ebx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov al , byte ptr [ ebp - hexvar ] test al , num mov eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , num mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] cmovne eax , ecx mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } bic r4 , r3 , hexvar cmp r4 , r3 beq hexvar mov r0 , num bl hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] add esp , num pop ebp ret
push { r4 , lr } mov r0 , hexvar bl hexvar mov r2 , num mov r4 , r0 mov r1 , num add r0 , r0 , r2 bl hexvar mov r2 , num mov r3 , num mov r0 , r4 stm r4 , { r2 , r3 } pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar or eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea ecx , [ ebx - hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push hexvar push ecx mov dword ptr [ esp + hexvar ] , ecx push hexvar call hexvar mov esi , eax mov dword ptr [ eax ] , hexvar call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test edi , edi mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , eax mov eax , hexvar cmovle edi , eax mov dword ptr [ esi + num ] , edi push hexvar mov ecx , dword ptr [ esp + hexvar ] push ecx push edi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar lea eax , [ ebx - hexvar ] test ebp , ebp cmove ebp , eax lea eax , [ ebx - hexvar ] sub esp , num push ebp push eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push eax lea eax , [ ebx - hexvar ] push eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar mov dword ptr [ esi ] , hexvar push num push num push num push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx call hexvar mov dword ptr [ rax ] , num mov rdi , qword ptr [ rbp - num ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax call hexvar mov eax , dword ptr [ rax ] add rsp , hexvar pop rbp ret
mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar push num push edi push esi push num call eax add esp , hexvar test eax , eax jne hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar push edi push esi call hexvar add esp , hexvar lea eax , [ ebx - hexvar ] sub esp , num push dword ptr [ edi + hexvar ] push eax push num call hexvar add esp , hexvar xor eax , eax jmp hexvar lea esi , [ esi ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - num ] add rcx , - hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi movabs rdi , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rsi , qword ptr [ rcx ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov byte ptr [ rcx + hexvar ] , num mov rdi , qword ptr [ rax ] call hexvar mov rsp , rbp pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
ldrb r3 , [ r0 ] sub r3 , r3 , hexvar cmp r3 , hexvar ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq r5 , sb , r0 , lsr num muleq sb , r8 , r4 muleq sb , r8 , r4 muleq sb , r8 , r4 muleq sb , r8 , r4 muleq sb , r8 , r4 muleq sb , r8 , r4 muleq sb , r8 , r4 muleq sb , r8 , r4 muleq sb , r8 , r4 muleq sb , r8 , r4 muleq sb , r8 , r4 andeq r5 , sb , r0 , lsr num muleq sb , r8 , r4 muleq sb , r8 , r4 andeq r5 , sb , r0 , lsr num andeq r5 , sb , r0 , lsr num andeq r5 , sb , r0 , lsr num muleq sb , r8 , r4 andeq r5 , sb , r0 , lsr num mov r0 , num bx lr mov r0 , num bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] test edx , edx je hexvar mov ecx , dword ptr [ edx + hexvar ] test ecx , ecx je hexvar mov ecx , dword ptr [ ecx + hexvar ] test ecx , ecx je hexvar jmp ecx lea esi , [ esi ] jmp hexvar lea esi , [ esi ] lea edi , [ edi ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rcx , [ rip - hexvar ] mov r8 , rcx lea rcx , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
cmp r0 , num push { r4 , r5 , r6 , lr } beq hexvar cmp r0 , num beq hexvar mov r0 , hexvar bl hexvar cmp r0 , num mov r4 , r0 beq hexvar cmp r4 , num movge r0 , r4 movlt r0 , num pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + hexvar ] setb cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] imul edx , dword ptr [ ebp - num ] , hexvar add ecx , edx cmp eax , dword ptr [ ecx + hexvar ] jg hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
cmp r3 , num beq hexvar ldrb ip , [ r2 , num ] sub ip , ip , hexvar cmp ip , num bls hexvar str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp ] bl hexvar add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi lea r12 , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , r12 mov rax , qword ptr [ rsp + hexvar ] mov eax , hexvar and eax , dword ptr [ rsi + hexvar ] mov dword ptr [ rsp + hexvar ] , eax mov ecx , hexvar jmp hexvar mov ecx , hexvar xor ebp , ebp nop cmp ecx , hexvar jle hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov dword ptr [ rbx + hexvar ] , hexvar xor edi , edi mov rsi , rbx call qword ptr [ rbx + hexvar ] mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar nop cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov ebp , num jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp dword ptr [ rsp + hexvar ] , num mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar nop cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar mov ecx , hexvar mov ebp , num jmp hexvar mov rax , qword ptr [ rbx + hexvar ] test byte ptr [ rax + hexvar ] , hexvar mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar mov dword ptr [ rbx + hexvar ] , hexvar xor edi , edi mov rsi , rbx call qword ptr [ rbx + hexvar ] mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] cmp dword ptr [ rax + hexvar ] , num mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar mov rdi , r15 mov rsi , r12 mov rdx , r14 call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw a0 , hexvar ( v0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar sw zero , hexvar ( v0 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw zero , hexvar ( fp ) b hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sb zero , - hexvar ( v0 ) lui v0 , hexvar sb zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar sub esp , num push edx push ebp push dword ptr [ esp + hexvar ] push edi push dword ptr [ esp + hexvar ] push esi push ecx call hexvar add esp , hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldrb r3 , [ r3 ] str r3 , [ sp , hexvar ] bl hexvar mov r3 , r0 ldr r2 , [ r3 ] ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldrh r3 , [ r3 ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] and r2 , r3 , hexvar ldr r3 , [ sp , hexvar ] strb r2 , [ r3 ] ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar b hexvar mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar mov r3 , num str r3 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r1 , [ sp , hexvar ] mov r0 , r3 bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ rbp - hexvar ] , ecx cmp eax , num jle hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movss xmm1 , dword ptr [ rip ] movss xmm2 , dword ptr [ rip ] addss xmm0 , xmm2 addss xmm0 , xmm1 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movss xmm1 , dword ptr [ rip ] movss xmm2 , dword ptr [ rip ] addss xmm0 , xmm2 addss xmm0 , xmm1 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movss xmm1 , dword ptr [ rip ] movss xmm2 , dword ptr [ rip ] addss xmm0 , xmm2 addss xmm0 , xmm1 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add rsp , hexvar pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov ebp , r8d mov r13 , rcx mov r14 , rdx mov r15 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] test byte ptr [ rax + hexvar ] , hexvar jne hexvar test ebp , ebp jle hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov eax , dword ptr [ rax + num ] mov qword ptr [ rsp + num ] , rax cmp rax , hexvar jb hexvar mov edi , hexvar mov edx , hexvar mov esi , hexvar call hexvar xor r12d , r12d cmp dword ptr [ rbx + hexvar ] , num je hexvar lea rsi , [ rbx + hexvar ] mov rdi , r15 mov rax , qword ptr [ rsp + num ] mov rdx , rax call hexvar add r15 , qword ptr [ rsp + num ] mov dword ptr [ rsp + hexvar ] , num jmp hexvar movsxd rcx , ebp mov rdi , rbx mov rsi , r15 mov rdx , r13 call qword ptr [ rax + hexvar ] test eax , eax js hexvar mov dword ptr [ r14 ] , eax mov r12d , num jmp hexvar mov dword ptr [ r14 ] , num sete al movzx r12d , al jmp hexvar mov dword ptr [ r14 ] , num xor r12d , r12d jmp hexvar mov rdi , rbx mov rsi , r15 mov rdx , r14 mov rcx , r13 mov r8d , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp jmp hexvar mov dword ptr [ rsp + hexvar ] , num mov rdi , rbx mov rsi , r15 mov rdx , r14 mov rcx , r13 mov r8d , ebp call hexvar test eax , eax je hexvar cmp dword ptr [ rsp + num ] , num jb hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov dword ptr [ rbx + hexvar ] , num mov r12d , num cmp dword ptr [ rsp + hexvar ] , num je hexvar mov rax , qword ptr [ rsp + num ] add dword ptr [ r14 ] , eax mov eax , r12d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
cmp r1 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ r0 , hexvar ] mov r0 , num bx lr push { r4 , lr } bl hexvar pop { r4 , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr fp , [ sp , hexvar ] ldr r8 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldrb r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr sb , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r4 , [ r8 , hexvar ] ldr r3 , [ r4 , hexvar ] clz r5 , r4 lsr r5 , r5 , num cmp r3 , num orrne r5 , r5 , num cmp r5 , num movne r0 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , esp mov dword ptr [ ebx + hexvar ] , edi mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , hexvar mov dword ptr [ ebx + num ] , hexvar mov dword ptr [ ebx + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test eax , eax setne al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] test edx , edx sete bl movzx edx , bl mov esi , dword ptr [ ebp + hexvar ] test esi , esi sete bl movzx esi , bl sub edx , esi setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] xor ebx , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl jmp esi mov eax , dword ptr [ ebp + num ] not eax shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] xor ecx , ecx mov dl , cl mov byte ptr [ ebp - hexvar ] , dl jmp eax mov eax , dword ptr [ ebp + hexvar ] test eax , eax setns cl mov eax , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , cl jmp eax mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test esi , esi je hexvar mov edi , dword ptr [ esi + hexvar ] test edi , edi jne hexvar mov edi , dword ptr [ esi + hexvar ] test edi , edi jne hexvar mov eax , dword ptr [ esi + num ] cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num je hexvar jb hexvar cmp eax , num jne hexvar lea eax , [ ebx - hexvar ] cmp dword ptr [ esi ] , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] fld1 fsub dword ptr [ eax + hexvar ] fst dword ptr [ esi + hexvar ] pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov esi , dword ptr [ edi ] cmp dword ptr [ eax + hexvar ] , edx jb hexvar mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx cmovne eax , ecx and edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , edx mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num lea edx , [ esp + hexvar ] push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar mov ecx , dword ptr [ esi + hexvar ] lea edx , [ ecx + num ] or eax , edx mov dword ptr [ edi ] , esi jmp hexvar mov eax , num mov esi , dword ptr [ esi + hexvar ] test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push edx call hexvar add esp , hexvar test eax , eax je hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar mov ecx , dword ptr [ esi + hexvar ] lea edx , [ ecx + num ] or eax , edx mov dword ptr [ edi ] , esi mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar move s0 , a0 lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) lui v1 , hexvar lw v1 , - hexvar ( v1 ) sll v1 , v1 , num addu v0 , v0 , v1 lw v1 , ( v0 ) beq v1 , s0 , hexvar lui a2 , hexvar lui a1 , hexvar beqz v1 , hexvar lui a0 , hexvar lw a3 , - hexvar ( a2 ) lbu v1 , - hexvar ( a1 ) lw t0 , - hexvar ( a0 ) sb v1 , ( a3 ) lw v1 , ( v0 ) sw a3 , num ( v1 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx cmp dword ptr [ eax ] , num setne dl mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ecx ] mov dword ptr [ edx + hexvar ] , eax mov esp , ebp pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lb s3 , num ( a0 ) beq s3 , v0 , hexvar move s1 , a0 addiu v0 , s3 , - hexvar andi v0 , v0 , hexvar sltiu v0 , v0 , num beqz v0 , hexvar addiu s0 , a0 , num bnez a1 , hexvar addiu v0 , zero , hexvar lb a1 , ( s0 ) addiu a1 , a1 , - hexvar andi v0 , a1 , hexvar sltiu v0 , v0 , num beqz v0 , hexvar nop lb v0 , num ( s0 ) addiu v0 , v0 , - hexvar andi v1 , v0 , hexvar sltiu v1 , v1 , num beqz v1 , hexvar addiu a0 , s0 , num lb v1 , num ( s0 ) sll a1 , a1 , num addu a1 , v0 , a1 addiu v0 , v1 , - hexvar andi v1 , v0 , hexvar sltiu v1 , v1 , num beqz v1 , hexvar addiu a0 , s0 , num sll a1 , a1 , num addiu s0 , s0 , num addu a1 , v0 , a1 lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw v1 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr sl , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ sl ] str r1 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , num mov r4 , r0 add r0 , sp , num str ip , [ sp , hexvar ] bl hexvar add r0 , sp , num bl hexvar cmp r0 , num beq hexvar mov sb , num mov r8 , num add r6 , sp , num ldr r1 , [ r4 , hexvar ] add r7 , r6 , r0 mov fp , r6 cmp r1 , hexvar ldrb r5 , [ fp ] , num bne hexvar ldr r3 , [ r4 , hexvar ] strb sb , [ r4 , hexvar ] ldr r2 , [ r4 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ r4 , hexvar ] cmp r7 , fp add r3 , r3 , num str r8 , [ r4 , hexvar ] strb r5 , [ r4 ] strb r5 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] beq hexvar mov r3 , num ldrb r5 , [ fp ] add r6 , r6 , num add r1 , r3 , num cmp r7 , r6 str r1 , [ r4 , hexvar ] strb r5 , [ r4 , r3 ] strb r5 , [ r4 , hexvar ] bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sl ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp + hexvar ] add eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + hexvar ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] add ecx , dword ptr [ ebp - num ] cmp dword ptr [ eax + ecx * num ] , - num je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 beqz a0 , hexvar move s1 , a1 beqz s1 , hexvar addiu a1 , zero , hexvar lw s3 , ( s1 )
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jl hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jne hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar jmp hexvar call hexvar add esp , hexvar pop ebp ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov dword ptr [ rsp + hexvar ] , esi mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rcx cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar cmp dword ptr [ rsp + hexvar ] , num je hexvar cmp dword ptr [ rsp + hexvar ] , num jl hexvar cmp dword ptr [ rsp + hexvar ] , hexvar jle hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar cmp dword ptr [ rsp + hexvar ] , hexvar je hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] add rax , num cmp dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rax je hexvar mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jmp hexvar mov eax , hexvar mov dword ptr [ rsp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rsp + hexvar ] xor ecx , ecx mov rdx , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rdx mov edx , eax mov r8 , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rdx mov r15 , rsi mov r14 , rdi lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + num ] , num mov edi , hexvar mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp ] , rbx lea rdi , [ rsp + hexvar ] lea rsi , [ rsp + num ] lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov r9 , r15 call hexvar mov rsi , qword ptr [ rsp + num ] test eax , eax je hexvar mov edx , dword ptr [ rsp + hexvar ] test rsi , rsi je hexvar mov rdi , r14 call hexvar mov ebx , eax mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar mov rdi , rsi call hexvar mov ebx , hexvar jmp hexvar lea rsi , [ rsp + hexvar ] mov rdi , r14 call hexvar mov ebx , eax call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop move a2 , zero addiu a1 , zero , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , hexvar ( a0 ) sw v0 , num ( a0 ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , hexvar ( a0 ) sw v0 , hexvar ( a0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi and dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax jne hexvar shr dword ptr [ rbp - hexvar ] , num jmp hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - num ] , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edi , eax call hexvar test eax , eax je hexvar shr dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] not eax mov edx , eax mov eax , dword ptr [ rbp - hexvar ] and eax , edx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp push r15 push r14 push rbx push rax mov rbx , rsi mov r14 , rdi mov rax , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar xor r15d , r15d test rax , rax je hexvar mov rbp , rax mov rax , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ rax + num ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rax + num ] , rbp mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rax + hexvar ] , rbx mov r15d , num mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] movss xmm3 , dword ptr [ rdi ] cvtss2sd xmm3 , xmm3 mulsd xmm2 , xmm3 mov rdi , qword ptr [ rbp - num ] movss xmm3 , dword ptr [ rdi + num ] cvtss2sd xmm3 , xmm3 mulsd xmm1 , xmm3 addsd xmm2 , xmm1 mov rdi , qword ptr [ rbp - num ] movss xmm1 , dword ptr [ rdi + num ] cvtss2sd xmm1 , xmm1 mulsd xmm0 , xmm1 addsd xmm2 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd xmm0 , qword ptr [ rbp - hexvar ] pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebx + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) blez a2 , hexvar sw gp , hexvar ( sp ) beqz a1 , hexvar move s3 , a1 lw s0 , ( a1 ) beqz s0 , hexvar addu v0 , s0 , a2 lb v1 , - num ( v0 ) bgez v1 , hexvar move s2 , a2 lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) addiu a0 , zero , hexvar bal - hexvar move s1 , zero lw ra , hexvar ( sp ) move v0 , s1 lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a1 , zero , hexvar move s4 , a0 move v1 , s0 lbu a0 , ( v1 ) beq a0 , a1 , hexvar nop addiu v1 , v1 , num bne v0 , v1 , hexvar nop beqz s4 , hexvar nop lw s1 , ( s4 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - hexvar ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx lea eax , [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num call hexvar add esp , hexvar pop ebp ret
push r15 push r14 mov r15 , r8 push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi mov rbp , rcx sub rsp , hexvar mov qword ptr [ rsp ] , rdx call hexvar mov esi , hexvar mov rdi , rbx movsxd r13 , eax mov r14 , qword ptr [ rbx + hexvar ] call hexvar test rax , rax je hexvar test r15 , r15 je hexvar mov rcx , rax mov eax , dword ptr [ r12 + hexvar ] and eax , num cmp eax , num je hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) addiu s0 , sp , hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) move a0 , s0 sw s3 , hexvar ( sp ) move s3 , a2 sw gp , hexvar ( sp ) sw a1 , hexvar ( sp ) sw s4 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop move a0 , s0 lw gp , hexvar ( sp ) lw s2 , num ( s2 ) lw a1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar lw a2 , num ( s2 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw v0 , - hexvar ( v0 ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) sw v1 , hexvar ( sp ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s3 , a1 jalr t9 move s2 , a2 addiu a3 , sp , hexvar lw gp , hexvar ( sp ) move a2 , zero addiu a1 , zero , hexvar lw t9 , - hexvar ( gp )
push r14 push r13 push r12 push rbp push rbx cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rbp , rdi mov r14 , rsi mov r13d , edx mov r12 , rcx mov edi , hexvar call hexvar mov rbx , rax mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , r14 mov rax , qword ptr [ rbp + hexvar ] movzx eax , byte ptr [ rax + hexvar ] shr al , num and eax , num mov dword ptr [ rbx + hexvar ] , eax mov rdi , rbp call hexvar mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , r13d mov qword ptr [ rbx + hexvar ] , r12 mov rdx , qword ptr [ rbp + hexvar ] test rdx , rdx jne hexvar lea rdx , [ rbp + hexvar ] jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rdx ] test rax , rax jne hexvar mov qword ptr [ rdx ] , rbx lea rsi , [ rbp + hexvar ] mov rdi , rbp call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] sub esi , dword ptr [ ebp + hexvar ] add esi , num add esi , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , edx cdq mov esi , num idiv esi mov esi , dword ptr [ ebp - hexvar ] sub esi , edx add esi , num sub esi , num mov eax , esi mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] and esi , hexvar cmp esi , num mov esi , hexvar cmovne edx , esi or edx , hexvar mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] and edx , hexvar cmp edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s0 , a0 jalr t9 move s1 , a2 blez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s1 jalr t9 move a0 , s0 blez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 addiu s0 , zero , num lw ra , hexvar ( sp ) move v0 , s0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a1 , hexvar lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) addiu a1 , a1 , hexvar jalr t9 lw a0 , ( s0 ) lw gp , hexvar ( sp ) lw a0 , ( s0 ) lw t9 , - hexvar ( gp )
call hexvar add eax , hexvar push ebx mov edx , dword ptr [ esp + num ] lea ebx , [ eax - hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea eax , [ eax - hexvar ] test ecx , ecx je hexvar jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp edx , dword ptr [ eax + hexvar ] jne hexvar cmp ecx , dword ptr [ eax + hexvar ] jne hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rbp - num ] cmp dword ptr [ rsi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rdi , rax lea rsi , [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar lea rcx , [ rbp - hexvar ] mov rdi , rax mov rsi , rcx mov edx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov rdi , qword ptr [ rbp - num ] lea rsi , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp push rbx push rax cmp qword ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call rax cmp qword ptr [ rip + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , num mov edi , hexvar mov esi , hexvar call qword ptr [ rip + hexvar ] mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call rax mov rdi , qword ptr [ rip + hexvar ] xor esi , esi call hexvar mov rdi , qword ptr [ rip + hexvar ] cmp eax , - num je hexvar mov ebp , eax mov esi , eax mov rdx , rbx call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call rax cmp ebp , - num je hexvar not ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , rbx call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop rbp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] mov r0 , num bl hexvar mov r3 , r0 mov r2 , r3 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r4 , [ r3 , hexvar ] mov r2 , num ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 str r3 , [ r4 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bge hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 ] mov r1 , num mov r0 , r3 bl hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] push qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] push rdx lea r9 , [ rip + hexvar ] mov r8d , hexvar mov ecx , hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add rsp , hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar call hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax + num ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rax ] , num nop leave ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar test rdi , rdi je hexvar mov r12 , rsi test rsi , rsi je hexvar mov r14 , rdx test rdx , rdx je hexvar mov r15 , rcx test rcx , rcx je hexvar mov rbx , rdi mov rdi , rsp lea rsi , [ rsp + num ] xor edx , edx xor eax , eax call hexvar mov ebp , eax test eax , eax jne hexvar cmp rbx , r12 je hexvar mov rdi , qword ptr [ rbx ] mov rsi , qword ptr [ r12 ] call qword ptr [ rip ] mov ebp , eax test eax , eax jne hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , qword ptr [ r12 + num ] call qword ptr [ rip ] mov ebp , eax test eax , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ r12 + hexvar ] call qword ptr [ rip ] mov ebp , eax test eax , eax jne hexvar mov rdi , qword ptr [ r12 + hexvar ] mov rsi , qword ptr [ rsp ] call qword ptr [ rip ] mov ebp , eax test eax , eax jne hexvar mov rdi , qword ptr [ rsp ] mov rsi , r14 mov rdx , r15 call qword ptr [ rip ] mov ebp , eax test eax , eax jne hexvar mov rsi , qword ptr [ r12 + num ] mov rdi , qword ptr [ r12 + hexvar ] mov rdx , rdi call qword ptr [ rip ] mov ebp , eax test eax , eax jne hexvar mov rdi , qword ptr [ r12 + hexvar ] mov rsi , r14 mov rdx , r15 call qword ptr [ rip ] mov ebp , eax test eax , eax jne hexvar mov rdi , qword ptr [ r12 + hexvar ] mov rsi , rdi mov rdx , rdi call qword ptr [ rip ] mov ebp , eax test eax , eax je hexvar mov rdi , qword ptr [ rsp ] mov rsi , qword ptr [ rsp + num ] xor edx , edx xor eax , eax call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r5 , r0 mov r6 , r1 mov sb , r2 mov r7 , r3 ldr r8 , [ r0 , hexvar ] mov r1 , hexvar ldr r0 , [ r0 ] bl hexvar subs r4 , r0 , num beq hexvar mov r3 , num str r3 , [ r4 ] str r6 , [ r4 , num ] strb sb , [ r4 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ r4 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ r4 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ r4 , hexvar ] ldr r3 , [ sp , hexvar ] strb r3 , [ r4 , hexvar ] cmp r7 , num beq hexvar ldrb r3 , [ r7 ] cmp r3 , num bne hexvar mov r3 , num str r3 , [ r4 , num ] cmp r8 , num beq hexvar ldr r3 , [ r8 , num ] ldr r2 , [ r3 , num ] cmp r2 , r6 beq hexvar ldrb r1 , [ r3 , hexvar ] cmp r1 , num beq hexvar mov r0 , hexvar bl hexvar cmp r0 , num beq hexvar str r6 , [ r0 ] ldr r3 , [ r5 , hexvar ] str r3 , [ r0 , num ] str r4 , [ r0 , num ] str r4 , [ r5 , hexvar ] str r0 , [ r5 , hexvar ] ldr r3 , [ r5 , hexvar ] add r3 , r3 , num str r3 , [ r5 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 svchs hexvar
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add eax , hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ hexvar ] test bl , num mov edi , hexvar cmovne eax , edi mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
beqz a0 , hexvar nop lw v0 , hexvar ( a0 ) beqz v0 , hexvar nop j hexvar nop jr ra addiu v0 , zero , num jr ra move v0 , zero
push { r4 , r5 , r6 , r7 , lr } ldr r4 , [ pc , hexvar ] subs r7 , r1 , num ldr r1 , [ r4 ] sub sp , sp , hexvar str r1 , [ sp , num ] beq hexvar cmp r2 , num mvneq r5 , num bne hexvar ldr r2 , [ sp , num ] ldr r3 , [ r4 ] mov r0 , r5 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov eax , dword ptr [ rdi + hexvar ] mov edx , dword ptr [ rsi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar ret nop dword ptr [ rax ] push r12 push rbp mov rbp , rdi push rbx mov rbx , rsi mov esi , hexvar mov rdi , qword ptr [ rbx ] call hexvar mov rdi , qword ptr [ rbp ] mov esi , hexvar mov r12 , rax call hexvar lea rdx , [ rip + hexvar ] test rax , rax cmove rax , rdx test r12 , r12 cmove r12 , rdx mov rsi , rax mov rdi , r12 call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbp ] mov rdi , qword ptr [ rbx ] pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] add edx , num mov dword ptr [ esp ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ ebp - hexvar ] and cl , num mov byte ptr [ eax ] , cl add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] sub rcx , rdx setbe al movzx r8d , al mov edx , r8d mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rcx jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax sete cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx seta dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar mov esi , eax push hexvar call hexvar add esp , hexvar mov dword ptr [ eax ] , esi mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov ax , word ptr [ rsi ] mov cx , hexvar xor cx , num mov dx , ax xor dx , cx and dx , ax movzx r8d , dx cmp r8d , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rax , qword ptr [ hexvar ] jne hexvar xor eax , eax mov cl , al mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rbp - num ] , rdx test cl , num jne hexvar jmp hexvar mov al , num test al , num jne hexvar jmp hexvar xor eax , eax mov cl , al test cl , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , hexvar xor edx , hexvar or ecx , esi or edx , hexvar xor ecx , hexvar and ecx , edx cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + num ] , rax add rsp , hexvar pop rbp ret
push r15 push r14 lea rax , [ rip + hexvar ] push r13 push r12 mov r12 , rdx push rbp push rbx mov rbx , rcx mov r14 , rdi mov r15 , rsi sub rsp , hexvar test rcx , rcx cmove rbx , rax xor ebp , ebp call hexvar test r12 , r12 mov r13 , rax mov eax , dword ptr [ rax ] sete bpl or ebp , dword ptr [ rbx + num ] lea r10 , [ rbx + num ] sub rsp , num mov r8d , dword ptr [ rbx ] mov rcx , r15 mov dword ptr [ rsp + hexvar ] , eax push qword ptr [ rbx + hexvar ] mov rdx , r14 push qword ptr [ rbx + hexvar ] push r10 xor esi , esi mov r9d , ebp xor edi , edi mov qword ptr [ rsp + hexvar ] , r10 call hexvar lea rsi , [ rax + num ] mov qword ptr [ rsp + hexvar ] , rax add rsp , hexvar mov rdi , rsi mov qword ptr [ rsp + hexvar ] , rsi call hexvar mov qword ptr [ rsp + hexvar ] , rax sub rsp , num push qword ptr [ rbx + hexvar ] push qword ptr [ rbx + hexvar ] mov r10 , qword ptr [ rsp + hexvar ] mov r9d , ebp mov r8d , dword ptr [ rbx ] mov rcx , r15 mov rdx , r14 mov rdi , rax push r10 mov rsi , qword ptr [ rsp + hexvar ] call hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar test r12 , r12 mov dword ptr [ r13 ] , eax je hexvar mov r11 , qword ptr [ rsp + hexvar ] mov qword ptr [ r12 ] , r11 mov rax , qword ptr [ rsp + hexvar ] add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
ldr r3 , [ r1 , hexvar ] push { r4 , r5 , r6 , lr } cmp r3 , num mov r4 , r1 mov r5 , r0 beq hexvar mov r1 , r4 mov r0 , r5 pop { r4 , r5 , r6 , lr } b hexvar mov r1 , hexvar bl hexvar subs r3 , r0 , num popeq { r4 , r5 , r6 , pc } str r3 , [ r4 , hexvar ] mov r1 , r4 mov r0 , r5 pop { r4 , r5 , r6 , lr } b hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push r15 push r14 mov r14 , rsi push r13 push r12 mov r13 , r9 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ r9 ] , num mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + num ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar mov r12 , rax lea rbp , [ rax + hexvar ] jmp hexvar nop dword ptr [ rax ] movzx esi , r15b mov rdi , rbp call hexvar mov rdi , rbx call hexvar cmp eax , - num mov r15d , eax jne hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ r12 + hexvar ] mov rdx , qword ptr [ r12 + num ] lea rdi , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ r13 ] , rax call hexvar test al , al je hexvar xor r15d , r15d mov rdi , r12 call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , r15d jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rdx mov rbp , rsi mov rbx , rdi mov qword ptr [ rsp ] , num mov rdi , rdx call hexvar mov r12 , rax mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , qword ptr [ rbx + hexvar ] mov rcx , rsp mov rdi , rbp call hexvar test eax , eax je hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rdi , r13 call hexvar cmp rax , num jne hexvar mov eax , dword ptr [ rbx ] test al , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov rdi , r13 call hexvar mov rdi , rbp mov rsi , rax call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d xor r15d , r15d xor ebp , ebp mov rdi , qword ptr [ rsp ] call hexvar mov rdi , r14 call hexvar mov rdi , r15 call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - num ] , - num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov eax , num add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
cmp edi , num ja hexvar mov edi , edi jmp qword ptr [ rdi * num + hexvar ] lea rax , [ rsi + num ] ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp jmp eax lea esi , [ esi ] cmp edi , hexvar mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx jg hexvar call hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar pop edx pop ecx mov ecx , dword ptr [ esp + hexvar ] shl eax , num push ecx mov edx , dword ptr [ esp + hexvar ] push edx push ebp push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push edi push esi call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] jmp rax mov eax , dword ptr [ rbp - num ] shl eax , num mov ecx , dword ptr [ rbp - num ] shl ecx , num add eax , ecx add eax , dword ptr [ rbp - hexvar ] mov eax , eax mov edx , eax movzx eax , byte ptr [ rdx ] mov dword ptr [ rbp - num ] , eax pop rbp ret
push edi push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] jne hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov eax , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
mov ip , num str lr , [ sp , - num ] ! mov lr , num sub sp , sp , hexvar str ip , [ sp , hexvar ] ldr ip , [ sp , hexvar ] str r2 , [ sp , num ] str lr , [ sp ] str ip , [ sp , num ] bl hexvar add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , hexvar fld xword ptr [ ebp + num ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fnstcw word ptr [ ebp - hexvar ] mov ax , word ptr [ ebp - hexvar ] mov word ptr [ ebp - hexvar ] , hexvar fldcw word ptr [ ebp - hexvar ] mov word ptr [ ebp - hexvar ] , ax fistp qword ptr [ ebp - hexvar ] fldcw word ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx fild qword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fucomip st ( num ) fstp st ( num ) jbe hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add dword ptr [ ebp - hexvar ] , num adc eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r0 mvn r0 , num mov r5 , r1 bl hexvar cmp r0 , r4 bls hexvar mul r0 , r4 , r5 pop { r4 , r5 , r6 , lr } b hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar or v1 , a2 , a3 lw t1 , hexvar ( sp ) lw t0 , hexvar ( sp ) sw ra , hexvar ( sp ) beqz v1 , hexvar sw gp , hexvar ( sp ) lw v1 , num ( a0 ) move v0 , a0 lw a0 , hexvar ( a0 ) or v1 , v1 , a0 bnez v1 , hexvar lw ra , hexvar ( sp ) sw t1 , num ( v0 ) sw t0 , ( v0 ) sw a2 , num ( v0 ) sw a3 , hexvar ( v0 ) jr ra addiu sp , sp , hexvar addiu v0 , zero , num lw ra , hexvar ( sp ) move a3 , t1 sw v0 , hexvar ( sp ) addiu sp , sp , hexvar j hexvar move a2 , t0 lui a3 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jalr t9 addiu a0 , a0 , hexvar
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r6 , r0 ldr r1 , [ r0 ] sub sp , sp , hexvar eor r3 , r1 , r1 , ror num lsr r3 , r3 , num ldr r5 , [ pc , hexvar ] bic r3 , r3 , hexvar add r2 , sp , hexvar eor r3 , r3 , r1 , ror num str r3 , [ r2 , - num ] ! ldr r3 , [ r5 ] mov r1 , r2 mov r0 , r4 mov r2 , num str r3 , [ sp , hexvar ] bl hexvar ldr r2 , [ r6 , num ] add r1 , sp , hexvar eor r3 , r2 , r2 , ror num lsr r3 , r3 , num bic r3 , r3 , hexvar eor r3 , r3 , r2 , ror num str r3 , [ r1 , - hexvar ] ! mov r2 , num add r0 , r4 , num bl hexvar ldr r2 , [ r6 , num ] add r1 , sp , hexvar eor r3 , r2 , r2 , ror num lsr r3 , r3 , num bic r3 , r3 , hexvar eor r3 , r3 , r2 , ror num str r3 , [ r1 , - hexvar ] ! mov r2 , num add r0 , r4 , num bl hexvar ldr r2 , [ r6 , hexvar ] add r1 , sp , hexvar eor r3 , r2 , r2 , ror num lsr r3 , r3 , num bic r3 , r3 , hexvar eor r3 , r3 , r2 , ror num str r3 , [ r1 , - hexvar ] ! mov r2 , num add r0 , r4 , hexvar bl hexvar ldr r2 , [ r6 , hexvar ] add r1 , sp , hexvar eor r3 , r2 , r2 , ror num lsr r3 , r3 , num bic r3 , r3 , hexvar eor r3 , r3 , r2 , ror num str r3 , [ r1 , - hexvar ] ! mov r2 , num add r0 , r4 , hexvar bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] cmp r2 , r3 bne hexvar mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar mov r3 , r0 str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] strb r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r1 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , num bl hexvar bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bge hexvar bl hexvar mov r3 , r0 ldr r4 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r2 , r3 mov r1 , num mov r0 , num bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] mov r1 , r4 mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] cmp r3 , r2 beq hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r4 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r2 , r3 mov r1 , num mov r0 , num bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] mov r1 , r4 mov r0 , num bl hexvar b hexvar mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc } stclgt p1 , c8 , [ lr ] , { hexvar }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , esi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] jne hexvar xor eax , eax mov ecx , dword ptr [ hexvar ] cmp ecx , num mov ecx , num cmove eax , ecx mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar add esp , num pop ebp ret
lui gp , hexvar lw v0 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s4 , hexvar ( sp ) lw s4 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s4 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar addiu a1 , zero , hexvar lw s5 , num ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ hexvar ] mov ebx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov al , byte ptr [ eax + hexvar ] and al , num movzx eax , al mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov al , num and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , esi xor eax , eax mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx cmp ecx , eax sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax + hexvar ] shr al , num and eax , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar cmp dword ptr [ rbp - hexvar ] , num sete al movzx edx , al mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push r12 push rbp push rbx mov rbp , rdi mov dword ptr [ rdi ] , hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov ebx , num call hexvar mov dword ptr [ rbp ] , eax cmp eax , - num jne hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar mov r12d , eax call hexvar and eax , r12d and ebx , eax mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi jne hexvar jmp hexvar mov ebx , num mov eax , ebx pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx sub edx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , num movabs rsi , num movabs rdx , num mov ecx , hexvar mov r8d , hexvar movabs r9 , num movabs r10 , num mov qword ptr [ rsp ] , r10 mov qword ptr [ rsp + num ] , rax mov al , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebx mov ecx , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar mov ebx , dword ptr [ eax ] mov dword ptr [ ecx ] , ebx test edx , edx je hexvar mov ecx , dword ptr [ eax + num ] test ecx , ecx je hexvar mov ecx , dword ptr [ ecx ] mov dword ptr [ edx ] , ecx cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ ebx ] , eax pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , dword ptr [ rbp - hexvar ] or eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] or eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] or eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] or eax , num mov dword ptr [ rbp - hexvar ] , eax xor eax , eax mov edi , eax mov rsi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov r8d , dword ptr [ rbp - hexvar ] mov r9 , qword ptr [ rbp - hexvar ] call hexvar mov rsi , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rsi jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - hexvar ] , dl mov dl , byte ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] and dl , num movzx ebx , dl mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov byte ptr [ ebp - hexvar ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar jmp hexvar movsx eax , byte ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ hexvar ] mov esi , ecx sub esi , edx mov edx , ecx sub edx , num add esi , edx sub ecx , esi mov dword ptr [ hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp byte ptr [ ebp - hexvar ] , num setne al xor al , hexvar mov cl , al xor cl , hexvar and cl , num mov dl , num mov ah , dl xor ah , num and al , ah xor dl , num and dl , num and ah , num or cl , al or dl , ah xor cl , dl and cl , num movzx eax , cl add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , num add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r12 push rbp push rbx mov rbp , rdi mov r12 , rsi mov rbx , rdx mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx je hexvar call hexvar test al , al jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , r12 mov rdi , rbp call hexvar pop rbx pop rbp pop r12 ret
lea eax , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ esp + hexvar ] cmp eax , num je hexvar jb hexvar cmp eax , num jne hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ esp + hexvar ] cmp eax , hexvar ja hexvar mov eax , dword ptr [ ebx + eax * num - hexvar ] add eax , ebx jmp eax
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , hexvar ja hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov ebx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi jmp ebx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + ecx * num ] test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , ebx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jne hexvar cmp dword ptr [ ebp - hexvar ] , - hexvar je hexvar call hexvar jmp hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , num cmp eax , num jne hexvar xor eax , eax cmp eax , dword ptr [ ebp - hexvar ] jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - hexvar ] , al test byte ptr [ ebp - num ] , num je hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num mov rcx , rax add rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov dword ptr [ rax + hexvar ] , num pop rcx ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rsi test rdi , rdi je hexvar mov rbx , rdi mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov rdi , rbp mov eax , num call hexvar call hexvar mov r13 , rax mov rcx , qword ptr [ rax ] test rcx , rcx je hexvar mov rbx , rax lea r12 , [ rip + hexvar ] mov rdx , r12 mov esi , num mov rdi , rbp mov eax , num call hexvar add rbx , num mov rcx , qword ptr [ rbx ] test rcx , rcx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar mov rdi , r13 call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) move a2 , v0 lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v1 , zero , hexvar sw v1 , num ( v0 )
push rbp push r15 push r14 push rbx push rax mov rbp , rsi mov r15 , rdi call hexvar mov rbx , rax mov rdi , rbp call hexvar lea ecx , [ rax + num ] xor r14d , r14d cmp ecx , ebx jge hexvar movsxd rbx , ebx add rbx , r15 cdqe sub rbx , rax mov rdi , rbx mov rsi , rbp call hexvar test eax , eax jne hexvar cmp byte ptr [ rbx - num ] , hexvar jne hexvar add rbx , - num sub ebx , r15d mov r14d , ebx mov eax , r14d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdi mov qword ptr [ rsp + num ] , rdi mov r13 , rsi mov r12 , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rdi , [ rsp + num ] call hexvar test rax , rax je hexvar mov rbx , rax mov edi , dword ptr [ rax + num ] mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] call qword ptr [ rax ] cmp eax , num je hexvar mov esi , hexvar mov rdi , rbp call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
sub rsp , hexvar mov rcx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov byte ptr [ rsp + hexvar ] , num mov byte ptr [ rsp + hexvar ] , sil lea rsi , [ rsp + hexvar ] movsxd rax , dword ptr [ rip + hexvar ] sub rsi , rax mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar lea rdi , [ rsp + hexvar ] cmp eax , num jne hexvar lea rdi , [ rsp + hexvar ] sub rdi , num mov eax , ecx and eax , num add eax , hexvar mov byte ptr [ rdi ] , al shr rcx , num test rcx , rcx jne hexvar jmp hexvar lea rdi , [ rsp + hexvar ] movabs r8 , hexvar sub rdi , num mov rax , rcx mul r8 shr rdx , num lea rax , [ rdx + rdx * num ] add rax , rax sub rcx , rax add ecx , hexvar mov byte ptr [ rdi ] , cl mov rcx , rdx test rdx , rdx jne hexvar jmp hexvar mov rax , rdi cmp rsi , rdi jb hexvar jmp hexvar lea rdi , [ rsp + hexvar ] sub rdi , num mov rax , rcx and eax , hexvar movzx eax , byte ptr [ rax + hexvar ] mov byte ptr [ rdi ] , al shr rcx , num test rcx , rcx jne hexvar jmp hexvar sub rax , num mov byte ptr [ rax ] , hexvar cmp rsi , rax jne hexvar mov rdi , rsi mov rsi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dl , byte ptr [ eax + ecx ] mov byte ptr [ ebp - hexvar ] , dl mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dl , byte ptr [ eax + ecx ] mov byte ptr [ ebp - hexvar ] , dl movzx eax , byte ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx cmp ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax jne hexvar jmp hexvar test byte ptr [ hexvar ] , num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx jne hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , lr } ldrb ip , [ r2 ] sub sp , sp , hexvar cmp ip , hexvar str r0 , [ sp , hexvar ] mov r6 , r1 mov r7 , r3 ldrb r4 , [ sp , hexvar ] beq hexvar mov r0 , r2 ldr r1 , [ pc , hexvar ] bl hexvar subs r5 , r0 , num beq hexvar add r2 , sp , hexvar str r4 , [ sp ] mov r3 , r7 mov r1 , r6 str r2 , [ sp , num ] ldr r0 , [ pc , hexvar ] mov r2 , r5 bl hexvar mov r4 , r0 mov r0 , r5 bl hexvar cmp r0 , num bne hexvar mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar cmp qword ptr [ rbp - hexvar ] , num setne al mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar lea rdi , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar lea rdx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , hexvar sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , hexvar sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar lea rdi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rsi , rax mov edx , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rdx , [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov rdi , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rip ] mulsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar cvtss2sd xmm0 , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] mov esi , dword ptr [ ebp - hexvar ] xor esi , edx mov edx , dword ptr [ ebp - hexvar ] xor edx , ecx xor ecx , ecx mov bl , cl or edx , esi mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov edx , dword ptr [ eax + hexvar ] mov esi , dword ptr [ ebp - hexvar ] xor esi , edx mov edx , dword ptr [ ebp - hexvar ] xor edx , ecx or edx , esi sete bl mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] xor ecx , ecx test al , num mov edx , num cmovne ecx , edx cmp ecx , num setne al and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] xor edi , edi mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
sub rsp , num mov rax , rsi mov rsi , qword ptr [ rdi + hexvar ] xor edx , edx mov rdi , rax call hexvar cmp eax , num sbb eax , eax add rsp , num and eax , hexvar add eax , num ret
lui gp , hexvar lui v1 , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , v1 , num sw s2 , hexvar ( sp ) lui a3 , hexvar sw s4 , hexvar ( sp ) slt v0 , a2 , v0 sw s1 , hexvar ( sp ) move s4 , a1 lw s2 , - hexvar ( gp ) addiu a3 , a3 , - hexvar movz a2 , v1 , v0 addiu a1 , sp , hexvar lw v1 , hexvar ( sp ) lw v0 , ( s2 ) lw s1 , ( s4 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar str r1 , [ sp , hexvar ] mov r8 , r2 mov sb , r3 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , r0 beq hexvar mov r1 , num bl hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar cmp r8 , num sbcs r3 , sb , num blt hexvar mov r4 , num mov r5 , num b hexvar ldr r3 , [ r3 , num ] str r3 , [ sp , num ] b hexvar ldr r0 , [ sp , num ] bl hexvar cmp r0 , num bne hexvar mov r0 , hexvar bl hexvar orrs r3 , r4 , r5 moveq r3 , num movne r3 , num cmp r6 , num sbcs r2 , r7 , num orrge r3 , r3 , num cmp r3 , num beq hexvar adds r4 , r4 , r6 adc r5 , r5 , r7 ldm sp , { r2 , r3 } cmp r6 , r2 sbcs r3 , r7 , r3 blt hexvar cmp r4 , r8 sbcs r3 , r5 , sb bge hexvar subs sl , r8 , r4 sbc fp , sb , r5 stm sp , { sl , fp } mov r2 , hexvar mov r3 , num cmp r2 , sl sbcs r3 , r3 , fp movlt r2 , hexvar movlt r3 , num stmlt sp , { r2 , r3 } ldr r3 , [ sp , num ] ldr r2 , [ sp ] mov r1 , num ldr r0 , [ sp , hexvar ] add r0 , r0 , r4 bl hexvar mov r6 , r0 mov r7 , num ldm sp , { r2 , r3 } cmp r0 , r2 sbcs r3 , r7 , r3 blt hexvar orrs r3 , r4 , r5 moveq r3 , num movne r3 , num cmp r0 , num sbcs r2 , r7 , num orrge r3 , r3 , num cmp r3 , num beq hexvar b hexvar mov r0 , num bl hexvar b hexvar mvn r4 , num mvn r5 , num b hexvar mov r4 , num mov r5 , num mov r0 , r4 mov r1 , r5 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edi mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , num pop esi pop edi pop ebp ret num
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx + hexvar ] , rax sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar add rax , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 add rsp , hexvar pop rbp ret
mov rcx , qword ptr [ rip + hexvar ] lea rax , [ rip + hexvar ] jmp hexvar sub rax , num mov byte ptr [ rax + num ] , hexvar cmp rcx , rax ja hexvar movzx edx , byte ptr [ rax ] cmp dl , hexvar jg hexvar add edx , num mov byte ptr [ rax ] , dl ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jge hexvar cmp dword ptr [ hexvar ] , - hexvar jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbx mov rbx , rdi cmp dword ptr [ rip + hexvar ] , num je hexvar mov esi , hexvar mov rdi , rbx call hexvar mov rdx , rax mov eax , num test rdx , rdx je hexvar mov qword ptr [ rbx + hexvar ] , rdx mov qword ptr [ rdx ] , num mov qword ptr [ rdx + num ] , num mov eax , num pop rbx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push { r4 , r5 , r6 , r8 , sb , lr } ldr r6 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r6 ] mov r2 , r0 mov r4 , r0 mov r1 , num mov r0 , sp str r3 , [ sp , hexvar ] bl hexvar cmp r0 , num bne hexvar mov r2 , r0 mov r5 , r0 ldr r1 , [ pc , hexvar ] mov r0 , sp bl hexvar ldrb r3 , [ r4 , hexvar ] mov r2 , r5 bic r3 , r3 , num cmp r0 , num movne r0 , r3 orreq r0 , r3 , num ldr r1 , [ pc , hexvar ] strb r0 , [ r4 , hexvar ] mov r0 , sp bl hexvar cmp r0 , num beq hexvar mov r2 , r5 mov r0 , sp ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num bne hexvar mov r1 , hexvar mov r0 , r4 ldr r5 , [ r4 , hexvar ] bl hexvar cmp r0 , num str r0 , [ r4 , hexvar ] streq r5 , [ r4 , hexvar ] beq hexvar mov r8 , num mov sb , num ldr r3 , [ r4 , num ] stm r0 , { r8 , sb } ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 cmp r0 , num beq hexvar ldr r3 , [ r4 , num ] mov r0 , r4 ldr r3 , [ r3 , hexvar ] blx r3 cmp r0 , num beq hexvar ldrb r3 , [ r4 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar ldr r0 , [ r4 , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r8 , sb , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebx sub esp , num call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] and edx , hexvar cmp edx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov word ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub eax , num sbb ecx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jl hexvar jmp hexvar call hexvar mov dword ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] or eax , ecx sete dl and dl , num mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - hexvar ] , eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ eax + hexvar ] cmp dword ptr [ edx + hexvar ] , ecx jne hexvar mov ecx , dword ptr [ eax ] cmp dword ptr [ edx ] , ecx jne hexvar mov ecx , dword ptr [ edx + hexvar ] cmp ecx , dword ptr [ eax + hexvar ] cmovae eax , edx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov edi , num call qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar call qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar xor eax , eax mov esi , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , num call hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ num ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov rax , qword ptr [ num ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rcx call rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num pop rbp ret
mov eax , dword ptr [ esp + num ] mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sp , sp , hexvar mov r5 , r0 mov r8 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp ] mov r2 , num mov r3 , num bl hexvar cmp r0 , num movne r4 , num bne hexvar mov r6 , num ldr r7 , [ pc , hexvar ] b hexvar mov r2 , r5 mov r1 , r6 add r0 , sp , hexvar bl hexvar ldrb r2 , [ sp , hexvar ] subs r3 , r2 , hexvar movne r3 , num cmp r0 , num movne r3 , num cmp r3 , num bne hexvar subs r4 , r0 , num movne r4 , num cmp r4 , num bne hexvar mov r2 , r5 mov r1 , num add r0 , sp , hexvar bl hexvar cmp r0 , num bne hexvar ldrb sl , [ sp , hexvar ] ldrb r3 , [ sp , hexvar ] ldrb sb , [ r7 , r3 ] cmp sb , hexvar beq hexvar ldrb r3 , [ sp , hexvar ] ldrb r3 , [ r7 , r3 ] cmp r3 , hexvar beq hexvar sub r3 , r3 , num add sb , r3 , sb , lsl num cmp sb , hexvar bhi hexvar mov r2 , r5 mov r1 , sb add r0 , sp , hexvar bl hexvar cmp r0 , sb bne hexvar add r3 , sp , hexvar add r3 , r3 , sb mov r2 , num strb r2 , [ r3 , - hexvar ] add r3 , sp , hexvar add r3 , r3 , sb add r2 , sp , hexvar mov r1 , sl mov r0 , r5 blx r8 cmp r0 , num beq hexvar mov r2 , r5 mov r1 , r6 add r0 , sp , hexvar bl hexvar ldrb r2 , [ sp , hexvar ] subs r3 , r2 , hexvar movne r3 , num cmp r0 , num movne r3 , num cmp r3 , num bne hexvar subs r4 , r0 , num movne r4 , num b hexvar mov r4 , num mov r0 , r4 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov ecx , hexvar xor ebp , ebp mov r15d , hexvar mov r12d , hexvar jmp hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , rbx call hexvar mov ecx , hexvar nop dword ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ebp , dword ptr [ rsp + hexvar ] add ebp , num mov ecx , hexvar jmp hexvar nop cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov dword ptr [ rsp + hexvar ] , ebp mov ecx , dword ptr [ rsp + hexvar ] cmp ecx , dword ptr [ rbx ] mov ecx , hexvar cmovl ecx , r12d jmp hexvar mov rcx , qword ptr [ rbx + num ] movsxd rdx , dword ptr [ rsp + hexvar ] cmp qword ptr [ rcx + rdx * num ] , r14 mov ecx , hexvar cmove ecx , r15d jmp hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] mov eax , dword ptr [ rax + hexvar ] add rsp , hexvar pop rbp ret
cmp r1 , num push { r4 , lr } blt hexvar ldr r0 , [ r0 , hexvar ] beq hexvar add r1 , r1 , num bics r1 , r1 , num bne hexvar bl hexvar mov r4 , r0 cmp r4 , num beq hexvar mov r0 , r4 pop { r4 , pc }
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sp , sp , hexvar mov r7 , r2 ldr r6 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] ldr r2 , [ r2 ] str r2 , [ sp , hexvar ] ldr r2 , [ r7 ] tst r2 , num bne hexvar mov r8 , r0 ldr r4 , [ r1 , hexvar ] ldr r2 , [ r4 , hexvar ] cmp r2 , num movne r4 , num ldr r5 , [ r4 , hexvar ] ldrb r2 , [ r1 ] tst r2 , num beq hexvar ldr r2 , [ r4 , hexvar ] lsl r3 , r3 , num add r3 , r3 , hexvar str r3 , [ sp , num ] ldr ip , [ r5 , hexvar ] ldr r3 , [ r5 , hexvar ] add r0 , r6 , r3 ldr r3 , [ ip , hexvar ] add r3 , r3 , r0 str r3 , [ sp ] mov r3 , num str r3 , [ sp , num ] mov r3 , sp mov r0 , r8 bl hexvar ldr r1 , [ r5 , hexvar ] ldr r3 , [ r8 , num ] ldr r3 , [ r3 , hexvar ] add r1 , r1 , r6 ldr r0 , [ sp , hexvar ] blx r3 add r6 , r6 , num ldr r1 , [ r5 , hexvar ] ldr r3 , [ r8 , num ] ldr r3 , [ r3 , hexvar ] add r1 , r1 , r6 ldr r0 , [ sp , hexvar ] blx r3 ldr r3 , [ r7 ] orr r3 , r3 , num str r3 , [ r7 ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add edi , hexvar sub esp , num push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , eax xor ecx , num mov dword ptr [ ebp - hexvar ] , ecx mov eax , edx xor ah , num mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , ecx or eax , edx test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] fld dword ptr [ edi - hexvar ] fstp dword ptr [ eax + hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , eax xor ecx , num mov ebx , ecx mov eax , edx xor ah , num mov esi , eax mov eax , esi or eax , ebx test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] fld dword ptr [ edi - hexvar ] fstp dword ptr [ eax + hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] fld dword ptr [ edi - hexvar ] fstp dword ptr [ eax + hexvar ] mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , num lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edi xor edi , edi cmp dword ptr [ eax ] , num mov dword ptr [ esp + hexvar ] , edx ja hexvar mov edx , dword ptr [ eax ] mov ecx , dword ptr [ ebx + edx * num - hexvar ] add ecx , ebx jmp ecx lea esi , [ esi ]
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax test rax , rax je hexvar pop rcx ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 beqz a1 , hexvar move s2 , a1 move s0 , a1 lw v0 , hexvar ( s1 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar cmp eax , dword ptr [ ebp - hexvar ] ja hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , cl movzx eax , byte ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , eax mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push r12 push rbp push rbx mov rbx , rdi mov r12 , rsi mov rbp , rdx mov rdx , qword ptr [ rdx + hexvar ] call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] mov eax , edi mov rcx , rax sub rcx , num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num ] jmp rcx movabs rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] sub rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jg hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar add rax , rdx add rax , rcx sub rax , rdx cqo mov ecx , num idiv rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx ] mov rsi , qword ptr [ rbp - hexvar ] shl rsi , num add rcx , rsi mov rdi , rax mov rsi , rcx call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jge hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov byte ptr [ rbp - num ] , num jmp hexvar jmp hexvar jmp hexvar mov byte ptr [ rbp - num ] , num mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r1 mov r4 , r0 mov r8 , r1 ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r7 ] add r5 , r0 , hexvar str r3 , [ sp , hexvar ] ldr r1 , [ r4 , num ] ldr ip , [ r4 ] eor r3 , r1 , r1 , ror num eor r2 , ip , ip , ror num lsr r2 , r2 , num lsr r3 , r3 , num bic r2 , r2 , hexvar bic r3 , r3 , hexvar eor ip , r2 , ip , ror num eor r3 , r3 , r1 , ror num mov r0 , r8 add r4 , r4 , num mov r2 , num mov r1 , sp stm sp , { r3 , ip } bl hexvar cmp r4 , r5 add r8 , r8 , num bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r7 ] mov r0 , r6 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
mov eax , dword ptr [ rip ] test eax , eax jne hexvar movaps xmm0 , xmmword ptr [ rip ] xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 add byte ptr [ rsi ] , bh add byte ptr [ rax ] , al add byte ptr [ rax ] , al test dword ptr [ rax + hexvar ] , ebp sti lea eax , [ rax ] add byte ptr [ rax ] , al add byte ptr [ rdi + rbp ] , dh mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al test dword ptr [ rax ] , ebp add eax , num xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 xorps xmm0 , xmmword ptr [ rip ] sub dword ptr [ rip + hexvar ] , eax sti lea ecx , [ rdi ] test ecx , ecx jle hexvar xor eax , eax cmp ecx , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar ret
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax nop dword ptr [ rax ] lea rax , [ rip + hexvar ] ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a3 , hexvar addiu v0 , zero , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a3 , a3 , - hexvar sw v0 , hexvar ( sp ) addiu a2 , zero , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar move v0 , zero lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax test dl , num jne hexvar test edx , edx mov r14 , rdi mov ecx , dword ptr [ rdi - num ] mov eax , dword ptr [ rdi - num ] jle hexvar sub edx , num lea rbp , [ rdi - hexvar ] mov rbx , rsi shr edx , num mov r12 , rsp lea r13 , [ rsi + rdx * num + num ] nop word ptr [ rax + rax ] mov edi , dword ptr [ rbx ] mov esi , dword ptr [ rbx + num ] mov rdx , r12 add rbx , num bswap edi bswap esi xor esi , eax xor edi , ecx mov rcx , rbp call hexvar mov ecx , dword ptr [ rsp ] mov eax , dword ptr [ rsp + num ] mov edx , ecx mov byte ptr [ rbx - num ] , cl mov byte ptr [ rbx - num ] , ch shr edx , hexvar mov byte ptr [ rbx - num ] , al mov byte ptr [ rbx - num ] , ah mov byte ptr [ rbx - num ] , dl mov edx , ecx shr edx , hexvar mov byte ptr [ rbx - num ] , dl mov edx , eax shr edx , hexvar mov byte ptr [ rbx - num ] , dl mov edx , eax shr edx , hexvar mov byte ptr [ rbx - num ] , dl cmp r13 , rbx jne hexvar mov dword ptr [ r14 - num ] , eax mov dword ptr [ r14 - num ] , ecx mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r13 push r12 mov r13 , rdi push rbp push rbx mov ebx , esi mov rbp , rdx mov esi , hexvar mov edi , ebx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdx , rsp call hexvar mov rsi , rbp mov r12d , eax mov edx , num mov edi , ebx call hexvar test r12d , r12d mov rbp , rax jne hexvar test rax , rax js hexvar lea rdx , [ rsp + hexvar ] xor eax , eax mov esi , hexvar mov edi , ebx call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] cmp qword ptr [ rsp + num ] , rax jne hexvar mov rax , qword ptr [ rsp + hexvar ] cmp qword ptr [ rsp + hexvar ] , rax je hexvar nop mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
cmp r3 , num beq hexvar ldrb ip , [ r2 , num ] sub ip , ip , hexvar cmp ip , num bls hexvar str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp ] bl hexvar add sp , sp , hexvar pop { pc }
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rax , rdi sub rax , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jge hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ ebp - num ] , num mov al , num mov byte ptr [ ebp - hexvar ] , al jne hexvar cmp dword ptr [ ebp - num ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx ecx , al mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp push r14 push rbx mov r14d , edx mov rbp , rsi mov rbx , rdi call hexvar mov dword ptr [ rax ] , num mov rax , qword ptr [ rbx + hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar cmp dword ptr [ rax + hexvar ] , num jne hexvar cmp dword ptr [ rax + hexvar ] , num jne hexvar mov rdi , rbx call hexvar test eax , hexvar je hexvar mov rax , qword ptr [ rbx + hexvar ] jmp hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov rax , qword ptr [ rbx + hexvar ] mov dword ptr [ rax + hexvar ] , num add dword ptr [ rax + hexvar ] , num add dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov rdi , rbx mov esi , hexvar mov rdx , rbp mov ecx , r14d xor r8d , r8d call qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] cmp eax , - num jne hexvar cmp dword ptr [ rcx + hexvar ] , num jne hexvar add dword ptr [ rbx + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov rdi , rbx mov esi , hexvar mov rdx , rbp mov ecx , r14d xor r8d , r8d call qword ptr [ rax + hexvar ] add dword ptr [ rbx + hexvar ] , - num pop rbx pop r14 pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] movzx ecx , byte ptr [ ecx ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar cmp dword ptr [ num ] , num jne hexvar mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al movabs rdi , num mov dword ptr [ rip ] , num mov dword ptr [ rip ] , num add dword ptr [ rax ] , eax add byte ptr [ rax ] , al add byte ptr [ rcx - hexvar ] , cl
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , eax mov dword ptr [ esp ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret num
push r14 push r13 push r12 push rbp mov rbp , rdi push rbx mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r13 , - num jmp hexvar nop mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + num ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , num jbe hexvar sub eax , num mov r12 , qword ptr [ rbx + rax * num + hexvar ] cmp qword ptr [ r12 + hexvar ] , num jne hexvar mov eax , dword ptr [ r12 + hexvar ] test eax , hexvar je hexvar test al , hexvar je hexvar mov rdi , qword ptr [ r12 + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ rbp + num ] xor esi , esi mov edx , num mov eax , dword ptr [ rax + hexvar ] test eax , eax mov rax , qword ptr [ rbp + hexvar ] sete sil call qword ptr [ rax + hexvar ] test rax , rax mov r14 , rax je hexvar mov rsi , qword ptr [ r12 + hexvar ] xor edx , edx mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ r12 + hexvar ] mov rdx , rbp mov rdi , r14 call hexvar cmp rax , qword ptr [ r12 + hexvar ] je hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , r13 mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx mov rdi , rbp pop rbp pop r12 pop r13 pop r14 jmp hexvar nop lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ r12 + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov eax , dword ptr [ r12 + hexvar ] jmp hexvar nop dword ptr [ rax + rax ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] movsd xmm0 , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , zero , - hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) and v0 , s0 , v0 sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) sw v1 , hexvar ( sp ) bnez v0 , hexvar addiu v0 , zero , - hexvar move s3 , a0 move s2 , a1 move s5 , a2 beq a0 , v0 , hexvar move s6 , a3 lb v1 , ( a1 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar beq s0 , v0 , hexvar lw t9 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) move a2 , s6 move a1 , s5 jalr t9 move a0 , s2 lw gp , hexvar ( sp ) move s4 , v0 lw a0 , hexvar ( sp ) move v0 , s4 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu fp , sp , hexvar move a2 , a1 move a1 , a0 bal hexvar move a0 , fp lw gp , hexvar ( sp ) beqz v0 , hexvar move s7 , v0 addiu v0 , zero , hexvar beq s0 , v0 , hexvar lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lhu v1 , hexvar ( a0 )
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar lw s0 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar move s2 , a3 lw t9 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw s1 , ( v0 )
push rbp push rbx mov rbp , rdi sub rsp , num mov eax , dword ptr [ rip + hexvar ] cmp eax , - num je hexvar and eax , hexvar mov ebx , esi or eax , esi test esi , hexvar cmove ebx , eax test ebx , hexvar jne hexvar test bh , hexvar jne hexvar test bl , num jne hexvar test bh , hexvar jne hexvar test ebx , hexvar jne hexvar xor eax , eax add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ hexvar ] mov ebx , dword ptr [ hexvar ] xor edx , ebx xor esi , edi or esi , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi jne hexvar jmp hexvar call hexvar mov dword ptr [ eax ] , hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - hexvar ] , al test byte ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ eax + hexvar ] movsd qword ptr [ hexvar ] , xmm0 mov al , byte ptr [ ebp - hexvar ] and al , num mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov bl , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar cmp eax , dword ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , bl jg hexvar cmp dword ptr [ ebp - hexvar ] , hexvar setle al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp push edi push esi push ebx call hexvar add ecx , hexvar mov edx , dword ptr [ ecx + hexvar ] mov ebp , dword ptr [ ecx + hexvar ] test edx , edx je hexvar mov ebx , dword ptr [ ecx + hexvar ] mov eax , ebp mov esi , num mov edi , num jmp hexvar add eax , hexvar sub edx , num je hexvar cmp dword ptr [ eax + num ] , num jne hexvar mov dword ptr [ eax + num ] , num add ebx , num mov esi , edi jmp hexvar mov eax , esi test al , al jne hexvar cmp byte ptr [ ecx + hexvar ] , num je hexvar cmp dword ptr [ ebp + num ] , num setne al movzx eax , al mov dword ptr [ ecx + hexvar ] , eax pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] lea eax , [ eax + eax * num ] mov eax , dword ptr [ eax * num + hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] lea ecx , [ ecx + ecx * num ] mov ecx , dword ptr [ ecx * num + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar test eax , eax sete bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] lea eax , [ eax + eax * num ] mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
mov rcx , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov eax , hexvar cmp rcx , rdx jg hexvar mov eax , num jl hexvar mov rax , qword ptr [ rsi + hexvar ] sub eax , dword ptr [ rdi + hexvar ] jne hexvar sub rsp , num mov rsi , qword ptr [ rsi ] mov rdi , qword ptr [ rdi ] call hexvar add rsp , num ret
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] test edx , edx je hexvar mov ecx , dword ptr [ edx + hexvar ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , dword ptr [ edx + hexvar ] test ecx , ecx jne hexvar lea ecx , [ eax + eax ] cmp ecx , eax jb hexvar cmp eax , num mov ecx , num cmovb eax , ecx mov dword ptr [ edx + hexvar ] , eax xor eax , eax ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movss dword ptr [ rbp - hexvar ] , xmm0 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax movss xmm0 , dword ptr [ rbp - hexvar ] cvtss2sd xmm0 , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov r15 , rsi mov ebp , edi mov rdi , rsi call hexvar mov r14d , eax mov rdi , r15 call hexvar test ebp , ebp je hexvar cmp ebp , num jne hexvar test r14d , r14d jne hexvar xor edi , edi mov rsi , r15 call hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar call hexvar jmp hexvar test rax , rax je hexvar mov rbp , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov ecx , hexvar mov rdi , rbp mov rsi , rax xor edx , edx call hexvar mov edi , hexvar call hexvar mov rdi , r15 call hexvar test rax , rax mov eax , hexvar mov ebx , hexvar cmove rbx , rax mov rdi , r15 call hexvar mov r12d , eax movsxd rdi , r14d call hexvar xor ebp , ebp mov edi , hexvar mov rsi , rbx mov edx , r14d mov ecx , r12d mov r8 , rax xor eax , eax call hexvar cmp r14d , hexvar ja hexvar mov eax , r14d movabs rcx , hexvar bt rcx , rax jae hexvar mov ebp , num mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v1 , v0 , num slt v1 , v1 , s0 beqz v1 , hexvar subu s0 , s0 , v0 addu s0 , s2 , s0 move a1 , s1 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar addiu v1 , zero , hexvar lb a0 , - num ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) addiu s0 , s0 , - num b hexvar subu v0 , s0 , s2 move v0 , zero lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov ebx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + hexvar ] , edi mov dword ptr [ eax + hexvar ] , esi mov dword ptr [ eax + hexvar ] , edx mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax ] , ebx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
mov ip , num str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr lr , [ sp , hexvar ] str ip , [ sp , num ] str ip , [ sp , num ] str lr , [ sp ] bl hexvar add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a1 , hexvar ( fp ) sw a0 , hexvar ( fp ) sw a2 , hexvar ( fp ) move a3 , zero lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r15 push r14 mov r15d , edi push r13 push r12 mov r14 , rsi push rbp push rbx mov r12d , hexvar mov ebx , hexvar sub rsp , hexvar lea r13 , [ rsp + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rbp , r13 jmp hexvar nop cmp rbx , rcx ja hexvar cmp rbp , r13 je hexvar mov rdi , rbp call hexvar add rbx , rbx sub r12d , num je hexvar mov rdi , rbx call hexvar test rax , rax mov rbp , rax je hexvar mov rcx , rbx mov rdx , rbp mov rsi , r14 mov edi , r15d call hexvar test rax , rax mov rcx , rax jns hexvar mov qword ptr [ rsp + num ] , rax call hexvar cmp dword ptr [ rax ] , hexvar mov rcx , qword ptr [ rsp + num ] je hexvar cmp rbp , r13 je hexvar mov rdi , rbp xor ebp , ebp call hexvar jmp hexvar nop dword ptr [ rax ] xor ebp , ebp mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov rbp , rdx mov rbx , rsi mov r15 , rdi mov edx , num call hexvar test eax , eax jle hexvar test rbp , rbp cmovne rbx , rbp mov r14d , num mov rdi , r15 mov rsi , rbx mov edx , num call hexvar test eax , eax jle hexvar mov rdi , r15 call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov r14d , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar mov rdx , rbx xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov eax , r14d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a1 , hexvar addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu a1 , a1 , - hexvar lw ra , hexvar ( sp ) sltiu v0 , v0 , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
mov eax , dword ptr [ rip ] test eax , eax jne hexvar mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al pop rdi add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al
cmp r0 , num beq hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 ] cmp r0 , r2 beq hexvar mvn r0 , num bx lr ldr r2 , [ r3 , num ] sub r2 , r2 , hexvar sub r2 , r2 , hexvar cmp r2 , hexvar bhi hexvar ldr r2 , [ r3 , hexvar ] cmp r1 , num orrne r2 , r2 , num biceq r2 , r2 , num movne r0 , num strne r2 , [ r3 , hexvar ] streq r2 , [ r3 , hexvar ] moveq r0 , r1 bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rsi + num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + num ] mov rdx , rax xor rdx , hexvar movabs rsi , hexvar and rdx , rsi mov rdi , - num mov r8 , rdi xor r8 , rsi and rax , r8 mov r9 , rcx xor r9 , hexvar and r9 , rsi and rcx , r8 or rdx , rax or r9 , rcx xor rdx , r9 xor rdx , hexvar mov rax , rdi xor rax , hexvar movabs rcx , hexvar xor rdi , rcx or rdx , rax or rdi , rcx xor rdx , hexvar and rdx , rdi cmp rdx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] sete dl and dl , num movzx esi , dl mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] pop rbp ret
cmp r1 , hexvar bne hexvar add r0 , r0 , hexvar add r0 , r0 , num bx lr push { r4 , lr } mov r0 , r1 bl hexvar cmp r0 , num bne hexvar mov r0 , num pop { r4 , pc }
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
push r15 push r14 push r13 push r12 push rbx mov r12 , rcx mov r14 , rdx mov r15 , rsi mov r13 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov qword ptr [ rax ] , r15 mov qword ptr [ rax + num ] , r14 mov dword ptr [ rax + hexvar ] , num test r13 , r13 je hexvar mov rdi , qword ptr [ r15 + num ] call hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ r13 + hexvar ] , num jne hexvar mov qword ptr [ r13 + hexvar ] , rbx test r12 , r12 jne hexvar jmp hexvar mov rdi , qword ptr [ r13 + num ] test rdi , rdi jne hexvar mov edi , hexvar call hexvar mov rdi , rax mov qword ptr [ r13 + num ] , rax test rax , rax je hexvar mov rsi , rbx call hexvar test eax , eax je hexvar test r12 , r12 je hexvar mov rdi , qword ptr [ r12 + hexvar ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ r12 + hexvar ] , rax test rax , rax je hexvar mov rsi , r15 call hexvar test eax , eax je hexvar test r14 , r14 je hexvar add dword ptr [ r14 + hexvar ] , num jmp hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r13 pop r14 pop r15 ret
push rbx mov rbx , rdi cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx pop rbx jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
push r14 push rbx sub rsp , hexvar mov edi , num call hexvar cmp eax , - num je hexvar mov ebx , eax mov qword ptr [ rsp + num ] , num lea r14 , [ rsp + num ] mov qword ptr [ rsp ] , r14 lea r9 , [ rsp + hexvar ] mov esi , num mov edx , hexvar mov ecx , num mov r8d , hexvar mov edi , eax call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rsp + num ] lea rdi , [ rsp + hexvar ] mov edx , num mov ecx , num mov r8d , num xor r9d , r9d call hexvar mov ecx , eax mov eax , num test ecx , ecx jne hexvar mov qword ptr [ rsp + num ] , num mov qword ptr [ rsp ] , r14 lea r9 , [ rsp + hexvar ] mov esi , num mov edx , hexvar mov ecx , num mov r8d , hexvar mov edi , ebx call hexvar test eax , eax je hexvar add rsp , hexvar pop rbx pop r14 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr sb , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r3 , [ sb ] ldr r2 , [ r2 ] ldr r5 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r3 , num ] mov r4 , r0 ldr r0 , [ r0 ] str r2 , [ sp , hexvar ] blx r3 ldr r3 , [ r5 , hexvar ] cmp r3 , num bne hexvar mov r7 , num ldr r8 , [ pc , hexvar ] ldr sl , [ pc , hexvar ] b hexvar mov r0 , r6 bl hexvar cmn r0 , num str r0 , [ r5 , hexvar ] beq hexvar ldr r3 , [ sb ] ldr r1 , [ r6 ] ldr r0 , [ r4 ] ldr r3 , [ r3 , num ] blx r3 mov r1 , r4 mov r0 , r6 bl hexvar cmp r7 , num beq hexvar mov r0 , r7 bl hexvar mov r3 , num cmp r7 , r6 str r3 , [ r5 , hexvar ] str r3 , [ r5 , hexvar ] beq hexvar mov r7 , r6 mov r1 , r7 mov r0 , r4 bl hexvar subs r6 , r0 , num beq hexvar add r2 , sp , num mov r1 , num bl hexvar cmp r0 , num bne hexvar ldr r0 , [ r6 ] bl hexvar bl hexvar cmp r0 , hexvar bne hexvar ldr r0 , [ sp , num ] bl hexvar ldr r0 , [ sp , num ] bl hexvar b hexvar ldr r3 , [ r6 , num ] mov r1 , r8 ldr fp , [ r3 ] mov r0 , fp bl hexvar cmp r0 , num beq hexvar mov r3 , hexvar str r3 , [ r5 , hexvar ] b hexvar bl hexvar cmp r0 , num bne hexvar cmp r7 , num beq hexvar mov r0 , r7 bl hexvar str r6 , [ r5 , hexvar ] str r6 , [ r5 , hexvar ] ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 ldmlt r6 ! , { r0 , r1 , r3 , r6 , r7 , sl , ip , sp , pc } ^
mov edx , dword ptr [ esp + hexvar ] mov eax , ebp call hexvar mov edx , dword ptr [ esp + hexvar ] test eax , eax mov dword ptr [ edx ] , eax je hexvar mov esi , dword ptr [ esp + hexvar ] sub esp , hexvar push ebp mov ebx , dword ptr [ esp + hexvar ] call hexvar mov eax , esi call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov dword ptr [ esp + hexvar ] , num jmp hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s2 , a2 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) sw zero , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a2 , s0 move v0 , zero lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar sw s3 , hexvar ( sp ) move a3 , s1 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) xor v0 , v0 , s0 xor v1 , v1 , s1 or v0 , v0 , v1 b hexvar sltiu v0 , v0 , num
cmp r3 , num push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r0 mov r5 , r1 mov r4 , r2 beq hexvar cmp r3 , num bne hexvar ldr r7 , [ pc , hexvar ] ldrb r3 , [ r7 , num ] cmp r3 , num popeq { r4 , r5 , r6 , r7 , r8 , pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
ldr ip , [ pc , hexvar ] push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r0 , [ ip , num ] mov r4 , r1 cmp r0 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r5 ] ldr r0 , [ r4 ] ldr r3 , [ r3 ] mov r1 , num pop { r4 , r5 , r6 , lr } b hexvar adds r2 , r2 , num adc r3 , r3 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar b hexvar andeq sb , r2 , ip , ror r1 andeq sb , r2 , r4 , ror r1 andeq r7 , r1 , ip , lsl r1
push edi push ebx call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] lea ecx , [ edx + num ] mov dword ptr [ edx + num ] , num mov dword ptr [ edx + hexvar ] , num lea edi , [ edx + hexvar ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx + num ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax mov dword ptr [ edx + hexvar ] , num pop ebx pop edi ret
add r2 , r1 , r2 cmp r1 , r2 mvn r0 , r0 bhs hexvar ldr ip , [ pc , hexvar ] ldrb r3 , [ r1 ] , num eor r3 , r3 , r0 and r3 , r3 , hexvar add r3 , ip , r3 , lsl num ldr r3 , [ r3 , hexvar ] cmp r2 , r1 eor r0 , r3 , r0 , lsr num bne hexvar mvn r0 , r0 bx lr andeq r1 , ip , ip , asr num
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , hexvar mov rdi , rax mov rsi , rax movabs rdx , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
sub rsp , num mov edi , hexvar call hexvar mov edx , hexvar test rax , rax cmove rax , rdx mov edx , hexvar cmp byte ptr [ rax ] , num cmove rax , rdx add rsp , num ret
test rdi , rdi je hexvar mov eax , dword ptr [ rdi + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar push rbx mov rbx , rdi mov edi , dword ptr [ rdi + hexvar ] xor esi , esi mov edx , num call hexvar cmp rax , - num je hexvar cmp dword ptr [ rbx + hexvar ] , hexvar je hexvar pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar call hexvar mov ecx , eax mov edx , dword ptr [ eax + hexvar ] xor eax , eax cmp edx , dword ptr [ ecx + hexvar ] je hexvar add edx , num mov eax , edx sar eax , hexvar shr eax , hexvar add edx , eax and edx , hexvar sub edx , eax lea esi , [ ecx + edx * num ] mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ ecx + hexvar ] , edx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , num test ecx , ecx je hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ ecx ] , edx mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ ecx ] , edx mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test byte ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar pop ebx pop esi ret
ldr ip , [ r0 ] ldr r2 , [ r1 ] ldr r3 , [ ip , hexvar ] ldr r1 , [ r2 , hexvar ] sub r3 , r3 , r1 cmp r3 , num bne hexvar ldr r1 , [ ip , hexvar ] ldr r3 , [ r2 , hexvar ] ldr r0 , [ r1 , num ] ldr r3 , [ r3 , num ] sub r0 , r0 , r3 cmp r0 , num beq hexvar movgt r0 , num mvnle r0 , num bx lr ldr r3 , [ ip , hexvar ] ldr r2 , [ r2 , hexvar ] sub r3 , r3 , r2 cmp r3 , num bne hexvar bx lr
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 move s0 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw a0 , num ( a2 )
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r0 mov r4 , r1 ldr r6 , [ r0 , hexvar ] mov r1 , r6 mov r0 , r4 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ r5 , hexvar ] cmp r3 , num bne hexvar ldr r7 , [ r5 , hexvar ] mov r1 , r7 mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r1 , hexvar mov r0 , r7 bl hexvar cmp r0 , num beq hexvar sub r8 , r0 , r7 mov r2 , r8 mov r1 , r7 mov r0 , r4 bl hexvar cmp r0 , num bne hexvar add r1 , r8 , num add r1 , r7 , r1 add r0 , r4 , r8 bl hexvar cmp r0 , num beq hexvar ldrb r2 , [ r4 ] cmp r2 , num beq hexvar ldrb r1 , [ r6 ] clz r3 , r1 lsr r3 , r3 , num cmp r2 , r1 orrne r3 , r3 , num cmp r3 , num moveq r1 , r6 bne hexvar ldrb r2 , [ r4 , num ] ! cmp r2 , num beq hexvar ldrb ip , [ r1 , num ] ! clz r3 , ip lsr r3 , r3 , num cmp r2 , ip orrne r3 , r3 , num cmp r3 , num beq hexvar cmp r2 , hexvar addeq r4 , r4 , num bne hexvar ldrb r3 , [ r4 ] cmp r3 , num bne hexvar ldr r0 , [ r5 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , hexvar mov rdi , qword ptr [ rbp - num ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax xor eax , eax mov esi , eax xor eax , eax mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , num mov edx , num cmove eax , edx mov rcx , qword ptr [ rbp - hexvar ] mov edx , eax call hexvar xor edx , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num mov eax , num cmove edx , eax mov eax , edx add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jl hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] setge dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + num ] add ecx , - num mov dword ptr [ eax + num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + ecx * num + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + edx * num ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar xor eax , eax mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] imul eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] sub edx , ecx add eax , edx add eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar xor edx , edx div dword ptr [ ebp - hexvar ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rax + hexvar ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
push r14 push r13 mov r13 , rsi push r12 push rbp mov r12 , rdx push rbx mov ebp , edi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test edi , edi js hexvar mov rsi , r12 mov edi , ebp call hexvar cmp eax , num mov ebx , eax jle hexvar call hexvar mov r14 , rax mov dword ptr [ rax ] , hexvar test r12 , r12 je hexvar mov rax , qword ptr [ r12 ] mov rsi , qword ptr [ r12 + num ] movabs rcx , hexvar mov rbx , rsp mov qword ptr [ rsp ] , rax mov rax , rsi sar rsi , hexvar imul rcx mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rsp + hexvar ] , rax sar rdx , num sub rdx , rsi mov rsi , qword ptr [ r12 + hexvar ] mov qword ptr [ rsp + num ] , rdx mov rax , rsi sar rsi , hexvar imul rcx sar rdx , num sub rdx , rsi mov qword ptr [ rsp + hexvar ] , rdx test ebp , ebp mov rdx , rbx js hexvar xor esi , esi mov edi , ebp call hexvar test eax , eax je hexvar test r13 , r13 je hexvar mov rsi , rbx mov rdi , r13 call hexvar jmp hexvar nop dword ptr [ rax + rax ] xor ecx , ecx mov edi , hexvar call hexvar cmp eax , num mov ebx , eax jle hexvar call hexvar mov dword ptr [ rax ] , hexvar jmp hexvar nop dword ptr [ rax + rax ] jne hexvar xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push { r4 , lr } mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r1 , [ r3 ] bl hexvar cmp r0 , num beq hexvar mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r3 , [ pc , hexvar ] str r0 , [ r3 , num ] mov r0 , num pop { r4 , pc } blmi hexvar andeq r0 , r0 , r0
cmp dword ptr [ rdi + hexvar ] , hexvar je hexvar cmp byte ptr [ rdi + hexvar ] , num jne hexvar push rbx mov rax , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rsi , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rax + hexvar ] add rcx , rsi cmp rcx , rdx ja hexvar cmp rsi , rdx je hexvar sub rdx , rsi add rsi , qword ptr [ rbx + hexvar ] mov rdi , rbx call qword ptr [ rbx + hexvar ] test rax , rax js hexvar je hexvar add qword ptr [ rbx + hexvar ] , rax mov rdi , rbx call hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , num jbe hexvar sub eax , hexvar cmp eax , num jbe hexvar mov rax , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] pop rbx lea rdx , [ rax + num ] jmp hexvar nop dword ptr [ rax + rax ] ret nop word ptr [ rax + rax ] pop rbx ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] xor r8d , r8d xor ecx , ecx xor edx , edx call hexvar test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] cmp byte ptr [ rax + hexvar ] , num je hexvar movzx edx , byte ptr [ rax + hexvar ] and edx , num sub edx , num cmp edx , num jbe hexvar pop rbx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov esi , num test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar call hexvar mov ebp , eax test eax , eax je hexvar sub esp , num push num push eax push edi call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar sub esp , hexvar push ebp call hexvar lea ecx , [ eax + num ] add eax , hexvar add esp , hexvar test ecx , ecx cmovs ecx , eax mov edx , ecx sar edx , num mov dword ptr [ esp + num ] , edx lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , hexvar sub esp , num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar push hexvar add eax , eax push eax push num call hexvar mov esi , eax mov dword ptr [ esp ] , ebp call hexvar add esp , hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , lr } ldr r5 , [ pc , hexvar ] ldr r7 , [ pc , hexvar ] ldrb r4 , [ r5 , hexvar ] ldr r3 , [ r7 ] sub sp , sp , hexvar cmp r4 , num mov r6 , r0 str r3 , [ sp , hexvar ] beq hexvar ldr r3 , [ r5 , hexvar ] cmp r3 , num beq hexvar ldrb r3 , [ r5 , hexvar ] ldr r4 , [ r5 , hexvar ] cmp r3 , num add r4 , r4 , num beq hexvar ldr r0 , [ r5 , hexvar ] add r0 , r0 , num add r4 , r4 , r0 ldrb r3 , [ r5 , hexvar ] cmp r3 , num bne hexvar ldr r2 , [ r6 , hexvar ] ldr r1 , [ r5 , hexvar ] ldr r0 , [ r6 ] bl hexvar ldr r3 , [ r5 , hexvar ] add r4 , r4 , r0 cmp r3 , num beq hexvar ldr r2 , [ r6 , hexvar ] ldr r1 , [ r6 , hexvar ] ldrb r0 , [ r6 , hexvar ] bl hexvar cmp r0 , num addne r4 , r4 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r7 ] mov r0 , r4 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) beqz v0 , hexvar move s1 , a0 b hexvar nop lw v0 , ( s0 ) beqz v0 , hexvar lui a2 , hexvar bne a1 , v0 , hexvar addiu s0 , s0 , hexvar addiu s0 , s0 , - hexvar lw a0 , hexvar ( s1 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r4 , r0 bl hexvar add r0 , r0 , num bl hexvar mov sb , hexvar mov r6 , r0 mov r5 , r0 mov r7 , hexvar mov r8 , num mov sl , num mov fp , num ldrb r3 , [ r4 ] cmp r3 , num beq hexvar mov r2 , r4 cmp r3 , hexvar ldrb r1 , [ r2 , num ] ! beq hexvar strb r3 , [ r5 ] mov r3 , r1 cmp r3 , num mov r4 , r2 add r5 , r5 , num bne hexvar mov r3 , num mov r0 , r6 strb r3 , [ r5 ] add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebx sub esp , num call hexvar add eax , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , num add esp , num pop ebx ret
push { r4 , lr } mov r4 , r0 bl hexvar ldr r0 , [ r0 ] cmp r0 , hexvar cmpne r0 , num moveq r0 , num movne r0 , num ldrbeq r0 , [ r4 , hexvar ] eoreq r0 , r0 , num pop { r4 , pc }
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + num ] , num mov al , num mov dword ptr [ ebp - num ] , ecx mov byte ptr [ ebp - num ] , al je hexvar xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
clz ip , r2 cmp r3 , num lsr ip , ip , num push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } movne r6 , ip moveq r6 , num cmp r6 , num bne hexvar mov r8 , r0 mov sb , r1 mov r0 , num add r1 , r2 , hexvar mov r5 , r2 mov r7 , r3 bl hexvar subs r4 , r0 , num beq hexvar mvn r2 , num add r3 , r4 , hexvar str r5 , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] str r3 , [ r4 , num ] mov r1 , r6 add r0 , r4 , hexvar bl hexvar cmp r0 , num bne hexvar mov r3 , num ldr r2 , [ sp , hexvar ] str r8 , [ r4 , hexvar ] str sb , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] ldr r2 , [ sp , hexvar ] str r7 , [ r4 , hexvar ] str r2 , [ r4 , num ] str r3 , [ r4 , hexvar ] mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r6 , r0 , r0 , lsl num
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax js hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sl , fp , lr } ldr r6 , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] ldr r3 , [ r6 ] sub sp , sp , hexvar str r3 , [ sp , hexvar ] mov r5 , r0 mov r7 , r1 bl hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num ldrb r3 , [ r5 , hexvar ] ldrne r8 , [ r4 , hexvar ] moveq r8 , num cmp r3 , num beq hexvar add r1 , r5 , hexvar ldm r1 , { r0 , r1 } orrs r3 , r0 , r1 bne hexvar ldr r3 , [ pc , hexvar ] mov r2 , r8 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num ldrb r3 , [ r5 , hexvar ] ldrne r8 , [ r4 , hexvar ] moveq r8 , num cmp r3 , num ldreq r3 , [ pc , hexvar ] bne hexvar mov r2 , r8 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r4 , hexvar ] ldr r1 , [ pc , hexvar ] cmp r3 , num ldrne r2 , [ r4 , hexvar ] moveq r2 , num ldr r3 , [ r5 , hexvar ] mov r0 , num bl hexvar mov r2 , num mov r3 , r7 mov r1 , r2 mov r0 , r5 bl hexvar ldr r3 , [ r4 , hexvar ] mov r7 , r0 cmp r3 , num beq hexvar ldr r2 , [ r5 , hexvar ] ldr r1 , [ r5 , hexvar ] ldrb r0 , [ r5 , hexvar ] bl hexvar add r7 , r7 , r0 ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] mov r0 , r7 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sl , fp , pc }
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al movzx edx , byte ptr [ ebp - num ] mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax shr edx , cl mov eax , edx mov ebx , eax movzx edx , byte ptr [ ebp - num ] mov eax , num sub eax , dword ptr [ ebp + hexvar ] mov ecx , eax shl edx , cl mov eax , edx or eax , ebx add esp , num pop ebx pop ebp ret
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num move t0 , a1 lw v0 , hexvar ( sp ) addiu v1 , zero , num sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , ( gp ) lw a1 , ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] cmp qword ptr [ rdi ] , num jbe hexvar mov rax , qword ptr [ rbp - num ] test byte ptr [ rax + hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rcx ] mov rdi , rax mov edx , num movabs rcx , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] cmp rax , qword ptr [ rcx ] jae hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + rcx * num ] call hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] sub rcx , num sub rdx , rcx mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar jmp hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , edi mov eax , dword ptr [ eax - hexvar ] mov ebx , dword ptr [ ecx - hexvar ] mov ecx , dword ptr [ ecx - hexvar ] add ebx , - num adc ecx , - num sub esp , hexvar mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx + num ] , ebx mov dword ptr [ edx ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a3 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a2 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , zero jalr t9 move a0 , a2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a0 , s1 bal hexvar move a1 , v0 lw gp , hexvar ( sp ) sltu s1 , zero , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a2 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , num addiu a2 , a2 , hexvar move a3 , s2 lw a0 , ( v0 ) lui v0 , hexvar move s1 , zero addiu v0 , v0 , hexvar jalr t9 sw v0 , hexvar ( sp ) b hexvar lw gp , hexvar ( sp ) lui s0 , hexvar lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 move s3 , a2 move a1 , zero lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a2 , s3 move a1 , v0 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a3 , zero move a2 , zero addiu a1 , zero , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a1 , s0 move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 addiu s1 , zero , num move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s1 , zero addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp )
push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx cmp dword ptr [ esp + hexvar ] , num setne al movzx eax , al add esp , hexvar pop ebx ret
push ebx mov edx , dword ptr [ esp + num ] mov ebx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ edx + hexvar ] test ecx , ecx je hexvar mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ edx + hexvar ] mov eax , hexvar test ecx , ecx je hexvar cmp edx , dword ptr [ ecx ] je hexvar pop ebx ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ ebx + hexvar ] test ebp , ebp je hexvar mov edi , dword ptr [ ebx + hexvar ] mov ecx , edx mov esi , dword ptr [ ebx + hexvar ] mov edx , eax cmp edi , ecx ja hexvar jb hexvar cmp esi , eax ja hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num call hexvar mov esi , eax lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar pop edx pop ecx push esi push eax call hexvar add esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar add esp , hexvar mov ebp , eax add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax cmp rcx , hexvar mov eax , hexvar mov edx , hexvar cmovb edx , eax mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx cmp rax , qword ptr [ rdx * num + hexvar ] mov ecx , hexvar mov esi , hexvar cmovbe esi , ecx mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ hexvar ] , rcx mov rax , qword ptr [ hexvar ] pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw a0 , - hexvar ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui a1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp )
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - num ] mov r3 , r2 strb r3 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar mov r2 , hexvar sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar ldrb r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldrb r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push rbx xor edx , edx mov rbx , rdi call hexvar mov rdx , rax xor eax , eax test rdx , rdx je hexvar mov rcx , qword ptr [ rdx + hexvar ] mov rax , qword ptr [ rdx + hexvar ] add rax , qword ptr [ rcx + hexvar ] cmp rax , rbx sete al movzx eax , al pop rbx ret
push rbp push rbx push r12 push r13 push r14 push r15 mov r8 , rsp sub rsp , hexvar and rsp , hexvar mov qword ptr [ rsp ] , r8 mov qword ptr [ rsp + num ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rcx pxor xmm4 , xmm4 movdqu xmm0 , xmmword ptr [ rsi ] movdqu xmm1 , xmmword ptr [ rsi + hexvar ] movdqu xmm2 , xmmword ptr [ rsi + hexvar ] movdqu xmm3 , xmmword ptr [ rsi + hexvar ] movdqa xmmword ptr [ rsp + hexvar ] , xmm4 movdqa xmmword ptr [ rsp + hexvar ] , xmm4 movdqa xmmword ptr [ rsp + hexvar ] , xmm4 movdqa xmmword ptr [ rsp + hexvar ] , xmm4 movdqa xmmword ptr [ rsp + hexvar ] , xmm0 movdqa xmmword ptr [ rsp + hexvar ] , xmm1 movdqa xmmword ptr [ rsp + hexvar ] , xmm2 movdqa xmmword ptr [ rsp + hexvar ] , xmm3 movdqu xmm0 , xmmword ptr [ rdx ] movdqu xmm1 , xmmword ptr [ rdx + hexvar ] movdqu xmm2 , xmmword ptr [ rdx + hexvar ] movdqu xmm3 , xmmword ptr [ rdx + hexvar ] lea rbx , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rbx call hexvar lea rcx , [ rsp + hexvar ] xor rax , rax mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rax mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , num lea rbp , [ rsp + hexvar ] mov rsi , rcx mov rdi , rbp mov rax , num
push rbp mov rbp , rsp movlps qword ptr [ rbp - hexvar ] , xmm0 movss dword ptr [ rbp - hexvar ] , xmm1 mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx movlps qword ptr [ rbp - hexvar ] , xmm2 movss dword ptr [ rbp - hexvar ] , xmm3 mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx movlps qword ptr [ rbp - hexvar ] , xmm4 movss dword ptr [ rbp - hexvar ] , xmm5 mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov qword ptr [ rbp - hexvar ] , rdi movss xmm0 , dword ptr [ rbp - hexvar ] mulss xmm0 , dword ptr [ rbp - hexvar ] addss xmm0 , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movss dword ptr [ rcx ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] mulss xmm0 , dword ptr [ rbp - hexvar ] addss xmm0 , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movss dword ptr [ rcx + num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] mulss xmm0 , dword ptr [ rbp - hexvar ] addss xmm0 , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movss dword ptr [ rcx + num ] , xmm0 pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ eax ] mov ecx , eax sub ecx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ hexvar ] and eax , num cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push esi push ebx mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edx + hexvar ] cmp eax , num je hexvar jb hexvar cmp eax , num je hexvar xor eax , eax pop ebx pop esi ret
lui v0 , hexvar addiu v0 , v0 , hexvar addiu a1 , v0 , hexvar lbu v1 , ( v0 ) addu v1 , a0 , v1 lbu v1 , ( v1 ) sb v1 , ( v0 ) addiu v0 , v0 , num bne v0 , a1 , hexvar addiu v1 , zero , num lui v0 , hexvar jr ra sb v1 , hexvar ( v0 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num add dword ptr [ rdi + hexvar ] , num mov eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , eax mov qword ptr [ rdi + hexvar ] , num mov r15 , qword ptr [ rdi ] test r15 , r15 je hexvar mov r13 , rdx mov r12 , rsi mov rbp , rdi mov rax , qword ptr [ r15 + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov dword ptr [ rbp + hexvar ] , num mov rax , qword ptr [ r15 + num ] mov rsi , qword ptr [ rax + num ] mov rdi , r13 call qword ptr [ r12 ]
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar movss xmm0 , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov byte ptr [ hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] cmp ecx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] add eax , hexvar sub eax , ecx sub eax , hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , hexvar xor edx , hexvar or ecx , esi or edx , hexvar xor ecx , hexvar and ecx , edx cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , hexvar add ecx , eax add ecx , hexvar mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + num ] , rdx xor esi , esi call hexvar mov qword ptr [ rsp + hexvar ] , rax mov rdi , rbx call hexvar mov dword ptr [ rsp + num ] , eax mov eax , hexvar mov ebp , hexvar jmp hexvar mov eax , dword ptr [ rsp + num ] cmp eax , - num mov eax , hexvar cmove eax , ebp nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar xor eax , eax call hexvar mov eax , hexvar jmp hexvar mov rdi , rbx mov esi , num xor edx , edx xor ecx , ecx call hexvar test rax , rax sete al cmp qword ptr [ rsp + hexvar ] , num setne cl and cl , al movzx eax , cl mov rcx , qword ptr [ rsp + num ] mov dword ptr [ rcx + num ] , eax mov eax , hexvar jmp hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp ret
beqz a0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a3 , hexvar addiu v0 , zero , hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu a3 , a3 , - hexvar sw v0 , hexvar ( sp ) addiu a2 , zero , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , - num bal hexvar addiu a0 , a0 , hexvar blez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , hexvar ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rbp , qword ptr [ rdx + hexvar ] test rbp , rbp je hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov r15 , rdx mov rbx , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov r14 , rax call hexvar mov rdi , rax call hexvar mov r13 , rax mov rdi , rax mov rsi , rbx call hexvar test r14 , r14 je hexvar test r13 , r13 je hexvar mov r12 , rax test rax , rax je hexvar mov esi , hexvar mov edx , hexvar mov rdi , r13 call hexvar mov esi , hexvar mov edx , hexvar mov rdi , r13 call hexvar mov qword ptr [ rsp + hexvar ] , r12 xorps xmm0 , xmm0 movups xmmword ptr [ rsp + hexvar ] , xmm0 lea rsi , [ rsp + num ] lea rcx , [ rsp + hexvar ] mov edi , hexvar mov rdx , r15 call qword ptr [ rbp + hexvar ] test eax , eax jle hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ r14 ] , rax mov qword ptr [ r14 + num ] , r15 mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r14 + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r14 + hexvar ] , rax mov qword ptr [ r14 + hexvar ] , r12 mov rdi , r13 mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar mov rax , qword ptr [ rsp + hexvar ] jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar test r14 , r14 je hexvar mov rdi , r14 call hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + num ] movss xmm0 , dword ptr [ rsi + rdi * num ] pop rbp ret
push ebp mov ebp , esp sub esp , num mov ax , word ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov word ptr [ ebp - num ] , ax mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] cmp eax , - num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] movsx ecx , word ptr [ ebp + num ] cmp eax , ecx jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , hexvar add eax , num sub eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] add esp , num pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] lea edx , [ ebx - hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] lea esi , [ eax + num ] mov eax , esi call hexvar test eax , eax je hexvar test edi , edi je hexvar mov edx , edi mov eax , esi call hexvar test eax , eax jne hexvar xor eax , eax mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num nop leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a1 , hexvar sw gp , hexvar ( sp ) lw s3 , hexvar ( a0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r5 , [ r0 , hexvar ] ldr r2 , [ r5 , hexvar ] clz r3 , r5 lsr r3 , r3 , num cmp r2 , num orrne r3 , r3 , num cmp r3 , num beq hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] shr rax , num cmp rax , num je hexvar cmp rax , num ja hexvar cmp rax , num je hexvar jmp hexvar cmp rax , num je hexvar cmp rax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cvtsi2sd xmm1 , eax movq rax , xmm1 jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cwde cvtsi2sd xmm2 , eax movq rax , xmm2 jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cvtsi2sd xmm3 , eax movq rax , xmm3 jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cvtss2sd xmm4 , xmm0 movq rax , xmm4 jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar cvtsi2sd xmm5 , rax movq rax , xmm5 jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar movq rax , xmm0 movq xmm0 , rax leave ret
push ebp mov ebp , esp sub esp , num test byte ptr [ hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ hexvar ] sub eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + num ] , num jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + num ] , num jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a3 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bne v1 , v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bne v1 , v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( fp ) lw a1 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi + num ] mov edi , dword ptr [ edi + num ] sub esi , ebx sbb edx , edi setb bl movzx edi , bl mov edi , dword ptr [ edi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx jmp edi mov eax , hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + num ] sub esi , ecx sbb edx , eax setb bl movzx eax , bl mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } add r7 , sp , hexvar ldm r7 , { r6 , r7 } ldr sl , [ sp , hexvar ] cmp sl , num beq hexvar ldrb r5 , [ r0 , hexvar ] mov sb , r2 ands r5 , r5 , hexvar mov r8 , r1 mov r4 , r0 bne hexvar ldr fp , [ r0 , hexvar ] cmp fp , num beq hexvar mov r3 , fp mov r0 , r5 ldr r1 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] b hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr ip , [ r3 , hexvar ] and ip , ip , r1 cmp ip , r2 bne hexvar ldr ip , [ r3 , hexvar ] cmp ip , num beq hexvar cmp r0 , num ldr r0 , [ r3 , hexvar ] moveq r5 , r0 moveq r0 , num beq hexvar ldr r3 , [ r3 , hexvar ] cmp r5 , r0 movhs r5 , r0 cmp r3 , num mov r0 , num bne hexvar mov r1 , fp mov r0 , r4 bl hexvar mov r3 , num ldr r2 , [ fp , hexvar ] str r3 , [ fp , hexvar ] sub r2 , r2 , r5 mul r1 , r2 , r0 str r1 , [ fp , hexvar ] ldr fp , [ fp , hexvar ] cmp fp , r3 bne hexvar ldrb r3 , [ r4 , hexvar ] orr r3 , r3 , hexvar strb r3 , [ r4 , hexvar ] ldr r3 , [ r8 , hexvar ] tst r3 , num beq hexvar tst r3 , hexvar beq hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ fp , num ] str r3 , [ sp , num ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp , num ] ldr r3 , [ fp , num ] str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp push rbx sub rsp , num mov rbp , rsi mov ebx , dword ptr [ rdx + hexvar ] mov rax , qword ptr [ rdx + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] add rax , qword ptr [ rdx + hexvar ] mov rdx , rax call hexvar mov edi , hexvar test bl , num jne hexvar mov edi , hexvar test bh , hexvar jne hexvar mov eax , ebx and eax , hexvar cmp eax , num sbb edi , edi and edi , hexvar add edi , hexvar mov esi , hexvar test bl , num jne hexvar mov eax , ebx and eax , hexvar cmp eax , num sbb esi , esi and esi , hexvar add esi , hexvar mov edx , hexvar test bh , hexvar jne hexvar mov eax , ebx and eax , hexvar cmp eax , num sbb edx , edx and edx , hexvar add edx , hexvar mov eax , ebx and eax , hexvar cmp eax , num sbb eax , eax and eax , hexvar add eax , hexvar mov ecx , ebx and ecx , hexvar cmp ecx , num sbb r9d , r9d and r9d , hexvar add r9d , hexvar mov ecx , ebx and ecx , hexvar cmp ecx , num sbb r8d , r8d and r8d , hexvar add r8d , hexvar test bl , num je hexvar and ebx , num cmp ebx , num sbb ecx , ecx and ecx , hexvar add ecx , hexvar push rdi push rsi push rdx push rax lea rdx , [ rip + hexvar ] mov esi , num mov rdi , rbp mov eax , num call hexvar add rsp , hexvar pop rbx pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsi ] , num mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] mov qword ptr [ rsp + hexvar ] , num cmp dword ptr [ rax + num ] , num je hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov esi , edx add esi , num mov dword ptr [ hexvar ] , esi mov dword ptr [ ecx + edx * num ] , eax add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] sub edx , num mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jg hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ebp - hexvar ] cdq mov ecx , num idiv ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx ] mov esi , dword ptr [ ebp - hexvar ] shl esi , num add ecx , esi mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ ebp - hexvar ] , num jle hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , edx push num lea edx , [ esp + hexvar ] push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax mov eax , dword ptr [ eax ] test eax , eax je hexvar test ebp , ebp je hexvar sub esp , hexvar push dword ptr [ eax ] call ebp add esp , hexvar test edi , edi je hexvar sub esp , hexvar mov eax , dword ptr [ esi ] push dword ptr [ eax + num ] call edi add esp , hexvar mov eax , dword ptr [ esi ] mov edi , dword ptr [ esp + num ] mov dword ptr [ eax ] , edi mov eax , dword ptr [ esi ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , ecx mov eax , dword ptr [ esi ] mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx add edx , - hexvar sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - hexvar sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - hexvar sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbx mov ebx , dword ptr [ rdi ] cmp ebx , hexvar jg hexvar mov eax , hexvar cmp ebx , hexvar jg hexvar cmp ebx , hexvar jg hexvar cmp ebx , num je hexvar cmp ebx , hexvar je hexvar jmp hexvar lea eax , [ rbx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] cmp ebx , hexvar jg hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar jmp hexvar cmp ebx , hexvar je hexvar cmp ebx , hexvar jne hexvar mov eax , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop b hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop move v0 , zero lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
test r8 , r8 je hexvar mov eax , dword ptr [ rsi + hexvar ] and eax , num cmp eax , num je hexvar mov eax , num ret
push rbp push r14 push rbx sub rsp , hexvar mov ebp , esi mov rbx , rdi cmp esi , num jl hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] call hexvar test rax , rax je hexvar mov qword ptr [ rbx ] , rax add rbx , num add ebp , - num cmp ebp , num jg hexvar mov qword ptr [ rsp + num ] , rax mov r14d , num test ebp , ebp je hexvar call hexvar mov qword ptr [ rsp + num ] , rax test rax , rax je hexvar movsxd rdx , ebp lea rsi , [ rsp + num ] mov rdi , rbx call hexvar jmp hexvar mov qword ptr [ rsp + num ] , num xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar imul eax , dword ptr [ ebp + num ] , hexvar lea ecx , [ hexvar ] add ecx , eax mov eax , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
sub esp , num push num lea eax , [ esp + hexvar ] push eax mov ecx , num mov edx , ebp mov edi , dword ptr [ esp + hexvar ] mov eax , edi call hexvar add esp , hexvar mov esi , num test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] push edi call hexvar add esp , hexvar test eax , eax setne al movzx eax , al mov esi , eax jmp hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov ecx , dword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push r12 push rbp mov r12 , rdi push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rip + hexvar ] , num je hexvar mov edi , hexvar call hexvar mov edx , num test rax , rax mov rbp , rax mov rsi , r12 mov eax , hexvar mov edi , hexvar cmove rbp , rax call hexvar test eax , eax jne hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov rdi , rsp call hexvar test eax , eax jne hexvar call hexvar test eax , eax mov ebx , eax je hexvar cmp eax , - num je hexvar mov edi , dword ptr [ rsp ] call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rip + hexvar ] cmp rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , ebx mov rax , qword ptr [ rip + hexvar ] je hexvar lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx mov edx , dword ptr [ rsp + num ] mov dword ptr [ rax + rcx * num ] , edx mov eax , dword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw a2 , hexvar ( sp ) move a0 , zero sw gp , hexvar ( sp ) move a2 , a1 sw ra , hexvar ( sp ) addiu a1 , sp , hexvar sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a0 , s2 , hexvar bal hexvar move s0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw a0 , hexvar ( s2 ) jal hexvar move a1 , s0 lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rdi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r8 mov r9 , qword ptr [ hexvar ] mov qword ptr [ rsi ] , r9 mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] cmp qword ptr [ rcx ] , num setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx ] mov rdi , qword ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi ] call rcx cmp eax , num setne r8b mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , num mov qword ptr [ rax ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a2 sw s2 , hexvar ( sp ) addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw a2 , hexvar ( a2 )
ldr r3 , [ r0 , hexvar ] cmp r3 , num moveq r2 , num streq r2 , [ r0 , hexvar ] beq hexvar ldr r2 , [ r1 ] ldr r3 , [ r3 , num ] cmp r2 , num ldr r3 , [ r3 , hexvar ] blt hexvar cmp r3 , num bne hexvar b hexvar cmp r2 , num beq hexvar ldr r3 , [ r3 , hexvar ] sub r2 , r2 , num cmp r3 , num beq hexvar ldr r1 , [ r3 ] cmp r1 , hexvar beq hexvar mov r3 , num mov r0 , r3 bx lr ldr r3 , [ r3 , hexvar ] mov r0 , r3 bx lr
mov rax , rsi sub rsp , num mov rsi , rdx cmp rax , - num jbe hexvar add rsi , num test dil , dil mov edx , dword ptr [ rip + hexvar ] je hexvar mov rdi , rax neg rdi call hexvar mov byte ptr [ rax - num ] , hexvar sub rax , num add rsp , num ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push r15 push r14 mov r15d , r8d push r13 push r12 mov r12d , ecx push rbp push rbx mov rbp , rdx mov rbx , rdi mov rdi , rsi mov r13 , rsi sub rsp , num call hexvar xor edx , edx mov esi , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , rbp mov qword ptr [ rbx + hexvar ] , num mov rdi , rbp mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , r12d mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num call hexvar test eax , eax mov edx , num lea rsi , [ rip + hexvar ] jne hexvar lea r14 , [ rbx + hexvar ] mov rcx , rbp mov edx , hexvar mov esi , num mov r12d , eax mov rdi , r14 call hexvar cmp rax , hexvar je hexvar test rax , rax jne hexvar add rsp , num mov eax , r12d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar bl hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] cmp byte ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + num ] cmp eax , dword ptr [ ebp - num ] je hexvar mov eax , dword ptr [ ebp + num ] add eax , - num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , sp , hexvar sw s6 , hexvar ( sp ) addiu v1 , sp , hexvar sw v0 , hexvar ( sp ) move t0 , v0 lw s6 , - hexvar ( gp ) sw s7 , hexvar ( sp ) move s7 , a0 addiu a0 , sp , hexvar sw s5 , hexvar ( sp ) move s5 , a3 sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move a3 , a2 sw s2 , hexvar ( sp ) move a2 , a1 sw s1 , hexvar ( sp ) move a1 , s7 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw t0 , hexvar ( sp ) lw v0 , ( s6 ) lbu s2 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw s3 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 lbu v1 , hexvar ( sp ) beqz v1 , hexvar lw s4 , - hexvar ( gp ) beqz s2 , hexvar nop lw a0 , ( s4 ) lw v1 , hexvar ( a0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , hexvar bne hexvar bl hexvar mov r3 , r0 b hexvar ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar bl hexvar mov r3 , r0 b hexvar ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar bl hexvar mov r3 , r0 b hexvar ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar bl hexvar mov r3 , r0 b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , - num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax lea eax , [ ebp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp + hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] xor eax , dword ptr [ ecx ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] xor ecx , dword ptr [ edx + num ] or eax , ecx mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] xor ecx , dword ptr [ edx + num ] or eax , ecx mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + hexvar ] xor ecx , dword ptr [ edx + hexvar ] or eax , ecx mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + hexvar ] xor ecx , dword ptr [ edx + hexvar ] or eax , ecx mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + hexvar ] xor ecx , dword ptr [ edx + hexvar ] or eax , ecx cmp eax , num setne bl xor bl , hexvar and bl , num mov byte ptr [ ebp - num ] , bl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
test rsi , rsi sete cl test edx , edx sete al or cl , al jne hexvar test rdi , rdi jne hexvar mov eax , num ret
push rbp push r14 push rbx sub rsp , hexvar mov eax , ecx mov rbx , rdx mov r8 , rsi mov r14 , rdi lea r9d , [ rax + num ] mov qword ptr [ rsp ] , hexvar xor ebp , ebp mov esi , hexvar mov ecx , hexvar mov edx , eax xor eax , eax call hexvar mov rdi , rbx xor esi , esi call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar mov ebp , num mov rdi , rbx mov esi , num call hexvar test eax , eax je hexvar test ebp , ebp jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov esi , hexvar mov rdi , r14 call hexvar xor ebp , ebp mov rdi , rbx mov esi , num call hexvar test eax , eax je hexvar test ebp , ebp jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov esi , hexvar mov rdi , r14 call hexvar xor ebp , ebp mov rdi , rbx mov esi , num call hexvar test eax , eax je hexvar test ebp , ebp jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov esi , hexvar mov rdi , r14 call hexvar xor ebp , ebp mov rdi , rbx mov esi , num call hexvar test eax , eax je hexvar test ebp , ebp jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov esi , hexvar mov rdi , r14 call hexvar xor ebp , ebp mov rdi , rbx mov esi , num call hexvar test eax , eax je hexvar test ebp , ebp jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov esi , hexvar mov rdi , r14 call hexvar xor ebp , ebp mov rdi , rbx mov esi , num call hexvar test eax , eax je hexvar test ebp , ebp jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov esi , hexvar mov rdi , r14 call hexvar xor ebp , ebp mov rdi , rbx mov esi , num call hexvar test eax , eax je hexvar test ebp , ebp jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov esi , hexvar mov rdi , r14 call hexvar xor ebp , ebp mov rdi , rbx mov esi , num call hexvar test eax , eax je hexvar test ebp , ebp jne hexvar mov esi , hexvar mov rdi , r14 call hexvar mov esi , hexvar mov rdi , r14 call hexvar mov esi , hexvar jmp hexvar test ebp , ebp je hexvar mov esi , hexvar mov rdi , r14 add rsp , hexvar pop rbx pop r14 pop rbp jmp hexvar nop dword ptr [ rax ]
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bxne lr mov r2 , r1 mov r0 , num ldr r1 , [ pc , num ] b hexvar ldrdeq r0 , r1 , [ sp ] , -r0 andeq r8 , sb , r0 , lsr ip
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw s0 , ( a0 )
push rbp push r14 push rbx mov r14 , rdi mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rdi , r14 call rax test eax , eax je hexvar test byte ptr [ r14 + hexvar ] , num je hexvar mov edi , hexvar mov rsi , r14 call hexvar mov rdi , qword ptr [ r14 + num ] call hexvar mov rcx , qword ptr [ r14 ] test eax , eax jle hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rcx + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebp call hexvar mov rdi , r14 mov rsi , rax call rbx test eax , eax je hexvar add ebp , num mov rdi , qword ptr [ r14 + num ] call hexvar mov rcx , qword ptr [ r14 ] cmp ebp , eax jl hexvar mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rdi , r14 call rax cmp eax , - num je hexvar test eax , eax je hexvar mov rdi , qword ptr [ r14 + num ] call hexvar xor ebp , ebp test eax , eax jle hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov rax , qword ptr [ r14 ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebp call hexvar mov rdi , r14 mov rsi , rax call rbx cmp eax , - num je hexvar test eax , eax je hexvar add ebp , num mov rdi , qword ptr [ r14 + num ] call hexvar cmp ebp , eax jl hexvar xor ebp , ebp mov rax , qword ptr [ r14 ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , r14 call rax test eax , eax jne hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar mov rax , qword ptr [ r14 ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , ebp pop rbx pop r14 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ecx + hexvar ] test eax , eax je hexvar cmp byte ptr [ eax + hexvar ] , num js hexvar mov eax , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] jmp hexvar mov edx , dword ptr [ eax + hexvar ] mov ecx , eax test edx , edx je hexvar mov eax , edx cmp byte ptr [ eax + hexvar ] , num jns hexvar mov eax , dword ptr [ ecx + hexvar ] test eax , eax je hexvar sub esp , num lea edx , [ esp + hexvar ] push edx push ecx call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax js hexvar mov eax , num mov edx , num jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push { r4 , r5 , r6 , r7 , lr } ldr r5 , [ r0 , num ] sub sp , sp , hexvar cmp r5 , num beq hexvar ldr r6 , [ r5 , num ] mov r4 , r0 mov r1 , hexvar mov r0 , r6 bl hexvar subs r7 , r0 , num beq hexvar ldrb r3 , [ r7 , num ] cmp r3 , hexvar beq hexvar mov r0 , r6 bl hexvar add r0 , r0 , num bl hexvar mov r5 , r0 ldr r6 , [ r4 , num ] ldr r1 , [ r6 , num ] sub r2 , r7 , r1 bl hexvar ldr r0 , [ r6 , num ] mov r2 , num sub r0 , r7 , r0 ldr r1 , [ pc , hexvar ] add r0 , r5 , r0 bl hexvar add r1 , r7 , num mov r0 , r5 bl hexvar ldr r0 , [ r6 , num ] bl hexvar ldr r3 , [ r4 , num ] str r5 , [ r3 , num ] mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] add rax , rax add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , qword ptr [ rbp - hexvar ] cmp rdx , rax je hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jg hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
test rdi , rdi mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov edx , hexvar jmp hexvar mov edx , ecx nop dword ptr [ rax ] cmp edx , hexvar jg hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov edx , hexvar xor eax , eax jmp hexvar mov rax , qword ptr [ rdi + num ] mov edx , hexvar jmp hexvar ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r2 , [ pc , hexvar ] ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] add ecx , num cmp eax , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] test esi , esi setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx add esp , hexvar pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar mov eax , num mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , hexvar mov r4 , r1 mov r8 , r3 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs r7 , r2 , num beq hexvar mov r6 , r0 mov r2 , num str r2 , [ sp ] mov r3 , r2 mov r1 , r7 ldr r0 , [ r4 , hexvar ] bl hexvar subs r5 , r0 , num beq hexvar ldrb r3 , [ r5 , hexvar ] sub r3 , r3 , num cmp r3 , num bls hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldrb r3 , [ r5 , hexvar ] sub r3 , r3 , num cmp r3 , num movhi r0 , num bls hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw t9 , - hexvar ( gp ) move s1 , a1 lw a1 , num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar test rsi , rsi je hexvar mov eax , dword ptr [ rsi + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , num ret
push r15 push r14 push r13 push r12 mov r13 , rdi push rbp push rbx sub rsp , hexvar mov r12 , qword ptr [ rsi + hexvar ] mov rbx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 test rbx , rbx je hexvar mov rbp , rsi mov r15 , r9 xor r14d , r14d nop word ptr [ rax + rax ] movzx eax , byte ptr [ r15 + hexvar ] shr al , num test al , al jne hexvar mov esi , dword ptr [ r12 + hexvar ] mov edx , dword ptr [ r15 + hexvar ] mov rdi , rbp call hexvar test rax , rax je hexvar mov rsi , r13 mov rdi , rax call hexvar test eax , eax je hexvar add r14 , num add r15 , hexvar cmp r14 , rbx jne hexvar mov rax , qword ptr [ rsp + num ] xor edx , edx xor ecx , ecx mov r8d , num mov rsi , r13 mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdx , rax xor eax , eax test rdx , rdx je hexvar movzx ecx , byte ptr [ rdx + hexvar ] sub ecx , num cmp cl , num jbe hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r14 push rbx sub rsp , hexvar mov rbx , rdi mov edi , hexvar call hexvar mov rdi , rbx mov rsi , rax mov edx , hexvar mov ecx , hexvar call hexvar test rax , rax je hexvar mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax mov edi , hexvar call hexvar mov rdi , rbx mov rsi , rax mov edx , hexvar mov ecx , num call hexvar test rax , rax je hexvar mov qword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ r14 ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rdi , [ rsp + num ] mov esi , hexvar xor edx , edx call hexvar mov rbx , rax jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov esi , hexvar mov rdi , r14 call hexvar mov rax , rbx add rsp , hexvar pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , r14 mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , num add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 move a0 , zero sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , zero move a2 , zero sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , sp , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw s2 , hexvar ( s0 )
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push { r7 , lr } ldr r1 , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] ldr ip , [ r1 ] sub sp , sp , hexvar mov sb , r0 mov r6 , r2 ldr r1 , [ pc , hexvar ] mov r2 , num mov r0 , num str ip , [ sp , hexvar ] mov r7 , r3 ldr r5 , [ r4 ] bl hexvar ldr r3 , [ pc , hexvar ] add r2 , sp , hexvar mov r8 , r0 ldm sb , { r0 , r1 } ldr sb , [ r3 ] bl hexvar bl hexvar mov r3 , sb str r0 , [ sp ] mov r2 , r8 mov r0 , r5 mov r1 , num bl hexvar orrs r3 , r6 , r7 beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r4 ] bl hexvar add r2 , sp , hexvar mov r5 , r0 mov r1 , r7 mov r0 , r6 bl hexvar mov r2 , r5 mov r3 , r0 mov r1 , num mov r0 , r4 bl hexvar bl hexvar ldr r1 , [ r4 ] mov r0 , hexvar bl hexvar b hexvar andeq r7 , r3 , r8 , lsl num strheq r8 , [ r3 ] , -r0 andeq r6 , r2 , r4 , lsr num strheq r8 , [ r3 ] , -r8 andeq r6 , r2 , r8 , asr num
push ebp mov ebp , esp push esi sub esp , hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num jbe hexvar mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num test byte ptr [ ebp - num ] , num je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar xor ecx , ecx mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , rdx mov edx , num mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] add rdi , num mov qword ptr [ rbp - hexvar ] , rdi mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov rdi , qword ptr [ hexvar ] movabs rsi , hexvar mov al , num call hexvar mov qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] mov eax , ecx xor rax , hexvar mov rdx , - num mov rsi , rdx xor rsi , hexvar movabs rdi , hexvar xor rdx , rdi or rax , rsi or rdx , rdi xor rax , hexvar and rax , rdx xor rax , hexvar sub rax , hexvar movabs rdx , hexvar mov rsi , rdx add rsi , num add rsi , rax sub rsi , rdx mov qword ptr [ rbp - num ] , rsi jmp hexvar mov rax , qword ptr [ hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax mov edi , num movabs rcx , hexvar sub rdi , rcx add rdi , rax add rdi , rcx mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ esp ] , eax call hexvar mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , - num sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebx + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea edi , [ hexvar ] mov dword ptr [ esp + num ] , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a1 , hexvar move s2 , a0 beqz a2 , hexvar move s0 , a1 addiu v1 , zero , num lw v0 , ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lbu v0 , hexvar ( v0 ) bnez v0 , hexvar lui s6 , hexvar lui v0 , hexvar lw v1 , hexvar ( v0 ) sltiu s1 , v1 , hexvar addiu v0 , zero , hexvar movz v0 , v1 , s1 move s1 , v0 lui s7 , hexvar lui fp , hexvar lui v0 , hexvar b hexvar sw v0 , hexvar ( sp ) b hexvar addiu s1 , zero , hexvar lw v0 , hexvar ( sp ) lw a1 , hexvar ( v0 ) move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addu s2 , s2 , s3 sw s3 , num ( s0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov edi , dword ptr [ ebp + num ] add edi , num mov ebx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num mov byte ptr [ ebp - hexvar ] , al mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , ecx mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
cmp ebp , hexvar ja hexvar mov eax , dword ptr [ esp + num ] test eax , eax je hexvar mov esi , dword ptr [ esp + hexvar ] lea ebx , [ eax - num ] mov ecx , ebp movzx eax , byte ptr [ esi ] lea edx , [ esi + num ] shl eax , cl lea ecx , [ ebp + num ] add dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] cmp ecx , hexvar ja hexvar test ebx , ebx je hexvar mov eax , dword ptr [ esp + num ] lea edx , [ esi + num ] lea ebx , [ eax - num ] movzx eax , byte ptr [ esi + num ] shl eax , cl lea ecx , [ ebp + hexvar ] add edi , eax cmp ecx , hexvar mov dword ptr [ esp + hexvar ] , edi ja hexvar test ebx , ebx je hexvar mov eax , dword ptr [ esp + num ] add ebp , hexvar lea edx , [ esi + num ] lea ebx , [ eax - num ] movzx eax , byte ptr [ esi + num ] shl eax , cl add edi , eax cmp ebp , hexvar mov dword ptr [ esp + hexvar ] , edi ja hexvar test ebx , ebx je hexvar movzx eax , byte ptr [ esi + num ] mov ecx , ebp sub dword ptr [ esp + num ] , num lea edx , [ esi + num ] shl eax , cl add dword ptr [ esp + hexvar ] , eax mov esi , dword ptr [ esp + hexvar ] mov ecx , esi mov ebx , esi mov eax , esi shr ecx , hexvar shl ebx , hexvar shr eax , num add ebx , ecx and eax , hexvar mov dword ptr [ esp + hexvar ] , edx lea ecx , [ ebx + eax ] mov eax , esi mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] shl eax , num xor ebp , ebp and eax , hexvar mov dword ptr [ esp + hexvar ] , num add eax , ecx mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ ebx + hexvar ] , eax mov dword ptr [ esi + num ] , hexvar
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] mov esi , dword ptr [ ebp - hexvar ] xor esi , edx mov edx , dword ptr [ ebp - hexvar ] xor edx , ecx or edx , esi sete bl and bl , num movzx eax , bl mov dword ptr [ ebp - hexvar ] , edx add esp , hexvar pop esi pop ebx pop ebp ret
push r15 push r14 mov r14 , rdi push r13 push r12 mov r15 , rsi push rbp push rbx mov rbp , rdx mov ebx , ecx sub rsp , hexvar mov r12 , qword ptr [ rsi + num ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp + hexvar ] , num lea rdi , [ r12 * num ] mov qword ptr [ rsp + hexvar ] , r12 call hexvar test rax , rax mov qword ptr [ rsp + hexvar ] , rax je hexvar test r12 , r12 jle hexvar lea r12 , [ rsp + hexvar ] xor r13d , r13d nop word ptr [ rax + rax ] mov rax , qword ptr [ r15 + hexvar ] mov rdx , qword ptr [ rax + r13 * num ] mov rax , qword ptr [ r14 + hexvar ] lea rcx , [ rdx + rdx * num ] lea rsi , [ rax + rcx * num ] mov r8 , qword ptr [ rsi + num ] test r8 , r8 jle hexvar mov r10 , qword ptr [ rsi + hexvar ] mov r9 , qword ptr [ r14 ] xor ecx , ecx jmp hexvar nop dword ptr [ rax ] add rcx , num cmp r8 , rcx je hexvar mov rdi , qword ptr [ r10 + rcx * num ] mov rax , rdi shl rax , num add rax , r9 movzx r11d , byte ptr [ rax + num ] cmp ebx , r11d jne hexvar cmp rbp , qword ptr [ rax ] jne hexvar cmp rdi , - num je hexvar mov r8d , ebx mov rcx , rbp mov rsi , r12 mov rdi , r14 call hexvar test eax , eax jne hexvar add r13 , num cmp qword ptr [ r15 + num ] , r13 jg hexvar mov rdi , qword ptr [ r15 + hexvar ] call hexvar mov rax , qword ptr [ rsp + hexvar ] movdqa xmm0 , xmmword ptr [ rsp + hexvar ] mov qword ptr [ r15 + hexvar ] , rax xor eax , eax movaps xmmword ptr [ r15 ] , xmm0 jmp hexvar nop dword ptr [ rax + rax ] mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , eax call hexvar mov eax , dword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp push r14 push rbx sub rsp , hexvar mov r14 , rdi test rdi , rdi mov eax , hexvar mov ebp , hexvar cmove ebp , eax mov ecx , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov ecx , hexvar xor ebx , ebx mov eax , ecx cmp ecx , hexvar jg hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov ecx , eax cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax mov rdi , qword ptr [ rsp + num ] call qword ptr [ rax + hexvar ] mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov ecx , eax cmp eax , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov ecx , ebp cmp eax , hexvar je hexvar mov ecx , eax cmp eax , hexvar jne hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar mov ecx , eax cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov qword ptr [ rsp + hexvar ] , r14 mov rax , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rax + hexvar ] , num mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov ecx , hexvar mov rbx , qword ptr [ rsp + num ] jmp hexvar mov rax , rbx add rsp , hexvar pop rbx pop r14 pop rbp ret
ldr r3 , [ pc , hexvar ] tst r0 , r3 beq hexvar ldr r3 , [ pc , hexvar ] and r3 , r3 , r0 cmp r3 , num movne r0 , num moveq r0 , num bx lr mov r0 , num bx lr andeq r1 , r0 , r1 andeq r0 , r0 , r2 , lsl num
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] sub esp , hexvar mov dword ptr [ esp ] , edi mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov bl , byte ptr [ hexvar ] and bl , num movzx eax , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov byte ptr [ edx + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov byte ptr [ edx + hexvar ] , num mov al , num and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s3 , hexvar ( sp ) move a1 , a3 sw s1 , hexvar ( sp ) move s3 , a0 sw s0 , hexvar ( sp ) move a0 , s2 sw ra , hexvar ( sp ) move s0 , a2 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a3 beqz s0 , hexvar lw ra , hexvar ( sp ) beqz v0 , hexvar nop lb v1 , ( v0 ) bnez v1 , hexvar move a3 , zero move v0 , zero lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar sw zero , hexvar ( sp ) move a2 , s0 move a1 , v0 jal hexvar move a0 , s3 bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] add rdi , - hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdi ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push r12 push rbp mov r12 , rdi push rbx mov rbx , rsi mov rbp , rdx sub rsp , hexvar mov rdi , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rbx , rbx je hexvar movsxd rdx , dword ptr [ rbp ] mov rbx , qword ptr [ rbx + rdx * num ] mov rax , rdx test rbx , rbx je hexvar add eax , num mov rsi , rsp mov rdi , rbx mov dword ptr [ rbp ] , eax call qword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rdi , r12 call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rax + hexvar ] , num mov rsi , rax mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] pxor xmm0 , xmm0 mov dword ptr [ rsi + hexvar ] , num pxor xmm2 , xmm2 movss xmm1 , dword ptr [ rip + hexvar ] sub rcx , rax mov qword ptr [ rsi + hexvar ] , rax mov qword ptr [ rsi + hexvar ] , rdx mov rax , rcx movabs rdx , hexvar sar rcx , hexvar imul rdx movsd xmm3 , qword ptr [ rip + hexvar ] sar rdx , hexvar sub rdx , rcx cvtsi2ss xmm0 , edx cvtss2sd xmm2 , xmm0 ucomisd xmm3 , xmm2 jbe hexvar movss dword ptr [ rsi + hexvar ] , xmm1 mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
test rdi , rdi je hexvar mov ecx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rdi ] test ecx , ecx js hexvar cmp ecx , eax je hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] blx r3 ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push r14 push rbx push rax mov r14 , rdi mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp qword ptr [ rbx ] , num je hexvar mov rdi , rbx call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar mov rax , qword ptr [ r14 ] jmp hexvar xor eax , eax mov qword ptr [ r14 + num ] , rax mov dword ptr [ r14 + hexvar ] , num mov dword ptr [ r14 + hexvar ] , num mov qword ptr [ r14 + hexvar ] , num mov dword ptr [ r14 + hexvar ] , num add rsp , num pop rbx pop r14 ret
push r13 push r12 lea rcx , [ rip + hexvar ] push rbp push rbx mov r8d , esi mov rbx , rdi mov edx , hexvar mov esi , num sub rsp , hexvar mov rbp , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rbp call hexvar mov rax , rbp mov ecx , dword ptr [ rax ] add rax , num lea edx , [ rcx - hexvar ] not ecx and edx , ecx and edx , hexvar je hexvar mov ecx , edx shr ecx , hexvar test edx , hexvar cmove edx , ecx lea rcx , [ rax + num ] mov esi , edx cmove rax , rcx add sil , dl sbb rax , num sub rax , rbp je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea r13 , [ rbp + rax ] cmp rdx , hexvar movzx r12d , byte ptr [ rbp ] jne hexvar add rbp , num mov byte ptr [ rbx + hexvar ] , num mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , rbx call qword ptr [ rbx + hexvar ] add qword ptr [ rbx + hexvar ] , num cmp r13 , rbp mov qword ptr [ rbx + hexvar ] , num mov byte ptr [ rbx ] , r12b mov byte ptr [ rbx + hexvar ] , r12b je hexvar movzx r12d , byte ptr [ rbp ] mov eax , num lea rdx , [ rax + num ] add rbp , num cmp r13 , rbp mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rbx + rax ] , r12b mov byte ptr [ rbx + hexvar ] , r12b jne hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] push eax push eax lea eax , [ ebx - hexvar ] push esi push eax call hexvar add esp , hexvar test eax , eax je hexvar push eax push eax lea eax , [ ebx - hexvar ] push esi push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov dword ptr [ ebx + hexvar ] , num jmp hexvar
push r13 push r12 push rbp push rbx mov ebx , esi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax and ebx , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] sub edx , - num sbb esi , - num setb bl and bl , num movzx edi , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rax + hexvar ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax movabs rsi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar call hexvar mov dword ptr [ rax ] , num add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lbu v0 , ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) teq v1 , zero , num divu zero , a0 , v1 mfhi v1 subu v0 , v0 , v1 sw v0 , hexvar ( fp ) b hexvar nop lw a1 , hexvar ( fp ) addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v0 , v1 beqz v0 , hexvar nop b hexvar nop lw a1 , hexvar ( fp ) addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , v0 , num sw v1 , hexvar ( fp ) lw v1 , hexvar ( fp ) sltu v0 , v0 , v1 bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r6 , [ pc , hexvar ] sub sp , sp , hexvar ldr r5 , [ sp , hexvar ] ldr ip , [ r6 ] cmp r5 , num mov r4 , r0 mov fp , r1 mov sl , r2 mov sb , r3 str ip , [ sp , hexvar ] moveq r8 , r5 bne hexvar ldr r3 , [ r4 ] mov r0 , r8 ldr r3 , [ r3 , num ] mov r1 , sp ldr r3 , [ r3 , hexvar ] blx r3 mov r2 , num ldr r3 , [ r4 ] strb r2 , [ sp , num ] strb fp , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , sl ldr r3 , [ r3 , hexvar ] add r1 , sp , num blx r3 ldr r3 , [ r4 ] add r1 , sp , num ldr r3 , [ r3 , num ] mov r0 , sb ldr r3 , [ r3 , hexvar ] blx r3 ldr r3 , [ r4 , num ] ldr r1 , [ r4 , hexvar ] add r2 , r3 , hexvar cmp r2 , r1 bhi hexvar ldr r0 , [ r4 , num ] add r0 , r0 , r3 mov r1 , sp mov r2 , hexvar bl hexvar mov r0 , num ldr r3 , [ r4 , num ] add r3 , r3 , hexvar str r3 , [ r4 , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push edi push esi push ebx call hexvar add ebx , num mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + hexvar ] cmp eax , - num je hexvar cmp dword ptr [ edi + hexvar ] , hexvar je hexvar test esi , esi mov edx , hexvar cmovs esi , edx push num push esi push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax js hexvar cmp eax , esi jae hexvar and dword ptr [ edi + hexvar ] , hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] cmp eax , hexvar je hexvar cmp eax , num je hexvar cmp eax , hexvar sete al movzx eax , al sub eax , hexvar pop ebx pop esi pop edi ret
cmp r1 , num bxeq lr ldr r0 , [ r1 , hexvar ] ldr r2 , [ r0 , hexvar ] clz r3 , r0 lsr r3 , r3 , num cmp r2 , num orrne r3 , r3 , num cmp r3 , num bxne lr
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , - num mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rbp - num ] leave ret
lui gp , hexvar lw v1 , hexvar ( a2 ) move a2 , a1 addiu gp , gp , - hexvar addiu sp , sp , - hexvar lw v0 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw a3 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) lw a1 , hexvar ( a1 ) sw v1 , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r4 , r0 ldr sl , [ pc , hexvar ] ldr sb , [ pc , hexvar ] ldr r8 , [ pc , hexvar ] ldr r7 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r5 , [ pc , hexvar ] sub sp , sp , hexvar add fp , r1 , num ldrb r3 , [ fp , - num ] sub r0 , fp , num cmp r3 , hexvar bne hexvar ldrb r3 , [ fp , - num ] sub r3 , r3 , hexvar cmp r3 , hexvar ldrls pc , [ pc , r3 , lsl num ] b hexvar muleq sl , r4 , sp andeq ip , sl , r4 , lsl num andeq ip , sl , r4 , lsr num andeq ip , sl , ip , lsr lr andeq ip , sl , ip , asr sp andeq ip , sl , ip , asr num andeq ip , sl , r4 , ror ip andeq ip , sl , r4 , ror ip andeq ip , sl , ip , ror num strheq ip , [ sl ] , -r4 andeq ip , sl , r4 , ror ip andeq ip , sl , ip , ror ip mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 push r13 push r12 xor r12d , r12d push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test byte ptr [ rsi + num ] , hexvar jne hexvar mov rax , qword ptr [ rsi + hexvar ] mov rbp , rsi cmp dword ptr [ rax + hexvar ] , num je hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , r12d jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
cmp r2 , num cmpne r0 , r1 beq hexvar str lr , [ sp , - num ] ! sub r1 , r1 , num sub lr , r0 , num b hexvar cmp r0 , r3 bne hexvar ldrb r0 , [ lr , num ] ! sub r3 , r0 , hexvar cmp r3 , hexvar ldrb r3 , [ r1 , num ] ! addls r0 , r0 , hexvar sub ip , r3 , hexvar cmp ip , hexvar addls r3 , r3 , hexvar and r0 , r0 , hexvar subs r2 , r2 , num moveq ip , num movne ip , num cmp r0 , num moveq ip , num cmp ip , num and r3 , r3 , hexvar beq hexvar sub r0 , r0 , r3 pop { pc }
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) sw a0 , ( fp ) lw a0 , hexvar ( fp ) sw a0 , num ( fp ) lw a0 , ( fp ) lw a3 , num ( a0 ) lw a2 , ( a0 ) lw a0 , num ( fp ) lw a1 , num ( a0 ) lw a0 , ( a0 ) xor v0 , a2 , a0 xor v1 , a3 , a1 or v0 , v0 , v1 sltiu v0 , v0 , num andi v0 , v0 , hexvar move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s3 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw v0 , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , a0 sw s0 , hexvar ( sp ) addiu a0 , zero , hexvar sw gp , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) addiu a1 , zero , num sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) jalr t9 nop lw a0 , ( s3 ) beqz a0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a1 , zero beqz v0 , hexvar lw gp , hexvar ( sp ) addiu fp , fp , - num blez fp , hexvar addiu s0 , s0 , num lui v0 , hexvar sw zero , hexvar ( sp ) lui s4 , hexvar sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) lui v0 , hexvar lui s6 , hexvar sw zero , hexvar ( sp ) addiu v0 , v0 , - hexvar sw zero , hexvar ( sp ) move s7 , zero sw v0 , hexvar ( sp ) lui v0 , hexvar move s5 , zero lui s2 , hexvar sw v0 , hexvar ( sp ) addiu s4 , s4 , hexvar b hexvar addiu s6 , s6 , hexvar addiu fp , fp , - num beqz fp , hexvar nop lw s5 , num ( s0 )
addiu sp , sp , - hexvar lui gp , hexvar lui t9 , hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s2 , a0 move s1 , a1 sw s0 , hexvar ( sp ) addiu a1 , zero , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) addiu t9 , t9 , - hexvar bal hexvar move a0 , zero lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lui a0 , hexvar lw v0 , - hexvar ( a0 ) bnez v0 , hexvar lui a1 , hexvar lui v1 , hexvar lw v0 , hexvar ( v1 ) addiu a0 , v0 , num sw a0 , hexvar ( v1 ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( s0 )
push ebp mov ebp , esp sub esp , num mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar test eax , eax sete cl movzx eax , cl shl eax , num add eax , hexvar xor edx , edx add esp , num pop ebp ret
mov eax , num cmp qword ptr [ rdi + hexvar ] , num je hexvar ret push rbx mov rbx , qword ptr [ rdi + hexvar ] mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov eax , num pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov ecx , eax add ecx , num mov dword ptr [ hexvar ] , ecx mov eax , dword ptr [ eax ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + num ] test edx , edx je hexvar mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + num ] test edx , edx je hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push r15 push r14 mov r15 , rdx push r13 push r12 mov r14 , rsi push rbp push rbx mov rbp , rdi mov ebx , ecx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov eax , dword ptr [ rdi + hexvar ] mov r10d , eax and r10d , num test r8 , r8 je hexvar lea r9 , [ rip + hexvar ] mov ecx , num mov rsi , r8 mov rdi , r9 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar test r10d , r10d jne hexvar test ebx , ebx jns hexvar test ah , num jne hexvar shl eax , hexvar mov r13d , num and eax , hexvar or eax , hexvar mov esi , eax mov rdi , r8 xor eax , eax mov qword ptr [ rsp + num ] , r8 call hexvar mov r8 , qword ptr [ rsp + num ] mov r12d , eax test r12d , r12d js hexvar mov eax , dword ptr [ rbp + hexvar ] test al , num je hexvar nop lea rdx , [ rsp + hexvar ] mov esi , r12d mov edi , num call hexvar test eax , eax je hexvar mov ebp , hexvar test ebx , ebx jns hexvar call hexvar mov r13d , dword ptr [ rax ] mov rbx , rax mov edi , r12d call hexvar mov dword ptr [ rbx ] , r13d jmp hexvar nop dword ptr [ rax + rax ] test r10d , r10d je hexvar test ah , num je hexvar test ebx , ebx jns hexvar xor ebp , ebp mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , ebp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - num ] , rdi mov rdi , rcx call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] movabs rdi , hexvar mov rsi , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov rdi , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov rdi , qword ptr [ rcx ] mov dword ptr [ rbp - hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push r14 push rbx push rax mov r14 , rdx mov rbx , rdi test rsi , rsi je hexvar mov rax , qword ptr [ rbx + hexvar ] movzx eax , byte ptr [ rax + hexvar ] cmp eax , ecx jge hexvar mov byte ptr [ rsi ] , al add rsi , num mov rax , qword ptr [ rbx + hexvar ] movzx edx , byte ptr [ rax + hexvar ] add rax , hexvar mov rdi , rsi mov rsi , rax call hexvar mov rax , qword ptr [ rbx + hexvar ] movzx eax , byte ptr [ rax + hexvar ] add eax , num mov dword ptr [ r14 ] , eax mov eax , num add rsp , num pop rbx pop r14 ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push eax push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s2 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw v1 , hexvar ( s0 )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar lea edi , [ ebx - hexvar ] sub esp , num push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar cmp dword ptr [ esp + hexvar ] , eax mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , num mov edi , dword ptr [ eax + num ] test edi , edi jg hexvar mov eax , dword ptr [ eax ] mov ecx , edi sar ecx , num test ecx , ecx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax jle hexvar mov edx , dword ptr [ esp ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ esi ] mov ebp , dword ptr [ eax + num ] mov edi , dword ptr [ eax + num ] add edx , hexvar mov ebx , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax ] add eax , hexvar mov dword ptr [ edx - hexvar ] , ebp mov dword ptr [ edx - num ] , edi mov dword ptr [ edx - hexvar ] , esi mov dword ptr [ edx - num ] , ebx sub ecx , num jne hexvar mov eax , dword ptr [ esp + num ] mov esi , dword ptr [ esp + hexvar ] shl eax , num add dword ptr [ esp ] , eax add dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax + num ] mov eax , edi and eax , num cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num mov ebx , dword ptr [ esp ] je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , edi mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 ] mov r5 , r0 str r3 , [ sp , hexvar ] bl hexvar subs r1 , r0 , num beq hexvar ldr r0 , [ r1 ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a2 , hexvar move s1 , a3 move a0 , a2 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a1 , v0 move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sltu s1 , zero , v0 lw a1 , - hexvar ( gp ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a2 , v0 move s0 , zero b hexvar addiu s1 , zero , num b hexvar move s1 , zero
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r4 , r0 ldr r0 , [ r0 , hexvar ] cmp r0 , num beq hexvar mov r6 , r3 ldr r3 , [ r0 ] mov r8 , r2 str r3 , [ r4 , hexvar ] mov r7 , r1 bl hexvar ldr r2 , [ r4 , hexvar ] cmp r2 , num beq hexvar ldr r5 , [ r2 , hexvar ] cmp r5 , num beq hexvar cmp r6 , num beq hexvar blo hexvar cmp r6 , num moveq sl , num bne hexvar mov r6 , r5 ldr fp , [ r5 , num ] ldr sb , [ r6 ] , num cmp fp , num beq hexvar ldr r0 , [ r5 , num ] str r0 , [ r4 , hexvar ] str r6 , [ r4 , num ] mov r2 , hexvar mov r1 , sb mov r0 , r4 bl hexvar cmp r0 , num bne hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num jne hexvar test rsi , rsi je hexvar test byte ptr [ rsi + hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov edi , dword ptr [ rax + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov eax , num ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , lr } mov r4 , r0 bl hexvar cmp r0 , num popls { r4 , pc } sub r3 , r0 , num ldrb r2 , [ r4 , r3 ] add r4 , r4 , r3 cmp r2 , hexvar moveq r0 , r3 popne { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , v0 , num move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop nop
push rbp push r15 push r14 push r12 push rbx mov ebp , edx mov r15 , rsi mov r14 , rdi mov r12 , qword ptr [ rdi + hexvar ] mov esi , hexvar call hexvar test ebp , ebp js hexvar movsxd rcx , ebp mov rax , qword ptr [ r12 ] cmp rax , rcx mov ebx , eax cmovae ebx , ebp test r15 , r15 je hexvar test ebx , ebx jle hexvar mov rsi , qword ptr [ r12 + num ] movsxd rbp , ebx mov rdi , r15 mov rdx , rbp call hexvar mov rdx , qword ptr [ r12 ] mov rdi , qword ptr [ r12 + num ] sub rdx , rbp mov qword ptr [ r12 ] , rdx add rbp , rdi test byte ptr [ r14 + hexvar ] , num jne hexvar mov rsi , rbp call hexvar jmp hexvar mov rax , qword ptr [ r12 ] mov ebx , ebp test rax , rax jne hexvar mov ebx , dword ptr [ r14 + hexvar ] test ebx , ebx je hexvar mov rdi , r14 mov esi , num call hexvar jmp hexvar mov ebp , ebx mov ebx , ebp test rax , rax jne hexvar jmp hexvar mov qword ptr [ r12 + num ] , rbp jmp hexvar xor ebx , ebx mov eax , ebx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push ebp push edi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esi + hexvar ] test byte ptr [ edx + hexvar ] , num je hexvar mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , ebp mov dword ptr [ esi + hexvar ] , edi mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ esi + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp jmp eax lea esi , [ esi ] lea edi , [ edi ] mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15d , r9d mov rbp , r8 mov r12 , rcx mov qword ptr [ rsp + hexvar ] , rdx mov r14 , rsi mov rbx , rdi test rcx , rcx je hexvar mov rdi , rbx call hexvar mov r13 , rax mov rdi , rax call hexvar test eax , eax jle hexvar mov qword ptr [ rsp + hexvar ] , rbx mov qword ptr [ rsp + hexvar ] , rbp mov dword ptr [ rsp + hexvar ] , r15d mov rdi , r13 call hexvar xor ebx , ebx test eax , eax jle hexvar lea rbp , [ rsp + hexvar ] xor r15d , r15d nop mov rdi , r13 mov esi , r15d call hexvar mov rdi , rax xor esi , esi mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar cmp qword ptr [ rsp + hexvar ] , num sbb ebx , - num add r15d , num mov rdi , r13 call hexvar cmp r15d , eax jl hexvar mov rdi , r13 call hexvar cmp ebx , eax jne hexvar mov ebp , dword ptr [ rsp + hexvar ] mov rdi , r13 call hexvar cmp ebx , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , rbx call hexvar test rax , rax je hexvar cmp qword ptr [ rax ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp + hexvar ] , rax xor r13d , r13d xor ebp , ebp xor r15d , r15d test r12 , r12 je hexvar cmp r15 , r12 jne hexvar mov r14 , qword ptr [ rsp + hexvar ] mov rdi , rbp call hexvar mov rbx , rax mov rdi , rbp call hexvar mov rbp , rbx cmp rbx , r12 jne hexvar test r14 , r14 je hexvar mov esi , hexvar mov rdi , r14 call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar mov esi , hexvar call hexvar mov ebp , r13d mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp ] lsr r3 , r3 , num mov r1 , r3 ldr r0 , [ sp , num ] bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp ] lsr r3 , r3 , num ldr r2 , [ sp , num ] add r2 , r2 , r3 ldr r3 , [ sp ] lsr r3 , r3 , num mov r1 , r3 mov r0 , r2 bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , hexvar mov r0 , num bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num mov r1 , hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar cmp eax , num je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rcx ] mov esi , edi mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rcx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rcx ] mov rcx , qword ptr [ rbp - num ] movsxd rdx , dword ptr [ rcx + num ] mov rdi , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] mov rdi , qword ptr [ rcx ] mov byte ptr [ rbp - hexvar ] , al call hexvar mov rcx , qword ptr [ rbp - num ] mov rdi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add rax , hexvar and rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar jmp hexvar mov eax , num leave ret
ldrb r3 , [ r0 , hexvar ] and r3 , r3 , num cmp r3 , num bxne lr
mov rdx , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi + hexvar ] , rdx mov rax , rsi jg hexvar jl hexvar mov rsi , qword ptr [ rdi ] mov rdi , qword ptr [ rax ] jmp hexvar nop word ptr [ rax + rax ] mov eax , hexvar ret
call hexvar add eax , hexvar cmp dword ptr [ esp + num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar nop ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov eax , dword ptr [ rdi ] test eax , eax setns cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rbp - num ] mov edi , dword ptr [ rax ] call hexvar test eax , eax setne byte ptr [ rbp - num ] movzx eax , byte ptr [ rbp - num ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov eax , hexvar test ecx , ecx je hexvar mov dword ptr [ esp + hexvar ] , edx sub esp , hexvar push ecx call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] sub esp , num push edx lea edx , [ esp + hexvar ] push edx push ebp push dword ptr [ esp + hexvar ] push edi push eax call hexvar add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , eax mov eax , num mov esi , dword ptr [ esp + hexvar ] xor esi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov ebp , eax push esi push ebx mov eax , ecx call hexvar add ebx , hexvar mov ecx , num sub esp , hexvar mov esi , edx lea edi , [ ebx - hexvar ] repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num test cl , cl je hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num test cl , cl je hexvar add esp , hexvar mov ecx , eax mov eax , ebp pop ebx pop esi pop edi pop ebp jmp hexvar nop lea esi , [ esi ] lea edi , [ edx + num ] sub esp , hexvar push edi call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov esi , eax add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , num cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num lea edx , [ ebx - hexvar ] push edx push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ esp + hexvar ] lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , num jg hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push rbx xor ebx , ebx test rdi , rdi je hexvar cmp qword ptr [ rdi + hexvar ] , num setne bl mov rdi , qword ptr [ rdi + num ] test rdi , rdi je hexvar call hexvar add ebx , eax mov eax , ebx pop rbx ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx call hexvar mov dword ptr [ eax ] , hexvar xor eax , eax mov esp , ebp pop ebp ret
push ebp xor eax , eax mov ebp , esp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] fld qword ptr [ ebp + hexvar ] test ecx , ecx je hexvar mov eax , dword ptr [ edx + num ] test eax , eax je hexvar mov edi , dword ptr [ edx + num ] test edi , edi je hexvar mov eax , dword ptr [ edx + hexvar ] add edi , num fstp qword ptr [ ebp - hexvar ] lea edx , [ eax + hexvar ] test eax , eax cmovne edi , edx sub esp , hexvar push hexvar call hexvar lea ecx , [ eax + num ] mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num mov esi , eax fld qword ptr [ ebp - hexvar ] xor edx , edx and ecx , hexvar sub eax , ecx add eax , hexvar and eax , hexvar mov dword ptr [ ecx + edx ] , num add edx , num cmp edx , eax jb hexvar mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ edi ] test eax , eax je hexvar mov edx , dword ptr [ eax + num ] mov dword ptr [ edx ] , esi mov dword ptr [ eax + num ] , esi fstp qword ptr [ esi + hexvar ] mov eax , num jmp hexvar mov esi , esi lea edi , [ edi ] fstp st ( num ) lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rcx , [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rcx movzx eax , byte ptr [ rax ] movsx eax , al jmp hexvar mov eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov eax , num test al , al je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push ebx sub esp , num call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov edx , dword ptr [ esp + hexvar ] cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num mov esi , hexvar je hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop beqz v0 , hexvar nop lw v0 , num ( v0 )
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 ldr ip , [ r0 , hexvar ] ldr r8 , [ pc , hexvar ] lsl lr , ip , num add r3 , r8 , lr ldr r4 , [ r3 , num ] ldr r2 , [ r3 , hexvar ] umull sl , fp , r6 , r4 sub r4 , r6 , fp add r4 , fp , r4 , lsr num ldr ip , [ r8 , ip , lsl num ] lsr r3 , r4 , r2 mul r4 , ip , r3 ldr r3 , [ r0 , hexvar ] sub r4 , r6 , r4 ldr r5 , [ r0 , hexvar ] ldr sl , [ r3 , r4 , lsl num ] add r5 , r5 , num cmp sl , num str r5 , [ r0 , hexvar ] ldr r7 , [ r0 , hexvar ] beq hexvar cmp sl , num mov sb , r1 mov r5 , r0 beq hexvar mov r0 , sl ldr r3 , [ r5 , num ] blx r3 cmp r0 , num bne hexvar ldr ip , [ r5 , hexvar ] ldr r3 , [ r5 , hexvar ] lsl lr , ip , num add r2 , r8 , lr ldr ip , [ r8 , ip , lsl num ] ldr r2 , [ r2 , hexvar ] add r8 , r8 , lr ldr lr , [ r8 , num ] sub r8 , ip , num umull sl , fp , r6 , lr sub r0 , r6 , fp add r1 , fp , r0 , lsr num lsr r2 , r1 , r2 mul ip , r2 , r8 add r6 , r6 , num ldr r1 , [ r5 , hexvar ] sub r6 , r6 , ip add r4 , r4 , r6 cmp r7 , r4 subls r4 , r4 , r7 ldr r0 , [ r3 , r4 , lsl num ] add r1 , r1 , num cmp r0 , num str r1 , [ r5 , hexvar ] lsl r8 , r4 , num beq hexvar cmp r0 , num beq hexvar ldr r3 , [ r5 , num ] mov r1 , sb blx r3 cmp r0 , num bne hexvar ldr r1 , [ r5 , hexvar ] ldr r3 , [ r5 , hexvar ] b hexvar mov r3 , num ldr r3 , [ r3 ] udf num
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp movlps qword ptr [ rbp - hexvar ] , xmm0 movlps qword ptr [ rbp - num ] , xmm1 movlps qword ptr [ rbp - hexvar ] , xmm2 movlps qword ptr [ rbp - hexvar ] , xmm3 mov qword ptr [ rbp - hexvar ] , rdi movss xmm0 , dword ptr [ rbp - hexvar ] mulss xmm0 , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] movss dword ptr [ rdi ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] mulss xmm0 , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] movss dword ptr [ rdi + num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] mulss xmm0 , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] movss dword ptr [ rdi + num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] mulss xmm0 , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] movss dword ptr [ rdi + hexvar ] , xmm0 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , lr } mov r4 , r1 ldrh r3 , [ r1 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldrh r3 , [ r4 , hexvar ] bic r3 , r3 , hexvar strh r3 , [ r4 , hexvar ] pop { r4 , pc }
push { r4 , lr } cmp r0 , num beq hexvar cmp r0 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar pop { r4 , pc }
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx nop pop rbp ret
sltiu v0 , a2 , num beqz v0 , hexvar move v1 , zero sh a2 , hexvar ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v1 , ( a1 )
sub rsp , num test rdx , rdx lea rax , [ rip + hexvar ] cmove rdx , rax mov rcx , rdx mov rdx , rsi mov rsi , rdi mov edi , num call hexvar add rsp , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax movsd qword ptr [ rsp + num ] , xmm0 fld qword ptr [ rsp + num ] ucomisd xmm0 , qword ptr [ rip + hexvar ] jb hexvar mov ebp , num fld xword ptr [ rip + hexvar ] fxch st ( num ) fucomip st ( num ) fstp st ( num ) ja hexvar cvttsd2si rdx , xmm0 pxor xmm1 , xmm1 cvtsi2sd xmm1 , rdx subsd xmm0 , xmm1 mulsd xmm0 , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx cvttsd2si rcx , xmm0 pxor xmm1 , xmm1 cvtsi2sd xmm1 , rcx ucomisd xmm0 , xmm1 seta al movzx eax , al add rax , rcx mov qword ptr [ rsp + hexvar ] , rax mov ebp , num cmp rax , hexvar jle hexvar mov ebp , num movabs rcx , hexvar cmp rdx , rcx je hexvar add rdx , num mov qword ptr [ rsp + hexvar ] , rdx sub rax , hexvar mov qword ptr [ rsp + hexvar ] , rax mov ebp , num call hexvar mov rbx , rax movabs r13 , hexvar lea r12 , [ rsp + hexvar ] jmp hexvar fstp st ( num ) lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbx ] , num mov esi , num mov rdi , r12 call hexvar test eax , eax je hexvar test dword ptr [ rbx ] , hexvar jne hexvar test bpl , bpl je hexvar mov qword ptr [ rsp + hexvar ] , r13 mov qword ptr [ rsp + hexvar ] , hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r0 ldr r3 , [ pc , hexvar ] ldr r5 , [ r3 ] ldr r4 , [ r5 ] cmp r4 , num beq hexvar ldr r1 , [ r4 ] mov r0 , r6 bl hexvar cmp r0 , num beq hexvar ldr r4 , [ r5 , num ] ! cmp r4 , num bne hexvar ldr r4 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] mov r7 , num mov r5 , r4 mov r2 , r7 mov r1 , r6 bl hexvar cmp r0 , num beq hexvar ldr r0 , [ r4 , num ] ! cmp r0 , num bne hexvar mov r0 , num bl hexvar mov r4 , num mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc } rsbpl r3 , r2 , hexvar andeq r0 , r0 , r0
push rbp push rbx mov ebp , edi mov edi , hexvar mov ebx , esi sub rsp , num call hexvar pxor xmm0 , xmm0 mov dword ptr [ rax ] , ebp mov dword ptr [ rax + num ] , ebx movups xmmword ptr [ rax + num ] , xmm0 add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] shl eax , num add ebx , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbx mov rbx , qword ptr [ rsi ] cmp edi , num je hexvar cmp edi , num je hexvar cmp edi , num jne hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , - num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num lea rdx , [ rbx + hexvar ] xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov edi , hexvar mov rsi , rbx call hexvar mov eax , num pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s3 , hexvar ( sp ) addiu a1 , zero , hexvar sw s0 , hexvar ( sp ) move s3 , a2 sw gp , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a0 , zero , hexvar jalr t9 move s1 , v0 subu a1 , s1 , s0 lw gp , hexvar ( sp ) move a0 , s0 move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 addiu s1 , s1 , num lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) sw v0 , num ( s0 ) move v0 , s0 sw s1 , num ( s0 ) sw s2 , ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , zero addiu a1 , a1 , - hexvar jalr t9 addiu a2 , zero , num move a1 , s3 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] and eax , hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] and eax , hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + num ] add ecx , num shl ecx , num mov edx , dword ptr [ ebp - num ] add edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp - num ] mov edx , dword ptr [ edx + num ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax + num ] add ecx , num mov dword ptr [ eax + num ] , ecx mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rdi mov r8 , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rax mov rax , r8 mov qword ptr [ rbp - hexvar ] , rdx cqo mov r8 , qword ptr [ rbp - hexvar ] idiv qword ptr [ r8 ] mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ r9 ] , rax mov rax , qword ptr [ rcx ] cqo idiv qword ptr [ r8 ] mov qword ptr [ r9 + num ] , rdx cmp qword ptr [ r9 + num ] , num setne r10b mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , r10b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr [ rdx ] cmp rcx , num setl sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] sub rcx , num mov qword ptr [ rax ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] add rdx , qword ptr [ rax + num ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx + num ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbx call hexvar test rax , rax je hexvar mov rbx , rax mov edi , hexvar call hexvar mov qword ptr [ rax ] , rbx mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + num ] , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu a1 , sp , hexvar sw zero , num ( a1 ) sw zero , num ( a1 ) sw zero , hexvar ( a1 ) sw zero , hexvar ( a1 ) sw zero , hexvar ( a1 ) sw zero , hexvar ( a1 ) addiu a2 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 addiu v0 , zero , - num beq s0 , v0 , hexvar addiu a0 , zero , - num beqz s1 , hexvar lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar lui a0 , hexvar lui v0 , hexvar lw t9 , - hexvar ( v0 ) addiu v0 , zero , - num beq t9 , v0 , hexvar addiu v0 , zero , num sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar sw v0 , hexvar ( sp ) addiu a3 , zero , hexvar addiu a2 , sp , hexvar lw a1 , hexvar ( sp ) addiu a0 , sp , hexvar jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lhu v1 , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s2 , v0 addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addu s2 , s2 , v0 lw a0 , ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) beq a2 , a3 , hexvar lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s4 , a1 move a1 , a2 move s1 , a2 move s3 , a0 jalr t9 move s2 , a3 bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s2 jalr t9 move a0 , s3 lw gp , hexvar ( sp ) bnez v0 , hexvar move s6 , v0 lw v0 , ( s3 )
push ebx call hexvar add ebx , hexvar sub esp , hexvar push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax mov dword ptr [ ebp - hexvar ] , hexvar mov edx , dword ptr [ ebp - hexvar ] lea esi , [ hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ edi + num ] sub esi , edi mov dword ptr [ ebp - hexvar ] , esi cmp edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar xor eax , eax sub eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov ecx , dword ptr [ eax + num ] mov dword ptr [ edx + num ] , ecx mov ecx , dword ptr [ eax + num ] mov dword ptr [ edx + num ] , ecx mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret num
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar cmp byte ptr [ rip + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi jne hexvar mov rbp , qword ptr [ rip + hexvar ] cmp rbp , qword ptr [ rsp + hexvar ] mov r12 , qword ptr [ rip + hexvar ] setne bl cmp r12 , qword ptr [ rsp + hexvar ] setne r14b test bl , bl jne hexvar test r14b , r14b jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , rax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar cmp dword ptr [ ebp + num ] , num sete al and al , num mov byte ptr [ ebp - num ] , al jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , - num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + num ] ja hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] cmp eax , dword ptr [ ebp + num ] jb hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num cmp dword ptr [ esp ] , num je hexvar lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + num ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ hexvar ] test ecx , ecx setne al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ hexvar ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov dl , byte ptr [ ebp - num ] and dl , num mov byte ptr [ hexvar ] , dl mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm3 mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] subsd xmm1 , qword ptr [ rbp - hexvar ] movaps xmm2 , xmmword ptr [ rip + hexvar ] pand xmm1 , xmm2 ucomisd xmm0 , xmm1 jbe hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] subsd xmm1 , qword ptr [ rbp - hexvar ] movaps xmm2 , xmmword ptr [ rip + hexvar ] pand xmm1 , xmm2 ucomisd xmm0 , xmm1 jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi test rdi , rdi je hexvar test rbp , rbp je hexvar mov r13 , qword ptr [ rbp ] lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar mov r12 , rax mov eax , num test r12 , r12 je hexvar mov ebx , num lea rbp , [ rip + hexvar ] jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rdx , rax mov rsi , rbp mov rdi , rbx call hexvar mov rbx , rax mov rcx , r12 mov edx , hexvar mov esi , num mov rdi , rbp call hexvar test rax , rax jne hexvar mov rdi , r12 call hexvar cmp rbx , r13 sete al movzx eax , al add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax lea eax , [ rcx - num ] cmp eax , num ja hexvar test rdx , rdx mov r13d , esi mov rbp , rdx mov ebx , ecx je hexvar mov esi , ecx call hexvar mov r8 , rsp mov ecx , num mov rdx , rbp mov esi , r13d mov rdi , r12 call hexvar cmp rax , - num je hexvar cmp r13d , num mov rcx , qword ptr [ rsp ] sbb edx , edx and edx , hexvar add edx , hexvar mov dword ptr [ rcx + hexvar ] , ebx mov dword ptr [ rcx + hexvar ] , edx mov rsi , qword ptr [ rsp + num ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r1 ldr r1 , [ pc , hexvar ] mov r7 , r0 bl hexvar cmp r0 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] bl hexvar mov r3 , num ldr r2 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r4 , [ r2 ] str r0 , [ r5 , num ] cmp r4 , num str r4 , [ r5 ] strb r3 , [ r6 , hexvar ] beq hexvar mov r0 , r4 mov r1 , num bl hexvar mov r2 , num str r2 , [ r5 , num ] strb r2 , [ r5 , hexvar ] mov r5 , num ldr r3 , [ r6 , hexvar ] add r3 , r3 , num str r3 , [ r6 , hexvar ] mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , edi je hexvar mov eax , esi or eax , edi je hexvar test ecx , ecx jne hexvar test edi , edi jne hexvar imul edi , ebp mov eax , ebp imul ecx , esi mul esi add ecx , edi add ecx , edx mov edi , eax test ecx , ecx jne hexvar test eax , eax js hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar test edi , edi je hexvar mov dword ptr [ esp + num ] , eax sub esp , hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar sub ecx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a0 lw v0 , - hexvar ( gp ) lw v1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw v0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( v0 ) lbu a1 , ( v1 ) sw v0 , hexvar ( sp ) bal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw a1 , hexvar ( s2 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov al , num call hexvar mov rdi , qword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , ecx mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax test rdi , rdi je hexvar mov r14 , rsi test rsi , rsi je hexvar mov r15 , rdi mov rdi , qword ptr [ rdi + hexvar ] mov r12d , hexvar cmp rdi , hexvar ja hexvar mov rbx , rdx mov rax , qword ptr [ r15 ] not rax mov r12d , hexvar cmp rax , rdx jb hexvar xor r12d , r12d test rbx , rbx je hexvar lea r13 , [ r15 + hexvar ] cmp rbx , hexvar jae hexvar jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ r15 + hexvar ] cmp rbx , hexvar jb hexvar test rdi , rdi jne hexvar mov rdi , r15 mov rsi , r14 call hexvar add qword ptr [ r15 ] , hexvar sub r14 , - hexvar add rbx , - hexvar test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov ebp , hexvar sub rbp , rdi cmp rbx , rbp cmovb rbp , rbx add rdi , r13 mov rsi , r14 mov rdx , rbp call hexvar mov rax , qword ptr [ r15 + hexvar ] add rax , rbp mov qword ptr [ r15 + hexvar ] , rax add r14 , rbp sub rbx , rbp cmp rax , hexvar jne hexvar mov rdi , r15 mov rsi , r13 call hexvar add qword ptr [ r15 ] , hexvar mov qword ptr [ r15 + hexvar ] , num test rbx , rbx jne hexvar mov eax , r12d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { r4 , lr } mov r4 , r1 mov r1 , num bl hexvar cmp r0 , num popeq { r4 , pc } mov r3 , r0 mov r2 , hexvar mov r1 , r4 bl hexvar pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] call hexvar lea edx , [ eax + hexvar ] add eax , num cmovs eax , edx add esp , hexvar sar eax , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jle hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
ldr r2 , [ r0 ] ldr r3 , [ r1 ] cmp r2 , r3 blo hexvar bhi hexvar ldr r0 , [ r0 , num ] ldr r2 , [ r0 , num ] ldr r1 , [ r1 , num ] ldr r3 , [ r1 , num ] cmp r2 , r3 blo hexvar bhi hexvar ldrb r0 , [ r0 , hexvar ] ldrb r3 , [ r1 , hexvar ] cmp r0 , r3 blo hexvar cmp r0 , r3 movls r0 , num mvnhi r0 , num bx lr mvn r0 , num bx lr mov r0 , num bx lr mov r0 , num bx lr mvn r0 , num bx lr mov r0 , num bx lr
push { r4 , r5 , r6 , lr } mov r4 , r0 ldr r0 , [ r0 , hexvar ] ldr ip , [ pc , hexvar ] ldr r3 , [ r0 , num ] mov r6 , r1 cmp r3 , ip mov r5 , r2 bhi hexvar mvn lr , hexvar add r2 , r3 , num add ip , ip , num add r1 , r0 , r3 cmp r2 , ip str r2 , [ r0 , num ] strb lr , [ r1 , num ] bne hexvar mov r0 , hexvar bl hexvar mov r3 , num ldr r2 , [ r4 , num ] str r3 , [ r0 ] ldr r1 , [ r2 ] str r3 , [ r0 , num ] cmp r1 , r3 ldrne r3 , [ r2 , num ] mvn r1 , hexvar strne r0 , [ r3 ] mov r3 , num streq r0 , [ r2 ] cmp r6 , hexvar str r0 , [ r2 , num ] str r0 , [ r4 , hexvar ] strb r1 , [ r0 , num ] str r3 , [ r0 , num ] bhi hexvar add r2 , r3 , num add r3 , r0 , r3 str r2 , [ r0 , num ] strb r6 , [ r3 , num ] ldr r3 , [ pc , hexvar ] cmp r2 , r3 bhi hexvar mov r1 , num add r3 , r2 , num add r2 , r0 , r2 str r3 , [ r0 , num ] strb r1 , [ r2 , num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bhi hexvar mov r2 , hexvar add r1 , r3 , num add r3 , r0 , r3 str r1 , [ r0 , num ] strb r2 , [ r3 , num ] mov r1 , r5 mov r0 , r4 bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , r5 , r6 , pc } strdeq r0 , r1 , [ r0 ] , -r4 strdeq r0 , r1 , [ r0 ] , -r4
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 addiu gp , gp , hexvar sw ra , hexvar ( sp ) lw v0 , ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ hexvar ] add rdi , num mov qword ptr [ hexvar ] , rdi mov rdi , qword ptr [ hexvar ] movsx esi , byte ptr [ rdi ] cmp esi , hexvar jne hexvar mov rax , qword ptr [ hexvar ] add rax , num mov qword ptr [ hexvar ] , rax cmp dword ptr [ rbp - hexvar ] , num jge hexvar mov rax , qword ptr [ hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , hexvar jne hexvar mov rax , qword ptr [ hexvar ] add rax , num mov qword ptr [ hexvar ] , rax jmp hexvar mov rax , qword ptr [ hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , hexvar mov dl , num mov byte ptr [ rbp - hexvar ] , dl je hexvar mov rax , qword ptr [ hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ hexvar ] add rax , num mov qword ptr [ hexvar ] , rax jmp hexvar cmp dword ptr [ hexvar ] , num je hexvar lea rdi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - num ] cmp dword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , rdi jl hexvar cmp dword ptr [ rbp - hexvar ] , num setne al xor al , hexvar and al , num movzx ecx , al mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov esi , eax call hexvar cmp dword ptr [ hexvar ] , num je hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] movsx esi , byte ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebx + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + num ] add ecx , num shl ecx , num mov edx , dword ptr [ ebp - num ] add edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp - num ] mov edx , dword ptr [ edx + num ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax + num ] add ecx , num mov dword ptr [ eax + num ] , ecx mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r4 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar mov r0 , r2 ldrb r3 , [ r1 ] cmp r3 , num bne hexvar mov r2 , r4 mov r1 , r5 mov r0 , num bl hexvar pop { r4 , r5 , r6 , pc }
push { r4 , lr } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] mov r4 , r0 ldr r3 , [ r3 ] mov r1 , num ldr r2 , [ r3 , - num ] mov r0 , num bl hexvar mov r2 , r4 mov r3 , r0 mov r1 , num mov r0 , num bl hexvar andeq r5 , r2 , r8 , ror num andeq r8 , r3 , ip , lsl num
lui gp , hexvar addiu gp , gp , - hexvar lw v0 , - hexvar ( gp ) beq a0 , v0 , hexvar nop lw v0 , - hexvar ( gp ) subu a0 , a0 , v0 sltiu v0 , a0 , num jr ra nop jr ra addiu v0 , zero , num
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num je hexvar cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] add qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ hexvar ] call hexvar call hexvar movabs rdi , hexvar mov rsi , rax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar xor ecx , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , ecx add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a0 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a1 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , a1 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lb s0 , ( v0 ) beqz s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move s5 , s1 lw gp , hexvar ( sp ) move s3 , v0 lw v1 , ( s3 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] cmp eax , dword ptr [ ebp - hexvar ] mov cl , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push num lea edx , [ esp + hexvar ] push edx lea edx , [ esp + num ] push edx push dword ptr [ eax ] push dword ptr [ eax + num ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp ] mov dword ptr [ esp + num ] , eax push esi push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push num call hexvar add esp , hexvar mov esi , eax mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar test esi , esi je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r2 , [ r3 ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lui v0 , hexvar lw v1 , hexvar ( v0 ) lw v0 , num ( fp ) sw v1 , ( v0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax movsd xmm0 , qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] movsd qword ptr [ eax ] , xmm0 mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , num pop ebp ret
push r15 push r14 mov r15 , rcx push r13 push r12 mov r14 , rdi push rbp push rbx mov rbx , rsi mov r13 , r8 mov rsi , r8 mov rdi , rbx sub rsp , hexvar call rdx test rax , rax je hexvar mov rdi , r14 mov r12 , rax call hexvar mov rdi , rax mov rbp , rax call hexvar test rax , rax je hexvar cmp byte ptr [ rbp + rax - num ] , hexvar lea rbx , [ rax - num ] jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ rbp + rbx - num ] , hexvar lea rax , [ rbx - num ] je hexvar mov rbx , rax test rbx , rbx jne hexvar mov rdx , rbp mov byte ptr [ rdx ] , num mov rdi , r12 call hexvar lea rdi , [ rbx + rax + hexvar ] mov qword ptr [ rsp + num ] , rax call hexvar test rax , rax mov rbx , rax mov rdx , qword ptr [ rsp + num ] je hexvar add rdx , num mov rsi , r12 mov rdi , rax call hexvar mov rsi , r13 mov rdi , rbx call r15
mov qword ptr [ rsp - num ] , rdi mov rdi , qword ptr [ rsp - num ] mov eax , dword ptr [ rdi ] mov rdi , qword ptr [ rsp - num ] add eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rsp - hexvar ] , eax mov eax , dword ptr [ rsp - hexvar ] shr eax , hexvar and eax , hexvar mov eax , eax mov edi , eax mov eax , dword ptr [ rdi * num ] xor eax , dword ptr [ rsp - hexvar ] mov dword ptr [ rsp - hexvar ] , eax mov eax , dword ptr [ rsp - hexvar ] mov dword ptr [ rsp - hexvar ] , eax mov eax , dword ptr [ rsp - hexvar ] ror eax , num mov dword ptr [ rsp - hexvar ] , eax mov eax , dword ptr [ rsp - hexvar ] mov dword ptr [ rsp - hexvar ] , eax mov eax , dword ptr [ rsp - hexvar ] mov dword ptr [ rsp - hexvar ] , eax mov eax , dword ptr [ rsp - hexvar ] mov rdi , qword ptr [ rsp - num ] add eax , dword ptr [ rdi + num ] mov rdi , qword ptr [ rsp - num ] xor eax , dword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rsp - num ] add eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rsp - hexvar ] , eax mov eax , dword ptr [ rsp - hexvar ] shr eax , hexvar and eax , hexvar mov eax , eax mov edi , eax mov eax , dword ptr [ rdi * num ] xor eax , dword ptr [ rsp - hexvar ] mov dword ptr [ rsp - hexvar ] , eax mov eax , dword ptr [ rsp - hexvar ] mov rdi , qword ptr [ rsp - num ] add eax , dword ptr [ rdi + hexvar ] mov dword ptr [ rsp - hexvar ] , eax mov eax , dword ptr [ rsp - hexvar ] ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - num ] cmp rcx , rdx mov eax , hexvar mov esi , hexvar cmovne esi , eax mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push r13 push r12 mov r13 , rdx push rbp push rbx mov rbx , rdi xor edx , edx mov r12 , rsi mov rsi , rcx sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] mov rbp , rcx call hexvar test rax , rax je hexvar add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret
push { r4 , r5 , r6 , lr } sub sp , sp , hexvar mov r5 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] bl hexvar subs r1 , r0 , num moveq r0 , num beq hexvar ldr r4 , [ r1 , hexvar ] cmp r4 , num moveq r0 , num bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push ebp push edi push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ecx + num ] lea edi , [ eax + num ] xor eax , eax cmp edx , edi jb hexvar mov eax , dword ptr [ ecx + hexvar ] movzx ebx , byte ptr [ eax + edx - num ] mov eax , ebp add edi , ebx add ebx , num sub eax , ebx mov esi , ebx xor eax , ebx xor esi , ebp or eax , esi xor eax , ebp mov esi , eax mov eax , edx sub eax , edi xor eax , edi xor edi , edx or eax , edi xor eax , edx or eax , esi sar eax , hexvar not eax and ebx , eax and eax , hexvar sub edx , ebx shl ebx , num or dword ptr [ ecx ] , ebx mov dword ptr [ ecx + num ] , edx not eax pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r12 , rsi cmp rsi , hexvar jg hexvar mov rbx , rdi cmp rsi , hexvar jle hexvar lea r14 , [ rsi - hexvar ] mov r13 , r14 and r13d , hexvar mov rbp , rsi mov r15d , num jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , r12 mov rdi , rax mov eax , num call hexvar mov rbx , qword ptr [ rbx ] sub rbp , hexvar cmp rbp , r13 je hexvar cmp qword ptr [ rbx ] , num jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rax ] , num mov qword ptr [ rax + hexvar ] , num lea rdi , [ rax + num ] and rdi , hexvar sub rax , rdi lea ecx , [ rax + hexvar ] shr ecx , num mov ecx , ecx mov rax , r15 rep stosq qword ptr [ rdi ] , rax jmp hexvar and r14 , hexvar neg r14 lea r12 , [ r12 + r14 - hexvar ] cmp qword ptr [ rbx ] , num je hexvar mov rax , qword ptr [ rbx ] lea rax , [ rax + r12 * num + num ] add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r4 , r1 mov r5 , r2 ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] mov r1 , r2 ldr r0 , [ r4 ] blx r3 ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r1 , r5 , num ldr r0 , [ r4 , num ] blx r3 ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r1 , r5 , num ldr r0 , [ r4 , num ] blx r3 pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , dl movzx edx , byte ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , dl nop leave ret
push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push num lea eax , [ esp + hexvar ] push eax lea eax , [ ebx ] push hexvar push eax push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + num ] lea edi , [ ebx ] mov ecx , num mov esi , eax repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta dl sbb dl , num test dl , dl jne hexvar lea ecx , [ eax + num ] lea eax , [ ebx ] lea edi , [ esp + hexvar ] sub esp , hexvar mov edx , hexvar mov dword ptr [ esp + hexvar ] , ecx push eax mov eax , edi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar mov esi , dword ptr [ esp + hexvar ] xor esi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r6 , r1 mov r5 , r2 ldr r3 , [ r0 , hexvar ] cmp r3 , num ldreq r3 , [ pc , hexvar ] streq r3 , [ r0 , hexvar ] mov r3 , num str r3 , [ r0 , hexvar ] mov r3 , num strb r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r2 , num bne hexvar mov r3 , r5 mov r2 , r6 ldr r1 , [ pc , hexvar ] ldr r0 , [ r4 , hexvar ] bl hexvar ldr r0 , [ r4 , hexvar ] cmp r0 , num beq hexvar bl hexvar mov r3 , num str r3 , [ r4 , hexvar ] mov r0 , r5 bl hexvar mov r2 , num mov r1 , r5 bl hexvar subs r5 , r0 , num beq hexvar mov r2 , r5 mov r1 , r6 mov r0 , r4 bl hexvar mov r6 , r0 mov r0 , r5 bl hexvar cmp r6 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx add edx , - hexvar sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - hexvar sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov al , num call hexvar cmp qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbp ret
push r13 push r12 push rbp push rbx mov rbx , rdi mov rbp , rsi sub rsp , num call hexvar mov rdi , rbx mov r12 , rax mov r13d , dword ptr [ rax ] call hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbx ] , rbp mov dword ptr [ rbx + hexvar ] , num test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] cmp rbx , qword ptr [ rax + rdx * num ] je hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov edi , eax call hexvar test eax , eax setg al movzx eax , al mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ r12 ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s1 , a1 move s0 , a2 lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar move s2 , a3 lw v1 , hexvar ( sp ) addiu v0 , zero , - num and s4 , v1 , v0 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a0 , zero lw v1 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rsi , qword ptr [ rax ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov edi , dword ptr [ rsi + num ] mov dword ptr [ rcx ] , edi cmp dword ptr [ rcx ] , num sete r8b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov edx , dword ptr [ rcx + num ] mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp push rbx mov rbx , rdi mov rdi , rsi sub rsp , hexvar test al , al mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rbx + hexvar ] , num jne hexvar cmp byte ptr [ rbx + hexvar ] , num jne hexvar lea rax , [ rsp + hexvar ] mov rsi , rsp mov dword ptr [ rsp ] , hexvar mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , rbx mov dword ptr [ rbx + hexvar ] , num mov rbp , rax call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov rsi , rbp call hexvar mov rdi , rbp call hexvar mov rdi , qword ptr [ rbx + num ] mov rax , qword ptr [ rdi ] call qword ptr [ rax + hexvar ] mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] xor edi , edi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] sub rax , - num sete cl movzx edi , cl mov edx , edi mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx call hexvar mov esi , dword ptr [ rax ] movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , esi call hexvar mov edi , num mov esi , dword ptr [ rbp - hexvar ] mov rdx , rax mov al , num call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar cmp eax , num jge hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , lr } sub sp , sp , hexvar mov r4 , r0 mov r5 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , num ] add r2 , sp , num mov r3 , num str r3 , [ r2 , - num ] ! ldr r1 , [ pc , hexvar ] bl hexvar ldr r3 , [ sp ] cmp r3 , num movne r0 , num beq hexvar ldr r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw zero , ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , num ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) sw v0 , ( fp ) lw v0 , num ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp + hexvar ] , rdi call hexvar test eax , eax js hexvar call hexvar mov r13 , rax lea rax , [ rsp + hexvar ] mov r12d , num mov ebp , num mov qword ptr [ rsp ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax jmp hexvar nop dword ptr [ rax ] test ebx , ebx mov ecx , hexvar lea rdi , [ rsp + hexvar ] lea rsi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , r14 rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] je hexvar test r15d , r15d mov dword ptr [ r13 ] , r9d jns hexvar cmp r9d , hexvar jne hexvar mov edi , ebp add ebp , ebp call hexvar call hexvar sub r12 , num je hexvar mov rdx , qword ptr [ rsp ] xor edi , edi mov esi , hexvar call hexvar test eax , eax mov r14 , qword ptr [ rip + hexvar ] mov ebx , eax sete byte ptr [ rsp + hexvar ] mov ecx , hexvar lea rdi , [ rsp + hexvar ] lea rsi , [ rsp + hexvar ] mov qword ptr [ rip + hexvar ] , num rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] call hexvar test eax , eax mov r15d , eax mov r9d , dword ptr [ r13 ] jne hexvar test ebx , ebx mov ecx , hexvar lea rdi , [ rsp + hexvar ] lea rsi , [ rsp + hexvar ] rep movsq qword ptr [ rdi ] , qword ptr [ rsi ] jne hexvar mov rsi , qword ptr [ rsp + hexvar ] xor edx , edx mov edi , num mov dword ptr [ rsp + hexvar ] , r9d call hexvar mov r9d , dword ptr [ rsp + hexvar ] jmp hexvar je hexvar add qword ptr [ rip + hexvar ] , num mov eax , r15d mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
movzx eax , byte ptr [ rdi + hexvar ] and eax , num cmp al , num jne hexvar mov eax , dword ptr [ rsi + hexvar ] lea eax , [ rax + num ] shl rax , num ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , num jne hexvar test edx , edx mov eax , num cmovne eax , edx xor ebx , ebx mov rsi , rdi mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] lea rcx , [ rax + hexvar ] test rax , rax cmovs rax , rcx sar rax , num cmp rdx , rax jge hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ eax ] add eax , hexvar sub esp , hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - num ] , eax mov esp , ebp pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov dword ptr [ rbp - num ] , edi mov byte ptr [ rbp - hexvar ] , num mov edi , dword ptr [ rbp - num ] mov rsi , rax mov edx , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar add rsp , hexvar pop rbp ret
push r15 push r14 push rbx test rdi , rdi je hexvar mov r14 , rsi test rsi , rsi je hexvar mov rbx , rdi mov rcx , qword ptr [ rdi + hexvar ] mov eax , hexvar cmp rcx , hexvar ja hexvar lea rax , [ rcx * num ] add qword ptr [ rbx ] , rax lea r15 , [ rbx + hexvar ] lea rax , [ rcx + num ] mov qword ptr [ rbx + hexvar ] , rax mov byte ptr [ rbx + rcx + hexvar ] , hexvar mov rax , qword ptr [ rbx + hexvar ] cmp rax , hexvar jb hexvar cmp rax , hexvar ja hexvar nop dword ptr [ rax ] lea rcx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rcx mov byte ptr [ rbx + rax + hexvar ] , num mov rax , qword ptr [ rbx + hexvar ] cmp rax , hexvar jb hexvar mov rdi , rbx mov rsi , r15 call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax nop lea rcx , [ rax + num ] mov qword ptr [ rbx + hexvar ] , rcx mov byte ptr [ rbx + rax + hexvar ] , num mov rax , qword ptr [ rbx + hexvar ] cmp rax , hexvar jb hexvar mov rax , qword ptr [ rbx ] bswap rax mov qword ptr [ rbx + hexvar ] , rax mov rdi , rbx mov rsi , r15 call hexvar mov rax , qword ptr [ rbx + num ] bswap rax mov qword ptr [ r14 ] , rax mov rax , qword ptr [ rbx + hexvar ] bswap rax mov qword ptr [ r14 + num ] , rax mov rax , qword ptr [ rbx + hexvar ] bswap rax mov qword ptr [ r14 + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] bswap rax mov qword ptr [ r14 + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] bswap rax mov qword ptr [ r14 + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] bswap rax mov qword ptr [ r14 + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] bswap rax mov qword ptr [ r14 + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] bswap rax mov qword ptr [ r14 + hexvar ] , rax xor eax , eax pop rbx pop r14 pop r15 ret
push rbp push r15 push r14 push r12 push rbx mov ebp , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + hexvar ] , num test ebp , ebp mov edi , hexvar cmovg edi , ebp mov dword ptr [ rbx + hexvar ] , edi mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar test r15 , r15 mov edx , hexvar cmovne rdx , r15 mov rdi , qword ptr [ rbx + hexvar ] xor r15d , r15d mov esi , hexvar xor eax , eax call hexvar test eax , eax jle hexvar test r14 , r14 je hexvar mov rbp , qword ptr [ rbx + hexvar ] xor r15d , r15d mov rdi , r14 xor esi , esi call hexvar mov esi , hexvar mov rdi , rbp mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , hexvar mov rdx , r14 call hexvar test eax , eax jle hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , num xor edx , edx xor ecx , ecx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov r15 , rbx jmp hexvar xor r15d , r15d mov rax , r15 pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , rcx mov rbp , rdx mov r15 , rsi mov r12 , rdi mov rdi , rdx call hexvar mov r14d , eax lea edi , [ r14 * num + num ] mov esi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r13 , rax movsxd r10 , dword ptr [ rbp + num ] test r10 , r10 je hexvar test r10d , r10d jle hexvar mov r9 , qword ptr [ rbp ] mov edx , r10d shl edx , num xor ebp , ebp movabs r8 , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r9 + r10 * num - num ] add r10 , - num test rdi , rdi je hexvar mov esi , hexvar mov rcx , r8 nop word ptr cs : [ rax + rax ] test rcx , rdi je hexvar cmp ebp , r14d jg hexvar lea eax , [ rdx + rsi ] movsxd rbx , ebp mov dword ptr [ r13 + rbx * num ] , eax add ebp , num shr rcx , num add esi , - num cmp esi , - hexvar jne hexvar add edx , - hexvar test r10 , r10 jg hexvar cmp ebp , r14d jg hexvar movsxd rax , ebp mov dword ptr [ r13 + rax * num ] , hexvar add ebp , num test ebp , ebp je hexvar add r14d , num cmp ebp , r14d jg hexvar mov rdi , r12 mov rsi , r15 mov rdx , r13 mov rcx , qword ptr [ rsp ] call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , r13 call hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 addiu a1 , a1 , num addiu a0 , a0 , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a1 , s1 , hexvar addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a1 , s1 , hexvar addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( s1 ) sw v0 , hexvar ( s0 ) b hexvar addiu v0 , zero , num move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero b hexvar move v0 , zero
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lb a0 , ( v0 ) addiu v1 , zero , hexvar bne a0 , v1 , hexvar addiu v1 , zero , hexvar lb a0 , num ( v0 ) beq a0 , v1 , hexvar addiu v1 , zero , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lb a0 , num ( v0 ) bne a0 , v1 , hexvar move a0 , s0 lb a0 , num ( v0 ) addiu v1 , zero , hexvar bne a0 , v1 , hexvar move a0 , s0 lb a0 , num ( v0 ) addiu v1 , zero , hexvar bne a0 , v1 , hexvar move a0 , s0 lb v1 , num ( v0 ) bnez v1 , hexvar move a1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp )
push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi cmp qword ptr [ rsi ] , num je hexvar mov qword ptr [ rbp + hexvar ] , rbx mov rax , qword ptr [ rbx + num ] mov qword ptr [ rbp + hexvar ] , rax mov eax , num add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rdx mov rax , qword ptr [ rsi + num ] mov rbp , qword ptr [ rsi + hexvar ] mov rcx , qword ptr [ rsi + hexvar ] add rcx , rbp mov r15d , hexvar cmp rcx , rax ja hexvar mov r14 , rdi mov rcx , qword ptr [ rdi + hexvar ] cmp rcx , hexvar mov edx , hexvar cmova rdx , rcx cmp rax , rdx jbe hexvar mov dword ptr [ rbx ] , num mov r13d , r15d mov eax , r13d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s5 , a0 move s4 , a1 move s1 , a2 move s3 , a3 jal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 addiu v0 , zero , - num beq s2 , v0 , hexvar move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 lw v0 , num ( v0 )
push rbp mov rbp , rsp xor eax , eax xchg rbx , rsi cpuid xchg rbx , rsi mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num jae hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov eax , num xor ecx , ecx xchg rbx , rsi cpuid xchg rbx , rsi mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , num setne dil and dil , num mov byte ptr [ rbp - num ] , dil mov al , byte ptr [ rbp - num ] and al , num movzx eax , al pop rbp ret
xor ecx , ecx mov r8d , hexvar xor edx , edx jmp hexvar nop dword ptr [ rax ] movsxd rax , dword ptr [ rsp - num ] mov cl , byte ptr [ rdi + rax * num ] movsxd rdx , dword ptr [ rsp - num ] mov byte ptr [ rsi + rdx ] , cl mov cl , byte ptr [ rdi + rax * num + num ] movsxd rdx , dword ptr [ rsp - num ] mov byte ptr [ rsi + rdx + num ] , cl mov cl , byte ptr [ rdi + rax * num + num ] movsxd rdx , dword ptr [ rsp - num ] mov byte ptr [ rsi + rdx + num ] , cl mov al , byte ptr [ rdi + rax * num + num ] movsxd rcx , dword ptr [ rsp - num ] mov byte ptr [ rsi + rcx + num ] , al mov edx , dword ptr [ rsp - num ] add edx , num mov ecx , dword ptr [ rsp - num ] add ecx , num mov eax , hexvar jmp hexvar mov dword ptr [ rsp - num ] , ecx mov dword ptr [ rsp - num ] , edx mov eax , dword ptr [ rsp - num ] cmp eax , num mov eax , hexvar cmovl eax , r8d nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw a0 , hexvar ( fp ) addiu v1 , zero , - num addiu v0 , zero , - num sw v1 , hexvar ( a0 ) sw v0 , hexvar ( a0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] test byte ptr [ ebx + hexvar ] , hexvar jne hexvar movzx eax , byte ptr [ ebx + hexvar ] lea edx , [ eax - num ] cmp dl , num jbe hexvar cmp al , num je hexvar cmp al , num je hexvar add esp , num mov eax , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push edi push num lea ebp , [ esp + hexvar ] push ebp push esi call hexvar mov ecx , eax sub eax , num add esi , dword ptr [ esp + hexvar ] add esp , hexvar cmp eax , hexvar ja hexvar mov edx , dword ptr [ ebx + eax * num - hexvar ] add edx , ebx jmp edx lea esi , [ esi ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ ebp + num ] movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp + hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , num mov edi , dword ptr [ hexvar ] lea ebx , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
test rdi , rdi je hexvar mov r8 , rdi movsxd rdi , dword ptr [ rsi ] xor eax , eax cmp qword ptr [ r8 + rdi * num ] , num je hexvar push r14 push r13 mov rdi , rdx push r12 push rbp mov rbp , rsi push rbx mov esi , hexvar movsxd r13 , ecx mov r12 , r8 call hexvar mov edi , hexvar mov r14 , rax mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num call hexvar mov edi , hexvar mov rbx , rax mov qword ptr [ r14 + hexvar ] , rax mov qword ptr [ rax + num ] , hexvar call hexvar mov rdi , r13 mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num call hexvar movsxd rax , dword ptr [ rbp ] mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , r13 mov r12 , qword ptr [ r12 + rax * num ] mov rdi , r12 call hexvar mov rdx , rbx mov rsi , rax mov rdi , r12 call hexvar test rax , rax je hexvar mov rcx , rax mov edx , hexvar xor esi , esi mov edi , num xor eax , eax call hexvar add dword ptr [ rbp ] , num mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret nop dword ptr [ rax + rax ] xor eax , eax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
mov eax , dword ptr [ rdx + hexvar ] mov rcx , qword ptr [ rsi + hexvar ] cmp eax , num je hexvar jb hexvar cmp eax , num jne hexvar mov rdx , qword ptr [ rdx + hexvar ] xor eax , eax cmp rcx , rdx jl hexvar add rdx , hexvar cmp rcx , rdx setl al ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rdi , rdi je hexvar mov rbp , rsi test rsi , rsi je hexvar mov r15 , rcx test rcx , rcx je hexvar mov r14 , r8 test r8 , r8 je hexvar mov r13 , rdx mov r12 , rdi mov edi , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , qword ptr [ r14 ] lea rdi , [ rsp + num ] mov rdx , rbp mov rcx , r13 call hexvar mov ebp , eax test eax , eax jne hexvar mov esi , num mov rdi , r12 call hexvar test rax , rax je hexvar mov r12 , rax mov qword ptr [ rsp ] , r15 lea r13 , [ rsp + num ] nop word ptr cs : [ rax + rax ] nop mov esi , num mov edx , hexvar mov rdi , rbx mov rcx , r12 call hexvar mov r15 , rax mov rdi , r13 mov rsi , rbx mov rdx , rax call hexvar test eax , eax jne hexvar cmp r15 , hexvar je hexvar mov rdi , r12 call hexvar mov ebp , num test eax , eax jne hexvar lea rdi , [ rsp + num ] mov rsi , qword ptr [ rsp ] mov rdx , r14 call hexvar mov ebp , eax jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , eax mov rdi , r12 call hexvar mov esi , hexvar mov rdi , rbx call hexvar mov rdi , rbx call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar push hexvar mov eax , dword ptr [ esp + hexvar ] add eax , num push eax call hexvar test eax , eax setne al add esp , hexvar movzx eax , al pop ebx ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
xorps xmm0 , xmm0 movups xmmword ptr [ rsi + hexvar ] , xmm0 movups xmmword ptr [ rsi + hexvar ] , xmm0 movups xmmword ptr [ rsi + hexvar ] , xmm0 movups xmmword ptr [ rsi + hexvar ] , xmm0 movups xmmword ptr [ rsi ] , xmm0 mov qword ptr [ rsi + hexvar ] , num mov al , byte ptr [ rdi ] mov byte ptr [ rsi ] , al movzx eax , byte ptr [ rdi + num ] shl rax , hexvar movzx ecx , byte ptr [ rdi + num ] shl rcx , num or rcx , rax movzx eax , byte ptr [ rdi + num ] or rax , rcx mov qword ptr [ rsi + num ] , rax movzx eax , word ptr [ rdi + num ] rol ax , num mov word ptr [ rsi + hexvar ] , ax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar movzx ecx , byte ptr [ rdi + num ] shl rcx , num or rcx , rax movzx eax , byte ptr [ rdi + num ] or rax , rcx mov qword ptr [ rsi + hexvar ] , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar movzx ecx , byte ptr [ rdi + hexvar ] shl rcx , num or rcx , rax movzx eax , byte ptr [ rdi + hexvar ] or rax , rcx mov qword ptr [ rsi + hexvar ] , rax ret
sub esp , hexvar call hexvar add eax , hexvar sub esp , num lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] add r5 , sp , hexvar ldm r5 , { r4 , r5 } ldr r7 , [ sp , hexvar ] ldr r8 , [ sp , hexvar ] ldr sb , [ r1 ] ldr r3 , [ r7 ] cmp r3 , num beq hexvar orrs r3 , r4 , r5 moveq r0 , num beq hexvar ldr r2 , [ r8 ] mov r3 , num cmp r3 , r5 cmpeq r2 , r4 movhi r0 , num bls hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } mrrcpl p4 , num , r7 , r3 , c13
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu v0 , zero , - num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbp push rbx push rax mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov ebp , r8d mov rbx , rdi call rax test eax , eax jle hexvar movd xmm0 , eax movd xmm1 , ebp punpckldq xmm1 , xmm0 pxor xmm0 , xmm0 pcmpgtd xmm0 , xmm1 punpckldq xmm1 , xmm0 movdqu xmm0 , xmmword ptr [ rbx + num ] paddq xmm0 , xmm1 movdqu xmmword ptr [ rbx + num ] , xmm0 add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rdx mov r15 , rsi mov r14 , rdi mov rdi , qword ptr [ rdx + num ] call hexvar cmp eax , hexvar jl hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ebx , hexvar jmp hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax call hexvar mov rdi , r12 call hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov r13 , rax test byte ptr [ rbx + hexvar ] , num jne hexvar xor ebp , ebp jmp hexvar mov ebx , hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar lea rdi , [ rbx + hexvar ] mov rdx , qword ptr [ rbx + num ] mov esi , hexvar mov rcx , r12 call hexvar mov rbp , rax test byte ptr [ rbx + hexvar ] , num jne hexvar mov rax , qword ptr [ rbx + hexvar ] or dword ptr [ rax + hexvar ] , num test rbp , rbp je hexvar lea rdx , [ rsp + hexvar ] mov rdi , rbx mov rsi , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbx + hexvar ] mov r8 , qword ptr [ rbx + num ] mov rcx , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp ] , rbp mov rdi , rbx mov rsi , r13 mov rdx , r15 mov r9 , r12 call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rdi , r13 mov rsi , r14 call hexvar mov ebx , eax jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar mov ebx , hexvar mov rdi , r12 call hexvar mov rdi , r12 call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx ] , rax jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rdi + hexvar ] add rax , num mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edi , dword ptr [ eax + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esi + hexvar ] lea ebp , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + num ] , edx push hexvar push ebp push hexvar push num call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ eax ] test ecx , ecx je hexvar cmp dword ptr [ esp + hexvar ] , ecx jne hexvar mov ecx , dword ptr [ eax + num ] cmp ecx , dword ptr [ edx + hexvar ] jae hexvar mov edx , dword ptr [ esp + hexvar ] cmp edx , num jbe hexvar mov dword ptr [ eax ] , edx mov edx , dword ptr [ eax + num ] add ecx , num mov dword ptr [ edi ] , edx mov dword ptr [ eax + num ] , edi mov dword ptr [ eax + num ] , ecx push hexvar push ebp push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ] push hexvar push ebp push hexvar push hexvar call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp push rbx mov ebx , edi lea rax , [ rbx * num ] lea rbp , [ rip + hexvar ] sub rsp , num sub rax , rbx shl rax , num add rax , rbp mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp rdi , qword ptr [ rax + hexvar ] je hexvar call hexvar lea rax , [ rbx * num ] sub rax , rbx shl rax , num add rax , rbp mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num add rsp , num pop rbx pop rbp ret
push { r4 , r5 , r6 , r7 , lr } mov r4 , r0 ldr r0 , [ r0 , num ] mov r6 , r1 ldr r1 , [ r0 , num ] sub sp , sp , hexvar cmp r1 , num beq hexvar mov r0 , r3 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] xor edx , edx div dword ptr [ ebp + hexvar ]
push rbx mov esi , hexvar mov rbx , rdi call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx pop rbx ret
push ebx mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + hexvar ] test ebx , ebx jne hexvar and byte ptr [ edx + hexvar ] , hexvar mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num pop ebx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov esi , dword ptr [ rbp - hexvar ] mov eax , esi add rdi , rax mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] add rcx , num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx ] setl dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + rdx * num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar ja hexvar mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar ja hexvar mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , hexvar ja hexvar mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar jmp hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movaps xmm1 , xmmword ptr [ rip + hexvar ] movq xmm2 , qword ptr [ rbp - hexvar ] punpckldq xmm2 , xmm1 movapd xmm1 , xmmword ptr [ rip + hexvar ] subpd xmm2 , xmm1 movaps xmm1 , xmm2 unpckhpd xmm1 , xmm1 addpd xmm1 , xmm2 ucomisd xmm0 , xmm1 jbe hexvar movaps xmm0 , xmmword ptr [ rip + hexvar ] movq xmm1 , qword ptr [ rbp - hexvar ] punpckldq xmm1 , xmm0 movapd xmm0 , xmmword ptr [ rip + hexvar ] subpd xmm1 , xmm0 movaps xmm0 , xmm1 unpckhpd xmm0 , xmm0 addpd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] movaps xmm2 , xmm0 subsd xmm2 , xmm1 cvttsd2si rax , xmm2 movabs rcx , hexvar xor rax , rcx cvttsd2si rcx , xmm0 ucomisd xmm0 , xmm1 cmovb rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
mov esi , dword ptr [ rip + hexvar ] push rbx mov rdx , rdi xor edi , edi call hexvar mov edx , num mov rbx , rax mov esi , hexvar xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi pop rbx mov edi , num xor eax , eax jmp hexvar nop word ptr [ rax + rax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbp , rcx mov r14d , edx mov r15d , esi mov rdx , qword ptr [ rdi + num ] test rdx , rdx je hexvar mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rbp call hexvar mov r12d , eax test eax , eax js hexvar mov edi , num call hexvar test rax , rax jne hexvar jmp hexvar mov rbx , rdi mov rdi , rbp xor esi , esi call qword ptr [ rbx + hexvar ] mov r12d , eax mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov qword ptr [ rsp + num ] , rax lea rsi , [ rsp + num ] mov rdi , rbp call qword ptr [ rbx + hexvar ] mov edi , num call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov dword ptr [ rbx ] , r12d xor edi , edi mov esi , r15d mov edx , r14d mov rcx , rbx call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp - hexvar ] cmp eax , ecx mov bl , num mov byte ptr [ ebp - hexvar ] , bl jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar cmp eax , dword ptr [ ebp - hexvar ] setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] add ecx , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ esp ] , eax call hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] movss dword ptr [ eax + hexvar ] , xmm0 mov cl , num and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r6 , r1 mov r4 , r2 mov r2 , num mov r1 , num mov r0 , r4 bl hexvar cmn r0 , num beq hexvar ands r0 , r0 , num beq hexvar cmp r0 , num bgt hexvar ldr r2 , [ pc , hexvar ] mov r3 , r4 mov r1 , r6 mov r0 , r5 bl hexvar pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar mov edx , ecx sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - num ] add r3 , r3 , hexvar str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , hexvar str r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - num ] add r3 , r3 , hexvar str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - num ] add r3 , r3 , hexvar str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbx mov rbx , rdi mov byte ptr [ rdi ] , hexvar mov byte ptr [ rdi + num ] , hexvar mov byte ptr [ rdi + num ] , hexvar lea r8 , [ rdi + num ] mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r8 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl je hexvar lea rsi , [ rip + hexvar ] mov rdi , r8 call hexvar test eax , eax jne hexvar mov byte ptr [ rbx + num ] , hexvar jmp hexvar mov byte ptr [ rbx + num ] , hexvar mov byte ptr [ rbx + num ] , hexvar mov byte ptr [ rbx + num ] , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov rdi , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov rdx , rax mov al , num call hexvar cmp qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , rax je hexvar mov rdi , qword ptr [ hexvar ] mov rdx , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ hexvar ] movabs rsi , hexvar mov al , num call hexvar mov rdi , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] cmp qword ptr [ rsi ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx ] mov rdi , qword ptr [ rcx ]
lui gp , hexvar move a3 , a1 addiu gp , gp , hexvar move a2 , a0 lui a1 , hexvar lui a0 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , a1 , - hexvar jr t9 addiu a0 , a0 , - hexvar
push rbp push rbx push rax mov rbx , rdx mov ebp , esi mov qword ptr [ rsp ] , rdi cmp qword ptr [ rdi + num ] , num je hexvar mov rdi , rsp xor esi , esi call hexvar mov rdi , qword ptr [ rsp ] mov dword ptr [ rdi ] , ebp cmp ebp , num jne hexvar xor eax , eax test rbx , rbx mov ecx , hexvar cmove ecx , eax mov dword ptr [ rdi + num ] , ecx add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r2 , num sub sp , sp , num mov r8 , r0 mov r6 , r1 mov r1 , r0 mov r0 , num bl hexvar mov sb , r0 bl hexvar ldr r1 , [ pc , hexvar ] mov r5 , r0 bl hexvar subs r4 , r0 , num bne hexvar subs sl , r6 , num movne r5 , r4 movne r7 , r6 moveq r7 , r8 moveq r4 , r6 moveq r5 , r6 mov r1 , r8 mov r0 , sb bl hexvar cmp r0 , num bne hexvar cmp r5 , num cmpne r7 , r5 bne hexvar cmp r4 , num cmpne r7 , r4 bne hexvar mov r0 , r7 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push r15 push r14 mov r14 , rdx push r13 push r12 xor edx , edx push rbp push rbx mov r13 , rdi add rdi , hexvar mov r12 , rsi sub rsp , hexvar mov qword ptr [ rsp + num ] , rcx xor ecx , ecx call hexvar test rax , rax je hexvar mov rbp , qword ptr [ rax + hexvar ] mov rbx , rax mov rax , rbp jmp hexvar nop word ptr [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov rax , qword ptr [ rbx + hexvar ] cmp rax , rbp jne hexvar mov rdi , qword ptr [ rbx + num ] mov rsi , r12 call hexvar test eax , eax jne hexvar lea r15 , [ rbx + hexvar ] mov rdx , qword ptr [ rsp + num ] mov rdi , r13 mov rsi , r15 call r14
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , num mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx cmp ecx , eax sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar lea eax , [ hexvar ] add eax , hexvar mov dword ptr [ esp ] , eax call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] add eax , hexvar mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] add eax , num mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , hexvar test al , al je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar
mov qword ptr [ rip + hexvar ] , num cmp edi , hexvar je hexvar cmp edi , hexvar ja hexvar cmp edi , num je hexvar cmp edi , hexvar jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rip + hexvar ] , rax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , ( a0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r3 , r3 , num ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
test edx , edx je hexvar mov rcx , qword ptr [ rsi + hexvar ] test cl , num je hexvar xor eax , eax test byte ptr [ rsi + hexvar ] , num je hexvar test cl , num jne hexvar mov edx , ecx and edx , hexvar xor edi , edi cmp rdx , hexvar sete dil mov eax , num sub eax , edi cmp rdx , hexvar je hexvar mov edx , ecx and edx , num test rdx , rdx jne hexvar test cl , num je hexvar mov eax , num test byte ptr [ rsi + hexvar ] , num jne hexvar xor eax , eax ret
test rsi , rsi je hexvar push r12 push rbp push rbx mov rbx , rdi lea r12 , [ rdi + rsi ] jmp hexvar mov rbp , qword ptr [ rip + hexvar ] cmp rbp , qword ptr [ rip + hexvar ] jb hexvar mov qword ptr [ rip + hexvar ] , num jmp hexvar add rbp , num cmp qword ptr [ rip + hexvar ] , rbp jbe hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rdx + num ] mov qword ptr [ rip + hexvar ] , rax mov rcx , qword ptr [ rip + hexvar ] movzx esi , byte ptr [ rip + hexvar ] mov byte ptr [ rcx + rdx ] , sil cmp rax , qword ptr [ rip + hexvar ] jb hexvar call hexvar jmp hexvar add qword ptr [ rip + hexvar ] , num add qword ptr [ rip + hexvar ] , num add rbx , num cmp rbx , r12 je hexvar movzx eax , byte ptr [ rbx ] cmp al , byte ptr [ rip + hexvar ] je hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] cmp rcx , rdx je hexvar cmp rcx , rdx jae hexvar mov rcx , qword ptr [ rip + hexvar ] lea rdx , [ rcx + num ] mov qword ptr [ rip + hexvar ] , rdx mov rsi , qword ptr [ rip + hexvar ] mov byte ptr [ rsi + rcx ] , al cmp rdx , qword ptr [ rip + hexvar ] jb hexvar call hexvar jmp hexvar pop rbx pop rbp pop r12 ret
mov r3 , r0 cmp r2 , num beq hexvar ldrb r0 , [ r0 ] cmp r0 , num beq hexvar push { r4 , r5 , lr } b hexvar ldrb r0 , [ r3 ] cmp r0 , num cmpne r0 , hexvar bne hexvar ldrb r0 , [ r3 , num ] ! cmp r0 , num cmpne r0 , hexvar beq hexvar cmp r0 , hexvar movne ip , num moveq ip , num cmp r0 , num movne r0 , ip moveq r0 , num cmp r0 , num popne { r4 , r5 , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + hexvar ] , num jne hexvar sub esp , hexvar push hexvar call hexvar mov ecx , eax mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov edx , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ esi + hexvar ] movzx eax , byte ptr [ eax + hexvar ] shr al , num and eax , num mov dword ptr [ ecx + hexvar ] , eax mov eax , esi call hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , eax mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov dword ptr [ ecx + hexvar ] , edi mov dword ptr [ ecx + hexvar ] , ebp mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar jmp hexvar nop mov eax , edi mov edi , dword ptr [ eax ] test edi , edi jne hexvar mov dword ptr [ eax ] , ecx mov eax , dword ptr [ esi + hexvar ] lea edi , [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , eax xor ecx , ecx mov dword ptr [ esi + num ] , edi mov eax , esi call hexvar test eax , eax je hexvar add dword ptr [ esi + hexvar ] , num mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov edx , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov edx , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , rcx mov edx , hexvar mov esi , num cmovb esi , edx mov dword ptr [ rbp - num ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov edx , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov edx , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , rcx mov edx , hexvar mov esi , num cmovb esi , edx mov dword ptr [ rbp - num ] , esi jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s4 , - hexvar ( gp ) lb v0 , ( a0 ) lw v1 , ( s4 ) addiu v0 , v0 , - hexvar sltiu v0 , v0 , hexvar sw v1 , hexvar ( sp ) bnez v0 , hexvar lui s0 , hexvar move s2 , a0 move s1 , zero addiu s0 , s0 , - hexvar b hexvar addiu s3 , zero , hexvar addiu s1 , s1 , num beq s1 , s3 , hexvar addiu s0 , s0 , hexvar lw t9 , - hexvar ( gp ) move a1 , s2 jalr t9 move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) sll v0 , s1 , num addu s1 , v0 , s1 lui v0 , hexvar sll s1 , s1 , num addiu v0 , v0 , - hexvar addu s1 , s1 , v0 lw s0 , ( s1 ) sra v0 , s0 , hexvar sw s0 , ( s5 )
lui gp , hexvar addiu sp , sp , - hexvar addiu v0 , zero , - hexvar addiu gp , gp , - hexvar and v0 , a1 , v0 sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bnez v0 , hexvar sw gp , hexvar ( sp ) addiu v0 , zero , hexvar andi v1 , a1 , hexvar beq v1 , v0 , hexvar move s2 , a1 andi v0 , a1 , hexvar beqz v0 , hexvar lw t9 , - hexvar ( gp ) move s1 , a0 addiu a1 , zero , num addiu a0 , zero , hexvar jalr t9 move s5 , a2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 andi v0 , s2 , num bnez v0 , hexvar sw s5 , hexvar ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - num ] call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
test edi , edi mov byte ptr [ rip + hexvar ] , num je hexvar mov eax , edi push rbx mov ebx , edi and eax , num test dil , num jne hexvar test eax , eax je hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , hexvar call hexvar test bl , num je hexvar test bl , num jne hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , hexvar call hexvar test ebx , hexvar lea rax , [ rip + hexvar ] je hexvar and ebx , num jne hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar lea rdi , [ rip + hexvar ] mov edx , hexvar mov rsi , rax call hexvar lea rax , [ rip + hexvar ] pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] call hexvar cmp eax , esi jbe hexvar sub esp , hexvar push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , hexvar bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r4 , [ r3 , num ] bl hexvar mov r3 , r0 str r3 , [ r4 , num ] ldr r3 , [ r4 , num ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , num ] ldr r3 , [ r3 , num ] mov r2 , num str r2 , [ r3 ] ldr r0 , [ sp , num ] bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r4 , [ r3 , num ] mov r0 , r2 bl hexvar mov r3 , r0 str r3 , [ r4 ] mov r3 , num b hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { r4 , pc } andeq r0 , r0 , r0 subslt sp , r6 , hexvar
push { r4 , lr } cmp r1 , hexvar bne hexvar bl hexvar cmp r0 , hexvar beq hexvar cmp r0 , hexvar beq hexvar cmp r0 , hexvar beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r0 , num pop { r4 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop addiu v1 , sp , hexvar lw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) move a2 , zero move a1 , v1 lw a0 , hexvar ( sp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl movzx edi , dl mov edi , dword ptr [ edi * num + hexvar ] xor ebx , ebx mov dl , bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov byte ptr [ ebp - hexvar ] , dl jmp edi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] xor eax , edx xor ecx , esi or ecx , eax sete bl mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl jmp eax mov al , byte ptr [ ebp - hexvar ] xor ecx , ecx test al , num mov edx , num cmovne ecx , edx cmp ecx , num setne al and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax xor ecx , ecx mov r8d , ecx mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , num mov rdi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov r9 , qword ptr [ rbp - hexvar ] mov esi , eax mov qword ptr [ rbp - hexvar ] , rdx mov rdx , r8 mov rcx , r8 mov r8 , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor al , hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jg hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rdi , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
lui gp , hexvar lw v1 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , hexvar ( v1 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - hexvar ] , al mov ecx , dword ptr [ hexvar ] cmp ecx , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jae hexvar mov eax , dword ptr [ hexvar ] imul ecx , dword ptr [ ebp - hexvar ] , hexvar add eax , ecx test byte ptr [ eax ] , num je hexvar test byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ hexvar ] add ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add edx , num mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx xor ecx , ecx mov dword ptr [ ebp - hexvar ] , edx mov edx , ecx mov ecx , dword ptr [ ebp - hexvar ] div ecx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esi xor edi , edi mov edx , edi mov edi , dword ptr [ ebp - hexvar ] div edi
push ebp mov ebp , esp push ebx sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] or edx , ecx setne bl and bl , num movzx ecx , bl mov dword ptr [ ebp - num ] , eax mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx add esp , num pop ebx pop ebp ret
push { r4 , r5 , lr } mov r0 , hexvar sub sp , sp , hexvar bl hexvar subs r4 , r0 , num beq hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r2 , [ sp ] mov r1 , num ldr r2 , [ pc , hexvar ] mov r0 , hexvar bl hexvar cmp r0 , num movne r3 , num mov r5 , r0 str r0 , [ r4 ] strne r3 , [ r4 , num ] strne r3 , [ r4 , num ] beq hexvar mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar addiu a2 , zero , num move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , v0 , - num sw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lw v1 , hexvar ( sp ) addiu v0 , zero , num beq v1 , v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a2 , v0 lw a1 , hexvar ( sp ) move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push r14 push rbx push rax test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov r14 , rsi test rsi , rsi je hexvar mov rsi , qword ptr [ r14 ] test rsi , rsi jne hexvar call hexvar mov rsi , rax mov qword ptr [ r14 ] , rax mov rax , qword ptr [ rbx ] mov rcx , qword ptr [ rax + hexvar ] mov rdi , rbx call rcx mov ebx , eax test eax , eax jg hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , num jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ebx , hexvar mov eax , ebx add rsp , num pop rbx pop r14 ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push hexvar push num push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r7 , r0 mov r8 , r1 mov r6 , r2 mov r4 , r3 ldr fp , [ sp , hexvar ] ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , num blx r3 ldr r3 , [ r7 , num ] ldr r3 , [ r3 , hexvar ] add r1 , r8 , num sub r0 , r4 , hexvar blx r3 ldr r3 , [ r7 , num ] ldr r3 , [ r3 , hexvar ] add r1 , r8 , num mov r0 , num blx r3 mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r8 , hexvar bl hexvar cmp r6 , num popeq { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } mov r5 , hexvar sub sl , fp , num rsb sb , fp , num b hexvar ldr r3 , [ r7 , num ] ldr r3 , [ r3 , hexvar ] add r1 , r8 , r5 ldr r0 , [ r6 , hexvar ] blx r3 add r5 , sl , r5 add r5 , r5 , r4 and r5 , r5 , sb ldr r6 , [ r6 ] cmp r6 , num popeq { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp - num ] , rax mov edx , hexvar mov ecx , hexvar jmp hexvar mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , hexvar nop dword ptr [ rax + rax ] cmp edx , hexvar jg hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar cmp qword ptr [ rsp - num ] , num mov edx , hexvar cmove edx , ecx jmp hexvar nop dword ptr [ rax + rax ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar jmp hexvar mov rax , qword ptr [ rsp - num ] mov edx , hexvar jmp hexvar ret
push r12 push rbp push rbx mov r12 , rdi mov rbp , rsi mov esi , hexvar mov rdi , qword ptr [ rbp ] call hexvar mov rbx , rax mov esi , hexvar mov rdi , qword ptr [ r12 ] call hexvar test rax , rax mov esi , hexvar cmovne rsi , rax test rbx , rbx mov edi , hexvar cmovne rdi , rbx call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ r12 ] mov rdi , qword ptr [ rbp ] call hexvar pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , r7 , lr } ldr r4 , [ r0 , num ] sub sp , sp , hexvar cmp r4 , num beq hexvar ldr r6 , [ r4 , num ] mov r5 , r0 mov r1 , hexvar mov r0 , r6 bl hexvar subs r7 , r0 , num beq hexvar mov r0 , r6 bl hexvar bl hexvar ldr r4 , [ r5 , num ] mov r6 , r0 ldr r1 , [ r4 , num ] sub r2 , r7 , r1 bl hexvar mov r3 , num ldr r2 , [ r4 , num ] add r1 , r7 , num sub r7 , r7 , r2 strb r3 , [ r6 , r7 ] mov r0 , r6 bl hexvar ldr r0 , [ r4 , num ] bl hexvar ldr r4 , [ r5 , num ] str r6 , [ r4 , num ] ldr r3 , [ r4 ] mov r0 , r4 str r3 , [ r5 , num ] bl hexvar ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar cmp r0 , num bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
sub rsp , hexvar xor edx , edx xor esi , esi mov r8d , hexvar mov rcx , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test eax , eax je hexvar cmp eax , num je hexvar xor eax , eax mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] sub eax , hexvar cmp eax , num ja hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax add ecx , num mov dword ptr [ ebp + num ] , ecx movsx eax , byte ptr [ eax ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , hexvar sub ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx xor edx , edx mov ecx , hexvar div ecx mov ecx , dword ptr [ ebp - hexvar ] cmp ecx , eax jbe hexvar mov byte ptr [ ebp - num ] , num jmp hexvar imul eax , dword ptr [ ebp - num ] , hexvar add eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] test rsi , rsi setne al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] add rcx , rax add rcx , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx sete sil movzx edi , sil mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] add rcx , num mov rdi , rax mov rsi , rcx call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar mov edx , hexvar cmovb edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] shr ecx , hexvar and ecx , num cmp ecx , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , ecx mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , eax mov dword ptr [ rbp - num ] , ecx mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r15d , ecx mov r12 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov rsi , rbp call hexvar mov rbp , rax mov rdi , rax mov rsi , r13 mov rdx , r12 mov ecx , r15d mov r8 , r14 call hexvar mov r14d , eax mov rdi , rbp mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov rdi , rbp call hexvar mov rdi , rbx call hexvar mov eax , r14d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push { r4 , lr } mov r4 , r0 ldr r0 , [ r0 , num ] bl hexvar ldr r0 , [ r4 , hexvar ] bl hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num popeq { r4 , pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , num lw s0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , eax and ecx , hexvar mov eax , ecx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov ecx , edx and ecx , hexvar mov edx , ecx sub rax , rdx setne sil movzx ecx , sil mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dl , al mov byte ptr [ esp + hexvar ] , dl add esp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp rax , hexvar jae hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar sub rcx , qword ptr [ rbp - hexvar ] cmp rax , rcx jbe hexvar mov eax , hexvar sub rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] add rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbx lea rsi , [ rip + hexvar ] mov rbx , rdi mov edx , num xor edi , edi call hexvar mov rdi , rbx mov rdx , rax mov esi , num xor eax , eax call hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov rdi , rbx mov rdx , rax mov esi , num pop rbx xor eax , eax jmp hexvar nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test eax , eax jne hexvar mov dword ptr [ esp + hexvar ] , ebp mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , esi add esp , hexvar pop ebx pop esi pop edi pop ebp jmp hexvar nop mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esi + hexvar ] , edx push eax call hexvar add esp , hexvar jmp hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push hexvar push eax lea eax , [ ebx - hexvar ] push eax call hexvar lea esi , [ esi ]
push { r4 , r5 , r6 , lr } subs r4 , r1 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 , num ] ldr r2 , [ r2 , num ] cmp r2 , num beq hexvar mov r0 , hexvar bl hexvar mov r3 , num str r3 , [ r0 , hexvar ] ldr r3 , [ r3 , hexvar ] udf num
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push r15 push r14 push rbx mov r14 , rsi xor r15d , r15d xor esi , esi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r15 , rax mov rdi , rbx call hexvar test r15 , r15 je hexvar test r14 , r14 je hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , r15 jmp hexvar xor r15d , r15d mov rax , r15 pop rbx pop r14 pop r15 ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push num push eax push num call hexvar mov edx , esi call hexvar
push r15 push r14 push rbx mov r14 , rsi mov r15 , rdi mov rbx , rsi test rsi , rsi jne hexvar mov edi , num call hexvar mov rbx , rax test rax , rax je hexvar xor eax , eax cmp dword ptr [ r15 + hexvar ] , num setne al shl eax , num or eax , num mov dword ptr [ rbx + num ] , eax mov rdi , r15 call hexvar test eax , eax je hexvar mov esi , eax sar esi , hexvar shr esi , hexvar add esi , eax sar esi , num add esi , num mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , esi jl hexvar jmp hexvar mov esi , num mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , esi jge hexvar mov edx , hexvar mov rdi , rax mov ecx , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rbx + num ] , rax mov rdi , r15 mov rsi , rax call hexvar mov dword ptr [ rbx ] , eax test eax , eax jne hexvar mov rax , qword ptr [ rbx + num ] mov byte ptr [ rax ] , num mov dword ptr [ rbx ] , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar cmp rbx , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx cmp rbx , r14 je hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13d , r9d mov r12d , r8d mov rbp , rcx mov r14d , edx mov r15 , rsi mov rbx , rdi mov r8 , qword ptr [ rsp + hexvar ] test r8 , r8 jne hexvar call hexvar mov r8 , rax mov rdi , rbx mov esi , r13d mov rdx , rbp mov ecx , r12d call hexvar test eax , eax je hexvar lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov rdi , rbx mov rsi , r15 mov edx , r14d call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbx + num ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + num ] mov edx , dword ptr [ rsp + hexvar ] lea rsi , [ rsp + hexvar ] call hexvar mov ecx , eax mov eax , num test ecx , ecx jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push edi push esi push ebx mov eax , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] test edx , edx je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar mov ecx , dword ptr [ edx + num ] test ecx , ecx je hexvar sub esp , num lea eax , [ ebx - hexvar ] push num jmp hexvar nop lea esi , [ esi ] sub esp , num lea eax , [ ebx - hexvar ] push num push eax push num call hexvar push eax lea eax , [ ebx - hexvar ] push eax mov eax , dword ptr [ ebx + hexvar ] push num push dword ptr [ eax ] call hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi ret
push edi push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v1 , num ( fp ) lui v0 , hexvar bne v1 , v0 , hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop move v0 , zero move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx mov rdx , qword ptr [ rax ] cmp qword ptr [ rdx + hexvar ] , num setne sil mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdi , qword ptr [ rcx + hexvar ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx ] mov qword ptr [ rdi + hexvar ] , rax mov rsp , rbp pop rbp ret
test rdi , rdi push r14 push r13 push r12 push rbp push rbx je hexvar mov rbp , rdi call hexvar test rax , rax je hexvar movzx esi , byte ptr [ rbp + rax - num ] lea rcx , [ rip + hexvar ] lea rdx , [ rax - num ] test byte ptr [ rcx + rsi * num ] , hexvar jne hexvar cmp sil , hexvar jne hexvar lea rdi , [ rbp - num ] nop test rdx , rdx mov byte ptr [ rdi + rdx + num ] , num je hexvar sub rdx , num movzx esi , byte ptr [ rbp + rdx ] test byte ptr [ rcx + rsi * num ] , hexvar jne hexvar cmp sil , hexvar je hexvar movzx eax , byte ptr [ rbp ] mov rdx , rbp lea rcx , [ rip + hexvar ] test al , al je hexvar nop dword ptr [ rax ] test byte ptr [ rcx + rax * num ] , hexvar je hexvar mov byte ptr [ rdx ] , hexvar add rdx , num movzx eax , byte ptr [ rdx ] test al , al jne hexvar movzx edx , byte ptr [ rbp ] test dl , dl je hexvar mov rbx , rbp jmp hexvar nop dword ptr [ rax ] test al , al mov rbx , r13 je hexvar mov edx , eax cmp dl , hexvar movzx eax , byte ptr [ rbx + num ] lea r13 , [ rbx + num ] jne hexvar cmp rbp , rbx je hexvar cmp al , hexvar jne hexvar cmp al , hexvar mov r12 , r13 jne hexvar nop word ptr cs : [ rax + rax ] add r12 , num cmp byte ptr [ r12 ] , hexvar je hexvar mov rdi , r12 call hexvar cmp rbp , rbx mov r14 , rax je hexvar lea rax , [ rbx + num ] mov rbx , r13 mov r13 , rax mov rdi , rbx mov rdx , r14 mov rsi , r12 call hexvar mov byte ptr [ rbx + r14 ] , num movzx eax , byte ptr [ rbx + num ] mov rbx , r13 test al , al jne hexvar nop dword ptr [ rax + rax ] cmp byte ptr [ rbp ] , num je hexvar pop rbx mov rax , rbp pop rbp pop r12 pop r13 pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu t0 , a1 , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) sw s3 , hexvar ( sp ) addiu s3 , sp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move v0 , s3 sw ra , hexvar ( sp ) move s0 , a2 sw gp , hexvar ( sp ) lw v1 , ( s2 ) sw v1 , hexvar ( sp ) lwl a3 , ( a1 ) addiu v0 , v0 , hexvar lwl a2 , num ( a1 ) lwl a0 , num ( a1 ) lwl v1 , hexvar ( a1 ) lwr a3 , num ( a1 ) lwr a2 , num ( a1 ) lwr a0 , hexvar ( a1 ) lwr v1 , hexvar ( a1 ) addiu a1 , a1 , hexvar sw a3 , - hexvar ( v0 ) sw a2 , - hexvar ( v0 ) sw a0 , - num ( v0 ) bne a1 , t0 , hexvar sw v1 , - num ( v0 ) lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar move a1 , zero jalr t9 move a0 , s0 lw v0 , num ( s1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax test esi , esi je hexvar mov edi , eax xor ebp , ebp mov eax , esi lea esi , [ esi ] sub esp , hexvar add edi , num push eax call hexvar add ebp , eax mov eax , dword ptr [ edi - num ] add esp , hexvar test eax , eax jne hexvar sub esp , hexvar add ebp , num push ebp call hexvar mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , eax add esp , hexvar lea esi , [ esi ] sub esp , hexvar add ebp , num push esi call hexvar add esp , hexvar push eax mov dword ptr [ esp + hexvar ] , eax push esi push edi call hexvar mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ ebp - num ] add esp , hexvar add edi , ecx test esi , esi jne hexvar mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ edi ] , num test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
sub rsp , num mov rdx , rdi mov eax , num mov rcx , - num repne scasb al , byte ptr [ rdi ] mov rsi , rcx not rsi mov rdi , rdx call hexvar add rsp , num ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - num ] str r2 , [ r3 ] mov r0 , r0 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ecx , num mov eax , dword ptr [ ebp + num ] mul dword ptr [ ebp + hexvar ] jno hexvar mov ecx , num test eax , eax jns hexvar mov ecx , num mov eax , ecx and eax , num test al , al jne hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push r15 push r14 push r13 push r12 push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp byte ptr [ rdi + hexvar ] , num je hexvar movzx eax , byte ptr [ rbx + hexvar ] mov r9d , dword ptr [ rbp + num ] and eax , num test r9d , r9d jne hexvar test al , al jne hexvar mov r12 , qword ptr [ rbp + hexvar ] cmp byte ptr [ rbx + hexvar ] , num mov rax , qword ptr [ r12 + num ] mov rax , qword ptr [ rax + num ] mov r13 , qword ptr [ rax + hexvar ] je hexvar mov rdx , qword ptr [ r12 ] movzx eax , byte ptr [ rdx ] and eax , num cmp al , num jbe hexvar cmp qword ptr [ rbx + hexvar ] , - num je hexvar movzx eax , byte ptr [ rbx + hexvar ] test al , hexvar je hexvar test al , num je hexvar mov rdx , qword ptr [ r12 ] movzx eax , byte ptr [ rdx + num ] and eax , hexvar cmp al , hexvar je hexvar cmp al , hexvar je hexvar movzx eax , byte ptr [ rbx + hexvar ] movzx r15d , byte ptr [ rbx + hexvar ] lea ecx , [ rax - num ] mov edx , r15d cmp cl , num jbe hexvar lea ecx , [ rax - num ] mov dword ptr [ rsp + hexvar ] , num cmp cl , num jbe hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rbx + hexvar ] cmp al , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rcx movzx ecx , byte ptr [ rbx + hexvar ] mov byte ptr [ rsp + hexvar ] , cl ja hexvar lea rcx , [ rip + hexvar ] movsxd rax , dword ptr [ rcx + rax * num ] add rax , rcx jmp rax nop word ptr [ rax + rax ] test al , al jne hexvar mov r13d , num mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] mov eax , r13d jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - num ] , al movsx eax , byte ptr [ ebp - num ] add eax , - hexvar mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx add edx , - hexvar sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - hexvar sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - hexvar sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] or edi , hexvar mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r3 , [ sp , hexvar ] str r2 , [ sp , num ] mov r3 , num str r3 , [ sp , num ] mov r2 , num str r2 , [ sp ] mov r3 , hexvar bl hexvar add sp , sp , hexvar pop { pc }
push r14 push r13 mov r14 , r8 push r12 push rbp mov r12d , edi push rbx mov r13d , esi mov rbx , rdx mov ebp , ecx sub rsp , hexvar test al , al mov qword ptr [ rsp + hexvar ] , r9 je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar cmp dword ptr [ rip + hexvar ] , ebp je hexvar mov qword ptr [ rip + hexvar ] , rbx mov dword ptr [ rip + hexvar ] , ebp mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call rax test rbx , rbx je hexvar mov rdi , qword ptr [ rip + hexvar ] mov r8d , ebp mov rcx , rbx mov edx , hexvar mov esi , num xor eax , eax call hexvar lea rax , [ rsp + hexvar ] mov rcx , rsp mov rdx , r14 mov esi , r13d mov edi , r12d mov dword ptr [ rsp ] , hexvar mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r12 push rbp mov ecx , num push rbx mov rbx , rdi sub rsp , hexvar mov rdx , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax mov rbp , rax je hexvar mov rax , qword ptr [ rsp ] sub qword ptr [ rbx + hexvar ] , num cmp qword ptr [ rax ] , num je hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] mov r3 , num strb r3 , [ fp , - num ] ldr r3 , [ fp , num ] str r3 , [ sp , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp , hexvar ] sub r3 , fp , num str r3 , [ sp , num ] mvn r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] mov r3 , num ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov esi , dword ptr [ edx ] mov esi , dword ptr [ esi ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ecx + hexvar ] , esi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ edx ] mov dword ptr [ ecx ] , eax lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi ] mov rdi , qword ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi ] mov rsi , qword ptr [ rsi ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rax + num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , qword ptr [ rax + num ] call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax ucomisd xmm0 , qword ptr [ rip + hexvar ] jae hexvar mov ecx , hexvar mov edx , hexvar mov esi , hexvar mov edi , hexvar call hexvar cvttsd2si rdx , xmm0 mov qword ptr [ rsp ] , rdx pxor xmm2 , xmm2 cvtsi2sd xmm2 , rdx movapd xmm1 , xmm0 subsd xmm1 , xmm2 mulsd xmm1 , qword ptr [ rip + hexvar ] mov ebp , num ucomisd xmm0 , xmm2 jb hexvar mov ebp , num ucomisd xmm1 , qword ptr [ rip + hexvar ] jb hexvar movsd xmm0 , qword ptr [ rip + hexvar ] ucomisd xmm0 , xmm1 setb bpl movzx ebp , bpl jmp hexvar cvttsd2si rax , xmm1 pxor xmm0 , xmm0 cvtsi2sd xmm0 , rax ucomisd xmm1 , xmm0 seta cl movzx ecx , cl add rax , rcx mov qword ptr [ rsp + num ] , rax cmp rax , hexvar jle hexvar lea rcx , [ rdx + num ] cmp rdx , rcx setg dl or ebp , edx mov qword ptr [ rsp ] , rcx sub rax , hexvar mov qword ptr [ rsp + num ] , rax call hexvar mov rbx , rax movabs r12 , hexvar test bpl , bpl je hexvar mov qword ptr [ rsp ] , r12 mov qword ptr [ rsp + num ] , hexvar mov dword ptr [ rbx ] , num mov esi , num mov rdi , rsp call hexvar test eax , eax je hexvar test dword ptr [ rbx ] , hexvar je hexvar mov eax , hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] cmp esi , dword ptr [ edi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 beqz a3 , hexvar move s0 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) lw a3 , ( v0 ) lw v0 , num ( s0 ) sw v0 , hexvar ( sp ) lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , num move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , num ( a2 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov byte ptr [ ebp - num ] , al add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a1 andi v0 , v0 , num beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 addiu v0 , v0 , - num sltiu v0 , v0 , num bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 move a1 , s0 lw gp , hexvar ( sp ) move a0 , s1 lw ra , hexvar ( sp ) move t9 , v0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 lw v0 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] lea esi , [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar sub esp , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , r9 mov r15 , r8 mov r12 , rcx mov r14 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar sub rsp , num mov rdi , rbp mov rsi , r13 mov rdx , rbx mov rcx , r12 mov r8 , r15 mov r9 , qword ptr [ rsp + num ] push qword ptr [ rsp + hexvar ] push qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] push rax call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , num test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , num call hexvar and al , num mov byte ptr [ ebp - hexvar ] , al xor eax , eax mov cl , al test byte ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num mov byte ptr [ ebp - hexvar ] , al mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx call hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + hexvar ] , num lea rdi , [ rsp + hexvar ] mov esi , num mov edx , hexvar call hexvar mov eax , dword ptr [ rsp + hexvar ] mov byte ptr [ rsp + hexvar ] , al mov byte ptr [ rsp + hexvar ] , ah movzx eax , word ptr [ rsp + hexvar ] mov byte ptr [ rsp + hexvar ] , al mov byte ptr [ rsp + hexvar ] , ah lea rdi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] mov esi , num mov ecx , num mov r8d , num xor r9d , r9d call hexvar xor ecx , ecx test eax , eax setne cl lea eax , [ rcx + rcx * num ] add rsp , hexvar ret
push ebp mov ebp , esp push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi ] , edx mov dword ptr [ esi + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx add esp , num pop esi pop ebp ret
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + num ] , rax lea rsi , [ rsp + num ] mov ecx , hexvar xor edi , edi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12 , rax mov esi , hexvar mov rdi , rbx call hexvar test r12 , r12 je hexvar mov r13 , qword ptr [ rsp + num ] mov rdi , r12 call hexvar mov rbx , rax mov rdi , r12 call hexvar test rbx , rbx je hexvar mov qword ptr [ r15 ] , r13 test r14 , r14 je hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , rbx jmp hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp push eax mov al , byte ptr [ ebp + num ] xor ecx , ecx mov dl , cl movsx ecx , byte ptr [ ebp + num ] cmp ecx , hexvar mov byte ptr [ ebp - num ] , al mov byte ptr [ ebp - num ] , dl jl hexvar movsx eax , byte ptr [ ebp + num ] cmp eax , hexvar setle cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
test rdi , rdi je hexvar push r15 push r14 push rbx mov r14 , rdi mov ecx , dword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi ] test ecx , ecx je hexvar xor r15d , r15d nop word ptr [ rax + rax ] mov rax , qword ptr [ rdi + r15 * num ] test rax , rax je hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , rbx test rbx , rbx jne hexvar mov ecx , dword ptr [ r14 + hexvar ] mov rdi , qword ptr [ r14 ] add r15 , num mov eax , ecx cmp r15 , rax jb hexvar call hexvar mov rdi , r14 pop rbx pop r14 pop r15 jmp hexvar ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar lea eax , [ ebx - hexvar ] xor ebp , ebp mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ ebx + hexvar ] add ebp , num cmp ebp , eax jae hexvar mov eax , ebp call hexvar sub esp , hexvar mov esi , eax push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , edi test al , al jne hexvar call hexvar push esi push dword ptr [ esp + hexvar ] add ebp , num push dword ptr [ eax ] push num call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar cmp ebp , eax jb hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbx call hexvar test rax , rax mov rbx , rax je hexvar mov rax , rbx pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num lea rcx , [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov esi , hexvar movabs rdx , num mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar lea rcx , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , rcx jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , rsp add rax , - hexvar mov rsp , rax movabs rcx , num mov rdi , rcx mov rsi , rcx movabs rdx , num mov qword ptr [ rbp - num ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rcx ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , num mov dword ptr [ rax + hexvar ] , r8d mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , num mov dword ptr [ rax + hexvar ] , r8d mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , num mov dword ptr [ rax + hexvar ] , r8d mov rdi , qword ptr [ rcx ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar mov rsp , rbp pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov edi , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jmp edi mov eax , dword ptr [ ebp + hexvar ] test eax , eax sete cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax sete cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov ebx , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , ebx nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov qword ptr [ rip + hexvar ] , num mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , hexvar cmp rdx , rax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rax , hexvar mov r9 , rax lea r8 , [ rip + hexvar ] mov ecx , hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , hexvar mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar leave ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r0 sub sp , sp , num bl hexvar cmp r6 , num mov r7 , r0 beq hexvar mov r0 , r6 bl hexvar mov r5 , r0 mov r8 , r0 mov r0 , r7 bl hexvar mov r4 , r0 add r0 , r0 , r5 add r0 , r0 , num bl hexvar mov r5 , r0 mov r1 , r7 bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , r4 bl hexvar add r0 , r4 , num mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , r0 bl hexvar add r0 , r4 , num mov r1 , r6 add r0 , r5 , r0 bl hexvar mov r1 , r8 mov r0 , r5 bl hexvar cmn r0 , num beq hexvar bl hexvar cmp r0 , num bne hexvar mov r0 , r5 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rsi ] mov qword ptr [ rsp + num ] , rcx and eax , num cmp al , num je hexvar mov eax , dword ptr [ rdx + hexvar ] mov r15 , rdx and eax , num mov dword ptr [ rsp + hexvar ] , eax je hexvar mov r12 , qword ptr [ rsi + hexvar ] mov rbp , rsi cmp dword ptr [ r12 + hexvar ] , num je hexvar or byte ptr [ r15 + hexvar ] , num xor eax , eax jmp hexvar nop word ptr [ rax + rax ] mov eax , num mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s5 , v0 lb v1 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a3 , hexvar lui a1 , hexvar sw ra , hexvar ( sp ) lui a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jalr t9 addiu a0 , a0 , hexvar
sub rsp , num mov rcx , rsi mov esi , dword ptr [ rip + hexvar ] test esi , esi jns hexvar cmp esi , - hexvar je hexvar mov ecx , hexvar mov edx , hexvar mov esi , hexvar mov edi , hexvar call hexvar mov r8d , hexvar mov rdx , rdi mov edi , num call hexvar add rsp , num ret
push rbp push r15 push r14 push rbx push rax mov r15 , rdx call hexvar test rax , rax je hexvar mov r14 , rax mov rdi , r15 call hexvar test eax , eax jle hexvar xor ebp , ebp nop dword ptr [ rax ] mov rdi , r15 mov esi , ebp call hexvar mov rbx , rax mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi jne hexvar mov rdi , qword ptr [ rbx + num ] xor esi , esi call hexvar test rax , rax je hexvar mov rdi , r14 mov rsi , rax call hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d jmp hexvar mov esi , hexvar mov rdi , r14 call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdx , qword ptr [ rbx ] mov r8 , qword ptr [ rbx + num ] mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp ] , rax xor r14d , r14d mov esi , hexvar mov ecx , hexvar mov r9d , hexvar mov edi , num xor eax , eax call hexvar mov rax , r14 add rsp , num pop rbx pop r14 pop r15 pop rbp ret
sub esp , hexvar call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax ] , hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ eax + hexvar ] , num mov cl , num mov byte ptr [ ebp - num ] , cl jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num mov al , num mov byte ptr [ ebp - num ] , al jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax + num ] cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , dword ptr [ ebp - num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] cmp byte ptr [ eax + num ] , num jne hexvar mov eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r5 , r1 ldr r1 , [ pc , hexvar ] bl hexvar subs r1 , r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r2 , [ r3 , num ] cmp r2 , num beq hexvar ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r2 , [ r3 , num ] cmp r2 , num bne hexvar b hexvar mov r0 , r4 bl hexvar ldr r3 , [ r4 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 ] str r3 , [ r0 ] ldr r3 , [ r4 , hexvar ] ldr r3 , [ r3 , hexvar ] str r0 , [ r3 ] mov r1 , r5 mov r0 , r4 bl hexvar pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 ldrbls pc , [ r3 , lr , ror num ]
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + num ] and dl , num mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dl , byte ptr [ ebp - num ] and dl , num movzx eax , dl mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , num b hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num ldr r2 , [ sp , num ] add r2 , r2 , r3 ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num ldr r1 , [ sp , hexvar ] add r3 , r1 , r3 ldr r2 , [ r2 ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num ldr r2 , [ sp , num ] add r3 , r2 , r3 mov r2 , num str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num ble hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar mov r2 , num str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r1 , [ sp , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r3 , [ r3 , hexvar ] mov r2 , r3 ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r4 , [ r0 , hexvar ] ldr lr , [ r4 , hexvar ] cmp lr , num beq hexvar cmp r1 , num beq hexvar mov r3 , num ldr r3 , [ r3 , hexvar ] udf num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s5 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , v0 lw s6 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] mov ip , num ldr r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] umull r1 , r2 , r0 , r3 mov r3 , num mov r4 , num mov r3 , r2 mov r4 , num cmp r3 , num beq hexvar mov ip , num mov r3 , ip cmp r3 , num beq hexvar bl hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] mul r1 , r2 , r3 mov r0 , r1 bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move a1 , zero move a0 , zero jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , hexvar sltiu a0 , a0 , hexvar movn v0 , v1 , a0 move a3 , v0 move a2 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar lw a2 , hexvar ( fp ) addiu a1 , zero , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r14 push rbx push rax mov r14 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov qword ptr [ rax ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx ] , num movabs rax , hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push { r4 , r6 , r7 , lr } mov r6 , r0 sub sp , sp , num mov r7 , r1 mov r0 , num ldr r1 , [ pc , hexvar ] bl hexvar ldr r3 , [ pc , hexvar ] mov r4 , r0 ldr r3 , [ r3 ] cmp r3 , num beq hexvar mov r2 , r6 mov r3 , r7 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar add r0 , r0 , r4 add sp , sp , num pop { r4 , r6 , r7 , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] test ecx , ecx sete dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] test eax , eax sete cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar test eax , eax sete bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] call hexvar test esi , esi je hexvar sub esp , hexvar push esi call hexvar mov dword ptr [ esp ] , esi call hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp ] , esi mov ebp , eax call hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num add eax , hexvar mov dword ptr [ esp + hexvar ] , eax push eax push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] xor eax , eax test edx , edx setne al xor edi , edi mov dword ptr [ esp + hexvar ] , eax mov ecx , dword ptr [ ebp + num ] test ecx , ecx je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] push esi push ebp push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] push esi mov ecx , dword ptr [ esp + hexvar ] push ecx mov edx , dword ptr [ esp + hexvar ] add edx , hexvar push edx push ecx push dword ptr [ esp + hexvar ] call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , num mov ecx , dword ptr [ esp + hexvar ] push ecx mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax push ecx call hexvar add esp , hexvar test eax , eax jne hexvar nop mov dword ptr [ esp + num ] , num sub esp , hexvar push esi call hexvar add esp , hexvar test edi , edi je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , num mov rdx , qword ptr [ rsi ] cmp qword ptr [ rdi ] , rdx je hexvar and eax , num ret
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rdi , rdi je hexvar mov r15 , rdx test rdx , rdx je hexvar mov r14 , rcx test rcx , rcx je hexvar mov r13 , rsi mov r12 , rdi lea rsi , [ rsp + num ] mov rdi , r13 call hexvar test eax , eax jne hexvar mov r8 , qword ptr [ rsp + num ] mov eax , num cmp r8 , qword ptr [ r14 ] ja hexvar mov rax , r13 shr rax , num mov ecx , r13d and ecx , num cmp rcx , num sbb rax , - num add rax , num mov byte ptr [ r15 ] , num cmp rax , hexvar jae hexvar mov r8d , num mov ecx , num jmp hexvar cmp rax , hexvar jae hexvar mov r8d , num mov ecx , num mov sil , hexvar mov edi , num jmp hexvar mov r8d , num cmp rax , hexvar ja hexvar mov byte ptr [ r15 + num ] , hexvar mov rsi , rax shr rsi , num mov r8d , num mov ecx , num mov edi , num mov byte ptr [ r15 + rdi ] , sil mov byte ptr [ r15 + rcx ] , al lea eax , [ r13 - num ] not al and al , num mov byte ptr [ r15 + r8 ] , al add r8 , num xor eax , eax test r13 , r13 je hexvar xor edi , edi xor esi , esi nop dword ptr [ rax + rax ] mov rcx , rsi shr rcx , num movzx ebx , byte ptr [ r12 + rcx ] mov ecx , esi and cl , num xor cl , num mov edx , num shl edx , cl and edx , ebx shr edx , cl test edx , edx setne bl mov edx , esi and edx , num mov ecx , edx xor cl , num shl bl , cl or bl , dil cmp rdx , num jne hexvar mov byte ptr [ r15 + r8 ] , bl add r8 , num xor ebx , ebx add rsi , num mov edi , ebx cmp r13 , rsi jne hexvar test r13b , num je hexvar mov byte ptr [ r15 + r8 ] , bl add r8 , num mov qword ptr [ r14 ] , r8 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
push { r4 , r5 , lr } ldr r5 , [ pc , hexvar ] ldr r3 , [ r0 ] ldr r2 , [ r5 ] sub sp , sp , hexvar cmp r3 , num str r2 , [ sp , hexvar ] beq hexvar cmp r3 , num bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push r15 push r14 mov r15 , rdi push r13 push r12 mov r13 , rsi push rbp push rbx sub rsp , hexvar test rdi , rdi mov byte ptr [ rdx + hexvar ] , num mov qword ptr [ rsp ] , rdx mov qword ptr [ rdx + num ] , num jne hexvar cmp rsi , num ja hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r0 mov r0 , r1 mov r6 , r1 bl hexvar subs r7 , r0 , num popeq { r4 , r5 , r6 , r7 , r8 , pc } ldr r0 , [ r5 ] cmp r0 , num beq hexvar ldmib r5 , { r2 , r3 } sub r3 , r3 , r2 cmp r7 , r3 bgt hexvar sub r3 , r2 , num cmp r3 , r0 blo hexvar add r2 , r2 , r7 ldrb r1 , [ r3 ] , - num strb r1 , [ r2 , - num ] ! ldr r0 , [ r5 ] cmp r0 , r3 bls hexvar mov r2 , r7 mov r1 , r6 bl hexvar ldr r3 , [ r5 , num ] add r7 , r3 , r7 str r7 , [ r5 , num ] pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax sub esp , num mov dword ptr [ eax ] , num lea eax , [ esp + hexvar ] push eax push edi call dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] add esp , hexvar cmp edx , edi je hexvar test esi , esi mov ecx , dword ptr [ esp + hexvar ] je hexvar fldz fxch st ( num ) fucomi st ( num ) fstp st ( num ) jp hexvar mov eax , num je hexvar cmp dword ptr [ ecx ] , hexvar setne al test esi , esi je hexvar mov dword ptr [ esi ] , edx mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] fstp qword ptr [ ebp ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi movsd qword ptr [ rbp - hexvar ] , xmm0 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] cmp ecx , num mov ecx , hexvar mov edx , hexvar cmove edx , ecx movsd xmm0 , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rdi , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jns hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , - hexvar jne hexvar mov eax , dword ptr [ rip + hexvar ] jmp hexvar mov eax , dword ptr [ rip + hexvar ] jmp hexvar mov eax , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] test edx , edx sete bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + hexvar ] test eax , eax sete cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] sub eax , ecx setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] dec eax mov dword ptr [ ebp - hexvar ] , eax not eax shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + ecx * num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] mov ecx , dword ptr [ edx + ecx * num ] sub eax , ecx setne bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push ebp push edi push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] lea ebp , [ ebx - hexvar ] jmp hexvar add esi , num add ebp , hexvar cmp esi , hexvar je hexvar mov eax , dword ptr [ ebp ] test eax , eax je hexvar sub esp , num push edi push eax call hexvar add esp , hexvar test eax , eax jne hexvar imul esi , esi , hexvar add esp , hexvar lea eax , [ ebx + esi - hexvar ] pop ebx pop esi pop edi pop ebp ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax mov rdi , rbx pop rbx jmp hexvar ret
push { r4 , r5 , fp , lr } add fp , sp , hexvar sub sp , sp , num sub r3 , fp , hexvar stm r3 , { r0 , r1 } ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r4 , r0 mov r5 , r1 ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r2 , num ldr r3 , [ pc , hexvar ] bl hexvar mov r2 , r0 mov r3 , r1 mov r0 , r4 mov r1 , r5 bl hexvar mov r3 , r0 mov r4 , r1 mov r0 , r3 mov r1 , r4 sub sp , fp , hexvar pop { r4 , r5 , fp , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r6 , [ pc , hexvar ] sub sp , sp , hexvar ldr lr , [ sp , hexvar ] ldr ip , [ r6 ] mov r8 , r2 mov sb , r3 mov r2 , r1 str lr , [ sp ] add r3 , sp , hexvar mov r1 , num str ip , [ sp , hexvar ] mov r7 , r0 ldr sl , [ sp , hexvar ] ldr r5 , [ sp , hexvar ] bl hexvar subs fp , r0 , num bne hexvar add r3 , sp , hexvar ldm r3 , { r2 , r3 } cmp r2 , r8 sbcs r1 , r3 , sb movlt r1 , num add sb , sp , hexvar ldm sb , { r8 , sb } movge r1 , num cmp r8 , r2 sbcs r0 , sb , r3 orrlt r1 , r1 , num cmp r1 , num beq hexvar str r2 , [ sp , num ] str r3 , [ sp , hexvar ] bl hexvar add r3 , sp , num ldm r3 , { r2 , r3 } cmp r2 , hexvar sbcs r1 , r3 , num bge hexvar mov r8 , hexvar mvn sb , num cmp r2 , r8 sbcs r3 , r3 , sb blt hexvar mov r4 , hexvar cmp r5 , num str r4 , [ r0 ] bne hexvar b hexvar bl hexvar cmp fp , num beq hexvar cmp fp , num beq hexvar ldr r4 , [ r0 ] cmp r5 , num moveq r5 , num cmp r4 , hexvar moveq r4 , num mov r0 , r7 bl hexvar mov r3 , sl str r0 , [ sp ] ldr r2 , [ pc , hexvar ] mov r1 , r4 mov r0 , r5 bl hexvar add r3 , sp , hexvar ldm r3 , { r2 , r3 } ldr lr , [ sp , hexvar ] ldr ip , [ r6 ] mov r0 , r2 cmp lr , ip mov r1 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r2 , lsr num andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ eax ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ecx ] add eax , num mov ecx , dword ptr [ ecx ] add ecx , hexvar sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar xor eax , eax mov esp , ebp pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx ] , rax jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] or eax , num mov dword ptr [ ebp + num ] , eax xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor al , hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] add ecx , - num adc esi , - num mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , eax mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp - num ] cmp eax , dword ptr [ ecx + num ] jae hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + num ] mov eax , dword ptr [ eax + ecx * num ] cmp eax , dword ptr [ ebp + num ] jge hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax + num ] add ecx , num mov dword ptr [ eax + num ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + num ] mov eax , dword ptr [ eax + ecx * num ] cmp eax , dword ptr [ ebp + num ] jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov eax , dword ptr [ eax + ecx * num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num jne hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar call hexvar xor al , hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov eax , dword ptr [ eax + ecx * num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov eax , dword ptr [ eax + ecx * num ] movsx eax , byte ptr [ eax + num ] cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov eax , dword ptr [ eax + ecx * num ] movsx eax , byte ptr [ eax + num ] cmp eax , num jne hexvar call hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar call hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx sub esp , num call hexvar add esi , hexvar mov dword ptr [ esp + num ] , esi mov ebp , eax mov edi , dword ptr [ eax ] movzx ecx , byte ptr [ edi ] movzx edx , cl lea eax , [ esi - hexvar ] test byte ptr [ eax + edx * num ] , num je hexvar movsx ecx , cl sub ecx , hexvar mov eax , hexvar sub eax , ecx cmp eax , - num jl hexvar add edi , num mov esi , num mov eax , dword ptr [ esp + num ] lea eax , [ eax - hexvar ] mov dword ptr [ esp ] , eax lea eax , [ esi + esi * num ] lea esi , [ ecx + eax * num ] mov dword ptr [ ebp ] , edi movzx ecx , byte ptr [ edi ] movzx eax , cl mov ebx , dword ptr [ esp ] test byte ptr [ ebx + eax * num ] , num je hexvar movsx ecx , cl sub ecx , hexvar add edi , num mov ebx , hexvar sub ebx , ecx mov edx , hexvar mov eax , ebx imul edx sar edx , num sar ebx , hexvar sub edx , ebx cmp edx , esi jge hexvar mov eax , dword ptr [ ebp ] add eax , num mov edi , dword ptr [ esp + num ] lea ecx , [ edi - hexvar ] mov edx , eax mov dword ptr [ ebp ] , eax add eax , num movzx edx , byte ptr [ edx ] test byte ptr [ ecx + edx * num ] , num jne hexvar mov eax , hexvar jmp hexvar test esi , esi mov eax , hexvar cmovns eax , esi add esp , num pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar mov esi , hexvar call hexvar mov rdi , rbx pop rbx jmp hexvar ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , ecx mov edx , ecx add esp , num pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a3 sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 sw s0 , hexvar ( sp ) move s0 , a1 lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a1 , sp , hexvar move a0 , s2 sw zero , ( v0 ) move t9 , s5 jalr t9 move s3 , v0 lw v1 , hexvar ( sp ) beq v1 , s2 , hexvar lw gp , hexvar ( sp ) beqz s0 , hexvar nop mtc1 zero , f2 mthc1 zero , f2 c.eq.d f0 , f2 bc1t hexvar addiu v0 , zero , num lw v0 , ( s3 ) xori v0 , v0 , hexvar sltu v0 , zero , v0 beqz s0 , hexvar nop sw v1 , ( s0 ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar sdc1 f0 , ( s4 ) lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lb v0 , ( v1 ) bnez v0 , hexvar nop mtc1 zero , f2 mthc1 zero , f2 bc1f fcc1 , hexvar addiu v0 , zero , num
lw v0 , hexvar ( a0 ) addiu sp , sp , - hexvar lui gp , hexvar sw s2 , hexvar ( sp ) addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) move s2 , a1 sw s3 , hexvar ( sp ) move s0 , a0 sw s1 , hexvar ( sp ) addiu a1 , zero , num sw gp , hexvar ( sp ) move s3 , a2 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , num call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push r14 push r13 mov r13d , edx push r12 push rbp mov rbp , rdi push rbx mov rbx , rsi sub rsp , hexvar test ecx , ecx jne hexvar mov rdi , rbx call r8
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] add eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , rdi mov qword ptr [ rbp - num ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rsi , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , num mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rsi + hexvar ] sub ecx , num sete r8b movzx r9d , r8b mov esi , r9d mov rsi , qword ptr [ rsi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , ecx jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop addiu v0 , zero , num b hexvar nop addiu v0 , zero , num b hexvar nop addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu s0 , zero , - num addiu s3 , sp , hexvar move a2 , s0 addiu a1 , zero , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bltz v0 , hexvar move s0 , v0 move a1 , s0 move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a1 , v0 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a2 , s0 move v0 , zero lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s0 , zero addiu s1 , zero , num b hexvar addiu s3 , sp , hexvar addiu s0 , s0 , num move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) slt v0 , s0 , v0 beqz v0 , hexvar move a1 , s0 move a0 , s2 lw t9 , - hexvar ( gp )
test sil , num jne hexvar lea eax , [ rsi + num ] test esi , esi cmovs esi , eax sar esi , num test esi , esi jle hexvar test edx , edx je hexvar lea eax , [ rsi - num ] lea rcx , [ rdi + rax + num ] xor eax , eax nop dword ptr [ rax + rax ] movzx edx , byte ptr [ rdi ] shl rax , num add rdi , num or rax , rdx cmp rcx , rdi jne hexvar ret nop dword ptr [ rax ] movsxd rax , esi lea ecx , [ rsi - num ] lea rdx , [ rdi + rax - num ] lea rax , [ rdi + rax - num ] sub rax , rcx mov rsi , rax xor eax , eax nop dword ptr [ rax + rax ] movzx ecx , byte ptr [ rdx ] shl rax , num sub rdx , num or rax , rcx cmp rdx , rsi jne hexvar ret nop dword ptr [ rax ] xor eax , eax ret
push r15 push r14 mov rax , rsi push r13 push r12 shr rax , num push rbp push rbx lea r14 , [ rdi + rax * num ] mov rbx , rdi mov r12 , rcx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi sub rsi , rax mov qword ptr [ rsp + hexvar ] , rdx cmp rsi , num mov qword ptr [ rsp + num ] , rax mov qword ptr [ rsp + hexvar ] , r14 ja hexvar jne hexvar mov rbp , qword ptr [ r14 ] mov r13 , qword ptr [ r14 + num ] mov rdi , rbp mov rsi , r13 call rcx test eax , eax jle hexvar mov qword ptr [ r14 ] , r13 mov qword ptr [ r14 + num ] , rbp cmp qword ptr [ rsp + num ] , num ja hexvar mov rbp , qword ptr [ rbx ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rbp mov rax , qword ptr [ rsp + hexvar ] mov r14 , qword ptr [ rsp + num ] xor r15d , r15d mov qword ptr [ rsp ] , num mov r13 , qword ptr [ rax ] nop word ptr [ rax + rax ] mov rsi , r13 mov rdi , rbp add r15 , num call r12
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov sb , r1 str r3 , [ sp , hexvar ] ldr r1 , [ r1 , hexvar ] ldr r3 , [ sp , hexvar ] ldr ip , [ r1 , hexvar ] str r1 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r3 , [ sp , hexvar ] ldr r1 , [ r1 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp ip , num str r0 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r1 , [ sp , hexvar ] ldr sl , [ sp , hexvar ] str r3 , [ sp , hexvar ] movne r0 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , edi mov eax , dword ptr [ eax - hexvar ] mov dword ptr [ edx - hexvar ] , eax mov al , byte ptr [ ecx - hexvar ] mov edi , dword ptr [ edx - hexvar ] mov byte ptr [ edi ] , al mov al , byte ptr [ ecx - hexvar ] mov edi , dword ptr [ edx - hexvar ] mov byte ptr [ edi + num ] , al mov al , byte ptr [ ecx - hexvar ] mov edi , dword ptr [ edx - hexvar ] mov byte ptr [ edi + num ] , al mov al , byte ptr [ ecx - hexvar ] mov edi , dword ptr [ edx - hexvar ] mov byte ptr [ edi + num ] , al mov al , byte ptr [ ecx - hexvar ] mov edi , dword ptr [ edx - hexvar ] mov byte ptr [ edi + num ] , al mov al , byte ptr [ ecx - hexvar ] mov edi , dword ptr [ edx - hexvar ] mov byte ptr [ edi + num ] , al mov al , byte ptr [ ecx - hexvar ] mov edx , dword ptr [ edx - hexvar ] mov byte ptr [ edx + num ] , al mov al , byte ptr [ ecx - num ] mov ecx , dword ptr [ esi ] mov byte ptr [ ecx + num ] , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbx mov rbx , rdi mov rdx , qword ptr [ rsi ] test dl , num jne hexvar test edx , hexvar je hexvar mov qword ptr [ rbx ] , num mov eax , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lb v0 , ( v0 ) andi v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a0 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 seb v1 , a0 sb v1 , ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , v0 , - num sw v1 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rax test rdi , rdi je hexvar test rdx , rdx je hexvar xor eax , eax xor r8d , r8d test rsi , rsi je hexvar xor r9d , r9d mov ecx , dword ptr [ rdi + r9 * num ] cmp ecx , hexvar ja hexvar mov r10d , num cmp ecx , hexvar jl hexvar mov r10d , num cmp ecx , hexvar jl hexvar xor r11d , r11d cmp ecx , hexvar setl r11b mov r10d , num sub r10 , r11 add r8 , r10 add r9 , num cmp r9 , rsi jb hexvar cmp r8 , hexvar ja hexvar add r8 , num mov qword ptr [ rdx ] , r8 pop rcx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov ecx , num jmp hexvar mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
push r12 push rbp push rbx sub rsp , hexvar mov rbp , rsi mov r12 , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edi , - hexvar jne hexvar mov rdi , rdx call rsi jmp hexvar mov ebx , edi mov rdi , rsp call hexvar test eax , eax je hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar mov edi , ebx call hexvar test eax , eax je hexvar call hexvar mov rbx , rax mov ebp , dword ptr [ rax ] mov rdi , rsp call hexvar mov dword ptr [ rbx ] , ebp mov eax , hexvar jmp hexvar mov rdi , r12 call rbp mov ebx , eax test eax , eax jns hexvar call hexvar mov r12 , rax mov ebp , dword ptr [ rax ] mov rdi , rsp call hexvar test eax , eax je hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar mov rdi , rsp call hexvar test ebp , ebp je hexvar mov dword ptr [ r12 ] , ebp mov eax , ebx jmp hexvar mov eax , ebx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar jmp hexvar mov rdi , rsp call hexvar mov eax , ebx jmp hexvar mov rdi , rsp call hexvar test eax , eax je hexvar jmp hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rsi + num ] cmp qword ptr [ rdi + num ] , rax jne hexvar mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbp , qword ptr [ rax + hexvar ] mov eax , num test rbp , rbp je hexvar mov rbx , qword ptr [ rsi ] mov esi , hexvar mov rdi , rbx call hexvar lea rdx , [ rax + num ] test rax , rax mov rsi , rbp cmovne rbx , rdx mov rdi , rbx call hexvar test eax , eax sete al movzx eax , al add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar str r0 , [ sp , num ] subs r4 , r1 , num beq hexvar ldrb r3 , [ r4 ] cmp r3 , num beq hexvar mov r2 , num ldr r6 , [ pc , hexvar ] ldr sl , [ pc , hexvar ] ldr sb , [ pc , hexvar ] ldr r8 , [ pc , hexvar ] ldr r7 , [ pc , hexvar ] ldr fp , [ pc , hexvar ] cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar add r5 , r2 , num cmp r2 , num bne hexvar ldrb r3 , [ r4 ] cmp r3 , hexvar beq hexvar ldrb r3 , [ r4 ] cmp r3 , hexvar beq hexvar ldrb r3 , [ r4 ] cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar bne hexvar add r4 , r4 , num mov r1 , r7 ldr r0 , [ sp , num ] bl hexvar b hexvar add r4 , r4 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , hexvar push esi call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num mov edi , eax push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar xor edi , edi sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
mov edx , dword ptr [ rdi + hexvar ] cmp edx , num sete cl cmp edx , num sete al or eax , ecx mov ecx , dword ptr [ rsi + hexvar ] cmp ecx , num sete r8b cmp ecx , num sete dl or edx , r8d cmp dl , al jb hexvar mov eax , num jbe hexvar ret nop word ptr [ rax + rax ] mov rcx , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx jg hexvar jl hexvar mov rax , qword ptr [ rsi + hexvar ] sub eax , dword ptr [ rdi + hexvar ] jne hexvar mov rsi , qword ptr [ rsi ] mov rdi , qword ptr [ rdi ] jmp hexvar mov eax , hexvar ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar pop ebx pop esi pop edi jmp eax lea esi , [ esi ] sub esp , num push hexvar push edx push edi call hexvar pop eax push dword ptr [ esi ] call hexvar push eax lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push edi call hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi ret
mov eax , hexvar test dil , dil je hexvar cmp dil , hexvar jbe hexvar cmp dil , hexvar ja hexvar mov byte ptr [ rip + hexvar ] , dil mov eax , hexvar jmp hexvar cmp dil , hexvar jne hexvar mov byte ptr [ rip + hexvar ] , hexvar mov byte ptr [ rip + hexvar ] , hexvar mov eax , hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , hexvar mov byte ptr [ rip + hexvar ] , hexvar cmp dil , hexvar jbe hexvar cmp dil , hexvar je hexvar add edi , - hexvar mov byte ptr [ rip + hexvar ] , dil mov eax , hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , hexvar mov byte ptr [ rip + hexvar ] , hexvar mov eax , hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , hexvar sub edi , hexvar mov byte ptr [ rip + hexvar ] , dil mov eax , hexvar jmp hexvar mov byte ptr [ rip + hexvar ] , hexvar add edi , hexvar mov byte ptr [ rip + hexvar ] , dil mov eax , hexvar mov byte ptr [ rax ] , num mov eax , hexvar ret
push { r4 , lr } ldr r4 , [ pc , hexvar ] ldr r3 , [ r4 , num ] cmp r3 , num popeq { r4 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov edi , hexvar call hexvar nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al mov byte ptr [ ecx + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num jne hexvar mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] cmp eax , num je hexvar cmp eax , hexvar je hexvar cmp eax , num je hexvar jmp hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , hexvar push num push num push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax push dword ptr [ esp + hexvar ] push num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push edx push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar push num push num push num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar nop jmp hexvar nop jmp hexvar nop mov eax , num add esp , hexvar pop ebx ret
push edi push esi mov edi , edx push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , num push dword ptr [ edx + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar pop ebx pop esi pop edi ret
ldr r2 , [ r0 ] ldr r1 , [ r1 ] ldr r3 , [ r2 , hexvar ] push { r4 , r5 , r6 , lr } ldr ip , [ r1 , hexvar ] ldr lr , [ r2 , hexvar ] sub r3 , r3 , num and r0 , r3 , lr and r3 , r3 , ip subs r0 , r0 , r3 popne { r4 , r5 , r6 , pc }
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx pop rbx jmp hexvar nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , num lea eax , [ ebx - hexvar ] lea esi , [ esp + hexvar ] push esi push eax push num push hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] cmp ebp , - num je hexvar cmp edx , hexvar je hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , num jg hexvar je hexvar cmp eax , num je hexvar test ebp , ebp je hexvar cmp ebp , edx je hexvar test ebp , ebp js hexvar mov dword ptr [ esp + hexvar ] , edx sub esp , num push ebp push esi push edi call hexvar mov edx , dword ptr [ esp + hexvar ] lea ecx , [ edi + ebp ] mov eax , hexvar add esp , hexvar sub eax , edx push eax push num push ecx call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , ebp sub esp , num add esi , ebp sub eax , edx sub edx , ebp lea eax , [ edi + eax + hexvar ] push edx push esi push eax call hexvar add esp , hexvar mov eax , hexvar jmp hexvar lea esi , [ esi ] sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push ebp call hexvar add esp , hexvar cmp eax , num je hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar sw zero , hexvar ( sp ) move s1 , a1 move a1 , a0 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a1 , s1 lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) b hexvar move v0 , s0 move s0 , zero move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] mov r2 , num ldr r3 , [ sp , hexvar ] lsl r3 , r2 , r3 str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ sp , num ] cmp r2 , r3 ble hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp ] str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num add r2 , r2 , r3 ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num ldr r1 , [ sp , hexvar ] add r3 , r1 , r3 ldr r2 , [ r2 ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r3 , r2 , r3 str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r2 , r3 blt hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar bx lr
push rbx mov rbx , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax add rax , hexvar mov qword ptr [ rbx + hexvar ] , rax mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push r12 push rbp push rbx pxor xmm0 , xmm0 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rsi , rsi movaps xmmword ptr [ rsp ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , rdx ja hexvar cmp qword ptr [ rdi + hexvar ] , num jne hexvar mov rdi , qword ptr [ rdi + hexvar ] xor eax , eax mov rbp , rsi mov rdx , rdi add rdx , qword ptr [ rbx + hexvar ] setb al add qword ptr [ rbx + hexvar ] , rax cmp byte ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rdx jne hexvar lea r12 , [ rbx + hexvar ] mov edx , hexvar xor esi , esi sub rdx , rdi mov qword ptr [ rbx + hexvar ] , - num add rdi , r12 call hexvar mov rsi , r12 mov rdi , rbx mov r12 , rsp call hexvar movdqu xmm0 , xmmword ptr [ rbx ] mov rsi , r12 mov rdx , qword ptr [ rbx + hexvar ] mov rdi , rbp movaps xmmword ptr [ rsp ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 call hexvar mov edx , hexvar xor esi , esi mov rdi , r12 mov rax , qword ptr [ rip + hexvar ] call rax xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar pop ebp ret
push rbx lea rsi , [ rip + hexvar ] mov rbx , rdi mov edx , num xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi mov edi , num xor eax , eax call hexvar call hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] sub eax , num sub ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar xor eax , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop ebp ret
push rbp push rbx push rax test rdi , rdi je hexvar mov ebp , esi mov rbx , rdi call hexvar mov ecx , eax xor eax , eax test ebp , ebp js hexvar cmp ecx , ebp jle hexvar mov rdi , rbx mov esi , ebp call hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov eax , dword ptr [ rdx + hexvar ] cmp eax , num mov edx , num mov esi , hexvar cmove rsi , rdx mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + rcx * num ] , num je hexvar mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + rcx * num ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] jge hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rax mov rsi , rcx mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , hexvar mov qword ptr [ rax ] , rcx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar add rsp , hexvar pop rbp ret
cmp r0 , num push { r4 , r5 , r6 , lr } mov r4 , r1 beq hexvar cmp r0 , num bne hexvar bl hexvar mov r2 , num ldr r5 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r2 , r4 mov r6 , r0 mov r1 , num mov r0 , num bl hexvar mov r3 , r0 mov r2 , r6 mov r1 , r5 pop { r4 , r5 , r6 , lr } mov r0 , num b hexvar bl hexvar mov r2 , num ldr r5 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r4 mov r6 , r0 mov r0 , num bl hexvar b hexvar bl hexvar muleq r1 , ip , pc andeq r7 , r1 , r8 , lsl num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov byte ptr [ ebp - num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) nor s1 , zero , a1 andi v0 , s1 , num addiu s1 , zero , num sllv s1 , s1 , v0 move s2 , a2 beqz a0 , hexvar movn s2 , s1 , a2 bltz a1 , hexvar move v0 , a1 sra s3 , v0 , num lw v0 , hexvar ( a0 )
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r5 , r1 mov r4 , r2 ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r1 blx r3 str r0 , [ r4 ] ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx mov rdx , qword ptr [ rip ] jmp rdx mov rax , qword ptr [ rsp + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov edi , dword ptr [ rip ] call hexvar mov dword ptr [ rsp + num ] , eax test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num ] jmp rdx mov eax , dword ptr [ rsp + num ] mov dword ptr [ rsp + hexvar ] , eax mov rcx , qword ptr [ rip ] jmp rcx mov eax , dword ptr [ rip ] movsxd rcx , dword ptr [ rip ] lea rcx , [ rcx + rcx * num ] shl rcx , num mov edx , dword ptr [ rcx ] sub eax , edx setne sil movzx edx , sil mov ecx , edx mov rcx , qword ptr [ rcx * num ] mov dword ptr [ rsp ] , eax jmp rcx mov dword ptr [ rsp + hexvar ] , hexvar mov rax , qword ptr [ rip ] jmp rax mov rdi , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rsp + hexvar ] , eax mov rdx , qword ptr [ rip ] jmp rdx mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r0 , [ fp , - hexvar ] bl hexvar bl hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num xor ebp , ebp mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num jmp hexvar
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax jne hexvar sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num setne al movzx eax , al test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar leave ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] add r0 , sp , hexvar ldr r3 , [ sp , hexvar ] mov r2 , num mov r1 , num bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] mov r1 , hexvar ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar add r3 , sp , hexvar mov r2 , num mov r1 , hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , r2 beq hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , r2 bne hexvar ldr r3 , [ sp , hexvar ] mov r1 , r3 ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 b hexvar ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] b hexvar mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] str r3 , [ r2 ] mov r0 , r0 add sp , fp , num pop { fp } bx lr andeq r2 , r4 , ip , lsl num
push ebp mov ebp , esp sub esp , num mov dword ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num sete al and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num je hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , hexvar jl hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , hexvar jg hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] sub eax , hexvar mov cl , byte ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , cl mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax ] push hexvar push edi call hexvar add esp , num mov esi , eax mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ eax ] push hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar test esi , esi lea edx , [ ebx - hexvar ] cmove esi , edx sub esp , num push eax push esi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push ebp push edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r0 , [ r0 , hexvar ] cmn r0 , num beq hexvar mov r4 , r2 ldr r3 , [ r5 , hexvar ] cmp r3 , hexvar beq hexvar cmp r2 , num movge r4 , r2 mvnlt r4 , hexvar mov r3 , num mov r2 , r4 bl hexvar cmp r0 , num blt hexvar cmp r0 , r4 ldrlo r3 , [ r5 , hexvar ] biclo r3 , r3 , num strlo r3 , [ r5 , hexvar ] pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar nop word ptr [ eax + eax ]
push r14 push r13 mov esi , hexvar push r12 push rbp mov edi , hexvar push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax je hexvar mov r12 , rax mov rbp , rsp mov rdi , r12 call hexvar test rax , rax mov r13 , rax je hexvar nop mov edi , hexvar call hexvar mov rdi , qword ptr [ r13 ] mov rbx , rax call hexvar mov rdi , qword ptr [ r13 + num ] mov qword ptr [ rbx ] , rax call hexvar mov rdi , qword ptr [ r13 + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar mov ecx , num mov rsi , rax mov edi , hexvar or byte ptr [ rbx + hexvar ] , num mov r13 , rax mov qword ptr [ rbx + hexvar ] , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] mov eax , num seta cl setb dl cmp cl , dl je hexvar mov edi , hexvar mov ecx , num mov rsi , r13 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] je hexvar mov edi , hexvar mov ecx , num mov rsi , r13 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] je hexvar mov edi , hexvar mov ecx , num mov rsi , r13 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] je hexvar mov edi , hexvar mov ecx , num mov rsi , r13 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] jne hexvar movzx edx , byte ptr [ rbx + hexvar ] mov r14 , qword ptr [ rbx ] mov esi , hexvar mov rdi , r14 and edx , hexvar or eax , edx mov byte ptr [ rbx + hexvar ] , al call hexvar test rax , rax mov edx , num je hexvar movzx eax , byte ptr [ rbx + hexvar ] add edx , edx mov qword ptr [ rbx + hexvar ] , - num mov rdi , r12 and eax , hexvar or edx , eax mov byte ptr [ rbx + hexvar ] , dl mov qword ptr [ rbp ] , rbx lea rbp , [ rbx + hexvar ] call hexvar test rax , rax mov r13 , rax jne hexvar mov rdi , r12 call hexvar test eax , eax je hexvar mov qword ptr [ rbp ] , num mov rax , qword ptr [ rsp ] mov rsi , qword ptr [ rsp + num ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbx sub rsp , hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + num ] , rax mov ecx , hexvar mov ebx , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + hexvar ] , num mov ecx , hexvar mov rax , qword ptr [ rsp + num ] nop word ptr cs : [ rax + rax ] nop cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , ebx jmp hexvar add rsp , hexvar pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ esi + hexvar ] and eax , num cmp al , num je hexvar add esp , num mov eax , num pop ebx pop esi ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , hexvar mov r5 , r3 ldr r4 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs r7 , r2 , num movne r3 , num strne r3 , [ r7 ] cmp r5 , num mvnne r3 , num strne r3 , [ r5 ] cmp r4 , num movne r3 , num strne r3 , [ r4 ] bl hexvar subs r6 , r0 , num beq hexvar cmp r7 , num ldrne r3 , [ r6 , num ] clzne r3 , r3 lsrne r3 , r3 , num strne r3 , [ r7 ] cmp r5 , num ldrbne r3 , [ r6 , hexvar ] strne r3 , [ r5 ] cmp r4 , num beq hexvar ldr r7 , [ r6 ] bl hexvar mov r5 , r0 cmp r0 , num cmpne r7 , num beq hexvar mov r1 , hexvar mov r0 , r7 bl hexvar cmp r0 , num beq hexvar add r7 , r0 , num mov r2 , r4 mov r1 , r5 mov r0 , r7 bl hexvar cmp r0 , num beq hexvar cmp r5 , num beq hexvar mov r0 , r5 bl hexvar mov r0 , r6 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp push r14 push rbx sub rsp , hexvar mov ebp , esi mov rbx , rdi cmp esi , num jl hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] call hexvar test rax , rax je hexvar mov qword ptr [ rbx ] , rax add rbx , num add ebp , - num cmp ebp , num jg hexvar mov qword ptr [ rsp + num ] , rax mov r14d , num test ebp , ebp je hexvar call hexvar mov qword ptr [ rsp + num ] , rax test rax , rax je hexvar movsxd rdx , ebp lea rsi , [ rsp + num ] mov rdi , rbx call hexvar jmp hexvar mov qword ptr [ rsp + num ] , num xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
push { r4 , r5 , r6 , lr } ldr r4 , [ r0 , num ] cmp r1 , num ldr r5 , [ pc , hexvar ] movne r5 , r1 cmp r4 , num beq hexvar ldr r4 , [ r4 , num ] mov r6 , r0 cmp r4 , num bne hexvar b hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar mov r1 , r5 ldr r0 , [ r4 , num ] bl hexvar cmp r0 , num bne hexvar str r4 , [ r6 , num ] mov r0 , num pop { r4 , r5 , r6 , pc }
push esi push ebx xor eax , eax call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi jle hexvar add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - hexvar ] , al mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] cmp esi , dword ptr [ edi + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov eax , dword ptr [ ebp + num ] movss xmm0 , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] ucomiss xmm0 , dword ptr [ eax + hexvar ] jne hexvar jp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar test byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] movss xmm0 , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] movss xmm1 , dword ptr [ eax + hexvar ] ucomiss xmm1 , xmm0 mov eax , hexvar mov ecx , num cmova ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] movss xmm0 , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] movss xmm1 , dword ptr [ eax + hexvar ] ucomiss xmm1 , xmm0 mov eax , num mov ecx , hexvar cmova ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] cmp eax , ecx mov eax , hexvar mov ecx , num cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , esi mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edi ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edi ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num jne hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , hexvar sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rbx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbx ] test rax , rax je hexvar mov rax , qword ptr [ rbx ] mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rbx + num ] test rax , rax je hexvar mov rax , qword ptr [ rbx + num ] mov rdi , rax call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rdi , rbx call hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
lea edi , [ ebx - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] push eax push hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax call hexvar mov eax , num jmp hexvar mov dword ptr [ esp + hexvar ] , esi mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esp + hexvar ] , ebp je hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , num ja hexvar cmp dword ptr [ ebx + eax * num + hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push dword ptr [ esp + hexvar ] push esi push eax push num push num call hexvar add esp , hexvar jmp hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar cmp edi , hexvar ja hexvar cmp dword ptr [ ebx + edi * num + hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov dword ptr [ esp ] , edi push esi push eax push num push num call hexvar add esp , hexvar jmp hexvar
sltiu v0 , a0 , hexvar beqz v0 , hexvar move v0 , zero sll v0 , a0 , num lui a0 , hexvar addiu a0 , a0 , hexvar addu a0 , a0 , v0 lw v0 , ( a0 )
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ esp + num ] shl edx , num add eax , edx mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] add eax , num movzx eax , byte ptr [ eax ] movzx eax , al shl eax , num mov edx , eax mov eax , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ eax ] movzx eax , al or edx , eax mov eax , dword ptr [ esp + hexvar ] add eax , num movzx eax , byte ptr [ eax ] movzx eax , al shl eax , num mov ecx , eax mov eax , dword ptr [ esp + hexvar ] add eax , num movzx eax , byte ptr [ eax ] movzx eax , al or eax , ecx shl eax , hexvar or edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx add dword ptr [ esp + hexvar ] , num add dword ptr [ esp + num ] , num mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ esp + num ] , eax jl hexvar mov eax , num add esp , hexvar ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) move s0 , a1 lui a1 , hexvar sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , a1 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move v1 , zero move v0 , zero lui a3 , hexvar sw v1 , hexvar ( sp ) move a2 , zero sw v0 , hexvar ( sp ) ori a3 , a3 , hexvar jalr t9 move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move v1 , zero move v0 , zero lui a3 , hexvar sw v1 , hexvar ( sp ) move a2 , zero sw v0 , hexvar ( sp ) ori a3 , a3 , hexvar jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp esi , hexvar jbe hexvar mov edi , hexvar lea ecx , [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , ecx lea ecx , [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num push dword ptr [ edx + num ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edx push esi sub esi , edi push ebp push eax add ebp , edi mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov edx , dword ptr [ esp + hexvar ] add eax , edi cmp edi , esi cmova edi , esi test esi , esi setne bl cmp esi , edi setae cl test bl , cl jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15d , ecx mov r13 , rdx mov r12 , rsi xor r14d , r14d mov esi , hexvar mov ecx , hexvar mov rdi , rdx mov edx , r15d xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ r12 ] xor r14d , r14d mov ecx , hexvar mov rdi , r13 xor edx , edx call hexvar test eax , eax jle hexvar mov rdi , qword ptr [ r12 + num ] call hexvar mov r14d , num test eax , eax jle hexvar add r15d , r15d xor ebp , ebp nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov rdi , qword ptr [ r12 + num ] mov esi , ebp call hexvar mov rbx , rax mov esi , hexvar mov ecx , hexvar mov rdi , r13 mov edx , r15d xor eax , eax call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx ] mov rdi , r13 call hexvar test eax , eax jle hexvar mov esi , hexvar mov rdi , r13 call hexvar test eax , eax jle hexvar mov rsi , qword ptr [ rbx + num ] mov rdi , r13 call hexvar test eax , eax jle hexvar add ebp , num mov rdi , qword ptr [ r12 + num ] call hexvar cmp ebp , eax jl hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx cmp qword ptr [ rax ] , num setne dl mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , hexvar cmp qword ptr [ rcx + hexvar ] , rdx sete sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] cmp dword ptr [ rcx + hexvar ] , num setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov r8d , hexvar mov qword ptr [ rbp - hexvar ] , rcx mov rcx , r8 movabs r8 , hexvar mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] cmp qword ptr [ rcx + hexvar ] , num seta dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rcx + hexvar ] add rdx , - num mov qword ptr [ rcx + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rsp , rbp pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar ret
push r14 push rbx push rax mov rbx , rsi mov qword ptr [ rsp ] , rdx mov rsi , qword ptr [ rsi ] mov r14 , rsp mov edi , hexvar mov rdx , r14 call hexvar mov rsi , qword ptr [ rbx + num ] mov edi , hexvar mov rdx , r14 call hexvar mov rax , qword ptr [ rsp ] add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a1 , hexvar move s1 , a0 move s0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a2 , zero , num b hexvar lw a0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s1 , - hexvar ( gp ) addiu s0 , zero , hexvar addiu s2 , zero , - num lw a0 , ( s1 ) lw v1 , num ( a0 )
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r6 , r1 mov r4 , r2 mov r2 , num mov r1 , num mov r0 , r4 bl hexvar cmn r0 , num beq hexvar ands r0 , r0 , num beq hexvar cmp r0 , num bgt hexvar ldr r2 , [ pc , hexvar ] mov r3 , r4 mov r1 , r6 mov r0 , r5 bl hexvar pop { r4 , r5 , r6 , pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rdi + hexvar ] mov rsi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar movsxd rax , dword ptr [ rax + hexvar ] sub rax , hexvar setb cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rsi mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rsi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push edi push esi xor eax , eax push ebx mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ edx ] test ecx , ecx je hexvar mov edi , dword ptr [ ecx + num ] mov eax , dword ptr [ ecx + num ] xor edi , ebx xor eax , esi mov ecx , edi or ecx , eax jne hexvar jmp hexvar lea esi , [ esi ] mov edi , dword ptr [ eax + num ] mov ecx , dword ptr [ eax + num ] xor edi , ebx xor ecx , esi mov eax , edi or eax , ecx je hexvar add edx , num mov eax , dword ptr [ edx ] test eax , eax jne hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi ] mov rsi , qword ptr [ rsi ] movsd xmm0 , qword ptr [ rsi ] addsd xmm0 , qword ptr [ rdi ] movsd qword ptr [ rsi ] , xmm0 pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov esp , ebp pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar or v0 , a0 , a2 sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) move s0 , a3 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) or v0 , a2 , a3 beqz v0 , hexvar lw t9 , - hexvar ( gp ) bnez a0 , hexvar nop bnez a2 , hexvar move t2 , a2 multu s1 , s0 mflo t1 mfhi t0 mult a2 , s1 madd a0 , s0 move s2 , t1 mflo v0 addu v0 , v0 , t0 bnez v0 , hexvar move a0 , t1 bltz t1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move v1 , v0 mul a2 , s1 , s0 beqz a2 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , zero jalr t9 move a0 , v1 move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jalr t9 move a0 , zero lw gp , hexvar ( sp ) bnez v0 , hexvar move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s2 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar cmp edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar cmp dword ptr [ hexvar ] , num jl hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar xor eax , eax cmp eax , dword ptr [ hexvar ] jne hexvar xor eax , eax mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi mov rax , qword ptr [ rdi ] mov rdx , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rax + num ] mov rdi , qword ptr [ rax ] call qword ptr [ rbx + num ] test eax , eax jne hexvar mov eax , num add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , dword ptr [ rbp + hexvar ] mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov dword ptr [ rbp - hexvar ] , eax mov qword ptr [ rbp - hexvar ] , r9 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8d , dword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } subs r8 , r0 , num beq hexvar ldr r7 , [ pc , hexvar ] ldr r3 , [ r7 , hexvar ] cmp r3 , r8 blo hexvar mov r0 , num ldr r3 , [ r7 , hexvar ] mov r5 , r2 cmp r3 , r0 str r0 , [ r2 ] beq hexvar mov sb , r1 mov r6 , num b hexvar bl hexvar ldr r0 , [ r0 ] bl hexvar mov r4 , r0 bl hexvar ldr r3 , [ r7 , hexvar ] and r0 , r0 , r4 cmp r3 , num and r6 , r6 , r0 beq hexvar ldr r0 , [ r5 ] sub r4 , r8 , r0 mov r2 , r4 add r0 , sb , r0 mov r1 , num bl hexvar ldr r3 , [ r5 ] cmp r4 , r0 add r0 , r3 , r0 str r0 , [ r5 ] bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } bicle r1 , pc , num andeq r0 , r0 , r0
mov ip , r2 cmp r2 , num cmpne r0 , num beq hexvar sub r2 , r1 , num cmp r2 , num bhi hexvar mov r2 , num str r2 , [ r0 , num ] mov r2 , num str r2 , [ r0 ] str r1 , [ r0 , num ] str ip , [ r0 , hexvar ] mov r0 , num bx lr mov r0 , num bx lr mov r0 , num bx lr
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , esi shl edx , cl mov esi , dword ptr [ ebp + num ] mov edi , hexvar sub edi , dword ptr [ ebp + hexvar ] mov ecx , edi shr esi , cl or edx , esi mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v1 , num ( fp ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v1 , num ( fp ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v1 , num ( fp ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v1 , num ( fp ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdi mov r14 , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov edi , hexvar call hexvar mov r12 , rax mov eax , num test r12 , r12 je hexvar mov rdi , rsp call hexvar mov ebx , num mov r13d , hexvar mov rdx , r13 sub rdx , rbx lea rdi , [ r12 + rbx ] mov rcx , rbp mov esi , num call hexvar add rbx , rax cmp rbx , hexvar je hexvar test rax , rax jne hexvar test byte ptr [ rbp ] , hexvar je hexvar mov rdi , r12 call hexvar mov eax , num jmp hexvar test byte ptr [ rbp ] , hexvar je hexvar jmp hexvar mov rdx , rsp mov esi , hexvar mov rdi , r12 call hexvar jmp hexvar test rbx , rbx je hexvar mov rdx , rsp mov rsi , rbx mov rdi , r12 call hexvar mov rsi , r14 mov rdi , rsp call hexvar mov rdi , r12 call hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax test rdx , rdx je hexvar mov rbx , rdx mov r15 , rsi mov r14 , rdi lea eax , [ rdx * num ] mov ecx , dword ptr [ rdi + hexvar ] add eax , dword ptr [ rdi + hexvar ] jae hexvar add ecx , num mov dword ptr [ r14 + hexvar ] , ecx mov rdx , rbx shr rdx , hexvar add edx , ecx mov dword ptr [ r14 + hexvar ] , edx mov dword ptr [ r14 + hexvar ] , eax mov ebp , dword ptr [ r14 + hexvar ] test rbp , rbp je hexvar lea rax , [ rbx + rbp ] or rax , rbx lea rdi , [ r14 + rbp ] add rdi , hexvar cmp rax , hexvar jb hexvar lea r12 , [ r14 + hexvar ] mov r13d , hexvar sub r13 , rbp neg rbp mov rsi , r15 mov rdx , r13 call hexvar mov edx , num mov rdi , r14 mov rsi , r12 call hexvar add r15 , rbp add r15 , hexvar sub rbx , r13 xorps xmm0 , xmm0 movups xmmword ptr [ r12 + hexvar ] , xmm0 movups xmmword ptr [ r12 + hexvar ] , xmm0 movups xmmword ptr [ r12 + hexvar ] , xmm0 movups xmmword ptr [ r12 ] , xmm0 mov dword ptr [ r12 + hexvar ] , num mov rdx , rbx shr rdx , num je hexvar mov rdi , r14 mov rsi , r15 call hexvar mov rax , rbx and rax , hexvar add r15 , rax sub rbx , rax test rbx , rbx je hexvar mov dword ptr [ r14 + hexvar ] , ebx add r14 , hexvar mov rdi , r14 mov rsi , r15 mov rdx , rbx call hexvar jmp hexvar mov rsi , r15 mov rdx , rbx call hexvar add dword ptr [ r14 + hexvar ] , ebx mov eax , num add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ hexvar ] jae hexvar mov rax , qword ptr [ hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx shl rsi , num add rcx , rsi cmp rax , qword ptr [ rcx + num ] jae hexvar mov rax , qword ptr [ hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx shl rdx , num add rax , rdx mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ rbp - hexvar ] mov edx , eax sub edx , ecx mov ecx , eax sub ecx , num add edx , ecx sub eax , edx mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx lea edx , [ ebp - num ] lea esi , [ ebp + hexvar ] mov dword ptr [ edx ] , esi mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ esp ] , num call hexvar nop dword ptr [ eax + eax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , num setne cl xor cl , hexvar test cl , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rdi call hexvar mov ecx , hexvar sub ecx , eax lea r13 , [ rsp + num ] test ecx , ecx jle hexvar mov r12d , ecx mov rbx , rsp mov rdi , rbx mov esi , hexvar mov rdx , r12 call hexvar lea rax , [ r12 - num ] mov rcx , r12 and rcx , num je hexvar neg rcx xor edx , edx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] add rdx , - num cmp rcx , rdx jne hexvar sub rbx , rdx lea rcx , [ rbx + num ] add r13 , r12 cmp rax , num jae hexvar jmp hexvar mov rbx , rsp jmp hexvar mov rcx , r13 add r13 , r12 cmp rax , num jb hexvar add rcx , - num lea rax , [ rsp + r12 ] mov rbx , rcx nop word ptr [ rax + rax ] add rbx , num cmp rax , rbx jne hexvar mov byte ptr [ rbx ] , hexvar mov byte ptr [ r13 ] , num mov rsi , rsp mov rdi , r15 call hexvar mov edx , dword ptr [ r14 + num ] lea eax , [ rdx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] mov esi , hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jg hexvar jmp hexvar mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov ebp , dword ptr [ r14 ] test ebp , ebp jle hexvar mov rbx , qword ptr [ r14 + num ] nop word ptr cs : [ rax + rax ] movsx edx , byte ptr [ rbx ] cmp edx , hexvar jl hexvar cmp dl , hexvar je hexvar mov esi , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop test dl , dl js hexvar add edx , hexvar mov esi , hexvar jmp hexvar mov esi , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 xor eax , eax call hexvar add rbx , num add ebp , - num jg hexvar mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov sb , r1 ldr r1 , [ pc , hexvar ] mov r7 , r0 bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r0 , hexvar ] and r3 , r3 , num cmp r3 , num moveq r8 , num movne r8 , num moveq r6 , num movne r6 , num moveq r4 , num movne r4 , num moveq r5 , num movne r5 , num moveq sl , num movne sl , num ldr r1 , [ pc , hexvar ] mov r0 , r7 bl hexvar cmp r0 , num moveq r8 , r6 moveq r6 , r4 moveq r4 , r5 moveq r5 , sl cmp sb , num beq hexvar ldrb r3 , [ sb , num ] and r3 , r3 , hexvar cmp r3 , num movne r5 , r4 movne r4 , r6 movne r6 , r8 ldr r3 , [ r7 , hexvar ] ldr fp , [ r7 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r2 , num moveq r6 , r4 moveq r4 , r5 cmp r3 , num moveq r6 , r4 cmp fp , num beq hexvar ldr sl , [ fp , hexvar ] mov r4 , fp and r5 , sl , num ldr r8 , [ pc , hexvar ] b hexvar ldr r5 , [ r4 , hexvar ] and r5 , r5 , num cmp r5 , num beq hexvar mov r2 , num mov r1 , r8 ldr r0 , [ r4 ] bl hexvar cmp r0 , num bne hexvar ldr r3 , [ r4 , hexvar ] add r6 , r6 , num cmp r3 , num beq hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num bne hexvar tst sl , hexvar beq hexvar b hexvar ldr r3 , [ fp , hexvar ] tst r3 , hexvar bne hexvar ldr fp , [ fp , hexvar ] cmp fp , num bne hexvar ldr r2 , [ r7 , hexvar ] ldr r3 , [ r7 , num ] tst r2 , hexvar ldr r5 , [ r3 , hexvar ] bne hexvar ldr r3 , [ r5 , hexvar ] cmp r3 , num beq hexvar mov r1 , sb mov r0 , r7 blx r3 cmn r0 , num addne r6 , r6 , r0 beq hexvar ldr r3 , [ r5 , hexvar ] ldrb r3 , [ r3 , num ] mul r0 , r6 , r3 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a3 , v0 move a2 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw a2 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , - num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 sb zero , ( v0 ) addiu a2 , zero , hexvar lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) move s1 , v0 move s0 , zero lw v0 , hexvar ( fp ) sw s1 , hexvar ( v0 ) sw s0 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) lw a0 , hexvar ( fp ) sw v1 , hexvar ( a0 ) sw v0 , hexvar ( a0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar lui gp , hexvar addiu v1 , a3 , num lw v0 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) bne v1 , v0 , hexvar sw gp , hexvar ( sp ) lbu v1 , ( a2 ) addiu v0 , zero , num bne v1 , v0 , hexvar addiu t0 , a2 , num addiu s0 , a3 , - num blez s0 , hexvar addiu v1 , zero , hexvar lbu v0 , num ( a2 ) bne v0 , v1 , hexvar addu a3 , a2 , a3 move t1 , zero b hexvar addiu v0 , zero , hexvar lbu t3 , num ( t0 ) bne t3 , v0 , hexvar nop move t0 , v1 move t1 , t2 addiu v1 , t0 , num bne a3 , v1 , hexvar addiu t2 , t1 , num beq s0 , t2 , hexvar slti t2 , t2 , num bnez t2 , hexvar addiu t1 , t1 , num subu s0 , s0 , t1 slt a1 , a1 , s0 bnez a1 , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) move a2 , s0 jalr t9 move a1 , v1 lw ra , hexvar ( sp ) move v0 , s0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bnez t3 , hexvar addiu v1 , t0 , num b hexvar slti t2 , t2 , num beqz s0 , hexvar lui a3 , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) addiu a0 , zero , num bal hexvar addiu s0 , zero , - num b hexvar lw ra , hexvar ( sp ) beqz v0 , hexvar nop lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar
push ebp mov ebp , esp push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx add esp , num pop esi pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , hexvar movzx eax , byte ptr [ rbp - hexvar ] movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] imul edx , eax , hexvar movzx eax , byte ptr [ rbp - hexvar ] add eax , edx sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
ldr ip , [ r3 , num ] cmp ip , hexvar beq hexvar cmp ip , hexvar beq hexvar mov r0 , num bx lr push { r4 , r5 , r6 , lr } ldr ip , [ r1 , hexvar ] ldr lr , [ ip , hexvar ] ldr ip , [ r0 , hexvar ] ldr r5 , [ ip , hexvar ] mov ip , hexvar str ip , [ r3 , num ] mov ip , num str ip , [ r3 , hexvar ] cmp r2 , ip beq hexvar ldr r4 , [ r3 , hexvar ] cmp r4 , ip beq hexvar ldr ip , [ r2 , hexvar ] cmp ip , num beq hexvar ldr r6 , [ ip , hexvar ] adds ip , r5 , num movne ip , num cmp r6 , num moveq ip , num cmp r4 , r6 movne ip , num andeq ip , ip , num cmp ip , num bne hexvar ldr r2 , [ r1 , hexvar ] ldr r1 , [ r2 , hexvar ] sub r2 , r1 , num add r1 , lr , r1 , lsl num cmn r2 , num beq hexvar sub ip , r2 , num ldr r0 , [ r1 , - num ] ! cmp r0 , r3 beq hexvar mov r2 , ip b hexvar ldr r2 , [ r2 , hexvar ] cmp r2 , num beq hexvar ldr r0 , [ r0 , hexvar ] ldr r0 , [ r0 , hexvar ] cmp r2 , r0 bhs hexvar ldr r2 , [ r5 , r2 , lsl num ] ldr r2 , [ r2 , hexvar ] cmp r2 , num beq hexvar ldr r5 , [ r2 , hexvar ] cmp r5 , num beq hexvar ldr r2 , [ r1 , hexvar ] ldr r2 , [ r2 , hexvar ] sub r0 , r2 , num add r2 , lr , r2 , lsl num cmn r0 , num beq hexvar sub ip , r0 , num ldr r4 , [ r2 , - num ] ! ldr r4 , [ r4 , hexvar ] cmp r5 , r4 movne r0 , ip bne hexvar cmp r0 , num beq hexvar str r0 , [ r3 , hexvar ] ldr r2 , [ lr , r0 , lsl num ] ldr r2 , [ r2 , num ] tst r2 , hexvar beq hexvar ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] mov r0 , num pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push ebx push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov cx , word ptr [ ebp + num ] movzx edx , word ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov word ptr [ ebp - hexvar ] , cx mov ecx , esi sar edx , cl movzx esi , word ptr [ ebp + num ] mov edi , hexvar sub edi , dword ptr [ ebp + hexvar ] mov ecx , edi shl esi , cl or edx , esi and edx , hexvar mov bx , dx movzx edx , bx mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) move s0 , v0 lw v0 , num ( v0 )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov cl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl je hexvar cmp dword ptr [ ebp + num ] , num mov al , num mov byte ptr [ ebp - num ] , al je hexvar cmp dword ptr [ ebp + num ] , hexvar sete al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebx sub esp , hexvar mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax call hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ ebx ] , eax mov dword ptr [ ebx + num ] , edx add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar mov eax , ebx add esp , hexvar pop ebx ret num
push rbp push r15 push r14 push r12 push rbx mov rbx , r8 mov r14 , rcx mov r15 , rdx mov r12d , esi mov rbp , rdi mov rdi , r8 call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , rbp mov esi , r12d mov rdx , r15 mov rcx , r14 mov r8 , rbx pop rbx pop r12 pop r14 pop r15 pop rbp jmp rax xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r2 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 b hexvar ldr r2 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
sub r3 , r1 , num cmp r3 , num push { r4 , r5 , r6 , r7 , r8 , lr } mvnhi r7 , hexvar ldr r8 , [ pc , hexvar ] sub sp , sp , hexvar ldr r2 , [ r8 ] mov r5 , r0 str r2 , [ sp , hexvar ] ldrls r2 , [ pc , hexvar ] mov r6 , r1 addls r3 , r2 , r3 , lsl num ldrls r7 , [ r3 , hexvar ] mov r2 , hexvar ldr r3 , [ pc , hexvar ] mov r1 , num str r7 , [ sp ] add r0 , sp , num bl hexvar mov r0 , hexvar bl hexvar mov r4 , r0 add r0 , sp , num bl hexvar mov r3 , num ldr ip , [ sp , hexvar ] ldr r1 , [ r8 ] ldr r2 , [ r5 , hexvar ] cmp ip , r1 stmib r4 , { r0 , r7 } str r6 , [ r4 , hexvar ] str r2 , [ r4 ] str r4 , [ r5 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] mov r0 , num bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num bxeq lr ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bxne lr push { r4 , lr } mov r2 , r0 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar pop { r4 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , num mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov dword ptr [ hexvar ] , num mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edx cmp dword ptr [ eax ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar lea eax , [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
mov rax , qword ptr [ rdi ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax jmp hexvar xor eax , eax ret
push ebp push edi mov ebp , ecx push esi push ebx mov esi , edx sub esp , hexvar mov eax , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar push ebx push edi push ecx push edx call eax add esp , hexvar test ebx , ebx jne hexvar movzx edx , byte ptr [ ebp + hexvar ] movzx eax , byte ptr [ esi + hexvar ] and edx , num mov ecx , eax and ecx , num movzx ebx , dl sub ebx , num sub ecx , num cmp ebx , ecx jae hexvar and eax , hexvar or eax , edx mov byte ptr [ esi + hexvar ] , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r2 , num sub sp , sp , hexvar ldr r1 , [ pc , hexvar ] mov sb , r0 bl hexvar cmp r0 , num addeq sb , sb , num ldrb r3 , [ sb ] ldr r7 , [ pc , hexvar ] lsl r3 , r3 , num ldrh r8 , [ r7 , r3 ] ands r8 , r8 , num beq hexvar mov r0 , sb bl hexvar add r0 , r0 , num bl hexvar mov r4 , sb mov r8 , r0 mov r5 , r0 ldrb r1 , [ sb ] lsl r3 , r1 , num ldrh r2 , [ r7 , r3 ] ands r6 , r2 , num bne hexvar cmp r1 , hexvar bne hexvar mov fp , num ldr sl , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] add r6 , r6 , num ldr sl , [ r3 , r6 , lsl num ] cmp sl , num beq hexvar mov r0 , sl bl hexvar mov fp , r0 mov r1 , sl mov r2 , fp mov r0 , r4 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ pc , hexvar ] add sl , r5 , num add r6 , r3 , r6 , lsl num ldr r1 , [ r6 , hexvar ] mov r0 , r1 str r1 , [ sp , hexvar ] bl hexvar mov r3 , hexvar mov r6 , r0 strb r3 , [ r5 ] mov r2 , r0 ldr r1 , [ sp , hexvar ] mov r0 , sl bl hexvar mov r3 , hexvar add r5 , sl , r6 strb r3 , [ sl , r6 ] ldrb r6 , [ r4 , fp ] ! add r5 , r5 , num cmp r6 , hexvar beq hexvar cmp r6 , hexvar bne hexvar mov r0 , r8 bl hexvar mov r0 , sb bl hexvar add r0 , r0 , num bl hexvar ldrb r3 , [ sb ] mov r8 , r0 cmp r3 , hexvar beq hexvar str sb , [ sp ] ldr r3 , [ pc , hexvar ] mvn r2 , num mov r1 , num bl hexvar mov r0 , r8 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
ldr r3 , [ r0 , num ] push { r4 , r5 , r6 , lr } mov r6 , r0 ldr r3 , [ r3 , hexvar ] mov r0 , r1 mov r4 , r2 mov r5 , r1 blx r3 ldr r3 , [ r6 , num ] str r0 , [ r4 ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 ldr r3 , [ r6 , num ] str r0 , [ r4 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , num ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) bgtz v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , num ( fp ) sw zero , num ( v0 ) lw v0 , num ( fp ) sw zero , num ( v0 ) lw v0 , num ( fp ) sw zero , ( v0 ) lw v0 , num ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , num ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) addiu v0 , zero , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp push edi mov ecx , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] lea esi , [ ebx - hexvar ] mov edi , ebp repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar andseq lr , r1 , ip , asr sl andeq r0 , r0 , r7 , lsr r8 andseq lr , r1 , r8 , lsr num andseq lr , r1 , r4 , lsl lr
push rbp mov rbp , rsp sub rsp , hexvar cmp dword ptr [ num ] , num jne hexvar mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , num mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al movabs rdi , num mov dword ptr [ rip ] , num mov dword ptr [ rip ] , num add dword ptr [ rax ] , eax add byte ptr [ rax ] , al add byte ptr [ rax - hexvar ] , cl add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar leave ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar ret
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
movzx rbx , word ptr [ rsi + hexvar ] movzx rax , word ptr [ rsi + hexvar ] shl rbx , hexvar shl rax , hexvar mov bx , word ptr [ rsi + hexvar ] mov ax , word ptr [ rsi + hexvar ] shl rbx , hexvar shl rax , hexvar mov bx , word ptr [ rsi + hexvar ] mov ax , word ptr [ rsi + hexvar ] shl rbx , hexvar shl rax , hexvar mov bx , word ptr [ rsi ] mov ax , word ptr [ rsi + hexvar ] mov qword ptr [ rdx ] , rbx mov qword ptr [ rdx + num ] , rax lea rsi , [ rsi + hexvar ] lea rdx , [ rdx + hexvar ] sub rbp , num jne hexvar mov qword ptr [ rsp + hexvar ] , hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rcx mov r10 , qword ptr [ rcx ] mov r11 , qword ptr [ rcx + num ] mov r12 , qword ptr [ rcx + hexvar ] mov r13 , qword ptr [ rcx + hexvar ] mov r14 , qword ptr [ rcx + hexvar ] mov r15 , qword ptr [ rcx + hexvar ] mov r8 , qword ptr [ rcx + hexvar ] mov r9 , qword ptr [ rcx + hexvar ] jmp hexvar
push r14 push rbx push rax test rdi , rdi je hexvar mov rbx , rdi xor eax , eax cmp word ptr [ rdi + hexvar ] , num jne hexvar lea r14 , [ rbx + hexvar ] mov edx , hexvar mov rdi , rbx mov rsi , r14 call hexvar test eax , eax jne hexvar lea rsi , [ rbx + hexvar ] mov edx , num mov rdi , rbx call hexvar test eax , eax je hexvar add rsp , num pop rbx pop r14 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] test rsi , rsi setg al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rax ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] shl rax , num mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rsi , qword ptr [ rax + hexvar ] shl rcx , num mov rdx , rcx call hexvar mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] cdq mov ecx , num idiv ecx cmp edx , num je hexvar movabs rdi , hexvar mov esi , hexvar movabs rdx , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] cdq mov ecx , num idiv ecx mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jge hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] add eax , hexvar sub eax , num sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rbp - num ] and rcx , hexvar mov dl , cl mov rcx , qword ptr [ rbp - hexvar ] movsxd rsi , dword ptr [ rbp - hexvar ] mov byte ptr [ rcx + rsi ] , dl mov rcx , qword ptr [ rbp - num ] shr rcx , num mov qword ptr [ rbp - num ] , rcx mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + hexvar ] test esi , esi je hexvar cmp byte ptr [ edx + esi - num ] , hexvar je hexvar mov byte ptr [ edx + esi ] , hexvar mov byte ptr [ eax + hexvar ] , num lea esi , [ esi + num ] jmp hexvar mov byte ptr [ eax + hexvar ] , num test edx , edx je hexvar mov dword ptr [ esp + hexvar ] , eax lea edi , [ edx + esi ] mov dword ptr [ edi ] , num lea eax , [ ebx + hexvar ] cmp byte ptr [ eax ] , num je hexvar mov byte ptr [ edi ] , hexvar sub esp , num push hexvar push edx call hexvar add esp , hexvar cmp edi , eax je hexvar mov edx , eax mov ebp , num jmp hexvar add eax , ebx cmp edi , edx jbe hexvar add edx , num movzx ecx , byte ptr [ edx - num ] mov byte ptr [ eax ] , cl mov ebx , ebp cmp cl , hexvar jne hexvar cmp byte ptr [ edx ] , hexvar setne bl movzx ebx , bl jmp hexvar sub edx , eax sub esi , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dl , byte ptr [ eax + hexvar ] mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] cmp al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ ebp - num ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
sub r3 , r1 , num cmp r3 , num push { r4 , r5 , r6 , r7 , r8 , lr } mvnhi r7 , hexvar ldr r8 , [ pc , hexvar ] sub sp , sp , hexvar ldr r2 , [ r8 ] mov r5 , r0 str r2 , [ sp , hexvar ] ldrls r2 , [ pc , hexvar ] mov r6 , r1 addls r3 , r2 , r3 , lsl num ldrls r7 , [ r3 , hexvar ] mov r2 , hexvar ldr r3 , [ pc , hexvar ] mov r1 , num str r7 , [ sp ] add r0 , sp , num bl hexvar mov r0 , hexvar bl hexvar mov r4 , r0 add r0 , sp , num bl hexvar mov r3 , num ldr ip , [ sp , hexvar ] ldr r1 , [ r8 ] ldr r2 , [ r5 , hexvar ] cmp ip , r1 stmib r4 , { r0 , r7 } str r6 , [ r4 , hexvar ] str r2 , [ r4 ] str r4 , [ r5 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] mov r0 , num bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
ldr r3 , [ r1 , hexvar ] tst r3 , num bxeq lr push { r4 , r5 , r6 , lr } mov r5 , r2 mov r4 , r0 ldr r6 , [ r0 , hexvar ] mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldrh r2 , [ r6 , hexvar ] mov r1 , r4 bl hexvar mov r0 , num bl hexvar mov r3 , num str r3 , [ r5 ] pop { r4 , r5 , r6 , pc }
push rax mov eax , dword ptr [ rip ] test eax , eax jne hexvar mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al fiadd word ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov bl , num add byte ptr [ rax ] , al add byte ptr [ rax ] , al xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al jae hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al popfq add eax , num
sub rsp , num mov edx , num mov esi , hexvar xor edi , edi call hexvar xor esi , esi mov rdx , rax mov edi , num xor eax , eax call hexvar add rsp , num ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r1 , num mov r2 , r4 mov r5 , r0 bl hexvar cmp r0 , num subne r0 , r0 , r5 addne r0 , r0 , num moveq r0 , r4 pop { r4 , r5 , r6 , pc }
push edi push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] lea edi , [ esp + hexvar ] sub esp , hexvar push dword ptr [ eax ] call hexvar mov esi , dword ptr [ ebx + hexvar ] lea eax , [ ebx - hexvar ] push dword ptr [ esi ] push hexvar push num push eax call hexvar add esp , hexvar push edi push dword ptr [ esp + hexvar ] push num push dword ptr [ esi ] call hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu v0 , zero , num move a1 , v0 lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbx mov rax , qword ptr [ rdi ] mov rdx , rsi mov rbx , rdi lea rdi , [ rip + hexvar ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbx ] lea rsi , [ rip + hexvar ] mov edi , num movsx edx , byte ptr [ rax + num ] xor eax , eax call hexvar mov rax , qword ptr [ rbx ] movsx edi , byte ptr [ rax + num ] call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbx ] mov rdi , qword ptr [ rax ] call hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar pop rbx jmp hexvar nop dword ptr [ rax ] pop rbx lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rbx + num ] test rdi , rdi jne hexvar pop rbx ret
push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov ecx , dword ptr [ edx + num ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] add edx , ecx sub esp , num push eax push edx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ esp + hexvar ] , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] add edx , ecx mov esi , edx mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov ecx , dword ptr [ edx + num ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] sub esp , num push ebx push dword ptr [ esp + hexvar ] push esi push ecx push num push edx push num call eax add esp , hexvar mov eax , num jmp hexvar cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] add edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub eax , dword ptr [ esp + hexvar ] mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num add esp , hexvar pop ebx pop esi ret
ldrb r3 , [ r0 ] cmp r3 , hexvar bne hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , hexvar beq hexvar cmp r3 , num bxeq lr mov r2 , r0 mov r1 , num cmp r3 , hexvar moveq r1 , num beq hexvar cmp r1 , num movne r0 , r2 movne r1 , num ldrb r3 , [ r2 , num ] ! cmp r3 , num bne hexvar bx lr
push ebx sub esp , num call hexvar add ebx , hexvar lea eax , [ esp + hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r1 , [ pc , hexvar ] bl hexvar subs r4 , r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] tst r3 , num beq hexvar ldr r3 , [ r5 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r2 , [ r3 , num ] cmp r2 , hexvar beq hexvar ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r2 , [ r3 , num ] cmp r2 , hexvar bne hexvar mov r0 , num pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push rbp push r15 push r14 push r12 push rbx mov r15 , rcx mov r12d , edx mov rbp , rsi mov r14 , rdi test rdi , rdi je hexvar mov rbx , qword ptr [ r14 ] test rbx , rbx jne hexvar call hexvar mov rbx , rax test rax , rax je hexvar test rbp , rbp je hexvar test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx ] , rax xor eax , eax test r12d , r12d setne al shl eax , num add eax , - num mov dword ptr [ rbx + num ] , eax mov rdi , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ r15 + num ] mov edx , dword ptr [ r15 ] call hexvar test eax , eax je hexvar test r14 , r14 je hexvar cmp qword ptr [ r14 ] , num jne hexvar mov qword ptr [ r14 ] , rbx jmp hexvar test r14 , r14 je hexvar cmp rbx , qword ptr [ r14 ] je hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
mov edx , dword ptr [ rsi + hexvar ] mov ecx , dword ptr [ rdi + hexvar ] cmp edx , num sete al cmp edx , num sete dl or eax , edx cmp ecx , num je hexvar cmp ecx , num je hexvar mov edx , dword ptr [ rdi + hexvar ] and edx , hexvar test al , al je hexvar cmp edx , hexvar je hexvar mov eax , num ret
push r14 push r13 push r12 push rbp mov rbp , rdi push rbx mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi ] mov rbx , qword ptr [ rdi + num ] mov r13d , dword ptr [ rdi + hexvar ] mov r14d , dword ptr [ rdi + hexvar ] mov qword ptr [ rbp + hexvar ] , rax call hexvar mov rdi , rbx call hexvar lea rdi , [ rax + num ] call hexvar lea rcx , [ rip + hexvar ] mov r9 , rbx mov r8d , hexvar mov rdx , - num mov esi , num mov r12 , rax mov rdi , rax xor eax , eax call hexvar mov rdi , rbx call hexvar mov edi , hexvar call hexvar mov rdi , r12 mov rbx , rax call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov rdi , r12 mov dword ptr [ rbx + hexvar ] , r14d mov dword ptr [ rbx + hexvar ] , r13d mov qword ptr [ rbp + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num call hexvar pop rbx mov eax , num pop rbp pop r12 pop r13 pop r14 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ esp + hexvar ] , al push num lea eax , [ esp + hexvar ] push eax push num push hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax call hexvar add esp , hexvar test eax , eax setne al mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar movzx eax , al add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] cmp eax , num sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbx test rdi , rdi je hexvar mov rbx , rdi mov edx , hexvar xor esi , esi call hexvar mov word ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) beqz a0 , hexvar lb v0 , ( a1 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw v1 , num ( a0 )
push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num ] jmp rdi mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , num mov edx , num mov r8d , num xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
push { r4 , r5 , fp , lr } add fp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] mov r1 , num mov r0 , r4 bl hexvar bl hexvar andeq fp , r2 , r8 , lsl r1 andeq sb , r1 , ip , lsr num andeq sb , r1 , r0 , asr num
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rbp , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov r8d , hexvar mov rcx , rsp mov edx , hexvar mov esi , num call hexvar test eax , eax je hexvar mov edx , num mov rsi , rbp mov edi , num call hexvar mov r8 , rax mov rcx , rbx mov edx , hexvar mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rsp ] mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx ] , hexvar call hexvar cmp eax , num sete dl mov dword ptr [ ebp - hexvar ] , hexvar and dl , num mov byte ptr [ ebp - hexvar ] , dl jmp hexvar mov al , byte ptr [ ebp - hexvar ] and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx call hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbx call hexvar test rax , rax je hexvar mov rbx , rax mov esi , hexvar mov rdi , rax call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar movups xmm0 , xmmword ptr [ rax + num ] movups xmmword ptr [ rip + hexvar ] , xmm0 call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rip + hexvar ] , rax call hexvar test rax , rax je hexvar movups xmm0 , xmmword ptr [ rax + num ] movups xmmword ptr [ rip + hexvar ] , xmm0 mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax cmp byte ptr [ rip + hexvar ] , num jne hexvar mov byte ptr [ rip + hexvar ] , num mov esi , hexvar call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] shl eax , hexvar mov qword ptr [ rip + hexvar ] , rax mov esi , hexvar xor edi , edi call hexvar mov rdi , rbx call hexvar mov rdi , rbx call hexvar pop rbx jmp hexvar mov rdi , rbx pop rbx jmp hexvar pop rbx ret
mov rax , qword ptr [ rip + hexvar ] mov edx , num push rbx mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rax + num ] mov rax , rdx mul rsi mov qword ptr [ rip + hexvar ] , rsi jo hexvar xor ecx , ecx test rax , rax js hexvar test rcx , rcx jne hexvar shl rsi , num call hexvar mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor ecx , ecx mov qword ptr [ rip + hexvar ] , rax lea rbx , [ rax + rdx * num - num ] mov edx , num mov rax , rdx mul rdi jo hexvar test rax , rax js hexvar test rcx , rcx jne hexvar shl rdi , num call hexvar mov qword ptr [ rbx ] , rax pop rbx ret
ldr r1 , [ r0 , hexvar ] push { r4 , r5 , r6 , lr } cmn r1 , hexvar bhi hexvar lsl r1 , r1 , num mov r4 , r0 bl hexvar subs r5 , r0 , num bne hexvar ldr r0 , [ r4 , hexvar ] cmp r0 , num beq hexvar ldr r1 , [ r4 , hexvar ] add r1 , r1 , num lsl r1 , r1 , num bl hexvar cmp r0 , num beq hexvar str r0 , [ r4 , hexvar ] ldrb r2 , [ r4 , hexvar ] ldr r3 , [ r4 , hexvar ] cmp r2 , num beq hexvar cmp r3 , num mov r0 , r4 ble hexvar pop { r4 , r5 , r6 , lr } b hexvar cmp r3 , num bgt hexvar ldr r1 , [ r4 , hexvar ] cmp r1 , num beq hexvar ldr ip , [ r4 , hexvar ] ldr r2 , [ r4 , hexvar ] ldr r3 , [ r4 , hexvar ] cmp ip , r2 movhs ip , r2 cmp ip , r3 bhi hexvar b hexvar ldr r1 , [ r4 , hexvar ] ldr r2 , [ r4 ] ldr r0 , [ r4 , hexvar ] add r2 , r2 , r3 ldrb r0 , [ r2 , r0 ] ldr r2 , [ r4 , num ] ldrb r1 , [ r1 , r0 ] strb r1 , [ r2 , r3 ] add r3 , r3 , num cmp ip , r3 bne hexvar str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] mov r0 , r5 pop { r4 , r5 , r6 , pc } andeq r0 , r0 , sb , lsr r0 andeq r0 , r0 , r0
cmp r0 , num bhi hexvar sub r0 , r0 , num cmp r0 , num bhi hexvar ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 , r0 , lsl num ] bx lr ldr r0 , [ pc , hexvar ] bx lr ldr r0 , [ pc , num ] bx lr andeq sp , fp , ip , asr r8 andeq sp , fp , r4 , lsr num andeq sp , fp , r4 , ror r8
lea ecx , [ esp + hexvar ] sub esp , hexvar mov edx , ebp lea eax , [ esp + hexvar ] push eax mov eax , edi call hexvar mov esi , eax mov eax , dword ptr [ esp + hexvar ] add dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov edi , edx call hexvar mov edx , edi mov eax , esi call hexvar add esp , hexvar lea edx , [ ebx - hexvar ] lea ecx , [ ebx - hexvar ] cmp dword ptr [ esp + num ] , hexvar push eax lea eax , [ ebx - hexvar ] cmove edx , ecx push edx jmp hexvar lea esi , [ esi ]
cmp dword ptr [ rdi ] , num je hexvar push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdi + hexvar ] mov r15 , qword ptr [ rbx + hexvar ] cmp qword ptr [ rbx + hexvar ] , num je hexvar mov r14 , rdx mov r13 , rsi lea rbp , [ rbx + hexvar ] mov r12d , num mov rax , rbx add rax , qword ptr [ rbp + num ] add rax , qword ptr [ rbx + hexvar ] lea rsi , [ rax + num ] mov rdi , r15 add rdi , qword ptr [ rbp ] add rdi , rbx mov rcx , r14 mov rdx , qword ptr [ rax ] call r13
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , hexvar call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ r0 , hexvar ] mov r4 , r0 cmp r3 , num beq hexvar ldr r2 , [ r0 , hexvar ] ldr r0 , [ pc , hexvar ] ldr r3 , [ r2 , num ] add r1 , r4 , hexvar cmp r3 , r0 str r2 , [ r4 , hexvar ] str r1 , [ r4 , num ] bhi hexvar mvn r1 , num add r0 , r3 , num add r3 , r2 , r3 str r0 , [ r2 , num ] strb r1 , [ r3 , num ] ldr r2 , [ r4 , hexvar ] ldr r3 , [ r4 , hexvar ] cmp r2 , num beq hexvar cmp r3 , num beq hexvar ldr r3 , [ r4 , hexvar ] ldr r1 , [ pc , hexvar ] ldr r2 , [ r3 , num ] add r5 , r4 , hexvar cmp r2 , r1 str r3 , [ r4 , hexvar ] str r5 , [ r4 , num ] bhi hexvar mvn r0 , num add r1 , r2 , num add r2 , r3 , r2 str r1 , [ r3 , num ] strb r0 , [ r2 , num ] ldr r2 , [ pc , hexvar ] cmp r1 , r2 bhi hexvar mov r0 , num add r2 , r1 , num add r1 , r3 , r1 str r2 , [ r3 , num ] strb r0 , [ r1 , num ] ldr r1 , [ pc , hexvar ] cmp r2 , r1 bhi hexvar mov r1 , num add r0 , r2 , num add r2 , r3 , r2 str r0 , [ r3 , num ] strb r1 , [ r2 , num ] ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num bne hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 stc2l p6 , c7 , [ pc ] , - hexvar
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edi + num ] mov dword ptr [ edi ] , eax lea eax , [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax lea eax , [ esi * num ] mov dword ptr [ edi + hexvar ] , esi push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ edi + hexvar ] , eax je hexvar test esi , esi jle hexvar mov dword ptr [ esp + hexvar ] , edi xor esi , esi mov edi , ebp mov ebp , dword ptr [ esp + hexvar ] jmp hexvar lea esi , [ esi ] add esi , num cmp dword ptr [ ebp + num ] , esi jle hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ edi ] mov eax , dword ptr [ eax + esi * num ] test byte ptr [ ecx + eax * num + num ] , num jne hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test al , al jne hexvar add esp , hexvar mov eax , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp + hexvar ] add eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + hexvar ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] add ecx , dword ptr [ ebp - num ] cmp dword ptr [ eax + ecx * num ] , - num je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rax + hexvar ] , hexvar pop rcx ret
lw v0 , hexvar ( a0 ) andi v0 , v0 , num bnez v0 , hexvar addiu v0 , zero , num sw a3 , hexvar ( a1 ) jr ra sw a2 , hexvar ( a1 ) lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num move v0 , zero lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw a0 , hexvar ( sp ) move v0 , zero bnez v0 , hexvar sw a1 , hexvar ( sp ) sltu a1 , a1 , a0 beqz a1 , hexvar move s5 , a2 sw s2 , hexvar ( sp ) sra fp , s2 , hexvar addiu s0 , a0 , - num sltu v0 , s0 , a0 addiu v0 , v0 , - num mult fp , s0 madd v0 , s2 mflo v0 multu s0 , s2 mflo s1 mfhi s0 addu s0 , v0 , s0 move s4 , zero move s3 , a0 lui v0 , hexvar b hexvar sw v0 , hexvar ( sp ) lbu v0 , num ( s5 ) ins s7 , v0 , hexvar , num lbu v0 , num ( s5 ) ins s7 , v0 , hexvar , num lbu v0 , num ( s5 ) ins s7 , v0 , num , num lbu v0 , ( s5 ) ins s7 , v0 , num , num move a2 , s7 addiu s5 , s5 , num lw a0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) subu v0 , s1 , v0 sltu v1 , s1 , v0 subu a0 , s0 , fp subu s0 , a0 , v1 move s1 , v0 beqz s4 , hexvar move s2 , s6 addiu v0 , s3 , - num sltu s3 , v0 , s3 addiu s4 , s4 , - num addu s4 , s3 , s4 move s3 , v0 lw t9 , - hexvar ( gp ) move a2 , zero lw a3 , hexvar ( sp ) move a1 , s1 move a0 , s0 bal hexvar nop lw gp , hexvar ( sp ) subu a1 , s2 , v1 lw v0 , hexvar ( sp ) addu a1 , a1 , v0 lw v0 , hexvar ( sp ) lbu v0 , hexvar ( v0 ) bnez v0 , hexvar move s6 , v1 b hexvar lw a2 , ( s5 )
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi movss dword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] cmp dword ptr [ rsi + hexvar ] , num je hexvar movss xmm0 , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] movss dword ptr [ rax + rcx * num ] , xmm0 pop rbp ret
sub rsp , num call hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , hexvar mov eax , num add rsp , num ret
push { r4 , r5 , r6 , lr } subs r4 , r0 , num beq hexvar mov r1 , hexvar bl hexvar subs r5 , r0 , num beq hexvar add r6 , r5 , num sub r3 , r6 , r4 cmp r3 , num ble hexvar mov r2 , num ldr r1 , [ pc , hexvar ] sub r0 , r5 , num bl hexvar cmp r0 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r6 bl hexvar cmp r0 , num movne r4 , r6 ldreq r3 , [ pc , hexvar ] addeq r4 , r5 , num streq r4 , [ r3 ] ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r4 , [ r2 ] str r4 , [ r3 ] pop { r4 , r5 , r6 , pc }
test rdx , rdx je hexvar push r15 push r14 mov r14 , r8 push r13 push r12 mov r12 , rsi push rbp push rbx mov esi , hexvar mov r13 , rcx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rcx , qword ptr [ rsp + num ] mov r15 , rax mov r9 , r14 mov r8 , r13 mov rdx , r12 mov rsi , rax mov rdi , rbx call hexvar test r15 , r15 mov rbp , rax jne hexvar test rax , rax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rcx , qword ptr [ rsp + num ] mov r9 , r14 mov r8 , r13 mov rdx , r12 mov rsi , rax mov rdi , rbx call hexvar test rax , rax je hexvar add rsp , hexvar mov rax , rbp pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
cmp edi , hexvar mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov edx , hexvar jmp hexvar mov edx , ecx nop dword ptr [ rax ] cmp edx , hexvar jg hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov edx , hexvar mov eax , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov edx , hexvar xor eax , eax jmp hexvar ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar add r3 , sp , hexvar stmdb r3 , { r0 , r1 } ldr r5 , [ sp , hexvar ] ldr r4 , [ sp , num ] cmp r5 , r4 bls hexvar ldr r6 , [ pc , hexvar ] ldr r7 , [ pc , hexvar ] ldr r8 , [ pc , hexvar ] ldr fp , [ pc , hexvar ] ldr sl , [ pc , hexvar ] ldr sb , [ pc , hexvar ] sub r4 , r4 , num sub r5 , r5 , num ldrb r2 , [ r4 , num ] ! add r3 , r6 , r2 ldrb r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldrb r3 , [ r8 , r2 ] cmp r3 , num beq hexvar ldr r1 , [ r6 , hexvar ] cmp r1 , num beq hexvar cmp r2 , hexvar beq hexvar bhi hexvar cmp r2 , hexvar beq hexvar blo hexvar cmp r2 , hexvar bhi hexvar ldr r0 , [ r7 ] ldr r3 , [ r0 , hexvar ] ldr r1 , [ r0 , hexvar ] cmp r3 , r1 movlo r1 , hexvar addlo ip , r3 , num strlo ip , [ r0 , hexvar ] strblo r1 , [ r3 ] bhs hexvar ldr r0 , [ r7 ] ldr r3 , [ r0 , hexvar ] ldr r1 , [ r0 , hexvar ] cmp r3 , r1 addlo r1 , r3 , num strlo r1 , [ r0 , hexvar ] strblo r2 , [ r3 ] bhs hexvar cmp r5 , r4 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a0 , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a0 , a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lui s0 , hexvar lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , v0 addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 sw v0 , - hexvar ( s0 ) lui a1 , hexvar lw gp , hexvar ( sp ) lw a0 , - hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , a1 , hexvar lui a1 , hexvar lw gp , hexvar ( sp ) lw a0 , - hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , a1 , hexvar lui a1 , hexvar lw gp , hexvar ( sp ) lw a0 , - hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , a1 , hexvar move v0 , zero lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , hexvar pop ebp ret
push r12 push rbp mov r12 , rdi push rbx mov edi , hexvar mov rbp , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax je hexvar mov rdi , rbp mov rbx , rax call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar mov rsi , qword ptr [ r12 ] mov rdi , rbp call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar mov rdi , rax call hexvar test eax , eax mov ebp , eax js hexvar mov esi , num mov edi , eax call hexvar lea rdx , [ rsp + hexvar ] mov esi , ebp mov edi , num call hexvar test eax , eax js hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ r12 + num ] mov rsi , rbx mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + num ] , rax call hexvar test rax , rax mov rbp , rax je hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar xor ecx , ecx mov esi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rsi add rsp , hexvar pop rbp ret
mov rax , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar cmp dword ptr [ rax + hexvar ] , esi jbe hexvar mov eax , esi push r15 push r14 push r13 lea r13 , [ rcx + rax * num ] push r12 push rbp push rbx mov r14d , edx mov rbp , rax mov r12 , rdi sub rsp , hexvar mov rbx , qword ptr [ r13 ] cmp qword ptr [ rbx + hexvar ] , num je hexvar mov r13 , qword ptr [ rbx + hexvar ] mov eax , r14d cmp rax , r13 jae hexvar add rax , qword ptr [ rbx + hexvar ] add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] sub rsi , rdi seta al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi jmp rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] sub rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al mov eax , esp add eax , - hexvar mov esp , eax mov cl , byte ptr [ ebp - num ] and cl , num mov byte ptr [ eax ] , cl mov cl , byte ptr [ eax ] and cl , num mov byte ptr [ hexvar ] , cl mov esp , ebp pop ebp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov dword ptr [ esi ] , num mov dword ptr [ esi + hexvar ] , num lea edi , [ esi + num ] and edi , hexvar mov ecx , esi sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax lea edi , [ esi + hexvar ] sub esp , num push dword ptr [ ebx + hexvar ] push edi call hexvar mov dword ptr [ esi + num ] , edi add esp , hexvar mov eax , num pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , num movsx ecx , byte ptr [ ebp + num ] add ecx , - hexvar mov edx , ecx sub edx , hexvar mov byte ptr [ ebp - num ] , al mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx ja hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , hexvar movsx eax , byte ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu gp , gp , hexvar lw v0 , - hexvar ( gp ) lw t9 , hexvar ( v0 ) beqz t9 , hexvar nop jr t9 nop jr ra move v0 , zero
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ecx ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp eax , dword ptr [ esi ] jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi push ecx call edx add esp , hexvar add esp , num pop ebx pop esi ret
mov edi , hexvar mov dword ptr [ ebx + hexvar ] , hexvar mov word ptr [ ebx + hexvar ] , di lea esi , [ esi ] lea eax , [ ebx + hexvar ] mov ecx , eax mov edi , eax mov esi , dword ptr [ ecx ] add ecx , num lea eax , [ esi - hexvar ] not esi and eax , esi and eax , hexvar je hexvar mov esi , eax mov dword ptr [ ebp - hexvar ] , edi shr esi , hexvar test eax , hexvar cmove eax , esi lea esi , [ ecx + num ] cmovne esi , ecx mov ecx , eax add cl , al sbb esi , num sub esi , edi and edx , hexvar je hexvar mov eax , hexvar push hexvar sub eax , esi push eax lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar jmp hexvar
push ebp push edi push esi push ebx sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] cmp esi , hexvar jbe hexvar lea eax , [ esi - hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax and eax , hexvar lea edi , [ edx + eax + hexvar ] mov ebp , edx nop lea esi , [ esi ] sub esp , num push hexvar push ebp add ebp , hexvar push ebx call hexvar add esp , hexvar cmp ebp , edi jne hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] and esi , hexvar and eax , hexvar lea eax , [ ecx + eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax test esi , esi je hexvar sub esp , num shl esi , num push esi push dword ptr [ esp + hexvar ] push ebx call hexvar add esp , hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r12d , edx mov r14 , rsi mov r15 , rdi cmp edx , - num je hexvar test r15 , r15 jne hexvar jmp hexvar mov rdi , r14 call hexvar mov r12 , rax test r15 , r15 je hexvar mov rdi , rsp mov rsi , r14 mov edx , r12d call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , qword ptr [ rsp ] call hexvar xor ecx , ecx test eax , eax cmove r13 , rcx mov rdi , qword ptr [ rsp ] call hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ r15 ] , rax jmp hexvar mov qword ptr [ r15 ] , num movsxd r15 , r12d xor ebp , ebp mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi jne hexvar jmp hexvar nop dword ptr [ rax ] add rbp , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar add eax , hexvar cdqe cmp rbp , rax jge hexvar cmp rbp , hexvar ja hexvar mov r13 , qword ptr [ rbp * num + hexvar ] test byte ptr [ r13 + num ] , num jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] lea esi , [ rbp - hexvar ] call hexvar mov r13 , rax test byte ptr [ r13 + num ] , num jne hexvar mov rbx , qword ptr [ r13 + hexvar ] mov rdi , rbx call hexvar cmp r12d , eax jne hexvar mov rdi , rbx mov rsi , r14 mov rdx , r15 call hexvar test eax , eax jne hexvar jmp hexvar nop mov eax , hexvar cdqe cmp rbp , rax jl hexvar xor r13d , r13d mov rax , r13 add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , dl movzx edx , byte ptr [ ebp - num ] shr dl , num movzx edx , dl mov edx , dword ptr [ eax + edx * num - hexvar ] movzx eax , byte ptr [ ebp - num ] movzx eax , al and eax , hexvar mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax setne al leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a1 , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) addiu a2 , zero , hexvar sw ra , hexvar ( sp ) addiu a1 , a1 , - hexvar sw zero , hexvar ( a0 )
push ebx sub esp , num call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - num sw a0 , num ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , num ( sp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov bl , dl mov edx , dword ptr [ ebp + num ] movsx edx , byte ptr [ edx + hexvar ] cmp edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl je hexvar mov eax , dword ptr [ ebp + num ] movsx eax , word ptr [ eax ] cmp eax , num mov cl , num mov byte ptr [ ebp - hexvar ] , cl je hexvar xor eax , eax mov cl , al mov byte ptr [ ebp - hexvar ] , cl jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] and ecx , num cmp ecx , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] and eax , num cmp eax , num je hexvar test byte ptr [ ebp - num ] , num je hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jge hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp eax , num jge hexvar call hexvar cmp dword ptr [ eax ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , - hexvar cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovbe ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
mov eax , dword ptr [ esp + hexvar ] and eax , num mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] and eax , num test edi , edi mov dword ptr [ esp + hexvar ] , eax jne hexvar test esi , esi je hexvar mov eax , dword ptr [ esp + num ] mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov byte ptr [ eax ] , hexvar mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ esp + hexvar ] , num mov ebp , num mov byte ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num lea eax , [ eax - hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bne v1 , v0 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) addiu a1 , v0 , num lui a0 , hexvar sw a1 , - hexvar ( a0 ) sll v0 , v0 , num addu v0 , v1 , v0 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) move a1 , zero move a0 , zero sw a1 , hexvar ( v0 ) sw a0 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw a1 , hexvar ( v0 ) sw a0 , num ( v0 ) lw v0 , hexvar ( fp ) sw a1 , num ( v0 ) sw a0 , ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar cmp dword ptr [ num ] , num jne hexvar mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , num mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al movabs rdi , num mov dword ptr [ rip ] , num mov dword ptr [ rip ] , num add dword ptr [ rax ] , eax add byte ptr [ rax ] , al add byte ptr [ rcx - hexvar ] , cl
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp push edi xor eax , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ esi ] mov ebp , dword ptr [ eax + hexvar ] cmp ebp , hexvar ja hexvar sub esp , num add esi , hexvar push ebp push esi push edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar nop leave ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r5 , r2 ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ r4 ] add r3 , sp , hexvar add r2 , sp , hexvar str r3 , [ sp , num ] str r2 , [ sp ] mov r3 , r5 mov r2 , num str ip , [ sp , hexvar ] mov r7 , r0 bl hexvar cmp r0 , num beq hexvar ldrb r6 , [ sp , hexvar ] cmp r6 , num bne hexvar ldrb r3 , [ sp , hexvar ] eor r3 , r3 , num cmp r7 , num moveq r3 , num andne r3 , r3 , num cmp r3 , num bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub ecx , edx mov dword ptr [ eax ] , ecx mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - num ] cmp eax , dword ptr [ ecx ] setne bl mov byte ptr [ ebp - num ] , bl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] sub esp , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax lea esp , [ ebp - num ] pop ebx pop ebp ret
sub rsp , num cmp edi , num jne hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar call hexvar add rsp , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + hexvar ] , esi mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov rcx , qword ptr [ rdi ] mov rdx , qword ptr [ rsi ] mov rdi , qword ptr [ rcx + num ] mov rsi , qword ptr [ rdx + num ] mov eax , num cmp rdi , rsi ja hexvar jb hexvar cmp rcx , rdx ja hexvar sbb eax , eax ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rdx cmp qword ptr [ rcx ] , num sete sil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] cmp qword ptr [ rcx + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rcx , qword ptr [ rcx + hexvar ] mov rdi , rcx call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx ] mov qword ptr [ rdi + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdi , rcx call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rcx ] mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jns hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rbp - num ] , num jle hexvar cmp dword ptr [ rbp - num ] , num je hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar lui v0 , hexvar addiu gp , gp , hexvar sltu v0 , a3 , v0 sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s4 , a0 sw s2 , hexvar ( sp ) move s3 , a2 sw s0 , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) move s0 , a3 sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s1 , hexvar ( sp ) bnez v0 , hexvar sw gp , hexvar ( sp ) lui s1 , hexvar addiu s6 , s4 , hexvar b hexvar addiu s5 , s4 , hexvar sltu v0 , s0 , s1 bnez v0 , hexvar lw ra , hexvar ( sp ) lw v0 , num ( s4 ) move a2 , s0 lw a3 , hexvar ( s4 ) subu s0 , s0 , s1 lw t9 , - hexvar ( gp ) move a1 , s2 move a0 , s3 sw v0 , hexvar ( sp ) sw s5 , hexvar ( sp ) addu s3 , s3 , s1 sw s6 , hexvar ( sp ) jalr t9 addu s2 , s2 , s1 sltu v0 , s0 , s1 lw gp , hexvar ( sp ) bnez s0 , hexvar movn s1 , s0 , v0 lw ra , hexvar ( sp ) addiu v0 , zero , num lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bnez a3 , hexvar move s1 , a3 b hexvar lw ra , hexvar ( sp )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r7 , r0 mov r8 , r1 mov r4 , r2 mov r5 , r3 mov r2 , hexvar mov r1 , num mov r0 , r8 bl hexvar add sb , r4 , num cmp sb , r5 bhi hexvar ldr r3 , [ r7 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 str r0 , [ r8 ] cmp r0 , num beq hexvar add r6 , r4 , r0 cmp r6 , r5 bhi hexvar cmp r0 , num bls hexvar add r4 , r4 , num cmp r6 , r4 blo hexvar ldr r3 , [ r7 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , sb blx r3 strh r0 , [ r8 , hexvar ] ldr sb , [ pc , hexvar ] ldr sl , [ pc , hexvar ] b hexvar mov r3 , num strh r3 , [ r8 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
mov eax , dword ptr [ esp + hexvar ] xor ebp , ebp mov edx , eax sub edx , esi cmp esi , eax jb hexvar jmp hexvar nop lea esi , [ esi ] cmp ebp , edx je hexvar movzx eax , byte ptr [ esi + ebp ] add ebp , num test al , al js hexvar mov esi , esi lea edi , [ edi ] add ebp , esi jmp hexvar mov esi , esi lea edi , [ edi ]
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , hexvar ja hexvar mov eax , dword ptr [ ebp + num ] shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbx mov rbx , rdi cmp qword ptr [ rip + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax call hexvar test eax , eax je hexvar add eax , hexvar pop rbx ret
push rbp push r15 push r14 push r12 push rbx test rdi , rdi je hexvar mov r14 , rsi test rsi , rsi je hexvar mov r15d , ecx mov r12 , rdx mov rbp , rdi mov rdi , r14 call qword ptr [ rip ] mov ebx , eax mov rdi , rbp mov esi , eax jmp hexvar mov rdi , rbp mov esi , ebx mov rdx , r12 mov ecx , r15d call hexvar test eax , eax jne hexvar mov rdi , rbp xor esi , esi call qword ptr [ rip ] cmp eax , num jne hexvar mov rdi , rbp mov rsi , r14 call qword ptr [ rip ] cmp eax , - num jne hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
ldrb r3 , [ r0 , num ] mov r2 , r0 cmp r3 , num beq hexvar cmp r3 , hexvar beq hexvar ldrb ip , [ r1 , num ] clz r0 , ip lsr r0 , r0 , num cmp r3 , ip orrne r0 , r0 , num cmp r0 , num addeq r2 , r2 , num addeq r1 , r1 , num beq hexvar b hexvar ldrb ip , [ r1 ] , num subs r3 , r3 , ip movne r3 , num cmp ip , num moveq r3 , num cmp r3 , num bxne lr
mov eax , dword ptr [ eax + num ] mov dword ptr [ ecx ] , eax mov eax , num mov edi , dword ptr [ ebp - hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push rbx mov rcx , rdx mov rbx , rsi mov rdx , rsi mov esi , num call hexvar cmp rbx , rax jne hexvar pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] mov r1 , num ldr r0 , [ sp , num ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] cmp r2 , r3 beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar addiu a2 , zero , hexvar lui s2 , hexvar lw t9 , hexvar ( s2 ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( s0 ) lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 addiu s1 , zero , num lui v0 , hexvar lw a0 , hexvar ( v0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lui v0 , hexvar lw ra , hexvar ( sp ) lui v1 , hexvar sw zero , hexvar ( s0 ) sw zero , hexvar ( s2 ) sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v1 ) lui v1 , hexvar lw s2 , hexvar ( sp ) sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v1 ) lw s0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) move v0 , s1 lw s1 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar jal hexvar addiu a0 , zero , hexvar b hexvar lw gp , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar jal hexvar move s1 , zero lui s2 , hexvar b hexvar lw gp , hexvar ( sp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar move a1 , zero move a0 , v0 jalr t9 move s0 , v0 beqz s1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 addiu v1 , zero , hexvar beq v0 , v1 , hexvar lw gp , hexvar ( sp ) addiu v1 , zero , hexvar bne v0 , v1 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) sw v0 , ( s0 )
test byte ptr [ rdi + hexvar ] , num jne hexvar cmp qword ptr [ rdi + hexvar ] , - num je hexvar mov rax , qword ptr [ rsi ] add rax , num mov qword ptr [ rsi ] , rax mov qword ptr [ rdi + hexvar ] , rax mov eax , num ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , num mov eax , dword ptr [ edi + num ] push ebx push dword ptr [ esi + num ] push dword ptr [ esi ] call dword ptr [ eax + hexvar ] lea edx , [ ebx + num ] add esp , hexvar mov eax , dword ptr [ edi + num ] add ebx , hexvar push edx push dword ptr [ esi + hexvar ] push dword ptr [ esi + num ] call dword ptr [ eax + hexvar ] add esp , hexvar mov eax , dword ptr [ edi + num ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esi + hexvar ] mov ecx , dword ptr [ esi + hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr [ eax + hexvar ] pop ebx pop esi pop edi jmp eax lea esi , [ esi ] lea edi , [ edi ]
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] mov r3 , num mov r0 , r3 add sp , fp , num pop { fp } bx lr
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , num ] mov r3 , num str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] mov r3 , num ldr r2 , [ sp , hexvar ] mov r1 , num ldr r0 , [ sp , hexvar ] blx r4 mov r3 , r0 cmp r3 , num ble hexvar ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r0 , r3 , hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] mov r2 , num ldr r1 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , num ] mov r3 , num str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] mov r3 , num ldr r2 , [ sp , hexvar ] mov r1 , num ldr r0 , [ sp , hexvar ] blx r4 b hexvar mov r0 , r0 b hexvar mov r0 , r0 add sp , sp , hexvar pop { r4 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , num movabs rsi , num movabs rdx , num mov ecx , hexvar mov r8d , hexvar movabs r9 , num movabs r10 , num mov qword ptr [ rsp ] , r10 mov qword ptr [ rsp + num ] , rax mov al , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) move s7 , a0 sw s6 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , zero sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw fp , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s2 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , v0 , num lb s6 , ( s7 ) move s0 , v0 beqz s6 , hexvar lw gp , hexvar ( sp ) lui v0 , hexvar lui s5 , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar lui s2 , hexvar addiu v0 , v0 , hexvar addiu s2 , s2 , hexvar sw v0 , hexvar ( sp ) addiu v0 , s5 , hexvar lui s3 , hexvar b hexvar sw v0 , hexvar ( sp ) lbu v0 , hexvar ( v0 ) beqz v0 , hexvar lw v0 , - hexvar ( gp ) lb s5 , num ( s7 ) addiu a1 , s5 , - hexvar andi v0 , a1 , hexvar sltiu v0 , v0 , num bnez v0 , hexvar addiu v0 , zero , hexvar beq s5 , v0 , hexvar lw t9 , - hexvar ( gp ) bnez s5 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , hexvar jalr t9 move a0 , zero move a1 , zero lw gp , hexvar ( sp ) move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 move a2 , v0 lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw a1 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 move s2 , a1 move a2 , a1 move a1 , a0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s1 , v0 lw v0 , hexvar ( s2 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop move v0 , zero lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar j hexvar nop
push rax cmp qword ptr [ rip + hexvar ] , num je hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num xor eax , eax pop rcx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ edx + num ] sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , hexvar call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a1 , hexvar addiu a2 , zero , num sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a1 , a1 , - hexvar sw gp , hexvar ( sp ) move a0 , zero lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 lw s0 , ( v0 ) lui a2 , hexvar lw gp , hexvar ( sp ) addiu a1 , zero , num addiu a2 , a2 , - hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 move a3 , v0 lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw a0 , ( v0 ) jalr t9 nop
push rbp mov rbp , rsp movlps qword ptr [ rbp - hexvar ] , xmm0 movlps qword ptr [ rbp - num ] , xmm1 movlps qword ptr [ rbp - hexvar ] , xmm2 movlps qword ptr [ rbp - hexvar ] , xmm3 movlps qword ptr [ rbp - hexvar ] , xmm4 movlps qword ptr [ rbp - hexvar ] , xmm5 mov qword ptr [ rbp - hexvar ] , rdi movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rbp - hexvar ] mulss xmm1 , dword ptr [ rbp - hexvar ] subss xmm0 , xmm1 mov rdi , qword ptr [ rbp - hexvar ] movss dword ptr [ rdi ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rbp - hexvar ] mulss xmm1 , dword ptr [ rbp - hexvar ] subss xmm0 , xmm1 mov rdi , qword ptr [ rbp - hexvar ] movss dword ptr [ rdi + num ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rbp - num ] mulss xmm1 , dword ptr [ rbp - hexvar ] subss xmm0 , xmm1 mov rdi , qword ptr [ rbp - hexvar ] movss dword ptr [ rdi + num ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] movss xmm1 , dword ptr [ rbp - num ] mulss xmm1 , dword ptr [ rbp - hexvar ] subss xmm0 , xmm1 mov rdi , qword ptr [ rbp - hexvar ] movss dword ptr [ rdi + hexvar ] , xmm0 pop rbp ret
push rbp push rbx sub rsp , num mov rbx , rdi cmp qword ptr [ rdi ] , num je hexvar mov rax , rbx add rsp , num pop rbx pop rbp ret
cmp byte ptr [ rip + hexvar ] , num je hexvar sub rsp , num mov edi , num call hexvar test al , al je hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar add rsp , num ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a0 move a0 , zero sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 sw s1 , hexvar ( sp ) move s4 , a2 sw gp , hexvar ( sp ) move s1 , a1 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal hexvar nop beqz s2 , hexvar lw gp , hexvar ( sp ) lw s1 , - hexvar ( gp ) lui a2 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , num sw s2 , hexvar ( sp ) addiu a2 , a2 , hexvar move a3 , s3 jalr t9 lw a0 , ( s1 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num lw a0 , ( s1 ) lw v1 , hexvar ( a0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov rbx , rdi test rsi , rsi sete al movzx eax , al sub rdi , rax mov rax , rdi mov qword ptr [ rsp + hexvar ] , rdi mov rdi , rsi sub rdi , num mov qword ptr [ rsp + num ] , rdi jne hexvar bsf rcx , rax shr rax , cl mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , num lea eax , [ rcx + hexvar ] mov dword ptr [ rsp + hexvar ] , eax mov rax , rbp shr rax , num and eax , hexvar lea rdx , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] lea rdx , [ rax + rax ] imul rax , rax imul rax , rbp sub rdx , rax lea rax , [ rdx + rdx ] imul rdx , rdx imul rdx , rbp sub rax , rdx lea rdx , [ rax + rax ] imul rax , rax imul rax , rbp sub rdx , rax mov r15 , rdx cmp rbx , num sbb rsi , rsi and esi , hexvar add rsi , hexvar cmp rbx , num setb cl movzx ecx , cl sbb rax , rax add rax , num jmp hexvar mov rdi , rsi call hexvar mov byte ptr [ rsp + hexvar ] , al movzx eax , byte ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push edi push num push ebp push esi call hexvar add esi , dword ptr [ esp + hexvar ] mov edi , eax pop ebp pop eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar cmp edi , num ja hexvar mov eax , dword ptr [ ebx + edi * num - hexvar ] add eax , ebx jmp eax nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a1 , hexvar sw s0 , hexvar ( sp ) addiu a2 , zero , hexvar sw gp , hexvar ( sp ) addiu a1 , a1 , hexvar sw ra , hexvar ( sp ) lw s0 , ( a0 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu a1 , a1 , hexvar lw ra , hexvar ( sp ) sltiu v0 , v0 , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] cmp byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar add eax , dword ptr [ ebp + num ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
ldr r2 , [ r0 , num ] push { r4 , lr } ldr r3 , [ r2 , num ] mov r4 , r0 cmp r3 , num beq hexvar ldr r1 , [ r2 ] blx r3 mov r3 , num str r3 , [ r4 , num ] pop { r4 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s1 , hexvar ( sp ) move a1 , a3 lw s1 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) sw s2 , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) move a0 , a2 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar addiu v1 , zero , num beq v0 , v1 , hexvar lui a3 , hexvar lui a3 , hexvar addiu a3 , a3 , - hexvar lw t9 , - hexvar ( gp ) addiu s0 , sp , hexvar addiu a2 , zero , hexvar sw a1 , hexvar ( sp ) addiu a1 , zero , num sw a0 , hexvar ( sp ) jalr t9 move a0 , s0 lui a1 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num addiu a1 , a1 , - hexvar move a3 , s0 lw t9 , - hexvar ( gp ) jalr t9 move a2 , s2 lw v1 , hexvar ( sp ) lw v0 , ( s1 ) bne v1 , v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar b hexvar addiu a3 , a3 , - hexvar b hexvar addiu a3 , a3 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r7 , r1 mov r5 , r0 mov r1 , r2 mov r0 , r7 mov r6 , r3 bl hexvar subs r4 , r0 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar cmp r6 , num bne hexvar mov r7 , num ldr r3 , [ r5 ] str r3 , [ r4 , hexvar ] str r4 , [ r5 ] mov r0 , r7 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp mov ebp , esp push edi push esi push eax mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ esi + hexvar ] mov dword ptr [ eax ] , edi mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ eax + num ] , esi mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx add esp , num pop esi pop edi pop ebp ret num
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] movzx eax , word ptr [ rsi + hexvar ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] cmp ecx , num jg hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] cmp ecx , num jg hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - num ] movzx ecx , word ptr [ rax + hexvar ] cmp ecx , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r5 , r1 ldr r0 , [ pc , hexvar ] mov r1 , num bl hexvar subs r3 , r0 , num ldrne r2 , [ r4 , hexvar ] movne r0 , num stmne r3 , { r2 , r5 } moveq r0 , r3 strne r3 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc }
sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] cmp eax , num ja hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num jmp hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push num push edx call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] add edx , num sub esp , num push num push edx call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar
push esi push ebx sub esp , num call hexvar add ebx , hexvar test eax , eax je hexvar mov esi , eax lea eax , [ ebx + hexvar ] cmp byte ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ esi + hexvar ] call hexvar mov eax , dword ptr [ esi ] cmp eax , dword ptr [ ebx + hexvar ] je hexvar cmp eax , dword ptr [ ebx + hexvar ] je hexvar mov eax , dword ptr [ esi + hexvar ] call hexvar add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] add rsi , hexvar mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] imul rcx , qword ptr [ rbp - hexvar ] , hexvar add rax , rcx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] imul rcx , qword ptr [ rbp - hexvar ] , hexvar add rax , rcx mov rax , qword ptr [ rax + hexvar ] add rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx ] shr rcx , num cmp rax , rcx mov edx , hexvar mov esi , hexvar cmovle esi , edx mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov cx , ax movzx edi , cx call hexvar mov rax , qword ptr [ rbp - hexvar ] movss dword ptr [ rax ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] leave ret
sub esp , hexvar call hexvar add eax , hexvar push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
push esi push ebx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ edx ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ edx + num ] test eax , eax je hexvar test edx , edx je hexvar mov ecx , dword ptr [ eax + hexvar ] mov ebx , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ eax + num ] cmp ecx , edx jb hexvar jbe hexvar cmp ecx , edx mov eax , num ja hexvar jae hexvar xor eax , eax pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s1 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s0 move a0 , v0 bal hexvar move s1 , v0 lw v0 , hexvar ( s3 )
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar test eax , eax sete bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar test eax , eax sete bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
mov eax , dword ptr [ esp + num ] test eax , eax je hexvar mov edx , dword ptr [ eax + num ] cmp dword ptr [ edx + num ] , num je hexvar xor eax , eax ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ edx ] mov eax , num mov edi , dword ptr [ esp + hexvar ] cmp dword ptr [ ecx + num ] , edi jle hexvar mov esi , dword ptr [ esp + hexvar ] xor esi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] test ebp , ebp je hexvar push hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax push eax push hexvar push num call hexvar mov edi , dword ptr [ ebx + hexvar ] add esp , hexvar test edi , edi jne hexvar jmp hexvar lea esi , [ esi ] mov edi , dword ptr [ edi + hexvar ] test edi , edi je hexvar sub esp , num push dword ptr [ edi ] push ebp call hexvar add esp , hexvar test eax , eax jne hexvar test byte ptr [ edi + hexvar ] , num jne hexvar add dword ptr [ edi + hexvar ] , num push hexvar push dword ptr [ esp + hexvar ] push hexvar push hexvar call hexvar add esp , hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edx mov ecx , dword ptr [ ecx ] mov esi , dword ptr [ esi ] mov esi , dword ptr [ esi + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbx mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov rdi , rbx call hexvar mov edx , hexvar mov word ptr [ rbx + rax ] , dx mov eax , num pop rbx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rbx , r9 mov r14 , r8 mov r15d , ecx mov r12 , rsi mov rbp , rdi test edx , edx js hexvar mov rdi , qword ptr [ rbp + num ] movsxd rsi , edx call hexvar test eax , eax je hexvar xor r13d , r13d test rbx , rbx je hexvar call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov r13 , rax add r13 , num mov qword ptr [ rax + num ] , rbx mov dword ptr [ rax ] , ecx cmp dword ptr [ rbp ] , num mov ecx , hexvar mov esi , num cmove esi , ecx mov rdi , qword ptr [ rbp + hexvar ] mov rdx , rax call hexvar mov rdi , qword ptr [ rbp + hexvar ] mov rsi , r12 mov edx , r15d mov rcx , r14 call hexvar mov ecx , eax mov eax , num test ecx , ecx jne hexvar test r13 , r13 je hexvar mov qword ptr [ r13 ] , num xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] lea ebx , [ hexvar ] mov dword ptr [ hexvar ] , ebx mov ebx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call ebx mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jge hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add ecx , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov cl , al cmp dword ptr [ ebp - num ] , num mov byte ptr [ ebp - hexvar ] , cl jge hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] shl eax , num mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] movsx ecx , byte ptr [ ecx + edx ] add eax , ecx sub eax , hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov dl , al movsx eax , dl add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } sub sp , sp , hexvar mov r5 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] bl hexvar subs r1 , r0 , num moveq r0 , num beq hexvar ldr r4 , [ r1 , hexvar ] cmp r4 , num moveq r0 , num bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push { r4 , r5 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ sp , hexvar ] ldr lr , [ r4 ] cmp ip , num str lr , [ sp , hexvar ] beq hexvar blo hexvar cmp ip , num beq hexvar ldr ip , [ sp , hexvar ] ldr lr , [ sp , hexvar ] cmp lr , ip bne hexvar mov ip , num ldr lr , [ sp , hexvar ] str ip , [ sp ] stmib sp , { r3 , lr } mov r3 , r2 mov r2 , r1 add r1 , sp , hexvar bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc } ldrtgt r6 , [ sl ] , - hexvar andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - num ] , al add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } subs r5 , r0 , num ldrne r3 , [ pc , hexvar ] ldreq r3 , [ pc , hexvar ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar ldr r6 , [ pc , hexvar ] mov r2 , r0 ldr r3 , [ r6 ] mov r1 , num mov r0 , r4 bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , num mov r2 , r0 mov r0 , r4 bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , num mov r2 , r0 mov r0 , r4 bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , num mov r2 , r0 mov r0 , r4 bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , num mov r2 , r0 mov r0 , r4 bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , num mov r2 , r0 mov r0 , r4 bl hexvar mov r1 , r4 ldr r0 , [ r6 ] bl hexvar cmp r5 , num bne hexvar eor r0 , r5 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] mov r2 , r0 mov r1 , num mov r0 , r4 bl hexvar b hexvar andeq r6 , pc , r4 , lsl num strdeq r6 , r7 , [ pc ] , -r8 andeq lr , fp , r4 , lsr num andeq sl , pc , r8 , lsr num andeq lr , fp , r4 , asr num strdeq lr , pc , [ fp ] , -r4 andeq lr , fp , r0 , asr num andeq lr , fp , ip , ror r8 andeq lr , fp , r8 , lsl num andeq lr , fp , r4 , asr num ldrdeq lr , pc , [ fp ] , -r8
movzx eax , byte ptr [ rdi + hexvar ] and eax , num cmp al , num je hexvar mov eax , num ret
sub sp , sp , num str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ sp ] orr r2 , r2 , r3 ldr r3 , [ sp , num ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] orr r2 , r3 , hexvar ldr r3 , [ sp , num ] str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , num bx lr
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp ecx , num mov dword ptr [ ebp - num ] , eax jne hexvar mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax add esp , num pop ebp ret
push { r4 , lr } cmp r0 , num sub sp , sp , num mov r4 , r1 beq hexvar mov r1 , r4 bl hexvar cmp r0 , num movne r3 , num mvnne r2 , num strne r3 , [ r0 , hexvar ] strne r2 , [ r0 , hexvar ] strne r3 , [ r0 , hexvar ] add sp , sp , num pop { r4 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] jge hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx mov rbx , rdx mov rdx , r8 sub rsp , hexvar shr rdx , hexvar mov rax , qword ptr [ rsp + hexvar ] mov edi , edx shr rax , hexvar or dil , al jne hexvar test rbx , rbx js hexvar mov r15 , rbx mov rbp , r8 add r15 , r8 jo hexvar test r8 , r8 mov r14 , rcx mov rcx , r9 je hexvar xor r13d , r13d test rbx , rbx mov qword ptr [ rsp ] , rsi jne hexvar push num push qword ptr [ rsp + hexvar ] mov rdx , r15 mov r9 , qword ptr [ rsp + hexvar ] xor r8d , r8d mov rsi , r14 mov rdi , r12 call hexvar mov rdi , r13 mov rbx , rax call hexvar pop rax pop rdx add rsp , hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov eax , num mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui a3 , hexvar sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov edi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , edi mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , - num je hexvar cmp eax , - num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , rbx lea rdx , [ rip + hexvar ] mov esi , eax mov edi , num mov eax , num call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp push r15 push r14 push rbx push rax mov r15 , rsi mov r14 , rdi mov rdi , qword ptr [ rdi ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rbx , qword ptr [ r14 + num ] add rbx , hexvar mov rdi , qword ptr [ rbx ] call hexvar test eax , eax jg hexvar jmp hexvar mov rax , qword ptr [ r14 + num ] mov rbx , qword ptr [ rax + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] call hexvar test eax , eax jle hexvar xor ebp , ebp nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rbx ] mov esi , ebp call hexvar cmp dword ptr [ rax ] , num jne hexvar mov rdi , qword ptr [ rax + num ] mov rsi , r15 call hexvar test eax , eax je hexvar add ebp , num mov rdi , qword ptr [ rbx ] call hexvar cmp ebp , eax jl hexvar mov rdi , r14 call hexvar test rax , rax je hexvar mov dword ptr [ rax ] , num mov qword ptr [ rax + num ] , r15 mov eax , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] cmp eax , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] lea edx , [ edi + num ] mov esi , hexvar mov eax , edx mul esi shr edx , num lea esi , [ edx * num ] lea ebp , [ esi + num ] cmp edi , ebp jbe hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov ebp , num mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp push rbx sub rsp , num mov eax , dword ptr [ rdx + hexvar ] test eax , eax jne hexvar mov rbx , qword ptr [ rsi + hexvar ] mov rbp , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rdx + hexvar ] cmp rbx , rbp jne hexvar xor eax , eax cmp rdi , rsi je hexvar call hexvar pxor xmm1 , xmm1 sub rbx , rbp cvtsi2sd xmm1 , rbx mulsd xmm1 , qword ptr [ rip + hexvar ] addsd xmm1 , xmm0 pxor xmm0 , xmm0 ucomisd xmm0 , xmm1 setbe al add rsp , num pop rbx pop rbp ret
push rbp push r14 push rbx mov r14d , ecx mov rbx , rdx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar mov rdi , rbp mov rsi , rax mov rdx , rbx mov ecx , r14d pop rbx pop r14 pop rbp jmp hexvar mov eax , hexvar pop rbx pop r14 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar fld xword ptr [ ebp + num ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fchs mov eax , esp fstp xword ptr [ eax ] call hexvar xor ecx , ecx neg eax sbb ecx , edx mov edx , ecx add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov bl , byte ptr [ eax ] test bl , bl setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dl , byte ptr [ eax + ecx ] sub dl , hexvar sete dh movzx eax , dh mov eax , dword ptr [ eax * num + hexvar ] mov byte ptr [ ebp - hexvar ] , dl jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
push r15 push r14 mov rax , rdi push r13 push r12 xor ecx , ecx push rbp push rbx mov r12 , rdi mov rbp , rsi sub rsp , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp edx , hexvar je hexvar add rax , num movsx edx , byte ptr [ rax - num ] test edx , edx jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar test rax , rax mov r13 , rax je hexvar xor r14d , r14d mov r15d , r14d mov rdx , r12 jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar mov rdx , rbx je hexvar lea rbx , [ rdx + num ] movsx eax , byte ptr [ rbx - num ] test eax , eax jne hexvar mov rbx , rdx movsxd r14 , r15d sub rbx , r12 shl r14 , num test rbx , rbx lea rcx , [ r13 + r14 ] jg hexvar mov qword ptr [ rcx ] , num cmp qword ptr [ r13 + r14 - num ] , num je hexvar mov dword ptr [ rbp ] , r15d add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ pc , hexvar ] str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar sub r3 , fp , hexvar ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar str r0 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] b hexvar mov r3 , hexvar mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov byte ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push r15 push r14 push r12 push rbx sub rsp , hexvar cmp qword ptr [ rdi ] , num je hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi lea r12 , [ rdi + num ] lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar add rbx , hexvar mov rdi , r12 mov rsi , rbx call hexvar test eax , eax je hexvar mov edx , dword ptr [ rsp + hexvar ] lea rsi , [ rsp + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , r12 mov rsi , r15 mov rdx , r14 call hexvar mov ecx , eax mov eax , num test ecx , ecx jne hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
sub rsp , hexvar mov rax , qword ptr [ rsp + hexvar ] mov r10 , qword ptr [ rsp + hexvar ] mov r11 , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp ] , r11 mov qword ptr [ rsp + num ] , r10 mov qword ptr [ rsp + hexvar ] , rax mov al , num call hexvar add rsp , hexvar ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + num ] cmp edx , hexvar jbe hexvar mov edx , dword ptr [ eax + num ] cmp edx , hexvar mov ecx , hexvar cmovb edx , ecx mov dword ptr [ eax + hexvar ] , edx ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw zero , num ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] call hexvar test eax , eax je hexvar lea ebp , [ ebx - hexvar ] sub esp , num mov esi , eax push hexvar push ebp push hexvar call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + hexvar ] , eax push hexvar push ebp push num push num call hexvar add esp , hexvar jmp hexvar nop sub esp , num push num push dword ptr [ esi + num ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push dword ptr [ esi + num ] call hexvar mov edx , dword ptr [ esi + num ] add esp , hexvar cmp eax , edx jle hexvar lea eax , [ edx + num ] sub esp , num mov dword ptr [ esi + num ] , eax push edi push edx mov dword ptr [ esp + hexvar ] , edx push dword ptr [ esi + num ] call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx push hexvar push ebp push num push hexvar call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov eax , edx pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r0 bl hexvar tst r0 , num bne hexvar lsr r0 , r0 , num add r0 , r0 , r0 , lsl num add r0 , r0 , num bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , r7 , r8 , pc } ldrb r2 , [ r4 ] cmp r2 , num beq hexvar ldr r3 , [ pc , hexvar ] ldrb r1 , [ r4 , num ] ldrb r1 , [ r3 , r1 ] ldrb ip , [ r4 , num ] ldrb r6 , [ r3 , ip ] ldrb ip , [ r4 , num ] ldrb r5 , [ r3 , ip ] ldrb r2 , [ r3 , r2 ] asr r3 , r5 , num and r3 , r3 , num orr r3 , r3 , r2 , lsl num strb r3 , [ r0 ] cmp r1 , hexvar addeq r2 , r0 , num beq hexvar add r3 , r4 , num mov lr , r0 ldr r4 , [ pc , hexvar ] asr r2 , r1 , num and r2 , r2 , hexvar orr r2 , r2 , r5 , lsl num strb r2 , [ lr , num ] cmp r6 , hexvar beq hexvar add r2 , lr , num orr r1 , r6 , r1 , lsl num strb r1 , [ r2 , - num ] ldrb ip , [ r3 , - num ] cmp ip , num beq hexvar ldrb r1 , [ r3 , - num ] ldrb r1 , [ r4 , r1 ] ldrb r5 , [ r3 , - num ] ldrb r6 , [ r4 , r5 ] ldrb r5 , [ r3 , - num ] ldrb r5 , [ r4 , r5 ] ldrb r7 , [ r4 , ip ] asr ip , r5 , num and ip , ip , num orr ip , ip , r7 , lsl num strb ip , [ lr , num ] add r3 , r3 , num cmp r1 , hexvar movne lr , r2 bne hexvar add r2 , lr , num b hexvar add r2 , lr , num mov r3 , num strb r3 , [ r2 ] pop { r4 , r5 , r6 , r7 , r8 , pc } strdeq r0 , r1 , [ r0 ] , - fp andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test edi , edi jne hexvar test eax , eax jne hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov r14 , rdx mov r15 , rsi mov r12 , rdi call hexvar mov rbx , rax test rax , rax je hexvar mov rbp , qword ptr [ rbx ] mov rax , qword ptr [ rbp + hexvar ] mov dword ptr [ rax ] , num mov esi , hexvar mov edi , num mov edx , hexvar call hexvar mov rcx , qword ptr [ rbp + hexvar ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar mov byte ptr [ rax ] , num mov rdi , r12 call hexvar mov rdi , rbx mov rsi , rax call hexvar test eax , eax je hexvar mov rdi , r12 call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rbx mov rsi , rax call hexvar mov ebp , eax mov rdi , r12 call hexvar test ebp , ebp je hexvar test r15 , r15 je hexvar mov rdi , rbx mov rsi , r15 mov rdx , r14 call hexvar test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push r15 push r14 push r13 push r12 push rbx mov r14 , r9 mov r15 , r8 mov r12 , rcx mov r13 , rdx mov rbx , rdi test rsi , rsi je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar test rax , rax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , num test r13 , r13 jne hexvar jmp hexvar mov rdi , rsi call hexvar mov qword ptr [ rbx + hexvar ] , rax test r13 , r13 je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rsi , r13 call hexvar test rax , rax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , num test r12 , r12 jne hexvar jmp hexvar mov rdi , r13 call hexvar mov qword ptr [ rbx + hexvar ] , rax test r12 , r12 je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rsi , r12 call hexvar test rax , rax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , num test r15 , r15 jne hexvar jmp hexvar mov rdi , r12 call hexvar mov qword ptr [ rbx + hexvar ] , rax test r15 , r15 je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rsi , r15 call hexvar test rax , rax je hexvar mov qword ptr [ rbx + hexvar ] , r14 cmp qword ptr [ rbx + hexvar ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar xor eax , eax cmp qword ptr [ rbx + hexvar ] , num setne al lea eax , [ rax + rax ] add eax , - num jmp hexvar mov rdi , r15 call hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r14 cmp qword ptr [ rbx + hexvar ] , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , r14 cmp qword ptr [ rbx + hexvar ] , num jne hexvar mov eax , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp ] ldr r2 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov edx , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , num cmp dword ptr [ rbp - hexvar ] , num cmovns eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe add rax , rdx mov qword ptr [ rbp - num ] , rax mov edi , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] lea edx , [ rax - num ] mov dword ptr [ rbp - hexvar ] , edx test eax , eax jne hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx add rax , num mov qword ptr [ rip + hexvar ] , rax nop leave ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov qword ptr [ rsi + rdi * num ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] add edx , - num mov dword ptr [ rbp - hexvar ] , edx mov edx , edx mov esi , edx mov qword ptr [ rcx + rsi * num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov eax , eax add rsp , hexvar pop rbp ret
mov ecx , dword ptr [ rdi ] cmp ecx , num je hexvar cmp ecx , hexvar je hexvar mov eax , hexvar cmp ecx , hexvar jne hexvar mov eax , num jmp hexvar xor eax , eax jmp hexvar mov eax , num mov eax , dword ptr [ rax * num + hexvar ] ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r0 , [ r0 , hexvar ] cmn r0 , num beq hexvar ldr r3 , [ r5 , hexvar ] cmp r3 , hexvar beq hexvar cmp r2 , num mov r4 , r2 movge r4 , r2 mvnlt r4 , hexvar mov r3 , num mov r2 , r4 bl hexvar cmp r0 , num blt hexvar cmp r0 , r4 ldrlo r3 , [ r5 , hexvar ] biclo r3 , r3 , num strlo r3 , [ r5 , hexvar ] pop { r4 , r5 , r6 , pc }
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov ebp , ecx mov rcx , rsi test rsi , rsi je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r14 , rdx mov rdi , rbx mov esi , hexvar xor edx , edx xor r8d , r8d call hexvar test eax , eax jle hexvar mov r15d , eax movsxd rbp , eax mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num je hexvar mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num jne hexvar test r14 , r14 je hexvar test al , num jne hexvar test al , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax movzx eax , al add rsp , num pop rbx pop r14 pop r15 pop rbp ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , ecx call hexvar add esp , hexvar ret
push { r4 , r5 , r6 , r7 , lr } ldr r5 , [ pc , hexvar ] ldr ip , [ r0 , hexvar ] ldr lr , [ r5 ] sub sp , sp , hexvar ands r4 , ip , hexvar str lr , [ sp , hexvar ] movne r4 , num bne hexvar cmp r2 , num cmpne r1 , num mov r7 , r1 beq hexvar cmp r3 , num mov r6 , r0 beq hexvar tst ip , hexvar bne hexvar tst ip , hexvar bne hexvar mov r1 , r7 mov r0 , r6 bl hexvar mov r4 , r0 ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] mov r0 , r4 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc } ldrtlt pc , [ r3 ] , hexvar andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - num ] , hexvar jae hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx * num + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar cmp eax , dword ptr [ ebp + hexvar ] jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] sub eax , hexvar add eax , num add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , r5 , lr } sub sp , sp , hexvar mov r5 , r1 ldr r1 , [ pc , hexvar ] ldr r1 , [ r1 ] str r1 , [ sp , hexvar ] cmn r2 , num beq hexvar mov r4 , r0 and r3 , r2 , hexvar lsl r3 , r3 , num ldr r1 , [ pc , hexvar ] ldrh r3 , [ r1 , r3 ] tst r3 , hexvar strbne r2 , [ sp , num ] movne r3 , num strbne r3 , [ sp , num ] beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar add r3 , sp , num mov r2 , r5 mov r1 , r4 bl hexvar mov r0 , hexvar bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push ebp mov ebp , esp push ebx push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] sub edx , num and ecx , edx cmp ecx , num setne bl and bl , num movzx ecx , bl mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebx pop ebp ret
push rax mov rax , qword ptr [ rdi + hexvar ] mov r9d , dword ptr [ rdi + hexvar ] lea r8 , [ rdi + hexvar ] mov rdi , rdx mov rdx , rcx mov rcx , rax call hexvar mov eax , num pop rcx ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + num ] , rdx cmp qword ptr [ rsp + num ] , num jne hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar xor esi , esi mov rdi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + num ] call hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] call hexvar mov dword ptr [ rsp + hexvar ] , eax mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 move s2 , a2 move s3 , a3 move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a3 , s3 move a2 , s2 move a1 , s1 move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , zero
cmp r1 , num bls hexvar push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sb , r1 , num ldrb r3 , [ r0 , sb ] cmp r3 , num bne hexvar add r1 , r0 , r1 ldrb r5 , [ r1 , - num ] cmp r5 , num bne hexvar mov r8 , r0 mov r0 , hexvar bl hexvar subs r4 , r0 , num beq hexvar mov sl , num ldr r6 , [ pc , hexvar ] str sb , [ r4 , hexvar ] ldr r7 , [ r6 ] str r8 , [ r4 , num ] cmp r7 , num str r8 , [ r4 , num ] str r5 , [ r4 , hexvar ] str r5 , [ r4 ] str sb , [ r4 , hexvar ] str r5 , [ r4 , hexvar ] str r5 , [ r4 , hexvar ] str r5 , [ r4 , hexvar ] str sl , [ r4 , hexvar ] beq hexvar ldmib r6 , { r3 , sb } sub r2 , r3 , num cmp r2 , sb lslhi r5 , sb , num bls hexvar ldr r0 , [ r7 , r5 ] add r5 , r7 , r5 cmp r4 , r0 popeq { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } cmp r0 , num beq hexvar ldr r2 , [ r6 , hexvar ] ldrb r3 , [ r6 , hexvar ] ldr r1 , [ r6 , hexvar ] strb r3 , [ r2 ] ldr r3 , [ r5 ] str r2 , [ r3 , num ] str r1 , [ r3 , hexvar ] ldr r3 , [ r4 , num ] ldr r2 , [ r4 ] ldr r1 , [ pc , hexvar ] str r4 , [ r5 ] str r2 , [ r6 , hexvar ] str r3 , [ r1 ] ldrb r1 , [ r3 ] ldr r2 , [ r4 , hexvar ] str r3 , [ r6 , hexvar ] strb r1 , [ r6 , hexvar ] str r2 , [ r6 , hexvar ] mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 , lsr r0 andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , a0 sw s0 , hexvar ( sp ) addiu a0 , zero , hexvar sw gp , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) addiu a1 , zero , num sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw s5 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) lw a0 , ( s5 ) beqz a0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , zero beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( s0 )
push eax push eax lea edx , [ ebx - hexvar ] lea eax , [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , edx push dword ptr [ eax ] lea eax , [ ebx - hexvar ] push num push edx push eax mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] lea eax , [ ebx - hexvar ] push eax call hexvar mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ edx + eax * num ] mov dword ptr [ ebx + hexvar ] , eax jmp hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movaps xmm2 , xmmword ptr [ rip + hexvar ] pand xmm1 , xmm2 mov rax , qword ptr [ rbp - num ] divsd xmm1 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm1 mov rax , qword ptr [ rbp - num ] ucomisd xmm0 , qword ptr [ rax + hexvar ] ja hexvar mov rax , qword ptr [ rbp - num ] movabs rcx , hexvar cmp qword ptr [ rax + num ] , rcx jne hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] movsd xmm0 , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] call rax movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] movsd xmm1 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] movsd qword ptr [ rbp - hexvar ] , xmm0 movaps xmm0 , xmm1 call rax movsd xmm1 , qword ptr [ rbp - hexvar ] mulsd xmm1 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , ecx inc edx mov dword ptr [ hexvar ] , edx shl ecx , num add eax , ecx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) addiu a1 , zero , num sw s2 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s2 , a2 lw a0 , num ( s0 ) beqz a0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( s0 ) beqz v0 , hexvar nop beqz s1 , hexvar nop lw v1 , ( s1 )
push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , rdx mov r12 , rcx mov rbp , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdx , rdx je hexvar mov dword ptr [ rdx ] , num test r12 , r12 je hexvar mov dword ptr [ r12 ] , hexvar test rbp , rbp je hexvar mov qword ptr [ rbp ] , num call hexvar mov rbx , rax test rax , rax je hexvar test r13 , r13 je hexvar cmp dword ptr [ rax + hexvar ] , num sete al movzx eax , al mov dword ptr [ r13 ] , eax test r12 , r12 je hexvar movzx eax , byte ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax test rbp , rbp je hexvar mov r13 , qword ptr [ rbx ] call hexvar mov r12 , rax test rax , rax je hexvar test r13 , r13 je hexvar mov esi , hexvar mov rdi , r13 call hexvar test rax , rax je hexvar lea r13 , [ rax + num ] mov rdx , rbp mov rsi , r12 mov rdi , r13 call hexvar test eax , eax je hexvar test r12 , r12 je hexvar mov rdi , r12 call hexvar mov rax , rbx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , hexvar mov dword ptr [ ebp - num ] , eax jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , eax sar ecx , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ edx + hexvar ] , eax add esp , num pop ebp ret
push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rbx , qword ptr [ rdi + hexvar ] movups xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 mov edx , hexvar mov rdi , rbx xor esi , esi call hexvar movaps xmm0 , xmmword ptr [ rsp ] movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + num ] , num movlps qword ptr [ r14 + hexvar ] , xmm0 mov dword ptr [ r14 ] , num mov dword ptr [ r14 + hexvar ] , num add rsp , hexvar pop rbx pop r14 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - hexvar ] sub eax , num setb cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rcx , num mov dword ptr [ rbp + rcx - hexvar ] , num mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - num ] lea rsi , [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] sub eax , ecx setb dl movzx ecx , dl mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl rcx , num mov eax , dword ptr [ rbp + rcx - hexvar ] add eax , - num mov ecx , eax sub eax , num mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , eax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax mov edx , dword ptr [ rax ] mov esi , edx sub esi , hexvar setb dil movzx r8d , dil mov r9d , r8d mov r9 , qword ptr [ r9 * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , esi jmp r9
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar mov r1 , hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
cmp dword ptr [ esp + hexvar ] , hexvar jbe hexvar sub esp , num push num push dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call dword ptr [ esi ] mov edi , eax pop eax pop edx push num mov eax , dword ptr [ esp + hexvar ] add eax , num push eax call dword ptr [ esi ] mov dword ptr [ esp + hexvar ] , eax pop ecx pop eax push num mov eax , dword ptr [ esp + hexvar ] add eax , num push eax call dword ptr [ esi ] mov dword ptr [ esp + hexvar ] , eax pop eax pop edx push num mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax call dword ptr [ esi ] add esp , hexvar cmp edi , num mov esi , eax ja hexvar mov eax , dword ptr [ ebx + edi * num - hexvar ] add eax , ebx jmp eax nop sub esp , num lea eax , [ ebx - hexvar ] push num jmp hexvar sub esp , num lea eax , [ ebx - hexvar ] push num jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar pop ecx pop edi push esi lea esi , [ ebx + hexvar ] push eax push hexvar push num push hexvar push esi call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , esi jmp hexvar lea esi , [ esi ]
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - num ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp push r14 push rbx mov r14 , rsi mov rbx , rdi lea rdi , [ rdi + hexvar ] lea rsi , [ rsi + hexvar ] call hexvar xor ebp , ebp test rax , rax je hexvar lea rdi , [ rbx + hexvar ] lea rsi , [ r14 + hexvar ] call hexvar test rax , rax je hexvar lea rdi , [ rbx + hexvar ] lea rsi , [ r14 + hexvar ] call hexvar test rax , rax je hexvar mov eax , dword ptr [ r14 + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov ebp , num mov eax , ebp pop rbx pop r14 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax test rdi , rdi je hexvar mov r15 , rsi movsxd rbp , dword ptr [ rdi ] xor r14d , r14d test rbp , rbp jle hexvar mov rax , qword ptr [ rdi + hexvar ] test al , num jne hexvar movabs rdx , hexvar mov rcx , qword ptr [ rdi + num ] mov rsi , rbp shl rsi , hexvar add rsi , rdx nop word ptr [ rax + rax ] mov rax , rbp mov rbx , rsi test rbp , rbp jle hexvar lea rbp , [ rax - num ] lea rsi , [ rbx + rdx ] cmp byte ptr [ rcx + rax - num ] , num je hexvar sar rbx , hexvar movzx ecx , byte ptr [ rcx + rbx ] test cl , num jne hexvar mov r14d , num test cl , num jne hexvar mov r14d , num test cl , num jne hexvar mov r14d , num test cl , num jne hexvar mov r14d , num test cl , hexvar jne hexvar mov r14d , num test cl , hexvar jne hexvar mov r14d , num test cl , hexvar jne hexvar xor edx , edx test cl , cl mov r14d , num cmovns r14d , edx mov ebp , eax lea r12d , [ rbp + num ] test r15 , r15 jne hexvar jmp hexvar xor r12d , r12d jmp hexvar and eax , num mov r14d , eax lea r12d , [ rbp + num ] test r15 , r15 je hexvar mov rbx , qword ptr [ r15 ] lea rax , [ rbx + num ] mov byte ptr [ rbx ] , r14b mov rsi , qword ptr [ rdi + num ] movsxd r13 , ebp mov rdi , rax mov rdx , r13 call hexvar lea rax , [ rbx + r13 ] add rax , num test ebp , ebp jle hexvar mov dl , byte ptr [ rax - num ] mov ecx , r14d shr dl , cl shl dl , cl mov byte ptr [ rax - num ] , dl mov qword ptr [ r15 ] , rax mov eax , r12d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
mov cl , byte ptr [ rdx ] xor eax , eax cmp cl , num je hexvar cmp cl , num jne hexvar mov rcx , qword ptr [ rdx + hexvar ] test rcx , rcx je hexvar test byte ptr [ rcx + num ] , num je hexvar movsxd rax , dword ptr [ rcx + hexvar ] add rax , qword ptr [ rdi ] test esi , esi je hexvar mov edx , dword ptr [ rcx + hexvar ] mov ecx , hexvar mov rdi , rax mov r8d , hexvar jmp hexvar mov dword ptr [ rax ] , num mov eax , num ret
ldr r3 , [ r1 , num ] push { r4 , r5 , r6 , lr } str r3 , [ r0 , num ] ldr r6 , [ r1 , num ] cmp r6 , num ble hexvar mov r5 , r0 str r3 , [ r0 ] lsl r0 , r3 , num mov r4 , r1 bl hexvar cmp r0 , num str r0 , [ r5 , num ] beq hexvar lsl r2 , r6 , num ldr r1 , [ r4 , num ] bl hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
lui v0 , hexvar and v0 , a0 , v0 beqz v0 , hexvar andi v0 , a0 , hexvar lui v0 , hexvar and v0 , a0 , v0 beqz v0 , hexvar nop lui v0 , hexvar srl a0 , a0 , hexvar addiu v0 , v0 , hexvar addu a0 , a0 , v0 lbu v0 , ( a0 ) jr ra addiu v0 , v0 , hexvar bnez v0 , hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar addu a0 , a0 , v0 jr ra lbu v0 , ( a0 ) lui v0 , hexvar srl a0 , a0 , hexvar addiu v0 , v0 , hexvar addu a0 , a0 , v0 lbu v0 , ( a0 ) jr ra addiu v0 , v0 , hexvar lui v0 , hexvar srl a0 , a0 , num addiu v0 , v0 , hexvar addu a0 , a0 , v0 lbu v0 , ( a0 ) jr ra addiu v0 , v0 , num
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , ebx mov edi , dword ptr [ eax ] mov edi , dword ptr [ edi + num ] add edi , dword ptr [ ecx ] mov dword ptr [ edx ] , edi mov dword ptr [ esi ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] cmp ecx , dword ptr [ esi + num ] setl bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov ecx , dword ptr [ ecx + esi * num ] mov esi , dword ptr [ ebp - hexvar ] add ecx , dword ptr [ esi ] mov dword ptr [ esi ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sll a1 , a1 , num sw s1 , hexvar ( sp ) move t0 , zero sw s4 , hexvar ( sp ) andi a1 , a1 , hexvar sw s2 , hexvar ( sp ) addiu s2 , a0 , num sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s1 , - hexvar ( gp ) lbu s0 , ( a0 ) lbu s3 , num ( a0 ) lw v1 , ( s1 ) srl s4 , s0 , num seb v0 , s3 or s4 , a1 , s4 sw v1 , hexvar ( sp ) andi s0 , s0 , hexvar bgez v0 , hexvar andi s3 , s3 , hexvar move a1 , zero addiu s2 , s2 , num lbu a3 , - num ( s2 ) addiu a1 , a1 , num andi v0 , a3 , hexvar srl v1 , v0 , num nor a0 , zero , a1 sllv v0 , v0 , a1 srlv v1 , v1 , a0 andi a0 , a1 , hexvar movn v1 , v0 , a0 seb a3 , a3 movn v0 , zero , a0 or t0 , t0 , v1 bltz a3 , hexvar or s3 , s3 , v0 lui v1 , hexvar sw zero , ( a2 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov r8d , dword ptr [ rbp - hexvar ] lea r9 , [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov qword ptr [ rsp ] , rax lea rax , [ rbp - hexvar ] mov qword ptr [ rsp + num ] , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a0 , hexvar ( a0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , esp lea edi , [ ebp - hexvar ] mov dword ptr [ esi + num ] , edi mov dword ptr [ esi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push num call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp byte ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] cmp eax , num setne dl and dl , num mov byte ptr [ ebp - num ] , dl mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax ] , num mov dl , byte ptr [ ebp - num ] and dl , num movzx eax , dl add esp , hexvar pop ebp ret
push rbp push r15 push r14 push rbx push rax mov r15 , rsi mov r14 , rdi call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax add rdi , num mov rsi , r15 call hexvar test eax , eax je hexvar mov dword ptr [ rbx ] , num mov rax , qword ptr [ r14 ] mov rdi , qword ptr [ rax + num ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ r14 ] mov qword ptr [ rax + num ] , rbx mov ebp , num jmp hexvar mov rdi , rbx call hexvar mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , num movabs rsi , num movabs rdx , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] or ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push { r4 , lr } ldr ip , [ pc , hexvar ] sub sp , sp , num ldrb r3 , [ ip ] cmp r3 , num beq hexvar ldrb r3 , [ ip , num ] cmp r3 , num bne hexvar bl hexvar cmp r0 , num bge hexvar bl hexvar ldr r0 , [ r0 ] add sp , sp , num pop { r4 , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp - num ] test ecx , ecx setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx xor eax , eax mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] sub cl , hexvar sete dl movzx eax , dl mov esi , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , cl mov dword ptr [ ebp - hexvar ] , eax jmp esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] sub eax , ecx setb dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dl , byte ptr [ eax + ecx - num ] sub dl , hexvar sete dh movzx eax , dh mov eax , dword ptr [ eax * num + hexvar ] mov byte ptr [ ebp - hexvar ] , dl jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] dec eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax call hexvar mov dword ptr [ esp + hexvar ] , eax test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar mov esi , hexvar test eax , eax je hexvar push ebp push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edi call hexvar mov esi , eax add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax + hexvar ] cmp dword ptr [ esp + hexvar ] , num je hexvar test byte ptr [ eax + hexvar ] , num jne hexvar sub esp , num push hexvar push eax call hexvar mov esi , dword ptr [ edi ] mov ebp , esi add ebp , dword ptr [ esp + hexvar ] add esp , num push ebp push edi call hexvar add esp , hexvar cmp ebp , eax jne hexvar add esi , dword ptr [ edi + num ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num setne al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] add esp , hexvar pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
push rbp push r15 push r14 push r12 push rbx mov r12 , rsi mov r14 , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar mov esi , hexvar call hexvar mov rdi , r12 call hexvar mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rdi , r12 call hexvar mov r15d , num test eax , eax jle hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ r14 + hexvar ] mov rdi , r12 mov esi , ebp call hexvar mov rdi , rax call hexvar mov rdi , rbx mov esi , ebp mov rdx , rax call hexvar test rax , rax je hexvar add ebp , num mov rdi , r12 call hexvar cmp ebp , eax jl hexvar jmp hexvar xor r15d , r15d mov eax , r15d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] and edx , hexvar cmp edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp eax , dword ptr [ ebp - num ] jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax + hexvar ] and ecx , hexvar or ecx , hexvar mov dword ptr [ eax + hexvar ] , ecx xor eax , eax add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , num mov rdi , rax mov rsi , rax movabs rdx , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi jle hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx pop esi ret
beqz a1 , hexvar nop sll a1 , a1 , num move v1 , a2 b hexvar addu t1 , a2 , a1 addiu v0 , v0 , hexvar sb v0 , ( v1 ) lbu v0 , ( a0 ) andi v0 , v0 , hexvar sltiu t0 , v0 , hexvar beqz t0 , hexvar addiu a3 , v0 , hexvar addiu v0 , v0 , hexvar addiu v1 , v1 , num sb v0 , - num ( v1 ) beq v1 , t1 , hexvar addiu a0 , a0 , num lbu v0 , ( a0 ) srl v0 , v0 , num sltiu t0 , v0 , hexvar bnez t0 , hexvar addiu a3 , v0 , hexvar seb v0 , a3 sb v0 , ( v1 ) lbu v0 , ( a0 ) andi v0 , v0 , hexvar sltiu t0 , v0 , hexvar bnez t0 , hexvar addiu a3 , v0 , hexvar seb v0 , a3 sb v0 , num ( v1 ) addiu v1 , v1 , num bne v1 , t1 , hexvar addiu a0 , a0 , num addu a2 , a2 , a1 jr ra sb zero , ( a2 )
sub esp , num push dword ptr [ ebp - hexvar ] lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add dword ptr [ ebp - hexvar ] , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar cmp dword ptr [ ebp - hexvar ] , num ja hexvar mov eax , dword ptr [ ebp - hexvar ] shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rsi test rsi , rsi lea rax , [ rip + hexvar ] cmove rbx , rax mov eax , num test rdx , rdx je hexvar mov rbp , rdi mov r15 , rdx mov r13d , ecx mov r14 , r8 cmp qword ptr [ rdi + num ] , num je hexvar mov edi , hexvar call hexvar mov r12 , rax mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , r15 mov edi , hexvar call hexvar mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , r14 mov qword ptr [ rax + hexvar ] , - num mov qword ptr [ r12 + hexvar ] , rax mov qword ptr [ rbp + hexvar ] , r12 mov qword ptr [ rbp + hexvar ] , rax test r13d , r13d setne al movzx eax , al mov rcx , qword ptr [ rbp + hexvar ] lea rsi , [ rcx + hexvar ] lea r8d , [ rax + num ] mov ecx , num mov rdx , rbx mov rdi , rbp call hexvar mov rdx , rax mov eax , num test rdx , rdx je hexvar mov qword ptr [ rdx + hexvar ] , r12 mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , eax dec ecx mov dword ptr [ ebp + num ] , ecx test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx dec dword ptr [ ebp + hexvar ] setne al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx add esp , hexvar pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , rdx mov r15 , rsi mov qword ptr [ rsp + hexvar ] , rdi mov byte ptr [ rsp + hexvar ] , num mov r12d , ebp movsxd r14 , dword ptr [ rcx + num ] xor ebx , ebx test bpl , hexvar je hexvar mov qword ptr [ rsp + hexvar ] , rcx mov edi , r14d call hexvar mov rbx , rax mov rdi , rax call hexvar mov r13 , rax mov rdi , r15 mov rsi , rbx mov edx , r13d mov rbx , qword ptr [ rsp + hexvar ] call rbx mov edx , hexvar test eax , eax je hexvar mov esi , hexvar mov qword ptr [ rsp + hexvar ] , r15 mov rdi , r15 mov edx , num call rbx mov edx , hexvar xor ebx , ebx test eax , eax setne cl test eax , eax je hexvar mov bl , cl add ebx , r13d mov r15 , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] test r12b , r12b js hexvar mov r13d , num test bpl , hexvar jne hexvar lea eax , [ r14 - num ] cmp eax , hexvar ja hexvar mov eax , hexvar bt rax , r14 jb hexvar movsx r13d , byte ptr [ r14 + hexvar ] and r12b , hexvar test bpl , hexvar jne hexvar jmp hexvar test ebp , hexvar jne hexvar and r12b , hexvar test bpl , hexvar je hexvar mov eax , r13d or eax , num test r13d , r13d mov r13d , num cmovne r13d , eax mov rdi , qword ptr [ rcx + num ] mov qword ptr [ rsp + hexvar ] , rcx mov esi , dword ptr [ rcx ] mov qword ptr [ rsp ] , num movzx ebp , r12b lea r8 , [ rsp + hexvar ] mov edx , r13d mov ecx , ebp mov r9 , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar test eax , eax js hexvar mov edx , eax add edx , ebx mov cl , byte ptr [ rsp + hexvar ] test cl , cl lea r14d , [ rax + rbx + num ] cmove r14d , edx test r15 , r15 je hexvar test cl , cl mov r12 , qword ptr [ rsp + hexvar ] je hexvar mov esi , hexvar mov rdi , r15 mov edx , num call r12
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jg hexvar cmp dword ptr [ ebp - num ] , num jg hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rax ] , num mov rax , qword ptr [ rdi + num ] test rdx , rdx mov byte ptr [ rax + num ] , num mov rax , qword ptr [ rdi + num ] mov dword ptr [ rdi + hexvar ] , num mov dword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , rax je hexvar mov rcx , qword ptr [ rip + hexvar ] cmp rdi , qword ptr [ rdx + rcx * num ] je hexvar ret nop dword ptr [ rax ] mov edx , dword ptr [ rdi + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , edx mov rdx , qword ptr [ rdi ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rip + hexvar ] , al ret
push ebx call hexvar add ebx , hexvar sub esp , num mov ecx , dword ptr [ ebx + hexvar ] lea eax , [ ebx + hexvar ] test ecx , ecx mov byte ptr [ eax + hexvar ] , num je hexvar sub esp , hexvar push ecx call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar add esp , hexvar mov eax , num pop ebx ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } subs r5 , r0 , num popeq { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldr r4 , [ pc , hexvar ] ldr r6 , [ r4 ] cmp r6 , num beq hexvar ldmib r4 , { r3 , r7 } sub r2 , r3 , num cmp r2 , r7 lslhi r3 , r7 , num bls hexvar ldr r1 , [ r6 , r3 ] add r2 , r6 , r3 cmp r1 , num beq hexvar ldr r1 , [ r4 , hexvar ] ldrb r0 , [ r4 , hexvar ] add r2 , r7 , num strb r0 , [ r1 ] ldr r3 , [ r6 , r3 ] ldr r0 , [ r4 , hexvar ] str r2 , [ r4 , num ] str r1 , [ r3 , num ] add r2 , r6 , r2 , lsl num str r0 , [ r3 , hexvar ] ldr r3 , [ r5 , num ] ldr r1 , [ r5 ] ldr r0 , [ pc , hexvar ] str r5 , [ r2 ] str r3 , [ r0 ] str r1 , [ r4 , hexvar ] ldrb r1 , [ r3 ] ldr r2 , [ r5 , hexvar ] str r3 , [ r4 , hexvar ] strb r1 , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } strbtvc ip , [ sp ] , - hexvar ldreq r1 , [ r7 , - hexvar ]
mov r2 , num ldr r3 , [ r0 , num ] ldr r1 , [ r0 , num ] push { r4 , r5 , r6 , lr } ldr r5 , [ pc , hexvar ] cmp r3 , r1 mov r4 , r0 str r2 , [ r5 , hexvar ] bhs hexvar add r2 , r3 , num str r2 , [ r0 , num ] ldrb r1 , [ r3 ] mov r0 , r4 bl hexvar ldr r3 , [ r5 , hexvar ] cmp r3 , num beq hexvar ldr r6 , [ r5 , hexvar ] ldr r3 , [ r5 , hexvar ] ldrb r2 , [ r6 ] str r3 , [ r5 , hexvar ] cmp r2 , num beq hexvar cmp r0 , r2 beq hexvar pop { r4 , r5 , r6 , pc } andeq r0 , r0 , lr , lsl num andeq r0 , r0 , r0
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov bl , num and bl , num movzx esi , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx add esp , hexvar pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s4 , a1 lui a1 , hexvar addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , ( s4 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a0 , zero , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , a2 addiu a0 , zero , num lw gp , hexvar ( sp ) move s0 , v0 addiu v0 , zero , hexvar sb zero , num ( s0 ) sb zero , num ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sw v0 , ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 sw zero , num ( s0 ) lw ra , hexvar ( sp ) move v1 , v0 sw v0 , hexvar ( s0 ) move v0 , s0 sw s2 , ( v1 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] call eax mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push r14 push rbx push rax mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rbx , qword ptr [ rbx + num ] add rbx , hexvar cmp qword ptr [ rbx ] , num jne hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax jne hexvar jmp hexvar mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + num ] add rbx , num cmp qword ptr [ rbx ] , num je hexvar mov edi , hexvar call hexvar test rax , rax je hexvar mov r14 , rax mov rdi , qword ptr [ rbx ] mov rsi , rax call hexvar test eax , eax jne hexvar mov esi , hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov rax , r14 add rsp , num pop rbx pop r14 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] sub eax , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx + hexvar ] jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx + hexvar ] sete dl and dl , num movzx eax , dl mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar move s0 , a0 beqz v0 , hexvar lw ra , hexvar ( sp ) lw t9 , hexvar ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ edi + hexvar ] mov ecx , dword ptr [ edi + hexvar ] or eax , num test ecx , ecx mov byte ptr [ edi + hexvar ] , al je hexvar mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ edi ] mov edx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ eax + edx * num ] test ebp , ebp jne hexvar jmp hexvar nop lea esi , [ esi ] mov ebp , dword ptr [ ebp ] test ebp , ebp je hexvar cmp byte ptr [ ebp + hexvar ] , num mov eax , ebp jne hexvar mov eax , dword ptr [ ebp + hexvar ] sub esp , num push esi push eax call ebx add esp , hexvar test eax , eax jne hexvar movzx eax , byte ptr [ edi + hexvar ] and eax , hexvar mov byte ptr [ edi + hexvar ] , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push r13 push r12 push rbp mov r12 , rdi push rbx mov rdi , rsi mov rbx , rsi call hexvar mov rdx , qword ptr [ r12 + hexvar ] mov rsi , rax mov rdi , rbx mov rbp , rax call hexvar test rax , rax je hexvar mov rcx , rbx mov r8 , rax mov edx , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 xor esi , esi xor edi , edi xor eax , eax jmp hexvar nop dword ptr [ rax ] mov r14 , qword ptr [ r12 ] mov r13 , qword ptr [ r12 + num ] mov rsi , qword ptr [ r12 + hexvar ] test r14 , r14 setne al movzx ecx , al mov byte ptr [ r12 + hexvar ] , al mov rax , r14 add ecx , ecx movsxd rcx , ecx add rcx , r13 add rcx , rbp cmp rcx , rsi mov qword ptr [ r12 + num ] , rcx jb hexvar test rsi , rsi mov eax , num cmove rsi , rax add rsi , rsi cmp rcx , rsi jae hexvar mov qword ptr [ r12 + hexvar ] , rsi mov rdi , r14 call hexvar mov qword ptr [ r12 ] , rax test r14 , r14 je hexvar lea rdx , [ r13 + num ] mov byte ptr [ rax + r13 ] , hexvar add r13 , num mov byte ptr [ rax + rdx ] , hexvar lea rdi , [ rax + r13 ] lea rdx , [ rbp + num ] mov rsi , rbx pop rbx pop rbp pop r12 pop r13 pop r14 jmp hexvar nop word ptr [ rax + rax ]
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push num mov esi , eax push hexvar push eax call hexvar pop eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar mov edi , eax push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , num je hexvar cmp dword ptr [ esi + num ] , num je hexvar cmp dword ptr [ esi + hexvar ] , - num jne hexvar mov dword ptr [ esi + hexvar ] , num mov edi , num cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push dword ptr [ esi + num ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax setne al movzx eax , al mov edi , eax sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] push dword ptr [ esi ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax cmove edi , eax mov eax , edi pop ebx pop esi pop edi ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , esp mov dword ptr [ esi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar sub eax , num mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ ecx + eax ] cmp eax , hexvar sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx sete dl and dl , num movzx eax , dl add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr sl , [ pc , hexvar ] ldr r7 , [ r0 , hexvar ] ldr r2 , [ sl ] ldr r3 , [ r7 , hexvar ] sub sp , sp , hexvar mov r5 , r0 str r2 , [ sp , hexvar ] and fp , r3 , hexvar bl hexvar mov r2 , num mov r4 , r2 ldr r3 , [ r5 , hexvar ] str r0 , [ r5 , hexvar ] ldrb r1 , [ r7 , hexvar ] cmp r1 , num bne hexvar cmp r3 , hexvar beq hexvar ldr r3 , [ r5 , hexvar ] ldrb r6 , [ r5 , hexvar ] ldr r8 , [ r7 , hexvar ] cmp r3 , num movne r6 , num andeq r6 , r6 , num cmp r6 , num bne hexvar cmp r2 , num bne hexvar ldr r1 , [ r5 , hexvar ] cmp r1 , num streq r4 , [ sp , hexvar ] streq r4 , [ sp , hexvar ] addeq sb , sp , hexvar beq hexvar cmp r8 , num ble hexvar bl hexvar ldr r3 , [ r5 , hexvar ] ldr r1 , [ r5 , hexvar ] sub r0 , r0 , r3 cmp r0 , r8 suble r8 , r8 , r0 strgt r4 , [ sp , hexvar ] strle r8 , [ sp , hexvar ] str r4 , [ sp , hexvar ] add sb , sp , hexvar cmp fp , num bne hexvar add r2 , sp , hexvar add r3 , sp , hexvar str r4 , [ r2 , num ] ! cmp r3 , r2 bne hexvar add r2 , sp , hexvar str r4 , [ r3 , num ] ! cmp r3 , r2 bne hexvar add r2 , sp , hexvar str r4 , [ r3 , num ] ! cmp r2 , r3 bne hexvar mvn r3 , num str r3 , [ sp , hexvar ] cmp r1 , num ldrls pc , [ pc , r1 , lsl num ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] xor edi , edi and al , num mov byte ptr [ ebp - hexvar ] , al mov ebx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov al , byte ptr [ ebp - hexvar ] test al , num mov eax , num cmovne edi , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } adds r5 , r0 , num movne r5 , num mov r7 , r1 cmp r1 , num moveq r1 , r5 movne r1 , num cmp r1 , num bne hexvar mov sb , r2 mov r8 , r3 mov r6 , r0 mov r1 , hexvar mov r0 , num bl hexvar subs r4 , r0 , num beq hexvar mvn r3 , num str r3 , [ r4 , hexvar ] add sl , r4 , hexvar mov r1 , num mov r0 , sl bl hexvar cmp r0 , num bne hexvar cmp r8 , num moveq r5 , num cmp r5 , num bne hexvar cmp sb , num beq hexvar ldr r3 , [ pc , hexvar ] str r3 , [ r4 , hexvar ] str r7 , [ r4 , num ] mov r3 , num str r3 , [ r4 , hexvar ] str r6 , [ r4 , hexvar ] mov r3 , num str r3 , [ r4 , hexvar ] str r7 , [ r4 , num ] str r6 , [ r4 , hexvar ] mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , ip
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar sub esp , hexvar push hexvar call hexvar mov esi , eax add esp , hexvar xor eax , eax test esi , esi je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , edi mov dword ptr [ esi ] , eax mov eax , dword ptr [ esp + hexvar ] push esi mov dword ptr [ esi + num ] , eax lea eax , [ ebx ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r8 , r3 ldr r5 , [ sp , hexvar ] ldr r6 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] cmp r5 , r6 movlo r3 , num movhs r3 , num cmp r1 , hexvar moveq r3 , num cmp r3 , num bne hexvar mov r7 , r0 mov r4 , r1 mov sb , r2 ldr sl , [ r8 , num ] str r1 , [ r7 , num ] cmp r1 , hexvar beq hexvar bhi hexvar cmp r1 , num beq hexvar bls hexvar cmp r1 , hexvar beq hexvar bls hexvar cmp r1 , hexvar beq hexvar bhi hexvar str r6 , [ sp ] mov r3 , num add r2 , sp , hexvar mov r1 , r5 mov r0 , sl bl hexvar str r0 , [ r7 , num ] mov r3 , num str r3 , [ r7 , hexvar ] ldr r0 , [ sp , hexvar ] add r0 , r5 , r0 b hexvar mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar bl hexvar mov r0 , hexvar bl hexvar mov r0 , r5 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 push rbx mov r14 , rsi call hexvar cmp dword ptr [ rax ] , num je hexvar mov rbx , rax call hexvar mov r15 , rax mov esi , dword ptr [ rbx ] mov rdi , rax call hexvar test eax , eax je hexvar mov rdi , r14 mov esi , hexvar mov rdx , r15 call hexvar mov rdi , r14 call hexvar mov rdi , rax call hexvar mov eax , num pop rbx pop r14 pop r15 ret
push { r4 , r5 , fp , lr } add fp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar bl hexvar mov r3 , r0 eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r4 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r2 , r3 mov r1 , r4 mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] add r4 , r3 , hexvar ldm r4 , { r3 , r4 } mov r0 , r3 mov r1 , r4 pop { r4 , r5 , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a3 , zero move a2 , zero jalr t9 addiu a1 , zero , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s1 , hexvar move s2 , s0 lw t9 , - hexvar ( gp ) move a1 , s1 jalr t9 move a0 , s2 lw gp , hexvar ( sp ) bnez s0 , hexvar sltu v0 , zero , v0 lw t9 , - hexvar ( gp ) move a0 , s2 jalr t9 sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s2 , v0 move v0 , zero lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp )
xor eax , eax test esi , esi js hexvar mov r8d , esi shr r8d , num mov edx , dword ptr [ rdi + num ] cmp edx , r8d jle hexvar mov rax , - num mov ecx , esi rol rax , cl mov rcx , qword ptr [ rdi ] mov esi , r8d and qword ptr [ rcx + rsi * num ] , rax mov eax , num test edx , edx jle hexvar movsxd rsi , edx lea rcx , [ rcx + rsi * num ] add rcx , - num nop cmp qword ptr [ rcx ] , num jne hexvar add rcx , - num add edx , - num jg hexvar mov dword ptr [ rdi + num ] , edx ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rdi , rdi je hexvar mov r12d , r9d mov rbx , r8 mov rbp , rcx mov r14 , rdx mov r15 , rsi mov r13 , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar jne hexvar mov rdi , r13 mov esi , num xor edx , edx xor ecx , ecx call hexvar test rbp , rbp jne hexvar test rax , rax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r13 call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar test eax , eax je hexvar mov rdi , r13 mov rsi , r15 mov edx , r12d call hexvar mov qword ptr [ rsp + num ] , rax test rax , rax je hexvar mov qword ptr [ rsp + hexvar ] , rbp mov qword ptr [ rsp + hexvar ] , rbx test r12b , hexvar mov rdi , qword ptr [ rsp + num ] jne hexvar call hexvar test eax , eax jle hexvar test r12b , num jne hexvar xor ebp , ebp mov rbx , qword ptr [ rsp + num ] mov rdi , rbx mov esi , ebp call hexvar mov rcx , qword ptr [ r13 + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] lea rbx , [ rsp + hexvar ] mov rdi , rbx mov rsi , r14 mov rdx , rax call hexvar test eax , eax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test r12d , hexvar jne hexvar mov rax , qword ptr [ r13 + hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rdi , rbx call hexvar mov rdi , rbx call hexvar test eax , eax jle hexvar mov rdi , rbx call hexvar add ebp , num mov rbx , qword ptr [ rsp + num ] mov rdi , rbx call hexvar cmp ebp , eax jl hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , hexvar call hexvar mov rdi , qword ptr [ num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov esi , hexvar mov rax , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push rbx cmp r8d , ecx jne hexvar mov al , byte ptr [ rdx ] mov ecx , eax and cl , hexvar cmp cl , hexvar jne hexvar cmp al , hexvar jne hexvar add r8d , - num test r8d , r8d jle hexvar add rdx , num xor eax , eax nop dword ptr [ rax ] mov rsi , rdx movzx ecx , byte ptr [ rdx - num ] cmp cl , hexvar jne hexvar add eax , num lea rdx , [ rsi + num ] mov ebx , r8d sub ebx , eax jg hexvar movsxd rax , ebx cmp byte ptr [ rsi + rax ] , hexvar jne hexvar mov edx , ebx call hexvar mov eax , ebx pop rbx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , rcx mov r14 , rdx mov rbp , rsi mov r13 , rdi mov rdi , qword ptr [ rdi ] mov esi , num call hexvar xor r12d , r12d test eax , eax je hexvar mov rbx , qword ptr [ r13 + num ] mov rdi , rbp call hexvar mov rdi , rbx mov rsi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ r13 + num ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , rbp call hexvar mov rdi , rax call hexvar mov rcx , qword ptr [ r13 + num ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar lea rdi , [ r14 + num ] mov ecx , hexvar mov esi , num mov edx , hexvar mov r8d , hexvar call hexvar mov qword ptr [ r13 + hexvar ] , r14 mov rbx , qword ptr [ r13 + hexvar ] mov rdi , r15 call hexvar mov edi , eax call hexvar mov rdi , rbx mov rsi , rax mov edx , num xor ecx , ecx call hexvar mov rax , qword ptr [ r14 + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov r12d , num mov rdi , r14 mov esi , num xor edx , edx mov rcx , r13 call rax test eax , eax jg hexvar cmp eax , - num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r12d , r12d mov eax , r12d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al mov al , byte ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp - num ] mov byte ptr [ ecx ] , al mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dl , byte ptr [ ecx ] sub dl , hexvar sete byte ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] movzx esi , byte ptr [ ebp - num ] and esi , num add ecx , esi mov dword ptr [ ebp - hexvar ] , ecx mov ecx , esp lea esi , [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , dl call hexvar mov byte ptr [ ebp - hexvar ] , al movzx ecx , byte ptr [ ebp - hexvar ] sub ecx , hexvar setg al movzx esi , al mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx jmp esi mov eax , dword ptr [ ebp - hexvar ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , cl movzx eax , byte ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] neg eax mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
beqz a0 , hexvar nop addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , ( a0 )
test esi , esi je hexvar lea eax , [ rsi - num ] push r13 push r12 push rbp push rbx lea r12 , [ rip + hexvar ] lea r13 , [ rdx + rax * num + num ] mov rbp , rdi mov rbx , rdx sub rsp , num nop dword ptr [ rax + rax ] mov rdi , rbp call hexvar lea rdi , [ rbp + rax ] mov r8 , rbx xor eax , eax mov rcx , r12 mov rdx , - num mov esi , num add rbx , num call hexvar cmp r13 , rbx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov r15 , rsi mov r14 , rdx mov r13d , ecx mov r12d , r8d mov edi , hexvar call hexvar mov rbx , rax mov rdi , r15 call hexvar mov qword ptr [ rbx + num ] , rax mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx + hexvar ] , r13d mov dword ptr [ rbx + hexvar ] , r12d mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx ] , rax mov qword ptr [ rbp + hexvar ] , rbx mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , num push edx push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 lw v0 , hexvar ( a0 ) beqz a1 , hexvar lw s1 , hexvar ( v0 ) lw v0 , hexvar ( s2 ) lw s2 , hexvar ( v0 ) sltu v0 , s0 , s2 bnez v0 , hexvar sll v0 , s0 , num sltiu v0 , s2 , num bnez v0 , hexvar move s0 , zero addiu s1 , s1 , num b hexvar addiu s0 , zero , num addiu a1 , zero , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw v0 , hexvar ( s2 ) addu v0 , s1 , v0 lw a0 , ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num call hexvar mov ecx , dword ptr [ ebp - hexvar ] sub eax , ecx sete bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rcx , qword ptr [ rdi ] mov rax , qword ptr [ rcx + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax mov esi , hexvar mov rdi , rbx call hexvar mov rdi , rbx pop rbx jmp hexvar ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r1 ldrb r1 , [ r1 ] sub sp , sp , hexvar and r1 , r1 , num cmp r1 , num str r2 , [ sp , num ] beq hexvar mov fp , r3 ldr r3 , [ r0 , num ] mov r7 , r0 ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldrb r3 , [ r3 , hexvar ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r5 , [ r6 , hexvar ] ldr r3 , [ r5 , hexvar ] cmp r3 , num beq hexvar mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] cmp edx , num jle hexvar mov edx , dword ptr [ eax + hexvar ] sub edx , num mov dword ptr [ eax + hexvar ] , edx nop pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
lui gp , hexvar addiu gp , gp , - hexvar lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) slt v0 , v0 , a0 beqz v0 , hexvar lw v0 , - hexvar ( gp ) sw a0 , hexvar ( v0 ) jr ra nop
mov dword ptr [ ebp - hexvar ] , num nop cmp dword ptr [ ebp - hexvar ] , num je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] movsx eax , al sub eax , hexvar cmp eax , hexvar ja hexvar shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx + num ] mov edx , dword ptr [ esp + hexvar ] lea ebx , [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] sub esp , num push ecx push ebx push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] test edx , edx je hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] lea ebx , [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] sub esp , num push ecx push ebx push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] lea ebx , [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] sub esp , num push ecx push ebx push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , num call hexvar add ebx , hexvar push edi push dword ptr [ edi + num ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax js hexvar sub esp , num add esi , hexvar push edi push esi call hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi ret
sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r2 , [ sp ] ldr r2 , [ r2 , num ] add r3 , r3 , r2 str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 add sp , sp , hexvar bx lr
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r8 , num mov r7 , r0 mov fp , r1 mov r5 , r0 mov sl , r0 mov r6 , r8 sub sp , sp , hexvar stm sp , { r2 , r3 } ldrb r3 , [ r5 ] , num cmp r3 , num beq hexvar ldrb r2 , [ r5 ] cmp r2 , hexvar beq hexvar sub r4 , r3 , hexvar clz r4 , r4 cmp r2 , num lsr r4 , r4 , num moveq r4 , num cmp r4 , num beq hexvar cmp r6 , num beq hexvar sub r3 , r6 , sl cmp r3 , num beq hexvar cmp r3 , num mov r3 , num strb r3 , [ r6 ] beq hexvar ldr r2 , [ sp , num ] mov r1 , sl mov r0 , r7 ldr r3 , [ sp ] blx r3 subs sb , r0 , num beq hexvar cmp sb , num beq hexvar cmn sb , num movne sb , num bne hexvar bl hexvar ldr sb , [ r0 ] cmp r8 , num movne r2 , num bne hexvar mov r2 , r8 mov r1 , sl mov r3 , num mov r0 , fp bl hexvar cmn r0 , num beq hexvar mov r3 , hexvar cmp r0 , num strb r3 , [ r6 ] bne hexvar mov sl , r5 ldrb r3 , [ r5 ] , num cmp r3 , num bne hexvar sub r4 , sl , r7 mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , pc , lsr num andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lbu v1 , ( a1 ) move s6 , a1 move s1 , a0 move s2 , a2 move s3 , a3 addiu a1 , a1 , num beqz v1 , hexvar move v0 , zero sll a0 , v1 , hexvar addiu a1 , a1 , num addu v1 , a0 , v1 addu v0 , v1 , v0 lbu v1 , - num ( a1 ) srl a0 , v0 , num bnez v1 , hexvar xor v0 , v0 , a0 subu a1 , a1 , s6 lw a0 , hexvar ( s1 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] mov r3 , num ldr r2 , [ pc , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop move a2 , zero addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , hexvar ( v0 ) move a2 , zero addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , hexvar ( v0 ) move a2 , zero addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , hexvar ( v0 ) move a2 , zero addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , hexvar ( v0 ) move a2 , zero addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push rax mov qword ptr [ rsp ] , rsi test r8 , r8 mov eax , hexvar cmovne rax , r8 test byte ptr [ rax + num ] , num jne hexvar mov r9 , qword ptr [ rcx + hexvar ] jmp hexvar xor r9d , r9d mov rsi , rsp mov r8d , num push rax push num call hexvar add rsp , hexvar pop rcx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , hexvar cmp esi , dword ptr [ ebp + num ] setle bl and bl , num movzx esi , bl lea edi , [ hexvar ] add edi , esi mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , edx cdq mov esi , hexvar idiv esi add eax , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edi call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx cdq mov ecx , hexvar idiv ecx mov dword ptr [ esp ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
sub rsp , num mov rdx , rdi mov rcx , - num mov eax , num repne scasb al , byte ptr [ rdi ] mov rsi , rcx not rsi lea rsi , [ rsi - num ] mov rdi , rdx call hexvar add rsp , num ret
push r15 push r14 push r13 push r12 push rbx mov r12 , rcx mov r13 , rdx mov rbx , rdi mov r14 , qword ptr [ rdi + hexvar ] xor r15d , r15d cmp esi , hexvar jg hexvar add esi , - num cmp esi , hexvar ja hexvar jmp qword ptr [ rsi * num + hexvar ] mov rdi , qword ptr [ r14 + num ] mov r15d , num test rdi , rdi je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rdx , qword ptr [ r14 + hexvar ] xor esi , esi call hexvar mov qword ptr [ r14 ] , num jmp hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar mov dword ptr [ rbx + hexvar ] , r13d jmp hexvar xor r15d , r15d cmp qword ptr [ r14 ] , num sete r15b jmp hexvar mov r15 , qword ptr [ r14 ] test r12 , r12 je hexvar mov rax , qword ptr [ r14 + num ] mov qword ptr [ r12 ] , rax jmp hexvar movsxd r15 , dword ptr [ rbx + hexvar ] jmp hexvar mov dword ptr [ rbx + hexvar ] , r13d jmp hexvar mov r15 , qword ptr [ r14 ] jmp hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar test r14 , r14 je hexvar mov eax , dword ptr [ rbx + hexvar ] test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov qword ptr [ r14 + num ] , num mov rdi , r14 call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , r13d mov qword ptr [ rbx + hexvar ] , r12 mov r15d , num mov rax , r15 pop rbx pop r12 pop r13 pop r14 pop r15 ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rdi test rdi , rdi mov r14d , hexvar mov ebp , hexvar cmove ebp , r14d mov eax , hexvar jmp hexvar nop word ptr [ rax + rax ] mov eax , hexvar xor r13d , r13d jmp hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar xor r12d , r12d nop dword ptr [ rax ] mov ecx , eax cmp eax , hexvar jg hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp ecx , hexvar jg hexvar mov eax , ebp cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar cmp dword ptr [ rsp + hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar nop dword ptr [ rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar test r13d , r13d mov eax , hexvar cmove eax , r14d mov r12d , r15d jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar mov eax , hexvar mov r13d , num mov r15d , num jmp hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar jmp hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , - num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ rsp + hexvar ] , num mov eax , hexvar mov ecx , hexvar cmovs eax , ecx jmp hexvar mov rax , qword ptr [ rbx ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov dword ptr [ rsp + hexvar ] , eax mov rdi , qword ptr [ rbx ] call hexvar mov eax , hexvar jmp hexvar mov eax , hexvar xor r15d , r15d mov r13d , num jmp hexvar mov eax , r12d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
ldrb r3 , [ r0 , hexvar ] and r3 , r3 , num cmp r3 , num bne hexvar ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] bx r3 push { r4 , lr } mov r0 , num bl hexvar mov r0 , num pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } subs r6 , r1 , num beq hexvar mov sb , r0 ldr r4 , [ r0 ] cmp r4 , num beq hexvar ldr r7 , [ pc , hexvar ] mov r8 , hexvar mov sl , hexvar ldrb r3 , [ r4 ] cmp r3 , num bne hexvar mov r1 , r6 mov r0 , sl bl hexvar cmn r0 , num beq hexvar ldr r4 , [ sb , num ] ! cmp r4 , num bne hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , rcx mov rbx , rsi test rsi , rsi setne byte ptr [ rsp + num ] test rcx , rcx setne byte ptr [ rsp + num ] mov dword ptr [ rsp + num ] , edx mov rbp , rdi lea r12 , [ rdi + hexvar ] lea r13 , [ rdi + hexvar ] lea r15 , [ rdi + num ] mov eax , hexvar jmp hexvar movzx ecx , byte ptr [ rsp + num ] cmp byte ptr [ rsp + num ] , num mov eax , hexvar mov edx , hexvar cmovne eax , edx test cl , cl mov ecx , hexvar cmove eax , ecx nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , r12 call hexvar mov rdi , r13 call hexvar mov rdi , r15 call hexvar mov qword ptr [ rbp ] , num mov eax , hexvar jmp hexvar mov rdi , rbp mov rsi , rbx mov edx , dword ptr [ rsp + num ] mov rcx , r14 xor r8d , r8d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
push r14 push r13 push r12 push rbp mov rbp , rdx push rbx mov rax , qword ptr [ rdi + num ] mov r12 , rdi mov rbx , rsi mov rdi , rsi lea r14 , [ rbx + hexvar ] mov rdx , qword ptr [ rax + hexvar ] movzx r13d , byte ptr [ rdx + hexvar ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp ] , rax mov rax , qword ptr [ r12 + num ] lea rdi , [ rbx + num ] and r13d , num call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + num ] , rax mov rax , qword ptr [ r12 + num ] lea rdi , [ rbx + num ] call qword ptr [ rax + hexvar ] test r13b , r13b mov qword ptr [ rbp + hexvar ] , rax lea rdi , [ rbx + hexvar ] mov rax , qword ptr [ r12 + num ] jne hexvar call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ r12 + num ] mov rdi , r14 call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ r12 + num ] lea rdi , [ rbx + hexvar ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ r12 + num ] lea rdi , [ rbx + hexvar ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ r12 + num ] lea rdi , [ rbx + hexvar ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , rax pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] sub eax , - num mov ecx , dword ptr [ ebp - hexvar ] sbb ecx , - num setb dl and dl , num movzx esi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - num ] , cl cmp cl , num je hexvar imul eax , dword ptr [ ebp - num ] , hexvar movzx ecx , byte ptr [ ebp - num ] add eax , ecx xor edx , edx div dword ptr [ ebp + hexvar ]
push rbp push r15 push r14 push rbx push rax mov ebx , edx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar test rbp , rbp je hexvar mov r14 , rax cmp ebx , - num mov eax , hexvar cmovle ebx , eax mov r15 , qword ptr [ rbp ] mov rdi , r15 call hexvar mov ebp , eax nop dword ptr [ rax ] add ebx , num cmp ebx , ebp jge hexvar mov rdi , r15 mov esi , ebx call hexvar mov rdi , qword ptr [ rax ]
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar cmp rdx , num jne hexvar mov dword ptr [ rdi + hexvar ] , ecx shr rcx , hexvar mov dword ptr [ rdi + hexvar ] , ecx mov eax , dword ptr [ rsi ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , edx add edi , - num mov ebx , esi adc ebx , - num mov dword ptr [ ebp - hexvar ] , eax mov eax , edx xor eax , edi mov edi , esi xor edi , ebx not edi not eax and eax , edx and edi , esi or eax , edi sete dl and dl , num movzx esi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al movabs rdi , hexvar mov dword ptr [ rip + hexvar ] , num call hexvar mov dword ptr [ rbp - num ] , eax add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx sub esp , num mov esi , dword ptr [ edx + num ] sub esi , num js hexvar mov dword ptr [ esp ] , eax mov ebp , dword ptr [ edx ] mov edi , num jmp hexvar lea esi , [ ebx - num ] cmp edi , esi jg hexvar lea eax , [ edi + esi ] mov ebx , eax shr ebx , hexvar add ebx , eax sar ebx , num lea eax , [ ebp + ebx * num ] push eax push dword ptr [ esp + num ] call hexvar add esp , num test eax , eax js hexvar test eax , eax jle hexvar lea edi , [ ebx + num ] jmp hexvar mov eax , num add esp , num pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s6 , hexvar ( sp ) move s6 , a2 sw s5 , hexvar ( sp ) move s5 , a3 sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move a0 , a1 sw gp , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) bal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) move s0 , v0 lw v0 , num ( s3 )
push ebx sub esp , hexvar call hexvar add eax , hexvar mov ebx , eax call hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , num add esp , hexvar pop ebx ret
push r15 push r14 lea rsi , [ rip + hexvar ] push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , hexvar mov rbp , rax jbe hexvar lea rdx , [ rsp + hexvar ] mov rsi , rax mov rdi , rbx call hexvar test eax , eax je hexvar mov r14 , qword ptr [ rbp + hexvar ] cmp r14 , hexvar jbe hexvar mov rbp , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + num ] lea rdi , [ rbp + num ] call qword ptr [ rax + hexvar ] mov r15 , rax mov rax , qword ptr [ rbx + num ] mov rdi , rbp call qword ptr [ rax + hexvar ] mov r12 , rax mov rax , qword ptr [ rbx + num ] lea rdi , [ rbp + num ] call qword ptr [ rax + hexvar ] cmp r12 , - num mov r13 , rax ja hexvar lea rsi , [ r12 + num ] mov rdx , rsi and rdx , hexvar cmp r15 , num setne cl test rax , rax sete al or cl , al jne hexvar cmp r12 , num jne hexvar add rbp , hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , rbp repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar lea rax , [ r13 + hexvar ] cmp r14 , rax jb hexvar test rax , rax js hexvar mov rdi , qword ptr [ rbx + hexvar ] je hexvar lea rsi , [ r13 + hexvar ] and rsi , hexvar jne hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rdx , qword ptr [ rsp + num ] mov r12 , rax test r12 , r12 je hexvar lea rdi , [ r12 + num ] lea rsi , [ rbp + rdx ] mov qword ptr [ r12 ] , r13 mov rdx , r13 call hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rdi , qword ptr [ rsp + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rsp + hexvar ] xor r12d , r12d test rdi , rdi je hexvar call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov rax , r12 jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp push r14 push rbx sub rsp , hexvar mov r14 , rcx mov qword ptr [ rsp + num ] , num test rcx , rcx lea rbx , [ rsp + num ] cmove rbx , rcx mov rcx , rbx call hexvar mov ebp , eax test rbx , rbx je hexvar test ebp , ebp je hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r14 call hexvar mov ebp , eax mov rdi , qword ptr [ rsp + num ] mov esi , hexvar call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( v0 )
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax mov ebx , eax mov eax , ebx add rsp , hexvar pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , num sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov dword ptr [ esp ] , num lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , eax cmp dword ptr [ hexvar ] , num setl al mov byte ptr [ ebp - hexvar ] , al xor eax , eax mov cl , byte ptr [ ebp - hexvar ] test cl , num lea edx , [ hexvar ] cmovne eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbx + num ] mov r12d , num cmp dword ptr [ rax + num ] , num je hexvar mov eax , r12d add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , ecx mov ecx , dword ptr [ eax + num ] cmp ecx , esi cmovbe esi , ecx test esi , esi jne hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , dword ptr [ ebx + hexvar ] mov ecx , dword ptr [ eax ] test ecx , ecx je hexvar mov edx , num mov eax , dword ptr [ ebp - hexvar ] call hexvar test al , al jne hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push esi push eax push num push num call hexvar add esp , hexvar jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar add esp , hexvar jmp hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 lw a0 , hexvar ( a0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + num ] mov bl , byte ptr [ esi + hexvar ] xor bl , hexvar and bl , num movzx esi , bl add edx , esi and edx , num mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + esi * num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi + edi * num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dl , byte ptr [ ecx + hexvar ] xor dl , hexvar and dl , num movzx ecx , dl add eax , ecx and eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ecx + hexvar ] cmp dword ptr [ edx + hexvar ] , eax jg hexvar mov eax , num jl hexvar mov eax , dword ptr [ ecx + hexvar ] sub eax , dword ptr [ edx + hexvar ] jne hexvar sub esp , num push dword ptr [ ecx ] push dword ptr [ edx ] call hexvar add esp , hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rdi , qword ptr [ rbp - hexvar ] call hexvar test eax , eax setne r10b movzx eax , r10b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov ecx , dword ptr [ rax + hexvar ] sub ecx , hexvar sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] and edx , hexvar mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ ebp - num ] , edx jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sltiu v0 , a0 , num sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s3 , v0 move a0 , s0 lw gp , hexvar ( sp ) move s1 , v0 lw s2 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , s3 sw s2 , ( s1 ) lw ra , hexvar ( sp ) move v0 , s0 lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , edx xor eax , eax mov cl , al mov eax , dword ptr [ ebp - hexvar ] and eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] sar eax , num mov edx , dword ptr [ ebp - hexvar ] sar edx , num mov esi , dword ptr [ ebp - hexvar ] and esi , dword ptr [ ebp - hexvar ] add edx , esi add eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar cmp eax , dword ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , cl jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , hexvar setle cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push { r0 , r1 , r2 , r3 } push { r4 , r5 , r6 , r7 , lr } sub sp , sp , hexvar ldr r4 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , num ] add r7 , sp , hexvar str r7 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r5 , [ r3 ] cmp r4 , num beq hexvar add r7 , sp , hexvar mov r0 , r4 bl hexvar mov r6 , r0 mov r2 , r0 mov r1 , r4 mov r0 , r5 bl hexvar add r5 , r5 , r6 ldr r4 , [ r7 , num ] ! cmp r4 , num bne hexvar mov r3 , num strb r3 , [ r5 ] ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 ] ldr r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , lr } add sp , sp , hexvar bx lr bl hexvar andeq r8 , pc , r0 , lsl num andeq lr , pc , r0 , lsr num
push { r4 , r5 , r6 , r7 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , hexvar str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r0 , [ r0 , hexvar ] cmn r0 , num beq hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num movne r0 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc } andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr fp , [ pc , hexvar ] sub lr , r3 , r0 ldr ip , [ fp ] sub sp , sp , hexvar cmp lr , num str ip , [ sp , hexvar ] ble hexvar ldrb sb , [ r0 ] lsl r7 , r1 , num add r6 , r0 , num and r7 , r7 , hexvar and r1 , sb , hexvar cmp r6 , r3 orr r7 , r7 , sb , lsr num str r1 , [ sp , hexvar ] bhs hexvar ldrb r1 , [ r0 , num ] add r6 , r0 , num tst r1 , hexvar and r1 , r1 , hexvar and r4 , r1 , hexvar mov r5 , num moveq sl , r1 beq hexvar mov ip , num b hexvar ldrb lr , [ r6 ] , num sub sl , ip , hexvar and r0 , lr , hexvar mov r8 , r0 and r8 , r8 , hexvar lsl r1 , r8 , sl rsb sl , ip , hexvar orr r1 , r1 , r8 , lsr sl orr r1 , r1 , r5 orr r0 , r4 , r8 , lsl ip tst lr , hexvar mov r4 , r0 mov r5 , r1 beq hexvar cmp r3 , r6 add ip , ip , num bhi hexvar mov sl , r4 mov r3 , num tst r7 , num strb r3 , [ sp , hexvar ] str r3 , [ r2 ] ldrne r3 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldrne r3 , [ r3 ] stm r1 , { r4 , r5 } strhne r3 , [ sp , hexvar ] lsrne r3 , r3 , hexvar ldrne r5 , [ pc , hexvar ] strbne r3 , [ sp , hexvar ] ldreq r5 , [ pc , hexvar ] tst r7 , num add r4 , sp , hexvar bne hexvar tst r7 , num bne hexvar tst r7 , num bne hexvar ldr r3 , [ sp , hexvar ] add r5 , sp , hexvar str r3 , [ sp ] mov r2 , hexvar ldr r3 , [ pc , hexvar ] mov r1 , num mov r0 , r5 bl hexvar stm sp , { r5 , sl } mov r3 , r4 ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ fp ] mov r0 , r6 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp - hexvar ] and edi , hexvar cmp edi , hexvar sete bl and bl , num movzx edi , bl cmp edi , num setne bl and bl , num movzx edi , bl mov esi , dword ptr [ esi + edi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jl hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jl hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] sete cl and cl , num mov byte ptr [ ebp - hexvar ] , cl jmp hexvar xor eax , eax cmp eax , dword ptr [ ebp - hexvar ] jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl and cl , num mov byte ptr [ ebp - hexvar ] , cl jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar cmp eax , dword ptr [ ebp - hexvar ] sete cl and cl , num mov byte ptr [ ebp - hexvar ] , cl jmp hexvar jmp hexvar call hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) b hexvar nop addiu v0 , zero , - num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) b hexvar nop addiu v0 , zero , - num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , zero jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] test edx , edx setne bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
push rbp push rbx mov rbp , rsi mov rbx , rdi mov esi , hexvar mov rdi , rbp sub rsp , num call hexvar mov rdi , rbp mov byte ptr [ rbx + hexvar ] , al mov esi , hexvar call hexvar mov rdi , rbp mov byte ptr [ rbx + hexvar ] , al mov esi , num call hexvar mov rdi , rbp mov dword ptr [ rbx + hexvar ] , eax mov esi , hexvar call hexvar mov rdi , rbp mov dword ptr [ rbx + hexvar ] , eax mov esi , hexvar call hexvar mov dword ptr [ rbx + hexvar ] , eax add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov esp , ebp pop ebp ret
lui gp , hexvar lw v0 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , v0 , - num sw s4 , hexvar ( sp ) lw s4 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw v0 , num ( a0 ) lw v1 , ( s4 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar move s0 , zero lw t9 , - hexvar ( gp ) addiu a0 , zero , hexvar lw a1 , ( s1 ) jalr t9 addiu s0 , s0 , num lw v0 , num ( s1 ) sltu v0 , s0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu s0 , sp , hexvar sw s3 , hexvar ( sp ) addiu a3 , a3 , hexvar sw s2 , hexvar ( sp ) addiu a2 , zero , hexvar addiu a1 , zero , num jalr t9 move a0 , s0 lui a2 , hexvar lw gp , hexvar ( sp ) addiu a1 , zero , num lw a0 , ( s1 ) addiu a2 , a2 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a3 , s0 addiu v0 , zero , num lw a0 , hexvar ( sp ) lw v1 , ( s4 ) bne a0 , v1 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esi ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + num ] , num mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + hexvar ] mov byte ptr [ edx + hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov byte ptr [ edx + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx test al , num mov edx , num cmovne ecx , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + hexvar ] , ecx add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] add edx , dword ptr [ ebp + hexvar ] sub edx , hexvar add edx , hexvar add edx , hexvar mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jae hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num call hexvar mov dword ptr [ eax ] , hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s2 , a1 move s1 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a3 , s2 addiu a2 , zero , num addiu a1 , zero , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) blez v0 , hexvar addiu v0 , zero , num beq s1 , v0 , hexvar addiu v0 , zero , num beq s1 , v0 , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , zero move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s1 , zero addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp )
push rax call hexvar mov rdi , rax mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov ecx , hexvar sub ecx , eax mov eax , ecx pop rcx ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar call hexvar nop word ptr cs : [ eax + eax ] nop
push rbp mov rbp , rsp sub rsp , hexvar mov al , sil mov qword ptr [ rbp - num ] , rdi and al , num mov byte ptr [ rbp - num ] , al mov rdi , qword ptr [ rbp - num ] add rdi , - hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov al , byte ptr [ rdi + hexvar ] and al , num movzx esi , al mov al , byte ptr [ rbp - num ] and al , num movzx ecx , al cmp esi , ecx jne hexvar jmp hexvar mov al , byte ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] and al , num mov byte ptr [ rcx + hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push r12 push rbp push rbx sub rsp , hexvar test sil , sil je hexvar cmp edi , num je hexvar cmp edi , num je hexvar cmp edi , num je hexvar add rsp , hexvar xor eax , eax pop rbx pop rbp pop r12 ret
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
push rbp push rbx sub rsp , num mov rbx , rdi mov eax , dword ptr [ rdi + hexvar ] shr eax , num test al , hexvar sete al movzx eax , al mov dword ptr [ rip + hexvar ] , eax call hexvar shr eax , num mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rdi , rbx call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar call hexvar jmp hexvar cmp eax , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rbx , qword ptr [ rbx ] mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar jmp hexvar cmp eax , num jne hexvar mov rdi , rbx call hexvar cmp rax , hexvar ja hexvar cmp rax , hexvar jae hexvar sub rax , num cmp rax , num jbe hexvar call hexvar jmp hexvar cmp rax , hexvar je hexvar cmp rax , hexvar jne hexvar call hexvar jmp hexvar call hexvar mov rsi , qword ptr [ rbx ] mov rdi , rbx call hexvar mov rbp , rax mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test rbp , rbp je hexvar mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rbp call hexvar call hexvar add rsp , num pop rbx pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr sb , [ pc , hexvar ] sub sp , sp , hexvar sub sp , sp , hexvar ldr r3 , [ sb ] add r2 , sp , hexvar str r1 , [ sp , hexvar ] add r2 , r2 , hexvar ldr r1 , [ pc , hexvar ] str r3 , [ r2 ] mov sl , r0 bl hexvar subs r8 , r0 , num bne hexvar mov r2 , num mov r5 , r8 ldr r3 , [ pc , hexvar ] strb r2 , [ r3 ] mov fp , num mov r6 , num mov r7 , num mov r2 , hexvar add r1 , sp , hexvar mov r0 , r5 bl hexvar subs r4 , r0 , num beq hexvar cmn r4 , num beq hexvar add r2 , sp , hexvar add r0 , r2 , r4 ldrb r1 , [ r2 ] , num cmp r2 , r0 add fp , fp , r1 bne hexvar adds r6 , r6 , r4 adc r7 , r7 , num b hexvar cmp r8 , num beq hexvar mov r0 , r5 bl hexvar cmp r0 , num bne hexvar mov r4 , hexvar mov r5 , num ldr r2 , [ pc , hexvar ] mov r0 , r6 and r6 , fp , r2 add r3 , r6 , fp , lsr num and r2 , r2 , r3 add r6 , r2 , r3 , asr num str r4 , [ sp , num ] str r5 , [ sp , hexvar ] mov r3 , num mov r4 , num mov r1 , r7 stm sp , { r3 , r4 } add r2 , sp , hexvar mov r3 , num bl hexvar mov r2 , r6 mov r3 , r0 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r3 , r2 bhs hexvar mov r2 , hexvar add r1 , r3 , num str r1 , [ r0 , hexvar ] mov r0 , num strb r2 , [ r3 ] add r3 , sp , hexvar add r3 , r3 , hexvar ldr r2 , [ r3 ] ldr r3 , [ sb ] cmp r2 , r3 bne hexvar add sp , sp , hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar test eax , eax jne hexvar sub esp , hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ ebp - hexvar ] , eax jle hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx jmp hexvar nop jmp hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rbp - num ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edi , cl mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov eax , dword ptr [ rbp - num ] mov edi , eax lea rsi , [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
cmp dword ptr [ ebx + hexvar ] , num sete al movzx eax , al mov esi , eax mov edx , eax mov ecx , num sub esp , hexvar push num lea eax , [ ebx - hexvar ] call hexvar mov edi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push edi push eax push num call hexvar mov dword ptr [ ebx + hexvar ] , esi add esp , hexvar mov ebp , dword ptr [ esp + hexvar ] jmp hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar addiu v0 , zero , num bne a1 , v0 , hexvar sw gp , hexvar ( sp ) move a1 , a2 addiu v0 , zero , num beq a3 , v0 , hexvar move s0 , a0 addiu v0 , zero , num beq a3 , v0 , hexvar move a2 , a3 jal hexvar nop lw gp , hexvar ( sp ) b hexvar sltu s0 , zero , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a2 , zero , num move a1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) sltu s0 , zero , v0 bnez s0 , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) addiu a2 , zero , num move a1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) b hexvar sltu s0 , zero , v0 addiu a2 , zero , num jal hexvar nop lw gp , hexvar ( sp ) b hexvar sltu s0 , zero , v0 move s0 , zero move v0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
mov eax , dword ptr [ rip ] test eax , eax jne hexvar movaps xmm0 , xmmword ptr [ rip ] xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 add byte ptr [ rsi ] , bh add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rcx ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al jg hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al outsb dx , byte ptr [ rsi ] add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax test rdx , rdx je hexvar mov rbx , rdx mov r15 , rsi mov r14 , rdi lea eax , [ rdx * num ] mov ecx , dword ptr [ rdi + hexvar ] add eax , dword ptr [ rdi + hexvar ] jae hexvar add ecx , num mov dword ptr [ r14 + hexvar ] , ecx mov rdx , rbx shr rdx , hexvar add edx , ecx mov dword ptr [ r14 + hexvar ] , edx mov dword ptr [ r14 + hexvar ] , eax mov ebp , dword ptr [ r14 + hexvar ] test rbp , rbp je hexvar lea rax , [ rbx + rbp ] or rax , rbx lea rdi , [ r14 + rbp ] add rdi , hexvar cmp rax , hexvar jb hexvar lea r12 , [ r14 + hexvar ] mov r13d , hexvar sub r13 , rbp neg rbp mov rsi , r15 mov rdx , r13 call hexvar mov edx , num mov rdi , r14 mov rsi , r12 call hexvar add r15 , rbp add r15 , hexvar sub rbx , r13 xorps xmm0 , xmm0 movups xmmword ptr [ r12 + hexvar ] , xmm0 movups xmmword ptr [ r12 + hexvar ] , xmm0 movups xmmword ptr [ r12 + hexvar ] , xmm0 movups xmmword ptr [ r12 ] , xmm0 mov dword ptr [ r12 + hexvar ] , num mov rdx , rbx shr rdx , num je hexvar mov rdi , r14 mov rsi , r15 call hexvar mov rax , rbx and rax , hexvar add r15 , rax sub rbx , rax test rbx , rbx je hexvar mov dword ptr [ r14 + hexvar ] , ebx add r14 , hexvar mov rdi , r14 mov rsi , r15 mov rdx , rbx call hexvar jmp hexvar mov rsi , r15 mov rdx , rbx call hexvar add dword ptr [ r14 + hexvar ] , ebx mov eax , num add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebx sub esp , num call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push r15 push r14 mov r14 , rdi push r13 push r12 push rbp push rbx mov rbp , rsi mov ebx , edx sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar mov rdi , r14 mov dword ptr [ rax ] , num mov r12 , rax call hexvar test rax , rax je hexvar cmp qword ptr [ rip + hexvar ] , num mov r13 , rax je hexvar mov rdi , rax call hexvar test eax , eax lea rdx , [ rsp + hexvar ] js hexvar mov esi , eax mov edi , num call hexvar shr eax , hexvar test al , al jne hexvar mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov edi , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , rdx call hexvar mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + num ] mov rsi , rax mov rdi , qword ptr [ rip + hexvar ] mov r15 , rax mov qword ptr [ rax ] , rcx mov qword ptr [ rax + num ] , rdx call hexvar test rax , rax je hexvar cmp r15 , rax je hexvar mov rdi , r15 call hexvar mov rdx , r14 mov esi , num xor edi , edi call hexvar mov edx , num mov rbx , rax mov esi , hexvar xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi xor edi , edi xor eax , eax call hexvar mov rdi , r13 call hexvar mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 , hexvar ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] mov r1 , r3 mov r0 , r2 bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] mov r0 , num ldr r3 , [ fp , - hexvar ] mov r1 , r3 mov r2 , num mov r3 , num mov r4 , num lsl r4 , r2 , num orr r4 , r4 , r1 , lsr num lsl r3 , r1 , num mov r1 , num mov r2 , num mov r1 , r4 mov r2 , num cmp r1 , num beq hexvar mov r0 , num cmp r3 , num bge hexvar mov r0 , num mov r3 , r0 and r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( v0 )
push { r4 , r5 , r6 , lr } sub sp , sp , num mov r5 , r1 mov r4 , r2 cmp r3 , num beq hexvar cmp r3 , num beq hexvar add sp , sp , num pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a1 move a1 , a2 move a2 , a3 lw v1 , hexvar ( sp ) sw v1 , hexvar ( sp ) addiu a3 , a0 , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rdi , rdi je hexvar mov rbx , rdx test rdx , rdx je hexvar mov qword ptr [ rsp + hexvar ] , rsi cmp qword ptr [ rip ] , num je hexvar mov r15 , rdi lea r13 , [ rbx + hexvar ] lea r12 , [ rbx + num ] lea r14 , [ rbx + hexvar ] lea rcx , [ rbx + hexvar ] lea r8 , [ rbx + hexvar ] mov rdi , r13 mov rsi , r12 mov rdx , r14 xor r9d , r9d xor eax , eax call hexvar mov ebp , eax test eax , eax jne hexvar mov r8 , qword ptr [ r13 ] mov rax , qword ptr [ r14 ] mov rcx , qword ptr [ r12 ] xorps xmm0 , xmm0 movups xmmword ptr [ rsp + hexvar ] , xmm0 mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , rax mov dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp ] , num mov ecx , num mov rdi , r15 mov rsi , qword ptr [ rsp + hexvar ] mov edx , num mov r9d , num xor eax , eax call hexvar mov ebp , eax test eax , eax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call qword ptr [ rip ] mov dword ptr [ rbx + num ] , eax lea rsi , [ rsp + hexvar ] mov rdi , rbx call hexvar mov ebp , eax test eax , eax je hexvar mov rdi , rbx call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi mov edi , hexvar push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] add esi , dword ptr [ esp + hexvar ] jmp hexvar lea esi , [ esi ] add ebp , eax cmp esi , ebp jbe hexvar mov eax , esi sub esp , num sub eax , ebp cmovs eax , edi push eax push ebp push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp eax , num jg hexvar mov eax , hexvar jne hexvar mov eax , ebp sub eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov dword ptr [ rsp + hexvar ] , esi mov qword ptr [ rsp + num ] , rdx mov rdx , qword ptr [ rip ] jmp rdx mov rax , qword ptr [ rsp + num ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + num ] mov rsi , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] call hexvar mov dword ptr [ rsp + num ] , eax test eax , eax setne r8b movzx eax , r8b mov edx , eax mov rdx , qword ptr [ rdx * num ] jmp rdx mov eax , dword ptr [ rsp + num ] mov dword ptr [ rsp + hexvar ] , eax mov rcx , qword ptr [ rip ] jmp rcx mov rax , qword ptr [ rip ] mov rcx , qword ptr [ rsp + num ] mov rsi , qword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rcx + num ] mov rdx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] call rax mov dword ptr [ rsp + num ] , eax test eax , eax setne r8b movzx eax , r8b mov ecx , eax mov rcx , qword ptr [ rcx * num ] jmp rcx mov eax , dword ptr [ rsp + num ] mov dword ptr [ rsp + hexvar ] , eax mov rcx , qword ptr [ rip ] jmp rcx mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , num mov dword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rip ] jmp rax mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
push rbx sub rsp , hexvar mov rbx , rdi mov dword ptr [ rsp ] , esi cmp esi , num je hexvar mov eax , hexvar cmp esi , num jne hexvar lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] jmp hexvar lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rax ] , rdx mov rsi , rsp mov rdi , rbx call hexvar cmp eax , - num je hexvar mov rdi , rbx mov esi , eax call hexvar add rsp , hexvar pop rbx ret
sub rsp , hexvar mov rax , qword ptr [ rsp + hexvar ] mov r10 , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp ] , r10 mov qword ptr [ rsp + num ] , rax call hexvar add rsp , hexvar ret
push { r4 , r5 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 ] cmp r3 , num bne hexvar ldr r3 , [ r1 , hexvar ] tst r3 , num beq hexvar ldr r3 , [ r1 , hexvar ] ldr lr , [ r4 , num ] cmp r3 , lr bhi hexvar ldr ip , [ r1 , hexvar ] add ip , r3 , ip cmp lr , ip bhs hexvar mov r2 , r1 add r1 , r4 , hexvar ldr ip , [ r0 , num ] str r1 , [ sp , hexvar ] add r1 , r4 , hexvar str r1 , [ sp , num ] add r1 , r4 , hexvar str r1 , [ sp , num ] add r1 , r4 , hexvar str r1 , [ sp ] sub r3 , lr , r3 ldr r1 , [ r4 , num ] ldr r5 , [ ip , hexvar ] blx r5 str r0 , [ r4 ] add sp , sp , hexvar pop { r4 , r5 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] movsx eax , byte ptr [ rsi ] cmp eax , hexvar je hexvar xor edx , edx mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar xor edx , edx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rcx ] mov rdi , rax call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
xor eax , eax test rdi , rdi je hexvar test esi , esi js hexvar cmp dword ptr [ rdi + num ] , esi jle hexvar movsxd rax , esi shl rax , num add rax , qword ptr [ rdi ] ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop sltu v0 , zero , v0 andi v0 , v0 , hexvar b hexvar nop move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , num ldr fp , [ pc , hexvar ] sub sp , sp , hexvar str r1 , [ sp , num ] ldr r1 , [ fp ] str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r6 , [ sp , hexvar ] str r0 , [ sp , hexvar ] bl hexvar ldr r1 , [ pc , hexvar ] str r0 , [ sp , hexvar ] bl hexvar subs r4 , r0 , num beq hexvar mov r5 , r6 mov r7 , r6 ldr sb , [ pc , hexvar ] ldr sl , [ pc , hexvar ] str sb , [ sp ] add r3 , sp , hexvar mov r2 , hexvar mov r1 , num mov r0 , r4 bl hexvar cmp r0 , num bne hexvar add r3 , sp , hexvar ldm r3 , { r2 , r3 } mov r1 , num mvn r0 , num cmp r3 , r1 cmpeq r2 , r0 bls hexvar mov r0 , r4 bl hexvar subs r8 , r0 , num beq hexvar mov r2 , num ldr r3 , [ r8 , num ] str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , r5 beq hexvar ldr r3 , [ sp , hexvar ] str r3 , [ r7 , r5 , lsl num ] add r5 , r5 , num mov r1 , sl mov r0 , num bl hexvar subs r4 , r0 , num bne hexvar orrs r3 , r5 , r6 beq hexvar ldr r3 , [ sp , num ] cmp r6 , num str r7 , [ r3 ] ldreq r3 , [ sp , hexvar ] mvnne r6 , num streq r5 , [ r3 ] b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mvn r6 , num ldr r3 , [ sp , num ] str r7 , [ r3 ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ fp ] mov r0 , r6 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } ldrbhs r6 , [ lr ] , hexvar andeq r0 , r0 , r0
push r15 push r14 mov r15 , rcx push r13 push r12 mov r13 , r8 push rbp push rbx mov rbp , rsi mov rbx , rdi mov r12 , rdx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] mov r14 , qword ptr [ rax + hexvar ] mov r10 , qword ptr [ r14 + hexvar ] test r10 , r10 je hexvar mov r9 , r8 xor eax , eax mov r8 , rcx mov ecx , num call r10
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi + hexvar ] , num je hexvar mov eax , r14d pop rbx pop r14 pop rbp ret
push r15 push r14 mov eax , hexvar push r13 push r12 mov r13 , rdi push rbp push rbx mov rbx , r8 mov r14 , rsi mov r15 , rdx sub rsp , hexvar test r8 , r8 cmove rbx , rax mov qword ptr [ rsp + num ] , rcx call hexvar mov r12d , dword ptr [ rax ] mov rbp , rax lea rax , [ rbx + num ] sub rsp , num mov r9d , dword ptr [ rbx + num ] push qword ptr [ rbx + hexvar ] mov r8d , dword ptr [ rbx ] push qword ptr [ rbx + hexvar ] mov rdx , r15 push rax mov rcx , qword ptr [ rsp + hexvar ] mov rsi , r14 mov rdi , r13 call hexvar mov dword ptr [ rbp ] , r12d add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm3 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] cmp ecx , num mov ecx , hexvar mov edx , hexvar cmove edx , ecx movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] movsd xmm3 , qword ptr [ rbp - hexvar ] movabs rsi , num mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rdi , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] movsd xmm3 , qword ptr [ rbp - hexvar ] movabs rsi , num mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lui v1 , hexvar lw ra , hexvar ( sp ) sw v1 , hexvar ( v0 )
str lr , [ sp , - num ] ! ldr ip , [ pc , hexvar ] ldr lr , [ pc , hexvar ] cmp r2 , num mov r3 , r0 movne r2 , lr mov r0 , r1 moveq r2 , ip ldr r1 , [ pc , hexvar ] pop { lr } b hexvar andeq r4 , r1 , r8 , lsr num ldrdeq r4 , r5 , [ r1 ] , -r8 andeq r4 , r1 , ip , lsl num
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr sl , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ sl ] subs r4 , r0 , num mov r5 , r2 mov r6 , r3 str ip , [ sp , hexvar ] ldrb r8 , [ sp , hexvar ] ldrb sb , [ sp , hexvar ] moveq fp , r4 moveq r7 , num beq hexvar mov r0 , r1 bl hexvar adds r7 , r0 , num mov fp , r0 movne r7 , num mov r1 , r8 mov r0 , r5 bl hexvar cmp r0 , num moveq r7 , num cmp r5 , r6 beq hexvar ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r3 , r2 addlo r2 , r3 , num strlo r2 , [ r0 , hexvar ] strblo sb , [ r3 ] bhs hexvar mov r1 , r8 mov r0 , r6 bl hexvar cmp r0 , num moveq r7 , num cmp fp , num ldrne r1 , [ fp , hexvar ] moveq r1 , r6 add r2 , sp , num mov r0 , r4 bl hexvar subs fp , r0 , num blt hexvar ldr r0 , [ sp , num ] movne r4 , num bne hexvar b hexvar add r4 , r4 , num cmp fp , r4 beq hexvar ldr r1 , [ r0 , r4 , lsl num ] lsl r3 , r4 , num cmp r1 , r5 cmpne r1 , r6 beq hexvar ldr r2 , [ pc , hexvar ] ldr r0 , [ r2 ] ldr r1 , [ r0 , hexvar ] ldr ip , [ r0 , hexvar ] cmp r1 , ip addlo ip , r1 , num strlo ip , [ r0 , hexvar ] strblo sb , [ r1 ] bhs hexvar ldr r0 , [ sp , num ] mov r1 , r8 ldr r0 , [ r0 , r3 ] bl hexvar add r4 , r4 , num cmp r0 , num moveq r7 , r0 cmp fp , r4 ldr r0 , [ sp , num ] bne hexvar bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sl ] mov r0 , r7 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ hexvar ] call hexvar call hexvar movabs rdi , hexvar mov rsi , rax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov al , num call hexvar xor ecx , ecx mov dword ptr [ rbp - hexvar ] , eax mov eax , ecx add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , hexvar lea edi , [ hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebx + hexvar ] sub edi , ebx mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] cmp edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx + hexvar ] add edx , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , - hexvar mov dword ptr [ ebp - hexvar ] , eax movsd xmm0 , qword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax + num ] , xmm0 movsd xmm0 , qword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax ] , xmm0 add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax test rdi , rdi je hexvar mov r15 , rsi test rsi , rsi je hexvar mov r14 , rcx test rcx , rcx je hexvar mov r12 , rdx mov rbx , rdi mov edi , dword ptr [ r14 ] call hexvar mov ebp , eax test eax , eax jne hexvar mov ecx , dword ptr [ r14 ] movsxd rax , ecx lea rsi , [ rax + rax * num ] shl rsi , num movsxd rdi , dword ptr [ rsi ] mov rax , r12 xor edx , edx div rdi mov ebp , hexvar test rdx , rdx je hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) addiu a3 , zero , num sw a2 , hexvar ( sp ) move a2 , zero sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push r12 push rbx cmp edi , num mov eax , hexvar mov r14d , hexvar cmove r14d , eax mov r15 , rsi test edi , edi mov eax , hexvar mov ebx , hexvar cmove ebx , eax mov eax , hexvar mov r12d , hexvar jmp hexvar mov eax , hexvar mov ebp , num nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov ecx , eax cmp eax , hexvar jle hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar mov eax , hexvar mov ebp , num jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar call hexvar mov qword ptr [ r15 ] , rax test rax , rax mov eax , hexvar cmove eax , r12d jmp hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar mov eax , r14d jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov eax , ebx cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar jmp hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov rdi , qword ptr [ r15 ] call hexvar mov qword ptr [ r15 ] , num jmp hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
cmp r0 , num beq hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 ] cmp r0 , r2 beq hexvar mvn r0 , num bx lr ldr r2 , [ r3 , num ] sub r2 , r2 , hexvar sub r2 , r2 , hexvar cmp r2 , hexvar bhi hexvar mov r2 , num ldr r1 , [ r3 , hexvar ] push { r4 , lr } cmp r1 , r2 andne r1 , r1 , num str r2 , [ r3 , hexvar ] str r2 , [ r3 , hexvar ] str r2 , [ r3 , hexvar ] str r2 , [ r3 , hexvar ] mov r4 , hexvar str r2 , [ r0 , hexvar ] str r2 , [ r0 , num ] str r2 , [ r0 , hexvar ] strne r1 , [ r0 , hexvar ] mov ip , num mov r0 , num mvn r1 , num add r2 , r3 , hexvar add r2 , r2 , num ldr lr , [ pc , hexvar ] str r2 , [ r3 , hexvar ] str r2 , [ r3 , hexvar ] str r2 , [ r3 , hexvar ] add r2 , r3 , hexvar str r0 , [ r3 , num ] str r0 , [ r3 , hexvar ] str r0 , [ r3 , hexvar ] str r0 , [ r3 , hexvar ] str r0 , [ r3 , hexvar ] str r4 , [ r3 , hexvar ] str lr , [ r3 , num ] str ip , [ r2 , hexvar ] str r1 , [ r2 , hexvar ] pop { r4 , pc } movwvs r8 , hexvar andeq r3 , r0 , r4 , lsr pc
test byte ptr [ esp + num ] , num mov eax , dword ptr [ esp + num ] mov edi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp + hexvar ] , eax mov ecx , dword ptr [ eax + num ] je hexvar cmp dword ptr [ ecx ] , num jne hexvar cmp dword ptr [ ecx + hexvar ] , num je hexvar mov edx , dword ptr [ esp + num ] mov eax , ebp call hexvar cmp byte ptr [ ebp + hexvar ] , hexvar je hexvar cmp dword ptr [ ebp + hexvar ] , hexvar jne hexvar mov byte ptr [ ebp + hexvar ] , num push eax push dword ptr [ ebp + hexvar ] push hexvar push ebp call dword ptr [ ebp + hexvar ] add dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp + hexvar ] , num add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebp + hexvar ] , edx mov byte ptr [ ebp + eax ] , hexvar mov eax , dword ptr [ esp + num ] mov byte ptr [ ebp + hexvar ] , hexvar mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ eax + hexvar ] mov eax , ebp call hexvar cmp byte ptr [ ebp + hexvar ] , hexvar je hexvar cmp dword ptr [ ebp + hexvar ] , hexvar jne hexvar mov byte ptr [ ebp + hexvar ] , num push ebx push dword ptr [ ebp + hexvar ] push hexvar push ebp call dword ptr [ ebp + hexvar ] add dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp + hexvar ] , num add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebp + hexvar ] , edx mov byte ptr [ ebp + eax ] , hexvar mov byte ptr [ ebp + hexvar ] , hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ ebp + hexvar ] , esi mov dword ptr [ ebp + hexvar ] , edi mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] jmp hexvar
mov eax , num cmp qword ptr [ rdi + hexvar ] , num jne hexvar push rbp push rbx sub rsp , num mov rbx , rdi mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov rbp , rax mov eax , num test rbp , rbp js hexvar mov rsi , rbp mov rdi , rbx call hexvar mov qword ptr [ rbx + hexvar ] , rax test rbp , rbp je hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , rax mov rdi , rbx call qword ptr [ rdx + hexvar ] mov rdx , rax mov eax , num test rdx , rdx js hexvar mov dword ptr [ rbx + hexvar ] , edx mov eax , num add rsp , num pop rbx pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rcx , rcx je hexvar mov rbx , rcx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rax , rcx shr rax , hexvar movabs r13 , hexvar cmove r13 , rcx lea rax , [ rdi + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rbp , [ rdi + hexvar ] nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov rcx , qword ptr [ r12 + hexvar ] mov eax , dword ptr [ r12 + hexvar ] mov dword ptr [ rsp ] , eax mov rdi , r14 mov rsi , r15 mov rdx , rbx mov r8 , qword ptr [ rsp + hexvar ] mov r9 , rbp call hexvar sub rbx , r13 add r14 , r13 add r15 , r13 cmp rbx , r13 cmovb r13 , rbx test rbx , rbx jne hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
sub esp , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax setne al movzx eax , al test eax , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num sete al movzx eax , al test eax , eax je hexvar mov eax , num jmp hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v0 , num ( v0 )
push rbp push rbx push rax mov rbx , rdi cmp dword ptr [ rdi + hexvar ] , esi jne hexvar mov ebp , edx mov rax , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rax + num ] mov byte ptr [ rdx ] , num mov rax , qword ptr [ rbx + hexvar ] movzx ecx , word ptr [ rax + hexvar ] mov word ptr [ rax + hexvar ] , cx mov dword ptr [ rbx + hexvar ] , num cmp dword ptr [ rbx ] , hexvar jne hexvar lea esi , [ rcx + num ] mov word ptr [ rax + hexvar ] , si mov byte ptr [ rdx + num ] , ch mov rax , qword ptr [ rbx + hexvar ] mov al , byte ptr [ rax + hexvar ] mov byte ptr [ rdx + num ] , al add dword ptr [ rbx + hexvar ] , num mov rax , qword ptr [ rbx + hexvar ] movzx ecx , word ptr [ rax + hexvar ] mov dword ptr [ rbx + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov word ptr [ rax + hexvar ] , cx xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov rdi , rbx mov esi , num call hexvar mov dword ptr [ rbx + hexvar ] , ebp mov rdi , rbx mov esi , hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax ]
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , hexvar mov rdi , rax mov rsi , rax movabs rdx , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rcx movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov esi , dword ptr [ rax + hexvar ] or esi , hexvar mov dword ptr [ rax + hexvar ] , esi mov rdi , qword ptr [ rbp - num ] call hexvar mov ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rcx add rsp , hexvar pop rbp ret
push rbx mov rbx , rdi mov eax , dword ptr [ rip ] test eax , eax jne hexvar mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al popfq add eax , num
push rbp push rbx sub rsp , hexvar xor ebp , ebp cmp byte ptr [ rip + hexvar ] , num jne hexvar test byte ptr [ rip + hexvar ] , num jne hexvar mov rbx , rsi test rdi , rdi jne hexvar mov rdi , rsp mov esi , hexvar call hexvar mov rdi , rax test rax , rax je hexvar call hexvar mov ebp , num test eax , eax jne hexvar xor ebp , ebp mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar mov eax , ebp add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] mov esi , dword ptr [ ebp - hexvar ] xor esi , edx mov edx , dword ptr [ ebp - hexvar ] xor edx , ecx or edx , esi sete bl and bl , num movzx eax , bl mov dword ptr [ ebp - hexvar ] , edx add esp , hexvar pop esi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov ax , word ptr [ rdi ] and ax , num movzx ecx , ax cmp ecx , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rax , qword ptr [ hexvar ] jne hexvar xor eax , eax mov cl , al mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rbp - num ] , rdx test cl , num jne hexvar jmp hexvar mov al , num test al , num jne hexvar jmp hexvar xor eax , eax mov cl , al test cl , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , hexvar xor edx , hexvar or ecx , esi or edx , hexvar xor ecx , hexvar and ecx , edx cmp ecx , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov ecx , dword ptr [ rax + hexvar ] and ecx , hexvar cmp ecx , num je hexvar movabs rdi , hexvar call hexvar mov rdi , rax mov al , num call hexvar jmp hexvar mov rdi , qword ptr [ rbp - num ] call hexvar cmp rax , qword ptr [ hexvar ] jne hexvar mov rdi , qword ptr [ rbp - num ] call hexvar movabs rdi , hexvar mov rsi , rax mov al , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov ecx , dword ptr [ rax + hexvar ] mov edx , ecx and edx , num xor ecx , num or edx , ecx mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov ecx , dword ptr [ rax + hexvar ] and ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + hexvar ] , num mov dword ptr [ edi + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push dword ptr [ esp + hexvar ] push num lea esi , [ esp + hexvar ] push esi push ecx call hexvar mov edi , dword ptr [ esp + hexvar ] add esp , hexvar test edx , edx mov ecx , edx mov dword ptr [ edi + hexvar ] , eax je hexvar sub esp , hexvar mov edx , eax lea eax , [ ebp - hexvar ] push num mov ebx , ebp call hexvar mov edi , eax lea eax , [ ebp - hexvar ] add esp , hexvar push num push eax push num call hexvar lea edx , [ ebp - hexvar ] push edi push hexvar push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] push num push esi push eax call hexvar mov ebx , eax mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] add edi , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , ebx mov dword ptr [ eax + hexvar ] , edx mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edi add esp , hexvar mov esi , dword ptr [ eax ] test esi , esi jne hexvar mov eax , dword ptr [ esp + hexvar ] xor edx , edx mov eax , dword ptr [ eax + hexvar ] call hexvar push ebx push eax lea eax , [ ebp - hexvar ] nop lea esi , [ esi ] push eax push num mov ebx , ebp call hexvar mov edi , dword ptr [ esp + hexvar ] add esp , hexvar jmp hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , hexvar cmp rdx , rax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov r9 , rax lea r8 , [ rip + hexvar ] mov ecx , hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , hexvar mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw zero , hexvar ( sp ) move a3 , zero move a2 , zero move a1 , zero jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , ( a2 )
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ num ] , num jne hexvar cmp qword ptr [ num ] , num jne hexvar movabs rdi , num call hexvar mov rdi , qword ptr [ num ] call hexvar cmp qword ptr [ num ] , num jne hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov qword ptr [ num ] , rax mov rdi , qword ptr [ num ] call hexvar xor eax , eax mov rcx , qword ptr [ num ] cmp rcx , num mov edx , num cmovne eax , edx add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edi xor edi , edi cmp eax , hexvar je hexvar cmp eax , num je hexvar sub esp , num mov edx , hexvar cmp eax , hexvar cmova eax , edx push num push dword ptr [ ebx + eax * num - hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) beqz a2 , hexvar move s0 , a2 lw v0 , num ( a0 )
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r1 mov r7 , r2 ldr r4 , [ r0 , hexvar ] ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r5 , [ r4 , hexvar ] add r3 , r5 , num str r3 , [ r4 , hexvar ] ldr r1 , [ r4 , hexvar ] cmp r3 , r1 bhi hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num strne r7 , [ r3 , r5 , lsl num ] ldrne r3 , [ r4 , hexvar ] addne r5 , r3 , r5 , lsl num strbne r6 , [ r5 , num ] pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov cl , al mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov rcx , qword ptr [ rbp - hexvar ] shr rcx , num mov dl , cl mov byte ptr [ rbp - hexvar ] , dl mov rcx , qword ptr [ rbp - hexvar ] shr rcx , hexvar mov dl , cl mov byte ptr [ rbp - hexvar ] , dl mov rcx , qword ptr [ rbp - hexvar ] shr rcx , hexvar mov dl , cl mov byte ptr [ rbp - hexvar ] , dl mov rcx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov cl , al mov byte ptr [ rbp - hexvar ] , cl mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov cl , al lea rax , [ rbp - hexvar ] add rax , num mov byte ptr [ rbp - hexvar ] , cl mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov dl , byte ptr [ rbp - hexvar ] mov byte ptr [ rcx ] , dl mov rsi , qword ptr [ rbp - hexvar ] shr rsi , num mov dil , sil mov byte ptr [ rbp - hexvar ] , dil mov rsi , qword ptr [ rbp - hexvar ] mov dil , sil mov byte ptr [ rbp - hexvar ] , dil mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , ecx pop rbp ret
push rbx mov edi , hexvar call hexvar test rax , rax mov rbx , rax je hexvar mov edi , hexvar call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , num add rax , hexvar mov qword ptr [ rbx ] , rax mov dword ptr [ rbx + num ] , hexvar mov rax , rbx pop rbx ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi call hexvar mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp + hexvar ] , eax movzx eax , byte ptr [ rbx + hexvar ] and eax , num cmp al , num je hexvar mov rsi , rbp mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + hexvar ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx + hexvar ] jge hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov byte ptr [ esp + hexvar ] , cl mov edx , dword ptr [ edx ] mov ecx , dword ptr [ eax ] mov dword ptr [ esp + num ] , eax nop lea esi , [ esi ] movzx eax , byte ptr [ edx ] cmp al , hexvar je hexvar jle hexvar cmp al , hexvar je hexvar cmp al , hexvar jne hexvar movzx eax , byte ptr [ edx + num ] lea ebp , [ edx + num ] lea edi , [ eax - hexvar ] mov byte ptr [ esp ] , al mov eax , edi cmp al , hexvar ja hexvar movzx eax , byte ptr [ esp ] add edx , num add esi , num add ecx , num and eax , hexvar mov byte ptr [ ecx - num ] , al movzx eax , byte ptr [ edx ] cmp al , hexvar jne hexvar cmp byte ptr [ esp + hexvar ] , num je hexvar movzx eax , byte ptr [ esp + hexvar ] mov ebp , edx jmp hexvar lea esi , [ esi ] mov byte ptr [ ecx ] , al add edx , num add esi , num add ecx , num jmp hexvar lea esi , [ esi ] movzx eax , byte ptr [ edx + num ] add edx , num cmp al , hexvar ja hexvar movzx edi , al mov ebp , dword ptr [ ebx + edi * num - hexvar ] add ebp , ebx jmp ebp lea esi , [ esi ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , num sw s4 , hexvar ( sp ) lw s4 , - hexvar ( gp ) sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v1 , ( s4 ) lw s1 , hexvar ( sp ) sw v1 , hexvar ( sp ) bne a2 , v0 , hexvar move s0 , a1 beqz a1 , hexvar move s5 , a0 move a0 , a1 lw t9 , - hexvar ( gp ) lui a1 , hexvar jalr t9 addiu a1 , a1 , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lui a2 , hexvar lw t9 , - hexvar ( gp ) addiu a3 , sp , hexvar addiu a2 , a2 , - hexvar move a1 , zero jalr t9 move a0 , s2 move a0 , s2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s2 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s3 , v0 lw t9 , - hexvar ( gp ) move s0 , zero jalr t9 move a0 , s2 slt v0 , s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s0 jalr t9 move a0 , s2 lw a1 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , hexvar pop esi pop ebp ret
push rax mov rax , qword ptr [ rdi ] mov r8 , qword ptr [ rax + hexvar ] test r8 , r8 je hexvar cmp rax , qword ptr [ rsi ] jne hexvar cmp rax , qword ptr [ rdx ] je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar pop rcx ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] add edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] add ecx , num adc edx , num mov dword ptr [ eax ] , ecx mov dword ptr [ eax + num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ esi ] mov esi , dword ptr [ esi + num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub eax , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] sbb edx , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v0 , hexvar ( v0 )
push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax test rcx , rcx je hexvar cmp esi , num mov ebp , esi mov rbx , rcx ja hexvar test byte ptr [ rdi + hexvar ] , num je hexvar mov eax , dword ptr [ rdi + hexvar ] mov rsi , rdx mov edx , hexvar add eax , num or rax , qword ptr [ rdi + hexvar ] cmp rax , rdx ja hexvar cmp rax , hexvar je hexvar mov rcx , rsp mov edx , num call hexvar jmp hexvar nop word ptr [ rax + rax ] mov esi , hexvar call hexvar cmp rax , - num je hexvar cmp ebp , num mov rcx , qword ptr [ rsp ] sbb edx , edx and edx , hexvar add edx , hexvar mov dword ptr [ rcx + hexvar ] , edx mov edx , dword ptr [ rbx + num ] neg edx and edx , hexvar neg edx shr edx , num sub rdx , num mov rsi , rdx shr rsi , num or rdx , rsi mov rsi , rdx shr rsi , num or rdx , rsi mov rsi , rdx shr rsi , num or rdx , rsi mov rsi , rdx shr rsi , num or rdx , rsi mov rsi , rdx shr rsi , hexvar or rdx , rsi add rdx , num mov dword ptr [ rcx + hexvar ] , edx mov rdx , qword ptr [ rbx ] mov qword ptr [ rcx + hexvar ] , rdx mov edx , dword ptr [ rbx + num ] mov dword ptr [ rcx + hexvar ] , edx mov rbx , qword ptr [ rsp + num ] xor rbx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rdi test rdi , rdi mov r14d , hexvar mov ebp , hexvar cmove ebp , r14d mov eax , hexvar jmp hexvar mov eax , ebp nop word ptr cs : [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov qword ptr [ rsp + num ] , rbx mov rax , qword ptr [ rsp + num ] mov eax , dword ptr [ rax ] mov dword ptr [ rsp + num ] , eax cmp dword ptr [ rsp + num ] , num mov eax , hexvar cmovle eax , r14d jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rbx + num ] movsxd rdx , dword ptr [ rsp + num ] shl rdx , num xor esi , esi call hexvar mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , num mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bxeq lr push { r4 , lr } mov r4 , r1 cmp r0 , num beq hexvar ldr r2 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r2 , [ r4 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar pop { r4 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw s0 , hexvar ( a0 )
sub esp , hexvar lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test al , num jne hexvar test al , num jne hexvar sub esp , hexvar push num mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push esi push eax push num call hexvar add esp , hexvar jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar jmp hexvar
push r13 push r12 xor r12d , r12d push rbp push rbx sub rsp , num cmp rsi , rcx jb hexvar mov rax , rsi mov rbp , rdi mov rsi , rdx sub rax , rcx mov rdx , rcx mov r13 , r8 lea rdi , [ rdi + rax ] mov rbx , rax call hexvar test eax , eax jne hexvar test r13 , r13 mov r12d , num je hexvar mov qword ptr [ r13 ] , rbp mov qword ptr [ r13 + num ] , rbx add rsp , num mov eax , r12d pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , num mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] sub eax , ecx setb dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] lea ecx , [ ecx + ecx * num ] lea eax , [ eax + ecx * num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp push rbx push rax mov rbx , rdi test rdi , rdi mov eax , hexvar mov ebp , hexvar cmove ebp , eax mov ecx , hexvar jmp hexvar mov ecx , ebp nop cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar xor eax , eax jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov rdi , qword ptr [ rbx ] call hexvar mov ecx , hexvar jmp hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rcx call hexvar mov rcx , qword ptr [ rbp - hexvar ] sub rcx , num sub rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rax mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp push edi mov edi , edx push esi push ebx mov ebp , eax call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ eax + hexvar ] cmp edx , edi jbe hexvar mov esi , dword ptr [ ebp + hexvar ] test esi , esi je hexvar or byte ptr [ esi + edi ] , cl add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar lb v1 , ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , zero , hexvar sw s1 , hexvar ( sp ) move s1 , a2 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beq v1 , v0 , hexvar sw gp , hexvar ( sp ) sb zero , ( a3 ) sw a0 , ( a1 ) lui v0 , hexvar sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) move t0 , zero ldc1 f4 , - hexvar ( v0 ) move a2 , zero move s0 , zero ldc1 f2 , hexvar ( sp ) addiu t1 , zero , num lb v0 , ( a0 ) ldc1 f0 , hexvar ( sp ) addiu v0 , v0 , - hexvar sltu v1 , t1 , v0 bnez v1 , hexvar c.eq.d f0 , f2 bc1f hexvar nop bnez v0 , hexvar nop sltiu v1 , a2 , hexvar addiu a0 , a0 , num bnez v1 , hexvar sltiu t0 , a2 , hexvar beqz t0 , hexvar addiu s0 , zero , num mtc1 v0 , f0 ldc1 f6 , hexvar ( sp ) addiu t0 , zero , num sw a0 , ( a1 ) cvt.d.w f0 , f0 madd.d f0 , f0 , f6 , f4 bnez a0 , hexvar sdc1 f0 , hexvar ( sp ) lbu v0 , ( a3 ) bnez v0 , hexvar lw v1 , hexvar ( sp ) ldc1 f0 , hexvar ( sp ) move v0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) sdc1 f0 , ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) addiu v1 , v0 , hexvar sw s0 , hexvar ( sp ) beq a1 , v1 , hexvar sw gp , hexvar ( sp ) lw v1 , hexvar ( a1 ) andi v1 , v1 , hexvar bnez v1 , hexvar lw ra , hexvar ( sp ) addiu v0 , v0 , hexvar beq a1 , v0 , hexvar lw t9 , - hexvar ( gp ) move s0 , a1 lw a0 , ( a1 ) lw s2 , hexvar ( a1 ) jalr t9 lw s1 , hexvar ( a1 ) lui a0 , hexvar lw v1 , hexvar ( a0 ) slt v1 , v1 , v0 beqz v1 , hexvar lui v1 , hexvar sw v0 , hexvar ( a0 ) lw a3 , hexvar ( s0 ) lui a2 , hexvar lw t1 , hexvar ( s0 ) lw v0 , hexvar ( v1 ) lw a1 , hexvar ( v1 ) lw t0 , hexvar ( a2 ) addu a0 , v0 , s1 addu a1 , a1 , s2 sltu v0 , a0 , v0 sw a0 , hexvar ( v1 ) addu v0 , v0 , a1 sltu a0 , t0 , a3 beqz a0 , hexvar sw v0 , hexvar ( v1 ) sw a3 , hexvar ( a2 ) sw t1 , hexvar ( a2 ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bne t0 , a3 , hexvar lw ra , hexvar ( sp ) lw v0 , hexvar ( a2 ) sltu v0 , v0 , t1 beqz v0 , hexvar lw s2 , hexvar ( sp ) sw a3 , hexvar ( a2 ) b hexvar sw t1 , hexvar ( a2 )
call hexvar add ecx , hexvar cmp byte ptr [ edx ] , num ja hexvar push esi push ebx sub esp , num movzx ebx , byte ptr [ edx ] mov esi , dword ptr [ ecx + ebx * num - hexvar ] add esi , ecx jmp esi nop lea esi , [ esi ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , num mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] lea rax , [ rax + rsi * num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] sub rax , rsi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov esi , num call hexvar mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setne r8b movzx r9d , r8b mov ecx , r9d mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( sp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) lw v0 , hexvar ( v0 ) lw a0 , hexvar ( sp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
movzx eax , byte ptr [ esp + hexvar ] jmp hexvar lea esi , [ esi ] cmp byte ptr [ esi + hexvar ] , num jne hexvar jmp hexvar nop and ecx , hexvar mov ebx , num cmp cl , hexvar cmove ecx , ebx mov ebx , edx and ebx , hexvar cmp bl , num sbb ebx , ebx and ebx , hexvar lea ecx , [ ecx + ebx + hexvar ] mov byte ptr [ esp + hexvar ] , cl jmp hexvar mov edx , dword ptr [ eax + hexvar ] lea eax , [ ebp - hexvar ] sub esp , num mov esi , dword ptr [ edi + num ] mov dword ptr [ esp + hexvar ] , edx push num push eax lea eax , [ ebp - hexvar ] push eax call hexvar push dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] push edx push esi push eax call hexvar add esp , hexvar push hexvar jmp hexvar
push { r0 , r1 , r2 , r3 } push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] ldr r5 , [ pc , hexvar ] sub sp , sp , num ldr ip , [ r4 ] ldr r3 , [ r5 ] ldr r6 , [ sp , hexvar ] mov r2 , num mov r1 , num ldr r0 , [ pc , hexvar ] str ip , [ sp , num ] bl hexvar add ip , sp , hexvar mov r2 , r6 mov r3 , ip ldr r0 , [ r5 ] mov r1 , num str ip , [ sp ] bl hexvar ldr r2 , [ sp , num ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , num pop { r4 , r5 , r6 , lr } add sp , sp , hexvar bx lr bl hexvar andeq r5 , r3 , r8 , lsl num strheq r6 , [ r3 ] , -r0 andeq r3 , r2 , ip , ror fp
push r14 push r13 mov r14 , rsi push r12 push rbp mov r12 , rdx push rbx mov rcx , qword ptr [ rsi + hexvar ] mov rbp , qword ptr [ rsi + hexvar ] mov rbx , qword ptr [ rdx + hexvar ] add rbp , rcx test rbx , rbx je hexvar cmp rcx , qword ptr [ rbx + hexvar ] jae hexvar jmp hexvar nop dword ptr [ rax ] cmp qword ptr [ rbx + hexvar ] , rcx ja hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar cmp rcx , rbp jb hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov r12d , num jmp hexvar mov r12d , num mov rbx , qword ptr [ rip + hexvar ] call hexvar mov edi , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r12 mov r8 , rcx mov rcx , rdx mov rdx , rax mov rsi , rbx call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] ldr r0 , [ r4 , num ] cmp r0 , num beq hexvar ldr r0 , [ r0 ] bl hexvar mov r5 , r0 ldr r3 , [ pc , hexvar ] ldr r0 , [ r4 , num ] ldr r3 , [ r3 ] cmp r3 , num ldrgt r3 , [ r0 , hexvar ] orrgt r3 , r3 , hexvar strgt r3 , [ r0 , hexvar ] bl hexvar ldr r1 , [ r4 , num ] mov r0 , r5 mov r2 , num bl hexvar mov r3 , num mov r0 , r5 str r3 , [ r4 , num ] pop { r4 , r5 , r6 , lr } b hexvar ldr r3 , [ pc , hexvar ] mov r2 , num ldr r1 , [ pc , hexvar ] ldr r4 , [ r3 ] bl hexvar ldr r3 , [ pc , hexvar ] mov r2 , r0 ldr r3 , [ r3 ] mov r0 , r4 mov r1 , num bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num popne { r4 , r5 , r6 , pc } mov r0 , num bl hexvar andeq sb , pc , r8 , lsr r3 andeq r8 , pc , r4 , asr num andeq sb , pc , r8 , lsl num andeq r1 , ip , r4 , ror num andeq sp , pc , r4 , ror num andeq sb , pc , ip , lsr num
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , edx cdq mov esi , hexvar idiv esi mov edi , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ edi + eax * num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx cdq idiv esi mov dword ptr [ ebp - hexvar ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - hexvar ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov eax , edx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi lea rax , [ rdi + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rsp + hexvar ] , eax mov eax , hexvar mov ebp , hexvar jmp hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , hexvar mov eax , hexvar cmove eax , ebp nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rax , qword ptr [ rbx + hexvar ] mov rsi , qword ptr [ rax + num ] mov rdi , rbx xor edx , edx xor ecx , ecx xor r8d , r8d xor r9d , r9d call hexvar mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rax ] , hexvar mov qword ptr [ rbx + hexvar ] , hexvar mov eax , hexvar jmp hexvar mov rdi , rbx mov esi , hexvar add rsp , hexvar pop rbx pop rbp jmp hexvar nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
lui gp , hexvar lw a3 , hexvar ( a1 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar andi v0 , a3 , hexvar move t4 , a2 lw v1 , hexvar ( sp ) lw t2 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw t0 , hexvar ( sp ) sw ra , hexvar ( sp ) bnez v0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] sub ecx , num mov ecx , ecx mov edx , ecx cmp rax , qword ptr [ rdx * num ] jbe hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , - num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , edx cdq mov esi , hexvar idiv esi mov dword ptr [ ebp - hexvar ] , ecx mov ecx , edx mov edx , num shl edx , cl mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov eax , ebx mov dword ptr [ ebp - hexvar ] , edx cdq idiv esi mov esi , dword ptr [ ebp - hexvar ] or esi , dword ptr [ edi + eax * num ] mov dword ptr [ edi + eax * num ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp push rbx push rax mov ebx , edi call hexvar mov dword ptr [ rsp + num ] , eax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov ecx , hexvar xor eax , eax nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , dword ptr [ rsp + num ] cmp ecx , ebx mov ecx , hexvar cmova ecx , ebp jmp hexvar mov edi , ebx call hexvar mov ecx , hexvar jmp hexvar add rsp , num pop rbx pop rbp ret
lbu v0 , ( a0 ) addiu v0 , v0 , - hexvar andi v0 , v0 , hexvar sltiu v1 , v0 , hexvar beqz v1 , hexvar lui v1 , hexvar sll v0 , v0 , num addiu v1 , v1 , hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) jr v0 nop lui v0 , hexvar lui a0 , hexvar addiu v0 , v0 , hexvar addiu v1 , zero , num sw v0 , hexvar ( a0 ) lui v0 , hexvar jr ra sw v1 , hexvar ( v0 ) lui v0 , hexvar lui a0 , hexvar addiu v0 , v0 , hexvar addiu v1 , zero , num sw v0 , hexvar ( a0 ) lui v0 , hexvar jr ra sw v1 , hexvar ( v0 ) lui v0 , hexvar lui a0 , hexvar addiu v0 , v0 , hexvar move v1 , zero sw v0 , hexvar ( a0 ) lui v0 , hexvar jr ra sw v1 , hexvar ( v0 ) lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a1 , hexvar sw s0 , hexvar ( sp ) addiu a2 , zero , num sw gp , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , a1 , hexvar move a1 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0
