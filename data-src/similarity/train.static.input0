push rbx mov rax , rsi mov rbx , rdi lea rsi , [ rdi + hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar xor eax , eax cmp dword ptr [ rbx + hexvar ] , num setne al pop rbx ret
push rbx mov rax , rsi mov rbx , rdi lea rsi , [ rdi + hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar xor eax , eax cmp dword ptr [ rbx + hexvar ] , num setne al pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar mov r1 , r3 ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbx mov rax , rsi mov rbx , rdi lea rsi , [ rdi + hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar xor eax , eax cmp dword ptr [ rbx + hexvar ] , num setne al pop rbx ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rdi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , r9 mov r10 , qword ptr [ rdx ] or r10 , qword ptr [ rsi ] movabs r11 , hexvar cmp r10 , r11 setae bl mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , bl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , - num xor edx , edx mov rsi , qword ptr [ rbp - hexvar ] div qword ptr [ rsi ] cmp rcx , rax jbe hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] mov rsi , qword ptr [ rbp - hexvar ] imul rdx , qword ptr [ rsi ] mov rsi , rdx call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - num ] pop rbx pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , edi je hexvar mov eax , esi or eax , edi je hexvar test ecx , ecx jne hexvar test edi , edi jne hexvar imul edi , ebp mov eax , ebp imul ecx , esi mul esi add ecx , edi add ecx , edx mov edx , dword ptr [ esp + hexvar ] mov edi , eax test edx , edx je hexvar test ecx , ecx jne hexvar test eax , eax js hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar test edi , edi je hexvar mov dword ptr [ esp + num ] , eax sub esp , hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , esi je hexvar mov eax , edi or eax , esi je hexvar test ecx , ecx jne hexvar test esi , esi jne hexvar imul esi , ebx mov eax , ebx mov dword ptr [ esp + hexvar ] , ebp imul ecx , edi mul edi add ecx , esi add edx , ecx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx add esp , hexvar pop ebx pop esi pop edi pop ebp jmp hexvar mov esi , esi lea edi , [ edi ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ebx mov eax , ebx mul edi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mul dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , edx xor edx , edx add eax , dword ptr [ esp + hexvar ] adc edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar sub esp , hexvar push num mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , edi je hexvar mov eax , esi or eax , edi je hexvar test ecx , ecx jne hexvar test edi , edi jne hexvar imul edi , ebp mov eax , ebp imul ecx , esi mul esi add ecx , edi add ecx , edx mov edx , dword ptr [ esp + hexvar ] mov edi , eax test edx , edx je hexvar test ecx , ecx jne hexvar test eax , eax js hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar test edi , edi je hexvar mov dword ptr [ esp + num ] , eax sub esp , hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi mov rax , qword ptr [ rdi + num ] lea r9 , [ rsp + hexvar ] mov r8d , hexvar mov esi , hexvar mov edx , hexvar mov ecx , num call qword ptr [ rax + hexvar ] mov rbx , rax cmp dword ptr [ rsp + hexvar ] , num je hexvar cmp rbx , num jg hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov r15 , qword ptr [ r14 + hexvar ] movzx r12d , byte ptr [ r15 + num ] shl r12 , num movzx eax , byte ptr [ r15 + num ] lea rcx , [ r12 + rax ] add rcx , num cmp rbx , rcx jne hexvar or r12 , rax mov ebx , num test r12d , r12d je hexvar movzx eax , byte ptr [ r15 ] mov qword ptr [ rsp + hexvar ] , rax movzx ebp , byte ptr [ r15 + num ] movzx eax , byte ptr [ r15 + num ] mov qword ptr [ rsp + hexvar ] , rax movzx eax , byte ptr [ r15 + num ] mov qword ptr [ rsp + hexvar ] , rax mov r13 , qword ptr [ r14 + hexvar ] cmp dword ptr [ r13 + hexvar ] , num je hexvar mov rdi , qword ptr [ r14 + hexvar ] mov eax , dword ptr [ rdi + hexvar ] test al , num je hexvar test eax , hexvar jne hexvar mov rsi , r13 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar mov rdi , r14 mov esi , num call hexvar mov dword ptr [ r14 + hexvar ] , num mov ebx , hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar lw v1 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , hexvar sw s1 , hexvar ( sp ) addiu a3 , zero , - num sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar lw s1 , - hexvar ( gp ) addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw v0 , ( s1 ) lw t9 , hexvar ( v1 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi mov rax , qword ptr [ rdi + num ] lea r9 , [ rsp + hexvar ] mov r8d , hexvar mov esi , hexvar mov edx , hexvar mov ecx , num call qword ptr [ rax + hexvar ] mov rbx , rax cmp dword ptr [ rsp + hexvar ] , num je hexvar cmp rbx , num jg hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov r15 , qword ptr [ r14 + hexvar ] movzx r12d , byte ptr [ r15 + num ] shl r12 , num movzx eax , byte ptr [ r15 + num ] lea rcx , [ r12 + rax ] add rcx , num cmp rbx , rcx jne hexvar or r12 , rax mov ebx , num test r12d , r12d je hexvar movzx eax , byte ptr [ r15 ] mov qword ptr [ rsp + hexvar ] , rax movzx ebp , byte ptr [ r15 + num ] movzx eax , byte ptr [ r15 + num ] mov qword ptr [ rsp + hexvar ] , rax movzx eax , byte ptr [ r15 + num ] mov qword ptr [ rsp + hexvar ] , rax mov r13 , qword ptr [ r14 + hexvar ] cmp dword ptr [ r13 + hexvar ] , num je hexvar mov rdi , qword ptr [ r14 + hexvar ] mov eax , dword ptr [ rdi + hexvar ] test al , num je hexvar test eax , hexvar jne hexvar mov rsi , r13 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar mov rdi , r14 mov esi , num call hexvar mov dword ptr [ r14 + hexvar ] , num mov ebx , hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdi mov rax , qword ptr [ rdi + num ] lea r9 , [ rsp + hexvar ] mov r8d , hexvar mov esi , hexvar mov edx , hexvar mov ecx , num call qword ptr [ rax + hexvar ] mov rbx , rax cmp dword ptr [ rsp + hexvar ] , num je hexvar cmp rbx , num jg hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov r15 , qword ptr [ r14 + hexvar ] movzx r12d , byte ptr [ r15 + num ] shl r12 , num movzx eax , byte ptr [ r15 + num ] lea rcx , [ r12 + rax ] add rcx , num cmp rbx , rcx jne hexvar or r12 , rax mov ebx , num test r12d , r12d je hexvar movzx eax , byte ptr [ r15 + num ] mov qword ptr [ rsp + hexvar ] , rax movzx ebp , byte ptr [ r15 ] movzx eax , byte ptr [ r15 + num ] mov qword ptr [ rsp + hexvar ] , rax movzx eax , byte ptr [ r15 + num ] mov qword ptr [ rsp + hexvar ] , rax mov r13 , qword ptr [ r14 + hexvar ] cmp dword ptr [ r13 + hexvar ] , num je hexvar mov rdi , qword ptr [ r14 + hexvar ] mov eax , dword ptr [ rdi + hexvar ] test al , num je hexvar test eax , hexvar jne hexvar mov rsi , r13 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar mov rdi , r14 mov esi , num call hexvar mov dword ptr [ r14 + hexvar ] , num mov ebx , hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num call hexvar test eax , eax je hexvar mov esi , eax lea eax , [ ebx + hexvar ] sub esp , num push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov edx , dword ptr [ esi + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , eax test edx , edx je hexvar mov ebx , dword ptr [ esi + hexvar ] test ebx , ebx je hexvar mov ecx , dword ptr [ esi + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test eax , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push rbx call hexvar test rax , rax je hexvar mov rbx , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx cmove rbx , rcx test rax , rax cmove rbx , rax mov rax , rbx pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num call hexvar test eax , eax je hexvar mov esi , eax lea eax , [ ebx + hexvar ] sub esp , num push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov edx , dword ptr [ esi + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , eax test edx , edx je hexvar mov ebx , dword ptr [ esi + hexvar ] test ebx , ebx je hexvar mov ecx , dword ptr [ esi + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test eax , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num call hexvar test eax , eax je hexvar mov esi , eax lea eax , [ ebx + hexvar ] sub esp , num push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov edx , dword ptr [ esi + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , eax test edx , edx je hexvar mov ebx , dword ptr [ esi + hexvar ] test ebx , ebx je hexvar mov ecx , dword ptr [ esi + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test eax , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar cmp eax , dword ptr [ ebp - hexvar ] ja hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , cl movzx eax , byte ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , eax mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , - num cmp rax , qword ptr [ rbp - hexvar ] ja hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar xor edi , edi call hexvar test al , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , cl movzx edx , byte ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov r13 , rsi mov r12 , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax lea rax , [ rsp + num ] test rdi , rdi cmove rbx , rax mov rdi , rbx call hexvar mov rbp , rax cmp rax , - num jbe hexvar test r12 , r12 je hexvar mov edi , num call hexvar test al , al jne hexvar movzx eax , byte ptr [ r13 ] mov dword ptr [ rbx ] , eax mov ebp , num mov rax , rbp mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push { r4 , r5 , r6 , r7 , lr } ldr r4 , [ pc , hexvar ] subs r7 , r1 , num ldr r1 , [ r4 ] sub sp , sp , hexvar str r1 , [ sp , num ] beq hexvar cmp r2 , num mvneq r5 , num bne hexvar ldr r2 , [ sp , num ] ldr r3 , [ r4 ] mov r0 , r5 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw a3 , hexvar ( sp ) move a3 , a1 lui a1 , hexvar sw a2 , hexvar ( sp ) sw ra , hexvar ( sp ) move a2 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) bal hexvar addiu a1 , a1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw a3 , hexvar ( sp ) move a3 , a1 lui a1 , hexvar sw a2 , hexvar ( sp ) sw ra , hexvar ( sp ) move a2 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) bal hexvar addiu a1 , a1 , - hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , hexvar je hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov edx , dword ptr [ esi + num ] cmp dword ptr [ edx ] , num jne hexvar add esp , num add edx , num mov eax , edx pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , hexvar je hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov edx , dword ptr [ esi + num ] cmp dword ptr [ edx ] , num jne hexvar add esp , num add edx , num mov eax , edx pop ebx pop esi ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar jmp qword ptr [ rcx * num + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + hexvar ] add rbx , num mov rax , rbx pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , hexvar je hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov edx , dword ptr [ esi + num ] cmp dword ptr [ edx ] , num jne hexvar add esp , num add edx , num mov eax , edx pop ebx pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] sub esi , dword ptr [ ebp + hexvar ] add esi , num add esi , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , edx cdq mov esi , num idiv esi mov esi , dword ptr [ ebp - hexvar ] sub esi , edx add esi , num sub esi , num mov eax , esi mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] sub ecx , dword ptr [ ebp + hexvar ] add ecx , num mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add eax , ecx cdq mov esi , num idiv esi mov esi , dword ptr [ ebp - hexvar ] sub esi , edx add esi , num sub esi , num mov eax , esi add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] lea edx , [ rax + num ] mov eax , dword ptr [ rbp - num ] lea ecx , [ rdx + rax ] mov edx , hexvar mov eax , ecx imul edx lea eax , [ rdx + rcx ] sar eax , num mov edx , eax mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx mov edx , eax shl edx , num sub edx , eax mov eax , ecx sub eax , edx mov edx , dword ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add eax , num pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp + num ] sub eax , dword ptr [ ebp + hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp - num ] lea ecx , [ edx + eax ] mov edx , hexvar mov eax , ecx imul edx lea eax , [ edx + ecx ] sar eax , num mov edx , eax mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx mov edx , eax shl edx , num sub edx , eax mov eax , ecx sub eax , edx mov edx , dword ptr [ ebp + num ] sub edx , eax mov eax , edx add eax , num leave ret
mov eax , dword ptr [ esp + num ] call hexvar add edx , hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar jbe hexvar cmp eax , hexvar sbb eax , eax and eax , hexvar add eax , hexvar mov dword ptr [ edx + hexvar ] , eax ret
sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v1 , zero , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar sltiu a0 , a0 , hexvar bnez a0 , hexvar addiu v1 , zero , hexvar lui v1 , num addiu v1 , v1 , num lui a0 , hexvar move v0 , v1 jr ra sw v1 , hexvar ( a0 ) b hexvar addiu v1 , zero , hexvar b hexvar addiu v1 , zero , hexvar b hexvar addiu v1 , zero , hexvar b hexvar addiu v1 , zero , hexvar
cmp r0 , hexvar bls hexvar ldr r2 , [ pc , hexvar ] mov r3 , num ldr r1 , [ r2 ] , num cmp r1 , r0 bhs hexvar add r3 , r3 , num cmp r3 , hexvar bne hexvar ldr r2 , [ pc , hexvar ] add r3 , r2 , r3 , lsl num ldr r0 , [ r3 , hexvar ] ldr r3 , [ pc , hexvar ] str r0 , [ r3 ] bx lr mov r3 , num b hexvar ldrdeq r8 , sb , [ fp ] , -r4 andeq r8 , fp , ip , lsr pc andeq lr , lr , r4 , asr num
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar setb cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] sub rax , rdx setbe sil movzx ecx , sil mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ hexvar ] , rcx mov rax , qword ptr [ hexvar ] pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar lea esi , [ ebp - num ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num ja hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp dword ptr [ ebp - num ] , - num jae hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) addiu a3 , sp , hexvar lw s0 , - hexvar ( gp ) addiu v0 , v0 , - hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar sw s2 , hexvar ( sp ) move s2 , a1 move a1 , zero sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) lw v1 , ( s0 ) sw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) bal hexvar nop sltiu v0 , v0 , num beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) addiu a1 , zero , - num lw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar movn v0 , a1 , a2 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num move a0 , zero jalr t9 move a1 , s2 lui a2 , hexvar lw gp , hexvar ( sp ) move a1 , zero addiu a2 , a2 , - hexvar sw v0 , hexvar ( sp ) addiu a0 , zero , num lw t9 , - hexvar ( gp )
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ r4 ] str r3 , [ sp ] mov r6 , r1 add r3 , sp , num mov r2 , hexvar mov r1 , num str ip , [ sp , hexvar ] mov r5 , r0 bl hexvar cmp r0 , num bhi hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] ldr r0 , [ sp , num ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push edi push esi mov esi , eax push ebx mov edi , edx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ ebx - hexvar ] push eax lea eax , [ esp + hexvar ] push eax push hexvar push num push esi call hexvar add esp , hexvar cmp eax , num jbe hexvar sub esp , num push num push edi push num call hexvar mov dword ptr [ esp ] , eax lea eax , [ ebx - hexvar ] push esi push eax push num push num call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , dword ptr [ esp + num ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 ] b hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push r14 push rbx push rax test rdi , rdi je hexvar mov r14 , rdi mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar mov qword ptr [ r14 ] , num add rsp , num pop rbx pop r14 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num jmp hexvar nop add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw s1 , ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] sub eax , ecx setb dl movzx ecx , dl mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov eax , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] add eax , ecx mov edx , eax movzx eax , byte ptr [ rdx + hexvar ] mov edx , eax mov rsi , qword ptr [ rbp - hexvar ] add rsi , rdx mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , num call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] sub eax , ecx setb dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax + ecx + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add ecx , eax adc edx , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax mov dword ptr [ esi + hexvar ] , num call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax + ecx + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add ecx , eax adc edx , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax mov dword ptr [ esi + hexvar ] , num call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - num ] , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] add eax , edx mov edx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movzx eax , al add qword ptr [ rbp - hexvar ] , rax add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - hexvar ] jb hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar nop leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar jalr t9 addiu a1 , a1 , - hexvar lw gp , hexvar ( sp ) sw zero , ( s0 ) lw s0 , - hexvar ( gp ) lw a0 , ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop sw zero , ( s0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rax mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov esi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num pop rax ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar jalr t9 addiu a1 , a1 , hexvar lw gp , hexvar ( sp ) sw zero , ( s0 ) lw s0 , - hexvar ( gp ) lw a0 , ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop sw zero , ( s0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw zero , ( v0 ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw zero , ( v0 ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi mov edi , hexvar push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] add esi , dword ptr [ esp + hexvar ] jmp hexvar lea esi , [ esi ] add ebp , eax cmp esi , ebp jbe hexvar mov eax , esi sub esp , num sub eax , ebp cmovs eax , edi push eax push ebp push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp eax , num jg hexvar mov eax , hexvar jne hexvar mov eax , ebp sub eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 mov r14 , rsi push r13 push r12 mov r13d , edi push rbp push rbx lea rbp , [ rsi + rdx ] mov rbx , rsi movabs r12 , hexvar sub rsp , num mov rdx , rbp mov rsi , rbx mov edi , r13d sub rdx , rbx cmp rdx , r12 cmova rdx , r12 mov r15 , rdx call hexvar cmp rax , num jle hexvar add rbx , rax cmp rbx , rbp jb hexvar add rsp , num mov rax , rbx sub rax , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 mov r14 , rsi push r13 push r12 mov r13d , edi push rbp push rbx lea rbp , [ rsi + rdx ] mov rbx , rsi movabs r12 , hexvar sub rsp , num mov rdx , rbp mov rsi , rbx mov edi , r13d sub rdx , rbx cmp rdx , r12 cmova rdx , r12 mov r15 , rdx call hexvar cmp rax , num jle hexvar add rbx , rax cmp rbx , rbp jb hexvar add rsp , num mov rax , rbx sub rax , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - hexvar ] mvn r3 , hexvar str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] sub r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 movlo r3 , r2 movhs r3 , r3 str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bgt hexvar ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] cmp r3 , hexvar bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bge hexvar mvn r3 , hexvar str r3 , [ fp , - hexvar ] b hexvar mvn r3 , num b hexvar ldr r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 blo hexvar b hexvar mov r0 , r0 ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] sub r3 , r2 , r3 mov r0 , r3 sub sp , fp , num pop { fp , pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ sp ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 )
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push hexvar lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov eax , num add esp , num pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ sp ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
mov rdx , qword ptr [ rdi ] test rdx , rdx je hexvar xor eax , eax nop word ptr [ rax + rax ] mov rcx , rdx mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx je hexvar mov rdi , qword ptr [ rcx ] cmp rdi , qword ptr [ rsi ] jne hexvar mov rax , rcx mov rdx , qword ptr [ rcx ] cmp rdx , qword ptr [ rsi ] cmove rax , rcx ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] test esi , esi jne hexvar jmp hexvar lea esi , [ esi ] test eax , eax je hexvar mov esi , edi sub esp , num mov edi , dword ptr [ esi + hexvar ] push num push ebp push esi call hexvar add esp , hexvar test edi , edi jne hexvar test eax , eax cmovne esi , edi add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] test esi , esi jne hexvar jmp hexvar lea esi , [ esi ] test eax , eax je hexvar mov esi , edi sub esp , num mov edi , dword ptr [ esi + hexvar ] push num push ebp push esi call hexvar add esp , hexvar test edi , edi jne hexvar test eax , eax cmovne esi , edi add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , ( a0 )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov byte ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8d , dword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov ecx , eax mov dword ptr [ rbp - hexvar ] , r8d mov r8d , eax mov r9d , hexvar lea r10 , [ rbp - hexvar ] mov qword ptr [ rsp ] , r10 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rsp + num ] , r10 mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rsp + hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] xor ebx , ebx mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
sub rsp , hexvar mov r9 , rcx xor ecx , ecx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov byte ptr [ rsp + hexvar ] , num push r8 lea r8 , [ rsp + hexvar ] call hexvar pop rdx pop rcx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , num call hexvar add esp , hexvar ret
push rbx mov rcx , rdi cmp ecx , hexvar ja hexvar mov ebx , hexvar mov eax , ecx jmp qword ptr [ rax * num + hexvar ] mov ebx , hexvar mov rax , rbx pop rbx ret
push rbx mov rcx , rdi cmp ecx , hexvar ja hexvar mov ebx , hexvar mov eax , ecx jmp qword ptr [ rax * num + hexvar ] mov ebx , hexvar mov rax , rbx pop rbx ret
push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , hexvar ja hexvar mov eax , dword ptr [ esp + hexvar ] shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push rbx mov rcx , rdi cmp ecx , hexvar ja hexvar mov ebx , hexvar mov eax , ecx jmp qword ptr [ rax * num + hexvar ] mov ebx , hexvar mov rax , rbx pop rbx ret
push { r4 , r5 , r6 , lr } sub sp , sp , num mov r5 , r1 mov r4 , r2 cmp r3 , num beq hexvar cmp r3 , num beq hexvar add sp , sp , num pop { r4 , r5 , r6 , pc }
push { r4 , r5 , r6 , lr } cmp r3 , num sub sp , sp , num mov r4 , r2 beq hexvar cmp r3 , num bne hexvar mov r5 , r1 ldr r3 , [ r2 , hexvar ] ldr r6 , [ r3 ] bl hexvar ldr r2 , [ r4 , num ] mov r3 , r6 str r2 , [ sp ] mov r0 , r5 ldr r2 , [ pc , hexvar ] mov r1 , num bl hexvar add sp , sp , num pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov ecx , dword ptr [ rbp - hexvar ] test ecx , ecx mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar cmp eax , num je hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , - num je hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar and al , num movzx ecx , al mov al , byte ptr [ ebp - num ] and al , num movzx edx , al and edx , ecx cmp edx , num setne al and al , num mov byte ptr [ ebp - num ] , al call hexvar and al , num movzx ecx , al mov dword ptr [ ebp - hexvar ] , ecx mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov edx , dword ptr [ ebp - hexvar ] and ecx , edx cmp ecx , num setne al and al , num mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - num ] , al jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ hexvar ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax ] , - num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar and al , num movzx ecx , al mov al , byte ptr [ ebp - num ] and al , num movzx edx , al and edx , ecx cmp edx , num setne al and al , num mov byte ptr [ ebp - num ] , al call hexvar and al , num movzx ecx , al mov al , byte ptr [ ebp - num ] and al , num movzx edx , al and edx , ecx cmp edx , num setne al and al , num mov byte ptr [ ebp - num ] , al mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , - num jne hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar movzx edx , byte ptr [ rbp - num ] movzx eax , al and eax , edx test eax , eax setne al mov byte ptr [ rbp - num ] , al call hexvar movzx edx , byte ptr [ rbp - num ] movzx eax , al and eax , edx test eax , eax setne al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar jmp hexvar nop movzx eax , byte ptr [ rbp - num ] leave ret
addiu sp , sp , - hexvar lui gp , hexvar addiu v0 , zero , - num sw s3 , hexvar ( sp ) lui s3 , hexvar sw s2 , hexvar ( sp ) move s2 , a0 addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw v0 , ( s2 )
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , hexvar mov r4 , r1 mov r8 , r3 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs r7 , r2 , num beq hexvar mov r6 , r0 mov r2 , num str r2 , [ sp ] mov r3 , r2 mov r1 , r7 ldr r0 , [ r4 , hexvar ] bl hexvar subs r5 , r0 , num beq hexvar ldrb r3 , [ r5 , hexvar ] sub r3 , r3 , num cmp r3 , num bls hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldrb r3 , [ r5 , hexvar ] sub r3 , r3 , num cmp r3 , num movhi r0 , num bls hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax test edi , edi je hexvar sub esp , hexvar push num push num push num push edi push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ ebp - hexvar ] , eax je hexvar movzx eax , byte ptr [ eax + hexvar ] mov ecx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ esi + hexvar ] lea edx , [ eax - num ] cmp dl , num jbe hexvar mov edx , dword ptr [ ebp - hexvar ] or edx , ecx je hexvar sub eax , num cmp al , num jbe hexvar mov eax , num jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ esi + hexvar ] or eax , dword ptr [ esi + hexvar ] jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , num mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , hexvar mov r4 , r1 mov r8 , r3 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs r7 , r2 , num beq hexvar mov r6 , r0 mov r2 , num str r2 , [ sp ] mov r3 , r2 mov r1 , r7 ldr r0 , [ r4 , hexvar ] bl hexvar subs r5 , r0 , num beq hexvar ldrb r3 , [ r5 , hexvar ] sub r3 , r3 , num cmp r3 , num bls hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldrb r3 , [ r5 , hexvar ] sub r3 , r3 , num cmp r3 , num movhi r0 , num bls hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s1 ) lw s4 , hexvar ( sp ) lw s5 , hexvar ( sp ) sw v0 , hexvar ( sp ) beqz a2 , hexvar lw t9 , - hexvar ( gp ) move s6 , a0 lw a0 , hexvar ( a1 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar lea esi , [ ebx - hexvar ] sub esp , num push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] sub esp , num mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx pop esi ret
push rbp push r15 push r14 push r12 push rbx mov r14 , r8 mov r15d , ecx mov r12d , edx mov ebp , esi mov ebx , edi cmp qword ptr [ rip + hexvar ] , num jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov dword ptr [ rax ] , ebx mov dword ptr [ rax + num ] , ebp mov dword ptr [ rax + num ] , r12d mov dword ptr [ rax + hexvar ] , r15d mov qword ptr [ rax + hexvar ] , r14 mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax call hexvar mov eax , num jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov r14 , r8 mov r15d , ecx mov r12d , edx mov ebp , esi mov ebx , edi cmp qword ptr [ rip + hexvar ] , num jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov dword ptr [ rax ] , ebx mov dword ptr [ rax + num ] , ebp mov dword ptr [ rax + num ] , r12d mov dword ptr [ rax + hexvar ] , r15d mov qword ptr [ rax + hexvar ] , r14 mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax call hexvar mov eax , num jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar lea esi , [ ebx - hexvar ] sub esp , num push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar push esi push hexvar push hexvar push num call hexvar add esp , hexvar xor eax , eax add esp , num pop ebx pop esi ret
push rbp push r14 push rbx sub rsp , hexvar mov r14 , rcx mov qword ptr [ rsp + num ] , num test rcx , rcx lea rbx , [ rsp + num ] cmove rbx , rcx mov rcx , rbx call hexvar mov ebp , eax test rbx , rbx je hexvar test ebp , ebp je hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r14 call hexvar mov ebp , eax mov rdi , qword ptr [ rsp + num ] mov esi , hexvar call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov r14 , rcx mov qword ptr [ rsp + num ] , num test rcx , rcx lea rbx , [ rsp + num ] cmove rbx , rcx mov rcx , rbx call hexvar mov ebp , eax test rbx , rbx je hexvar test ebp , ebp je hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r14 call hexvar mov ebp , eax mov rdi , qword ptr [ rsp + num ] mov esi , hexvar call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov r14 , rcx mov qword ptr [ rsp + num ] , num test rcx , rcx lea rbx , [ rsp + num ] cmove rbx , rcx mov rcx , rbx call hexvar mov ebp , eax test rbx , rbx je hexvar test ebp , ebp je hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r14 call hexvar mov ebp , eax mov rdi , qword ptr [ rsp + num ] mov esi , hexvar call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num cmp dword ptr [ esp ] , num je hexvar lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + num ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - num ] movabs rsi , num mov al , num call hexvar mov rsi , qword ptr [ rbp - num ] mov dword ptr [ rsi + hexvar ] , num mov rsi , qword ptr [ rbp - num ] mov dword ptr [ rsi + hexvar ] , num mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov rsi , qword ptr [ rbp - num ] mov dword ptr [ rsi + hexvar ] , num mov rsi , qword ptr [ rbp - num ] mov dword ptr [ rsi + hexvar ] , num mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov rsi , qword ptr [ rbp - num ] mov dword ptr [ rsi + hexvar ] , num mov rsi , qword ptr [ rbp - num ] mov dword ptr [ rsi + hexvar ] , num mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num ] jmp rdi mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , num mov edx , num mov r8d , num xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rdi , qword ptr [ rbp - num ] movabs rsi , num mov al , num call hexvar mov rsi , qword ptr [ rbp - num ] mov dword ptr [ rsi + hexvar ] , num mov rsi , qword ptr [ rbp - num ] mov dword ptr [ rsi + hexvar ] , num mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
lui v0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar lbu v0 , hexvar ( v0 ) addiu gp , gp , - hexvar sw ra , hexvar ( sp ) bnez v0 , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) bal hexvar lw a0 , ( v0 ) bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) b hexvar addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num
push ebp mov ebp , esp sub esp , num test byte ptr [ hexvar ] , num jne hexvar call hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov dword ptr [ esp ] , num call hexvar jmp hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lbu v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num test byte ptr [ hexvar ] , num je hexvar call hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov dword ptr [ esp ] , num call hexvar jmp hexvar add esp , num pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r4 , r1 ldr r1 , [ pc , hexvar ] sub sp , sp , hexvar ldr r1 , [ r1 ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] mov r6 , r2 str r3 , [ sp , hexvar ] str r1 , [ sp , hexvar ] mov r5 , r0 bl hexvar cmp r0 , num sbcs r3 , r1 , num bge hexvar orrs r3 , r0 , r1 beq hexvar ldr fp , [ pc , hexvar ] mov r3 , num str r3 , [ fp , num ] ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , esi lea ecx , [ ebp - num ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax mov edi , edx mov ebp , ecx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar add esp , hexvar test edx , edx jle hexvar sub esp , num push ebp push esi call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ ebx + hexvar ] cmp edx , hexvar ja hexvar mov eax , ebx add eax , dword ptr [ ebx + edx * num - hexvar ] jmp eax test edx , edx js hexvar cmp eax , num ja hexvar or edx , eax je hexvar mov dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] mov edx , eax mov eax , edx and eax , num mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor eax , eax mov r9d , eax lea r8 , [ rbp - hexvar ] mov edx , eax call hexvar mov byte ptr [ rbp - num ] , al mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num add rsp , num xor eax , eax pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , eax mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , num add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 lw s1 , num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num leave ret
call hexvar add eax , hexvar mov ecx , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] lea eax , [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] jmp hexvar nop lea esi , [ esi ]
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ ecx ] mov esi , dword ptr [ eax + edx * num ] test esi , esi je hexvar lea eax , [ ebx + hexvar ] sub esp , num add edx , num mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ecx ] , edx mov dword ptr [ esp + hexvar ] , eax push esi push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov edi , eax mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov dword ptr [ esp ] , hexvar call hexvar mov ebp , eax mov dword ptr [ edi + hexvar ] , eax mov dword ptr [ eax + num ] , hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp ] , eax pop edx push dword ptr [ esp + hexvar ] call hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp + hexvar ] , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar push ebp push eax push esi call hexvar add esp , hexvar test eax , eax mov ebp , eax jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push esi call hexvar add esp , hexvar test eax , eax mov ebp , dword ptr [ ebx - hexvar ] jne hexvar sub esp , num push hexvar push esi call hexvar add esp , hexvar test eax , eax cmove ebp , dword ptr [ ebx - hexvar ] mov dword ptr [ edi + hexvar ] , ebp add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
xor eax , eax cmp edx , hexvar ja hexvar push rbp push r15 push r14 push rbx sub rsp , hexvar mov ebp , edx mov r14 , rdi mov r15d , edx mov ebx , dword ptr [ rdi ] mov dword ptr [ rsp + num ] , ebx mov dword ptr [ rsp + hexvar ] , edx lea rdi , [ rsp + hexvar ] mov rdx , r15 call hexvar cmp ebp , hexvar ja hexvar cmp ebx , num jne hexvar lea rdi , [ rsp + r15 ] add rdi , hexvar mov edx , hexvar sub edx , ebp xor esi , esi call hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rsp + num ] call hexvar mov rbx , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax test rbx , rbx setne al add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sltiu v0 , a2 , hexvar bnez v0 , hexvar move v0 , zero lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s1 , a0 move s0 , a2 lw s2 , ( a0 ) sw s2 , hexvar ( sp ) sw a2 , hexvar ( sp ) addiu a3 , zero , hexvar addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , zero , num beq s2 , v0 , hexvar nop addiu a3 , zero , hexvar lui s2 , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp )
xor eax , eax cmp edx , hexvar ja hexvar push rbp push r15 push r14 push rbx sub rsp , hexvar mov ebp , edx mov r14 , rdi mov r15d , edx mov ebx , dword ptr [ rdi ] mov dword ptr [ rsp + num ] , ebx mov dword ptr [ rsp + hexvar ] , edx lea rdi , [ rsp + hexvar ] mov rdx , r15 call hexvar cmp ebp , hexvar ja hexvar cmp ebx , num jne hexvar lea rdi , [ rsp + r15 ] add rdi , hexvar mov edx , hexvar sub edx , ebp xor esi , esi call hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rsp + num ] call hexvar mov rbx , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax test rbx , rbx setne al add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
xor eax , eax cmp edx , hexvar ja hexvar push rbp push r15 push r14 push rbx sub rsp , hexvar mov ebp , edx mov r14 , rdi mov r15d , edx mov ebx , dword ptr [ rdi ] mov dword ptr [ rsp + num ] , ebx mov dword ptr [ rsp + hexvar ] , edx lea rdi , [ rsp + hexvar ] mov rdx , r15 call hexvar cmp ebp , hexvar ja hexvar cmp ebx , num jne hexvar lea rdi , [ rsp + r15 ] add rdi , hexvar mov edx , hexvar sub edx , ebp xor esi , esi call hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rsp + num ] call hexvar mov rbx , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax test rbx , rbx setne al add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] pxor xmm0 , xmm0 movss dword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + num ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + num ] , xmm0 mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num nop pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s2 , a1 move s4 , a2 move s0 , a3 move a0 , a3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 move a1 , s2 move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a2 , s4 move a1 , s1 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) b hexvar move s1 , v0 move s1 , zero move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , zero
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rbx , rcx mov r14 , rdx mov r13 , rsi mov r15 , rdi mov rdi , rcx call hexvar mov rdi , rbx call hexvar xor r12d , r12d test rax , rax je hexvar mov rbp , rax mov rdi , rax mov rsi , r13 call hexvar test rax , rax je hexvar mov rdi , r15 mov rsi , rbp mov rdx , r14 call hexvar mov r12d , eax mov rdi , rbx call hexvar mov eax , r12d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov edi , num test eax , eax je hexvar mov ebp , eax sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , ebp mov eax , dword ptr [ esp + hexvar ] call hexvar mov edi , eax sub esp , hexvar push esi call hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) move a1 , a0 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a2 , s1 addiu a1 , sp , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a0 , s0 move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s0 , zero b hexvar move s0 , zero lw t9 , - hexvar ( gp )
push rbp push rbx sub rsp , hexvar mov rsi , rdi mov rdi , rsp call hexvar test eax , eax je hexvar mov ebp , eax call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , rsp mov rdi , rax mov edx , ebp call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , a0 sw s1 , hexvar ( sp ) sw s2 , hexvar ( sp ) addiu s2 , sp , hexvar lw s1 , - hexvar ( gp ) move a0 , s2 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar move s3 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , s3 move a1 , s2 jalr t9 move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s0 , zero lw t9 , - hexvar ( gp ) move a0 , s0 bal - hexvar move s0 , zero b hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , a0 sw s1 , hexvar ( sp ) sw s2 , hexvar ( sp ) addiu s2 , sp , hexvar lw s1 , - hexvar ( gp ) move a0 , s2 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s3 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , s3 move a1 , s2 jalr t9 move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s0 , zero lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 move s0 , zero b hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r6 , [ pc , hexvar ] ldr r7 , [ r6 , hexvar ] cmp r7 , num beq hexvar ldr r5 , [ r6 , hexvar ] add r7 , r5 , r7 , lsl num sub r7 , r7 , num sub r5 , r5 , num ldr r4 , [ r5 , num ] ! ldr r0 , [ r4 ] bl hexvar ldr r0 , [ r4 , num ] bl hexvar ldr r0 , [ r4 , num ] bl hexvar cmp r5 , r7 bne hexvar mov r3 , num str r3 , [ r6 , hexvar ] strb r3 , [ r6 , hexvar ] strb r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] str r3 , [ r6 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc } stmdblo r6 ! , { r1 , r3 , r4 , r7 , r8 , ip , sp } ^ andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , rdx shl rax , num add rax , rdx add rax , rax add rax , rdx shl rax , num add rax , rcx mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx jae hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] cmp qword ptr [ rsi + rdi * num ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] sub qword ptr [ rax ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + rcx * num ] , num jne hexvar jmp hexvar jmp hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rcx * num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rcx * num ] , num jmp hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] cmp qword ptr [ rsi + rdi * num ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] sub qword ptr [ rax ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + rcx * num ] , num jne hexvar jmp hexvar jmp hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rcx * num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rcx * num ] , num jmp hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] cmp qword ptr [ rsi + rdi * num ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] sub qword ptr [ rax ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + rcx * num ] , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar jmp hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num setne al mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rcx * num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rcx * num ] , num jmp hexvar jmp hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] cmp qword ptr [ rsi + rdi * num ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] sub qword ptr [ rax ] , num lea rax , [ rax + num ] jb hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + rcx * num ] , num jne hexvar jmp hexvar jmp hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rcx * num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + rcx * num ] , num jmp hexvar pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r2 , [ pc , hexvar ] ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui v0 , hexvar addiu a2 , v0 , hexvar lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui v0 , hexvar addiu a2 , v0 , hexvar lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov ebp , r8d mov r12 , rcx mov ebx , edx mov r15d , esi mov r14 , rdi mov qword ptr [ rsp ] , num mov edi , hexvar call hexvar test rax , rax je hexvar mov r13 , rax test ebx , ebx mov eax , hexvar cmovg eax , ebx mov rdi , qword ptr [ r13 + num ] movsxd rsi , eax call hexvar test eax , eax je hexvar test ebp , ebp mov ebx , num cmovne ebx , ebp mov rdi , qword ptr [ r13 ] xor esi , esi mov edx , ebx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ r13 ] call hexvar test r12 , r12 je hexvar movsxd rdx , ebx mov rdi , rax mov rsi , r12 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , rax mov esi , ebx call hexvar test eax , eax js hexvar mov rdx , rsp mov esi , hexvar mov rdi , r13 call hexvar test rax , rax je hexvar mov esi , hexvar mov rdi , r13 call hexvar mov edi , r15d call hexvar mov rcx , qword ptr [ rsp ] mov rdi , r14 mov rsi , rax mov edx , hexvar call hexvar mov ebx , num test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov esi , hexvar mov rdi , r13 call hexvar mov rdi , qword ptr [ rsp ] xor ebx , ebx test rdi , rdi je hexvar call hexvar mov eax , ebx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s4 , a0 move s5 , a1 move s1 , a2 move s3 , a3 lw s2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui a3 , hexvar blez s1 , hexvar move s0 , v0 move a1 , s1 lw a0 , num ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s4 , a0 move s5 , a1 move s1 , a2 move s3 , a3 lw s2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui a3 , hexvar blez s1 , hexvar move s0 , v0 move a1 , s1 lw a0 , num ( s0 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov ebp , r8d mov r12 , rcx mov ebx , edx mov r15d , esi mov r14 , rdi mov qword ptr [ rsp ] , num mov edi , hexvar call hexvar test rax , rax je hexvar mov r13 , rax test ebx , ebx mov eax , hexvar cmovg eax , ebx mov rdi , qword ptr [ r13 + num ] movsxd rsi , eax call hexvar test eax , eax je hexvar test ebp , ebp mov ebx , num cmovne ebx , ebp mov rdi , qword ptr [ r13 ] xor esi , esi mov edx , ebx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ r13 ] call hexvar test r12 , r12 je hexvar movsxd rdx , ebx mov rdi , rax mov rsi , r12 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , rax mov esi , ebx call hexvar test eax , eax jle hexvar mov rdx , rsp mov esi , hexvar mov rdi , r13 call hexvar test rax , rax je hexvar mov esi , hexvar mov rdi , r13 call hexvar mov edi , r15d call hexvar mov rcx , qword ptr [ rsp ] mov rdi , r14 mov rsi , rax mov edx , hexvar call hexvar mov ebx , num test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov esi , hexvar mov rdi , r13 call hexvar mov rdi , qword ptr [ rsp ] xor ebx , ebx test rdi , rdi je hexvar call hexvar mov eax , ebx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] xor esi , esi mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , edx mov edx , esi mov esi , dword ptr [ ebp - hexvar ] div esi
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r6 , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] ldr r3 , [ r4 , hexvar ] mov r1 , r5 mov r0 , r4 blx r3 cmp r0 , num bne hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num bne hexvar ldr r3 , [ r6 , num ] ! cmp r3 , num movne r4 , r3 bne hexvar mov r0 , r4 pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num leave ret
call hexvar add eax , hexvar push edi push esi push ebx lea ebx , [ eax - hexvar ] lea edi , [ eax - hexvar ] mov esi , dword ptr [ esp + hexvar ] lea esi , [ esi ] sub esp , num push esi push ebx call dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar mov ebx , dword ptr [ ebx + hexvar ] test ebx , ebx jne hexvar add edi , num mov eax , dword ptr [ edi ] test eax , eax je hexvar sub esp , num mov ebx , eax push esi push ebx call dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax je hexvar mov eax , ebx pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ ebp + num ] push dword ptr [ ebp - hexvar ] call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , num leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + num ] cmp dword ptr [ eax + num ] , num je hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + num ] cmp dword ptr [ eax + num ] , num je hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num je hexvar xor eax , eax ret
push ebp push edi push esi push ebx sub esp , hexvar mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ebx + num ] mov eax , num cmp dword ptr [ edx + num ] , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , dl mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi and al , num mov byte ptr [ rbp - num ] , al movzx edx , byte ptr [ rbp - num ] mov ecx , edx mov edx , ecx and edx , num mov ecx , edx mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov eax , hexvar mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx movzx eax , byte ptr [ rip + hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx xor eax , eax mov ecx , eax mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp rdx mov edi , dword ptr [ rbp - num ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - num ] mov esi , ecx mov edx , dword ptr [ rbp - num ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] mov r3 , r2 strb r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 b hexvar mov r3 , num ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - num ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
cmp r2 , num mov r2 , r1 mov r1 , r0 beq hexvar ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 , hexvar ] cmp r3 , num movne r0 , num beq hexvar b hexvar ldr r0 , [ pc , hexvar ] b hexvar str lr , [ sp , - num ] ! sub sp , sp , hexvar stm sp , { r1 , r2 } bl hexvar ldm sp , { r1 , r2 } add sp , sp , hexvar pop { lr } b hexvar andeq r0 , r4 , r8 , asr num andeq fp , r2 , r8 , ror num
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al movzx esi , byte ptr [ ebp - num ] and esi , num mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx movzx eax , byte ptr [ hexvar ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax xor eax , eax mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar pop esi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , num ] str r2 , [ r3 , num ] ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , num bl hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r1 , [ sp , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r1 , [ sp , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi xor ebp , ebp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar lea esi , [ ebx - hexvar ] sub esp , num push hexvar push esi push num call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + num ] , eax push hexvar push esi push hexvar push num call hexvar mov eax , dword ptr [ edi ] add esp , hexvar cmp eax , num je hexvar cmp eax , num je hexvar sub esp , num push edi mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ edi ] cmp eax , num je hexvar cmp eax , num jne hexvar sub esp , hexvar push dword ptr [ edi + num ] call hexvar add esp , hexvar sub esp , hexvar xor ebp , ebp push edi call hexvar mov dword ptr [ esp ] , hexvar push esi push hexvar push hexvar push hexvar call hexvar add esp , hexvar push hexvar push esi push hexvar push hexvar call hexvar add esp , hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , num cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx ret
push rbp push r15 push r14 push rbx push rax xor r15d , r15d test rsi , rsi je hexvar mov rbp , rsi mov r14 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , num mov qword ptr [ rax + num ] , rbp mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov eax , dword ptr [ rbx ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rbx + num ] add rdi , hexvar mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov rdi , qword ptr [ rbx + num ] add rdi , hexvar mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , qword ptr [ r14 + num ] mov rsi , rbx call hexvar test rax , rax je hexvar mov eax , dword ptr [ rbx ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rbx + num ] call hexvar jmp hexvar mov rdi , qword ptr [ r14 + num ] mov rsi , rbx call hexvar mov r15d , num jmp hexvar mov rdi , qword ptr [ rbx + num ] call hexvar mov rdi , rbx call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r15d , r15d mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ hexvar ] and al , num shr al , num movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ hexvar ] not eax shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] and eax , hexvar cmp eax , num je hexvar cmp dword ptr [ hexvar ] , num setge al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num blt hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] mvn r2 , num str r2 , [ r3 ] mov r0 , r0 pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] and eax , hexvar cmp eax , num je hexvar cmp dword ptr [ hexvar ] , num jl hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , num pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 move a0 , zero sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , zero move a2 , zero sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , sp , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw s1 , hexvar ( s0 ) lw gp , hexvar ( sp ) beqz s1 , hexvar sw zero , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 move a0 , zero sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , zero move a2 , zero sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , sp , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw s1 , hexvar ( s0 ) lw gp , hexvar ( sp ) beqz s1 , hexvar sw zero , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu v0 , zero , - num sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu v0 , sp , hexvar move a3 , zero move a2 , zero addiu a1 , zero , num move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw zero , ( v0 ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rdi xor edi , edi call hexvar mov qword ptr [ rsp + hexvar ] , rax lea rdi , [ rsp + hexvar ] xorps xmm0 , xmm0 mov esi , num call hexvar call hexvar call hexvar mov dword ptr [ rax ] , num mov r13 , qword ptr [ r15 + hexvar ] test r13 , r13 jne hexvar mov rax , qword ptr [ r15 + hexvar ] mov r13 , qword ptr [ rax + hexvar ] add dword ptr [ r15 + hexvar ] , num mov rdi , r15 call hexvar test eax , hexvar je hexvar mov rdi , r15 call hexvar test eax , hexvar je hexvar mov rdi , r15 call hexvar cmp dword ptr [ r15 + hexvar ] , num je hexvar mov dword ptr [ r15 + hexvar ] , num add dword ptr [ r15 + hexvar ] , num mov r12d , hexvar jmp hexvar mov dword ptr [ r15 + hexvar ] , r14d mov rdi , r15 mov esi , hexvar mov edx , num call r13
push rbx test rdi , rdi je hexvar mov rbx , rdi movsxd rax , dword ptr [ rdi + hexvar ] lea rax , [ rax + rax * num ] shl rax , num call qword ptr [ rax ] movsxd rax , dword ptr [ rbx + hexvar ] lea rax , [ rax + rax * num ] shl rax , num add rbx , hexvar mov rdi , rbx pop rbx jmp qword ptr [ rax ] mov edi , num mov esi , num mov edx , hexvar call hexvar
push rbx test rdi , rdi je hexvar mov rbx , rdi movsxd rax , dword ptr [ rdi + hexvar ] lea rax , [ rax + rax * num ] shl rax , num call qword ptr [ rax ] movsxd rax , dword ptr [ rbx + hexvar ] lea rax , [ rax + rax * num ] shl rax , num add rbx , hexvar mov rdi , rbx pop rbx jmp qword ptr [ rax ] mov edi , num mov esi , num mov edx , hexvar call hexvar
push rbx test rdi , rdi je hexvar mov rbx , rdi movsxd rax , dword ptr [ rdi + hexvar ] lea rax , [ rax + rax * num ] shl rax , num call qword ptr [ rax ] movsxd rax , dword ptr [ rbx + hexvar ] lea rax , [ rax + rax * num ] shl rax , num add rbx , hexvar mov rdi , rbx pop rbx jmp qword ptr [ rax ] mov edi , num mov esi , num mov edx , hexvar call hexvar
push rbx test rdi , rdi je hexvar mov rbx , rdi movsxd rax , dword ptr [ rdi + hexvar ] lea rax , [ rax + rax * num ] shl rax , num call qword ptr [ rax ] movsxd rax , dword ptr [ rbx + hexvar ] lea rax , [ rax + rax * num ] shl rax , num add rbx , hexvar mov rdi , rbx pop rbx jmp qword ptr [ rax ] mov edi , num mov esi , num mov edx , hexvar call hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + hexvar ] cmp esi , dword ptr [ edi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar cmp eax , num setg bl and bl , num movzx eax , bl add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar sub r3 , fp , hexvar ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , hexvar ldm r3 , { r2 , r3 } sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 cmp r3 , num movgt r3 , num movle r3 , num and r3 , r3 , hexvar mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jle hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] test esi , esi sete bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ hexvar ] jmp eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar cmp eax , num setg bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] test edx , edx setne bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp ecx add esp , hexvar pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov byte ptr [ ebp - num ] , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push num lea eax , [ esp + hexvar ] push eax lea eax , [ ebx ] push hexvar push eax push num push ecx call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] lea edi , [ ebx ] mov ecx , num mov esi , eax repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta dl sbb dl , num test dl , dl jne hexvar add eax , num sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax push eax call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push hexvar push eax call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar mov eax , edi sub eax , esi mov byte ptr [ ebp + eax ] , num mov eax , dword ptr [ esp + num ] test eax , eax je hexvar sub esp , hexvar add edi , num push edi call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax mov dword ptr [ edx ] , eax je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , ebp jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , num mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push num lea eax , [ esp + hexvar ] push eax push hexvar lea eax , [ ebx ] push eax push num push edx call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , num lea edi , [ ebx ] mov esi , eax repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta dl sbb dl , num test dl , dl jne hexvar add eax , num mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push eax call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar sub esp , num push hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax test eax , eax je hexvar sub esp , hexvar push esi call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ esp + num ] mov eax , ecx sub eax , esi mov byte ptr [ edi + eax ] , num test ebp , ebp je hexvar sub esp , hexvar mov eax , ecx add eax , num push eax call hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp ] , eax add esp , hexvar test eax , eax je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , hexvar mov r7 , r0 mov r6 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] add r3 , sp , num str r3 , [ sp ] mov r3 , hexvar ldr r2 , [ pc , hexvar ] mov r1 , num bl hexvar cmp r0 , num beq hexvar ldr r4 , [ sp , num ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num movne r5 , num bne hexvar add r0 , r4 , num str r0 , [ sp , num ] bl hexvar subs r4 , r0 , num beq hexvar mov r1 , hexvar mov r0 , r4 bl hexvar subs r8 , r0 , num beq hexvar mov r0 , r4 bl hexvar subs r5 , r0 , num beq hexvar sub r3 , r8 , r4 mov r2 , num strb r2 , [ r5 , r3 ] cmp r6 , r2 beq hexvar add r0 , r8 , num bl hexvar mov r8 , r0 str r0 , [ r6 ] cmp r0 , num beq hexvar mov r0 , r4 bl hexvar mov r0 , r5 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num addiu v0 , sp , hexvar sw s2 , hexvar ( sp ) lui a2 , num sw s4 , hexvar ( sp ) addiu a3 , zero , hexvar sw s3 , hexvar ( sp ) addiu a2 , a2 , num sw gp , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) addiu a1 , zero , num sw s5 , hexvar ( sp ) move s4 , a0 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) lw s2 , ( gp ) lw t9 , ( gp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw s0 , hexvar ( sp ) lui a1 , num lw t9 , ( gp ) addiu a2 , zero , num addiu a1 , a1 , num jalr t9 move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) addiu s0 , s0 , num lw t9 , ( gp ) move a0 , s0 jalr t9 sw s0 , hexvar ( sp ) lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , ( gp ) addiu a1 , zero , hexvar jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s5 , v0 lw t9 , ( gp ) jalr t9 move a0 , s0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 subu v0 , s5 , s0 addu v0 , s1 , v0 beqz s3 , hexvar sb zero , ( v0 ) lw t9 , ( gp ) jalr t9 addiu a0 , s5 , num lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , ( s3 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push r15 push r14 push r12 push rbx push rax mov ebx , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rcx , qword ptr [ rdx ] mov edx , ebx call hexvar cmp ebx , num jl hexvar add ebx , - num add r14 , hexvar add r12 , hexvar nop dword ptr [ rax ] lea edx , [ rbx + num ] lea rdi , [ r12 - num ] mov rcx , qword ptr [ r14 - hexvar ] mov rsi , r15 call hexvar test ebx , ebx jle hexvar mov rcx , qword ptr [ r14 - hexvar ] mov rdi , r12 mov rsi , r15 mov edx , ebx call hexvar lea edx , [ rbx - num ] test edx , edx jle hexvar lea rdi , [ r12 + num ] mov rcx , qword ptr [ r14 - num ] mov rsi , r15 call hexvar lea edx , [ rbx - num ] test edx , edx jle hexvar lea rdi , [ r12 + hexvar ] mov rcx , qword ptr [ r14 ] mov rsi , r15 call hexvar add ebx , - num add r14 , hexvar add r12 , hexvar cmp ebx , - num jne hexvar add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov ebx , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rcx , qword ptr [ rdx ] mov edx , ebx call hexvar cmp ebx , num jl hexvar add ebx , - num add r14 , hexvar add r12 , hexvar nop dword ptr [ rax ] lea edx , [ rbx + num ] lea rdi , [ r12 - num ] mov rcx , qword ptr [ r14 - hexvar ] mov rsi , r15 call hexvar test ebx , ebx jle hexvar mov rcx , qword ptr [ r14 - hexvar ] mov rdi , r12 mov rsi , r15 mov edx , ebx call hexvar lea edx , [ rbx - num ] test edx , edx jle hexvar lea rdi , [ r12 + num ] mov rcx , qword ptr [ r14 - num ] mov rsi , r15 call hexvar lea edx , [ rbx - num ] test edx , edx jle hexvar lea rdi , [ r12 + hexvar ] mov rcx , qword ptr [ r14 ] mov rsi , r15 call hexvar add ebx , - num add r14 , hexvar add r12 , hexvar cmp ebx , - num jne hexvar add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov ebx , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rcx , qword ptr [ rdx ] mov edx , ebx call hexvar cmp ebx , num jl hexvar add ebx , - num add r14 , hexvar add r12 , hexvar nop dword ptr [ rax ] lea edx , [ rbx + num ] lea rdi , [ r12 - num ] mov rcx , qword ptr [ r14 - hexvar ] mov rsi , r15 call hexvar test ebx , ebx jle hexvar mov rcx , qword ptr [ r14 - hexvar ] mov rdi , r12 mov rsi , r15 mov edx , ebx call hexvar lea edx , [ rbx - num ] test edx , edx jle hexvar lea rdi , [ r12 + num ] mov rcx , qword ptr [ r14 - num ] mov rsi , r15 call hexvar lea edx , [ rbx - num ] test edx , edx jle hexvar lea rdi , [ r12 + hexvar ] mov rcx , qword ptr [ r14 ] mov rsi , r15 call hexvar add ebx , - num add r14 , hexvar add r12 , hexvar cmp ebx , - num jne hexvar add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov ebx , ecx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rcx , qword ptr [ rdx ] mov edx , ebx call hexvar cmp ebx , num jl hexvar add ebx , - num add r14 , hexvar add r12 , hexvar nop dword ptr [ rax ] lea edx , [ rbx + num ] lea rdi , [ r12 - num ] mov rcx , qword ptr [ r14 - hexvar ] mov rsi , r15 call hexvar test ebx , ebx jle hexvar mov rcx , qword ptr [ r14 - hexvar ] mov rdi , r12 mov rsi , r15 mov edx , ebx call hexvar lea edx , [ rbx - num ] test edx , edx jle hexvar lea rdi , [ r12 + num ] mov rcx , qword ptr [ r14 - num ] mov rsi , r15 call hexvar lea edx , [ rbx - num ] test edx , edx jle hexvar lea rdi , [ r12 + hexvar ] mov rcx , qword ptr [ r14 ] mov rsi , r15 call hexvar add ebx , - num add r14 , hexvar add r12 , hexvar cmp ebx , - num jne hexvar add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test eax , eax je hexvar xor ebx , ebx jmp hexvar nop add ebx , num cmp dword ptr [ esp + hexvar ] , ebx je hexvar sub esp , num mov eax , dword ptr [ esi ] push ebp push dword ptr [ edi + ebx * num ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14d , num test rsi , rsi je hexvar mov r15 , rcx mov r12 , rdx mov r13 , rsi mov rbp , rdi xor ebx , ebx nop word ptr cs : [ rax + rax ] nop mov rax , qword ptr [ rbp ] mov rsi , qword ptr [ r12 + rbx * num ] mov rdi , rbp mov rdx , r15 call qword ptr [ rax + hexvar ] test eax , eax je hexvar add rbx , num cmp rbx , r13 jb hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
beqz a1 , hexvar nop addiu sp , sp , - hexvar sw s4 , hexvar ( sp ) move s4 , a1 sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) move s1 , zero sw s0 , hexvar ( sp ) move s0 , a2 b hexvar sw ra , hexvar ( sp ) beq s4 , s1 , hexvar addiu v0 , zero , num lw v0 , ( s2 )
sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + hexvar ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + hexvar ] lea ecx , [ edx * num ] mov edx , dword ptr [ esp + hexvar ] add edx , ecx mov edx , dword ptr [ edx ] sub esp , num push dword ptr [ esp + hexvar ] push edx push dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar add dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] jb hexvar mov eax , num add esp , hexvar ret
lb a1 , ( a0 ) addiu v0 , zero , hexvar beq a1 , v0 , hexvar addiu a3 , zero , hexvar addiu a2 , zero , hexvar beqz a1 , hexvar nop lb v0 , num ( a0 ) bne a1 , a3 , hexvar addiu v1 , a0 , num beq v0 , a3 , hexvar nop beqz v0 , hexvar move a1 , v0 bne a1 , a2 , hexvar lb v0 , num ( v1 ) b hexvar move a1 , v0 beq v0 , a2 , hexvar nop lb v0 , num ( a0 ) move v1 , a0 bnez v0 , hexvar addiu a0 , v1 , num jr ra addiu v0 , zero , num b hexvar lb a1 , num ( v1 ) lb a1 , num ( a0 ) beq a1 , a2 , hexvar addiu a0 , a0 , num b hexvar nop b hexvar move v1 , a0 lb a1 , num ( a0 ) beqz a1 , hexvar addiu v1 , a0 , num bne a1 , a2 , hexvar nop jr ra move v0 , zero b hexvar move a0 , v1
lb a1 , ( a0 ) addiu v0 , zero , hexvar beq a1 , v0 , hexvar addiu a3 , zero , hexvar addiu a2 , zero , hexvar beqz a1 , hexvar nop lb v0 , num ( a0 ) bne a1 , a3 , hexvar addiu v1 , a0 , num beq v0 , a3 , hexvar nop beqz v0 , hexvar move a1 , v0 bne a1 , a2 , hexvar lb v0 , num ( v1 ) b hexvar move a1 , v0 beq v0 , a2 , hexvar nop lb v0 , num ( a0 ) move v1 , a0 bnez v0 , hexvar addiu a0 , v1 , num jr ra addiu v0 , zero , num b hexvar lb a1 , num ( v1 ) lb a1 , num ( a0 ) beq a1 , a2 , hexvar addiu a0 , a0 , num b hexvar nop b hexvar move v1 , a0 lb a1 , num ( a0 ) beqz a1 , hexvar addiu v1 , a0 , num bne a1 , a2 , hexvar nop jr ra move v0 , zero b hexvar move a0 , v1
lb v1 , ( a0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar addiu a1 , zero , hexvar b hexvar addiu v1 , zero , hexvar lb v0 , num ( a0 ) beq v0 , a1 , hexvar nop addiu a0 , a0 , num lb v0 , ( a0 ) bnez v0 , hexvar nop b hexvar nop lb v0 , num ( a0 ) beqz v0 , hexvar addiu a2 , a0 , num beq v0 , v1 , hexvar move a0 , a2 b hexvar lb v0 , ( a0 ) addiu a0 , a0 , num lb v0 , ( a0 ) beq v0 , v1 , hexvar nop lb v0 , ( a0 ) beqz v0 , hexvar nop beq v0 , a1 , hexvar nop beq v0 , v1 , hexvar nop addiu a0 , a0 , num lb v0 , ( a0 ) beqz v0 , hexvar nop bne v0 , v1 , hexvar addiu a0 , a0 , num addiu a0 , a0 , - num b hexvar addiu a0 , a0 , num addiu v0 , zero , num jr ra nop jr ra move v0 , zero jr ra move v0 , zero jr ra move v0 , zero
ldrb r3 , [ r0 ] cmp r3 , hexvar beq hexvar cmp r3 , num beq hexvar cmp r3 , hexvar beq hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , num cmpne r3 , hexvar bne hexvar cmp r3 , hexvar bne hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , hexvar beq hexvar cmp r3 , num bne hexvar mov r0 , num bx lr ldrb r3 , [ r0 , num ] cmp r3 , hexvar beq hexvar cmp r3 , num cmpne r3 , hexvar add r0 , r0 , num bne hexvar b hexvar ldrb r3 , [ r0 , num ] add r0 , r0 , num cmp r3 , num cmpne r3 , hexvar beq hexvar cmp r3 , num cmpne r3 , hexvar bne hexvar b hexvar mov r0 , num bx lr
mov rax , qword ptr [ rdi ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rsi ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jb hexvar seta al movzx eax , al ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax setb al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax setb al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi ] mov ebx , dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + hexvar ] sub esi , ebx sbb edx , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx jae hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub ecx , esi sbb eax , edx setb bl movzx edx , bl mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add eax , num mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax add ecx , hexvar add ecx , num sub ecx , hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num sub ecx , eax mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] push num push ebp push num call hexvar mov esi , eax add esp , hexvar cmp ebp , eax je hexvar mov edx , ebp call hexvar test al , al je hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , num sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , zero sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , s1 beq s1 , v0 , hexvar move s0 , v0 move a1 , s1 jal hexvar move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beq v1 , v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addu v0 , s0 , v0 addiu v0 , v0 , num move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov sb , r0 mov r8 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ r0 , num ] ldr fp , [ r3 , hexvar ] ldr r3 , [ r1 , hexvar ] cmp r3 , r0 beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ r8 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num movne r0 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] cmp qword ptr [ rsi + hexvar ] , rdi mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax je hexvar lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] xor eax , eax cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , edi mov eax , dword ptr [ edx + num ] cmp dword ptr [ ecx + hexvar ] , edx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , ecx mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax je hexvar lea eax , [ edi - hexvar ] sub esp , num push hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + hexvar ] xor eax , eax cmp dword ptr [ edx + hexvar ] , num je hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ecx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr [ edx + num ] cmp dword ptr [ edi + hexvar ] , edx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , edi mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax je hexvar lea eax , [ ecx - hexvar ] sub esp , num mov ebx , ecx push hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + hexvar ] xor eax , eax cmp dword ptr [ edx + hexvar ] , num je hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , edx cdq mov esi , hexvar idiv esi mov edi , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ edi + eax * num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx cdq idiv esi mov dword ptr [ ebp - hexvar ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - hexvar ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov eax , edx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , edx cdq mov esi , hexvar idiv esi mov edi , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ edi + eax * num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx cdq idiv esi mov dword ptr [ ebp - hexvar ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - hexvar ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov eax , edx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , edx cdq mov esi , hexvar idiv esi mov edi , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ edi + eax * num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx cdq idiv esi mov dword ptr [ ebp - hexvar ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - hexvar ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov eax , edx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , edx cdq mov esi , hexvar idiv esi mov edi , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ edi + eax * num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx cdq idiv esi mov dword ptr [ ebp - hexvar ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - hexvar ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov eax , edx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar test eax , eax setne al add esp , hexvar pop ebx ret
push { fp , lr } add fp , sp , num ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 pop { fp , pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar test eax , eax setne al add esp , hexvar pop ebx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov eax , dword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax cmp qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push edi push esi xor ecx , ecx push ebx mov edx , dword ptr [ esp + hexvar ] mov eax , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] cmp edx , edi seta cl cmovae eax , ecx cmp esi , ebx je hexvar cmp dword ptr [ esi + hexvar ] , edx jb hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx cmovne esi , edx cmp dword ptr [ ebx + hexvar ] , edi jae hexvar cmp esi , ebx jb hexvar mov edx , num cmova eax , edx pop ebx pop esi pop edi ret
xor eax , eax cmp rsi , rcx mov r8d , hexvar seta al cmovb eax , r8d cmp rdi , rdx je hexvar mov r8d , dword ptr [ rdi + hexvar ] cmp r8 , rsi jb hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi cmovne rdi , rsi mov esi , dword ptr [ rdx + hexvar ] cmp rsi , rcx jae hexvar cmp rdi , rdx jb hexvar mov edx , num cmova eax , edx ret
sltu v0 , a1 , a3 bnez v0 , hexvar addiu v0 , zero , - num sltu v0 , a3 , a1 beq a0 , a2 , hexvar nop lw v1 , hexvar ( a0 )
mov qword ptr [ rip + hexvar ] , num cmp edi , hexvar je hexvar cmp edi , hexvar ja hexvar cmp edi , num je hexvar cmp edi , hexvar je hexvar cmp edi , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rip + hexvar ] , rax ret
lui v0 , hexvar addiu v1 , zero , hexvar beq a0 , v1 , hexvar sw zero , hexvar ( v0 ) sltiu v1 , a0 , hexvar beqz v1 , hexvar addiu v1 , zero , num beq a0 , v1 , hexvar addiu v1 , zero , hexvar beq a0 , v1 , hexvar addiu v1 , zero , num beq a0 , v1 , hexvar nop jr ra nop addiu v1 , zero , hexvar beq a0 , v1 , hexvar sltiu v1 , a0 , hexvar bnez v1 , hexvar addiu v1 , zero , hexvar bne a0 , v1 , hexvar nop lui v1 , hexvar addiu a0 , zero , hexvar sw zero , hexvar ( v1 ) lui v1 , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 ) lui v1 , hexvar lui a0 , hexvar addiu v1 , v1 , hexvar sw v1 , hexvar ( a0 ) lui v1 , hexvar addiu a0 , zero , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 ) addiu a0 , a0 , - hexvar sltiu a0 , a0 , num beqz a0 , hexvar nop lui v1 , hexvar lui a0 , hexvar addiu v1 , v1 , hexvar sw v1 , hexvar ( a0 ) lui v1 , hexvar addiu a0 , zero , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 ) lui v1 , hexvar lui a0 , hexvar b hexvar addiu v1 , v1 , hexvar lui v1 , hexvar lui a0 , hexvar addiu v1 , v1 , hexvar sw v1 , hexvar ( a0 ) lui v1 , hexvar addiu a0 , zero , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 ) lui v1 , hexvar lui a0 , hexvar addiu v1 , v1 , hexvar sw v1 , hexvar ( a0 ) lui v1 , hexvar addiu a0 , zero , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 )
lui v0 , hexvar addiu v1 , zero , hexvar beq a0 , v1 , hexvar sw zero , hexvar ( v0 ) sltiu v1 , a0 , hexvar beqz v1 , hexvar addiu v1 , zero , num beq a0 , v1 , hexvar addiu v1 , zero , hexvar beq a0 , v1 , hexvar addiu v1 , zero , num beq a0 , v1 , hexvar nop jr ra nop addiu v1 , zero , hexvar beq a0 , v1 , hexvar sltiu v1 , a0 , hexvar bnez v1 , hexvar addiu v1 , zero , hexvar bne a0 , v1 , hexvar nop lui v1 , hexvar addiu a0 , zero , hexvar sw zero , hexvar ( v1 ) lui v1 , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 ) lui v1 , hexvar lui a0 , hexvar addiu v1 , v1 , hexvar sw v1 , hexvar ( a0 ) lui v1 , hexvar addiu a0 , zero , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 ) addiu a0 , a0 , - hexvar sltiu a0 , a0 , num beqz a0 , hexvar nop lui v1 , hexvar lui a0 , hexvar addiu v1 , v1 , hexvar sw v1 , hexvar ( a0 ) lui v1 , hexvar addiu a0 , zero , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 ) lui v1 , hexvar lui a0 , hexvar b hexvar addiu v1 , v1 , hexvar lui v1 , hexvar lui a0 , hexvar addiu v1 , v1 , hexvar sw v1 , hexvar ( a0 ) lui v1 , hexvar addiu a0 , zero , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 ) lui v1 , hexvar lui a0 , hexvar addiu v1 , v1 , hexvar sw v1 , hexvar ( a0 ) lui v1 , hexvar addiu a0 , zero , hexvar sw a0 , hexvar ( v1 ) lui v1 , hexvar addiu v1 , v1 , - hexvar jr ra sw v1 , hexvar ( v0 )
cmp edi , hexvar mov qword ptr [ rip + hexvar ] , num je hexvar ja hexvar cmp edi , num je hexvar cmp edi , hexvar je hexvar cmp edi , num je hexvar ret nop cmp edi , hexvar je hexvar jbe hexvar cmp edi , hexvar jne hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax ret
push ebp push num lea edi , [ esp + hexvar ] push edi push esi call hexvar add esi , dword ptr [ esp + hexvar ] call hexvar push ebp push num push edi push esi call hexvar add esi , dword ptr [ esp + hexvar ] add esp , hexvar mov edi , esi call hexvar lea esi , [ edi + num ] cmp esi , ebp ja hexvar jb hexvar cmp edi , ebp jae hexvar mov eax , ebp sub eax , edi lea edx , [ eax - num ] cmp edx , num ja hexvar sub esp , num push eax push edi mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax ] movzx edx , ax add esp , hexvar lea edi , [ esi + edx ] cmp edi , ebp ja hexvar and eax , hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax sub esp , num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push hexvar call hexvar pop eax pop edx push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , esi mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov esi , eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push hexvar call hexvar add esp , hexvar test esi , esi je hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar pop edx pop ecx push eax push num call hexvar add esp , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push hexvar call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar lea esi , [ esi ]
push ebp push num lea edi , [ esp + hexvar ] push edi push esi call hexvar add esi , dword ptr [ esp + hexvar ] call hexvar push ebp push num push edi push esi call hexvar add esi , dword ptr [ esp + hexvar ] add esp , hexvar mov edi , esi call hexvar lea esi , [ edi + num ] cmp esi , ebp ja hexvar jb hexvar cmp edi , ebp jae hexvar mov eax , ebp sub eax , edi lea edx , [ eax - num ] cmp edx , num ja hexvar sub esp , num push eax push edi mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax ] movzx edx , ax add esp , hexvar lea edi , [ esi + edx ] cmp edi , ebp ja hexvar and eax , hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax sub esp , num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push hexvar call hexvar pop eax pop edx push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , esi mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov esi , eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push hexvar call hexvar add esp , hexvar test esi , esi je hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar pop edx pop ecx push eax push num call hexvar add esp , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push hexvar call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar lea esi , [ esi ]
mov edx , dword ptr [ ebp - hexvar ] sub esp , num push dword ptr [ ebp - hexvar ] lea eax , [ ebp - hexvar ] push eax push edx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov esi , eax xor esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov eax , edx xor eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov eax , ebx or eax , ecx test eax , eax je hexvar sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , edi lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax sub esp , hexvar mov ebx , edi lea eax , [ ebx - hexvar ] push eax mov ebx , edi call hexvar add esp , hexvar mov edx , eax push esi push hexvar mov ebx , edi lea eax , [ ebx - hexvar ] push eax push edx mov ebx , edi call hexvar add esp , hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea eax , [ eax + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push eax mov ebx , dword ptr [ ebp - hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar
push ebp push num lea edi , [ esp + hexvar ] push edi push esi call hexvar add esi , dword ptr [ esp + hexvar ] call hexvar push ebp push num push edi push esi call hexvar add esi , dword ptr [ esp + hexvar ] add esp , hexvar mov edi , esi call hexvar lea esi , [ edi + num ] cmp esi , ebp ja hexvar jb hexvar cmp edi , ebp jae hexvar mov eax , ebp sub eax , edi lea edx , [ eax - num ] cmp edx , num ja hexvar sub esp , num push eax push edi mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax ] movzx edx , ax add esp , hexvar lea edi , [ esi + edx ] cmp edi , ebp ja hexvar and eax , hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax sub esp , num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push hexvar call hexvar pop eax pop edx push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , esi mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov esi , eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push hexvar call hexvar add esp , hexvar test esi , esi je hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar pop edx pop ecx push eax push num call hexvar add esp , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push hexvar call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar lea esi , [ esi ]
push { r4 , r5 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r3 , r0 mov r4 , r1 str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r3 , r0 mov r4 , r1 str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] mov r2 , num mov r3 , num sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r2 , num mov r3 , num sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 cmp r3 , num beq hexvar sub r3 , fp , hexvar ldm r3 , { r2 , r3 } sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 mov r4 , r1 b hexvar sub r3 , fp , hexvar mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r4 , r0 mov r5 , r1 ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 mov r3 , r1 mov r0 , r4 mov r1 , r5 bl hexvar mov r3 , r0 mov r4 , r1 mov r5 , r4 mov r4 , r3 ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 mov r3 , r1 mov r0 , r4 mov r1 , r5 bl hexvar mov r3 , r0 mov r4 , r1 b hexvar bl hexvar mov r2 , num ldr r3 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r4 , r1 mov r0 , r3 mov r1 , r4 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , hexvar pop { r4 , r5 , fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar cvtsi2sd xmm0 , eax movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar cvtsi2sd xmm0 , eax movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 setae cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 setae al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movsd xmm0 , qword ptr [ ebp - hexvar ] movsd xmm1 , qword ptr [ ebp - hexvar ] mulsd xmm0 , xmm1 movsd qword ptr [ ebp - num ] , xmm0 mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp lea ecx , [ ebp - hexvar ] mov dword ptr [ eax ] , ecx call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax movd xmm0 , dword ptr [ ebp - hexvar ] movsd xmm1 , qword ptr [ hexvar ] movaps xmm2 , xmm1 por xmm0 , xmm2 subsd xmm0 , xmm1 movd xmm3 , dword ptr [ ebp - hexvar ] por xmm3 , xmm2 subsd xmm3 , xmm1 addsd xmm0 , xmm3 movd xmm3 , dword ptr [ ebp - hexvar ] por xmm3 , xmm2 subsd xmm3 , xmm1 mulsd xmm0 , xmm3 movsd qword ptr [ ebp - num ] , xmm0 mov eax , dword ptr [ hexvar ] jmp eax call hexvar fstp qword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ ebp - hexvar ] movsd xmm1 , qword ptr [ hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ ebp - num ] , xmm0 mov eax , dword ptr [ hexvar ] jmp eax movsd xmm0 , qword ptr [ ebp - num ] movsd qword ptr [ ebp - hexvar ] , xmm0 fld qword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { r4 , r5 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r3 , r0 mov r4 , r1 str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r3 , r0 mov r4 , r1 str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] mov r2 , num mov r3 , num sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r2 , num mov r3 , num sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 cmp r3 , num beq hexvar sub r3 , fp , hexvar ldm r3 , { r2 , r3 } sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 mov r4 , r1 b hexvar sub r3 , fp , hexvar mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r4 , r0 mov r5 , r1 ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 mov r3 , r1 mov r0 , r4 mov r1 , r5 bl hexvar mov r3 , r0 mov r4 , r1 mov r5 , r4 mov r4 , r3 ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 mov r3 , r1 mov r0 , r4 mov r1 , r5 bl hexvar mov r3 , r0 mov r4 , r1 b hexvar bl hexvar mov r2 , num ldr r3 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r4 , r1 mov r0 , r3 mov r1 , r4 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , hexvar pop { r4 , r5 , fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar cvtsi2sd xmm0 , eax movsd qword ptr [ ebp - hexvar ] , xmm0 mov dword ptr [ esp ] , hexvar call hexvar cvtsi2sd xmm0 , eax movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] mulsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - num ] , xmm0 jmp hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num jne hexvar movd xmm0 , dword ptr [ ebp - hexvar ] movsd xmm1 , qword ptr [ hexvar ] movaps xmm2 , xmm1 por xmm0 , xmm2 subsd xmm0 , xmm1 movd xmm3 , dword ptr [ ebp - hexvar ] por xmm3 , xmm2 subsd xmm3 , xmm1 addsd xmm0 , xmm3 movd xmm3 , dword ptr [ ebp - hexvar ] por xmm3 , xmm2 subsd xmm3 , xmm1 mulsd xmm0 , xmm3 movsd qword ptr [ ebp - num ] , xmm0 jmp hexvar call hexvar fstp qword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ ebp - hexvar ] movsd xmm1 , qword ptr [ hexvar ] divsd xmm0 , xmm1 movsd qword ptr [ ebp - num ] , xmm0 movsd xmm0 , qword ptr [ ebp - num ] movsd qword ptr [ ebp - hexvar ] , xmm0 fld qword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 move a2 , s1 lw gp , hexvar ( sp ) move a0 , s0 lw ra , hexvar ( sp ) move a1 , v0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
push rbp push rbx mov ebp , esi mov rbx , rdi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rdi , rbx pop rbx pop rbp mov rsi , rax jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 move a2 , s1 lw gp , hexvar ( sp ) move a0 , s0 lw ra , hexvar ( sp ) move a1 , v0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 move a2 , s1 lw gp , hexvar ( sp ) move a0 , s0 lw ra , hexvar ( sp ) move a1 , v0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
push { r4 , r5 , r6 , r7 , r8 , lr } mov r1 , hexvar mov r7 , r0 bl hexvar subs r5 , r0 , num beq hexvar sub r6 , r5 , r7 add r0 , r6 , hexvar bl hexvar mov r2 , r6 mov r1 , r7 mov r4 , r0 bl hexvar mov r3 , hexvar add r5 , r6 , num strb r3 , [ r4 , r6 ] mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r4 , r5 bl hexvar mov r0 , r4 bl hexvar cmn r0 , num beq hexvar bl hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov edi , dword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] call hexvar sub esp , hexvar mov esi , eax push eax call hexvar add esp , hexvar cmp eax , - num je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , num mov eax , esi pop ebx pop esi ret
push { r4 , lr } bl hexvar mov r4 , r0 bl hexvar cmn r0 , num beq hexvar bl hexvar mov r0 , r4 pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] cmp edx , num je hexvar cmp edx , num je hexvar jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar nop nop add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax ] cmp edx , num je hexvar cmp edx , num jne hexvar sub esp , hexvar push dword ptr [ eax + num ] call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , s0 beqz v0 , hexvar lw ra , hexvar ( sp ) sw zero , hexvar ( v0 )
push rbp push rbx sub rsp , num mov rbx , rsi mov rbp , rdx test rdi , rdi je hexvar mov rdx , rbp mov rsi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , num add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu a1 , zero , hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi push edx call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , num add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
lw v0 , hexvar ( a0 ) addiu a2 , zero , num move v1 , a1 beq v0 , a2 , hexvar lw a1 , hexvar ( a1 )
push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ecx + hexvar ] mov esi , dword ptr [ ebx + hexvar ] cmp edx , num sete al cmp edx , num sete dl or eax , edx cmp esi , num je hexvar cmp esi , num je hexvar mov edx , dword ptr [ ebx + hexvar ] and edx , hexvar test al , al je hexvar cmp edx , hexvar je hexvar mov eax , num pop ebx pop esi ret
push edi push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edx , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ esi + hexvar ] cmp edx , num sete al cmp edx , num sete dl or eax , edx cmp edi , num je hexvar cmp edi , num je hexvar mov edx , dword ptr [ esi + hexvar ] and edx , hexvar test al , al je hexvar cmp edx , hexvar je hexvar pop ebx mov eax , num pop esi pop edi ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov esi , edx mov edi , ecx cmp dword ptr [ ebx + hexvar ] , num je hexvar mov edx , edi or edx , esi jne hexvar mov eax , num jmp hexvar sub esp , num push num push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ ebx + hexvar ] , eax jmp hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , eax mov dword ptr [ ebx + hexvar ] , hexvar jmp hexvar mov ebp , esi sub esp , num push ebp push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp eax , ebp jne hexvar mov dword ptr [ esp ] , ebp mov dword ptr [ esp + num ] , num sub esi , dword ptr [ esp ] sbb edi , dword ptr [ esp + num ] mov edx , edi or edx , esi je hexvar mov ebp , dword ptr [ ebx + hexvar ] mov eax , num cmp eax , edi jl hexvar jg hexvar cmp ebp , esi jbe hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , rax sete al movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , eax call hexvar cmp eax , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar cmp rax , qword ptr [ rbp - hexvar ] sete cl and cl , num movzx r8d , cl mov dword ptr [ rbp - hexvar ] , r8d mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov r8d , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , r8d mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s2 , a2 lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar move s1 , a3 or v0 , s2 , s1 beqz v0 , hexvar lui s5 , hexvar move s6 , zero b hexvar lui s4 , hexvar addiu a1 , zero , num lui v0 , hexvar lw a0 , - hexvar ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui v1 , hexvar b hexvar sw v0 , hexvar ( v1 ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( v1 ) lui v0 , hexvar addiu v1 , zero , hexvar b hexvar sw v1 , - hexvar ( v0 ) move s0 , s1 move a2 , s0 lw a1 , hexvar ( s4 ) move a0 , s3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bne v0 , s0 , hexvar subu s0 , s1 , s0 sltu v0 , s1 , s0 subu v0 , s2 , v0 move s1 , s0 or s0 , v0 , s0 beqz s0 , hexvar move s2 , v0 lw v0 , - hexvar ( s5 ) bltz s2 , hexvar move s0 , v0 bne s6 , s2 , hexvar move a2 , s0 sltu v0 , s1 , v0 beqz v0 , hexvar lw a1 , hexvar ( s4 ) b hexvar move s0 , s1 b hexvar addiu v0 , zero , num b hexvar addiu v0 , zero , num move v0 , zero lw ra , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ rax + hexvar ] , num js hexvar mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar jmp qword ptr [ rax + hexvar ] xor eax , eax ret
mov edx , dword ptr [ esp + num ] jmp hexvar lea esi , [ esi ] lea edi , [ edi ] cmp byte ptr [ eax + hexvar ] , num js hexvar mov edx , eax mov eax , dword ptr [ edx + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar mov dword ptr [ esp + num ] , edx jmp dword ptr [ eax + hexvar ] xor eax , eax ret
b hexvar mov r0 , r3 ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldrb r2 , [ r3 , hexvar ] tst r2 , num beq hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar push { r4 , lr } ldr r3 , [ r3 , hexvar ] blx r3 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ rax + hexvar ] , num js hexvar mov rdi , rax mov rax , qword ptr [ rdi + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar jmp qword ptr [ rax + hexvar ] xor eax , eax ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , esp lea ecx , [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax ] , num call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , eax sar edx , hexvar mov esi , esp mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp lea ecx , [ ebp - hexvar ] mov dword ptr [ eax ] , ecx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , eax sar edx , hexvar mov esi , esp mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
sub rsp , hexvar mov edi , num mov rsi , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test eax , eax je hexvar mov rdi , rsp call hexvar imul rax , qword ptr [ rsp ] , hexvar add rax , qword ptr [ rsp + num ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push ebp mov ebp , esp push esi sub esp , hexvar mov dword ptr [ esp ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , eax sar edx , hexvar mov esi , esp mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , esp lea ecx , [ ebp - hexvar ] mov dword ptr [ eax ] , ecx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , eax sar edx , hexvar mov esi , esp mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov dword ptr [ esp ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , eax sar edx , hexvar mov esi , esp mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , esp lea ecx , [ ebp - hexvar ] mov dword ptr [ eax ] , ecx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , eax sar edx , hexvar mov esi , esp mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov esi , hexvar xor edx , edx mov ecx , hexvar call hexvar mov dword ptr [ rsp + num ] , eax xor eax , eax test r14 , r14 setne al mov edx , hexvar mov ecx , hexvar jmp hexvar mov qword ptr [ rbx + hexvar ] , r14 mov edx , hexvar mov esi , eax nop cmp edx , hexvar jg hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar cmp dword ptr [ rsp + num ] , num mov edx , hexvar cmove edx , ecx jmp hexvar mov edx , hexvar xor esi , esi jmp hexvar mov dword ptr [ rsp ] , esi mov eax , hexvar mov ebx , hexvar jmp hexvar cmp dword ptr [ rsp ] , num mov eax , hexvar cmove eax , ebx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , r14 call hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ rsp ] add rsp , num pop rbx pop r14 ret
push r15 push r14 push rbx mov r15 , rsi mov rbx , rdi xor r14d , r14d mov esi , hexvar xor edx , edx mov ecx , hexvar call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r15 test r15 , r15 je hexvar mov rdi , r15 call hexvar mov r14d , num mov eax , r14d pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , num test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push esi call eax mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar cmp dword ptr [ esi + num ] , hexvar je hexvar sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , eax mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esi + num ] , hexvar mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi ] , eax xor eax , eax test edi , edi mov dword ptr [ esi + hexvar ] , edi je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push rbx mov r15 , rsi mov rbx , rdi xor r14d , r14d mov esi , hexvar xor edx , edx mov ecx , hexvar call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r15 test r15 , r15 je hexvar mov rdi , r15 call hexvar mov r14d , num mov eax , r14d pop rbx pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a2 , sp , hexvar lw a0 , ( v0 )
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a2 , sp , hexvar lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , zero move a1 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar move a0 , v0 lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al lea eax , [ hexvar ] mov dword ptr [ hexvar ] , num mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar lea eax , [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jg hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar lea eax , [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax xor eax , eax cmp eax , dword ptr [ ebp - num ] jg hexvar mov eax , dword ptr [ ebp - num ] shl eax , num lea ecx , [ hexvar ] add ecx , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar ldr r0 , [ pc , hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar mov r3 , num ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num blt hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r2 , r3 , lsl num ] mov r1 , r3 mov r0 , num bl hexvar b hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , r0 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r2 , r4 mov r1 , num mov r0 , num bl hexvar mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar push num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num js hexvar lea eax , [ ebx - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + edx * num ] sub esp , num push eax push num call hexvar add esp , hexvar jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov esi , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar push esi push eax push num push num call hexvar add esp , hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw a3 , - hexvar ( gp ) addiu a2 , sp , hexvar addiu a1 , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar ldc1 f2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar addiu a2 , zero , num ldc1 f2 , hexvar ( sp ) mtc1 zero , f0 mthc1 zero , f0 c.le.d f0 , f2 bc1f hexvar addiu a2 , zero , num lw v0 , hexvar ( sp ) lb v1 , ( v0 ) beqz v1 , hexvar nop lb v0 , num ( v0 ) bnez v0 , hexvar lui a1 , hexvar addiu v0 , zero , hexvar beq v1 , v0 , hexvar addiu v0 , zero , hexvar slti v0 , v1 , hexvar beqz v0 , hexvar addiu a0 , zero , hexvar beqz v1 , hexvar addiu v0 , zero , num addiu v0 , zero , hexvar bne v1 , v0 , hexvar addiu a1 , a1 , - hexvar lui v0 , num b hexvar addiu v0 , v0 , hexvar addiu v0 , zero , num mtc1 v0 , f0 cvt.d.w f0 , f0 mul.d f0 , f0 , f2 lw v1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beq v1 , a0 , hexvar addiu v0 , zero , hexvar addiu v0 , zero , hexvar beq v1 , v0 , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 lw t9 , - hexvar ( gp )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ ebp - num ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar test al , num jne hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar movsd xmm0 , qword ptr [ ebp - num ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jb hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + num ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ ebp - num ] mov dword ptr [ esp ] , ecx movsx eax , byte ptr [ eax ] mov dword ptr [ esp + num ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ esp ] , hexvar call hexvar movsd xmm0 , qword ptr [ ebp - num ] movsd qword ptr [ ebp - hexvar ] , xmm0 fld qword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ ebp - num ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar test al , num jne hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar movsd xmm0 , qword ptr [ ebp - num ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jb hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + num ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ ebp - num ] mov dword ptr [ esp ] , ecx movsx eax , byte ptr [ eax ] mov dword ptr [ esp + num ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ esp ] , hexvar call hexvar movsd xmm0 , qword ptr [ ebp - num ] movsd qword ptr [ ebp - hexvar ] , xmm0 fld qword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ ebp - num ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar test al , num jne hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar movsd xmm0 , qword ptr [ ebp - num ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jb hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + num ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ ebp - num ] mov dword ptr [ esp ] , ecx movsx eax , byte ptr [ eax ] mov dword ptr [ esp + num ] , eax call hexvar test al , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ esp ] , hexvar call hexvar movsd xmm0 , qword ptr [ ebp - num ] movsd qword ptr [ ebp - hexvar ] , xmm0 fld qword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar add rbx , hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ]
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar add rbx , hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ]
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar add rbx , hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } add r7 , r1 , hexvar ldm r7 , { r6 , r7 } orrs r3 , r6 , r7 moveq r4 , num sub sp , sp , hexvar streq r4 , [ r2 ] beq hexvar mov fp , r2 add r3 , r1 , hexvar ldm r3 , { r2 , r3 } mov r5 , r1 orrs r1 , r2 , r3 moveq r4 , num movne r4 , num cmp r7 , r3 cmpeq r6 , r2 orrlo r4 , r4 , num cmp r4 , num mov sl , r0 beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r2 , r5 mov r6 , r0 add r1 , sl , hexvar add r0 , sl , hexvar bl hexvar mov r4 , num mov r1 , r0 ldr r2 , [ r5 , hexvar ] mov r0 , r6 bl hexvar mov r8 , r4 str r8 , [ fp ] mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } add r7 , r1 , hexvar ldm r7 , { r6 , r7 } orrs r3 , r6 , r7 moveq r4 , num sub sp , sp , hexvar streq r4 , [ r2 ] beq hexvar mov fp , r2 add r3 , r1 , hexvar ldm r3 , { r2 , r3 } mov r5 , r1 orrs r1 , r2 , r3 moveq r4 , num movne r4 , num cmp r7 , r3 cmpeq r6 , r2 orrlo r4 , r4 , num cmp r4 , num mov sl , r0 beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r2 , r5 mov r6 , r0 add r1 , sl , hexvar add r0 , sl , hexvar bl hexvar mov r4 , num mov r1 , r0 ldr r2 , [ r5 , hexvar ] mov r0 , r6 bl hexvar mov r8 , r4 str r8 , [ fp ] mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ edx + hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , edi mov edi , esi mov ebp , dword ptr [ esp + hexvar ] or edi , ebp jne hexvar mov esi , num test ecx , ecx je hexvar mov dword ptr [ ecx ] , num jmp hexvar mov edi , dword ptr [ edx + hexvar ] mov ebp , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , ebp mov esi , num cmp dword ptr [ esp + hexvar ] , ebp jb hexvar ja hexvar cmp dword ptr [ esp + num ] , edi jb hexvar mov esi , num mov dword ptr [ esp + hexvar ] , ecx mov ebp , edx mov dword ptr [ esp + hexvar ] , eax mov eax , esi test al , al jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , eax or esi , edx je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] cmp ecx , dword ptr [ eax + hexvar ] jb hexvar ja hexvar cmp edx , dword ptr [ eax + num ] jbe hexvar mov edx , ebp mov eax , dword ptr [ esp + hexvar ] call hexvar mov edi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push edi push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov edx , ebp mov eax , dword ptr [ esp + hexvar ] call hexvar mov esi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push esi push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , num mov esi , num mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi mov eax , num cmovne eax , dword ptr [ esp + num ] mov dword ptr [ edi ] , eax mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s5 , hexvar ( sp ) addiu gp , gp , hexvar sw s4 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s4 , hexvar ( a1 ) lw s5 , hexvar ( a1 ) or v0 , s4 , s5 bnez v0 , hexvar move s0 , a2 lw ra , hexvar ( sp ) move fp , zero lw s7 , hexvar ( sp ) move v0 , fp lw s6 , hexvar ( sp ) lw fp , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) sw zero , ( a2 )
push edi push esi mov edx , num push ebx mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] movzx ebx , byte ptr [ eax + hexvar ] mov eax , esi call hexvar push num xor edx , edx mov edi , eax mov ecx , hexvar mov eax , esi shr bl , num and ebx , num push ebx push num push num call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax pop ebx pop esi pop edi ret
push r12 push rbp push rbx mov rbp , rdi mov rax , qword ptr [ rdi + hexvar ] movzx ebx , byte ptr [ rax + hexvar ] shr bl , num and ebx , num call hexvar mov r12d , eax mov ecx , ebx mov edx , num mov esi , num mov rdi , rbp call hexvar mov edx , num test eax , eax jne hexvar mov eax , edx pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] movzx eax , byte ptr [ eax + hexvar ] shr al , num and eax , num movzx eax , al mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax push dword ptr [ ebp - hexvar ] push num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num push hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , num sub esp , num push edx push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] movzx ebx , byte ptr [ eax + hexvar ] shr bl , num and ebx , num mov eax , esi call hexvar mov edi , eax sub esp , hexvar push ebx mov ecx , num mov edx , num mov eax , esi call hexvar add esp , hexvar mov ecx , num test eax , eax jne hexvar mov eax , ecx pop ebx pop esi pop edi ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] shr esi , hexvar and esi , num mov ebx , esi mov esi , dword ptr [ ebp + hexvar ] mov bh , byte ptr [ esi + hexvar ] shl bl , num and bh , hexvar or bh , bl mov byte ptr [ esi + hexvar ] , bh mov esi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ esi + hexvar ] or bl , hexvar mov byte ptr [ esi + hexvar ] , bl mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax + num ] , edi mov dword ptr [ eax ] , esi mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax * num + hexvar ] lea eax , [ eax + hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lui v0 , hexvar and v0 , v1 , v0 sltu v0 , zero , v0 andi a0 , v0 , hexvar lw v1 , hexvar ( fp ) lbu v0 , hexvar ( v1 ) ins v0 , a0 , num , num sb v0 , hexvar ( v1 ) lw v1 , hexvar ( fp ) lbu v0 , hexvar ( v1 ) addiu a0 , zero , num ins v0 , a0 , num , num sb v0 , hexvar ( v1 ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a3 , v0 lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar lw v1 , hexvar ( fp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v1 , ( v0 ) lui v0 , hexvar addiu v0 , v0 , hexvar addu v0 , v1 , v0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , lr } mov lr , r2 ldr r3 , [ pc , hexvar ] ldrb ip , [ r2 , hexvar ] ldr r3 , [ r3 ] and ip , ip , hexvar lsr r2 , r3 , hexvar and r2 , r2 , hexvar orr ip , ip , r2 orr ip , ip , hexvar mov r2 , r1 strb ip , [ lr , hexvar ] mov r1 , r0 mov r0 , lr bl hexvar subs r1 , r0 , num popeq { r4 , pc } ldr r3 , [ pc , hexvar ] mov r2 , num pop { r4 , lr } add r1 , r3 , r1 , lsl num ldr r1 , [ r1 , hexvar ] add r3 , r3 , hexvar add r1 , r3 , r1 mov r0 , num b hexvar andeq r7 , r3 , r4 , ror num strheq r4 , [ r2 ] , -r8
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ hexvar ] and rdx , hexvar cmp rdx , num setne al xor al , hexvar xor al , hexvar and al , num movzx ecx , al mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx add rsi , hexvar mov al , cl mov r8b , byte ptr [ rdx + hexvar ] and al , num shl al , num mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , r8b mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , hexvar mov cl , byte ptr [ rbp - hexvar ] or al , cl mov rdx , qword ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al mov rsi , qword ptr [ rbp - hexvar ] mov al , byte ptr [ rsi + hexvar ] and al , hexvar or al , hexvar mov byte ptr [ rsi + hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar movsxd rax , dword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] add rax , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] cmp byte ptr [ edx + hexvar ] , num jne hexvar mov ecx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ edx + hexvar ] lea ebx , [ edx + ecx * num ] mov eax , dword ptr [ ebx ] mov dword ptr [ ebx ] , esi cmp ecx , dword ptr [ edx + hexvar ] je hexvar add ecx , num and ecx , num mov dword ptr [ edx + hexvar ] , ecx add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] cmp byte ptr [ edx + hexvar ] , num jne hexvar mov ecx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ edx + hexvar ] lea ebx , [ edx + ecx * num ] mov eax , dword ptr [ ebx ] mov dword ptr [ ebx ] , esi cmp ecx , dword ptr [ edx + hexvar ] je hexvar add ecx , num and ecx , num mov dword ptr [ edx + hexvar ] , ecx add esp , num pop ebx pop esi ret
cmp byte ptr [ rdi + hexvar ] , num jne hexvar mov eax , dword ptr [ rdi + hexvar ] mov esi , dword ptr [ rdi + hexvar ] lea rcx , [ rdi + rax * num ] mov rdx , rax mov eax , dword ptr [ rcx ] mov dword ptr [ rcx ] , esi cmp edx , dword ptr [ rdi + hexvar ] je hexvar add edx , num and edx , num mov dword ptr [ rdi + hexvar ] , edx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 , num ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) move s1 , a1 lui a1 , hexvar sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) addiu a1 , a1 , - hexvar sw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num beqz v0 , hexvar lw gp , hexvar ( sp ) sw zero , ( v0 )
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov r15 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ r15 + hexvar ] , rax mov r14 , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov rax , qword ptr [ r14 + num ] mov qword ptr [ rbx + num ] , rax mov ebp , num mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( s0 ) lw a0 , ( s0 )
push { r4 , r5 , r6 , lr } mov r6 , r1 subs r4 , r0 , num beq hexvar cmp r6 , num beq hexvar mov r1 , num mov r0 , r4 bl hexvar subs r5 , r0 , num moveq r4 , num beq hexvar mov r1 , num mov r0 , r5 bl hexvar subs r4 , r0 , num beq hexvar mov r0 , r5 bl hexvar cmp r0 , num beq hexvar ldr r1 , [ r6 ] ldr r2 , [ r0 ] ldr r3 , [ r1 ] cmp r2 , r3 movne r4 , num beq hexvar mov r0 , r5 bl hexvar b hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar b hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar b hexvar mov r0 , r5 bl hexvar mov r0 , r4 pop { r4 , r5 , r6 , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test esi , esi je hexvar test ebp , ebp je hexvar sub esp , num push num push esi call hexvar mov edi , eax add esp , hexvar mov esi , num test eax , eax je hexvar sub esp , num push num push eax call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov eax , edi call hexvar test eax , eax je hexvar mov edx , dword ptr [ ebp ] mov ecx , dword ptr [ eax ] mov esi , ecx mov dword ptr [ esp + hexvar ] , ecx mov ecx , dword ptr [ eax + num ] xor esi , dword ptr [ edx ] mov ebp , esi xor ecx , dword ptr [ edx + num ] mov esi , num or ebp , ecx je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar jmp hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar push edi call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test esi , esi je hexvar test ebp , ebp je hexvar lea eax , [ ebx - hexvar ] push - num push eax push num push esi xor esi , esi call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar sub esp , num push num push eax call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar mov eax , edi call hexvar test eax , eax je hexvar mov edx , dword ptr [ ebp ] mov ecx , dword ptr [ eax ] mov esi , ecx xor esi , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , ecx mov ecx , dword ptr [ eax + num ] xor ecx , dword ptr [ edx + num ] mov ebp , esi xor esi , esi or ebp , ecx je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
test rdi , rdi push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi je hexvar test r12 , r12 je hexvar lea rdx , [ rip + hexvar ] xor esi , esi mov rdi , rbx mov ecx , hexvar xor ebx , ebx call hexvar test rax , rax mov rbp , rax je hexvar mov rdi , rax mov esi , num call hexvar test eax , eax mov ebx , eax mov rdi , rbp je hexvar call hexvar test rax , rax je hexvar mov rsi , qword ptr [ r12 ] mov rdx , qword ptr [ rax ] xor ebx , ebx cmp rdx , qword ptr [ rsi ] je hexvar mov rdi , rbp call hexvar mov eax , ebx pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar test eax , eax sete al add esp , hexvar pop ebx ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar test eax , eax sete al mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
clz r3 , r2 cmp r1 , num lsr r3 , r3 , num moveq r3 , num cmp r0 , num moveq r3 , num cmp r3 , num streq r3 , [ r0 , num ] streq r3 , [ r0 ] streq r1 , [ r0 , num ] streq r2 , [ r0 , hexvar ] moveq r0 , num movne r0 , num bx lr
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - num ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , num pop rbp ret
test rsi , rsi sete cl test edx , edx setle al or cl , al jne hexvar test rdi , rdi je hexvar mov dword ptr [ rdi + num ] , num mov dword ptr [ rdi + num ] , num mov dword ptr [ rdi ] , num mov qword ptr [ rdi + hexvar ] , rsi mov dword ptr [ rdi + hexvar ] , edx mov eax , num ret
push rax mov rsi , qword ptr [ rsi ] mov rcx , qword ptr [ r8 + num ] call hexvar xor ecx , ecx test eax , eax setg cl add ecx , ecx mov eax , ecx pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] push dword ptr [ esp + hexvar ] call hexvar test eax , eax setg al add esp , hexvar movzx eax , al add eax , eax pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r1 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 ldrshls r0 , [ r1 , - hexvar ]
push rax mov rsi , qword ptr [ rsi ] mov rcx , qword ptr [ r8 + num ] call hexvar xor ecx , ecx test eax , eax setg cl add ecx , ecx mov eax , ecx pop rcx ret
push { r4 , r5 , r6 , lr } ldr r6 , [ pc , hexvar ] ldrb r3 , [ r0 , hexvar ] ldr r2 , [ r6 ] sub sp , sp , hexvar ands r4 , r3 , num str r2 , [ sp , hexvar ] bne hexvar mov r3 , num mov r1 , sp str r3 , [ r0 , hexvar ] mov r5 , r0 bl hexvar cmp r0 , num blt hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar subs r3 , r0 , num beq hexvar mov r0 , num mov r1 , num ldr r2 , [ sp , hexvar ] str r0 , [ r3 , hexvar ] str r1 , [ r3 , hexvar ] ldr r0 , [ r5 , num ] str r4 , [ r3 , hexvar ] str r2 , [ r3 , hexvar ] str r3 , [ r5 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push { r4 , lr } sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldrb r3 , [ r0 , hexvar ] tst r3 , num bne hexvar mov r4 , r0 mov r3 , num str r3 , [ r0 , hexvar ] mov r1 , sp bl hexvar cmp r0 , num blt hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r3 , num str r3 , [ r0 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ r0 , hexvar ] mov r2 , num mov r3 , num str r2 , [ r0 , hexvar ] str r3 , [ r0 , hexvar ] str r0 , [ r4 , hexvar ] ldr r0 , [ r4 , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test byte ptr [ rdi + hexvar ] , num jne hexvar mov dword ptr [ rdi + hexvar ] , num mov rsi , rsp mov rbx , rdi call hexvar test eax , eax js hexvar lea rsi , [ rip + hexvar ] mov edx , hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rdx mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test byte ptr [ esi + hexvar ] , num jne hexvar sub esp , num mov dword ptr [ esi + hexvar ] , num lea eax , [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax js hexvar lea eax , [ ebx - hexvar ] sub esp , num push hexvar push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , edx mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esi + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
cmp qword ptr [ rdi + num ] , num je hexvar mov qword ptr [ rdi ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov dword ptr [ rdi + hexvar ] , num mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar addiu a2 , zero , hexvar move a1 , zero move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar addiu a2 , zero , hexvar move a1 , zero move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) move a1 , zero move a0 , zero sw a1 , num ( v0 ) sw a0 , ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , lr } sub sp , sp , num str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] add r3 , r3 , hexvar mov r2 , hexvar mov r1 , num mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] add r3 , r3 , hexvar mov r2 , hexvar mov r1 , num mov r0 , r3 bl hexvar ldr r2 , [ sp , num ] mov r3 , num mov r4 , num stm r2 , { r3 , r4 } ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , num pop { r4 , pc }
cmp qword ptr [ rdi + num ] , num je hexvar mov qword ptr [ rdi ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 mov dword ptr [ rdi + hexvar ] , num mov eax , num ret
test rsi , rsi mov eax , num je hexvar cmp byte ptr [ rsi ] , num jne hexvar ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov eax , num cmp byte ptr [ edx ] , num je hexvar sub esp , num lea eax , [ ebx + hexvar ] push dword ptr [ eax ] push num lea esi , [ ebx - hexvar ] push esi lea eax , [ ebx - hexvar ] push eax push edx push dword ptr [ esp + hexvar ] call hexvar mov eax , dword ptr [ esi + eax * num ]
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax ] test al , al jne hexvar mov eax , num jmp hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push eax push num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov eax , dword ptr [ ebx + eax * num - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
beqz a1 , hexvar nop lb v0 , ( a1 ) beqz v0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a2 , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar lw v0 , - hexvar ( gp ) addiu v1 , zero , num lw t9 , - hexvar ( gp ) addiu a3 , s0 , hexvar addiu a2 , a2 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu s0 , s0 , hexvar lw v0 , ( v0 ) sw v1 , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) sll v0 , v0 , num lw ra , hexvar ( sp ) addu s0 , v0 , s0 lw v0 , ( s0 )
push r15 push r14 push rbx sub rsp , hexvar xorps xmm0 , xmm0 movaps xmmword ptr [ rsp ] , xmm0 xor eax , eax test rdx , rdx je hexvar mov rbx , rdi test rdi , rdi je hexvar mov r15 , rcx mov r14 , rdx lea rdi , [ rbx + hexvar ] call hexvar test eax , eax jne hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rax , qword ptr [ rbx + hexvar ] and eax , hexvar mov edx , hexvar sub rdx , rax cmp rdx , hexvar ja hexvar mov rsi , rsp mov rdi , rbx call hexvar test eax , eax jne hexvar mov dword ptr [ rbx + hexvar ] , num mov rdi , rbx mov rsi , r15 mov rdx , r14 call hexvar test eax , eax jne hexvar add qword ptr [ rbx + hexvar ] , r14 xor eax , eax add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar xorps xmm0 , xmm0 movaps xmmword ptr [ rsp ] , xmm0 xor eax , eax test rdx , rdx je hexvar mov rbx , rdi test rdi , rdi je hexvar mov r15 , rcx mov r14 , rdx lea rdi , [ rbx + hexvar ] call hexvar test eax , eax jne hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rax , qword ptr [ rbx + hexvar ] and eax , hexvar mov edx , hexvar sub rdx , rax cmp rdx , hexvar ja hexvar mov rsi , rsp mov rdi , rbx call hexvar test eax , eax jne hexvar mov dword ptr [ rbx + hexvar ] , num mov rdi , rbx mov rsi , r15 mov rdx , r14 call hexvar test eax , eax jne hexvar add qword ptr [ rbx + hexvar ] , r14 xor eax , eax add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar xorps xmm0 , xmm0 movaps xmmword ptr [ rsp ] , xmm0 xor eax , eax test rdx , rdx je hexvar mov rbx , rdi test rdi , rdi je hexvar mov r15 , rcx mov r14 , rdx lea rdi , [ rbx + hexvar ] call hexvar test eax , eax jne hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rax , qword ptr [ rbx + hexvar ] and eax , hexvar mov edx , hexvar sub rdx , rax cmp rdx , hexvar ja hexvar mov rsi , rsp mov rdi , rbx call hexvar test eax , eax jne hexvar mov dword ptr [ rbx + hexvar ] , num mov rdi , rbx mov rsi , r15 mov rdx , r14 call hexvar test eax , eax jne hexvar add qword ptr [ rbx + hexvar ] , r14 xor eax , eax add rsp , hexvar pop rbx pop r14 pop r15 ret
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx mov r15 , rcx mov r14 , rdx mov r12 , rdi mov eax , dword ptr [ rip ] test eax , eax jne hexvar mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al jae hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al popfq add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov byte ptr [ rip ] , hexvar mov byte ptr [ rip ] , hexvar xor al , hexvar add eax , num mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] shl rdx , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax nop leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebx + hexvar ] cmp edx , eax jne hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push hexvar lea edx , [ ebx + hexvar ] push edx push eax call hexvar add esp , hexvar mov edx , eax lea eax , [ ebx + hexvar ] mov dword ptr [ eax ] , edx lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax ] lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] shl eax , num lea ecx , [ edx + eax ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax ] lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] shl eax , num lea ecx , [ edx + eax ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] lea edx , [ eax + num ] lea eax , [ ebx + hexvar ] mov dword ptr [ eax ] , edx nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] cmp edx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ecx + edx * num + num ] , eax mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r2 , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] ldr ip , [ r2 ] ldr r3 , [ r4 ] ldr r5 , [ pc , hexvar ] cmp r3 , ip mov r7 , r0 mov r6 , r1 ldr r0 , [ r5 ] beq hexvar str r7 , [ r0 , r3 , lsl num ] add r2 , r0 , r3 , lsl num add r3 , r3 , num str r6 , [ r2 , num ] str r3 , [ r4 ] pop { r4 , r5 , r6 , r7 , r8 , pc } stmlo r0 ! , { r2 , r3 , r6 , r8 , sl , ip , lr } streq r6 , [ r2 , - hexvar ] !
push ebp mov ebp , esp sub esp , num cmp dword ptr [ hexvar ] , num jne hexvar test byte ptr [ hexvar ] , num jne hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] je hexvar cmp dword ptr [ hexvar ] , num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , num pop ebp ret
call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar ret lea esi , [ esi ] lea edi , [ edi ] mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx jne hexvar mov ecx , dword ptr [ eax + hexvar ] cmp dword ptr [ eax + hexvar ] , ecx je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx jne hexvar lea edx , [ eax + hexvar ] lea eax , [ eax + hexvar ] sub esp , hexvar push edx push eax call hexvar add esp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ hexvar ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] sub eax , ecx sete dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ hexvar ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp mov dword ptr [ eax + num ] , hexvar mov dword ptr [ eax ] , hexvar call hexvar mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebp ret
lui v0 , hexvar addiu a0 , v0 , hexvar lw v1 , hexvar ( a0 ) beqz v1 , hexvar lui v1 , hexvar jr ra nop lbu v1 , hexvar ( v1 ) bnez v1 , hexvar lui a1 , hexvar lw v1 , hexvar ( a0 ) lw a2 , hexvar ( a1 ) beq a2 , v1 , hexvar lw v0 , hexvar ( v0 ) bnez v0 , hexvar lui gp , hexvar addiu gp , gp , - hexvar lw t9 , - hexvar ( gp ) b hexvar addiu a1 , a1 , hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ hexvar ] mov rdx , qword ptr [ rbp - num ] movabs rdi , hexvar mov al , num call hexvar mov edi , dword ptr [ hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov al , num call hexvar mov edi , dword ptr [ hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov edi , hexvar call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ hexvar ] mov rdx , qword ptr [ rbp - num ] movabs rdi , hexvar mov al , num call hexvar mov edi , dword ptr [ hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov al , num call hexvar mov edi , dword ptr [ hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] lea eax , [ ebx - hexvar ] push eax push num call hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] call hexvar add esp , num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , esi mov ecx , edi call hexvar mov dword ptr [ esp ] , hexvar call hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] movzx edx , byte ptr [ edx ] cmp dl , hexvar sete dl mov byte ptr [ ebp - hexvar ] , dl movzx ecx , byte ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] add edx , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - num ] , num jmp hexvar movzx edx , byte ptr [ ebp - hexvar ] sub edx , hexvar or dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - hexvar ] lea ecx , [ edx + num ] mov dword ptr [ ebp - hexvar ] , ecx movzx edx , byte ptr [ edx ] mov byte ptr [ ebp - hexvar ] , dl movzx edx , byte ptr [ ebp - hexvar ] sub edx , hexvar cmp edx , num jbe hexvar movzx ecx , byte ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] cmp ecx , edx je hexvar movzx ecx , byte ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] cmp ecx , edx jne hexvar jmp hexvar movzx edx , byte ptr [ ebp - hexvar ] sub edx , hexvar or dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - hexvar ] lea ecx , [ edx + num ] mov dword ptr [ ebp - hexvar ] , ecx movzx edx , byte ptr [ edx ] mov byte ptr [ ebp - hexvar ] , dl movzx edx , byte ptr [ ebp - hexvar ] sub edx , hexvar cmp edx , num jbe hexvar cmp dword ptr [ ebp - num ] , num je hexvar movzx edx , byte ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax + edx - hexvar ] movsx eax , al mov dword ptr [ ebp - num ] , eax cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - num ] neg eax jmp hexvar mov eax , dword ptr [ ebp - num ] jmp hexvar mov eax , num leave ret
mov r3 , r0 push { r4 , r5 , lr } ldrb r5 , [ r0 ] sub sp , sp , hexvar cmp r5 , hexvar addeq r3 , r3 , num ldr r4 , [ pc , hexvar ] add r0 , sp , num str r3 , [ r0 , - num ] ! ldr r3 , [ r4 ] str r3 , [ sp , num ] bl hexvar cmp r0 , hexvar movls r0 , num bls hexvar ldr r3 , [ sp ] ldr r2 , [ pc , hexvar ] ldrb r3 , [ r3 ] cmp r5 , hexvar ldrb r0 , [ r2 , r3 ] rsbeq r0 , r0 , num ldr r2 , [ sp , num ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov dword ptr [ rbp - hexvar ] , hexvar add qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al sub eax , hexvar cmp eax , num ja hexvar add qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx edx , al mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al sub eax , hexvar cmp eax , num ja hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al sub eax , hexvar cmp eax , num jbe hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] movsx eax , al mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] movsx eax , al mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov eax , dword ptr [ rbp - hexvar ] imul eax , dword ptr [ rbp - hexvar ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a0 sw gp , hexvar ( sp ) addiu a0 , sp , hexvar sw ra , hexvar ( sp ) lw t3 , - hexvar ( gp ) lb t4 , ( v0 ) xori v1 , t4 , hexvar lw a1 , ( t3 ) sltiu v1 , v1 , num addu v0 , v0 , v1 sw a1 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) sltiu v0 , v0 , hexvar bnez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lui v1 , hexvar addiu a0 , zero , hexvar addiu v1 , v1 , - hexvar lbu v0 , ( v0 ) addu v0 , v0 , v1 beq t4 , a0 , hexvar lb v0 , ( v0 ) lw a0 , hexvar ( sp ) lw v1 , ( t3 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar negu v0 , v0 b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
test rsi , rsi je hexvar movsxd rcx , dword ptr [ rdx ] mov eax , num cmp qword ptr [ rsi + rcx * num ] , num je hexvar push rbp push rbx sub rsp , num mov rbx , rdx mov rbp , rsi mov esi , hexvar call hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num movsxd rdx , dword ptr [ rbx ] mov rdx , qword ptr [ rbp + rdx * num ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbx ] , num mov eax , num jmp hexvar mov eax , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push edi push esi xor eax , eax push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ edi ] mov esi , dword ptr [ edx + ecx * num ] test esi , esi je hexvar sub esp , num add ecx , num mov dword ptr [ edi ] , ecx push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov edi , eax mov dword ptr [ eax + hexvar ] , esi pop eax lea eax , [ ebx - hexvar ] pop edx push eax push esi call hexvar fld dword ptr [ ebx - hexvar ] add esp , hexvar test eax , eax fstp dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmovne eax , dword ptr [ ebx - hexvar ] mov dword ptr [ edi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , r7 , lr } sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , num ] ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar mov r7 , r0 mov r5 , r1 ldr r4 , [ r3 ] cmp r4 , num beq hexvar add r6 , r4 , hexvar mov r2 , hexvar mov r1 , sp mov r0 , r6 bl hexvar str r0 , [ r5 , hexvar ] ldr r3 , [ sp ] cmp r6 , r3 beq hexvar add r6 , r4 , hexvar mov r2 , hexvar mov r1 , sp mov r0 , r6 bl hexvar str r0 , [ r5 , hexvar ] ldr r3 , [ sp ] cmp r6 , r3 beq hexvar add r6 , r4 , hexvar mov r2 , hexvar mov r1 , sp mov r0 , r6 bl hexvar str r0 , [ r5 , hexvar ] ldr r3 , [ sp ] cmp r6 , r3 beq hexvar add r4 , r4 , hexvar mov r2 , num mov r1 , sp mov r0 , r4 bl hexvar str r0 , [ r5 , hexvar ] ldr r3 , [ sp ] cmp r4 , r3 beq hexvar ldr r3 , [ r7 , hexvar ] ldr r3 , [ r3 , num ] mov r0 , num str r3 , [ r5 , hexvar ] str r0 , [ r5 , hexvar ] ldr r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov esi , dword ptr [ eax ] test esi , esi je hexvar lea ebp , [ esi + hexvar ] sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar lea ebp , [ esi + hexvar ] sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar lea ebp , [ esi + hexvar ] sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar add esi , hexvar sub esp , num push num lea eax , [ esp + hexvar ] push eax push esi call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp esi , dword ptr [ esp + hexvar ] je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ edi + hexvar ] , eax mov dword ptr [ edi + hexvar ] , edx mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov esi , dword ptr [ eax ] test esi , esi je hexvar lea ebp , [ esi + hexvar ] sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar lea ebp , [ esi + hexvar ] sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar lea ebp , [ esi + hexvar ] sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar add esi , hexvar sub esp , num push num lea eax , [ esp + hexvar ] push eax push esi call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp esi , dword ptr [ esp + hexvar ] je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ edi + hexvar ] , eax mov dword ptr [ edi + hexvar ] , edx mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov esi , dword ptr [ eax ] test esi , esi je hexvar lea ebp , [ esi + hexvar ] sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar lea ebp , [ esi + hexvar ] sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar lea ebp , [ esi + hexvar ] sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp ebp , dword ptr [ esp + hexvar ] je hexvar add esi , hexvar sub esp , num push num lea eax , [ esp + hexvar ] push eax push esi call hexvar mov dword ptr [ edi + hexvar ] , eax add esp , hexvar cmp esi , dword ptr [ esp + hexvar ] je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ edi + hexvar ] , eax mov dword ptr [ edi + hexvar ] , edx mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx mov rbp , rdi sub rsp , num call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov byte ptr [ rax + rbx ] , num add rsp , num mov rdx , rbx mov rsi , rbp mov rdi , rax pop rbx pop rbp jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , a0 lw gp , hexvar ( sp ) addiu a0 , v0 , num lw t9 , - hexvar ( gp ) bal hexvar move s0 , v0 move a2 , s0 lw gp , hexvar ( sp ) addu s0 , v0 , s0 move a1 , s1 move a0 , v0 sb zero , ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal - hexvar nop
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) sb zero , num ( fp ) b hexvar nop lw v0 , num ( fp ) addiu v0 , v0 , num sw v0 , num ( fp ) lw v0 , num ( fp ) lb v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v0 , num ( fp ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lb v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop addiu v0 , zero , num sb v0 , num ( fp ) b hexvar nop lbu v0 , num ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) sw v0 , num ( fp ) sb zero , num ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , num ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov byte ptr [ rbp - hexvar ] , num jmp hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) sb zero , num ( fp ) b hexvar nop lw v0 , num ( fp ) addiu v0 , v0 , num sw v0 , num ( fp ) lw v0 , num ( fp ) lb v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v0 , num ( fp ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lb v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop addiu v0 , zero , num sb v0 , num ( fp ) b hexvar nop lbu v0 , num ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) sw v0 , num ( fp ) sb zero , num ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , num ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov rax , rdi cmp byte ptr [ rdi ] , hexvar jne hexvar add rax , num cmp byte ptr [ rax ] , hexvar je hexvar movzx ecx , byte ptr [ rax ] test cl , cl je hexvar mov rdx , rax mov esi , num mov edi , num mov r8d , num jmp hexvar mov esi , edi add rdx , num movzx ecx , byte ptr [ rdx ] test cl , cl je hexvar cmp cl , hexvar je hexvar test sil , sil je hexvar mov rax , rdx mov esi , r8d jmp hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esi ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + num ] , num mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + hexvar ] mov byte ptr [ edx + hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov byte ptr [ edx + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx test al , num mov edx , num cmovne ecx , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + hexvar ] , ecx add esp , hexvar pop esi pop ebp ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + num ] mov dword ptr [ eax ] , edx mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) move a1 , zero move a0 , zero sw a1 , hexvar ( v0 ) sw a0 , num ( v0 ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) jal hexvar nop move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esi ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + num ] , num mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + hexvar ] mov byte ptr [ edx + hexvar ] , num mov edx , dword ptr [ ebp + hexvar ] mov byte ptr [ edx + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx test al , num mov edx , num cmovne ecx , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + hexvar ] , ecx add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , num mov rdi , rax call hexvar leave ret
mov eax , dword ptr [ rsi + hexvar ] mov rcx , rdx and eax , hexvar cmp eax , hexvar je hexvar xor eax , eax ret
mov eax , dword ptr [ rsi + hexvar ] mov rcx , rdx and eax , hexvar cmp eax , hexvar je hexvar xor eax , eax ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbx + hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ rbx + hexvar ] add rax , hexvar mov rbx , qword ptr [ rax ] mov rdi , r14 call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r14 mov eax , num add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbx + hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ rbx + hexvar ] add rax , hexvar mov rbx , qword ptr [ rax ] mov rdi , r14 call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r14 mov eax , num add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbx + hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ rbx + hexvar ] add rax , hexvar mov rbx , qword ptr [ rax ] mov rdi , r14 call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r14 mov eax , num add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 lw a0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 move s3 , a3 move s2 , a2 lui a3 , hexvar addiu a3 , a3 , hexvar lui a2 , hexvar addiu a2 , a2 , hexvar jal hexvar nop lw gp , hexvar ( sp ) move a3 , s3 move a2 , s2 move a1 , s0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + num ] , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 move s3 , a3 move s2 , a2 lui a3 , hexvar addiu a3 , a3 , hexvar lui a2 , hexvar addiu a2 , a2 , hexvar jal hexvar nop lw gp , hexvar ( sp ) move a3 , s3 move a2 , s2 move a1 , s0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rdx lea rcx , [ rip + hexvar ] lea rdx , [ rip + hexvar ] call hexvar mov rdx , rbp mov rsi , rbx mov edi , num mov eax , num call hexvar add rsp , num pop rbx pop rbp ret
push { r4 , lr } mov r4 , r0 ldr r0 , [ r0 , num ] bl hexvar ldr r0 , [ r4 , hexvar ] bl hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num popeq { r4 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax + hexvar ] mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] cmp al , num je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar cmp byte ptr [ rbx + hexvar ] , num jne hexvar pop rbx ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ eax + num ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp byte ptr [ esi + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esi + num ] call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
xor ecx , ecx mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov eax , hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil jne hexvar mov eax , edx imul rax , rax , hexvar cmp qword ptr [ rax ] , num sbb ecx , ecx or ecx , edx mov eax , ecx ret
xor ecx , ecx mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov eax , hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil jne hexvar mov eax , edx imul rax , rax , hexvar cmp qword ptr [ rax ] , num sbb ecx , ecx or ecx , edx mov eax , ecx ret
xor ecx , ecx mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov eax , hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil jne hexvar mov eax , edx imul rax , rax , hexvar cmp qword ptr [ rax ] , num sbb ecx , ecx or ecx , edx mov eax , ecx ret
xor ecx , ecx mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , num cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil je hexvar mov eax , hexvar mov edx , hexvar cmp byte ptr [ rip ] , dil jne hexvar mov eax , edx imul rax , rax , hexvar cmp qword ptr [ rax ] , num sbb ecx , ecx or ecx , edx mov eax , ecx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov eax , edx mov ebp , ecx sub esp , num push hexvar push eax call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar push edi push num push hexvar push eax call hexvar mov eax , dword ptr [ edi ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar cmp eax , ebp je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar jmp hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r14d , edx mov rbp , rsi mov r15 , rdi mov ecx , hexvar jmp hexvar call hexvar mov ecx , hexvar xor ebx , ebx nop word ptr cs : [ rax + rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov rbx , qword ptr [ rsp + num ] jmp hexvar cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov rbp , rax mov ecx , hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov rdi , rax call hexvar mov ecx , hexvar cmp eax , r14d je hexvar mov ecx , hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] mov esi , hexvar xor edx , edx mov rcx , r15 call hexvar mov rax , qword ptr [ r15 ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar mov rdi , rbp mov esi , hexvar call hexvar mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov ecx , hexvar je hexvar mov ecx , hexvar jmp hexvar mov rax , rbx add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move a0 , a1 move s2 , a2 addiu a1 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a3 , s1 move a2 , zero addiu a1 , zero , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , ( s1 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beq v0 , s2 , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move a0 , v0 addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s0 , zero
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) move a0 , a1 sw s0 , hexvar ( sp ) b hexvar sw gp , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , ( s1 )
push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , eax mov dword ptr [ esi ] , ecx call hexvar add esp , hexvar pop esi ret
push edi push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi ret
push ebp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , esp mov dword ptr [ esp + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + hexvar ] , edx mov dword ptr [ eax + hexvar ] , esi mov dword ptr [ eax + hexvar ] , edi mov dword ptr [ eax + hexvar ] , ebx mov dword ptr [ eax + hexvar ] , ebp mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , esi mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , esp mov dword ptr [ esp + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + hexvar ] , edx mov dword ptr [ eax + hexvar ] , esi mov dword ptr [ eax + hexvar ] , edi mov dword ptr [ eax + hexvar ] , ebx mov dword ptr [ eax + hexvar ] , ebp mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , esi mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov rax , qword ptr [ rdi + hexvar ] shl word ptr [ rax + hexvar ] , num add rax , hexvar mov qword ptr [ rsp - num ] , rax mov rax , qword ptr [ rsp - num ] movzx eax , word ptr [ rax ] mov dword ptr [ rsp - hexvar ] , eax mov ecx , hexvar mov eax , hexvar jmp hexvar mov ecx , dword ptr [ rsp - hexvar ] cmp ecx , hexvar mov ecx , hexvar cmovg ecx , eax cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar mov rcx , qword ptr [ rsp - num ] mov word ptr [ rcx ] , hexvar mov ecx , hexvar jmp hexvar jmp hexvar
mov eax , dword ptr [ esp + num ] mov ecx , hexvar mov edx , dword ptr [ eax + hexvar ] movzx eax , word ptr [ edx + hexvar ] add eax , eax cmp ax , hexvar cmova eax , ecx mov word ptr [ edx + hexvar ] , ax jmp hexvar nop lea esi , [ esi ]
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] mov eax , dword ptr [ rdi + hexvar ] add eax , eax cmp ax , hexvar mov ecx , hexvar cmovb ecx , eax mov word ptr [ rdi + hexvar ] , cx cmp qword ptr [ rdi + hexvar ] , num jne hexvar cmp qword ptr [ rdi + hexvar ] , num jne hexvar mov word ptr [ rdi + hexvar ] , num add rdi , hexvar xor esi , esi call hexvar mov rax , qword ptr [ rbx + hexvar ] movzx ecx , word ptr [ rax + hexvar ] add qword ptr [ rax + hexvar ] , rcx mov rdi , rbx call hexvar mov ecx , hexvar add rcx , qword ptr [ rbx + hexvar ] mov rdi , rax mov esi , hexvar xor edx , edx pop rbx jmp hexvar nop word ptr [ rax + rax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v1 , hexvar ( a0 )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
mov rdx , qword ptr [ rdi + hexvar ] push rbx mov rbx , rdi mov rax , qword ptr [ rdx + hexvar ] test rax , rax je hexvar mov rsi , qword ptr [ rdx ] call rax mov qword ptr [ rbx + hexvar ] , num pop rbx ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] sub esp , num push edx push dword ptr [ ebp + num ] call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] leave ret
push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ebx + num ] mov eax , dword ptr [ edx + num ] test eax , eax je hexvar sub esp , num push dword ptr [ edx ] push ebx call eax add esp , hexvar mov dword ptr [ ebx + num ] , num add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - num ] call rax mov dword ptr [ rbp - hexvar ] , eax mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
xor eax , eax cmp rdi , rsi jne hexvar jmp hexvar nop dword ptr [ rax ] add rdi , num add rsi , num cmp al , dl jne hexvar movzx eax , byte ptr [ rdi ] mov edx , eax lea ecx , [ rax + hexvar ] sub edx , hexvar cmp dl , hexvar movzx edx , byte ptr [ rsi ] cmovb eax , ecx mov ecx , edx lea r9d , [ rdx + hexvar ] sub ecx , hexvar cmp cl , hexvar cmovb edx , r9d test al , al jne hexvar movzx eax , al movzx edx , dl sub eax , edx ret nop
cmp rdi , rsi jne hexvar jmp hexvar nop word ptr [ rax + rax ] add rdi , num add rsi , num cmp al , dl jne hexvar movzx edx , byte ptr [ rdi ] lea ecx , [ rdx - hexvar ] lea eax , [ rdx + hexvar ] cmp ecx , hexvar movzx ecx , byte ptr [ rsi ] cmova eax , edx lea r9d , [ rcx - hexvar ] lea edx , [ rcx + hexvar ] cmp r9d , hexvar cmova edx , ecx test al , al jne hexvar movzx edx , dl movzx eax , al sub eax , edx ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
test rdi , rdi push rbx mov rbx , rdi je hexvar call hexvar test eax , eax je hexvar test dword ptr [ rbx ] , hexvar jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx mov edx , num xor esi , esi call hexvar mov rdi , rbx pop rbx jmp hexvar
push { r4 , lr } subs r4 , r0 , num sub sp , sp , num beq hexvar bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r4 ] tst r3 , hexvar bne hexvar mov r0 , r4 add sp , sp , num pop { r4 , lr } b hexvar mov r1 , num mov r2 , num mov r3 , num str r1 , [ sp ] mov r0 , r4 bl hexvar mov r0 , r4 add sp , sp , num pop { r4 , lr } b hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] test ecx , ecx sete dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
test rdi , rdi push rbx mov rbx , rdi je hexvar call hexvar test eax , eax je hexvar test dword ptr [ rbx ] , hexvar jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx mov edx , num xor esi , esi call hexvar mov rdi , rbx pop rbx jmp hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx ja hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jbe hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp push rbx mov rbp , rsi mov rsi , rdx mov rdx , rcx mov rbx , rcx sub rsp , num cmp rbp , rcx cmovbe rdx , rbp call hexvar test eax , eax jne hexvar cmp rbp , rbx jb hexvar seta al movzx eax , al add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sltu a0 , v0 , a0 movz v0 , v1 , a0 move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v1 , v0 beqz v0 , hexvar nop addiu v0 , zero , - num sw v0 , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v0 , v1 beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop nop
push rbp push rbx mov rbp , rsi mov rsi , rdx mov rdx , rcx mov rbx , rcx sub rsp , num cmp rbp , rcx cmovbe rdx , rbp call hexvar test eax , eax jne hexvar xor eax , eax cmp rbp , rbx mov edx , hexvar seta al cmovb eax , edx add rsp , num pop rbx pop rbp ret
test rdi , rdi je hexvar push rbx mov ebx , edx call hexvar mov ecx , eax xor eax , eax cmp ecx , ebx sete al pop rbx ret
push ebx sub esp , num call hexvar add eax , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , eax je hexvar mov eax , num jmp hexvar mov eax , num add esp , num pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15d , edx mov r14 , rsi mov r12 , rdi test rdi , rdi mov eax , hexvar mov ebx , hexvar cmove ebx , eax mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov ebp , num nop dword ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , r12 mov rsi , r14 mov edx , r15d call hexvar cmp eax , r15d mov eax , hexvar cmove eax , r13d jmp hexvar mov eax , ebx jmp hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
test rdi , rdi je hexvar push rbx mov ebx , edx call hexvar xor ecx , ecx cmp eax , ebx sete cl mov eax , ecx pop rbx ret
push r12 push rbp mov rbp , rsi push rbx mov r12 , qword ptr [ rdi + hexvar ] mov rbx , qword ptr [ rdi + hexvar ] mov rsi , r12 mov rdi , rbx call hexvar add eax , num and eax , hexvar lea edx , [ rax + num ] cmp r12 , rdx jb hexvar lea rdi , [ rbx + rax ] mov esi , num call qword ptr [ rip + hexvar ] mov qword ptr [ rbp ] , rax mov rax , rbx pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov edi , dword ptr [ eax + hexvar ] mov ebp , dword ptr [ eax + hexvar ] push edi push esi call hexvar add esp , hexvar add eax , num and eax , hexvar cmp ebp , num ja hexvar lea edx , [ eax + num ] cmp edi , edx jb hexvar sub esp , num push num add eax , esi push eax lea eax , [ ebx + hexvar ] call dword ptr [ eax ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx ] , eax add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov edi , dword ptr [ eax + hexvar ] push ebp push esi call hexvar add eax , num add esp , hexvar and eax , hexvar cmp edi , num ja hexvar lea edx , [ eax + num ] cmp ebp , edx jb hexvar sub esp , num add eax , esi push num push eax lea eax , [ ebx + hexvar ] call dword ptr [ eax ] mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov dword ptr [ edx ] , eax add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add esi , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push eax push dword ptr [ ebp - hexvar ] mov ebx , esi call hexvar add esp , hexvar add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov ecx , eax mov ebx , num mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp ebx , edx jb hexvar cmp ebx , edx ja hexvar cmp ecx , eax jbe hexvar mov eax , num jmp hexvar lea eax , [ esi + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp + num ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] add edx , ecx sub esp , num push num push edx call eax add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov ebp , esi mov rbx , rdi movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax mov byte ptr [ rsp + hexvar ] , num cmp esi , num jl hexvar lea r12 , [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] lea r14 , [ rsp + hexvar ] mov r15 , rsp nop lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] mov rdx , r12 mov rcx , r13 mov r8 , r14 mov r9 , r15 call qword ptr [ rip + hexvar ] cmp qword ptr [ rsp + num ] , num jne hexvar add ebp , - num mov rax , qword ptr [ rsp ] mov qword ptr [ rbx ] , rax add rbx , num cmp ebp , num jg hexvar mov r14d , num test ebp , ebp je hexvar xor r14d , r14d lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov r9 , rsp xor edx , edx xor ecx , ecx call qword ptr [ rip + hexvar ] cmp qword ptr [ rsp + num ] , num jne hexvar movsxd rdx , ebp mov rsi , rsp mov rdi , rbx call hexvar mov r14d , num jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov ebp , esi mov rbx , rdi movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax mov byte ptr [ rsp + hexvar ] , num cmp esi , num jl hexvar lea r12 , [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] lea r14 , [ rsp + hexvar ] mov r15 , rsp nop lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] mov rdx , r12 mov rcx , r13 mov r8 , r14 mov r9 , r15 call qword ptr [ rip + hexvar ] cmp qword ptr [ rsp + num ] , num jne hexvar add ebp , - num mov rax , qword ptr [ rsp ] mov qword ptr [ rbx ] , rax add rbx , num cmp ebp , num jg hexvar mov r14d , num test ebp , ebp je hexvar xor r14d , r14d lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov r9 , rsp xor edx , edx xor ecx , ecx call qword ptr [ rip + hexvar ] cmp qword ptr [ rsp + num ] , num jne hexvar movsxd rdx , ebp mov rsi , rsp mov rdi , rbx call hexvar mov r14d , num jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add esi , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar cmp ebp , num mov byte ptr [ esp + hexvar ] , num jle hexvar mov eax , ebp lea ebx , [ esp + hexvar ] and eax , num mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] sub ebp , num add edi , num mov dword ptr [ edi - num ] , eax mov dword ptr [ edi - num ] , edx cmp ebp , dword ptr [ esp + hexvar ] je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ebx call dword ptr [ esi + hexvar ] add esp , hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov ebp , esi mov rbx , rdi movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax mov byte ptr [ rsp + hexvar ] , num cmp esi , num jl hexvar lea r12 , [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] lea r14 , [ rsp + hexvar ] mov r15 , rsp nop lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] mov rdx , r12 mov rcx , r13 mov r8 , r14 mov r9 , r15 call qword ptr [ rip + hexvar ] cmp qword ptr [ rsp + num ] , num jne hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ rbx ] , rax add rbx , num add ebp , - num cmp ebp , num jg hexvar mov r14d , num test ebp , ebp je hexvar xor r14d , r14d lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] mov r9 , rsp xor edx , edx xor ecx , ecx call qword ptr [ rip + hexvar ] cmp qword ptr [ rsp + num ] , num jne hexvar movsxd rdx , ebp mov rsi , rsp mov rdi , rbx call hexvar mov r14d , num jmp hexvar xor r14d , r14d mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov rax , rsi mov r15 , rdi mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r12 , rax mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rsp mov rdi , rbx call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , r15 mov rax , qword ptr [ rsp ] mov rdi , rbx mov rsi , r12 mov rdx , r14 call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rbx , qword ptr [ rsp + hexvar ] jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebx , ebx jmp hexvar xor ebx , ebx mov rdi , r12 call hexvar mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v1 , a1 sw s2 , hexvar ( sp ) lui a1 , hexvar lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) addiu a1 , a1 , hexvar sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s3 , a0 sw gp , hexvar ( sp ) move a0 , v1 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lui s0 , hexvar move s1 , v0 lw v0 , hexvar ( s0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw t9 , num ( v0 ) addiu s0 , sp , hexvar jalr t9 move a0 , s0 move a2 , s4 lw v0 , hexvar ( sp ) move a1 , s1 sw s3 , hexvar ( sp ) lw t9 , hexvar ( v0 ) jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s2 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bal hexvar nop b hexvar sw v0 , hexvar ( s0 )
push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov rax , rsi mov r15 , rdi mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r12 , rax mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rsp mov rdi , rbx call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , r15 mov rax , qword ptr [ rsp ] mov rdi , rbx mov rsi , r12 mov rdx , r14 call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rbx , qword ptr [ rsp + hexvar ] jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebx , ebx jmp hexvar xor ebx , ebx mov rdi , r12 call hexvar mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move a0 , a1 move s2 , a2 lui a1 , hexvar addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a2 , s2 move a1 , v0 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s1 , zero
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ hexvar ] , num jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , hexvar xor ecx , num mov edx , eax xor edx , ecx and edx , eax cmp edx , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , eax and ecx , hexvar xor eax , hexvar or ecx , eax mov dword ptr [ hexvar ] , ecx mov eax , dword ptr [ hexvar ] and eax , num cmp eax , num je hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ hexvar ] movsxd rcx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + rcx * num ] call hexvar jmp hexvar movsx eax , byte ptr [ hexvar ] cmp eax , num je hexvar cmp dword ptr [ rbp - num ] , num je hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , dword ptr [ hexvar ] and eax , hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ hexvar ] and eax , hexvar mov ecx , dword ptr [ hexvar ] mov edx , ecx xor edx , hexvar mov esi , eax xor esi , hexvar mov edi , hexvar xor edi , hexvar mov r8d , edx and r8d , hexvar and ecx , edi mov r9d , esi and r9d , hexvar and eax , edi or r8d , ecx or r9d , eax xor r8d , r9d or edx , esi xor edx , hexvar or edi , hexvar and edx , edi or r8d , edx mov dword ptr [ hexvar ] , r8d mov edi , dword ptr [ rbp - num ] mov esi , dword ptr [ rbp - num ] call hexvar add rsp , hexvar pop rbp ret
sub rsp , num cmp dword ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar lea eax , [ rdi - num ] cmp eax , num jbe hexvar call hexvar add rsp , num ret
cmp dword ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar lea eax , [ rdi - num ] cmp eax , num jbe hexvar jmp hexvar nop sub rsp , num test byte ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] je hexvar or dword ptr [ rip + hexvar ] , hexvar add eax , num mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov qword ptr [ rip + hexvar ] , rax add rsp , num ret
push ebx sub esp , num call hexvar add ecx , hexvar cmp dword ptr [ ecx + hexvar ] , num je hexvar cmp byte ptr [ ecx + hexvar ] , num je hexvar lea ebx , [ eax - num ] cmp ebx , num jbe hexvar sub esp , num push edx push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebx + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax movsxd rcx , dword ptr [ rbp - num ] mov dl , byte ptr [ rcx + hexvar ] mov byte ptr [ rbp - num ] , dl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar movsxd rax , dword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov edi , dword ptr [ rcx * num + hexvar ] movsxd rcx , dword ptr [ rbp - num ] shl rcx , num movabs rdx , hexvar add rdx , rcx mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov edi , dword ptr [ rbp - hexvar ] mov edx , num call hexvar movsxd rsi , dword ptr [ rbp - num ] mov qword ptr [ rsi * num + hexvar ] , rax movsxd rax , dword ptr [ rbp - num ] shl rax , num movabs rcx , hexvar add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar addiu v1 , v0 , hexvar lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lbu v0 , ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lui v0 , hexvar addiu v1 , v0 , hexvar lw v0 , hexvar ( fp ) addu v0 , v1 , v0 addiu v1 , zero , num sb v1 , ( v0 ) lui v0 , hexvar lw v1 , hexvar ( fp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw a1 , ( v0 ) lui v0 , hexvar lw v1 , hexvar ( fp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v1 , num ( v0 ) lw v0 , ( v0 ) addiu a0 , zero , num sw a0 , hexvar ( sp ) move a3 , v1 move a2 , v0 move a0 , a1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui a0 , hexvar lw a1 , hexvar ( fp ) sll a1 , a1 , num addiu a0 , a0 , hexvar addu a0 , a1 , a0 sw v1 , num ( a0 ) sw v0 , ( a0 ) lui v0 , hexvar lw v1 , hexvar ( fp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v1 , num ( v0 ) lw v0 , ( v0 ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx call hexvar add ebx , hexvar sub esp , num cmp byte ptr [ ebx + eax + hexvar ] , num je hexvar mov edx , dword ptr [ ebx + eax * num + hexvar ] mov eax , dword ptr [ ebx + eax * num + hexvar ] add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax movsxd rcx , dword ptr [ rbp - num ] mov dl , byte ptr [ rcx + hexvar ] mov byte ptr [ rbp - num ] , dl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar movsxd rax , dword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov edi , dword ptr [ rcx * num + hexvar ] movsxd rcx , dword ptr [ rbp - num ] shl rcx , num movabs rdx , hexvar add rdx , rcx mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov edi , dword ptr [ rbp - hexvar ] mov edx , num call hexvar movsxd rsi , dword ptr [ rbp - num ] mov qword ptr [ rsi * num + hexvar ] , rax movsxd rax , dword ptr [ rbp - num ] shl rax , num movabs rcx , hexvar add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , r9 mov r15 , r8 mov r12 , rcx mov r14 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar sub rsp , num mov rdi , rbp mov rsi , r13 mov rdx , rbx mov rcx , r12 mov r8 , r15 mov r9 , qword ptr [ rsp + num ] push qword ptr [ rsp + hexvar ] push qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] push rax call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push num call hexvar add esp , hexvar mov eax , num jmp hexvar push dword ptr [ esp + hexvar ] push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov r15 , r8 mov r12 , rcx mov r13 , rdx mov rbx , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar mov qword ptr [ rsp + num ] , rax mov eax , hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] mov esi , hexvar xor edx , edx mov rcx , r13 call hexvar mov rdx , qword ptr [ rsp + num ] sub rsp , num mov rdi , rbp mov rsi , rbx mov rcx , r12 mov r8 , r15 mov r9 , qword ptr [ rsp + hexvar ] push qword ptr [ rsp + hexvar ] push qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] push rax call hexvar add rsp , hexvar mov r14d , eax mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar mov eax , hexvar xor r14d , r14d jmp hexvar mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , r9 mov r15 , r8 mov r12 , rcx mov r14 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar sub rsp , num mov rdi , rbp mov rsi , r13 mov rdx , rbx mov rcx , r12 mov r8 , r15 mov r9 , qword ptr [ rsp + num ] push qword ptr [ rsp + hexvar ] push qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] push rax call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) sb a1 , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) addiu a3 , sp , hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar sltu v0 , zero , v0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , num sw s0 , hexvar ( sp ) addiu a0 , a0 , hexvar sw v0 , hexvar ( sp ) addiu a3 , sp , hexvar lw s0 , - hexvar ( gp ) addiu a2 , zero , num lw t9 , - hexvar ( gp ) sb a1 , hexvar ( sp ) addiu a1 , zero , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) sltu v0 , zero , v0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] and r3 , r3 , hexvar strb r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r0 , r3 , hexvar add r2 , sp , hexvar mov r3 , num str r3 , [ sp ] mov r3 , r2 mov r2 , num mov r1 , hexvar bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ esp + hexvar ] , al push num lea eax , [ esp + hexvar ] push eax push num push hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax call hexvar add esp , hexvar test eax , eax setne al mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar movzx eax , al pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx lea rdi , [ rbp - hexvar ] mov rsi , rcx call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] movabs rdx , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , num mov qword ptr [ rbp - num ] , num jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a1 , zero move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a3 , v0 lui v0 , hexvar addiu a2 , v0 , hexvar lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , ( v0 ) move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , num lw v1 , hexvar ( fp ) sw v0 , ( v1 ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) addiu a3 , sp , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar addiu v0 , zero , num lw v0 , hexvar ( sp ) sw v0 , ( s0 )
push { r4 , lr } sub sp , sp , hexvar mov r4 , r2 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] str r3 , [ sp , num ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r3 , sp , num ldr r2 , [ pc , hexvar ] bl hexvar cmp r0 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num ldreq r3 , [ sp , hexvar ] movne r3 , num str r3 , [ r4 ] ldr r0 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s2 , a1 move s1 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a3 , s2 addiu a2 , zero , num addiu a1 , zero , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) blez v0 , hexvar addiu v0 , zero , num beq s1 , v0 , hexvar addiu v0 , zero , num beq s1 , v0 , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , zero move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s1 , zero addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a2 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , zero , hexvar move a3 , s2 move a0 , v0 jalr t9 move s0 , v0 blez v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num beq s1 , v0 , hexvar addiu v0 , zero , num beq s1 , v0 , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) addiu a0 , zero , hexvar jalr t9 move s1 , zero lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar jalr t9 move s1 , zero lw ra , hexvar ( sp ) move v0 , s1 lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a1 , zero jalr t9 move a0 , s0 addiu a2 , zero , hexvar lw gp , hexvar ( sp ) move s1 , v0 beqz s1 , hexvar move a1 , s1 jal hexvar move a0 , s3 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax push dword ptr [ esp + hexvar ] push num push hexvar push eax call hexvar add esp , hexvar test eax , eax jle hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov edi , num sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax push dword ptr [ esp + hexvar ] push num push hexvar push eax call hexvar add esp , hexvar test eax , eax jle hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov edi , num sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] ldrb r3 , [ r3 ] cmp r3 , hexvar beq hexvar ldr r3 , [ pc , hexvar ] b hexvar mov r3 , num str r3 , [ fp , - num ] bl hexvar ldr r3 , [ pc , hexvar ] ldr r1 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num str r3 , [ sp , num ] ldr r3 , [ fp , - num ] str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc } andeq r0 , r0 , r2 , rrx andeq r0 , r0 , r0
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add eax , hexvar lea edx , [ eax + hexvar ] mov edx , dword ptr [ edx + hexvar ] movzx edx , byte ptr [ edx ] cmp dl , hexvar je hexvar lea edx , [ eax - hexvar ] jmp hexvar mov edx , num mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edi , num jmp hexvar mov edi , num lea edx , [ eax + hexvar ] mov esi , dword ptr [ edx + hexvar ] mov ebx , eax call hexvar sub esp , num push edi push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push esi push eax call hexvar add esp , hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
sub esp , hexvar call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num add esp , hexvar ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rcx , rax add rcx , hexvar mov qword ptr [ rbx + hexvar ] , rcx mov dword ptr [ rbx + hexvar ] , num mov rcx , qword ptr [ r14 + hexvar ] mov edx , dword ptr [ rcx ] mov dword ptr [ rax ] , edx mov edx , dword ptr [ rcx + num ] mov dword ptr [ rax + num ] , edx mov rdx , qword ptr [ rcx + num ] mov qword ptr [ rax + num ] , rdx mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov eax , num add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov rcx , rax add rcx , hexvar mov qword ptr [ rbx + hexvar ] , rcx mov dword ptr [ rbx + hexvar ] , num mov rcx , qword ptr [ r14 + hexvar ] mov edx , dword ptr [ rcx ] mov dword ptr [ rax ] , edx mov edx , dword ptr [ rcx + num ] mov dword ptr [ rax + num ] , edx mov rdx , qword ptr [ rcx + num ] mov qword ptr [ rax + num ] , rdx mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov eax , num add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 move s1 , a1 jal hexvar nop beqz v0 , hexvar lw ra , hexvar ( sp ) lw v1 , hexvar ( s1 )
push r12 push rbp push rbx mov r12 , rdi mov rbx , rsi mov rbp , rdx mov rax , qword ptr [ rdi + num ] mov rdi , rsi call qword ptr [ rax + hexvar ] mov qword ptr [ rbp ] , rax lea rdi , [ rbx + num ] mov rax , qword ptr [ r12 + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + num ] , rax lea rdi , [ rbx + hexvar ] mov rax , qword ptr [ r12 + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , rax pop rbx pop rbp pop r12 ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , hexvar mov eax , dword ptr [ edi + num ] push ebx call dword ptr [ eax + hexvar ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , edx lea edx , [ ebx + num ] add ebx , hexvar mov dword ptr [ esp ] , edx call dword ptr [ eax + hexvar ] mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esp ] , ebx call dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , edx pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r9 mov rcx , qword ptr [ rcx ] mov qword ptr [ rsi ] , rcx mov rcx , qword ptr [ rax ] mov rcx , qword ptr [ rcx + num ] mov rcx , qword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rsi ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi call rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi ] add rdi , num call rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi ] add rdi , hexvar call rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] mov qword ptr [ rdx + hexvar ] , rax mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , hexvar mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , num push edi push eax call hexvar add esp , hexvar cmp eax , - num mov ebp , eax jne hexvar mov edx , dword ptr [ ebx + hexvar ] sub esp , num push edi push edx call hexvar add esp , hexvar test eax , eax setne al movzx eax , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) addiu v0 , zero , - num beq v1 , v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , num push esi push eax call hexvar add esp , hexvar cmp eax , - num mov edi , eax jne hexvar mov edx , dword ptr [ ebx + hexvar ] sub esp , num push esi push edx call hexvar add esp , hexvar test eax , eax setne al movzx eax , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , - num je hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num add esp , hexvar pop ebx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi jle hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar mov esi , num push hexvar push eax lea eax , [ ebx - hexvar ] push eax mov eax , dword ptr [ ebx + hexvar ] push num push dword ptr [ eax ] call hexvar add esp , hexvar add esp , num mov eax , esi pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) blez a1 , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lui a3 , hexvar lui a2 , hexvar lw t9 , - hexvar ( gp ) addiu a3 , a3 , - hexvar addiu a2 , a2 , - hexvar lw a0 , ( v0 ) addiu v0 , zero , hexvar addiu a1 , zero , num jalr t9 sw v0 , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move s0 , a1 bal hexvar move s1 , a0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp )
push rbp push rbx push rax test esi , esi jg hexvar mov ebp , esi mov rbx , rdi call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar test eax , hexvar jne hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rdi , rbx add rsp , num pop rbx pop rbp jmp hexvar mov rdi , rbx call hexvar mov rdi , rax mov esi , num call hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar xor eax , eax call hexvar mov ebp , num mov eax , ebp add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar blez a1 , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s1 , a0 move s0 , a1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move v0 , s0 move a0 , s1 lw t9 , - hexvar ( gp )
sub esp , hexvar call hexvar add eax , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] push num push num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw a1 , hexvar ( sp ) addiu a1 , sp , hexvar sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar move a3 , zero lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
sub esp , hexvar lea edx , [ esp + hexvar ] push num push dword ptr [ esp + hexvar ] push num push num mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
sub esp , hexvar call hexvar add eax , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] push num push num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r2 , hexvar mov r1 , num ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 mov r2 , r3 ldr r3 , [ pc , hexvar ] mov r1 , num strb r1 , [ r3 , r2 ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 blo hexvar ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 , num ] ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc } andeq r0 , r0 , fp , lsr num andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al mov byte ptr [ ecx + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num jne hexvar mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r2 , hexvar mov r1 , num ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 mov r2 , r3 ldr r3 , [ pc , hexvar ] mov r1 , num strb r1 , [ r3 , r2 ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 blo hexvar ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 , num ] ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc } ldrdeq r0 , r1 , [ r0 ] , - fp andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea ecx , [ ebp - num ] mov dword ptr [ esp + num ] , ecx call hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] setb cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] movsx ecx , al mov dword ptr [ esp ] , ecx call hexvar movzx ecx , al lea edx , [ hexvar ] add edx , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov al , byte ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num jmp hexvar lea eax , [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , esi shr edx , cl mov esi , dword ptr [ ebp + num ] mov edi , hexvar sub edi , dword ptr [ ebp + hexvar ] mov ecx , edi shl esi , cl or edx , esi mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ror r3 , r2 , r3 mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , esi shr edx , cl mov esi , dword ptr [ ebp + num ] mov edi , hexvar sub edi , dword ptr [ ebp + hexvar ] mov ecx , edi shl esi , cl or edx , esi mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov ecx , eax ror edx , cl mov eax , edx pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num lea edx , [ eax + hexvar ] lea eax , [ ebx - hexvar ] call hexvar mov eax , num add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num lea edx , [ eax + hexvar ] mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num lea eax , [ ebx - hexvar ] call hexvar add esp , hexvar mov eax , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov eax , num leave ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ esp ] , eax call hexvar mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui s0 , hexvar lw s1 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a0 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) lw v0 , hexvar ( s0 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar nop lw t9 , hexvar ( v0 ) jalr t9 move a0 , zero lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , hexvar ( sp ) lui s2 , hexvar lw t9 , - hexvar ( gp ) addiu a3 , zero , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , num jalr t9 addiu a0 , zero , num move a1 , s3 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar lw a0 , hexvar ( sp ) addiu a3 , zero , hexvar lw gp , hexvar ( sp ) addiu a2 , s2 , - hexvar addiu a1 , zero , num sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num lw v1 , hexvar ( s0 ) lw t9 , hexvar ( v1 ) jalr t9 addiu a0 , sp , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop b hexvar lw v0 , hexvar ( s0 ) b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push num call dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar lea edi , [ ebx - hexvar ] push hexvar push edi push num push num call hexvar pop eax pop edx push esi push dword ptr [ esp + hexvar ] call hexvar push hexvar push edi mov esi , eax push num push num call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] lea edx , [ esp + hexvar ] push edx call dword ptr [ eax + hexvar ] add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push r15 push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , hexvar mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] xor r15d , r15d xor edi , edi call qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax test rax , rax je hexvar mov rbx , rax mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar mov rdi , rbx mov rsi , r14 call hexvar mov r15 , rax mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rsp + num ] call qword ptr [ rax + hexvar ] mov rax , r15 add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , hexvar mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] xor r15d , r15d xor edi , edi call qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax test rax , rax je hexvar mov rbx , rax mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar mov rdi , rbx mov rsi , r14 call hexvar mov r15 , rax mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] lea rdi , [ rsp + num ] call qword ptr [ rax + hexvar ] mov rax , r15 add rsp , hexvar pop rbx pop r14 pop r15 ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r0 , [ fp , - num ] bl hexvar ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] mov r0 , r0 sub sp , fp , num pop { fp , pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar call hexvar sub esp , hexvar mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num pop eax push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar call hexvar sub esp , hexvar mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num pop eax push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar pop ebx pop esi ret
push r14 push r13 mov r13 , rcx push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , rcx sub rax , rdi cmp rax , num jle hexvar movzx r14d , byte ptr [ rdi ] lea r12d , [ rsi + rsi ] lea rbx , [ rdi + num ] and r12d , hexvar mov esi , r14d and r14d , hexvar shr sil , num or r12d , esi cmp rbx , rcx jae hexvar movzx eax , byte ptr [ rdi + num ] lea rbx , [ rdi + num ] mov rbp , rax and ebp , hexvar test al , al jns hexvar xor ecx , ecx jmp hexvar nop dword ptr [ rax ] add rbx , num movzx esi , byte ptr [ rbx - num ] mov rax , rsi and eax , hexvar shl rax , cl or rbp , rax test sil , sil jns hexvar add ecx , num cmp r13 , rbx ja hexvar test r12b , num mov qword ptr [ rip + hexvar ] , rbp mov dword ptr [ rdx ] , num mov byte ptr [ rsp + hexvar ] , num lea rsi , [ rip + hexvar ] jne hexvar test r12b , num lea r13 , [ rsp + hexvar ] jne hexvar test r12b , num jne hexvar and r12d , num jne hexvar mov r12 , rsp lea rcx , [ rip + hexvar ] mov r8d , r14d and r8d , hexvar mov edx , hexvar mov esi , num mov rdi , r12 xor eax , eax call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov r9 , rbp mov r8 , r12 mov rcx , r13 mov edi , num xor eax , eax call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] mov rax , rbx jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx r8d , byte ptr [ rdi ] lea ebx , [ rsi + rsi ] and ebx , hexvar mov esi , r8d shr sil , num or ebx , esi and r8d , hexvar mov r12d , r8d lea rdi , [ rsp + num ] call hexvar mov r13 , rax mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rbp ] , num mov byte ptr [ rsp + hexvar ] , num lea rsi , [ rip + hexvar ] test bl , num jne hexvar test bl , num jne hexvar test bl , num jne hexvar test bl , num jne hexvar lea rbx , [ rsp + hexvar ] mov r8d , r12d and r8d , hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar mov esi , num mov rdi , rbx mov eax , num call hexvar lea rcx , [ rsp + hexvar ] mov r9 , r13 mov r8 , rbx lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx r8d , byte ptr [ rdi ] lea ebx , [ rsi + rsi ] and ebx , hexvar mov esi , r8d shr sil , num or ebx , esi and r8d , hexvar mov r12d , r8d lea rdi , [ rsp + num ] call hexvar mov r13 , rax mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rbp ] , num mov byte ptr [ rsp + hexvar ] , num lea rsi , [ rip + hexvar ] test bl , num jne hexvar test bl , num jne hexvar test bl , num jne hexvar test bl , num jne hexvar lea rbx , [ rsp + hexvar ] mov r8d , r12d and r8d , hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar mov esi , num mov rdi , rbx mov eax , num call hexvar lea rcx , [ rsp + hexvar ] mov r9 , r13 mov r8 , rbx lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r14 push r13 push r12 push rbp lea r12d , [ rsi + rsi ] push rbx lea rbx , [ rdi + num ] and r12d , hexvar sub rsp , hexvar movzx r13d , byte ptr [ rdi ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax movzx eax , byte ptr [ rdi + num ] mov esi , r13d and r13d , hexvar shr sil , num mov rbp , rax or r12d , esi and ebp , hexvar test al , al jns hexvar xor ecx , ecx nop word ptr [ rax + rax ] add rbx , num movzx esi , byte ptr [ rbx - num ] add ecx , num mov rax , rsi and eax , hexvar shl rax , cl or rbp , rax test sil , sil js hexvar test r12b , num mov qword ptr [ rip + hexvar ] , rbp mov dword ptr [ rdx ] , num mov byte ptr [ rsp + hexvar ] , num lea rsi , [ rip + hexvar ] jne hexvar test r12b , num lea r14 , [ rsp + hexvar ] jne hexvar test r12b , num jne hexvar and r12d , num jne hexvar mov r12 , rsp lea rcx , [ rip + hexvar ] mov r8d , r13d and r8d , hexvar mov edx , hexvar mov esi , num mov rdi , r12 xor eax , eax call hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov r9 , rbp mov r8 , r12 mov rcx , r14 mov edi , num call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] mov rax , rbx jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi ] mov ecx , dword ptr [ esi + num ] xor edx , dword ptr [ ebx ] xor ecx , dword ptr [ ebx + num ] or ecx , edx je hexvar xor eax , eax pop ebx pop esi ret
mov eax , num mov rdx , qword ptr [ rsi ] cmp qword ptr [ rdi ] , rdx jne hexvar mov rax , qword ptr [ rsi + num ] cmp qword ptr [ rdi + num ] , rax sete al movzx eax , al and eax , num ret
push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi ] mov ecx , dword ptr [ esi + num ] xor edx , dword ptr [ ebx ] xor ecx , dword ptr [ ebx + num ] or ecx , edx je hexvar xor eax , eax pop ebx pop esi ret
xor eax , eax mov rdx , qword ptr [ rsi ] cmp qword ptr [ rdi ] , rdx je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rsi + num ] cmp qword ptr [ rdi + num ] , rax sete al ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp - hexvar ] , num sete bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ eax + hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ eax ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , num setne dl xor dl , hexvar xor dl , hexvar and dl , num mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] test rdx , rdx sete al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar test rax , rax setne byte ptr [ rbp - num ] mov rax , qword ptr [ rip + hexvar ] jmp rax mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx sub esp , num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] mov ebx , ecx call hexvar add esp , hexvar test eax , eax setne al mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move v1 , a1 lw t1 , hexvar ( a2 )
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + num ] mov esi , hexvar call hexvar lea rdx , [ rbx + hexvar ] mov edi , hexvar mov rsi , rbx call hexvar mov rdi , rbx pop rbx jmp hexvar ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + num ] mov esi , hexvar call hexvar lea rdx , [ rbx + hexvar ] mov edi , hexvar mov rsi , rbx call hexvar mov rdi , rbx pop rbx jmp hexvar ret
beqz a0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a1 , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu a1 , a1 , - hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( a0 ) addiu a0 , zero , hexvar lw gp , hexvar ( sp ) addiu a2 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a1 , s0 move a0 , s0 lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar jr ra nop
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + num ] mov esi , hexvar call hexvar lea rdx , [ rbx + hexvar ] mov edi , hexvar mov rsi , rbx call hexvar mov rdi , rbx pop rbx jmp hexvar ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar movsx ecx , byte ptr [ ebx + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test cl , cl je hexvar mov eax , dword ptr [ ebx + hexvar ] movzx eax , byte ptr [ eax - num ] cmp al , hexvar je hexvar ja hexvar cmp al , hexvar jne hexvar mov edx , esi mov eax , hexvar mov byte ptr [ esp + hexvar ] , cl call hexvar movsx ecx , byte ptr [ esp + hexvar ] lea eax , [ ebx + ecx - hexvar ] sub esp , num push eax push dword ptr [ ebx + hexvar ] call hexvar mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar mov edx , esi pop ebx mov eax , edi pop esi pop edi jmp hexvar nop lea esi , [ esi ] cmp al , hexvar je hexvar mov edx , esi mov eax , num mov byte ptr [ esp + hexvar ] , cl call hexvar movsx ecx , byte ptr [ esp + hexvar ] jmp hexvar nop lea esi , [ esi ] cmp al , hexvar je hexvar cmp al , hexvar jne hexvar mov edx , esi mov eax , num mov byte ptr [ esp + hexvar ] , cl call hexvar movsx ecx , byte ptr [ esp + hexvar ] jmp hexvar nop
push r12 push rbp mov r12d , edi push rbx movsx rbx , byte ptr [ rip + hexvar ] mov ebp , esi test bl , bl je hexvar mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax - num ] cmp al , hexvar je hexvar ja hexvar cmp al , hexvar jne hexvar mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] lea rsi , [ rip + hexvar ] add rsi , rbx call hexvar pop rbx mov esi , ebp mov edi , r12d mov qword ptr [ rip + hexvar ] , rax pop rbp pop r12 jmp hexvar nop cmp al , hexvar je hexvar mov esi , ebp mov edi , num call hexvar jmp hexvar nop word ptr [ rax + rax ] cmp al , hexvar je hexvar cmp al , hexvar jne hexvar mov esi , ebp mov edi , num call hexvar jmp hexvar nop
push rbp push rbx sub rsp , num mov ebp , edi mov ebx , esi cmp byte ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax - num ] cmp al , hexvar je hexvar cmp al , hexvar ja hexvar cmp al , hexvar jne hexvar mov edi , hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar mov esi , ebx mov edi , ebp call hexvar add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov ebp , edi mov ebx , esi cmp byte ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] movzx eax , byte ptr [ rax - num ] cmp al , hexvar je hexvar cmp al , hexvar ja hexvar cmp al , hexvar jne hexvar mov edi , hexvar call hexvar lea rdi , [ rip + hexvar ] call hexvar mov esi , ebx mov edi , ebp call hexvar add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw s1 , hexvar ( fp ) lw s0 , hexvar ( fp ) beq s1 , s0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lbu v0 , ( s1 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , ( s0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , - num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu s1 , s1 , num addiu s0 , s0 , num lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beq v1 , v0 , hexvar nop lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) subu v0 , v1 , v0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] cmp ebx , esi je hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar jmp hexvar lea esi , [ esi ] test al , al je hexvar add dword ptr [ esp + hexvar ] , num add esi , num cmp al , dl jne hexvar mov eax , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ eax ] mov edx , eax lea ecx , [ eax + hexvar ] sub edx , hexvar cmp dl , hexvar movzx edx , byte ptr [ esi ] cmovb eax , ecx mov ecx , edx lea ebp , [ edx + hexvar ] sub ecx , hexvar cmp cl , hexvar cmovb edx , ebp sub dword ptr [ esp + hexvar ] , num jne hexvar movzx eax , al movzx edx , dl pop ebx sub eax , edx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw s1 , hexvar ( fp ) lw s0 , hexvar ( fp ) beq s1 , s0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lbu v0 , ( s1 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , ( s0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , - num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu s1 , s1 , num addiu s0 , s0 , num lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beq v1 , v0 , hexvar nop lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) subu v0 , v1 , v0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw s1 , hexvar ( fp ) lw s0 , hexvar ( fp ) beq s1 , s0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lbu v0 , ( s1 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , ( s0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , - num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu s1 , s1 , num addiu s0 , s0 , num lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beq v1 , v0 , hexvar nop lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) subu v0 , v1 , v0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar test eax , eax je hexvar mov esi , eax cmp dword ptr [ eax + num ] , num je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push num push num push dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , esi pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r0 , [ r3 , hexvar ] mov r3 , num mov r2 , num ldr r1 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) move a3 , zero move a2 , zero lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) b hexvar nop nop b hexvar nop nop b hexvar nop nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop move s0 , v0 lw v0 , num ( v0 ) beqz v0 , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a3 , zero move a2 , zero move a1 , s1 lw a0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] bl hexvar mov r2 , r0 mov r3 , hexvar str r3 , [ r2 ] mvn r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push { r4 , lr } mov r4 , r0 bl hexvar adds r4 , r4 , num movne r4 , num cmp r0 , num movne r4 , num cmp r4 , num popeq { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
endbr64 push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] test rdi , rdi sete al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi endbr64 mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax endbr64 mov rdi , qword ptr [ rbp - num ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax endbr64 mov rdi , qword ptr [ rbp - num ] call hexvar endbr64 mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar mov edx , ecx sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , hexvar jle hexvar cmp dword ptr [ ebp + num ] , hexvar jg hexvar cmp dword ptr [ ebp + num ] , hexvar jle hexvar cmp dword ptr [ ebp + num ] , hexvar jle hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar cmp eax , hexvar jle hexvar mov eax , dword ptr [ ebp + num ] and eax , hexvar cmp eax , hexvar jle hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] cmp eax , hexvar jg hexvar cmp eax , hexvar jge hexvar sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp eax , hexvar jl hexvar cmp eax , hexvar jle hexvar sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] cmp eax , hexvar jg hexvar cmp eax , hexvar jge hexvar sub eax , hexvar cmp eax , hexvar ja hexvar jmp hexvar cmp eax , hexvar jl hexvar cmp eax , hexvar jle hexvar sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw s1 , - hexvar ( v0 ) beqz s1 , hexvar lui v0 , hexvar lw s0 , - hexvar ( v0 ) sll s0 , s0 , num addu s0 , s1 , s0 lw a0 , ( s0 ) beqz a0 , hexvar move s2 , v0 jal hexvar nop lw gp , hexvar ( sp ) sw zero , ( s0 ) jal hexvar nop lw gp , hexvar ( sp ) lw s0 , - hexvar ( s2 ) sll s0 , s0 , num addu s0 , s1 , s0 lw a0 , ( s0 ) bnez a0 , hexvar nop move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) move v0 , zero lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] jmp hexvar mov eax , num sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] shl edx , num add eax , edx mov dword ptr [ eax ] , num call hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , num call hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar lui gp , hexvar sw s3 , hexvar ( sp ) lui s3 , hexvar sw s2 , hexvar ( sp ) addiu gp , gp , - hexvar sw s4 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s2 , hexvar ( s3 ) beqz s2 , hexvar lui s4 , hexvar lw s0 , hexvar ( s4 ) sll s0 , s0 , num addu s0 , s2 , s0 lw s1 , ( s0 ) beqz s1 , hexvar lw t9 , - hexvar ( gp ) lw v0 , hexvar ( s1 )
push rbp push rbx sub rsp , num mov rbp , qword ptr [ rip + hexvar ] test rbp , rbp jne hexvar jmp hexvar nop dword ptr [ rax ] call hexvar mov qword ptr [ rbx ] , num call hexvar mov rax , qword ptr [ rip + hexvar ] lea rbx , [ rbp + rax * num ] mov rdi , qword ptr [ rbx ] test rdi , rdi jne hexvar mov rdi , rbp call hexvar mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num xor eax , eax mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp ret
push rbp push rbx push rax mov rbx , rsi mov rax , rdi mov rdi , rsi test rsi , rsi jne hexvar mov rdi , rax call hexvar mov rdi , rax test rax , rax je hexvar mov eax , dword ptr [ rdi ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , num je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar mov ebp , hexvar xor edi , edi jmp hexvar xor ebp , ebp test rbx , rbx jne hexvar jmp hexvar mov ebp , num test rbx , rbx jne hexvar call hexvar mov eax , ebp add rsp , num pop rbx pop rbp ret
push rbp push rbx push rax mov rbx , rsi mov rax , rdi mov rdi , rsi test rsi , rsi jne hexvar mov rdi , rax call hexvar mov rdi , rax test rax , rax je hexvar mov eax , dword ptr [ rdi ] cmp eax , num je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar xor ebp , ebp test rbx , rbx jne hexvar jmp hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar cmp eax , hexvar sete cl cmp eax , hexvar sete dl xor dl , cl mov ebp , num jne hexvar cmp eax , hexvar sete cl cmp eax , hexvar sete al xor al , cl movzx eax , al lea ebp , [ rax * num - num ] test rbx , rbx jne hexvar jmp hexvar mov ebp , hexvar xor edi , edi call hexvar mov eax , ebp add rsp , num pop rbx pop rbp ret
push rbp push rbx push rax mov rbx , rsi mov rax , rdi mov rdi , rsi test rsi , rsi jne hexvar mov rdi , rax call hexvar mov rdi , rax test rax , rax je hexvar mov eax , dword ptr [ rdi ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , num je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar mov ebp , hexvar xor edi , edi jmp hexvar xor ebp , ebp test rbx , rbx jne hexvar jmp hexvar mov ebp , num test rbx , rbx jne hexvar call hexvar mov eax , ebp add rsp , num pop rbx pop rbp ret
push rbp push rbx push rax mov rbx , rsi mov rax , rdi mov rdi , rsi test rsi , rsi jne hexvar mov rdi , rax call hexvar mov rdi , rax test rax , rax je hexvar mov eax , dword ptr [ rdi ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , num je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar mov ebp , num test rbx , rbx jne hexvar jmp hexvar mov ebp , hexvar xor edi , edi jmp hexvar xor ebp , ebp test rbx , rbx jne hexvar jmp hexvar mov ebp , num test rbx , rbx jne hexvar call hexvar mov eax , ebp add rsp , num pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a2 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) beqz a1 , hexvar lw a0 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 move s4 , a2 bnez a1 , hexvar lw s3 , num ( a0 )
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi mov r13 , rdx mov r12 , qword ptr [ rdi + num ] test rsi , rsi je hexvar mov rdi , qword ptr [ rbx + num ] mov esi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax cmp rax , qword ptr [ rbx + hexvar ] jne hexvar sub rax , r12 mov rsi , rax mov rdx , r13 mov rdi , r12 call hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov r12 , qword ptr [ rbx + num ] jmp hexvar sub rbp , num add rax , num mov qword ptr [ rbx + num ] , rax test rbp , rbp jne hexvar mov rsi , qword ptr [ rbx + num ] sub rsi , r12 mov rdx , r13 mov rdi , r12 call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a2 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) beqz a1 , hexvar lw a0 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( a1 )
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp ] , rax mov rax , qword ptr [ rsi + hexvar ] mov rsi , rsp mov qword ptr [ rsp + num ] , rax call hexvar test eax , eax je hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar lea rsi , [ rip + hexvar ] mov rbp , rax mov edx , num xor edi , edi call hexvar mov rdx , rbp mov rdi , rax mov rsi , rbx xor eax , eax call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp ] , rax mov rax , qword ptr [ rsi + hexvar ] mov rsi , rsp mov qword ptr [ rsp + num ] , rax call hexvar test eax , eax je hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar lea rsi , [ rip + hexvar ] mov rbp , rax mov edx , num xor edi , edi call hexvar mov rdx , rbp mov rdi , rax mov rsi , rbx xor eax , eax call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rsi + hexvar ] mov qword ptr [ rsp ] , rax mov rax , qword ptr [ rsi + hexvar ] mov rsi , rsp mov qword ptr [ rsp + num ] , rax call hexvar test eax , eax je hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar lea rsi , [ rip + hexvar ] mov rbp , rax mov edx , num xor edi , edi call hexvar mov rdx , rbp mov rdi , rax mov rsi , rbx xor eax , eax call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
ldr r3 , [ r0 , hexvar ] ldr r2 , [ r1 , hexvar ] cmp r2 , r3 blt hexvar bgt hexvar ldr r3 , [ r1 , hexvar ] ldr r2 , [ r0 , hexvar ] subs r3 , r3 , r2 bne hexvar ldr r1 , [ r1 ] ldr r0 , [ r0 ] b hexvar mov r3 , num mov r0 , r3 bx lr mvn r3 , num b hexvar
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num lea eax , [ eax - hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rdx , qword ptr [ rdi + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov edx , dword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov edx , dword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax add rsp , num pop rbx pop r14 jmp hexvar nop
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] sub esp , num lea eax , [ ebx - hexvar ] push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ edi + hexvar ] push eax push esi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 lw a2 , hexvar ( a0 )
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rdx , qword ptr [ rdi + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov edx , dword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov edx , dword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov esi , hexvar mov rdi , r14 xor eax , eax add rsp , num pop rbx pop r14 jmp hexvar nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a2 , zero sw s1 , hexvar ( sp ) move a3 , a1 lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s3 , hexvar ( sp ) addiu s3 , sp , hexvar sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s0 , hexvar ( sp ) move a1 , s3 sw gp , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop move s4 , v1 lw a0 , hexvar ( sp ) addiu v1 , v1 , - num lw gp , hexvar ( sp ) sltiu v0 , v1 , hexvar beqz v0 , hexvar addu s0 , s0 , a0 sll a1 , v1 , num lui v1 , hexvar addiu v1 , v1 , hexvar addu v1 , v1 , a1 lw v0 , ( v1 ) jr v0 nop lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a0 , zero , num addiu a1 , a1 , - hexvar jalr t9 nop addiu a0 , zero , - num move a1 , s0 jal hexvar move a2 , s2 lw gp , hexvar ( sp ) move s0 , v0 lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a2 , zero move a1 , s3 move a0 , s0 jalr t9 move a3 , s2 lui a1 , hexvar lw gp , hexvar ( sp ) move a2 , v1 addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax lea eax , [ ebp - hexvar ] push eax push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] add dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , num mov ecx , eax xor ecx , dword ptr [ ebp - hexvar ] mov esi , ecx mov eax , edx xor eax , dword ptr [ ebp - hexvar ] mov edi , eax mov eax , edi or eax , esi test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] or eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num cmp eax , hexvar ja hexvar shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push { r4 , r5 , r6 , r7 , lr } ldr r5 , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ r5 ] mov r3 , r1 mov r2 , num mov r6 , r1 mov r1 , sp mov r4 , r0 str ip , [ sp , num ] bl hexvar ldr r2 , [ sp ] sub r3 , r0 , num mov r7 , r0 add r4 , r4 , r2 cmp r3 , hexvar ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq r6 , r1 , r4 , asr num muleq r1 , r4 , ip andeq r6 , r1 , r0 , ror num andeq r6 , r1 , r4 , lsr sp andeq r6 , r1 , r8 , asr sp andeq r6 , r1 , r0 , lsr num ldrdeq r6 , r7 , [ r1 ] , -r0 ldrdeq r6 , r7 , [ r1 ] , -r0 andeq r6 , r1 , r8 , lsr num andeq r6 , r1 , r4 , ror num andeq r6 , r1 , ip , lsr num strdeq r6 , r7 , [ r1 ] , -r4 andeq r6 , r1 , r4 , lsr num andeq r6 , r1 , ip , lsr num strdeq r6 , r7 , [ r1 ] , -ip mov r3 , r6 mov r2 , num mov r0 , r4 mov r1 , sp bl hexvar ldr r3 , [ sp ] mov r2 , r0 ldr r1 , [ pc , hexvar ] mov r0 , num add r4 , r4 , r3 bl hexvar ldr r2 , [ sp , num ] ldr r3 , [ r5 ] mov r0 , r4 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a2 , zero sw s1 , hexvar ( sp ) move a3 , a1 lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s3 , hexvar ( sp ) addiu s3 , sp , hexvar sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s0 , hexvar ( sp ) move a1 , s3 sw gp , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop move s4 , v1 lw a0 , hexvar ( sp ) addiu v1 , v1 , - num lw gp , hexvar ( sp ) sltiu v0 , v1 , hexvar beqz v0 , hexvar addu s0 , s0 , a0 sll a1 , v1 , num lui v1 , hexvar addiu v1 , v1 , hexvar addu v1 , v1 , a1 lw v0 , ( v1 )
xor eax , eax mov rdx , qword ptr [ rsi ] cmp qword ptr [ rdi ] , rdx je hexvar ret nop dword ptr [ rax ] mov rax , qword ptr [ rsi + num ] cmp qword ptr [ rdi + num ] , rax sete al ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx xor ebx , ebx or esi , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov byte ptr [ ebp - hexvar ] , bl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] xor eax , edx xor ecx , esi or ecx , eax sete bl mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] xor ecx , ecx test al , num mov edx , num cmovne ecx , edx cmp ecx , num setne al and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl movzx edi , dl mov edi , dword ptr [ edi * num + hexvar ] xor ebx , ebx mov dl , bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov byte ptr [ ebp - hexvar ] , dl jmp edi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] xor eax , edx xor ecx , esi or ecx , eax sete bl mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl jmp eax mov al , byte ptr [ ebp - hexvar ] xor ecx , ecx test al , num mov edx , num cmovne ecx , edx cmp ecx , num setne al and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ecx + hexvar ] mov eax , num cmp dword ptr [ edx + hexvar ] , num je hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov eax , dword ptr [ rcx + hexvar ] sub eax , num sete r8b movzx r9d , r8b mov ecx , r9d mov rcx , qword ptr [ rcx * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rax + hexvar ] sub ecx , hexvar sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx xor eax , eax mov ecx , eax mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov rcx , qword ptr [ rsi + hexvar ] xor eax , eax cmp dword ptr [ rcx + hexvar ] , num je hexvar ret nop cmp dword ptr [ rcx + hexvar ] , hexvar jne hexvar sub rsp , num mov rdi , qword ptr [ rcx + hexvar ] mov rdx , rsi lea rsi , [ rip + hexvar ] call hexvar mov eax , num add rsp , num ret
mov rcx , qword ptr [ rsi + hexvar ] xor eax , eax cmp dword ptr [ rcx + hexvar ] , num je hexvar ret nop cmp dword ptr [ rcx + hexvar ] , hexvar jne hexvar sub rsp , num mov rdi , qword ptr [ rcx + hexvar ] mov rdx , rsi lea rsi , [ rip + hexvar ] call hexvar mov eax , num add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov edx , dword ptr [ rbp - num ] mov dword ptr [ rcx ] , edx cmp dword ptr [ rcx ] , num setl sil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , num setge cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jl hexvar cmp dword ptr [ rbp - hexvar ] , num jl hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num jl hexvar cmp dword ptr [ rbp - hexvar ] , num jl hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , num mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov edx , dword ptr [ rbp - num ] mov dword ptr [ rcx ] , edx cmp dword ptr [ rcx ] , num setl sil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , num setge cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
str lr , [ sp , - num ] ! mov r4 , r1 sub sp , sp , hexvar mov r6 , r0 bl hexvar cmp r4 , num ldr r5 , [ r0 ] beq hexvar mov r0 , num str r4 , [ sp ] mov r3 , r6 mov r1 , r5 ldr r2 , [ pc , hexvar ] bl hexvar mov r0 , num bl hexvar mov r0 , r4 mov r2 , num ldr r1 , [ pc , hexvar ] bl hexvar mov r4 , r0 b hexvar andeq fp , r2 , ip , lsl num andeq fp , r2 , ip , ror sp
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) b hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , s0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu a2 , zero , num lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 lw a1 , hexvar ( fp ) addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu a2 , zero , num lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num test rsi , rsi je hexvar call hexvar mov esi , dword ptr [ rax ] xor edi , edi mov r8 , rbx mov rcx , rbp mov edx , hexvar xor eax , eax call hexvar mov edi , num call hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rbx , rax jmp hexvar nop dword ptr [ rax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a1 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ ebp - num ] , edx jmp hexvar call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] mov r1 , num ldr r0 , [ fp , - num ] bl hexvar ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 ] ldr r3 , [ pc , hexvar ] mov r2 , num str r2 , [ r3 ] ldr r0 , [ fp , - num ] bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] b hexvar bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov esi , edx add esi , num mov dword ptr [ ebp - num ] , esi movsx eax , byte ptr [ eax + edx + num ] cmp eax , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + edx ] movzx eax , word ptr [ eax + ecx * num ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax call num mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + edx ] movzx eax , word ptr [ eax + ecx * num ] and eax , hexvar cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] sub edx , hexvar mov esi , edx add esi , num add esi , hexvar mov dword ptr [ ebp - num ] , esi movsx eax , byte ptr [ eax + edx - hexvar ] cmp eax , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + edx ] movzx eax , word ptr [ eax + ecx * num ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] sub eax , hexvar add eax , num add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp - num ] sub eax , hexvar add eax , num add eax , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + edx ] movzx eax , word ptr [ eax + ecx * num ] mov ecx , hexvar xor ecx , hexvar mov edx , eax xor edx , ecx and edx , eax cmp edx , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] sub edx , hexvar mov esi , edx add esi , num add esi , hexvar mov dword ptr [ ebp - num ] , esi movsx eax , byte ptr [ eax + edx - hexvar ] cmp eax , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + edx ] movzx eax , word ptr [ eax + ecx * num ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] sub eax , hexvar add eax , num add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp - num ] sub eax , hexvar add eax , num add eax , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ecx + edx ] movzx eax , word ptr [ eax + ecx * num ] mov ecx , hexvar xor ecx , hexvar mov edx , eax xor edx , ecx and edx , eax cmp edx , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ ebp - hexvar ] , num add dword ptr [ ebp - hexvar ] , num mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx movzx eax , byte ptr [ eax ] test al , al je hexvar mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx movzx eax , byte ptr [ eax ] movsx eax , al sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar jmp hexvar add dword ptr [ ebp - hexvar ] , num call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] add edx , ecx movzx edx , byte ptr [ edx ] movzx edx , dl add edx , edx add eax , edx movzx eax , word ptr [ eax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar add dword ptr [ ebp - hexvar ] , num jmp hexvar add dword ptr [ ebp - hexvar ] , num call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] add edx , ecx movzx edx , byte ptr [ edx ] movzx edx , dl add edx , edx add eax , edx movzx eax , word ptr [ eax ] movzx eax , ax and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , lr } sub sp , sp , hexvar ldr r4 , [ pc , hexvar ] ldr r3 , [ r4 ] str r3 , [ sp , hexvar ] add r3 , sp , num str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar move a2 , zero jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rdx lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] mov edx , num mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw fp , hexvar ( sp ) move fp , a0 lw v0 , - hexvar ( gp ) sw s6 , hexvar ( sp ) move s6 , a1 sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lui a0 , hexvar beqz s6 , hexvar nop lw v0 , ( fp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push hexvar push num push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov word ptr [ eax ] , bp mov ebp , num mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r14 push rbx test rdi , rdi je hexvar mov r14 , rsi mov rbx , rdi xor esi , esi mov edx , hexvar call hexvar test eax , eax je hexvar mov word ptr [ r14 ] , ax jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp jmp hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov esi , hexvar mov rdi , rbx call hexvar test rax , rax je hexvar movzx eax , word ptr [ rax + hexvar ] rol ax , num mov word ptr [ r14 ] , ax mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov ebp , num mov eax , ebp pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx test rdi , rdi je hexvar mov r14 , rsi mov rbx , rdi xor esi , esi mov edx , hexvar call hexvar test eax , eax je hexvar mov word ptr [ r14 ] , ax jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp jmp hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov esi , hexvar mov rdi , rbx call hexvar test rax , rax je hexvar movzx eax , word ptr [ rax + hexvar ] rol ax , num mov word ptr [ r14 ] , ax mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov ebp , num mov eax , ebp pop rbx pop r14 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) andi v1 , v0 , hexvar lw v0 , hexvar ( sp ) sh v1 , ( v0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov esi , eax mov edi , num call hexvar nop leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) move a3 , a1 addiu a2 , zero , num move a1 , a0 move a0 , zero jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar ldrb r3 , [ fp , - num ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar mvn r3 , num b hexvar ldrb r3 , [ fp , - num ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
lw v0 , hexvar ( a0 ) addiu a2 , zero , num beq v0 , a2 , hexvar lw v1 , hexvar ( a1 )
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , hexvar lw a0 , hexvar ( a0 ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , num ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov rax , qword ptr [ rbp - hexvar ] call rax mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rsi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , num setne cl and cl , num movzx edx , cl mov dword ptr [ rbp - num ] , edx mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ ebp + num ] call eax add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov esi , dword ptr [ eax + hexvar ] sub esp , num push num push hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax setne al movzx eax , al lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
ldr r3 , [ r0 , num ] push { r4 , r5 , r6 , lr } ldr r3 , [ r3 , hexvar ] mov r4 , r0 blx r3 cmp r0 , num popeq { r4 , r5 , r6 , pc } mov r1 , hexvar mov r0 , r4 ldr r5 , [ r4 , hexvar ] bl hexvar ldr r3 , [ r4 , hexvar ] str r0 , [ r5 , hexvar ] ldr r0 , [ r3 , hexvar ] adds r0 , r0 , num movne r0 , num pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov r14 , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] mov r15 , qword ptr [ rax + hexvar ] cmp qword ptr [ rsi + hexvar ] , rdi je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ r14 + hexvar ] mov eax , num cmp dword ptr [ rdx + hexvar ] , num je hexvar mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 lw v0 , - hexvar ( gp ) lw a0 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ pc , hexvar ] mov r8 , r1 ldr r1 , [ r1 , hexvar ] ldr r2 , [ r0 , num ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r1 , r0 mov sb , r0 ldr fp , [ r2 , hexvar ] str r3 , [ sp , hexvar ] beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r0 , [ r8 , hexvar ] ldr r3 , [ r0 , hexvar ] cmp r3 , num movne r0 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push r14 push rbx push rax mov r14 , rsi call hexvar cmp dword ptr [ rax ] , num je hexvar mov rbx , rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar movups xmm0 , xmmword ptr [ rbx + hexvar ] movups xmm1 , xmmword ptr [ rbx + hexvar ] movups xmmword ptr [ rax ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm1 mov rdi , r14 mov esi , hexvar mov rdx , rax call hexvar mov eax , num add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) bnez v0 , hexvar nop addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , num addiu a2 , zero , hexvar move a1 , v0 lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw a2 , hexvar ( sp ) addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + num ] add eax , num sub esp , num push hexvar push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , num push dword ptr [ esp + hexvar ] push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov edi , dword ptr [ eax ] add esp , hexvar test edi , edi je hexvar mov esi , eax sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov ecx , dword ptr [ esi + num ] mov dword ptr [ eax ] , ecx mov ecx , dword ptr [ esi + hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ esi + hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , edx add esp , hexvar push eax push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edi , num mov eax , edi pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] lea ebp , [ ebx - hexvar ] lea edi , [ ebx - hexvar ] call hexvar mov ecx , ebp add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov ebp , edi mov eax , num mov edi , ecx jmp hexvar lea esi , [ esi ] add esi , num add ebp , hexvar cmp esi , hexvar je hexvar mov edi , dword ptr [ ebp - num ] sub esp , hexvar push edi call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr [ ebp ] test al , num jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edi call hexvar add esp , hexvar test eax , eax jne hexvar lea eax , [ esi + esi * num ] mov eax , dword ptr [ ebx + eax * num - hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r7 , r1 mov sb , r0 bl hexvar ldr r8 , [ pc , hexvar ] mov r6 , r0 mov r4 , r8 mov r0 , num mov r5 , num b hexvar add r5 , r5 , num cmp r5 , hexvar add r4 , r4 , hexvar beq hexvar ldr r0 , [ r4 , num ] bl hexvar cmp r6 , r0 bne hexvar ldr r3 , [ r4 , num ] eor r3 , r3 , r7 tst r3 , num bne hexvar mov r2 , r6 mov r1 , sb ldr r0 , [ r4 , num ] bl hexvar cmp r0 , num bne hexvar add r5 , r5 , r5 , lsl num ldr r0 , [ r8 , r5 , lsl num ] pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp push edi push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] lea ebp , [ ebx - hexvar ] call hexvar add esp , hexvar mov edi , eax mov eax , num jmp hexvar nop add esi , num add ebp , hexvar cmp esi , hexvar je hexvar sub esp , hexvar push dword ptr [ ebp ] call hexvar add esp , hexvar cmp edi , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr [ ebp + num ] test al , num jne hexvar sub esp , num push edi push dword ptr [ esp + hexvar ] push dword ptr [ ebp ] call hexvar add esp , hexvar test eax , eax jne hexvar lea eax , [ esi + esi * num ] mov eax , dword ptr [ ebx + eax * num - hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov r15d , esi mov rcx , - num mov eax , num repne scasb al , byte ptr [ rdi ] mov rsi , rcx not rsi lea r14d , [ rsi - num ] lea rbx , [ rip + hexvar ] mov ebp , num mov r13 , - num mov r12d , num jmp hexvar add rbp , num add rbx , hexvar cmp rbp , hexvar je hexvar mov r8 , qword ptr [ rbx ] mov rcx , r13 mov rdi , r8 mov eax , r12d repne scasb al , byte ptr [ rdi ] not rcx sub rcx , num cmp ecx , r14d jne hexvar mov eax , r15d xor eax , dword ptr [ rbx + num ] test al , num jne hexvar movsxd rdx , ecx mov rsi , qword ptr [ rsp + num ] mov rdi , r8 call hexvar test eax , eax jne hexvar lea rdx , [ rbp + rbp * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax + rdx * num ] add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui t0 , hexvar sw s0 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 lw s0 , - hexvar ( gp ) lw s1 , - hexvar ( gp ) lw a0 , hexvar ( t0 ) sw s3 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) beq v1 , a0 , hexvar lw v0 , ( s1 ) sll a0 , v1 , num lw ra , hexvar ( sp ) addiu v1 , v1 , num lw s1 , hexvar ( sp ) addu v0 , v0 , a0 sw s2 , ( v0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ hexvar ] cmp edi , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ hexvar ] , eax movsd xmm0 , qword ptr [ ebp + num ] mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] shl ecx , num movsd qword ptr [ eax + ecx ] , xmm0 movsd xmm0 , qword ptr [ ebp + hexvar ] mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] shl ecx , num movsd qword ptr [ eax + ecx + num ] , xmm0 mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui t0 , hexvar sw s0 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 lw s0 , - hexvar ( gp ) lw s1 , - hexvar ( gp ) lw a0 , - hexvar ( t0 ) sw s3 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) beq v1 , a0 , hexvar lw v0 , ( s1 ) sll a0 , v1 , num lw ra , hexvar ( sp ) addiu v1 , v1 , num lw s1 , hexvar ( sp ) addu v0 , v0 , a0 sw s2 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] cmp edx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ecx + edx * num + num ] , eax mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num ja hexvar mov eax , dword ptr [ ebp + num ] shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
sub rsp , num cmp edi , num ja hexvar mov edi , edi lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , rax mov edi , num mov eax , num call hexvar add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num ja hexvar mov eax , dword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop nop leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sltiu v0 , a0 , num beqz v0 , hexvar sw gp , hexvar ( sp ) sll a2 , a0 , num lui a0 , hexvar addiu a0 , a0 , - hexvar addu a0 , a0 , a2 lw v0 , ( a0 )
beqz a0 , hexvar move v1 , zero lui v0 , hexvar addiu v0 , v0 , hexvar lw a1 , ( v0 ) beqz a1 , hexvar addiu v1 , v1 , num addiu v0 , v0 , hexvar lw a1 , - num ( v0 ) bne a1 , a0 , hexvar nop sll v0 , v1 , num addu v1 , v0 , v1 sll v1 , v1 , num lui v0 , hexvar addiu v0 , v0 , hexvar addu v1 , v1 , v0 lw v0 , num ( v1 ) jr ra nop jr ra move v0 , zero
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - hexvar ] imul ecx , dword ptr [ eax ] , hexvar lea edx , [ hexvar ] add edx , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] imul edx , dword ptr [ ecx ] , hexvar lea esi , [ hexvar ] add esi , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx jne hexvar mov eax , dword ptr [ ebp - hexvar ] imul ecx , dword ptr [ eax ] , hexvar lea edx , [ hexvar ] add edx , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , ecx jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax imul eax , dword ptr [ ebp - num ] , hexvar lea ecx , [ hexvar ] add ecx , eax cmp dword ptr [ ecx ] , num je hexvar mov eax , dword ptr [ ebp + num ] imul ecx , dword ptr [ ebp - num ] , hexvar lea edx , [ hexvar ] add edx , ecx cmp eax , dword ptr [ edx + num ] jne hexvar imul eax , dword ptr [ ebp - num ] , hexvar lea ecx , [ hexvar ] add ecx , eax mov eax , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov dword ptr [ edx ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] imul ecx , dword ptr [ eax ] , hexvar lea edx , [ hexvar ] add edx , ecx cmp dword ptr [ edx ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] imul esi , dword ptr [ edx ] , hexvar lea edi , [ hexvar ] add edi , esi cmp ecx , dword ptr [ edi + num ] sete bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] imul ecx , dword ptr [ eax ] , hexvar lea edx , [ hexvar ] add edx , ecx mov ecx , dword ptr [ edx + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] cmp eax , num jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] test ecx , ecx setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ hexvar ] inc eax mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , num jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp ecx , num mov dword ptr [ ebp - num ] , eax jne hexvar mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a1 , zero move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , hexvar ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar mov r1 , num mov r0 , r3 bl hexvar ldr r0 , [ sp , num ] bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar mov qword ptr [ rsp ] , rax lea r15 , [ rbx + hexvar ] mov ecx , hexvar mov ebp , hexvar jmp hexvar mov rdi , r15 xor esi , esi call hexvar mov rdi , r14 call hexvar mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , num mov ecx , hexvar mov eax , num nop dword ptr [ rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar test rax , rax je hexvar lea rdi , [ rbx + hexvar ] xor esi , esi call hexvar mov rdi , r14 call hexvar mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , num mov eax , num add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw s1 , hexvar ( sp ) lui s1 , hexvar sw a3 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw v0 , - hexvar ( s1 ) sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) sw v1 , hexvar ( sp ) blez v0 , hexvar lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw v1 , hexvar ( a0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , esp mov dword ptr [ edi + hexvar ] , esi mov dword ptr [ edi + num ] , edx mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] cmp edx , dword ptr [ eax + hexvar ] jae hexvar lea ecx , [ edx + num ] mov dword ptr [ eax + hexvar ] , ecx mov byte ptr [ edx ] , hexvar mov dword ptr [ ebx + hexvar ] , num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) blez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a1 , v0 addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar sw zero , - hexvar ( v0 ) addiu v0 , fp , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a3 , v0 lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) nop lw v0 , - hexvar ( gp ) lw v1 , hexvar ( fp ) lw v0 , ( v0 ) beq v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , eax inc ecx mov dword ptr [ ebp + num ] , ecx movsx eax , byte ptr [ eax ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp + hexvar ] mov ecx , hexvar xor ecx , hexvar mov edx , eax xor edx , ecx and edx , eax cmp edx , num je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] and eax , hexvar cmp eax , num je hexvar jmp hexvar xor eax , eax mov cl , al mov eax , dword ptr [ ebp + hexvar ] and eax , num cmp eax , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx ecx , al add ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp + num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx sub esp , num call hexvar add edx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , esi and ebp , hexvar mov dword ptr [ esp ] , ebp mov edi , esi and edi , hexvar jmp hexvar
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test byte ptr [ esp + hexvar ] , num lea edi , [ ebx - hexvar ] lea eax , [ ebx - hexvar ] cmove edi , eax cmp byte ptr [ esi ] , num je hexvar sub esp , num push edi push esi call hexvar movzx edx , byte ptr [ esi + eax ] add esp , hexvar test dl , dl je hexvar cmp dl , hexvar jne hexvar lea esi , [ esi + eax + num ] cmp byte ptr [ esi ] , num jne hexvar pop ebx xor eax , eax pop esi pop edi ret
mov edx , esi mov ecx , esi movzx eax , byte ptr [ rdi ] and edx , hexvar and ecx , num and esi , hexvar je hexvar test ecx , ecx je hexvar test edx , edx jne hexvar add rdi , num cmp al , hexvar ja hexvar jmp qword ptr [ rax * num + hexvar ] nop dword ptr [ rax ] test edx , edx jne hexvar test ecx , ecx je hexvar add rdi , num cmp al , hexvar ja hexvar jmp qword ptr [ rax * num + hexvar ] nop word ptr [ rax + rax ] test edx , edx je hexvar add rdi , num cmp al , hexvar je hexvar jle hexvar cmp al , hexvar je hexvar jle hexvar cmp al , hexvar je hexvar cmp al , hexvar je hexvar movzx eax , byte ptr [ rdi ] add rdi , num cmp al , hexvar jne hexvar mov eax , num ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] b hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldrb r3 , [ r3 ] cmp r3 , hexvar beq hexvar ldr r3 , [ fp , - num ] mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp call hexvar add eax , hexvar jmp hexvar add dword ptr [ ebp + num ] , num mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax ] cmp al , hexvar je hexvar mov eax , dword ptr [ ebp + num ] pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] movsx ecx , byte ptr [ ecx ] cmp ecx , hexvar sete dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov esp , ebp pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , num pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax push esi push num call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov edx , esi mov eax , ebp call hexvar mov edi , eax test eax , eax jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax push esi push num call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov edx , esi mov eax , ebp call hexvar mov edi , eax test eax , eax jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 ] mov r6 , r0 mov r8 , r2 mov r0 , num add r2 , sp , num str r3 , [ sp , hexvar ] mov r5 , r1 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r1 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] and r3 , r3 , r1 cmp r3 , r2 bne hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar mov r1 , r5 mov r0 , r6 bl hexvar subs r7 , r0 , num bne hexvar cmp r8 , num bne hexvar mov r0 , r6 bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] mov r0 , r7 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov rbx , rsi mov r13d , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdx , rsp mov edi , num call hexvar test eax , eax jne hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num je hexvar mov rsi , rbx mov rdi , r12 call hexvar mov ebp , eax test eax , eax jne hexvar test r13d , r13d jne hexvar mov rdi , r12 call hexvar mov eax , ebp mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a0 sb v0 , hexvar ( fp ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sltu v0 , v1 , v0 bnez v0 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) addiu a1 , v0 , num lui a0 , hexvar sw a1 , - hexvar ( a0 ) addu v0 , v1 , v0 lbu v1 , hexvar ( fp ) sb v1 , ( v0 ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp ecx , dword ptr [ hexvar ] mov byte ptr [ ebp - num ] , al jb hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ hexvar ] , eax xor eax , eax mov cl , byte ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ hexvar ] sub eax , num mov edi , esi sub edi , eax mov dword ptr [ hexvar ] , edi mov byte ptr [ edx + esi ] , cl add esp , hexvar pop esi pop edi pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ ebx + hexvar ] cmp edx , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebx + hexvar ] jb hexvar lea edx , [ ebx + hexvar ] sub esp , num push edx push eax call hexvar mov edx , dword ptr [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar lea ecx , [ edx + num ] mov dword ptr [ ebx + hexvar ] , ecx mov ecx , esi mov byte ptr [ eax + edx ] , cl add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp ecx , dword ptr [ hexvar ] mov byte ptr [ ebp - num ] , al jb hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov al , byte ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov esi , edx add esi , num mov dword ptr [ hexvar ] , esi mov byte ptr [ ecx + edx ] , al add esp , hexvar pop esi pop ebp ret
push rbx mov ebx , edi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov dword ptr [ rax ] , num mov dword ptr [ rax + num ] , ebx xorps xmm0 , xmm0 movups xmmword ptr [ rax + num ] , xmm0 pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea esi , [ ebx - hexvar ] push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , edx add esp , hexvar pop ebx pop esi ret
push rbx mov ebx , edi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov dword ptr [ rax ] , num mov dword ptr [ rax + num ] , ebx xorps xmm0 , xmm0 movups xmmword ptr [ rax + num ] , xmm0 pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) addiu a1 , s0 , - hexvar sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) sw zero , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi sub esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num jne hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , hexvar sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , ( v0 )
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r0 mov r5 , r1 ldr r7 , [ r0 , hexvar ] ldr r3 , [ r0 , hexvar ] ldrb r2 , [ r3 ] cmp r2 , hexvar bne hexvar mov r6 , hexvar add r3 , r3 , num str r3 , [ r4 , hexvar ] mov r0 , r4 bl hexvar mov r3 , r0 mov r2 , r5 mov r1 , r6 mov r0 , r4 bl hexvar mov r5 , r0 ldr r3 , [ r4 , hexvar ] ldrb r2 , [ r3 ] cmp r2 , hexvar beq hexvar str r7 , [ r4 , hexvar ] mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , sl , lsl num andeq r0 , r0 , r0
push edi push esi push ebx mov ebx , eax mov esi , edx mov edi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp byte ptr [ eax ] , hexvar jne hexvar add eax , num mov dword ptr [ ebx + hexvar ] , eax mov eax , ebx call hexvar sub esp , hexvar push eax mov ecx , esi mov edx , hexvar mov eax , ebx call hexvar mov esi , eax mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar cmp byte ptr [ eax ] , hexvar je hexvar mov dword ptr [ ebx + hexvar ] , edi mov eax , esi pop ebx pop esi pop edi ret
push r12 push rbp push rbx mov rbx , rdi mov rbp , rsi mov r12 , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num mov qword ptr [ rbx + hexvar ] , rax mov rdi , rbx call hexvar mov rcx , rax mov rdx , rbp mov esi , hexvar mov rdi , rbx call hexvar mov rbp , rax mov rax , qword ptr [ rbx + hexvar ] cmp byte ptr [ rax ] , hexvar je hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rax , rbp pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
xor eax , eax cmp qword ptr [ rdi + hexvar ] , num je hexvar push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , num mov rdx , qword ptr [ rip + hexvar ] test rdx , rdx je hexvar mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar cmp rdx , qword ptr [ rcx ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp rdx , qword ptr [ rax ] je hexvar mov rcx , rax mov rax , qword ptr [ rcx + num ] test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi xor ecx , ecx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edi + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov esi , dword ptr [ edi + hexvar ] test esi , esi je hexvar cmp eax , dword ptr [ esi ] jne hexvar jmp hexvar lea esi , [ esi ] cmp eax , dword ptr [ edx ] je hexvar mov esi , edx mov edx , dword ptr [ esi + num ] test edx , edx jne hexvar xor ecx , ecx add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
push ebp push edi xor ecx , ecx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edi + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov esi , dword ptr [ edi + hexvar ] test esi , esi je hexvar cmp eax , dword ptr [ esi ] jne hexvar jmp hexvar lea esi , [ esi ] cmp eax , dword ptr [ edx ] je hexvar mov esi , edx mov edx , dword ptr [ esi + num ] test edx , edx jne hexvar xor ecx , ecx add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r4 , r0 ldr r0 , [ r0 , hexvar ] cmp r0 , num popeq { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldr r6 , [ pc , hexvar ] ldr ip , [ r6 , hexvar ] cmp ip , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 ] cmp ip , r2 bne hexvar b hexvar mov r3 , r0 ldr r0 , [ r3 , num ] cmp r0 , num popeq { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldr r2 , [ r0 ] cmp ip , r2 bne hexvar add r5 , r3 , num ldr r0 , [ r4 , hexvar ] cmp r0 , num beq hexvar mov sb , num ldr r8 , [ pc , hexvar ] b hexvar subs ip , r7 , num str sb , [ r3 , hexvar ] str r7 , [ r6 , hexvar ] beq hexvar mov r1 , num ldr r3 , [ ip ] mov r0 , r1 mov r2 , r8 ldr r7 , [ ip , hexvar ] bl hexvar ldr r3 , [ r6 , hexvar ] cmp r4 , r3 bne hexvar mov r2 , num ldr r3 , [ r5 ] ldr r1 , [ r3 ] ldr r0 , [ r3 , num ] ldr r3 , [ r1 , hexvar ] sub r3 , r3 , num str r3 , [ r1 , hexvar ] str r0 , [ r5 ] ldr r3 , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] subs r4 , r3 , num bne hexvar str r4 , [ r6 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldrge r0 , [ lr , hexvar ] ! andeq r0 , r0 , r0
push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx sub esp , num push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , - hexvar ( s0 ) beqz v0 , hexvar move s1 , a0 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , zero , num beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move a1 , v0 lw a0 , - hexvar ( s0 ) lw t9 , - hexvar ( gp ) lw s0 , hexvar ( sp ) sw s1 , ( v0 ) lw s1 , hexvar ( sp ) b hexvar addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , - hexvar ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbx mov rbx , rdi cmp qword ptr [ rip + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , hexvar mov edi , num mov edx , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax ] , rbx mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax pop rbx jmp hexvar pop rbx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar jmp hexvar nop add esp , hexvar pop ebx ret
lui v0 , hexvar lw t9 , - hexvar ( v0 ) beqz t9 , hexvar lui v0 , hexvar jr t9 nop lui gp , hexvar addiu sp , sp , - hexvar lw t9 , - hexvar ( v0 ) addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) beqz t9 , hexvar sw gp , hexvar ( sp ) jalr t9 nop sb zero , ( s0 ) sb zero , num ( s0 ) sb zero , num ( s0 ) sb zero , num ( s0 ) sw v0 , num ( s0 )
lui v0 , hexvar lw t9 , - hexvar ( v0 ) beqz t9 , hexvar lui v0 , hexvar jr t9 nop lui gp , hexvar addiu sp , sp , - hexvar lw t9 , - hexvar ( v0 ) addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) beqz t9 , hexvar sw gp , hexvar ( sp ) jalr t9 nop sb zero , ( s0 ) sb zero , num ( s0 ) sb zero , num ( s0 ) sb zero , num ( s0 ) sw v0 , num ( s0 )
push rbx mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdi , rbx pop rbx jmp rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call rax mov qword ptr [ rbx ] , num mov qword ptr [ rbx + num ] , rax pop rbx ret
push rbx mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdi , rbx pop rbx jmp rax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call rax mov qword ptr [ rbx ] , num mov qword ptr [ rbx + num ] , rax pop rbx ret
push rbp push r14 push rbx mov ebp , esi mov r14 , rdi call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , ebp mov rax , qword ptr [ r14 + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov rsi , r14 call rax test eax , eax je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , qword ptr [ rax + num ] mov esi , dword ptr [ rax ] xorps xmm0 , xmm0 call hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , num ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] blx r3 mov r3 , r0 cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar b hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar b hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , num ] ldr r0 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , num ] ldr r1 , [ r3 ] mov r2 , num mov r3 , num bl hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar call hexvar test eax , eax mov esi , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , num push edi push esi call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + num ] push num push num push dword ptr [ eax ] push dword ptr [ eax + num ] call hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi ret
push rbp push r14 push rbx mov ebp , esi mov r14 , rdi call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , ebp mov rax , qword ptr [ r14 + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov rsi , r14 call rax test eax , eax je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , qword ptr [ rax + num ] mov esi , dword ptr [ rax ] xorps xmm0 , xmm0 call hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] add rdi , num mov rax , qword ptr [ rbp - num ] add rax , num imul rdi , rax shr rdi , num mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] add rdi , num imul rax , rdi pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] add rdi , num mov rax , qword ptr [ rbp - num ] add rax , num imul rdi , rax shr rdi , num mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] add rdi , num imul rax , rdi pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] add rdi , num mov rax , qword ptr [ rbp - num ] add rax , num imul rdi , rax shr rdi , num mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] add rdi , num imul rax , rdi pop rbp ret
push rbp mov rbp , rsp xor eax , eax mov ecx , eax mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] add rdi , num mov rdx , qword ptr [ rbp - num ] add rdx , num imul rdi , rdx shr rdi , num mov qword ptr [ rbp - hexvar ] , rdi mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rcx sub rsi , rdi mov rdi , rcx sub rdi , num add rsi , rdi sub rcx , rsi imul rdx , rcx mov rax , rdx pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdi mov r14 , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov edi , hexvar call hexvar mov r12 , rax mov eax , num test r12 , r12 je hexvar mov rdi , rsp call hexvar mov r15 , rsp mov ebx , num mov r13d , hexvar mov rdx , r13 sub rdx , rbx lea rdi , [ r12 + rbx ] mov rcx , rbp mov esi , num call hexvar add rbx , rax cmp rbx , hexvar je hexvar test rax , rax je hexvar test byte ptr [ rbp ] , hexvar je hexvar test rbx , rbx jne hexvar mov rdi , rsp mov rsi , r14 call hexvar mov rdi , r12 call hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r7 ] mov r5 , r0 ldr r0 , [ pc , hexvar ] mov r8 , r1 str r3 , [ sp , hexvar ] bl hexvar subs r6 , r0 , num moveq r0 , num beq hexvar mov r3 , num ldr r2 , [ pc , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r2 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] str r3 , [ sp , hexvar ] str r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] mov r4 , num b hexvar cmp r0 , num ldr r3 , [ r5 ] beq hexvar tst r3 , hexvar bne hexvar rsb r2 , r4 , hexvar add r0 , r6 , r4 mov r3 , r5 mov r1 , num bl hexvar add r4 , r4 , r0 cmp r4 , hexvar bne hexvar mov r1 , r4 mov r2 , sp mov r0 , r6 bl hexvar b hexvar tst r3 , hexvar beq hexvar mov r0 , r6 bl hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r7 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar sub r3 , fp , hexvar mov r0 , r3 bl hexvar mov r3 , num str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r0 , r2 , r3 ldr r3 , [ fp , - hexvar ] rsb r2 , r3 , hexvar ldr r3 , [ fp , - hexvar ] mov r1 , num bl hexvar str r0 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , hexvar beq hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , num b hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar b hexvar mov r0 , r0 sub r3 , fp , hexvar mov r2 , r3 mov r1 , hexvar ldr r0 , [ fp , - hexvar ] bl hexvar b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar sub r3 , fp , hexvar mov r2 , r3 ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar sub r3 , fp , hexvar ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num shl eax , num mov ecx , dword ptr [ rbp - num ] and ecx , num add eax , ecx add eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num shl eax , num mov ecx , dword ptr [ rbp - num ] and ecx , num add eax , ecx add eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num shl eax , num mov ecx , dword ptr [ rbp - num ] and ecx , num add eax , ecx add eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , num shl eax , num mov ecx , dword ptr [ rbp - num ] and ecx , num add eax , ecx add eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rcx , qword ptr [ rbp - hexvar ] shr rcx , num lea rcx , [ rcx + rcx * num + num ] mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne r9b movzx r10d , r9b mov eax , r10d mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] lea r8 , [ rbp - hexvar ] call hexvar movzx r9d , al mov ecx , r9d mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r14 , rdi mov r15 , rsi mov rbp , rdx mov r12 , rcx mov r13 , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov rax , rdx shr rax , num lea rdi , [ rax + rax * num + num ] mov qword ptr [ rsp ] , rdi call hexvar mov qword ptr [ r12 ] , rax mov ebx , num test rax , rax je hexvar mov r8 , rsp mov rcx , rax mov rdx , rbp mov rsi , r15 mov rdi , r14 call hexvar mov ebx , eax test al , al je hexvar test r13 , r13 je hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ r13 ] , rax mov eax , ebx mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) srl v0 , v0 , num addiu v1 , v0 , num move v0 , v1 sll v0 , v0 , num addu v0 , v0 , v1 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , fp , hexvar sw v0 , hexvar ( sp ) move a3 , v1 lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , ( v0 ) move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , ( v0 ) addiu v0 , zero , num lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r14 push r13 mov r14 , rdx push r12 push rbp mov r12 , rdi push rbx mov r13 , rsi mov rbx , rcx mov rbp , r8 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , rdx shr rax , num lea rdi , [ rax + rax * num + num ] mov qword ptr [ rsp + hexvar ] , rdi call hexvar test rax , rax mov qword ptr [ rbx ] , rax je hexvar lea r8 , [ rsp + hexvar ] mov rcx , rax mov rdx , r14 mov rsi , r13 mov rdi , r12 call hexvar test al , al je hexvar test rbp , rbp je hexvar mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rbp ] , rdx jmp hexvar nop dword ptr [ rax + rax ] mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
mov r3 , num push { r4 , r5 , r6 , lr } mov r5 , r2 ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ r4 ] ldr r2 , [ pc , hexvar ] ldr lr , [ pc , hexvar ] str ip , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr ip , [ pc , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r6 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r2 , [ sp , hexvar ] add r2 , sp , num str r3 , [ sp , hexvar ] str lr , [ sp , num ] str ip , [ sp , hexvar ] str r6 , [ sp , num ] bl hexvar mov r1 , r5 add r0 , sp , num bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push esi push ebx sub esp , hexvar lea ebx , [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num push ebx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar pop eax pop edx push esi push ebx call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar mov r0 , r3 bl hexvar sub r3 , fp , hexvar mov r2 , r3 ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar sub r3 , fp , hexvar ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov r13 , rsi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rbx , rsp mov rdi , rbx call hexvar mov rdx , rbx mov rsi , r13 mov rdi , r12 call hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] add r1 , r3 , num ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r2 , r3 ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bge hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r14 push rbx mov rbx , rdx mov dword ptr [ rdx ] , num mov edx , dword ptr [ rdi ] mov r14d , num test edx , edx je hexvar mov rbp , rdi lea rax , [ rdi + num ] mov rdi , rsi mov rsi , rax call hexvar test eax , eax js hexvar mov dword ptr [ rbp ] , num mov dword ptr [ rbx ] , eax jmp hexvar mov r14d , hexvar mov eax , r14d pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov rbx , rdx mov dword ptr [ rdx ] , num mov edx , dword ptr [ rdi ] mov r14d , num test edx , edx je hexvar mov rbp , rdi lea rax , [ rdi + num ] mov rdi , rsi mov rsi , rax call hexvar test eax , eax js hexvar mov dword ptr [ rbp ] , num mov dword ptr [ rbx ] , eax jmp hexvar mov r14d , hexvar mov eax , r14d pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov rbx , rdx mov dword ptr [ rdx ] , num mov edx , dword ptr [ rdi ] mov r14d , num test edx , edx je hexvar mov rbp , rdi lea rax , [ rdi + num ] mov rdi , rsi mov rsi , rax call hexvar test eax , eax js hexvar mov dword ptr [ rbp ] , num mov dword ptr [ rbx ] , eax jmp hexvar mov r14d , hexvar mov eax , r14d pop rbx pop r14 pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
test rsi , rsi je hexvar push rbx movsxd rcx , dword ptr [ rdx ] mov rbx , qword ptr [ rsi + rcx * num ] mov rax , rcx test rbx , rbx je hexvar add eax , num mov esi , hexvar mov dword ptr [ rdx ] , eax call hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rbx movzx edx , byte ptr [ rbx ] test dl , dl je hexvar sub edx , hexvar cmp dl , hexvar jbe hexvar movabs rcx , hexvar nop dword ptr [ rax ] add rbx , num movzx edx , byte ptr [ rbx ] test dl , dl je hexvar sub edx , hexvar cmp dl , hexvar ja hexvar bt rcx , rdx jae hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 mov eax , num pop rbx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov dword ptr [ rdi + hexvar ] , hexvar mov eax , num ret
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov dword ptr [ rdi + hexvar ] , hexvar mov eax , num ret
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov dword ptr [ rdi + hexvar ] , hexvar mov eax , num ret
push edi mov edx , dword ptr [ esp + num ] lea ecx , [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num lea edi , [ edx + hexvar ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar mov eax , num pop edi ret
cmp r1 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ r0 , hexvar ] mov r0 , num bx lr push { r4 , lr } bl hexvar pop { r4 , pc }
lui gp , hexvar bnez a1 , hexvar addiu gp , gp , - hexvar move v1 , a0 lw a0 , - hexvar ( gp ) addiu v0 , zero , num jr ra sw a0 , hexvar ( v1 )
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar lea eax , [ ebx - hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , eax add esp , num mov eax , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar lea eax , [ ebx - hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , eax add esp , num mov eax , num pop ebx ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov cl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl je hexvar cmp dword ptr [ ebp + num ] , num sete al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov cl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl je hexvar cmp dword ptr [ ebp + num ] , num sete al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , hexvar je hexvar cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , hexvar je hexvar cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) beqz v0 , hexvar move s1 , a0 b hexvar nop lw v0 , ( s0 ) beqz v0 , hexvar lui a2 , hexvar bne a1 , v0 , hexvar addiu s0 , s0 , hexvar addiu s0 , s0 , - hexvar lw a0 , hexvar ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw v0 , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v1 , hexvar ( sp ) bne v1 , v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) bnez v0 , hexvar nop addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) beqz v0 , hexvar move s1 , a0 b hexvar nop lw v0 , ( s0 ) beqz v0 , hexvar lui a2 , hexvar bne a1 , v0 , hexvar addiu s0 , s0 , hexvar addiu s0 , s0 , - hexvar lw a0 , hexvar ( s1 )
push r15 push r14 push rbx mov r15 , rdi mov ebx , hexvar nop dword ptr [ rax ] mov eax , dword ptr [ rbx ] add rbx , hexvar cmp eax , esi je hexvar test eax , eax jne hexvar test eax , eax je hexvar lea r14 , [ r15 + hexvar ] mov rdi , qword ptr [ r15 + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r15 + hexvar ] , num mov rsi , qword ptr [ rbx - hexvar ] mov rdi , r14 call hexvar lea r14 , [ r15 + hexvar ] mov rdi , qword ptr [ r15 + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ r15 + hexvar ] , num mov rsi , qword ptr [ rbx - num ] mov rdi , r14 call hexvar mov rdi , qword ptr [ r15 + hexvar ] add r15 , hexvar test rdi , rdi je hexvar call hexvar mov qword ptr [ r15 ] , num mov rsi , qword ptr [ rbx - hexvar ] mov rdi , r15 call hexvar mov eax , num pop rbx pop r14 pop r15 ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( a1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi + num ] xor edi , edi test eax , eax jne hexvar jmp hexvar lea esi , [ esi ] sub esp , num push edi push dword ptr [ esi + num ] call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar cmp eax , ebp je hexvar mov eax , dword ptr [ esi + num ] add edi , num sub esp , hexvar push eax call hexvar add esp , hexvar cmp eax , edi jg hexvar mov eax , dword ptr [ esi ] xor edi , edi test eax , eax jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( a1 )
push rbp push r15 push r14 push rbx push rax mov rbp , qword ptr [ rsi + hexvar ] mov r14d , num test rbp , rbp je hexvar mov r15d , edi mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar test eax , eax jle hexvar xor ebx , ebx nop word ptr cs : [ rax + rax ] nop mov rdi , qword ptr [ rbp + num ] mov esi , ebx call hexvar mov rdi , rax call hexvar cmp eax , r15d je hexvar add ebx , num mov rdi , qword ptr [ rbp + num ] call hexvar cmp ebx , eax jl hexvar mov rdi , qword ptr [ rbp ] test rdi , rdi je hexvar call hexvar test eax , eax jle hexvar xor ebx , ebx nop dword ptr [ rax ] mov rdi , qword ptr [ rbp ] mov esi , ebx call hexvar mov rdi , rax call hexvar cmp eax , r15d je hexvar add ebx , num mov rdi , qword ptr [ rbp ] call hexvar cmp ebx , eax jl hexvar jmp hexvar mov r14d , num jmp hexvar mov r14d , num mov eax , r14d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov edi , hexvar call hexvar mov eax , num leave ret
lea rax , [ rip + hexvar ] lea rcx , [ rip + hexvar ] test rdx , rdx je hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp esi , dword ptr [ rax + hexvar ] jne hexvar cmp rdx , qword ptr [ rax + hexvar ] jne hexvar mov qword ptr [ rdi + hexvar ] , rax mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 )
cmp r2 , num ldr r3 , [ pc , hexvar ] beq hexvar b hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr ip , [ r3 , hexvar ] cmp r1 , ip bne hexvar ldr ip , [ r3 , hexvar ] cmp r2 , ip bne hexvar mov r2 , num str r3 , [ r0 , hexvar ] mov r0 , r2 bx lr ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num bne hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r1 , r2 beq hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] push { r4 , lr } mov r0 , hexvar str r2 , [ r3 , hexvar ] bl hexvar mov r2 , num mov r0 , r2 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu v0 , zero , num beq a0 , v0 , hexvar nop jr ra addiu v0 , zero , num lw v0 , ( a1 )
addiu v0 , zero , num beq a0 , v0 , hexvar nop jr ra addiu v0 , zero , num lw v0 , ( a1 )
cmp edi , num jne hexvar mov rax , qword ptr [ rsi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp dword ptr [ rax ] , num jne hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar push rax mov rdi , qword ptr [ rax + num ] movsxd rsi , dword ptr [ rax ] call hexvar add rsp , num mov eax , num ret
cmp edi , num jne hexvar mov rax , qword ptr [ rsi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp dword ptr [ rax ] , num jne hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar push rax mov rdi , qword ptr [ rax + num ] movsxd rsi , dword ptr [ rax ] call hexvar add rsp , num mov eax , num ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edi , [ ebx - hexvar ] call hexvar pop edx pop ecx push eax push esi call hexvar lea ecx , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax mov dword ptr [ esp ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + num ] , ecx jne hexvar jmp hexvar nop sub esp , num lea eax , [ esp + hexvar ] push eax push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax jg hexvar add dword ptr [ esp ] , num sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp eax , dword ptr [ esp ] jle hexvar sub esp , num push dword ptr [ esp + num ] push dword ptr [ esp + hexvar ] call hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + num ] mov ecx , hexvar mov ebp , eax repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num add esp , hexvar movsx esi , al test esi , esi je hexvar sub esp , hexvar push hexvar push dword ptr [ esp + hexvar ] push hexvar push hexvar push num call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push dword ptr [ ebp + num ] push eax lea eax , [ ebx - hexvar ] push dword ptr [ ebp + num ] push eax push num call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ] mov esi , num mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbx , rsi call hexvar mov rdi , rbx mov rsi , rax call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax call hexvar mov r15d , num test eax , eax jle hexvar lea r14 , [ rsp + hexvar ] xor ebp , ebp nop dword ptr [ rax + rax ] mov rdi , r12 mov esi , ebp call hexvar mov rbx , rax mov rdi , qword ptr [ rax + num ] mov esi , hexvar call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdx , qword ptr [ rbx + num ] mov r8 , qword ptr [ rbx + hexvar ] mov esi , hexvar mov ecx , hexvar mov edi , num xor eax , eax call hexvar jmp hexvar nop mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar cmp dword ptr [ rsp + hexvar ] , num jg hexvar add ebp , num mov rdi , r12 call hexvar cmp ebp , eax jl hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r15d , r15d mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbx , rsi call hexvar mov rdi , rbx mov rsi , rax call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax call hexvar mov r15d , num test eax , eax jle hexvar lea r14 , [ rsp + hexvar ] xor ebp , ebp nop dword ptr [ rax + rax ] mov rdi , r12 mov esi , ebp call hexvar mov rbx , rax mov rdi , qword ptr [ rax + num ] mov esi , hexvar call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdx , qword ptr [ rbx + num ] mov r8 , qword ptr [ rbx + hexvar ] mov esi , hexvar mov ecx , hexvar mov edi , num xor eax , eax call hexvar jmp hexvar nop mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar cmp dword ptr [ rsp + hexvar ] , num jg hexvar add ebp , num mov rdi , r12 call hexvar cmp ebp , eax jl hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r15d , r15d mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbx , rsi call hexvar mov rdi , rbx mov rsi , rax call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax call hexvar mov r15d , num test eax , eax jle hexvar lea r14 , [ rsp + hexvar ] xor ebp , ebp nop dword ptr [ rax + rax ] mov rdi , r12 mov esi , ebp call hexvar mov rbx , rax mov rdi , qword ptr [ rax + num ] mov esi , hexvar call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdx , qword ptr [ rbx + num ] mov r8 , qword ptr [ rbx + hexvar ] mov esi , hexvar mov ecx , hexvar mov edi , num xor eax , eax call hexvar jmp hexvar nop mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar cmp dword ptr [ rsp + hexvar ] , num jg hexvar add ebp , num mov rdi , r12 call hexvar cmp ebp , eax jl hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r15d , r15d mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] mov r3 , r2 ldr r2 , [ sp , num ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , r8 mov r15 , rcx mov r12 , rdx mov rbx , rsi mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp + num ] , rax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov rcx , qword ptr [ rsp + num ] mov rdi , rbx mov rsi , r12 mov rdx , r15 mov r8 , r14 call hexvar mov ecx , hexvar nop dword ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdi , rsi mov rsi , rdx mov rdx , rcx mov rcx , rax jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdi , rsi mov rsi , rdx mov rdx , rcx mov rcx , rax jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov rax , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , num movzx edx , byte ptr [ rdx + hexvar ] cmp byte ptr [ rcx + hexvar ] , dl je hexvar ret sub rsp , num call hexvar test eax , eax setne al movzx eax , al add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] movzx r8d , byte ptr [ rdi + hexvar ] mov rdi , qword ptr [ rcx ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] movzx r9d , byte ptr [ rdi + hexvar ] cmp r8d , r9d sete r10b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , r10b xor eax , eax mov cl , al mov dl , byte ptr [ rbp - hexvar ] test dl , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rcx ] call hexvar cmp eax , num setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] movzx r8d , byte ptr [ rdi + hexvar ] mov rdi , qword ptr [ rcx ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] movzx r9d , byte ptr [ rdi + hexvar ] cmp r8d , r9d sete r10b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , r10b xor eax , eax mov cl , al mov dl , byte ptr [ rbp - hexvar ] test dl , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rcx ] call hexvar cmp eax , num setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] movzx eax , byte ptr [ rsi + hexvar ] mov dword ptr [ rbp - num ] , eax mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] movzx eax , byte ptr [ rsi + hexvar ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx mov byte ptr [ rbp - hexvar ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num setne cl mov dword ptr [ rbp - hexvar ] , hexvar and cl , num mov byte ptr [ rbp - hexvar ] , cl jmp hexvar mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a3 , v0 lw a2 , hexvar ( fp ) addiu a1 , zero , num lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sltu v0 , v1 , v0 beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s1 , v0 lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move a3 , v0 move a2 , s1 move a1 , s0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi cmp dword ptr [ ecx ] , num seta bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , edi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx ] setb bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] sub esp , hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar call hexvar mov eax , dword ptr [ eax ] sub esp , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jbe hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar lea eax , [ ebx + hexvar ] sub esp , num push eax push dword ptr [ ebx + hexvar ] call hexvar pop eax lea eax , [ ebx + hexvar ] pop edx push eax push dword ptr [ ebx + hexvar ] call hexvar pop ecx pop eax lea eax , [ ebx + hexvar ] push eax push num call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar add esp , num mov eax , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar lea eax , [ ebx + hexvar ] sub esp , num push eax push dword ptr [ ebx + hexvar ] call hexvar pop eax lea eax , [ ebx + hexvar ] pop edx push eax push dword ptr [ ebx + hexvar ] call hexvar pop ecx pop eax lea eax , [ ebx + hexvar ] push eax push num call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar add esp , num mov eax , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) jal hexvar nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
cmp byte ptr [ rip + hexvar ] , num jne hexvar push rax mov edi , dword ptr [ rip + hexvar ] mov esi , hexvar call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar xor edi , edi call hexvar mov byte ptr [ rip + hexvar ] , num add rsp , num mov eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov qword ptr [ rcx + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rcx + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] xor esi , esi mov edi , eax mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar cmp dword ptr [ ebp + hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret num
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] xor esi , esi mov edi , eax mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar cmp dword ptr [ ebp + hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret num
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] xor esi , esi mov edi , eax mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar cmp dword ptr [ ebp + hexvar ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) move a2 , v0 lui v0 , hexvar addiu a1 , v0 , hexvar lui v0 , hexvar addiu a0 , v0 , hexvar jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb v1 , hexvar ( v0 ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) move a1 , zero move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) swc1 f0 , hexvar ( v0 ) addiu v0 , zero , num b hexvar nop move v0 , zero lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar mov rax , rsi movsxd rcx , dword ptr [ rdx ] mov rsi , qword ptr [ rsi + rcx * num ] mov r12d , num test rsi , rsi je hexvar mov r13 , rdx mov rbx , rax mov rbp , rdi mov edi , hexvar call hexvar mov r12d , eax test al , al je hexvar call hexvar mov rdi , rbp call hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num movsxd rdx , dword ptr [ r13 ] mov rdx , qword ptr [ rbx + rdx * num ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ r13 ] , num jmp hexvar mov r12d , num mov eax , r12d add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) jal hexvar move s1 , a2 beqz s0 , hexvar lw ra , hexvar ( sp ) lw v0 , ( s1 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp lea edi , [ ebp - hexvar ] mov dword ptr [ esi + num ] , edi mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov byte ptr [ ebp - hexvar ] , al call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx ] , hexvar call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num call hexvar mov eax , dword ptr [ ebp - hexvar ] fstp dword ptr [ eax + hexvar ] mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw s2 , hexvar ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw s2 , hexvar ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edi + hexvar ] mov ecx , dword ptr [ edi + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , esi mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax and esi , num je hexvar cmp ecx , dword ptr [ esp + hexvar ] mov ebp , eax sete byte ptr [ esp + hexvar ] cmp edx , ebp movzx eax , byte ptr [ esp + hexvar ] jne hexvar test al , al je hexvar xor esi , esi mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar lw a0 , ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , zero , hexvar sw s0 , hexvar ( sp ) move a2 , zero sw ra , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) lb v1 , ( a0 )
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] cmp byte ptr [ eax ] , hexvar je hexvar sub esp , num push num push dword ptr [ esi ] push eax call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx jne hexvar mov dword ptr [ esi + num ] , num add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ esi ] cmp byte ptr [ eax ] , hexvar je hexvar sub esp , num push num push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar add esp , num mov eax , num pop ebx pop esi ret
push { r4 , lr } ldr r0 , [ r0 ] mov r4 , r1 ldrb r3 , [ r0 ] ldr r1 , [ r1 ] cmp r3 , hexvar beq hexvar mov r2 , num bl hexvar cmp r0 , num bne hexvar mov r0 , num str r0 , [ r4 , num ] pop { r4 , pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax push num push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push ebp push edi mov ebp , edx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , ecx call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num mov edi , eax push esi push eax call hexvar add esp , hexvar mov esi , eax test dword ptr [ esp + hexvar ] , hexvar jne hexvar sub esp , num push ebp push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov ebp , num push num push num push hexvar push esi call hexvar mov dword ptr [ esp ] , esi call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r15d , ecx mov r12 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov rsi , rbp call hexvar mov rbp , rax mov rdi , rax mov rsi , r13 mov rdx , r12 mov ecx , r15d mov r8 , r14 call hexvar mov r14d , eax mov rdi , rbp mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov rdi , rbp call hexvar mov rdi , rbx call hexvar mov eax , r14d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r15d , ecx mov r12 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov rsi , rbp call hexvar mov rbp , rax mov rdi , rax mov rsi , r13 mov rdx , r12 mov ecx , r15d mov r8 , r14 call hexvar mov r14d , eax mov rdi , rbp mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov rdi , rbp call hexvar mov rdi , rbx call hexvar mov eax , r14d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push { r4 , lr } sub sp , sp , num ldr ip , [ sp , hexvar ] str ip , [ sp ] bl hexvar subs r4 , r0 , num blt hexvar mov r0 , r4 add sp , sp , num pop { r4 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax ] , ebx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ eax ] sub eax , hexvar sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax sets r9b movzx eax , r9b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx call hexvar mov ecx , dword ptr [ rax ] sub ecx , hexvar sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax call hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } ldrb r5 , [ r0 ] mov r4 , r0 sub r5 , r5 , hexvar bl hexvar clz r5 , r5 sub r2 , r0 , r4 lsr r5 , r5 , num cmp r2 , r5 bls hexvar sub r0 , r2 , num ldrb r1 , [ r4 , r0 ] add r3 , r4 , r0 cmp r1 , hexvar bne hexvar cmp r5 , r0 popeq { r4 , r5 , r6 , pc } ldrb r2 , [ r3 , - num ] ! sub r1 , r0 , num cmp r2 , hexvar popne { r4 , r5 , r6 , pc }
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp byte ptr [ esi ] , hexvar sete al movzx eax , al mov edi , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov ecx , eax sub ecx , esi cmp ecx , edi jbe hexvar lea edx , [ ecx - num ] cmp byte ptr [ eax - num ] , hexvar jne hexvar cmp edi , edx je hexvar lea eax , [ edx - num ] cmp byte ptr [ esi + edx - num ] , hexvar jne hexvar mov edx , eax jmp hexvar mov edx , ecx mov eax , edx pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rbp - hexvar ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi xor eax , eax mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rbp - num ] mov cl , byte ptr [ rax ] sub cl , hexvar sete dl movzx esi , dl mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , cl mov dword ptr [ rbp - hexvar ] , esi jmp rax mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] call hexvar mov rcx , qword ptr [ rbp - num ] sub rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov dl , byte ptr [ rax + rcx - num ] sub dl , hexvar sete sil movzx edi , sil mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] mov byte ptr [ rbp - hexvar ] , dl jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp byte ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar cmp dword ptr [ ebp - num ] , hexvar jge hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ ebp - num ] , hexvar jge hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbx mov edi , hexvar mov ebx , hexvar sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax je hexvar cmp byte ptr [ rax ] , num jne hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] mov eax , ebx jne hexvar add rsp , hexvar pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a0 , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lb v1 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a0 , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) addiu a0 , a0 , - hexvar lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lb v1 , ( v0 ) beqz v1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , sp , hexvar jalr t9 move a0 , v0 lw v1 , hexvar ( sp ) lb v1 , ( v1 ) beqz v1 , hexvar lw gp , hexvar ( sp ) lui v0 , num addiu v0 , v0 , hexvar lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop nop
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r4 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar mov r0 , r2 ldrb r3 , [ r1 ] cmp r3 , num bne hexvar mov r2 , r4 mov r1 , r5 mov r0 , num bl hexvar pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar move s0 , a1 lb v0 , ( a1 ) bnez v0 , hexvar move a0 , a2 move a2 , s0 move a1 , s1 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar lw a2 , hexvar ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 move a2 , v0 move a1 , s1 addiu a0 , zero , num lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax ] test al , al je hexvar sub esp , num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] mov edx , dword ptr [ edx + num ] sub esp , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] cmp byte ptr [ ecx + hexvar ] , num setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + num ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar jmp hexvar lea esp , [ ebp - num ] pop ebx pop ebp ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax push dword ptr [ eax + num ] call hexvar add esp , num push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp byte ptr [ esi + hexvar ] , num jne hexvar add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] mov edx , dword ptr [ edx + num ] sub esp , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] cmp byte ptr [ ecx + hexvar ] , num setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + num ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar jmp hexvar lea esp , [ ebp - num ] pop ebx pop ebp ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ eax + num ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp byte ptr [ esi + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esi + num ] call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , hexvar mov dword ptr [ ebp - num ] , eax jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , hexvar mov dword ptr [ ebp - num ] , eax jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , hexvar mov dword ptr [ ebp - num ] , eax jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , hexvar str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar bne hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , r0 ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar mov r3 , r0 mov r2 , r4 mov r1 , num mov r0 , num bl hexvar b hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] sub r3 , r2 , r3 add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r2 , r3 ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , r0 ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r3 , [ sp ] mov r3 , r2 mov r2 , r4 mov r1 , num mov r0 , num bl hexvar mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc }
push ebx mov ebx , eax sub esp , hexvar push num call hexvar add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar add esp , num pop ebx ret
push rbp push rbx mov rbp , rcx mov ecx , num mov rbx , rdi sub rsp , num call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw s1 , hexvar ( sp ) move s1 , a3 addiu a3 , zero , num sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar move s0 , a0 beqz v0 , hexvar lw ra , hexvar ( sp ) lw v1 , hexvar ( v0 )
push rbp push rbx mov rbp , rcx mov ecx , num mov rbx , rdi sub rsp , num call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , dword ptr [ ebp - num ] cmp eax , dword ptr [ ecx + hexvar ] setle dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , dword ptr [ ebp - num ] cmp eax , dword ptr [ ecx + hexvar ] jg hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , num pop ebp ret
mov eax , dword ptr [ eax + num ] cmp dword ptr [ eax + hexvar ] , num js hexvar cmp dword ptr [ eax + hexvar ] , num jne hexvar mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ eax + num ] cmp dword ptr [ eax + hexvar ] , num js hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar ret ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx + hexvar ] setle dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + hexvar ] , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl call hexvar mov ecx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , ecx mov dword ptr [ edi + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dl , byte ptr [ ebp + hexvar ] mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] cmp al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ ebp - hexvar ] , edx jmp hexvar movsx eax , byte ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov byte ptr [ ebp - hexvar ] , al sub esp , hexvar push hexvar call hexvar add esp , hexvar sub esp , num push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar movsx eax , byte ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl call hexvar mov ecx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , ecx mov dword ptr [ edi + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp byte ptr [ ebp + hexvar ] , num je hexvar movsx eax , byte ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push rbp push rbx sub rsp , num mov rbp , rdi mov ebx , esi mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , hexvar mov esi , hexvar mov rdi , rbp call hexvar test bl , bl je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , bl add rsp , num pop rbx pop rbp ret
sub rsp , hexvar cmp edi , hexvar ja hexvar test edi , edi je hexvar movsxd rax , edi lea rcx , [ rax + rax * num ] cmp dword ptr [ rcx * num + hexvar ] , num je hexvar lea rax , [ rax + rax * num ] mov rax , qword ptr [ rax * num + hexvar ] add rsp , hexvar ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num blt hexvar ldr r3 , [ sp , hexvar ] cmp r3 , hexvar bge hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r1 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 lsl r3 , r3 , num add r3 , r1 , r3 add r3 , r3 , num ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar mov r3 , num b hexvar ldr r1 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 lsl r3 , r3 , num add r3 , r1 , r3 ldr r3 , [ r3 ] b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar mov r3 , num str r3 , [ sp , hexvar ] add r3 , sp , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] add r2 , sp , hexvar mov r1 , r2 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx cmp eax , hexvar ja hexvar test eax , eax je hexvar lea edx , [ eax + eax * num ] mov edx , dword ptr [ ebx + edx * num - hexvar ] test edx , edx je hexvar lea eax , [ eax + eax * num ] mov eax , dword ptr [ ebx + eax * num - hexvar ] jmp hexvar lea esi , [ esi ] mov edx , dword ptr [ ebx + hexvar ] test edx , edx je hexvar lea ecx , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax sub esp , num mov dword ptr [ esp + hexvar ] , ecx lea eax , [ esp + hexvar ] push eax push edx call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar cmp edi , hexvar ja hexvar test edi , edi je hexvar movsxd rax , edi lea rcx , [ rax + rax * num ] cmp dword ptr [ rcx * num + hexvar ] , num je hexvar lea rax , [ rax + rax * num ] mov rax , qword ptr [ rax * num + hexvar ] add rsp , hexvar ret
push r15 push r14 push r13 push r12 push rbp push rbx mov rbp , rdi mov rbx , rdx mov rdi , r8 sub rsp , num cmp cl , hexvar je hexvar ja hexvar cmp cl , num je hexvar jbe hexvar cmp cl , num je hexvar cmp cl , num jne hexvar mov rax , qword ptr [ rsi + hexvar ] mov r8 , qword ptr [ rsi + hexvar ] mov ecx , num mov rsi , qword ptr [ rsi + num ] add r8 , qword ptr [ rax + hexvar ] jmp hexvar nop word ptr [ rax + rax ] cmp cl , hexvar je hexvar jbe hexvar cmp cl , hexvar jne hexvar mov rax , qword ptr [ rsi + hexvar ] mov r8 , qword ptr [ rsi + hexvar ] mov ecx , num mov rsi , qword ptr [ rsi + num ] add r8 , qword ptr [ rax + hexvar ] mov rdx , r9 call hexvar test eax , eax setne al movzx eax , al add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push edi push esi mov edi , eax push ebx mov esi , edx call hexvar add ebx , hexvar sub esp , hexvar movzx eax , byte ptr [ esp + hexvar ] cmp al , hexvar je hexvar ja hexvar cmp al , num je hexvar jbe hexvar cmp al , num je hexvar cmp al , num jne hexvar mov ecx , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + num ] sub esp , num mov edx , dword ptr [ edx + hexvar ] add eax , dword ptr [ ecx + hexvar ] adc edx , dword ptr [ ecx + hexvar ] push edx push eax push num jmp hexvar lea esi , [ esi ] cmp al , hexvar je hexvar jbe hexvar cmp al , hexvar jne hexvar mov ecx , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + num ] sub esp , num mov edx , dword ptr [ edx + hexvar ] add eax , dword ptr [ ecx + hexvar ] adc edx , dword ptr [ ecx + hexvar ] push edx push eax push num push dword ptr [ esp + hexvar ] push dword ptr [ esi + num ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax setne al movzx eax , al add esp , hexvar pop ebx pop esi pop edi ret
cmp cl , hexvar push r12 push rbp mov rbp , rdx push rbx mov rbx , rdi mov rdi , r8 je hexvar ja hexvar cmp cl , num je hexvar jbe hexvar cmp cl , num je hexvar cmp cl , num jne hexvar mov rax , qword ptr [ rsi + hexvar ] mov r8 , qword ptr [ rsi + hexvar ] mov ecx , num mov rsi , qword ptr [ rsi + num ] add r8 , qword ptr [ rax + hexvar ] jmp hexvar cmp cl , hexvar je hexvar jbe hexvar cmp cl , hexvar jne hexvar mov rax , qword ptr [ rsi + hexvar ] mov r8 , qword ptr [ rsi + hexvar ] mov ecx , num mov rsi , qword ptr [ rsi + num ] add r8 , qword ptr [ rax + hexvar ] mov rdx , r9 call hexvar test eax , eax setne al movzx eax , al pop rbx pop rbp pop r12 ret
push edi push esi mov edi , eax push ebx mov esi , edx call hexvar add ebx , hexvar sub esp , hexvar movzx eax , byte ptr [ esp + hexvar ] cmp al , hexvar je hexvar ja hexvar cmp al , num je hexvar jbe hexvar cmp al , num je hexvar cmp al , num jne hexvar mov ecx , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + num ] sub esp , num mov edx , dword ptr [ edx + hexvar ] add eax , dword ptr [ ecx + hexvar ] adc edx , dword ptr [ ecx + hexvar ] push edx push eax push num jmp hexvar lea esi , [ esi ] cmp al , hexvar je hexvar jbe hexvar cmp al , hexvar jne hexvar mov ecx , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + num ] sub esp , num mov edx , dword ptr [ edx + hexvar ] add eax , dword ptr [ ecx + hexvar ] adc edx , dword ptr [ ecx + hexvar ] push edx push eax push num push dword ptr [ esp + hexvar ] push dword ptr [ esi + num ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax setne al movzx eax , al add esp , hexvar pop ebx pop esi pop edi ret
xor eax , eax movabs rcx , hexvar add rdi , num movzx edx , byte ptr [ rdi - num ] test dl , dl je hexvar shl rax , num add rax , rdx mov rdx , rax and edx , hexvar je hexvar shr rdx , hexvar and rax , rcx add rdi , num xor rax , rdx movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar mov eax , eax ret
mov ecx , dword ptr [ esp + num ] mov eax , num add ecx , num movzx edx , byte ptr [ ecx - num ] test dl , dl je hexvar shl eax , num movzx edx , dl add eax , edx mov edx , eax and edx , hexvar je hexvar and eax , hexvar shr edx , hexvar xor eax , edx jmp hexvar ret
xor eax , eax movabs rcx , hexvar add rdi , num movzx edx , byte ptr [ rdi - num ] test dl , dl je hexvar shl rax , num add rax , rdx mov rdx , rax and edx , hexvar je hexvar shr rdx , hexvar and rax , rcx add rdi , num xor rax , rdx movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar mov eax , eax ret
xor eax , eax movabs rcx , hexvar add rdi , num movzx edx , byte ptr [ rdi - num ] test dl , dl je hexvar shl rax , num add rax , rdx mov rdx , rax and edx , hexvar je hexvar shr rdx , hexvar and rax , rcx add rdi , num xor rax , rdx movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar mov eax , eax ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ num ] mov rdi , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ num ] mov rdi , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar add esp , num pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop bnez v0 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a0 , hexvar jal hexvar addiu a0 , a0 , - hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a0 , hexvar addiu a0 , a0 , - hexvar jal hexvar nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax test byte ptr [ hexvar ] , num je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] and eax , hexvar mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax movzx esi , byte ptr [ rip + hexvar ] mov eax , esi mov esi , eax and esi , num mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov al , byte ptr [ rbp - hexvar ] and al , hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , edx sub esp , num push edx push eax call hexvar mov esi , eax add esp , hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar test eax , eax jne hexvar mov eax , esi pop ebx pop esi pop edi ret
push rbp push rbx mov ebp , esi sub rsp , num call hexvar cmp byte ptr [ rip + hexvar ] , num mov rbx , rax je hexvar test rax , rax je hexvar mov esi , ebp mov rdi , rax and esi , hexvar call hexvar mov rbp , rax mov rdi , rbx mov rbx , rbp call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
mov ecx , eax mov eax , dword ptr [ edx + num ] cmp dword ptr [ ecx + num ] , eax je hexvar xor eax , eax ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp edx , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] xor rax , rdx and rax , hexvar test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax sete al movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rsi + num ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] xor rax , qword ptr [ rcx + num ] and rax , hexvar cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + hexvar ] sete dl and dl , num movzx esi , dl mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] pop rbp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) lw a0 , num ( fp ) lw a1 , num ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a2 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , zero , hexvar move a3 , s2 move a0 , v0 jalr t9 move s0 , v0 blez v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num beq s1 , v0 , hexvar addiu v0 , zero , num beq s1 , v0 , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) addiu a0 , zero , hexvar jalr t9 move s1 , zero lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar jalr t9 move s1 , zero lw ra , hexvar ( sp ) move v0 , s1 lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a1 , zero jalr t9 move a0 , s0 addiu a2 , zero , hexvar lw gp , hexvar ( sp ) move s2 , v0 beqz s2 , hexvar lw t9 , - hexvar ( gp )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar push dword ptr [ esp + hexvar ] push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jg hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov dword ptr [ esp ] , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax jmp hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov dword ptr [ esp ] , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] push edx push eax push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax jmp hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r12 push rbx mov ebp , edx mov rbx , rsi mov r14 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r12 , rax mov edx , num mov rdi , rax mov esi , hexvar mov rcx , rbx call hexvar test rax , rax jle hexvar cmp ebp , num je hexvar cmp ebp , num jne hexvar mov rdi , r12 xor esi , esi call hexvar mov r15 , rax mov edx , hexvar test r15 , r15 je hexvar mov rdi , r14 mov rsi , r15 call hexvar mov ebp , eax mov rdi , r15 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebp , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar jmp hexvar mov rdx , qword ptr [ r14 + hexvar ] mov rcx , qword ptr [ r14 + hexvar ] mov rdi , r12 xor esi , esi call hexvar mov r15 , rax mov edx , num test r15 , r15 jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rdi , r12 call hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar push dword ptr [ esp + hexvar ] push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jg hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov dword ptr [ esp ] , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax jmp hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov dword ptr [ esp ] , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] push edx push eax push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax jmp hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 addiu v1 , zero , num bne v0 , v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s1 jalr t9 lw a0 , hexvar ( s0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] add eax , num mov dword ptr [ ebx + hexvar ] , eax mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] sub esp , num push num push edx push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] mov ecx , dword ptr [ ebx + hexvar ] add ecx , hexvar shl ecx , num lea esi , [ edx + ecx ] sub esp , num push num push eax call hexvar add esp , hexvar mov dword ptr [ esi ] , eax nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw a1 , hexvar ( v0 ) addiu a1 , a1 , num sw a1 , hexvar ( v0 ) lui v0 , hexvar lw a0 , hexvar ( v0 ) srl v0 , a1 , hexvar sltu v1 , zero , v0 ext v0 , a1 , hexvar , num addiu a2 , zero , num movz a2 , v1 , v0 bnez a2 , hexvar sll a1 , a1 , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lui v1 , hexvar sw v0 , hexvar ( v1 ) lui v1 , hexvar lw a0 , hexvar ( v1 ) lui v1 , hexvar lw v1 , hexvar ( v1 ) lui a1 , hexvar ori a1 , a1 , hexvar addu v1 , v1 , a1 sll v1 , v1 , num addu s0 , v0 , v1 srl v0 , a0 , hexvar sltu v1 , zero , v0 ext v0 , a0 , hexvar , num addiu a1 , zero , num movz a1 , v1 , v0 bnez a1 , hexvar sll a0 , a0 , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sw v0 , ( s0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw t9 , - hexvar ( gp ) bal hexvar nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov dword ptr [ ecx + edx * num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov dword ptr [ ecx + edx * num ] , eax add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , a1 lui a1 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) move a2 , a0 sw zero , hexvar ( sp ) addiu a1 , a1 , hexvar sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) jalr t9 sw zero , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , num movabs rsi , num movabs rdx , num mov ecx , hexvar mov r8d , hexvar movabs r9 , num movabs r10 , num mov qword ptr [ rsp ] , r10 mov qword ptr [ rsp + num ] , rax mov al , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , num movabs rsi , num movabs rdx , num mov ecx , hexvar mov r8d , hexvar movabs r9 , num movabs r10 , num mov qword ptr [ rsp ] , r10 mov qword ptr [ rsp + num ] , rax mov al , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , num movabs rsi , num movabs rdx , num mov ecx , hexvar mov r8d , hexvar movabs r9 , num movabs r10 , num mov qword ptr [ rsp ] , r10 mov qword ptr [ rsp + num ] , rax mov al , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , num movabs rsi , num movabs rdx , num mov ecx , hexvar mov r8d , hexvar movabs r9 , num movabs r10 , num mov qword ptr [ rsp ] , r10 mov qword ptr [ rsp + num ] , rax mov al , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar mov esi , num test eax , eax je hexvar mov edi , eax sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar mov esi , eax add esp , hexvar test eax , eax jne hexvar mov eax , esi pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop move a3 , zero lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s1 move a0 , v0 bal hexvar move s0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , zero lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a3 , zero move a2 , s2 move a1 , s0 bal hexvar move a0 , s3 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push rbx push rax mov r14d , edx mov rbp , rsi mov r15 , rdi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , r15 mov rsi , rbx mov edx , r14d xor ecx , ecx call hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar xor eax , eax add rsp , num pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s2 , hexvar ( sp ) lui s2 , hexvar sw s3 , hexvar ( sp ) sw s4 , hexvar ( sp ) addiu a3 , s1 , hexvar sw s0 , hexvar ( sp ) move s3 , a1 sw gp , hexvar ( sp ) addiu a1 , s2 , hexvar sw ra , hexvar ( sp ) move a2 , a3 sw s5 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s4 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) addiu a0 , s0 , hexvar lw s5 , hexvar ( sp ) move a1 , s3 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s5 , v0 lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] add eax , hexvar push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push rbp push rbx push rax mov ebx , esi call hexvar mov qword ptr [ rsp ] , rax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov rdi , qword ptr [ rsp ] add rdi , hexvar mov esi , ebx call hexvar mov ecx , hexvar nop cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmove edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num push num push num push esi call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ edx ] , num mov dword ptr [ edx + num ] , num mov eax , num add esp , num pop ebx pop esi ret
ldr r3 , [ pc , hexvar ] push { r4 , lr } ldr r2 , [ r3 ] mov r4 , r0 cmp r2 , num beq hexvar mov r1 , num mov r0 , r4 bl hexvar subs r3 , r0 , num movne r2 , num strne r3 , [ r4 , hexvar ] movne r0 , num strne r2 , [ r3 ] strne r2 , [ r3 , num ] moveq r0 , r3 pop { r4 , pc }
push { r4 , lr } mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar mov r1 , num mov r0 , r4 bl hexvar cmp r0 , num strne r0 , [ r4 , hexvar ] movne r3 , num strne r3 , [ r0 ] strne r3 , [ r0 , num ] movne r0 , num moveq r0 , num pop { r4 , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov byte ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar call hexvar nop word ptr [ eax + eax ]
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov byte ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar call hexvar nop word ptr [ eax + eax ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a2 , a1 sw s0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) move a0 , zero sw gp , hexvar ( sp ) sb zero , hexvar ( s0 ) bal hexvar lw a1 , hexvar ( v0 ) lui a2 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num addiu a2 , a2 , hexvar move a3 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a1 , s1 lw v0 , hexvar ( s0 ) bgtz v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 nop nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar lea eax , [ ebx + hexvar ] mov byte ptr [ eax + hexvar ] , num push dword ptr [ ebp + hexvar ] push num push dword ptr [ ebp + num ] push num call hexvar add esp , hexvar call hexvar
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] mov dword ptr [ edx + num ] , num mov eax , dword ptr [ eax ] mov dword ptr [ eax ] , num mov esp , ebp pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , num mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , num mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - num ] str r2 , [ r3 ] mov r0 , r0 add sp , fp , num pop { fp } bx lr
push rbp mov rbp , rsp sub rsp , hexvar mov al , dl mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi and al , num mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rcx , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx movabs rdi , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx + num ] mov rcx , qword ptr [ hexvar ] movabs rdi , hexvar mov rsi , rax call hexvar jmp hexvar mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rcx , qword ptr [ hexvar ] movabs rdi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ hexvar ] movabs rdi , hexvar mov rsi , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) bnez a1 , hexvar move s0 , a0 lw s1 , - hexvar ( gp ) lw a2 , ( s1 ) move a1 , a0 lui a0 , hexvar addiu a0 , a0 , hexvar jal hexvar nop lw gp , hexvar ( sp ) lw a2 , num ( s1 ) addiu a1 , s0 , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw s1 , - hexvar ( gp ) lw a2 , ( s1 ) move a1 , a0 lui a0 , hexvar addiu a0 , a0 , hexvar jal hexvar nop lw gp , hexvar ( sp ) lw a2 , num ( s1 ) addiu a1 , s0 , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar jal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al sub esp , hexvar push num call hexvar add esp , hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] push edx push eax push dword ptr [ ebp + num ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] add eax , num mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar push edx push eax push ecx lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] push edx push eax push dword ptr [ ebp + num ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] add eax , num mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar push edx push eax push ecx lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push num call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al sub esp , hexvar push num call hexvar add esp , hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] push edx push eax push dword ptr [ ebp + num ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] add eax , num mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar push edx push eax push ecx lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] push edx push eax push dword ptr [ ebp + num ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] add eax , num mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar push edx push eax push ecx lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push num call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] sub esp , num push edi push num push dword ptr [ esp + hexvar ] call hexvar mov esi , eax add esp , hexvar test eax , eax jne hexvar mov eax , esi pop ebx pop esi pop edi ret
push r15 push r14 push rbx mov r15 , rsi mov rbx , rdi xor r14d , r14d mov esi , num xor edx , edx mov ecx , hexvar call hexvar test eax , eax je hexvar mov qword ptr [ rbx + hexvar ] , r15 test r15 , r15 je hexvar mov rdi , r15 call hexvar mov r14d , num mov eax , r14d pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , num test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push esi call eax mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar cmp dword ptr [ esi + num ] , num je hexvar sub esp , num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , eax mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esi + num ] , num mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi ] , eax xor eax , eax test edi , edi mov dword ptr [ esi + hexvar ] , edi je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 move a2 , a1 addiu a1 , zero , num jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , s0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] cmp dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx cmp ecx , eax je hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , hexvar lw a0 , hexvar ( a0 )
cmp r0 , num push { r4 , lr } ldr r3 , [ r1 ] beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bhi hexvar add r2 , r3 , num add r3 , r2 , r3 , lsr num str r3 , [ r1 ] mov r1 , r3 bl hexvar cmp r0 , num popne { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a0 , hexvar lw v0 , ( a1 ) lui v1 , hexvar addiu v1 , v1 , hexvar sltu v1 , v0 , v1 beqz v1 , hexvar srl v1 , v0 , num addiu v0 , v0 , num addu v0 , v0 , v1 sw v0 , ( a1 ) move a1 , v0 jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar bnez v0 , hexvar nop addiu v0 , zero , hexvar bgez v0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw t9 , - hexvar ( gp ) bal hexvar nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) addiu a2 , zero , num lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] mov r2 , num ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
cmp r0 , num push { r4 , lr } ldr r3 , [ r1 ] beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bhi hexvar add r2 , r3 , num add r3 , r2 , r3 , lsr num str r3 , [ r1 ] mov r1 , r3 bl hexvar cmp r0 , num popne { r4 , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
sub rsp , num test rdi , rdi mov rax , qword ptr [ rsi ] je hexvar movabs rdx , hexvar cmp rax , rdx ja hexvar lea rdx , [ rax + num ] shr rdx , num add rax , rdx test rax , rax mov qword ptr [ rsi ] , rax je hexvar mov rsi , rax call hexvar test rax , rax je hexvar add rsp , num ret
cmp r0 , num ldr r3 , [ r1 ] beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bhi hexvar add r2 , r3 , num add r3 , r2 , r3 , lsr num str r3 , [ r1 ] mov r1 , r3 b hexvar cmp r3 , num moveq r3 , hexvar beq hexvar bge hexvar push { r4 , lr } bl hexvar ldrbpl r5 , [ r5 , - hexvar ]
push { r4 , lr } mov r4 , r0 mov r0 , hexvar str r0 , [ r4 , hexvar ] bl hexvar mov r2 , num mov r3 , num str r0 , [ r4 , hexvar ] strb r2 , [ r4 , num ] str r3 , [ r4 ] pop { r4 , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , num pop ebp ret
push rbx mov rbx , rdi mov qword ptr [ rdi + hexvar ] , hexvar mov edi , hexvar call hexvar mov byte ptr [ rbx + num ] , num mov qword ptr [ rbx + hexvar ] , rax mov dword ptr [ rbx ] , num pop rbx ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rdx mov rbp , rsi mov r14 , rdi mov rdi , qword ptr [ rdx + num ] call hexvar mov dword ptr [ rsp + hexvar ] , eax mov edi , hexvar call qword ptr [ rip + hexvar ] test eax , eax jle hexvar mov r15d , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rdi , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov r13d , eax mov rax , qword ptr [ rbp ] mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , rbp mov rdi , rbp call hexvar mov rbp , r14 mov r14d , eax mov qword ptr [ rsp + hexvar ] , rbx mov rdi , qword ptr [ rbx + num ] mov r12 , qword ptr [ rdi ] call hexvar sub rsp , num lea r10 , [ rsp + hexvar ] mov edi , r15d mov rsi , qword ptr [ rsp + hexvar ] mov edx , r13d mov rcx , qword ptr [ rsp + hexvar ] mov r8d , r14d mov rbx , rbp mov r9 , r12 push r10 push rbp push rax call qword ptr [ rsp + hexvar ] add rsp , hexvar test eax , eax je hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edi , r15d call qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] call qword ptr [ rax + hexvar ] jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar call hexvar mov rdi , r14 mov rsi , rbp mov rdx , rbx call qword ptr [ rax + hexvar ] jmp hexvar mov edi , r15d call qword ptr [ rip + hexvar ] mov edi , dword ptr [ rsp + hexvar ] call qword ptr [ rip + hexvar ] add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push dword ptr [ esi + num ] call hexvar mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp ] , eax call dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jle hexvar mov edi , eax mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esi + num ] call hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esi + num ] mov edx , dword ptr [ eax ] mov dword ptr [ esp ] , ebp mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx pop edx push dword ptr [ esi + hexvar ] call hexvar pop ecx lea ecx , [ esp + hexvar ] push ecx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax mov eax , dword ptr [ esi + hexvar ] push dword ptr [ eax ] push edi mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push edi call dword ptr [ ebx + hexvar ] pop eax push dword ptr [ esp + hexvar ] call dword ptr [ ebx + hexvar ] add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rdx mov rbp , rsi mov r14 , rdi mov rdi , qword ptr [ rdx + num ] call hexvar mov dword ptr [ rsp + hexvar ] , eax mov edi , hexvar call qword ptr [ rip + hexvar ] test eax , eax jle hexvar mov r15d , eax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rdi , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + hexvar ] , rax call hexvar mov r13d , eax mov rax , qword ptr [ rbp ] mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , rbp mov rdi , rbp call hexvar mov rbp , r14 mov r14d , eax mov qword ptr [ rsp + hexvar ] , rbx mov rdi , qword ptr [ rbx + num ] mov r12 , qword ptr [ rdi ] call hexvar sub rsp , num lea r10 , [ rsp + hexvar ] mov edi , r15d mov rsi , qword ptr [ rsp + hexvar ] mov edx , r13d mov rcx , qword ptr [ rsp + hexvar ] mov r8d , r14d mov rbx , rbp mov r9 , r12 push r10 push rbp push rax call qword ptr [ rsp + hexvar ] add rsp , hexvar test eax , eax je hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edi , r15d call qword ptr [ rip + hexvar ] call hexvar mov rdi , rbx mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] call qword ptr [ rax + hexvar ] jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar call hexvar mov rdi , r14 mov rsi , rbp mov rdx , rbx call qword ptr [ rax + hexvar ] jmp hexvar mov edi , r15d call qword ptr [ rip + hexvar ] mov edi , dword ptr [ rsp + hexvar ] call qword ptr [ rip + hexvar ] add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s4 , hexvar ( sp ) move s4 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a1 sw s0 , hexvar ( sp ) move s0 , a2 sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw v0 , ( s2 ) lw a0 , num ( a2 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , esi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , hexvar sub eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add edx , ecx push dword ptr [ ebp - hexvar ] push eax push num push edx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , hexvar je hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar jmp hexvar nop sub esp , num lea eax , [ ebp - hexvar ] push eax push hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar jmp hexvar nop jmp hexvar nop cmp dword ptr [ ebp - hexvar ] , num je hexvar sub esp , num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp - hexvar ] lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) addiu a3 , zero , hexvar lw a2 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] and eax , hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] and eax , hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] and eax , hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] shr eax , hexvar and eax , num cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 addiu a0 , a0 , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
push rbx sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov ebx , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , ebx cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov esi , hexvar xor edi , edi call hexvar mov esi , hexvar xor edi , edi call hexvar mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw a0 , hexvar ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui a1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] xor ecx , ecx mov edx , ecx div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] imul rsi , qword ptr [ rbp - hexvar ] sub rax , rsi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] xor ecx , ecx mov edx , ecx div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] imul rsi , qword ptr [ rbp - hexvar ] sub rax , rsi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] xor ecx , ecx mov edx , ecx div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] imul rsi , qword ptr [ rbp - hexvar ] sub rax , rsi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] xor ecx , ecx mov edx , ecx div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] imul rsi , qword ptr [ rbp - hexvar ] sub rax , rsi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rsp + hexvar ] test rdi , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp ] , num mov qword ptr [ rsp + hexvar ] , rax je hexvar mov rbp , rax xor ebx , ebx nop dword ptr [ rax ] call hexvar add rbx , rax mov eax , dword ptr [ rsp ] cmp eax , hexvar ja hexvar mov edx , eax add eax , num add rdx , rbp mov dword ptr [ rsp ] , eax mov rdi , qword ptr [ rdx ] test rdi , rdi jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov rax , rbx jne hexvar add rsp , hexvar pop rbx pop rbp ret
push edi push esi push ebx mov eax , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test eax , eax je hexvar lea esi , [ esp + hexvar ] xor edi , edi lea esi , [ esi ] sub esp , hexvar add esi , num push eax call hexvar add edi , eax mov eax , dword ptr [ esi - num ] add esp , hexvar test eax , eax jne hexvar mov eax , edi pop ebx pop esi pop edi ret
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rsp + hexvar ] test rdi , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp ] , num mov qword ptr [ rsp + hexvar ] , rax je hexvar mov r12 , rax mov ebp , num xor ebx , ebx nop dword ptr [ rax + rax ] call hexvar add rbx , rax cmp ebp , hexvar ja hexvar mov eax , ebp add ebp , num mov rdi , qword ptr [ r12 + rax ] mov dword ptr [ rsp ] , ebp test rdi , rdi jne hexvar nop mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov rax , rbx jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar lea edx , [ esp + hexvar ] mov ebx , num mov esi , hexvar mov eax , num mov ecx , esi repne scasb al , byte ptr es : [ edi ] not ecx lea ebx , [ ebx + ecx - num ] add edx , num mov edi , dword ptr [ edx - num ] test edi , edi jne hexvar mov eax , ebx pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a3 , zero , num lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov ecx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , hexvar je hexvar xor eax , eax ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] mov r3 , num ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi ] mov edi , eax mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi + num ] mov edi , eax shl rdi , num or rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi + num ] mov edi , eax shl rdi , hexvar or rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi + num ] mov edi , eax shl rdi , hexvar or rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi ] mov edi , eax mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi + num ] mov edi , eax shl rdi , num or rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi + num ] mov edi , eax shl rdi , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , rcx and rdx , rdi xor rcx , rdi or rdx , rcx mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rcx + num ] mov ecx , eax shl rcx , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx and rdi , rcx xor rdx , rcx or rdi , rdx mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi ] mov edi , eax mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi + num ] mov edi , eax shl rdi , num or rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi + num ] mov edi , eax shl rdi , hexvar or rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi + num ] mov edi , eax shl rdi , hexvar or rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movzx eax , al mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl rax , num or qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] movzx eax , al shl rax , hexvar or qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
ldr r3 , [ r0 , hexvar ] ldrb r2 , [ r3 ] cmp r2 , hexvar cmpne r2 , hexvar bne hexvar push { r4 , lr } cmp r2 , hexvar ldr r2 , [ r0 , hexvar ] addeq r2 , r2 , num streq r2 , [ r0 , hexvar ] moveq ip , hexvar addne r2 , r2 , num strne r2 , [ r0 , hexvar ] movne ip , hexvar mov r2 , r1 add r3 , r3 , num str r3 , [ r0 , hexvar ] mov r3 , num mov r1 , ip bl hexvar pop { r4 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov al , byte ptr [ rsi ] mov byte ptr [ rbp - hexvar ] , al movsx ecx , byte ptr [ rbp - hexvar ] cmp ecx , hexvar je hexvar movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar jne hexvar movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar jne hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] movsxd rcx , dword ptr [ rax + hexvar ] add rcx , num mov edx , ecx mov dword ptr [ rax + hexvar ] , edx jmp hexvar xor eax , eax mov ecx , eax mov dword ptr [ rbp - hexvar ] , hexvar mov rdx , qword ptr [ rbp - num ] movsxd rsi , dword ptr [ rdx + hexvar ] sub rcx , num sub rsi , rcx mov eax , esi mov dword ptr [ rdx + hexvar ] , eax xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rdx + hexvar ] add rsi , num mov qword ptr [ rdx + hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
mov rcx , qword ptr [ rdi + hexvar ] mov rdx , rsi movzx r8d , byte ptr [ rcx ] cmp r8b , hexvar je hexvar cmp r8b , hexvar je hexvar mov rax , rsi ret
mov rdx , rsi mov rcx , qword ptr [ rdi + hexvar ] movzx esi , byte ptr [ rcx ] cmp sil , hexvar je hexvar mov rax , rdx cmp sil , hexvar jne hexvar cmp sil , hexvar je hexvar add dword ptr [ rdi + hexvar ] , num mov esi , hexvar add rcx , num mov qword ptr [ rdi + hexvar ] , rcx mov ecx , num call hexvar ret add dword ptr [ rdi + hexvar ] , num mov esi , hexvar jmp hexvar
test rdi , rdi je hexvar mov eax , hexvar cmp qword ptr [ rip + hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar xor eax , eax mov qword ptr [ rdi ] , rax test rsi , rsi je hexvar mov eax , hexvar cmp qword ptr [ rip + hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar xor eax , eax mov qword ptr [ rsi ] , rax test rdx , rdx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdx ] , rax ret
sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] b hexvar mov r3 , num ldr r2 , [ sp , hexvar ] str r3 , [ r2 ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] b hexvar mov r3 , num ldr r2 , [ sp , num ] str r3 , [ r2 ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , num ] str r2 , [ r3 ] mov r0 , r0 add sp , sp , hexvar bx lr eoreq sl , sl , r8 , lsl num strdeq r0 , r1 , [ ip ] , -r0 eoreq sl , sl , r4 , lsl num mlaeq sl , r0 , r1 , sl andeq r0 , ip , r8 , lsr num eoreq sl , sl , ip , lsl num mlaeq sl , r4 , r1 , sl
push edi push esi push ebx mov ebx , dword ptr [ esp + hexvar ] call hexvar add eax , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test ebx , ebx je hexvar xor esi , esi lea edi , [ eax - hexvar ] cmp dword ptr [ eax + hexvar ] , edi je hexvar mov dword ptr [ ebx ] , esi test ecx , ecx je hexvar xor ebx , ebx lea esi , [ eax - hexvar ] cmp dword ptr [ eax + hexvar ] , esi je hexvar mov dword ptr [ ecx ] , ebx test edx , edx je hexvar mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ edx ] , eax pop ebx pop esi pop edi ret
beqz a0 , hexvar lui v0 , hexvar lw v1 , hexvar ( v0 ) lui v0 , hexvar addiu v0 , v0 , hexvar beq v1 , v0 , hexvar lui v0 , hexvar move v0 , zero sw v0 , ( a0 )
push { r4 , r5 , r6 , lr } mov r4 , r1 ldr r5 , [ r0 , num ] mov r2 , hexvar mov r1 , num mov r0 , r4 bl hexvar ldr r3 , [ r5 ] mov r0 , num str r3 , [ r4 , hexvar ] str r0 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc }
mov rdx , qword ptr [ rdi + hexvar ] mov qword ptr [ rsi ] , num mov qword ptr [ rsi + hexvar ] , num lea rdi , [ rsi + num ] and rdi , hexvar mov rcx , rsi sub rcx , rdi add ecx , hexvar shr ecx , num mov ecx , ecx mov eax , num rep stosq qword ptr [ rdi ] , rax mov rax , qword ptr [ rdx ] mov qword ptr [ rsi + hexvar ] , rax mov eax , num ret
push edi push ebx mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ eax + num ] mov dword ptr [ edx ] , num mov dword ptr [ edx + hexvar ] , num lea edi , [ edx + num ] and edi , hexvar mov ecx , edx sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov ecx , dword ptr [ ebx ] mov ebx , dword ptr [ ebx + num ] mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ edx + hexvar ] , ebx pop ebx pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 lw s1 , num ( a0 )
push esi push ebx sub esp , num call hexvar add ebx , hexvar call hexvar mov esi , eax mov dword ptr [ eax ] , hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push eax push dword ptr [ esi ] push num call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar cmp eax , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lui a1 , hexvar lw gp , hexvar ( sp ) addiu v1 , zero , hexvar addiu a2 , zero , num addiu a1 , a1 , - hexvar sw v1 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar cmp eax , num je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s2 , a0 addiu a0 , zero , hexvar addiu s1 , v0 , num lw gp , hexvar ( sp ) sltiu v0 , s1 , hexvar movz a0 , s1 , v0 lw t9 , - hexvar ( gp ) addiu v0 , a0 , num addiu a0 , zero , - num jalr t9 and a0 , v0 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 addiu v1 , v0 , num lw t9 , - hexvar ( gp ) sw zero , ( v0 )
test rdi , rdi push r12 push rbp push rbx je hexvar mov r12 , rdi call hexvar lea rbp , [ rax + num ] mov edi , hexvar cmp rbp , hexvar cmovae rdi , rbp add rdi , hexvar and rdi , hexvar call hexvar test rax , rax mov rbx , rax je hexvar mov qword ptr [ rax ] , num lea rdi , [ rbx + num ] mov eax , num mov word ptr [ rbx + num ] , ax mov rdx , rbp mov rsi , r12 call hexvar mov byte ptr [ rbx + rbp + num ] , num mov rax , rbx pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu s2 , v0 , num sltiu v0 , s2 , hexvar addiu a0 , zero , hexvar movz a0 , s2 , v0 addiu v0 , a0 , num addiu a0 , zero , - num and a0 , v0 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 sw zero , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , hexvar push esi call hexvar lea edi , [ eax + num ] mov edx , hexvar cmp edi , hexvar cmovae edx , edi add edx , num and edx , hexvar mov dword ptr [ esp ] , edx call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar mov dword ptr [ eax ] , num mov eax , num sub esp , num mov word ptr [ ebp + num ] , ax lea eax , [ ebp + num ] push edi push esi push eax call hexvar mov byte ptr [ ebp + edi + num ] , num add esp , hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r8 , r0 mov r7 , r1 mov r6 , r2 mov r5 , r3 b hexvar bl hexvar ldr r3 , [ r0 ] cmp r3 , num bne hexvar bl hexvar mov r3 , r5 mov r2 , r6 mov r1 , r7 mov r0 , r8 bl hexvar subs r4 , r0 , num blt hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s5 , hexvar ( sp ) addiu s5 , zero , num sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a3 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) b hexvar sw gp , hexvar ( sp ) jalr t9 nop lw v0 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - num ] , eax xor eax , eax mov cl , al cmp dword ptr [ ebp - num ] , num mov byte ptr [ ebp - hexvar ] , cl jge hexvar call hexvar cmp dword ptr [ eax ] , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - num ] , eax xor eax , eax mov cl , al cmp dword ptr [ ebp - num ] , num mov byte ptr [ ebp - hexvar ] , cl jge hexvar call hexvar cmp dword ptr [ eax ] , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar nop nop nop nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a3 , v0 lui a2 , hexvar addiu a2 , a2 , hexvar move a1 , zero move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] push edx lea edx , [ ebx - hexvar ] push edx push num push eax call hexvar add esp , hexvar call hexvar
push { r4 , r5 , r6 , lr } ldr r6 , [ pc , hexvar ] mov r5 , r0 ldr r4 , [ r6 , hexvar ] cmp r4 , num beq hexvar add r0 , r4 , num bl hexvar ldr r4 , [ r4 ] cmp r4 , num bne hexvar mov r3 , num mov r0 , r5 mov r1 , r3 str r3 , [ r6 , hexvar ] bl hexvar mov r0 , r5 pop { r4 , r5 , r6 , lr } b hexvar andeq r8 , r3 , ip , ror num
push rbx mov ebx , edi call hexvar mov esi , num mov edi , ebx call hexvar mov edi , ebx call hexvar pop rbx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] call hexvar sub esp , num push num push esi call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) jal hexvar sw a1 , hexvar ( sp ) move a0 , s0 lw a1 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] mov eax , ebx call hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebx call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num call hexvar mov eax , dword ptr [ rbp ] bswap eax mov dword ptr [ rbx ] , eax mov eax , dword ptr [ rbp + num ] bswap eax mov dword ptr [ rbx + num ] , eax mov eax , dword ptr [ rbp + num ] bswap eax mov dword ptr [ rbx + num ] , eax mov eax , dword ptr [ rbp + hexvar ] bswap eax mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rbp + hexvar ] bswap eax mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rbp + hexvar ] bswap eax mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rbp + hexvar ] bswap eax mov dword ptr [ rbx + hexvar ] , eax mov eax , dword ptr [ rbp + hexvar ] bswap eax mov dword ptr [ rbx + hexvar ] , eax add rsp , num mov rax , rbx pop rbx pop rbp ret
push { r4 , r5 , r6 , lr } subs r4 , r0 , num beq hexvar mov r1 , hexvar bl hexvar subs r5 , r0 , num beq hexvar add r6 , r5 , num sub r3 , r6 , r4 cmp r3 , num ble hexvar mov r2 , num ldr r1 , [ pc , hexvar ] sub r0 , r5 , num bl hexvar cmp r0 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r6 bl hexvar cmp r0 , num movne r4 , r6 ldreq r3 , [ pc , hexvar ] addeq r4 , r5 , num streq r4 , [ r3 ] ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r4 , [ r2 ] str r4 , [ r3 ] pop { r4 , r5 , r6 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , zero , hexvar jalr t9 move s0 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 addiu s2 , v0 , num subu v0 , s2 , s0 slti v0 , v0 , num bnez v0 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 addiu a0 , s1 , - num bnez v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , s2 bnez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) addiu s0 , s1 , num sw s0 , ( v0 ) lui v0 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) sw s0 , - hexvar ( v0 ) lw v0 , - hexvar ( gp ) sw s0 , ( v0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar lw ra , hexvar ( sp ) move s0 , s2 lw s1 , hexvar ( sp ) lw s2 , hexvar ( sp ) sw s0 , - hexvar ( v0 ) lw v0 , - hexvar ( gp ) sw s0 , ( v0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a0 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , zero , num addiu a0 , a0 , - hexvar jalr t9 lw a3 , ( v0 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbx mov esi , hexvar mov rbx , rdi call hexvar test rax , rax je hexvar lea rdx , [ rax + num ] mov rcx , rdx sub rcx , rbx cmp rcx , num jle hexvar lea rsi , [ rax - num ] mov edi , hexvar mov ecx , num repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] jne hexvar mov ecx , num mov rsi , rdx mov edi , hexvar repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta sil setb cl add rax , num cmp sil , cl cmovne rax , rdx mov rbx , rax mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] cmp byte ptr [ eax ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] cmp eax , dword ptr [ ebp - num ] mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , - num mov dword ptr [ ebp + num ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ eax ] mov dword ptr [ ecx ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] movsx ecx , byte ptr [ ecx ] cmp ecx , hexvar sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] cmp byte ptr [ ecx ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] cmp ecx , dword ptr [ edx ] setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) bnez v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , num ( fp ) beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , - num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ eax ] mov dword ptr [ ecx ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] movsx ecx , byte ptr [ ecx ] cmp ecx , hexvar sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] cmp byte ptr [ ecx ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] cmp ecx , dword ptr [ edx ] setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sltu v0 , zero , v0 lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] add edx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sltu v0 , zero , v0 lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rax add rdi , hexvar call hexvar xor ecx , ecx test rax , rax setne cl mov eax , ecx pop rcx ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov r12 , rsi mov r13d , ecx mov rsi , rdx mov rdi , r12 call hexvar test rax , rax je hexvar mov rbx , rax test r13d , r13d jne hexvar mov rax , qword ptr [ rbp ] mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbp ] , rbx mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a1 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 ) lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s3 , hexvar ( sp ) move a1 , a2 sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) move a0 , s2 sw ra , hexvar ( sp ) move s3 , a3 lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s3 , hexvar move s0 , v0 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a0 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a2 , s2 lw v1 , ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a1 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rax mov rdi , rdx mov eax , num call hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , hexvar jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar nop leave ret
lui v0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v0 , - hexvar ( v0 ) addiu a2 , zero , num sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar addiu a1 , a1 , hexvar jalr t9 move a0 , zero addiu a0 , zero , num lw gp , hexvar ( sp ) move a2 , s0 lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui v1 , hexvar addiu v0 , zero , hexvar lw v1 , - hexvar ( v1 ) beq v1 , v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , zero addiu a1 , a1 , hexvar jalr t9 addiu a2 , zero , num addiu a0 , zero , num lw gp , hexvar ( sp ) move a1 , v0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar lui a1 , hexvar b hexvar addiu a1 , a1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
mov eax , dword ptr [ rip + hexvar ] push rbx mov edx , num mov rbx , rdi lea rsi , [ rip + hexvar ] test eax , eax jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi call hexvar mov rdx , rbx mov rsi , rax mov edi , num xor eax , eax call hexvar cmp dword ptr [ rip + hexvar ] , hexvar je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar pop rbx mov rsi , rax mov edi , num xor eax , eax jmp hexvar nop word ptr cs : [ rax + rax ] pop rbx jmp hexvar nop word ptr cs : [ rax + rax ]
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] cmp eax , hexvar jne hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push edi mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar mov dword ptr [ ecx ] , num mov dword ptr [ ecx + hexvar ] , num lea edi , [ ecx + num ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov eax , num pop edi ret
push edi mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar lea edi , [ ecx + num ] mov dword ptr [ ecx ] , num mov dword ptr [ ecx + hexvar ] , num xor eax , eax and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov eax , num pop edi ret
mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar push rax mov edx , hexvar xor esi , esi call hexvar add rsp , num mov eax , num ret
mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar push rax mov edx , hexvar xor esi , esi call hexvar add rsp , num mov eax , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov edi , dword ptr [ ecx ] mov ebx , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + num ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub ecx , esi add ecx , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r1 , num mov r2 , r4 mov r5 , r0 bl hexvar cmp r0 , num subne r0 , r0 , r5 addne r0 , r0 , num moveq r0 , r4 pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) b hexvar lui s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a0 , v0 lui s0 , hexvar lw a0 , hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , hexvar ( s0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx call hexvar add ebx , hexvar sub esp , num jmp hexvar lea esi , [ esi ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx ret
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , rax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rip + hexvar ] , num pop rax ret
push ebx call hexvar add ebx , hexvar sub esp , num jmp hexvar lea esi , [ esi ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx ret
push ebp mov ebp , esp push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx add esp , num pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx add esp , num pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx add esp , num pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax add dword ptr [ esi + num ] , num test ebp , ebp je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov dword ptr [ esp + num ] , num mov edx , edi test edi , edi je hexvar mov eax , esi call hexvar test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num lea eax , [ ebx - hexvar ] lea edx , [ ebx - hexvar ] cmove eax , edx mov edx , dword ptr [ esi + num ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + hexvar ] , num mov eax , ebp or eax , dword ptr [ esp + hexvar ] jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar test edi , edi je hexvar test ebp , ebp jne hexvar mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + num ] , num mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar ldr sb , [ sp , hexvar ] mov r4 , r0 ldr r0 , [ sp , hexvar ] adds r5 , sb , num movne r5 , num cmp r0 , num moveq r6 , r5 movne r6 , num ldr r7 , [ pc , hexvar ] ldr r0 , [ r4 , num ] ldr ip , [ r7 ] add r0 , r0 , num cmp r6 , num mov r8 , r1 mov sl , r2 mov fp , r3 str r0 , [ r4 , num ] str ip , [ sp , hexvar ] bne hexvar cmp r8 , num beq hexvar mov r0 , hexvar bl hexvar mov r2 , hexvar mov r1 , num mov sl , r0 bl hexvar mov r0 , r8 bl hexvar ldr r2 , [ pc , hexvar ] ldr ip , [ pc , hexvar ] ldr r3 , [ sp , hexvar ] cmp fp , num moveq fp , r2 movne fp , ip orrs r3 , sb , r3 mov r2 , num moveq r5 , num mov r1 , num ldr ip , [ r4 , num ] cmp r5 , r2 mov r8 , r0 str r1 , [ sl , num ] str ip , [ sl ] str sl , [ r4 , num ] str fp , [ sl , hexvar ] str r0 , [ sl , num ] str r2 , [ sl , hexvar ] str r2 , [ sl , hexvar ] str r2 , [ sl , hexvar ] bne hexvar mov r2 , num mov r0 , num str r2 , [ sl , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r7 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax add dword ptr [ esi + num ] , num test ebp , ebp je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov dword ptr [ esp + num ] , num mov edx , edi test edi , edi je hexvar mov eax , esi call hexvar test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num lea eax , [ ebx - hexvar ] lea edx , [ ebx - hexvar ] cmove eax , edx mov edx , dword ptr [ esi + num ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + hexvar ] , num mov eax , ebp or eax , dword ptr [ esp + hexvar ] jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar test edi , edi je hexvar test ebp , ebp jne hexvar mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + num ] , num mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] add dword ptr [ ecx + num ] , num mov dword ptr [ ebp - hexvar ] , ecx test eax , eax setne byte ptr [ ebp - hexvar ] test edx , edx movzx eax , byte ptr [ ebp - hexvar ] jne hexvar test al , al jne hexvar mov dword ptr [ ebp - hexvar ] , num test edi , edi je hexvar sub esp , hexvar push hexvar call hexvar lea ecx , [ eax + num ] mov esi , eax mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num xor edx , edx mov dword ptr [ ebp - hexvar ] , esi and ecx , hexvar sub eax , ecx add eax , hexvar and eax , hexvar mov dword ptr [ ecx + edx ] , num add edx , num cmp edx , eax jb hexvar mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edi call hexvar mov edi , dword ptr [ ebp - hexvar ] mov edx , eax add esp , hexvar mov dword ptr [ esi + num ] , eax lea ecx , [ ebx - hexvar ] mov dword ptr [ esi + num ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ edi + num ] , esi mov dword ptr [ esi ] , eax mov eax , dword ptr [ ebp + hexvar ] test eax , eax lea eax , [ ebx - hexvar ] cmovne eax , ecx mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] or eax , dword ptr [ ebp + hexvar ] je hexvar cmp byte ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ esi + num ] , num mov eax , num mov ebx , dword ptr [ ebp - hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mvn r3 , num str r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] and r3 , r3 , r2 mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] and eax , dword ptr [ ecx ] mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] and ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp + num ] and eax , dword ptr [ ebp - num ] leave ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar lea edx , [ ebx + hexvar ] sub esp , num mov dword ptr [ ebx + hexvar ] , num push edx push eax call hexvar pop eax lea eax , [ ebx + hexvar ] pop edx push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
push rax mov edi , dword ptr [ rip + hexvar ] test edi , edi je hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar pop rax ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) bnez v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) sw zero , - hexvar ( v0 ) jalr t9 addiu a1 , a1 , - hexvar lui a1 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu a1 , a1 , - hexvar lw a0 , hexvar ( s0 )
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r0 , r0 pop { r4 , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } subs r5 , r2 , num popeq { r4 , r5 , r6 , r7 , r8 , pc } mov r4 , r1 mov r6 , r0 bl hexvar mov r7 , r0 add r5 , r4 , r5 ldrb r2 , [ r4 ] , num ldr r3 , [ r7 ] mov r1 , r6 ldr r0 , [ r3 , r2 , lsl num ] bl hexvar cmp r4 , r5 bne hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , ecx add edx , - num mov dword ptr [ eax ] , edx cmp ecx , num seta bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] movzx ecx , byte ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] add edx , num mov dword ptr [ ecx ] , edx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , ecx add edx , - num mov dword ptr [ eax ] , edx cmp ecx , num seta bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] movzx ecx , byte ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] add edx , num mov dword ptr [ ecx ] , edx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , ecx add edx , - num mov dword ptr [ eax ] , edx cmp ecx , num seta bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] movzx ecx , byte ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] add edx , num mov dword ptr [ ecx ] , edx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test esi , esi js hexvar mov eax , ebp mov dword ptr [ esp + num ] , ecx cmp al , num jne hexvar cmp esi , hexvar jne hexvar lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edx , eax mov eax , edi call hexvar test eax , eax mov ebp , eax mov ecx , dword ptr [ esp + num ] je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx - hexvar ] push num push eax lea eax , [ esp + hexvar ] push eax push num push ebp call hexvar add esp , hexvar test eax , eax je hexvar call hexvar mov esi , dword ptr [ eax ] cmp ebp , dword ptr [ esp + hexvar ] je hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test esi , esi js hexvar cmp byte ptr [ esp + hexvar ] , num jne hexvar cmp esi , hexvar jne hexvar lea edx , [ esp + hexvar ] mov eax , edi call hexvar mov dword ptr [ esp + hexvar ] , eax test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ebp mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push num lea eax , [ ebx - hexvar ] push eax lea eax , [ esp + hexvar ] push eax push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar call hexvar mov esi , dword ptr [ eax ] lea eax , [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] cmp ecx , eax je hexvar sub esp , hexvar push ecx call hexvar add esp , hexvar jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push edi push dword ptr [ esp + hexvar ] push ebp push dword ptr [ esp + hexvar ] call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar call hexvar mov esi , dword ptr [ eax ] jmp hexvar call hexvar mov esi , dword ptr [ eax ] mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test esi , esi js hexvar mov eax , ebp mov dword ptr [ esp + num ] , ecx cmp al , num jne hexvar cmp esi , hexvar jne hexvar lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edx , eax mov eax , edi call hexvar test eax , eax mov ebp , eax mov ecx , dword ptr [ esp + num ] je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx - hexvar ] push num push eax lea eax , [ esp + hexvar ] push eax push num push ebp call hexvar add esp , hexvar test eax , eax je hexvar call hexvar mov esi , dword ptr [ eax ] cmp ebp , dword ptr [ esp + hexvar ] je hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw s3 , hexvar ( sp ) sw s7 , hexvar ( sp ) move s7 , a0 sw s6 , hexvar ( sp ) move s6 , a1 sw s5 , hexvar ( sp ) move s5 , a3 sw s4 , hexvar ( sp ) move s4 , a2 sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) lw v0 , ( s0 ) lbu s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s3 , hexvar move s1 , v0 beqz v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , hexvar move s3 , v0 lw v0 , ( v0 )
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov ebp , ecx mov rcx , rsi test rsi , rsi je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r14 , rdx mov rdi , rbx mov esi , hexvar xor edx , edx xor r8d , r8d call hexvar test eax , eax jle hexvar mov r15d , eax movsxd rbp , eax mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num je hexvar mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num jne hexvar test r14 , r14 je hexvar test al , num jne hexvar test al , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax movzx eax , al add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax mov r14 , rdx test rdi , rdi setne al test rsi , rsi setne dl xor dl , al mov rax , rdi or rax , rsi setne al test dl , dl jne hexvar test al , al je hexvar mov ebp , ecx mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rcx , rsi mov rdi , rbx mov esi , hexvar xor edx , edx xor r8d , r8d call hexvar test eax , eax jle hexvar mov r15d , eax movsxd rbp , eax mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num je hexvar mov rdi , rbx mov esi , hexvar mov rdx , rbp xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar test al , num jne hexvar test r14 , r14 je hexvar test al , num jne hexvar test al , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax movzx eax , al add rsp , num pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar nop beqz a1 , hexvar move s2 , a1 lw v0 , hexvar ( a0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx test edi , edi je hexvar test eax , eax je hexvar cmp dword ptr [ edi + hexvar ] , num je hexvar sub esp , hexvar push num push eax push num push hexvar push edi call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax jg hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar call hexvar mov esi , num jmp hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov esi , num mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r6 , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] cmp r4 , num beq hexvar ldr r3 , [ r4 , hexvar ] mov r1 , r5 mov r0 , r4 blx r3 cmp r0 , num bne hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num bne hexvar ldr r4 , [ r6 , num ] ! cmp r4 , num bne hexvar mov r4 , num mov r0 , r4 pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movabs rdi , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num setne al mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call rax cmp eax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movabs rdi , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num setne al mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call rax cmp eax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw s0 , - hexvar ( gp ) lw t9 , hexvar ( s0 ) move a1 , s1 move a0 , s0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move v0 , s0 lw s0 , hexvar ( s0 ) bnez s0 , hexvar move v0 , s0 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lui gp , hexvar sw s3 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s3 , hexvar ( a0 )
push r15 push r14 xor eax , eax push r13 push r12 push rbp push rbx sub rsp , hexvar mov r14d , dword ptr [ rdi + hexvar ] test r14d , r14d jne hexvar cmp qword ptr [ rdi + hexvar ] , num mov r15 , r9 mov qword ptr [ rsp + num ] , r8 mov r12 , rcx mov r13 , rdx mov rbx , rsi mov rbp , rdi je hexvar mov r8 , qword ptr [ rbp + hexvar ] mov qword ptr [ r12 ] , num test r8d , r8d jne hexvar mov rdi , qword ptr [ rbp + hexvar ] mov ecx , dword ptr [ rdi + hexvar ] test ecx , ecx jle hexvar mov r8 , qword ptr [ rdi + hexvar ] xor esi , esi jmp hexvar nop word ptr [ rax + rax ] mov rsi , qword ptr [ rbp + hexvar ] cmp rbx , qword ptr [ rsi + num ] jb hexvar lea esi , [ rax + num ] cmp esi , ecx jge hexvar lea edx , [ rsi + rcx ] mov eax , edx shr eax , hexvar add eax , edx sar eax , num movsxd rdx , eax lea rdx , [ rdx + rdx * num ] lea rbp , [ r8 + rdx * num ] mov rdx , qword ptr [ rbp ] cmp rbx , rdx jae hexvar mov ecx , eax cmp esi , ecx jl hexvar cmp rbx , rdx jae hexvar mov qword ptr [ r13 ] , num xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw s3 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a3 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebx sub esp , num call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a0 , hexvar ( a0 )
push ebx sub esp , num call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ eax + hexvar ] lea eax , [ eax - hexvar ] push eax mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp byte ptr [ ebx + hexvar ] , num mov esi , dword ptr [ esp + hexvar ] je hexvar xor eax , eax test esi , esi je hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ecx ] mov esi , dword ptr [ esi + edx * num ] test esi , esi je hexvar sub esp , num add edx , num mov dword ptr [ ecx ] , edx push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov edi , eax mov dword ptr [ eax + hexvar ] , esi pop eax lea eax , [ ebx - hexvar ] pop edx push eax push esi call hexvar fld dword ptr [ ebx - hexvar ] add esp , hexvar test eax , eax fstp dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmovne eax , dword ptr [ ebx - hexvar ] mov dword ptr [ edi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar beqz a1 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a2 )
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ eax + hexvar ] lea eax , [ eax - hexvar ] push eax mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov r13 , rdx mov rax , qword ptr [ rdi + num ] mov r12 , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov ecx , dword ptr [ rsi + hexvar ] lea eax , [ rcx + num ] mov dword ptr [ rsi + hexvar ] , eax mov rax , qword ptr [ r12 + hexvar ] movzx eax , byte ptr [ rax + num ] movzx ebx , al imul ebx , ecx add rbx , rdx movzx eax , al add rax , rbx add rdx , qword ptr [ rsi + hexvar ] cmp rax , rdx ja hexvar mov rax , qword ptr [ r12 + hexvar ] mov rdx , rbx mov rsi , r13 mov rdi , rbp call qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi + num ] mov ebx , dword ptr [ eax + hexvar ] mov edi , dword ptr [ edx + hexvar ] lea edx , [ ebx + num ] mov ecx , dword ptr [ edi + hexvar ] mov dword ptr [ eax + hexvar ] , edx movzx edx , byte ptr [ ecx + num ] imul ebx , edx add ebx , dword ptr [ eax + hexvar ] add edx , ebx mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ eax + hexvar ] add edx , dword ptr [ eax + hexvar ] cmp dword ptr [ esp + num ] , edx jbe hexvar sub esp , num push hexvar mov eax , dword ptr [ esp + hexvar ] lea eax , [ eax - hexvar ] push eax call hexvar mov ecx , dword ptr [ edi + hexvar ] add esp , hexvar mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ebp mov dword ptr [ esp + hexvar ] , esi mov eax , dword ptr [ ecx + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp jmp eax lea esi , [ esi ] lea edi , [ edi ]
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ecx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + num ] mov edi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] lea edx , [ ebx + num ] mov dword ptr [ ebp + hexvar ] , edx mov edx , dword ptr [ edi + hexvar ] movzx edx , byte ptr [ edx + num ] imul ebx , edx add ebx , eax add edx , ebx add eax , dword ptr [ ebp + hexvar ] cmp edx , eax ja hexvar sub esp , num mov eax , dword ptr [ edi + hexvar ] push ebx push dword ptr [ esp + hexvar ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 lw v0 , num ( a0 ) lw s2 , hexvar ( v0 ) lw v1 , hexvar ( a1 )
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r5 , r1 mov r4 , r2 ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r1 blx r3 str r0 , [ r4 ] ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] mov r3 , num str r3 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r5 , r1 mov r4 , r2 ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r1 blx r3 str r0 , [ r4 ] ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] mov r3 , num str r3 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] test esi , esi js hexvar mov eax , esi mov ebx , hexvar movzx ebp , cx mul ebx mov eax , dword ptr [ esp + hexvar ] shr ecx , hexvar shr edx , hexvar shr eax , hexvar imul edx , edx , hexvar sub esi , edx mov edi , esi mov edx , esi movzx esi , word ptr [ esp + hexvar ] imul edi , ebp sub ecx , edx add ecx , eax mov eax , edi mul ebx mov eax , hexvar shr edx , hexvar imul edx , edx , hexvar sub edi , edx add ecx , edi add esi , ebp lea edx , [ ecx + hexvar ] je hexvar lea eax , [ esi - num ] cmp eax , hexvar jbe hexvar lea eax , [ esi - hexvar ] sub ecx , hexvar cmp edx , hexvar cmova edx , ecx lea ecx , [ edx - hexvar ] cmp edx , hexvar pop ebx cmova edx , ecx shl edx , hexvar pop esi or eax , edx pop edi pop ebp ret
bltz a2 , hexvar andi a3 , a0 , hexvar lui v0 , hexvar ori v0 , v0 , hexvar multu a2 , v0 srl a0 , a0 , hexvar srl t2 , a1 , hexvar andi a1 , a1 , hexvar mfhi v1 ori t1 , zero , hexvar addu a1 , a1 , a3 srl v1 , v1 , hexvar sll t0 , v1 , hexvar subu t0 , t0 , v1 sll t0 , t0 , num addu v1 , t0 , v1 subu v1 , a2 , v1 mul a2 , v1 , a3 subu a0 , a0 , v1 addu a0 , a0 , t2 multu a2 , v0 mfhi v0 srl v0 , v0 , hexvar sll v1 , v0 , hexvar subu v1 , v1 , v0 sll v1 , v1 , num addu v0 , v1 , v0 subu a2 , a2 , v0 addu a0 , a0 , a2 bnez a1 , hexvar addu v1 , a0 , t1 ori v0 , zero , hexvar lui a1 , num ori a1 , a1 , hexvar sltu a1 , v1 , a1 bnez a1 , hexvar nop lui v1 , hexvar addiu v1 , v1 , hexvar addu v1 , a0 , v1 ori a0 , zero , hexvar sltu a1 , v1 , a0 bnez a1 , hexvar nop subu v1 , v1 , a0 sll v1 , v1 , hexvar jr ra or v0 , v1 , v0 addiu v0 , a1 , - num sltu t1 , v0 , t1 bnez t1 , hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar addu v0 , a1 , v0 jr ra addiu v0 , zero , - num
mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] jmp hexvar jmp hexvar nop nop nop nop nop nop nop nop nop nop nop nop nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] mov r5 , r0 ldr r3 , [ r4 , hexvar ] ldr r2 , [ r4 , hexvar ] ldr r0 , [ r4 , hexvar ] cmp r3 , r2 beq hexvar add r2 , r3 , num str r5 , [ r0 , r3 , lsl num ] str r2 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc } ldchs p5 , c1 , [ sb , - hexvar ] !
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] add r1 , r3 , num ldr r0 , [ pc , hexvar ] str r1 , [ r0 ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r2 , [ fp , - num ] str r2 , [ r3 ] mov r0 , r0 sub sp , fp , num pop { fp , pc } stmiblo sb , { r1 , r3 , r4 , r7 , fp , ip , lr , pc } andeq r0 , r0 , r0
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , eax mov eax , dword ptr [ ebx + hexvar ] cmp eax , dword ptr [ ebx + hexvar ] je hexvar mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] lea ecx , [ eax + num ] mov dword ptr [ ebx + hexvar ] , ecx mov dword ptr [ edx + eax * num ] , esi add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov esi , edx add esi , num mov dword ptr [ hexvar ] , esi mov dword ptr [ ecx + edx * num ] , eax add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 move v1 , a1 sw ra , hexvar ( sp ) lw t1 , - hexvar ( gp ) addiu t0 , a0 , hexvar sw gp , hexvar ( sp ) lw a1 , ( t1 ) sw a1 , hexvar ( sp ) lw a3 , ( a0 )
mov rax , rsi mov r8d , num mov edx , dword ptr [ rdi + r8 ] mov ecx , edx shl ecx , hexvar mov r9d , edx shr r9d , hexvar or ecx , r9d mov r9d , edx shl r9d , num and r9d , hexvar or ecx , r9d shr edx , num and edx , hexvar or edx , ecx mov dword ptr [ rax + r8 ] , edx add r8 , num cmp r8 , hexvar jne hexvar ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + edx * num ] shl eax , hexvar mov ecx , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + edx * num ] shl eax , num and eax , hexvar or ecx , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + edx * num ] shr eax , num and eax , hexvar or ecx , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + edx * num ] shr eax , hexvar mov edx , eax mov eax , dword ptr [ ebp - num ] lea ebx , [ eax * num ] mov eax , dword ptr [ ebp + hexvar ] add eax , ebx or edx , ecx mov dword ptr [ eax ] , edx add dword ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num jle hexvar mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - num ] , num jge hexvar xor eax , eax mov cl , al mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - num ] shl edx , num add eax , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp - num ] mov edx , dword ptr [ edx + esi * num ] mov dword ptr [ ebp - hexvar ] , edx test cl , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar shr eax , hexvar mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar shr ecx , num or eax , ecx mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar shl ecx , num or eax , ecx mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar shl ecx , hexvar or eax , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] bswap eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax + edx * num - num ] call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push esi push eax call hexvar
movsxd rdx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] push rbx mov rdi , qword ptr [ rax + rdx * num - num ] call hexvar lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax ]
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move a2 , a3 sw s0 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a3 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , zero sw s0 , hexvar ( sp ) move a3 , s2 move a2 , s1 jalr t9 move a1 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , num call hexvar add ebx , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar add esp , num pop ebx ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , num push edi push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax jne hexvar pop ebx pop esi pop edi ret
push r15 push r14 push rbx mov r15 , rcx mov r14 , rdx mov rbx , rdi mov rdx , rcx call hexvar test eax , eax je hexvar xor edi , edi mov rsi , rbx mov rdx , rbx mov rcx , r14 mov r8 , r15 pop rbx pop r14 pop r15 jmp hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp eax , num jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl je hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx + hexvar ] , rax sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar add rax , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx + hexvar ] , rax sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , hexvar add rax , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 mov rdi , qword ptr [ rbp - num ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx movsd xmm0 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp push rbx mov rbp , rdi sub rsp , num call hexvar lea rdi , [ rax + num ] mov rbx , rax call hexvar mov byte ptr [ rax + rbx ] , num add rsp , num mov rdx , rbx mov rsi , rbp mov rdi , rax pop rbx pop rbp jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi cmp dword ptr [ edx ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num je hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx cmp qword ptr [ rax ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] test rsi , rsi setne al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
xor rax , rax cmp rsi , hexvar jae hexvar cmp rsi , num je hexvar mov byte ptr [ rdi ] , al sub rsi , num lea rdi , [ rdi + num ] jne hexvar ret nop dword ptr [ rax ] test rdi , num je hexvar mov byte ptr [ rdi ] , al lea rsi , [ rsi - num ] lea rdi , [ rdi + num ] jmp hexvar mov qword ptr [ rdi ] , rax lea rsi , [ rsi - num ] test rsi , - num lea rdi , [ rdi + num ] jne hexvar cmp rsi , num jne hexvar ret nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax movzx eax , byte ptr [ ebx + hexvar ] movzx eax , al mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar jmp hexvar mov eax , dword ptr [ esp + num ] lea edx , [ eax + num ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov byte ptr [ eax ] , dl mov eax , dword ptr [ esp + num ] and eax , hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] add eax , edx add eax , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + num ] lea edx , [ eax - num ] mov dword ptr [ esp + num ] , edx test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] movzx eax , al sub esp , num push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num je hexvar mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + hexvar ] add eax , edx add eax , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ ebx + hexvar ] , al jmp hexvar nop add esp , hexvar pop ebx ret
xor rax , rax cmp rsi , hexvar jae hexvar cmp rsi , num je hexvar mov byte ptr [ rdi ] , al sub rsi , num lea rdi , [ rdi + num ] jne hexvar ret nop dword ptr [ rax ] test rdi , num je hexvar mov byte ptr [ rdi ] , al lea rsi , [ rsi - num ] lea rdi , [ rdi + num ] jmp hexvar mov qword ptr [ rdi ] , rax lea rsi , [ rsi - num ] test rsi , - num lea rdi , [ rdi + num ] jne hexvar cmp rsi , num jne hexvar ret nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
xor rax , rax cmp rsi , hexvar jae hexvar cmp rsi , num je hexvar mov byte ptr [ rdi ] , al sub rsi , num lea rdi , [ rdi + num ] jne hexvar ret nop dword ptr [ rax ] test rdi , num je hexvar mov byte ptr [ rdi ] , al lea rsi , [ rsi - num ] lea rdi , [ rdi + num ] jmp hexvar mov qword ptr [ rdi ] , rax lea rsi , [ rsi - num ] test rsi , - num lea rdi , [ rdi + num ] jne hexvar cmp rsi , num jne hexvar ret nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
xor edx , edx mov rax , - num div rsi cmp rax , rdi jbe hexvar imul rdi , rsi jmp hexvar nop word ptr [ rax + rax ] xor eax , eax ret
push esi push ebx xor edx , edx mov eax , hexvar sub esp , num mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar div ecx
push esi push ebx xor edx , edx mov eax , hexvar sub esp , num mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar div ecx
push { r4 , r5 , r6 , lr } mov r4 , r0 mvn r0 , num mov r5 , r1 bl hexvar cmp r0 , r4 bls hexvar mul r0 , r4 , r5 pop { r4 , r5 , r6 , lr } b hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] test ecx , ecx mov dword ptr [ ebp - num ] , eax jns hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] xor edx , edx neg ecx sbb edx , eax setl bl and bl , num movzx eax , bl mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] test ecx , ecx mov dword ptr [ ebp - num ] , eax jns hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] xor edx , edx neg ecx sbb edx , eax setl bl and bl , num movzx eax , bl mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] test ecx , ecx mov dword ptr [ ebp - num ] , eax jns hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] xor edx , edx neg ecx sbb edx , eax setl bl and bl , num movzx eax , bl mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] test edx , edx js hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov ecx , eax mov ebx , edx mov ebx , ebx sar ebx , hexvar mov ecx , ebx sub ecx , eax sbb ebx , edx mov eax , ecx mov edx , ebx mov eax , edx xor edx , edx shr eax , hexvar movzx eax , al jmp hexvar mov eax , hexvar pop ebx pop ebp ret
xor eax , eax cmp rdi , rsi jne hexvar jmp hexvar nop dword ptr [ rax ] add rdi , num add rsi , num cmp al , dl jne hexvar movzx eax , byte ptr [ rdi ] lea ecx , [ rax - hexvar ] lea edx , [ rax + hexvar ] cmp ecx , hexvar cmovb eax , edx movzx edx , byte ptr [ rsi ] lea r9d , [ rdx - hexvar ] lea r8d , [ rdx + hexvar ] cmp r9d , hexvar cmovb edx , r8d test al , al jne hexvar movzx eax , al movzx edx , dl sub eax , edx ret nop dword ptr [ rax ]
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov r12 , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rbp - hexvar ] cmp r12 , rbx jne hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ r12 ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbx ] movzx eax , al mov edi , eax call hexvar mov byte ptr [ rbp - hexvar ] , al cmp byte ptr [ rbp - hexvar ] , num je hexvar add r12 , num add rbx , num movzx eax , byte ptr [ rbp - hexvar ] cmp al , byte ptr [ rbp - hexvar ] je hexvar jmp hexvar nop movzx edx , byte ptr [ rbp - hexvar ] movzx eax , byte ptr [ rbp - hexvar ] sub edx , eax mov eax , edx add rsp , hexvar pop rbx pop r12 pop rbp ret
bne a0 , a1 , hexvar move v0 , zero b hexvar nop bne a3 , a2 , hexvar andi v1 , v1 , hexvar lbu v0 , ( a0 ) addiu v1 , v0 , - hexvar sltiu v1 , v1 , hexvar beqz v1 , hexvar addiu a0 , a0 , num addiu v0 , v0 , hexvar lbu v1 , ( a1 ) andi a3 , v0 , hexvar addiu a2 , v1 , - hexvar sltiu a2 , a2 , hexvar beqz a2 , hexvar addiu a1 , a1 , num addiu v1 , v1 , hexvar bnez a3 , hexvar andi a2 , v1 , hexvar andi v1 , v1 , hexvar andi v0 , v0 , hexvar jr ra subu v0 , v0 , v1 jr ra nop nop
push ebp push edi xor eax , eax push esi push ebx sub esp , num mov ecx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] cmp ebx , ecx mov dword ptr [ esp ] , ecx jne hexvar jmp hexvar lea esi , [ esi ] add ebx , num add dword ptr [ esp ] , num cmp al , dl jne hexvar movzx eax , byte ptr [ ebx ] mov edi , dword ptr [ esp ] lea esi , [ eax - hexvar ] lea edx , [ eax + hexvar ] cmp esi , hexvar cmovb eax , edx movzx edx , byte ptr [ edi ] lea ebp , [ edx - hexvar ] lea edi , [ edx + hexvar ] cmp ebp , hexvar cmovb edx , edi test al , al jne hexvar movzx eax , al movzx edx , dl sub eax , edx add esp , num pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar cmp eax , num ja hexvar cmp eax , num je hexvar cmp eax , num ja hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar ja hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , num leave ret
push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] cmp edx , num je hexvar ja hexvar cmp edx , num je hexvar ja hexvar cmp edx , num lea eax , [ ebx - hexvar ] je hexvar cmp edx , num lea eax , [ ebx - hexvar ] jne hexvar add esp , num pop ebx ret
cmp esi , num je hexvar ja hexvar cmp esi , num lea rax , [ rip + hexvar ] je hexvar ja hexvar sub rax , hexvar cmp esi , num je hexvar add rax , hexvar cmp esi , num jne hexvar ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] cmp edx , num je hexvar cmp edx , num ja hexvar cmp edx , num je hexvar cmp edx , num ja hexvar cmp edx , num je hexvar cmp edx , num je hexvar jmp hexvar cmp edx , num je hexvar cmp edx , num je hexvar jmp hexvar cmp edx , hexvar je hexvar cmp edx , hexvar ja hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar jmp hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar lea eax , [ eax - hexvar ] jmp hexvar sub esp , num push hexvar lea eax , [ eax - hexvar ] push eax call hexvar add esp , hexvar mov eax , num leave ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v1 , num ( fp ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lui v0 , hexvar lbu v0 , hexvar ( v0 ) andi v0 , v0 , hexvar xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lui v0 , hexvar lw v1 , num ( fp ) sw v1 , hexvar ( v0 ) nop move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
mov eax , dword ptr [ esp + num ] call hexvar add edx , hexvar cmp eax , num je hexvar mov dword ptr [ edx + hexvar ] , eax ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi cmp dword ptr [ rbp - num ] , num jne hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax nop pop rbp ret
mov eax , dword ptr [ esp + num ] call hexvar add edx , hexvar cmp eax , num je hexvar mov dword ptr [ edx + hexvar ] , eax ret
ldr r3 , [ r0 ] push { r4 , lr } cmp r3 , num mov r4 , r0 beq hexvar ldr r0 , [ r0 , num ] bl hexvar mov r0 , r4 pop { r4 , lr } b hexvar
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] test ecx , ecx setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ esi + num ] call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num jne hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , hexvar sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ eax ] cmp eax , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , lr } bl hexvar subs r4 , r0 , num beq hexvar mov r0 , r4 pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu v0 , zero , hexvar b hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov rdi , rsi mov esi , hexvar call hexvar test rax , rax je hexvar movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + hexvar ] , num xor ebp , ebp lea r8 , [ rsp + hexvar ] mov ecx , hexvar mov rdi , rbx mov esi , hexvar xor edx , edx call hexvar test eax , eax je hexvar movsxd rbx , dword ptr [ rsp + hexvar ] movsxd r15 , dword ptr [ rsp + hexvar ] cmp rbx , - num je hexvar cmp r15d , hexvar je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num jg hexvar cmp eax , num je hexvar cmp eax , num jne hexvar test r15d , r15d jg hexvar jmp hexvar xor ebp , ebp lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] lea r9 , [ rsp + hexvar ] mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar cmp eax , num jne hexvar mov edi , dword ptr [ rsp + hexvar ] test edi , edi setns cl cmp edi , hexvar setl r10b mov r8d , dword ptr [ rsp + hexvar ] cmp r8d , hexvar seta bl mov edx , dword ptr [ rsp + hexvar ] test edx , edx sets r9b cmp edx , hexvar setg al mov esi , dword ptr [ rsp + hexvar ] cmp esi , hexvar ja hexvar xor cl , r10b or bl , cl mov ecx , ebx and cl , al jne hexvar or bl , r9b xor al , bl jne hexvar mov byte ptr [ r14 ] , dil mov byte ptr [ r14 + num ] , r8b mov byte ptr [ r14 + num ] , dl mov byte ptr [ r14 + num ] , sil mov ebp , num jmp hexvar cmp r15d , hexvar jne hexvar movups xmm0 , xmmword ptr [ rsp + hexvar ] movups xmmword ptr [ r14 ] , xmm0 mov ebp , hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu v0 , zero , hexvar b hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov rdi , rsi mov esi , hexvar call hexvar test rax , rax je hexvar movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + hexvar ] , num xor ebp , ebp lea r8 , [ rsp + hexvar ] mov ecx , hexvar mov rdi , rbx mov esi , hexvar xor edx , edx call hexvar test eax , eax je hexvar movsxd rbx , dword ptr [ rsp + hexvar ] movsxd r15 , dword ptr [ rsp + hexvar ] cmp rbx , - num je hexvar cmp r15d , hexvar je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num jg hexvar cmp eax , num je hexvar cmp eax , num jne hexvar test r15d , r15d jg hexvar jmp hexvar xor ebp , ebp lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] lea r9 , [ rsp + hexvar ] mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar cmp eax , num jne hexvar mov edx , dword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] mov edi , eax or edi , edx mov ebx , dword ptr [ rsp + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] mov esi , ebx or esi , ecx or esi , edi cmp esi , hexvar ja hexvar mov byte ptr [ r14 ] , dl mov byte ptr [ r14 + num ] , al mov byte ptr [ r14 + num ] , bl mov byte ptr [ r14 + num ] , cl mov ebp , num jmp hexvar cmp r15d , hexvar jne hexvar movups xmm0 , xmmword ptr [ rsp + hexvar ] movups xmmword ptr [ r14 ] , xmm0 mov ebp , hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r0 , [ fp , - num ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , num mov r0 , num bl hexvar bl hexvar andeq lr , r1 , r8 , lsr num ldrdeq r0 , r1 , [ r3 ] , -ip
cmp r0 , num push { r4 , lr } beq hexvar mov r4 , r1 mov r2 , num mov r1 , r0 mov r0 , num bl hexvar mov r1 , num mov r2 , r0 mov r3 , r4 mov r0 , r1 bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] mov r2 , r0 ldr r3 , [ r3 ] mov r1 , num mov r0 , num bl hexvar andeq lr , r1 , ip , asr r0 andeq r0 , r3 , ip , ror num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a3 , hexvar ( fp ) move a2 , v0 move a1 , zero move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a3 , v0 move a2 , v1 move a1 , zero addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a3 , hexvar ( fp ) move a2 , v0 move a1 , zero move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a3 , v0 move a2 , v1 move a1 , zero addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ ebp - num ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ ebp - num ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v0 , hexvar sw s2 , hexvar ( sp ) lui a1 , hexvar lw s2 , - hexvar ( gp ) lb v0 , - hexvar ( v0 ) sw s4 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s2 ) lw s4 , - hexvar ( a1 ) sw v1 , hexvar ( sp ) beq v0 , a0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lw t9 , - hexvar ( gp ) andi s0 , a0 , hexvar jalr t9 sw a0 , hexvar ( sp ) sll v1 , s0 , num lw v0 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] cmp byte ptr [ rbp - hexvar ] , al jne hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax movzx eax , byte ptr [ rip + hexvar ] cmp byte ptr [ rbp - hexvar ] , al je hexvar cmp byte ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rip + hexvar ] cdq idiv dword ptr [ rbp - hexvar ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v0 , hexvar sw s2 , hexvar ( sp ) lui a1 , hexvar lw s2 , - hexvar ( gp ) lb v0 , - hexvar ( v0 ) sw s4 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s2 ) lw s4 , - hexvar ( a1 ) sw v1 , hexvar ( sp ) beq v0 , a0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lw t9 , - hexvar ( gp ) andi s0 , a0 , hexvar jalr t9 sw a0 , hexvar ( sp ) sll v1 , s0 , num lw v0 , ( v0 )
push r12 push rbp mov ebp , edi push rbx sub rsp , hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax cmp byte ptr [ rip + hexvar ] , dil je hexvar cmp dil , num je hexvar movzx r12d , dil call hexvar mov rax , qword ptr [ rax ] test byte ptr [ rax + r12 * num + num ] , hexvar jne hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar test bpl , bpl js hexvar xor ebp , hexvar mov byte ptr [ rbx ] , hexvar mov ecx , dword ptr [ rip + hexvar ] mov byte ptr [ rbx + num ] , bpl mov eax , num mov edx , num jmp hexvar nop dword ptr [ rax ] mov esi , num mov ecx , dword ptr [ rip + hexvar ] mov eax , ecx cdq idiv esi sub esi , edx cmp byte ptr [ rip + hexvar ] , num mov edx , esi je hexvar test esi , esi je hexvar lea eax , [ rsi - num ] lea rax , [ rbx + rax + num ] nop dword ptr [ rax ] add rbx , num mov byte ptr [ rbx - num ] , hexvar cmp rax , rbx jne hexvar mov eax , edx jmp hexvar nop dword ptr [ rax ] mov byte ptr [ rbx ] , bpl mov eax , num add ecx , edx mov rdi , qword ptr [ rsp + num ] xor rdi , qword ptr fs : [ hexvar ] mov dword ptr [ rip + hexvar ] , ecx jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov r8d , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , r8d cmp dword ptr [ rbp - hexvar ] , num je hexvar xor eax , eax mov ecx , eax mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num mov r8 , qword ptr [ rbp - hexvar ] mov r9 , qword ptr [ rbp - hexvar ] sub rcx , num add r9 , rcx mov rcx , r8 mov r8 , r9 call hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push r15 push r14 mov r14 , rdx push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rcx mov rbx , rsi sub rsp , num call hexvar mov r13d , eax call hexvar mov r15d , dword ptr [ rax ] test r15d , r15d je hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov esi , r15d mov rdx , rax xor edi , edi xor eax , eax call hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar xor esi , esi mov rdx , rax xor edi , edi xor eax , eax call hexvar lea rcx , [ rbp - num ] mov rdx , r14 mov esi , num mov edi , num call hexvar lea rcx , [ rbx - num ] mov rdx , r12 mov esi , num xor edi , edi mov rbp , rax call hexvar mov edx , num mov esi , hexvar xor edi , edi mov rbx , rax call hexvar mov edi , dword ptr [ rip + hexvar ] mov rdx , rax mov r8 , rbp mov rcx , rbx xor esi , esi xor eax , eax call hexvar add rsp , num mov eax , r13d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a1 sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a3 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 lw a0 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov r8d , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , r8d cmp dword ptr [ rbp - hexvar ] , num je hexvar xor eax , eax mov ecx , eax mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num mov r8 , qword ptr [ rbp - hexvar ] mov r9 , qword ptr [ rbp - hexvar ] sub rcx , num add r9 , rcx mov rcx , r8 mov r8 , r9 call hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , lr } mov r4 , r0 ldrb r0 , [ r0 ] cmp r0 , num moveq r1 , r0 beq hexvar mov r5 , r1 mov r1 , num rsb r1 , r1 , r1 , lsl num add r0 , r1 , r0 mov r1 , r5 bl hexvar ldrb r0 , [ r4 , num ] ! cmp r0 , num bne hexvar mov r0 , r1 pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - num ] , cl cmp cl , num je hexvar imul eax , dword ptr [ ebp - num ] , hexvar movzx ecx , byte ptr [ ebp - num ] add eax , ecx xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - num ] , cl cmp cl , num je hexvar imul eax , dword ptr [ ebp - num ] , hexvar movzx ecx , byte ptr [ ebp - num ] add eax , ecx xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - num ] , cl test cl , cl setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov ecx , eax shl ecx , num sub ecx , eax movzx eax , byte ptr [ ebp - num ] add ecx , eax mov eax , dword ptr [ ebp + hexvar ] xor edx , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx mov ecx , dword ptr [ ebp - hexvar ] div ecx
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + num ] , edi jl hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r14 push rbx mov rbx , rdi cmp dword ptr [ rdi + hexvar ] , esi jge hexvar mov ebp , esi mov rdi , rbx call hexvar test rax , rax je hexvar mov r14 , rax mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx ] , r14 mov dword ptr [ rbx + hexvar ] , ebp jmp hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ esp + hexvar ] , eax jle hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
sub esp , hexvar call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
cmp qword ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax push rax mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
cmp qword ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax push rax mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax mov rax , rdx shl rax , num add rax , rdx shl rax , num sub rax , rdx add rax , rsi add rax , hexvar shl rax , num add rax , rcx add rax , num mov eax , dword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx add rdx , hexvar mov rax , qword ptr [ rax + rdx * num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar nop mov eax , num pop rbp ret
mov ip , r1 cmp r2 , hexvar bls hexvar ldr r3 , [ r0 , hexvar ] add r1 , r3 , r1 , lsl num ldr r3 , [ r1 , hexvar ] cmp r3 , num beq hexvar ldr r1 , [ r3 , num ] cmp r2 , r1 beq hexvar blo hexvar ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r1 , [ r3 , num ] cmp r1 , r2 beq hexvar cmp r1 , r2 bls hexvar mov r0 , num bx lr ldr r3 , [ r0 , hexvar ] add r2 , r2 , r2 , lsl num mov r0 , hexvar mul r1 , r0 , ip add r2 , r1 , r2 , lsl num add r2 , r3 , r2 ldr r0 , [ r2 , hexvar ] bx lr ldr r0 , [ r3 , hexvar ] bx lr mov r0 , num bx lr mov r0 , num bx lr mov r0 , num bx lr
cmp edx , hexvar mov rcx , qword ptr [ rdi + hexvar ] jbe hexvar movsxd rsi , esi mov rax , qword ptr [ rcx + rsi * num + hexvar ] test rax , rax je hexvar cmp edx , dword ptr [ rax + num ] je hexvar jae hexvar jmp hexvar nop dword ptr [ rax ] cmp dword ptr [ rax + num ] , edx je hexvar ja hexvar mov rax , qword ptr [ rax ] test rax , rax jne hexvar ret nop dword ptr [ rax ] movsxd rsi , esi mov edx , edx lea rax , [ rsi + rsi * num ] lea rax , [ rdx + rax * num ] sub rax , rsi add rax , hexvar shl rax , num mov eax , dword ptr [ rcx + rax + num ] ret
cmp edx , hexvar mov rcx , qword ptr [ rdi + hexvar ] jbe hexvar movsxd rsi , esi mov rax , qword ptr [ rcx + rsi * num + hexvar ] test rax , rax je hexvar cmp edx , dword ptr [ rax + num ] je hexvar jae hexvar jmp hexvar nop dword ptr [ rax ] cmp dword ptr [ rax + num ] , edx je hexvar ja hexvar mov rax , qword ptr [ rax ] test rax , rax jne hexvar ret nop dword ptr [ rax ] movsxd rsi , esi mov edx , edx lea rax , [ rsi + rsi * num ] lea rax , [ rdx + rax * num ] sub rax , rsi add rax , hexvar shl rax , num mov eax , dword ptr [ rcx + rax + num ] ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] mov r3 , num str r3 , [ sp , num ] b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r1 , [ sp ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] b hexvar ldr r3 , [ sp , num ] add r3 , r3 , num str r3 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] cmp r3 , r2 blt hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r12 push rbx mov r15 , rsi mov r12 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar xor r14d , r14d test eax , eax jle hexvar xor ebp , ebp mov rdi , qword ptr [ r12 + num ] mov esi , ebp call hexvar mov rbx , rax mov rdi , qword ptr [ rax ] mov rsi , r15 call hexvar test eax , eax je hexvar add ebp , num mov rdi , qword ptr [ r12 + num ] call hexvar cmp ebp , eax jl hexvar jmp hexvar mov r14 , qword ptr [ rbx + num ] mov rax , r14 pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov r15 , rsi mov r12 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar xor r14d , r14d test eax , eax jle hexvar xor ebp , ebp mov rdi , qword ptr [ r12 + num ] mov esi , ebp call hexvar mov rbx , rax mov rdi , qword ptr [ rax ] mov rsi , r15 call hexvar test eax , eax je hexvar add ebp , num mov rdi , qword ptr [ r12 + num ] call hexvar cmp ebp , eax jl hexvar jmp hexvar mov r14 , qword ptr [ rbx + num ] mov rax , r14 pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , zero sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) b hexvar sw gp , hexvar ( sp ) jalr t9 lw a0 , num ( s1 )
push rax add rdi , hexvar call hexvar xor ecx , ecx test rax , rax setne cl mov eax , ecx pop rcx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax call hexvar test eax , eax setne al movzx eax , al add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rax add rdi , hexvar call hexvar xor ecx , ecx test rax , rax setne cl mov eax , ecx pop rcx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - num ] , ecx mov byte ptr [ ebp - num ] , num jmp hexvar cmp dword ptr [ ebp + num ] , hexvar mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - num ] , ecx mov byte ptr [ ebp - num ] , num jmp hexvar cmp dword ptr [ ebp + num ] , hexvar mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - num ] , ecx mov byte ptr [ ebp - num ] , num jmp hexvar cmp dword ptr [ ebp + num ] , hexvar sete al mov dword ptr [ ebp - num ] , hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov cl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl je hexvar cmp dword ptr [ ebp + num ] , hexvar mov al , num mov byte ptr [ ebp - num ] , al je hexvar cmp dword ptr [ ebp + num ] , hexvar mov al , num mov byte ptr [ ebp - num ] , al je hexvar cmp dword ptr [ ebp + num ] , hexvar sete al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - num ] , al jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov cl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl je hexvar cmp dword ptr [ ebp + num ] , hexvar mov al , num mov byte ptr [ ebp - num ] , al je hexvar cmp dword ptr [ ebp + num ] , hexvar mov al , num mov byte ptr [ ebp - num ] , al je hexvar cmp dword ptr [ ebp + num ] , hexvar sete al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov cl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl je hexvar cmp dword ptr [ ebp + num ] , hexvar mov al , num mov byte ptr [ ebp - num ] , al je hexvar cmp dword ptr [ ebp + num ] , hexvar mov al , num mov byte ptr [ ebp - num ] , al je hexvar cmp dword ptr [ ebp + num ] , hexvar sete al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax test rax , rax je hexvar pop rcx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) beqz a1 , hexvar lui a3 , hexvar lw v0 , ( a0 )
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call rax test rax , rax je hexvar pop rcx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) beqz a1 , hexvar lui a3 , hexvar lw v0 , ( a0 ) lw t9 , hexvar ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rsi test edi , edi mov eax , hexvar mov ebx , hexvar cmove ebx , eax mov eax , hexvar mov r15d , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ r14 ] , rax mov eax , hexvar mov ebp , num nop word ptr cs : [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , ebx jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov r12d , ebp jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov r12d , num jmp hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov eax , r12d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , num test esi , esi je hexvar add esp , num pop ebx pop esi ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rsi test edi , edi mov eax , hexvar mov ebx , hexvar cmove ebx , eax mov eax , hexvar mov r15d , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ r14 ] , rax mov eax , hexvar mov ebp , num nop word ptr cs : [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , ebx jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov r12d , ebp jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov r12d , num jmp hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov eax , r12d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r3 ] add r0 , sp , hexvar str r3 , [ sp , hexvar ] bl hexvar mov r1 , num add r2 , sp , hexvar mov r0 , r1 bl hexvar cmp r0 , num bne hexvar mov r4 , num ldr fp , [ pc , hexvar ] ldr sl , [ pc , hexvar ] ldr r8 , [ pc , hexvar ] ldr sb , [ pc , hexvar ] b hexvar bl hexvar cmp r0 , num beq hexvar mov r7 , r8 mov r6 , r8 mov r5 , sl add r1 , sp , hexvar mov r0 , r4 bl hexvar ldr r0 , [ sb ] add r3 , sp , hexvar stm sp , { r4 , r5 , r6 , r7 } ldr r2 , [ pc , hexvar ] mov r1 , num bl hexvar add r4 , r4 , num cmp r4 , hexvar beq hexvar add r2 , sp , hexvar mov r1 , num mov r0 , r4 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ sp , hexvar ] mov r1 , r4 cmp r3 , num add r0 , sp , hexvar bne hexvar bl hexvar cmp r0 , num mov r7 , fp moveq r6 , r8 moveq r5 , r8 ldrne r6 , [ pc , hexvar ] movne r5 , sl b hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push eax mov edi , eax call hexvar add esp , hexvar push edi push num push num call hexvar add esp , hexvar test eax , eax jne hexvar lea eax , [ esp + hexvar ] mov esi , num mov dword ptr [ esp + num ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea esi , [ esi ] sub esp , num push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar lea ebp , [ ebx - hexvar ] lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , ebp mov dword ptr [ esp + hexvar ] , eax sub esp , num lea edi , [ esp + hexvar ] push edi push esi call hexvar lea eax , [ ebx - hexvar ] push ebp push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push edi push eax push num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar add esi , num cmp esi , hexvar je hexvar sub esp , num push dword ptr [ esp + hexvar ] push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , num push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov ebp , dword ptr [ esp + hexvar ] je hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , eax jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar mov rdx , rbx mov esi , num mov edi , num call hexvar test eax , eax jne hexvar mov ebx , num lea r15 , [ rip + hexvar ] mov qword ptr [ rsp + num ] , r15 jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rbx , rax call hexvar mov rdx , rbx mov esi , dword ptr [ rax ] mov edi , hexvar mov eax , num call hexvar mov r12 , r15 cmp byte ptr [ r12 ] , num je hexvar mov r14 , r15 mov r13 , qword ptr [ rsp + num ] lea rbp , [ rsp + hexvar ] mov rsi , rbp mov edi , ebx call hexvar push r12 push r14 mov r9 , r13 mov r8d , ebx mov rcx , rbp lea rdx , [ rip + hexvar ] mov esi , num mov rdi , qword ptr [ rip + hexvar ] mov eax , num call hexvar add rsp , hexvar add ebx , num cmp ebx , hexvar je hexvar lea rdx , [ rsp + hexvar ] mov esi , num mov edi , ebx call hexvar test eax , eax jne hexvar cmp qword ptr [ rsp + hexvar ] , num je hexvar lea rdi , [ rsp + hexvar ] mov esi , ebx call hexvar test eax , eax je hexvar mov r12 , r15 mov r14 , qword ptr [ rsp + num ] lea r13 , [ rip + hexvar ] jmp hexvar lea rdi , [ rsp + hexvar ] mov esi , ebx call hexvar lea r12 , [ rip + hexvar ] test eax , eax je hexvar lea r12 , [ rip + hexvar ] lea r14 , [ rip + hexvar ] lea r13 , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar lea rbx , [ rsp + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rbx mov qword ptr [ rsp + num ] , rbx call hexvar xor esi , esi xor edi , edi mov rdx , rbx call hexvar test eax , eax jne hexvar mov ebx , num lea rbp , [ rsp + hexvar ] jmp hexvar nop dword ptr [ rax ] call hexvar test eax , eax je hexvar lea r13 , [ rip + hexvar ] lea r15 , [ rip + hexvar ] mov r12 , r13 lea r14 , [ rsp + hexvar ] mov edi , ebx mov rsi , r14 call hexvar mov rdi , qword ptr [ rip + hexvar ] push r13 lea rdx , [ rip + hexvar ] push r12 mov r9 , r15 mov r8d , ebx mov rcx , r14 mov esi , num xor eax , eax call hexvar pop rax pop rdx add ebx , num cmp ebx , hexvar je hexvar xor esi , esi mov rdx , rbp mov edi , ebx call hexvar test eax , eax jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov esi , ebx mov rdi , qword ptr [ rsp + num ] jne hexvar call hexvar test eax , eax lea r13 , [ rip + hexvar ] lea r12 , [ rip + hexvar ] lea r15 , [ rip + hexvar ] jne hexvar lea r12 , [ rip + hexvar ] mov r15 , r12 jmp hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , num sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) bnez a0 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar jalr t9 addiu a1 , a1 , - hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu v1 , zero , - num sw v0 , hexvar ( sp ) addiu v0 , zero , - num move a3 , zero sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) lui v0 , hexvar move a2 , zero sw v1 , hexvar ( sp ) addiu v0 , v0 , - hexvar move a0 , s0 bal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a1 , hexvar move a0 , zero jalr t9 addiu a1 , a1 , - hexvar b hexvar lw gp , hexvar ( sp )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - num ] mov al , byte ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar push num push eax lea eax , [ ebx - hexvar ] push eax push - num push - num push num push num push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] and cl , num mov byte ptr [ ebp - num ] , cl mov edx , dword ptr [ ebp + hexvar ] test byte ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , edx je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , num ( fp ) lw v0 , - hexvar ( gp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , num ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ r2 ] ldr r3 , [ fp , - num ] mov r0 , r3 add sp , fp , num pop { fp } bx lr andeq ip , r4 , r4 , ror num
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr sb , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] ldr r3 , [ sb ] ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar add r5 , r4 , hexvar str r3 , [ sp , hexvar ] add r5 , r5 , num add r8 , r7 , num ldr r6 , [ pc , hexvar ] b hexvar ldr r0 , [ r6 ] bl hexvar mov r1 , r5 add r2 , sp , num mov r0 , num bl hexvar ldr sl , [ r4 ] ldr r1 , [ r4 , hexvar ] cmp r1 , num beq hexvar mov sl , hexvar sub r1 , r1 , num str r1 , [ r4 , hexvar ] mov r0 , sl bl hexvar mov r2 , num add r1 , sp , num mov r0 , num bl hexvar ldr r3 , [ r4 ] cmp r3 , num bne hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar mov r0 , r7 bl hexvar mov r0 , r8 bl hexvar b hexvar mov r0 , sl bl hexvar b hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sb ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] mov cl , num mov byte ptr [ rbp - hexvar ] , cl jmp rdx mov eax , dword ptr [ rip + hexvar ] test eax , eax setne cl mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rdx mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov edx , ecx mov ecx , edx and ecx , num mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov esi , hexvar xor edi , edi lea rdx , [ rbp - hexvar ] call hexvar mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rbp - num ] test edi , edi setne cl movzx edi , cl mov edx , edi mov rdx , qword ptr [ rdx * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rdx mov eax , dword ptr [ rbp - num ] add eax , - num mov dword ptr [ rip + hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx xor eax , eax mov edx , eax mov edi , num lea rsi , [ rbp - hexvar ] call hexvar mov edi , dword ptr [ rbp - num ] test edi , edi setne cl movzx edi , cl mov edx , edi mov rdx , qword ptr [ rdx * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rdx call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax call hexvar mov eax , dword ptr [ rbp - num ] test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov edi , dword ptr [ rbp - num ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or eax , edx test eax , eax jne hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rbp , rsp nop mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov rdx , rbp call hexvar mov ebx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar sub eax , num mov dword ptr [ rip + hexvar ] , eax xor edx , edx mov rsi , rbp mov edi , num call hexvar test ebx , ebx jne hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar call hexvar jmp hexvar nop dword ptr [ rax ] call hexvar cmp dword ptr [ rip + hexvar ] , num je hexvar call hexvar mov edi , ebx call hexvar jmp hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , hexvar beq hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] cmp r2 , r3 beq hexvar ldr r3 , [ fp , - hexvar ] sub r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] sub cl , hexvar sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] mov byte ptr [ ebp - num ] , cl jmp eax mov eax , dword ptr [ ebp + num ] inc eax mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] test cl , cl setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] sub eax , ecx setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] dec eax mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] sub cl , hexvar sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] mov byte ptr [ ebp - num ] , cl jmp eax mov eax , dword ptr [ ebp + num ] inc eax mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] test cl , cl setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] sub eax , ecx setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] dec eax mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] je hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp - num ] mov cl , byte ptr [ eax ] test cl , cl setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] mov ecx , dword ptr [ ebp - num ] rol ecx , num add eax , ecx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num mov edx , dword ptr [ ebp - hexvar ] shr edx , hexvar mov esi , ecx xor esi , hexvar mov edi , edx xor edi , hexvar mov ebx , hexvar xor ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , esi and eax , hexvar and ecx , ebx mov dword ptr [ ebp - hexvar ] , eax mov eax , edi and eax , hexvar and edx , ebx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] or eax , ecx mov ecx , dword ptr [ ebp - hexvar ] or ecx , edx xor eax , ecx or esi , edi xor esi , hexvar or ebx , hexvar and esi , ebx or eax , esi mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] xor edx , edx div dword ptr [ ebp + hexvar ]
movsx rcx , byte ptr [ rdi ] test cl , cl je hexvar xor eax , eax nop word ptr [ rax + rax ] rol rax , num add rdi , num add rax , rcx movsx rcx , byte ptr [ rdi ] test cl , cl jne hexvar xor edx , edx div rsi mov rax , rdx ret
ldrb r3 , [ r0 ] cmp r3 , num beq hexvar mov r2 , num push { r4 , lr } add r2 , r3 , r2 , ror num ldrb r3 , [ r0 , num ] ! cmp r3 , num bne hexvar mov r0 , r2 bl hexvar mov r0 , r1 pop { r4 , pc }
push r12 push rbp mov r12 , rdx push rbx mov rbp , rsi mov rbx , rdi call hexvar mov rcx , r12 mov rdx , rbp mov rsi , rbx pop rbx pop rbp pop r12 mov edi , hexvar jmp hexvar nop dword ptr [ rax ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 lui a0 , hexvar lw gp , hexvar ( sp ) move a3 , s2 lw ra , hexvar ( sp ) move a2 , s1 lw s2 , hexvar ( sp ) move a1 , s0 lw s1 , hexvar ( sp ) addiu a0 , a0 , - hexvar lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
push r12 push rbp mov r12 , rdx push rbx mov rbp , rsi mov rbx , rdi call hexvar mov rcx , r12 mov rdx , rbp mov rsi , rbx pop rbx pop rbp pop r12 mov edi , hexvar jmp hexvar nop dword ptr [ rax ]
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar mov dword ptr [ eax ] , num sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] test eax , eax je hexvar sub esp , num push dword ptr [ ebp + hexvar ] push num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + num ] push num call hexvar add esp , hexvar mov edi , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , hexvar push dword ptr [ ebp - hexvar ] push edi push esi push eax push num call hexvar add esp , hexvar sub esp , hexvar push num call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebx + hexvar ] push eax call hexvar mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov dword ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov eax , dword ptr [ rax ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov r13 , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov r8 , r13 mov rcx , r12 mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar mov edi , num call hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop r12 pop r13 pop rbp ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi call hexvar mov dword ptr [ rax ] , num mov rsi , rbp mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi call hexvar mov dword ptr [ rax ] , num mov rsi , rbp mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi movss dword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rsi movss xmm0 , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + num ] movss dword ptr [ rsi + rdi * num ] , xmm0 pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi movss dword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rsi movss xmm0 , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + num ] movss dword ptr [ rsi + rdi * num ] , xmm0 pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi movss dword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rsi movss xmm0 , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + num ] movss dword ptr [ rsi + rdi * num ] , xmm0 pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi movss dword ptr [ rbp - hexvar ] , xmm0 mov qword ptr [ rbp - hexvar ] , rsi movss xmm0 , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + num ] movss dword ptr [ rsi + rdi * num ] , xmm0 pop rbp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r1 , num mov r5 , r0 bl hexvar cmp r0 , num pople { r4 , r5 , r6 , pc } cmp r4 , num orrne r2 , r0 , hexvar biceq r2 , r0 , hexvar cmp r2 , r0 popeq { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jge hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] or eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , ecx mov al , byte ptr [ ebp - hexvar ] and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx cmp eax , dword ptr [ ebp - num ] jge hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] or eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jge hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] or eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
mov eax , dword ptr [ rdi + num ] add eax , num cmp eax , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax nop dword ptr [ rax + rax ] mov eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rdi + num ] and eax , num mov edi , eax sub eax , num mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , eax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar movabs rdi , hexvar mov esi , hexvar movabs rdx , hexvar call hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
movzx eax , byte ptr [ rdi + num ] and eax , num cmp al , num ja hexvar lea rdx , [ rip + hexvar ] movzx eax , al movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax nop mov eax , num ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] add eax , num cmp eax , hexvar ja hexvar mov edx , dword ptr [ ebx + eax * num - hexvar ] add edx , ebx jmp edx lea esi , [ esi ]
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r15d , edx mov r14 , rsi mov rbx , rdi test rdi , rdi je hexvar mov rdi , rbx call hexvar mov rdi , rbx test eax , eax jle hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar mov rdi , rsp mov esi , hexvar call hexvar mov rdi , rax test rax , rax je hexvar mov rsi , - num call hexvar test eax , eax jne hexvar call hexvar test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num mov ebp , num mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop blez v0 , hexvar lw gp , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , num addiu s1 , zero , num sw v1 , - hexvar ( v0 ) lw a0 , hexvar ( sp ) move v0 , s1 lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , zero , - num bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r15d , edx mov r14 , rsi mov rbx , rdi test rdi , rdi je hexvar mov rdi , rbx call hexvar mov rdi , rbx test eax , eax jle hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar mov rdi , rsp mov esi , hexvar call hexvar mov rdi , rax test rax , rax je hexvar mov rsi , - num call hexvar test eax , eax jne hexvar call hexvar test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num mov ebp , num mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r15d , edx mov r14 , rsi mov rbx , rdi test rdi , rdi je hexvar mov rdi , rbx call hexvar mov rdi , rbx test eax , eax jle hexvar mov byte ptr [ rip + hexvar ] , num jmp hexvar mov rdi , rsp mov esi , hexvar call hexvar mov rdi , rax test rax , rax je hexvar mov rsi , - num call hexvar test eax , eax jne hexvar call hexvar test eax , eax je hexvar mov byte ptr [ rip + hexvar ] , num mov ebp , num mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) andi v0 , a1 , hexvar beqz v0 , hexvar move s1 , a3 andi v0 , a1 , num beqz v0 , hexvar move s0 , a1 addiu v1 , zero , num beq v0 , v1 , hexvar sltiu v1 , v0 , num bnez v1 , hexvar addiu v1 , zero , num beq v0 , v1 , hexvar addiu v1 , zero , num bne v0 , v1 , hexvar lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) move a1 , a3 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) move s0 , v1 move a1 , s1 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) sw v1 , hexvar ( sp ) move a3 , s0 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a1 , a3 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) andi s0 , s0 , num beqz s0 , hexvar move a3 , v1 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp )
push { r4 , r5 , r6 , r7 , r8 , sb , lr } ands ip , r1 , hexvar sub sp , sp , hexvar mov r5 , r0 bne hexvar cmp r3 , r0 bls hexvar ldrb r6 , [ r0 ] add r4 , r0 , num tst r6 , hexvar subne r5 , r3 , r0 and r6 , r6 , hexvar and r6 , r6 , hexvar mov r7 , num movne lr , ip rsbne r5 , r5 , r5 , lsl num bne hexvar b hexvar ldrb r1 , [ r4 ] , num and r8 , r1 , hexvar and r8 , r8 , hexvar lsl r2 , r8 , r2 orr r2 , r2 , r8 , lsr r0 orr r2 , r2 , r7 orr r8 , r6 , r8 , lsl lr tst r1 , hexvar mov r6 , r8 mov r7 , r2 beq hexvar add lr , lr , num cmp r5 , lr sub r2 , lr , hexvar rsb r0 , lr , hexvar bne hexvar mov r5 , r6 mov ip , num str ip , [ sp ] mov r3 , r5 ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
push rbp push rbx mov rbp , rdi mov edi , esi sub rsp , num and edi , hexvar jne hexvar movzx eax , byte ptr [ rbp ] xor ecx , ecx lea rdx , [ rbp + num ] mov r9 , rax and r9d , hexvar test al , al jns hexvar nop dword ptr [ rax ] add rdx , num movzx esi , byte ptr [ rdx - num ] add ecx , num mov rax , rsi and eax , hexvar shl rax , cl or r9 , rax test sil , sil js hexvar movzx eax , byte ptr [ rdx ] lea rbx , [ rdx + num ] mov r8 , rax and r8d , hexvar test al , al jns hexvar nop add rbx , num movzx edx , byte ptr [ rbx - num ] add edi , num mov ecx , edi mov rax , rdx and eax , hexvar shl rax , cl or r8 , rax test dl , dl js hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rcx , r9 mov edi , num xor eax , eax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
push r12 push rbp mov ebp , esi mov edx , ebp push rbx mov r12 , rdi and edx , hexvar mov rsi , rcx jne hexvar cmp rcx , rdi jbe hexvar movzx eax , byte ptr [ rdi ] lea rbx , [ rdi + num ] mov r9 , rax and r9d , hexvar test al , al jns hexvar xor ecx , ecx jmp hexvar nop word ptr cs : [ rax + rax ] add rbx , num movzx edi , byte ptr [ rbx - num ] mov rax , rdi and eax , hexvar shl rax , cl or r9 , rax test dil , dil jns hexvar add ecx , num cmp rsi , rbx jne hexvar xor r8d , r8d lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rcx , r9 mov edi , num xor eax , eax call hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp sub esp , num test byte ptr [ hexvar ] , num je hexvar call hexvar mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ hexvar ] , num add esp , num pop ebp ret
push { fp , lr } add fp , sp , num ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] mov r0 , r0 pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lbu v0 , hexvar ( v0 ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar bal hexvar nop lw gp , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp )
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ hexvar ] mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar call hexvar mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ hexvar ] , num jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov edi , eax call hexvar test rax , rax sete al leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , esi xor esi , esi mov dword ptr [ esp + num ] , num test edi , edi je hexvar lea esi , [ esp + num ] push esi push ecx push edx push eax call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi call hexvar mov esi , eax add esp , num push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp ] cmp r3 , num beq hexvar add r3 , sp , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] mov r1 , r3 ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num cmp dword ptr [ esp ] , num je hexvar lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + num ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push rbp push r14 push rbx sub rsp , hexvar mov r14 , rcx mov qword ptr [ rsp + num ] , num test rcx , rcx lea rbx , [ rsp + num ] cmove rbx , rcx mov rcx , rbx call hexvar mov ebp , eax test rbx , rbx je hexvar test ebp , ebp je hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r14 call hexvar mov ebp , eax mov rdi , qword ptr [ rsp + num ] mov esi , hexvar call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop rbp ret
push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdi mov r12 , rsi mov rbx , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rsp call hexvar mov rdx , rsp mov rsi , r12 mov rdi , rbp call hexvar mov rsi , rbx mov rdi , rsp call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s2 , a2 lw s1 , - hexvar ( gp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s0 move a1 , s4 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s2 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s2 , a2 lw s1 , - hexvar ( gp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s0 move a1 , s4 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s2 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp push r14 push rbx mov r14d , ecx mov rbx , rdx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar mov rdi , rbp mov rsi , rax mov rdx , rbx mov ecx , r14d pop rbx pop r14 pop rbp jmp hexvar mov eax , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov r14d , ecx mov rbx , rdx mov rbp , rdi mov edi , esi call hexvar test rax , rax je hexvar mov rdi , rbp mov rsi , rax mov rdx , rbx mov ecx , r14d pop rbx pop r14 pop rbp jmp hexvar mov eax , hexvar pop rbx pop r14 pop rbp ret
push ebx sub esp , hexvar call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw s1 , ( a1 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num lea eax , [ eax - hexvar ] push eax push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 move a1 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , a2 lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , ( s0 )
push rbp push rbx push rax mov rbx , rsi mov ebp , edi mov esi , edx call hexvar mov qword ptr [ rbx ] , rax xor ecx , ecx test rax , rax je hexvar cmp ebp , hexvar je hexvar cmp ebp , hexvar je hexvar cmp ebp , hexvar jne hexvar mov esi , hexvar mov edx , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov edx , hexvar xor esi , esi call hexvar mov rdi , qword ptr [ rbx ] mov edx , hexvar xor esi , esi call hexvar mov rdi , qword ptr [ rbx ] mov edx , hexvar xor esi , esi call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov edx , hexvar xor esi , esi call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar jmp hexvar mov esi , hexvar mov edx , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov edx , hexvar xor esi , esi call hexvar mov rdi , qword ptr [ rbx ] mov edx , hexvar xor esi , esi call hexvar mov rdi , qword ptr [ rbx ] mov edx , hexvar xor esi , esi call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov edx , hexvar xor esi , esi call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar jmp hexvar mov esi , hexvar mov edx , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov edx , hexvar xor esi , esi call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov ecx , num mov eax , ecx add rsp , num pop rbx pop rbp ret
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bxne lr mov r2 , r1 mov r0 , num ldr r1 , [ pc , num ] b hexvar andeq r1 , sp , r8 , asr r4 andeq sl , sb , r8 , ror num
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bxne lr mov r2 , r1 mov r0 , num ldr r1 , [ pc , num ] b hexvar muleq pc , r8 , r0
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bxne lr mov r2 , r1 mov r0 , num ldr r1 , [ pc , num ] b hexvar andeq r2 , sp , r0 , lsr num strheq fp , [ sb ] , -ip
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop lw a1 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dl , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] cmp al , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] cmp eax , num setne cl and cl , num mov byte ptr [ ebp - num ] , cl mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov cl , byte ptr [ ebp - num ] and cl , num movzx eax , cl add esp , hexvar pop ebp ret
push { r4 , lr } mov r4 , r0 bl hexvar ldrb r3 , [ r0 ] cmp r3 , num movne r4 , r0 mov r0 , r4 bl hexvar mov r2 , num ldrb r3 , [ r4 , r0 ] strb r2 , [ r4 , r0 ] subs r0 , r3 , r2 movne r0 , num pop { r4 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , a0 lbu s0 , ( v0 ) lw gp , hexvar ( sp ) movn s1 , v0 , s0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 addu s0 , s1 , v0 lb v0 , ( s0 ) sb zero , ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) sltu v0 , zero , v0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] add r3 , r3 , r2 str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldrb r3 , [ r3 ] cmp r3 , num movne r3 , num moveq r3 , num strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] mov r2 , num strb r2 , [ r3 ] ldrb r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push hexvar push dword ptr [ edi ] call hexvar add esp , num mov esi , eax push hexvar push dword ptr [ ebp ] call hexvar add esp , num lea edx , [ ebx - hexvar ] test eax , eax cmove eax , edx test esi , esi cmove esi , edx push eax push esi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push dword ptr [ ebp ] push dword ptr [ edi ] call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 mov r12 , rdi push rbp push rbx mov rdi , qword ptr [ rdi ] mov rbp , rsi mov esi , hexvar call hexvar mov rdi , qword ptr [ rbp ] mov esi , hexvar mov rbx , rax call hexvar mov edi , hexvar test rax , rax cmove rax , rdi test rbx , rbx cmovne rdi , rbx mov rsi , rax call hexvar test eax , eax je hexvar pop rbx pop rbp pop r12 ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r9 mov r15 , r8 mov r12 , rcx mov rbx , rdx mov r13 , rsi mov rbp , rdi mov eax , dword ptr [ rdx + num ] mov dword ptr [ rsp + num ] , eax mov ecx , hexvar jmp hexvar mov rdi , r13 mov rsi , rbx mov rdx , r12 mov rcx , r15 mov r8 , r14 mov r9 , qword ptr [ rsp + hexvar ] call hexvar mov ecx , hexvar nop dword ptr [ rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , dword ptr [ rsp + num ] cmp ecx , num mov ecx , hexvar mov edx , hexvar cmove ecx , edx jmp hexvar nop word ptr cs : [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar test byte ptr [ rbp + hexvar ] , num mov ecx , hexvar mov edx , hexvar cmove ecx , edx jmp hexvar mov rax , qword ptr [ rbx ] mov rsi , qword ptr [ rax ] mov rdi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 mov r9 , qword ptr [ rsp + hexvar ] call hexvar mov ecx , hexvar jmp hexvar add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , num ( v0 ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] cmp edx , num jne hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] and edx , num test edx , edx je hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , edx sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ eax + num ] , num jne hexvar mov edx , dword ptr [ esp + hexvar ] test byte ptr [ edx + hexvar ] , num jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , eax cmp eax , num ja hexvar mov eax , ebx add eax , dword ptr [ ebx + esi * num - hexvar ] jmp eax
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , num cmp eax , num ja hexvar mov eax , dword ptr [ ebx + eax * num - hexvar ] add eax , ebx jmp eax lea esi , [ esi ] lea edi , [ edi ]
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num ja hexvar mov eax , dword ptr [ ebp + num ] shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , eax cmp eax , num ja hexvar mov eax , ebx add eax , dword ptr [ ebx + esi * num - hexvar ] jmp eax
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a3 , hexvar lw v1 , hexvar ( sp ) addiu s5 , a0 , hexvar move s7 , zero addiu s3 , sp , hexvar addiu s6 , sp , hexvar move s0 , a3 move s4 , a0 move s1 , a1 move s2 , a2 srl fp , s7 , num lw a3 , num ( s4 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a3 , hexvar addiu v0 , zero , num move s2 , a0 move s3 , a3 move s0 , zero addiu fp , sp , hexvar addiu s7 , sp , hexvar addiu s6 , a0 , hexvar addiu s5 , zero , hexvar addiu s4 , zero , - hexvar srl s1 , s0 , num lw v0 , hexvar ( sp ) addu v0 , v0 , s1 lbu v0 , ( v0 ) nor v1 , zero , s0 andi v1 , v1 , num srav v0 , v0 , v1 sll v0 , v0 , num sb v0 , hexvar ( sp ) lw v0 , hexvar ( s2 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar lea eax , [ edi + hexvar ] xor esi , esi mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov esi , esi lea edi , [ edi ] mov eax , dword ptr [ esp + hexvar ] mov ebp , esi mov ecx , esi shr ebp , num not ecx sub esp , hexvar and ecx , num movzx eax , byte ptr [ eax + ebp ] sar eax , cl shl eax , num mov byte ptr [ esp + hexvar ] , al mov eax , dword ptr [ edi + hexvar ] push dword ptr [ edi + num ] push dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] push edx lea edx , [ eax + hexvar ] push edx push eax push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add ebp , dword ptr [ esp + hexvar ] mov ecx , esi movzx edx , byte ptr [ esp + hexvar ] and ecx , num mov eax , hexvar add esp , hexvar sar eax , cl add esi , num not eax and al , byte ptr [ ebp ] and edx , hexvar movzx edx , dl sar edx , cl or eax , edx cmp dword ptr [ esp + hexvar ] , esi mov byte ptr [ ebp ] , al jne hexvar mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] mov eax , num jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) srl v0 , v0 , num lw v1 , hexvar ( sp ) addu v0 , v1 , v0 lbu v0 , ( v0 ) move v1 , v0 lw v0 , hexvar ( sp ) nor v0 , zero , v0 andi v0 , v0 , num srav v0 , v1 , v0 sll v0 , v0 , num andi v0 , v0 , hexvar sb v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a1 beqz v0 , hexvar move a0 , v0 move a1 , s1 jal hexvar move s0 , v0 lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop move a0 , s0 lw gp , hexvar ( sp ) move s1 , v0 lw s2 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v0 , ( v1 ) move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a1 , s1 move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 lw s2 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
test rdi , rdi je hexvar mov eax , dword ptr [ rdi ] add eax , - num cmp eax , num ja hexvar mov rax , qword ptr [ rdi + hexvar ] ret
test rdi , rdi je hexvar mov eax , dword ptr [ rdi ] add eax , - num cmp eax , num ja hexvar mov rax , qword ptr [ rdi + hexvar ] ret
test rdi , rdi je hexvar mov eax , dword ptr [ rdi ] add eax , - num cmp eax , num ja hexvar mov rax , qword ptr [ rdi + hexvar ] ret
mov edx , dword ptr [ esp + num ] test edx , edx je hexvar mov eax , dword ptr [ edx ] sub eax , num cmp eax , num ja hexvar mov eax , dword ptr [ edx + hexvar ] ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov rdx , qword ptr [ rbp - num ] add rdx , hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx mov rcx , qword ptr [ rdx ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rcx jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov dword ptr [ esp ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov dword ptr [ esp ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov dword ptr [ esp ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 addiu gp , gp , - hexvar sw ra , hexvar ( sp ) move a0 , a1 lw t9 , hexvar ( s0 ) lw a1 , num ( s0 ) sw gp , hexvar ( sp ) jalr t9 nop lw v1 , num ( s0 ) sltu v1 , v0 , v1 beqz v1 , hexvar lw gp , hexvar ( sp ) lw v1 , ( s0 ) sll v0 , v0 , num lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra addu v0 , v1 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ eax ] mov ebx , dword ptr [ ebx + hexvar ] mov ecx , dword ptr [ ecx ] mov esi , dword ptr [ eax ] mov esi , dword ptr [ esi + num ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx call ebx add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ecx ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] cmp eax , dword ptr [ esi + num ] setb al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] shl esi , num add ecx , esi mov eax , ecx lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] cmp rax , qword ptr [ rsi + hexvar ] jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] shl rcx , num add rax , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi movsxd rdi , dword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and rax , num mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov cl , al mov rdx , qword ptr [ rbp - hexvar ] cmp rdx , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num setg cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov ecx , dword ptr [ rbp - hexvar ] add ecx , - num mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] shl rax , cl mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi movsxd rdi , dword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi xor eax , eax mov cl , al mov rdx , qword ptr [ rbp - num ] and rdx , num cmp rdx , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar cmp dword ptr [ rbp - hexvar ] , num setg al mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] shr rax , num mov qword ptr [ rbp - num ] , rax mov ecx , dword ptr [ rbp - hexvar ] add ecx , - num mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] shl rax , cl pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi movsxd rdi , dword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rip ] jmp rdi mov al , byte ptr [ rbp - num ] test al , num sete al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num ] xor ecx , ecx mov al , cl mov byte ptr [ rbp - hexvar ] , al jmp rdx mov eax , dword ptr [ rbp - hexvar ] test eax , eax setg cl mov rdx , qword ptr [ rip ] mov byte ptr [ rbp - hexvar ] , cl jmp rdx mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov edx , ecx mov ecx , edx and ecx , num mov edx , ecx mov rdx , qword ptr [ rdx * num ] jmp rdx mov rax , qword ptr [ rbp - num ] shr rax , num mov qword ptr [ rbp - num ] , rax mov ecx , dword ptr [ rbp - hexvar ] add ecx , - num mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] shl rax , cl pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi movsxd rdi , dword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rip ] jmp rdi mov al , byte ptr [ rbp - num ] test al , num sete al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num ] xor ecx , ecx mov al , cl mov byte ptr [ rbp - hexvar ] , al jmp rdx mov eax , dword ptr [ rbp - hexvar ] test eax , eax setg cl mov rdx , qword ptr [ rip ] mov byte ptr [ rbp - hexvar ] , cl jmp rdx mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov edx , ecx mov ecx , edx and ecx , num mov edx , ecx mov rdx , qword ptr [ rdx * num ] jmp rdx mov rax , qword ptr [ rbp - num ] shr rax , num mov qword ptr [ rbp - num ] , rax mov ecx , dword ptr [ rbp - hexvar ] add ecx , - num mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] shl rax , cl pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r1 , [ r3 , hexvar ] mov r3 , num str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw a1 , hexvar ( a1 ) addiu v0 , zero , num sw v0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a0 lw s1 , hexvar ( a1 )
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rcx , rcx je hexvar mov rbx , rcx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rax , rcx shr rax , hexvar movabs r13 , hexvar cmove r13 , rcx lea rax , [ rdi + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rbp , [ rdi + hexvar ] nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov rcx , qword ptr [ r12 + hexvar ] mov eax , dword ptr [ r12 + hexvar ] mov dword ptr [ rsp ] , eax mov rdi , r14 mov rsi , r15 mov rdx , rbx mov r8 , qword ptr [ rsp + hexvar ] mov r9 , rbp call hexvar sub rbx , r13 add r14 , r13 add r15 , r13 cmp rbx , r13 cmovb r13 , rbx test rbx , rbx jne hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rcx , rcx je hexvar mov rbx , rcx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rax , rcx shr rax , hexvar movabs r13 , hexvar cmove r13 , rcx lea rax , [ rdi + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rbp , [ rdi + hexvar ] nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov rcx , qword ptr [ r12 + hexvar ] mov eax , dword ptr [ r12 + hexvar ] mov dword ptr [ rsp ] , eax mov rdi , r14 mov rsi , r15 mov rdx , rbx mov r8 , qword ptr [ rsp + hexvar ] mov r9 , rbp call hexvar sub rbx , r13 add r14 , r13 add r15 , r13 cmp rbx , r13 cmovb r13 , rbx test rbx , rbx jne hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rcx , rcx je hexvar mov rbx , rcx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rax , rcx shr rax , hexvar movabs r13 , hexvar cmove r13 , rcx lea rax , [ rdi + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rbp , [ rdi + hexvar ] nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov rcx , qword ptr [ r12 + hexvar ] mov eax , dword ptr [ r12 + hexvar ] mov dword ptr [ rsp ] , eax mov rdi , r14 mov rsi , r15 mov rdx , rbx mov r8 , qword ptr [ rsp + hexvar ] mov r9 , rbp call hexvar sub rbx , r13 add r14 , r13 add r15 , r13 cmp rbx , r13 cmovb r13 , rbx test rbx , rbx jne hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rcx , rcx je hexvar mov rbx , rcx mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rax , rcx shr rax , hexvar movabs r13 , hexvar cmove r13 , rcx lea rax , [ rdi + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea rbp , [ rdi + hexvar ] nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov rcx , qword ptr [ r12 + hexvar ] mov eax , dword ptr [ r12 + hexvar ] mov dword ptr [ rsp ] , eax mov rdi , r14 mov rsi , r15 mov rdx , rbx mov r8 , qword ptr [ rsp + hexvar ] mov r9 , rbp call hexvar sub rbx , r13 add r14 , r13 add r15 , r13 cmp rbx , r13 cmovb r13 , rbx test rbx , rbx jne hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push { r4 , lr } mov r4 , r0 bl hexvar cmp r0 , num popls { r4 , pc } sub r3 , r0 , num ldrb r2 , [ r4 , r3 ] add r4 , r4 , r3 cmp r2 , hexvar moveq r0 , r3 popne { r4 , pc }
mov rdx , rdi mov eax , num mov rcx , - num repne scasb al , byte ptr [ rdi ] mov rax , rcx not rax sub rax , num cmp rax , num jbe hexvar lea rcx , [ rax - num ] cmp byte ptr [ rdx + rax - num ] , hexvar jne hexvar jmp hexvar mov rcx , rax cmp rcx , num je hexvar lea rax , [ rcx - num ] cmp byte ptr [ rdx + rcx - num ] , hexvar je hexvar mov rax , rcx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rbp - num ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] sub rax , num seta cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] xor edx , edx mov cl , dl mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , cl jmp rsi mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov dl , byte ptr [ rax + rcx - num ] sub dl , hexvar sete sil mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , dl mov byte ptr [ rbp - hexvar ] , sil jmp rax mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov edx , ecx mov ecx , edx and ecx , num mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax xor eax , eax mov cl , al mov eax , num cmp eax , dword ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , cl jae hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] sub ecx , num movsx eax , byte ptr [ eax + ecx ] cmp eax , hexvar sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
cmp r2 , num blt hexvar push { r4 , r5 , r6 , r7 , lr } ldr r5 , [ pc , hexvar ] umull r6 , r7 , r2 , r5 lsr ip , r7 , hexvar rsb r3 , ip , ip , lsl num add ip , ip , r3 , lsl num sub ip , r2 , ip lsl r3 , r0 , hexvar lsr r3 , r3 , hexvar mul lr , r3 , ip lsl r2 , r1 , hexvar lsr r2 , r2 , hexvar add r4 , r2 , r3 add r3 , r4 , hexvar add r3 , r3 , hexvar lsr r1 , r1 , hexvar add r1 , r1 , r0 , lsr num sub r1 , r1 , ip umull r6 , r7 , lr , r5 lsr r2 , r7 , hexvar rsb r0 , r2 , r2 , lsl num add r2 , r2 , r0 , lsl num sub r2 , lr , r2 add r1 , r1 , r2 add r0 , r1 , hexvar add r0 , r0 , hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bls hexvar sub r3 , r4 , num cmp r3 , r2 subhi r3 , r4 , hexvar subhi r3 , r3 , hexvar ldr r2 , [ pc , hexvar ] cmp r0 , r2 subhi r0 , r1 , hexvar subhi r0 , r0 , hexvar ldr r2 , [ pc , hexvar ] cmp r0 , r2 subhi r0 , r0 , hexvar subhi r0 , r0 , hexvar orr r0 , r3 , r0 , lsl num pop { r4 , r5 , r6 , r7 , pc }
mov rcx , rdx mov eax , hexvar test rdx , rdx js hexvar movzx r8d , di movabs rdx , hexvar mov rax , rcx imul rdx add rdx , rcx sar rdx , hexvar mov rax , rcx sar rax , hexvar sub rdx , rax imul rdx , rdx , hexvar mov eax , ecx sub eax , edx mov rcx , rax imul rcx , r8 movzx r9d , si add r9 , r8 lea r8 , [ r9 + hexvar ] shr rdi , hexvar movzx edi , di shr rsi , hexvar movzx edx , si add rdx , rdi mov rdi , rdx sub rdi , rax movabs rdx , hexvar mov rax , rcx mul rdx mov rax , rcx sub rax , rdx shr rax , num add rdx , rax shr rdx , hexvar imul rdx , rdx , hexvar sub rcx , rdx lea rdx , [ rdi + rcx ] lea rcx , [ rdx + hexvar ] cmp r8 , hexvar jbe hexvar lea r8 , [ r9 - num ] cmp r8 , hexvar jbe hexvar lea r8 , [ r9 - hexvar ] sub rdx , hexvar cmp rcx , hexvar cmova rcx , rdx lea rax , [ rcx - hexvar ] cmp rcx , hexvar cmova rcx , rax mov rax , rcx shl rax , hexvar or rax , r8 ret
mov rcx , rdx mov eax , hexvar test rdx , rdx js hexvar movzx r8d , di movabs rdx , hexvar mov rax , rcx imul rdx add rdx , rcx sar rdx , hexvar mov rax , rcx sar rax , hexvar sub rdx , rax imul rdx , rdx , hexvar mov eax , ecx sub eax , edx mov rcx , rax imul rcx , r8 movzx r9d , si add r9 , r8 lea r8 , [ r9 + hexvar ] shr rdi , hexvar movzx edi , di shr rsi , hexvar movzx edx , si add rdx , rdi mov rdi , rdx sub rdi , rax movabs rdx , hexvar mov rax , rcx mul rdx mov rax , rcx sub rax , rdx shr rax , num add rdx , rax shr rdx , hexvar imul rdx , rdx , hexvar sub rcx , rdx lea rdx , [ rdi + rcx ] lea rcx , [ rdx + hexvar ] cmp r8 , hexvar jbe hexvar lea r8 , [ r9 - num ] cmp r8 , hexvar jbe hexvar lea r8 , [ r9 - hexvar ] sub rdx , hexvar cmp rcx , hexvar cmova rcx , rdx lea rax , [ rcx - hexvar ] cmp rcx , hexvar cmova rcx , rax mov rax , rcx shl rax , hexvar or rax , r8 ret
bltz a2 , hexvar andi a3 , a0 , hexvar lui v0 , hexvar ori v0 , v0 , hexvar multu a2 , v0 srl t0 , a1 , hexvar srl a0 , a0 , hexvar andi a1 , a1 , hexvar mfhi v1 addu a0 , a0 , t0 ori t1 , zero , hexvar addu a1 , a1 , a3 srl v1 , v1 , hexvar sll t0 , v1 , hexvar subu t0 , t0 , v1 sll t0 , t0 , num addu v1 , t0 , v1 subu v1 , a2 , v1 mul a2 , v1 , a3 subu a0 , a0 , v1 multu a2 , v0 mfhi v0 srl v0 , v0 , hexvar sll v1 , v0 , hexvar subu v1 , v1 , v0 sll v1 , v1 , num addu v0 , v1 , v0 subu a2 , a2 , v0 addu a0 , a0 , a2 bnez a1 , hexvar addu v1 , a0 , t1 ori v0 , zero , hexvar lui a1 , num ori a1 , a1 , hexvar sltu a1 , v1 , a1 bnez a1 , hexvar nop lui v1 , hexvar addiu v1 , v1 , hexvar addu v1 , a0 , v1 ori a0 , zero , hexvar sltu a1 , v1 , a0 bnez a1 , hexvar nop subu v1 , v1 , a0 sll v1 , v1 , hexvar jr ra or v0 , v1 , v0 addiu v0 , a1 , - num sltu t1 , v0 , t1 bnez t1 , hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar addu v0 , a1 , v0 jr ra addiu v0 , zero , - num
push rbp mov rbp , rsp cmp qword ptr [ hexvar ] , num jne hexvar call hexvar mov qword ptr [ hexvar ] , rax mov eax , num pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ num ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , num sete cl mov byte ptr [ rbp - num ] , cl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ num ] , rax jmp hexvar mov eax , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar cmp qword ptr [ num ] , num sete al mov byte ptr [ rbp - num ] , al mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar call hexvar mov qword ptr [ num ] , rax jmp hexvar mov eax , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp cmp qword ptr [ hexvar ] , num jne hexvar call hexvar mov qword ptr [ hexvar ] , rax mov eax , num pop rbp ret
sub rsp , hexvar push r9 mov r9 , r8 mov r8 , rcx mov rcx , rdx mov rdx , rsi mov esi , hexvar call hexvar add rsp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push hexvar push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] cmp ebp , edx jle hexvar mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , ecx call hexvar mov edx , dword ptr [ esp + num ] mov ebp , eax mov ecx , dword ptr [ esp + num ] cmp edx , num jl hexvar jle hexvar mov dword ptr [ ebp ] , hexvar sub esp , hexvar push esi call hexvar mov edx , dword ptr [ ebp ] mov ecx , num mov dword ptr [ esp ] , eax lea eax , [ ebx - hexvar ] cmp edx , hexvar cmove edx , ecx mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx mov ecx , num cmovne ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx push edi push eax push edx push dword ptr [ esp + hexvar ] call hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] mov eax , ecx jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] sub r2 , fp , hexvar mov r1 , r2 mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu v0 , zero , hexvar beq a0 , v0 , hexvar addiu gp , gp , hexvar addiu v0 , zero , hexvar beq a0 , v0 , hexvar addiu v0 , zero , hexvar beq a0 , v0 , hexvar addiu v0 , zero , hexvar bne a0 , v0 , hexvar lw t9 , - hexvar ( gp ) b hexvar nop jr ra move v0 , zero lw t9 , - hexvar ( gp ) b hexvar nop lw t9 , - hexvar ( gp ) b hexvar nop lw t9 , - hexvar ( gp ) b hexvar nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , hexvar bne hexvar bl hexvar mov r3 , r0 b hexvar ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar bl hexvar mov r3 , r0 b hexvar ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar bl hexvar mov r3 , r0 b hexvar ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar bl hexvar mov r3 , r0 b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] cmp edx , num je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar mov eax , num cmp edx , hexvar jne hexvar call hexvar add esp , num pop ebx ret
add edi , hexvar cmp edi , num ja hexvar jmp qword ptr [ rdi * num + hexvar ] jmp hexvar xor eax , eax ret
push rbp push r15 push r14 push rbx push rax mov r14 , rdi test rdi , rdi mov eax , hexvar mov r15d , hexvar cmove r15d , eax mov ecx , hexvar jmp hexvar mov ecx , hexvar xor ebx , ebx nop word ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar xor ebp , ebp jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , r15d jmp hexvar nop dword ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov qword ptr [ rsp ] , rbp mov rax , qword ptr [ rsp ] mov ecx , hexvar cmp rax , num jb hexvar mov ecx , hexvar jmp hexvar mov rax , qword ptr [ rsp ] lea rax , [ rax + rax * num ] lea rbx , [ rax * num + hexvar ] mov ecx , hexvar jmp hexvar mov ecx , hexvar mov ebx , hexvar jmp hexvar mov rax , qword ptr [ rsp ] lea rax , [ rax + rax * num ] mov rdi , qword ptr [ rax * num + hexvar ] mov rsi , r14 call hexvar mov ecx , hexvar test eax , eax je hexvar mov ecx , hexvar jmp hexvar mov rbp , qword ptr [ rsp ] add rbp , num mov ecx , hexvar jmp hexvar mov rax , rbx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] lea eax , [ ebx + hexvar ] test ebp , ebp je hexvar mov edi , eax mov esi , num sub esp , num push ebp push dword ptr [ edi ] call hexvar add esp , hexvar test eax , eax je hexvar add esi , num add edi , hexvar cmp esi , num jne hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbx test rdi , rdi je hexvar mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax je hexvar xor eax , eax pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] b hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r1 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 lsl r3 , r3 , num add r3 , r1 , r3 ldr r3 , [ r3 ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r2 , [ sp , hexvar ] mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 lsl r3 , r3 , num mov r2 , r3 ldr r3 , [ pc , hexvar ] add r3 , r2 , r3 b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bls hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
move v0 , a0 addiu a0 , zero , hexvar lb v1 , ( v0 ) bne v1 , a0 , hexvar nop addiu v0 , v0 , num lb v1 , ( v0 ) beq v1 , a0 , hexvar nop beqz v1 , hexvar move a1 , zero addiu a2 , zero , hexvar b hexvar move a0 , v0 beqz a1 , hexvar nop move a1 , zero move v0 , a0 addiu a0 , a0 , num lb v1 , ( a0 ) beqz v1 , hexvar nop bne v1 , a2 , hexvar nop addiu a0 , a0 , num lb v1 , ( a0 ) bnez v1 , hexvar addiu a1 , zero , num jr ra nop
movzx edx , byte ptr [ rdi ] mov rax , rdi cmp dl , hexvar jne hexvar nop dword ptr [ rax + rax ] add rax , num movzx edx , byte ptr [ rax ] cmp dl , hexvar je hexvar test dl , dl je hexvar mov rcx , rax xor esi , esi jmp hexvar nop word ptr [ rax + rax ] test sil , sil je hexvar mov rax , rcx xor esi , esi add rcx , num movzx edx , byte ptr [ rcx ] test dl , dl je hexvar cmp dl , hexvar jne hexvar add rcx , num movzx edx , byte ptr [ rcx ] mov esi , num test dl , dl jne hexvar ret nop dword ptr [ rax ]
move v0 , a0 addiu a0 , zero , hexvar lb v1 , ( v0 ) bne v1 , a0 , hexvar nop addiu v0 , v0 , num lb v1 , ( v0 ) beq v1 , a0 , hexvar nop beqz v1 , hexvar move a1 , zero addiu a2 , zero , hexvar b hexvar move a0 , v0 beqz a1 , hexvar nop move a1 , zero move v0 , a0 addiu a0 , a0 , num lb v1 , ( a0 ) beqz v1 , hexvar nop bne v1 , a2 , hexvar nop addiu a0 , a0 , num lb v1 , ( a0 ) bnez v1 , hexvar addiu a1 , zero , num jr ra nop
ldrb r3 , [ r0 ] cmp r3 , hexvar bne hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , hexvar beq hexvar cmp r3 , num bxeq lr mov r2 , r0 mov r1 , num cmp r3 , hexvar moveq r1 , num beq hexvar cmp r1 , num movne r0 , r2 movne r1 , num ldrb r3 , [ r2 , num ] ! cmp r3 , num bne hexvar bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov cl , al cmp dword ptr [ ebp - num ] , num mov byte ptr [ ebp - hexvar ] , cl jge hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] shl eax , num mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] movsx ecx , byte ptr [ ecx + edx ] add eax , ecx sub eax , hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov dl , al movsx eax , dl add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - hexvar ] , num mov ebx , num mov esi , ebx jmp hexvar lea ecx , [ ebx * num ] mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx movzx eax , byte ptr [ eax ] movsx eax , al add eax , ecx lea ebx , [ eax - hexvar ] add esi , num add dword ptr [ ebp - hexvar ] , num cmp esi , num jg hexvar mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx movzx eax , byte ptr [ eax ] movsx eax , al push eax call hexvar add esp , num test al , al jne hexvar sub dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov eax , ebx lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , num mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp - hexvar ] sub eax , num setl cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] xor ebx , ebx mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + ecx ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp ecx mov al , byte ptr [ ebp - hexvar ] movzx ecx , al and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] movsx ecx , byte ptr [ ecx + edx ] lea eax , [ ecx + eax * num - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov dl , al movsx eax , dl add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov cl , al cmp dword ptr [ ebp - num ] , num mov byte ptr [ ebp - hexvar ] , cl jge hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] shl eax , num mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] movsx ecx , byte ptr [ ecx + edx ] add eax , ecx sub eax , hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov dl , al movsx eax , dl add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] add rax , hexvar add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
mov eax , hexvar add edi , - hexvar cmp edi , hexvar ja hexvar xor ecx , ecx jmp qword ptr [ rdi * num ] mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar mov eax , dword ptr [ rcx * num ] ret
mov eax , hexvar add edi , - hexvar cmp edi , hexvar ja hexvar xor ecx , ecx jmp qword ptr [ rdi * num ] mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar mov eax , dword ptr [ rcx * num ] ret
mov eax , hexvar add edi , - hexvar cmp edi , hexvar ja hexvar xor ecx , ecx jmp qword ptr [ rdi * num ] mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar mov eax , dword ptr [ rcx * num ] ret
mov eax , hexvar add edi , - hexvar cmp edi , hexvar ja hexvar xor ecx , ecx jmp qword ptr [ rdi * num ] mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , num jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar jmp hexvar mov ecx , hexvar mov eax , dword ptr [ rcx * num ] ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , num bl hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num str r3 , [ sp , hexvar ] mov r3 , hexvar ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbx test rdi , rdi je hexvar mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov ecx , hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rcx ] cmp rax , rbx je hexvar lea rcx , [ rax + hexvar ] test rax , rax jne hexvar test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rcx cmp qword ptr [ rip + hexvar ] , rbx je hexvar cmp qword ptr [ rip + hexvar ] , rbx je hexvar mov rdi , rbx xor esi , esi call hexvar mov ebx , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov eax , ebx pop rbx ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test esi , esi je hexvar lea edi , [ ebx - hexvar ] push hexvar push edi push hexvar push num call hexvar mov edx , dword ptr [ ebx + hexvar ] add esp , hexvar cmp esi , edx mov eax , edx je hexvar test edx , edx jne hexvar jmp hexvar lea esi , [ esi ] cmp esi , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar test eax , eax je hexvar mov ecx , dword ptr [ esi + hexvar ] mov eax , dword ptr [ esi + hexvar ] test ecx , ecx je hexvar mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , ecx cmp esi , edx je hexvar cmp esi , dword ptr [ ebx + hexvar ] je hexvar sub esp , num push num push esi mov esi , num call hexvar add esp , hexvar push hexvar push edi push hexvar push hexvar call hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi ret
push rbx test rdi , rdi je hexvar mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov ecx , hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rcx ] cmp rax , rbx je hexvar lea rcx , [ rax + hexvar ] test rax , rax jne hexvar test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rcx cmp qword ptr [ rip + hexvar ] , rbx je hexvar cmp qword ptr [ rip + hexvar ] , rbx je hexvar mov rdi , rbx xor esi , esi call hexvar mov ebx , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov eax , ebx pop rbx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] sub esi , num mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] sub eax , num add ebx , eax mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , ebx call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v1 , v0 , - num lw v0 , hexvar ( fp ) addiu v0 , v0 , - num sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) move a2 , v1 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r14 push r13 mov r14 , rcx push r12 push rbp mov r12 , rdx push rbx mov rbp , rdi mov rbx , rsi call hexvar mov r13d , eax call hexvar mov edi , dword ptr [ rax ] test edi , edi je hexvar lea rdx , [ rbx - num ] lea r8 , [ r14 - num ] mov rcx , r12 mov rsi , rbp call hexvar pop rbx mov eax , r13d pop rbp pop r12 pop r13 pop r14 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] sub edx , num mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] sub edi , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , hexvar mov r0 , num bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num mov r1 , hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s3 bal hexvar move a0 , v0 move a2 , s2 move a1 , s1 jal hexvar move a0 , s0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar bal hexvar addiu a0 , zero , num move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s1 , a1 move s2 , a2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a3 , s3 move a2 , zero addiu a1 , zero , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a2 , s2 move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar move s1 , zero nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , hexvar mov r0 , num bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num mov r1 , hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
sub rsp , hexvar xor edx , edx xor esi , esi mov r8d , hexvar mov rcx , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test eax , eax je hexvar cmp eax , num je hexvar xor eax , eax mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r2 , fp , hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] mov r3 , r2 mov r2 , num mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar cmp r3 , num beq hexvar b hexvar sub r4 , fp , hexvar ldm r4 , { r3 , r4 } mvn r1 , num mov r2 , num cmp r4 , r2 cmpeq r3 , r1 bls hexvar mvn r3 , num mov r4 , num mov r2 , r3 ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] mov r3 , num b hexvar ldr r3 , [ pc , hexvar ] mvn r2 , num str r2 , [ r3 ] mov r3 , num b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea edx , [ ebx - hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx push edx lea edx , [ esp + hexvar ] push edx push num push num push eax call hexvar add esp , hexvar test eax , eax je hexvar cmp eax , num je hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r8 , [ rip + hexvar ] mov rcx , rdx mov edx , num mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov eax , num jmp hexvar mov qword ptr [ rip + hexvar ] , - num mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - num ] , num jge hexvar xor eax , eax mov cl , al mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - num ] shl edx , num add eax , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp - num ] mov edx , dword ptr [ edx + esi * num ] mov dword ptr [ ebp - hexvar ] , edx test cl , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar shr eax , hexvar mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar shr ecx , num or eax , ecx mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar shl ecx , num or eax , ecx mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar shl ecx , hexvar or eax , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] bswap eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu a0 , v1 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) move a1 , v0 jal hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) slti v0 , v0 , num bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu a0 , v1 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu a0 , v1 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov qword ptr [ rsi + rdi * num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] sub edx , hexvar add edx , - num add edx , hexvar mov dword ptr [ rbp - hexvar ] , edx mov edx , edx mov esi , edx mov qword ptr [ rcx + rsi * num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov eax , eax add rsp , hexvar pop rbp ret
mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rdi + hexvar ] mov ecx , edx mov qword ptr [ rsi + rcx * num ] , num test rax , rax je hexvar sub edx , num mov ecx , edx mov qword ptr [ rsi + rcx * num ] , rax mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , dword ptr [ rdi + hexvar ] ret
push ebx mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ edx + num ] mov dword ptr [ ecx + eax * num ] , num test edx , edx je hexvar lea ebx , [ eax * num ] lea ecx , [ ecx + ebx - num ] nop mov dword ptr [ ecx ] , edx mov edx , dword ptr [ edx + hexvar ] sub ecx , num test edx , edx jne hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov qword ptr [ rsi + rdi * num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] sub edx , hexvar add edx , - num add edx , hexvar mov dword ptr [ rbp - hexvar ] , edx mov edx , edx mov esi , edx mov qword ptr [ rcx + rsi * num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov eax , eax add rsp , hexvar pop rbp ret
ldr r2 , [ r0 , num ] cmp r2 , num movne r2 , num moveq r2 , num ldr r3 , [ r1 , num ] cmp r3 , num movne r3 , num moveq r3 , num cmp r2 , r3 blt hexvar bgt hexvar ldr r2 , [ r0 , hexvar ] ldr r3 , [ r0 ] and r2 , r2 , r3 ldr r3 , [ r1 , hexvar ] ldr ip , [ r1 ] and r3 , r3 , ip cmp r2 , r3 blo hexvar bhi hexvar ldr r0 , [ r0 , num ] ldr r3 , [ r1 , num ] cmp r0 , r3 blo hexvar cmp r0 , r3 movls r0 , num movhi r0 , num bx lr mov r0 , num bx lr mvn r0 , num bx lr mvn r0 , num bx lr mov r0 , num bx lr mvn r0 , num bx lr
xor ecx , ecx cmp dword ptr [ rdi + num ] , num mov eax , num sete cl xor edx , edx cmp dword ptr [ rsi + num ] , num sete dl cmp ecx , edx jl hexvar jg hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] and rcx , qword ptr [ rdi ] and rdx , qword ptr [ rsi ] cmp rcx , rdx jb hexvar ja hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rax jb hexvar seta al movzx eax , al ret
ldr r2 , [ r0 , num ] cmp r2 , num movne r2 , num moveq r2 , num ldr r3 , [ r1 , num ] cmp r3 , num movne r3 , num moveq r3 , num cmp r2 , r3 blt hexvar bgt hexvar ldr r2 , [ r0 , hexvar ] ldr r3 , [ r0 ] and r2 , r2 , r3 ldr r3 , [ r1 , hexvar ] ldr ip , [ r1 ] and r3 , r3 , ip cmp r2 , r3 blo hexvar bhi hexvar ldr r0 , [ r0 , num ] ldr r3 , [ r1 , num ] cmp r0 , r3 blo hexvar cmp r0 , r3 movls r0 , num movhi r0 , num bx lr mov r0 , num bx lr mvn r0 , num bx lr mvn r0 , num bx lr mov r0 , num bx lr mvn r0 , num bx lr
xor ecx , ecx cmp dword ptr [ rdi + num ] , num mov eax , num sete cl xor edx , edx cmp dword ptr [ rsi + num ] , num sete dl cmp ecx , edx jl hexvar jg hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] and rcx , qword ptr [ rdi ] and rdx , qword ptr [ rsi ] cmp rcx , rdx jb hexvar ja hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rax jb hexvar seta al movzx eax , al ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - num ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a1 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move a2 , s0 move a1 , s1 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jr t9 move a0 , v0 beqz s0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a1 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move a2 , s0 move a1 , s1 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jr t9 move a0 , v0 beqz s0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + num ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edi ] push dword ptr [ edi + num ] push esi call dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + num ] lea edx , [ ebp + eax * num ] add esp , hexvar cmp edi , edx jbe hexvar test edx , edx mov eax , edx je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi je hexvar test eax , eax je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi jne hexvar test eax , eax je hexvar mov eax , dword ptr [ eax ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 blo hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc } strhs lr , [ r3 , - hexvar ] ! andeq r0 , r0 , r0
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edi ] push dword ptr [ edi + num ] push esi call dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + num ] lea edx , [ ebp + eax * num ] add esp , hexvar cmp edi , edx jbe hexvar test edx , edx mov eax , edx je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi je hexvar test eax , eax je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi jne hexvar test eax , eax je hexvar mov eax , dword ptr [ eax ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar jg hexvar sub esp , num push dword ptr [ esi + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar jg hexvar call hexvar mov edi , eax mov eax , hexvar test edi , edi je hexvar sub esp , hexvar push edi call hexvar mov dword ptr [ esp ] , edi call hexvar mov dword ptr [ esp ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp + hexvar ] , eax pop ebp push dword ptr [ esi + hexvar ] call hexvar lea edx , [ eax + hexvar ] add esp , hexvar add eax , num cmovs eax , edx lea edx , [ ebx - hexvar ] mov ecx , eax sar ecx , num mov dword ptr [ esp + num ] , ecx push hexvar mov dword ptr [ esp + hexvar ] , edx push edx push ecx call hexvar add esp , hexvar mov ebp , eax mov eax , dword ptr [ esp + num ] test eax , eax mov eax , dword ptr [ esp + num ] sete dl test eax , eax sete al or dl , al jne hexvar test ebp , ebp je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar jle hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ] lea edi , [ edi ] sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar jle hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s7 , hexvar ( sp ) move s7 , a0 sw s6 , hexvar ( sp ) move s6 , a1 sw s4 , hexvar ( sp ) move s4 , a2 sw s0 , hexvar ( sp ) move s0 , a3 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar lw a0 , hexvar ( a3 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar jg hexvar sub esp , num push dword ptr [ esi + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar jg hexvar call hexvar mov edi , eax mov eax , hexvar test edi , edi je hexvar sub esp , hexvar push edi call hexvar mov dword ptr [ esp ] , edi call hexvar mov dword ptr [ esp ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp + hexvar ] , eax pop ebp push dword ptr [ esi + hexvar ] call hexvar lea edx , [ eax + hexvar ] add esp , hexvar add eax , num cmovs eax , edx lea edx , [ ebx - hexvar ] mov ecx , eax sar ecx , num mov dword ptr [ esp + num ] , ecx push hexvar mov dword ptr [ esp + hexvar ] , edx push edx push ecx call hexvar add esp , hexvar mov ebp , eax mov eax , dword ptr [ esp + num ] test eax , eax mov eax , dword ptr [ esp + num ] sete dl test eax , eax sete al or dl , al jne hexvar test ebp , ebp je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar jle hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ] lea edi , [ edi ] sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar jle hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13d , r8d mov rbp , rcx mov r14 , rdx mov r15 , rsi mov r12d , edi mov rdi , qword ptr [ rcx + hexvar ] call hexvar cmp eax , hexvar jl hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , qword ptr [ rbp + hexvar ] mov rsi , qword ptr [ rbp + hexvar ] call hexvar test eax , eax jle hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar cmp eax , hexvar jl hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar cmp eax , hexvar jl hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov qword ptr [ rsp + hexvar ] , r14 mov rdi , rax call hexvar mov rdi , rbx call hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , rbx mov rbx , rax call hexvar mov r14 , rax mov rdi , qword ptr [ rbp + hexvar ] call hexvar lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea edi , [ rax + rcx ] add edi , num sar edi , num mov esi , hexvar mov dword ptr [ rsp + hexvar ] , edi mov edx , hexvar call hexvar test rbx , rbx mov qword ptr [ rsp + hexvar ] , rax je hexvar test r14 , r14 je hexvar test rax , rax je hexvar add r13d , - num cmp r13d , num ja hexvar jmp qword ptr [ r13 * num + hexvar ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rcx , [ rcx + rcx * num ] shl rcx , num movzx edx , byte ptr [ rax + rcx + hexvar ] mov eax , edx mov edx , eax and edx , num mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rcx , [ rcx + rcx * num ] shl rcx , num mov rdi , qword ptr [ rax + rcx ] mov esi , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - num ] b hexvar ldr r2 , [ fp , - num ] mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 lsl r3 , r3 , num mov r2 , r3 ldr r3 , [ fp , - hexvar ] add r3 , r3 , r2 ldrb r3 , [ r3 , hexvar ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r2 , [ fp , - num ] mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 lsl r3 , r3 , num mov r2 , r3 ldr r3 , [ fp , - hexvar ] add r3 , r3 , r2 ldr r3 , [ r3 ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 blo hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rcx , [ rcx + rcx * num ] shl rcx , num movzx edx , byte ptr [ rax + rcx + hexvar ] mov eax , edx mov edx , eax and edx , num mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rcx , [ rcx + rcx * num ] shl rcx , num mov rdi , qword ptr [ rax + rcx ] mov esi , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov byte ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) move v0 , v1 sll v0 , v0 , num addu v0 , v0 , v1 sll v0 , v0 , num move v1 , v0 lw v0 , hexvar ( fp ) addu v0 , v0 , v1 lbu v0 , hexvar ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v1 , hexvar ( fp ) move v0 , v1 sll v0 , v0 , num addu v0 , v0 , v1 sll v0 , v0 , num move v1 , v0 lw v0 , hexvar ( fp ) addu v0 , v0 , v1 lw v1 , ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ esi ] sub esp , hexvar mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r15 , qword ptr [ rdx + hexvar ] mov r12 , qword ptr [ rsi + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rsi + hexvar ] and ecx , num mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp ] , rax mov rax , qword ptr [ rdx + hexvar ] mov qword ptr [ rsp + num ] , rax mov ebx , eax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbp , rsi test rdi , rdi je hexvar mov rsi , qword ptr [ rip + hexvar ] test rsi , rsi je hexvar mov rax , qword ptr [ rbp ] mov qword ptr [ rsi ] , rax call hexvar test rax , rax mov r14 , rax je hexvar cmp rax , qword ptr [ rip + hexvar ] je hexvar movzx r10d , byte ptr [ r14 + hexvar ] mov r13d , dword ptr [ r14 + num ] test r10b , r10b je hexvar xor eax , eax cmp r13d , hexvar sete al not eax cdqe and r15 , rax mov eax , ebx cdq idiv r13d
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw a3 , hexvar ( sp ) move a3 , a2 move a2 , a1 sw ra , hexvar ( sp ) move a1 , a0 jal hexvar addiu a0 , zero , - hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rdi mov r12 , rsi mov eax , dword ptr [ rdi + hexvar ] cmp eax , hexvar sbb rbp , rbp and rbp , hexvar add rbp , hexvar mov edx , eax add edx , dword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , edx cmp edx , eax jae hexvar add dword ptr [ rdi + hexvar ] , num shl rbp , num lea rsi , [ rbx + rbp ] lea ecx , [ rdx * num ] mov dword ptr [ rsi + hexvar ] , ecx mov edi , dword ptr [ rbx + hexvar ] lea ecx , [ rdi * num ] shr edx , hexvar or edx , ecx mov dword ptr [ rsi + hexvar ] , edx mov eax , eax lea r13 , [ rbx + hexvar ] lea rdi , [ r13 + rax ] mov rcx , rbp sub rcx , rax lea rdx , [ rcx - num ] lea rsi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , rbp mov rdi , r13 call hexvar mov rsi , r12 mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esi + hexvar ] cmp eax , hexvar mov ebx , eax sbb ebp , ebp and ebp , hexvar sub ebp , - hexvar cmp eax , hexvar sbb ecx , ecx and ecx , hexvar add ecx , hexvar cmp eax , hexvar mov dword ptr [ esp + num ] , ecx sbb ecx , ecx and ecx , hexvar add ecx , hexvar cmp eax , hexvar sbb edi , edi xor edx , edx and edi , hexvar add edi , hexvar add ebx , dword ptr [ esi + hexvar ] setb dl mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ esp ] , edx mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar add dword ptr [ esp ] , num mov edx , dword ptr [ esp ] mov dword ptr [ esi + hexvar ] , edx lea edx , [ ebx * num ] shr ebx , hexvar sub esp , num mov dword ptr [ esi + edi * num + hexvar ] , edx mov edx , dword ptr [ esp + num ] lea edi , [ esi + hexvar ] shl edx , num or edx , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + ecx * num + hexvar ] , edx lea edx , [ edi + eax ] sub ebx , eax push ebx mov ebx , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push edx call hexvar add esp , hexvar push esi push ebp push edi call hexvar mov eax , dword ptr [ esi ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ edi ] , eax mov eax , dword ptr [ esi + num ] mov dword ptr [ edi + num ] , eax mov eax , dword ptr [ esi + num ] mov dword ptr [ edi + num ] , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ edi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sltiu v0 , a0 , num beqz v0 , hexvar sw gp , hexvar ( sp ) sll v1 , a0 , num lui a0 , hexvar addiu a0 , a0 , - hexvar addu a0 , a0 , v1 lw v0 , ( a0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , edx sub esi , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] add eax , hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
cmp edi , num ja hexvar mov edi , edi jmp qword ptr [ rdi * num + hexvar ] nop xor eax , eax ret
cmp edi , num ja hexvar lea rax , [ rip + hexvar ] mov edi , edi movsxd rdx , dword ptr [ rax + rdi * num ] add rdx , rax jmp rdx nop word ptr [ rax + rax ] lea rax , [ rsi + hexvar ] ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx + num ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , rbx call hexvar xor eax , eax pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lui a1 , hexvar addiu a1 , a1 , hexvar lw a0 , ( a0 )
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx + num ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , rbx call hexvar xor eax , eax pop rbx ret
push r15 push r14 push rbx test rdi , rdi je hexvar mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar mov r14 , rdx mov r15 , rsi mov rsi , qword ptr [ rbx + hexvar ] test rsi , rsi jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , rax mov rdi , qword ptr [ rbx + num ] mov rdx , qword ptr [ r15 ] mov rcx , r14 xor r8d , r8d call hexvar test eax , eax je hexvar mov rax , qword ptr [ r15 ] movzx ecx , byte ptr [ rax ] and ecx , hexvar mov dword ptr [ rbx + hexvar ] , ecx add r14 , rax mov qword ptr [ r15 ] , r14 jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx test rdi , rdi je hexvar mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar mov r14 , rdx mov r15 , rsi mov rsi , qword ptr [ rbx + hexvar ] test rsi , rsi jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , rax mov rdi , qword ptr [ rbx + num ] mov rdx , qword ptr [ r15 ] mov rcx , r14 xor r8d , r8d call hexvar test eax , eax je hexvar mov rax , qword ptr [ r15 ] movzx ecx , byte ptr [ rax ] and ecx , hexvar mov dword ptr [ rbx + hexvar ] , ecx add r14 , rax mov qword ptr [ r15 ] , r14 jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx test rdi , rdi je hexvar mov rbx , qword ptr [ rdi ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar mov r14 , rdx mov r15 , rsi mov rsi , qword ptr [ rbx + hexvar ] test rsi , rsi jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , rax mov rdi , qword ptr [ rbx + num ] mov rdx , qword ptr [ r15 ] mov rcx , r14 xor r8d , r8d call hexvar test eax , eax je hexvar mov rax , qword ptr [ r15 ] movzx ecx , byte ptr [ rax ] and ecx , hexvar mov dword ptr [ rbx + hexvar ] , ecx add r14 , rax mov qword ptr [ r15 ] , r14 jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw s0 , ( a0 )
addiu sp , sp , - hexvar lui gp , hexvar lw v0 , hexvar ( sp ) addiu gp , gp , hexvar lw v1 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw v1 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) or v0 , s4 , s3 beqz v0 , hexvar move s0 , a1 lhu v0 , hexvar ( a0 ) sw a2 , hexvar ( sp ) andi v0 , v0 , hexvar bnez v0 , hexvar move s1 , a0 lw s7 , hexvar ( a0 ) beqz s7 , hexvar move a3 , zero move s2 , zero move s5 , zero addiu a1 , zero , hexvar b hexvar move v0 , s7 lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw a0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) or v0 , s6 , s5 beqz v0 , hexvar move s2 , a1 sw a2 , hexvar ( sp ) lhu v0 , hexvar ( a0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sp , sp , hexvar ldr sb , [ sp , hexvar ] cmp sb , num moveq r0 , num beq hexvar mov r8 , r2 mov r6 , r1 mov r5 , r0 ldrb r3 , [ r0 , hexvar ] tst r3 , hexvar bne hexvar ldr r4 , [ r0 , hexvar ] cmp r4 , num beq hexvar mov r3 , r4 mov r7 , num mov ip , r7 ldr r0 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov lr , num b hexvar ldr r7 , [ r3 , hexvar ] mov ip , lr ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 , hexvar ] and r2 , r2 , r0 cmp r2 , r1 bne hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar cmp ip , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , r7 bhs hexvar b hexvar mov sl , num mov r1 , r4 mov r0 , r5 bl hexvar ldr r3 , [ r4 , hexvar ] sub r3 , r3 , r7 mul r2 , r3 , r0 str r2 , [ r4 , hexvar ] str sl , [ r4 , hexvar ] ldr r4 , [ r4 , hexvar ] cmp r4 , num bne hexvar ldrb r3 , [ r5 , hexvar ] orr r3 , r3 , hexvar strb r3 , [ r5 , hexvar ] ldr r3 , [ r6 , hexvar ] tst r3 , num moveq r0 , num beq hexvar tst r3 , hexvar movne r0 , num beq hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
mov eax , num test r8 , r8 je hexvar push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , rdx mov r12 , rsi mov rbp , rdi test byte ptr [ rdi + hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov r13d , num mov ecx , num mov esi , num jmp hexvar mov r13 , qword ptr [ rax + hexvar ] mov ecx , esi mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rax + hexvar ] and edx , hexvar cmp edx , hexvar jne hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar test ecx , ecx je hexvar cmp qword ptr [ rax + hexvar ] , r13 jae hexvar jmp hexvar mov r13d , num mov rdi , rbp call hexvar mov r14d , eax mov rbx , qword ptr [ rbp + hexvar ] test rbx , rbx je hexvar lea r15 , [ rip + hexvar ] jmp hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar mov rax , qword ptr [ rbx + hexvar ] sub rax , r13 mov edx , r14d imul rax , rdx mov qword ptr [ rbx + hexvar ] , rax mov edx , dword ptr [ rbx + hexvar ] and edx , hexvar cmp edx , hexvar jne hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar test rax , rax jns hexvar mov edx , num mov rsi , r15 lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar jmp hexvar or byte ptr [ rbp + hexvar ] , hexvar mov edx , dword ptr [ r12 + hexvar ] mov eax , num test dl , num je hexvar test dh , num je hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
cmp r0 , num beq hexvar push { r4 , lr } ldr r3 , [ r0 ] cmp r3 , hexvar bhi hexvar cmp r3 , hexvar bhs hexvar cmp r3 , num beq hexvar cmp r3 , num bne hexvar ldr r0 , [ r0 , num ] bl hexvar clz r0 , r0 lsr r0 , r0 , num pop { r4 , pc }
test eax , eax je hexvar sub esp , hexvar mov edx , dword ptr [ eax ] cmp edx , hexvar ja hexvar cmp edx , hexvar jae hexvar cmp edx , num je hexvar cmp edx , num jne hexvar mov eax , dword ptr [ eax + num ] call hexvar test eax , eax sete al movzx eax , al jmp hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jb hexvar sub edx , hexvar cmp edx , num ja hexvar mov eax , dword ptr [ eax + num ] call hexvar jmp hexvar mov eax , dword ptr [ eax + hexvar ] call hexvar jmp hexvar mov eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] add ecx , - num mov eax , ecx sub ecx , hexvar mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , ecx ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx
beqz a0 , hexvar nop addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , ( a0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push r12 push rbp mov rbp , rdi push rbx call hexvar test eax , eax mov ebx , eax je hexvar mov rdi , rbp call hexvar mov edx , num mov esi , hexvar xor edi , edi mov r12 , rax call hexvar mov rbp , rax call hexvar mov esi , dword ptr [ rax ] mov rcx , r12 mov rdx , rbp xor edi , edi xor eax , eax call hexvar mov eax , ebx pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move a3 , v0 move a2 , s1 move a1 , s0 move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw s2 , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ esp + hexvar ] , eax mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] jge hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , edi mov edi , eax mov eax , dword ptr [ esp + hexvar ] test eax , eax jle hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ edi ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi lea ebp , [ esi + eax * num ] call hexvar add esp , hexvar mov dword ptr [ ebp ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar jmp hexvar nop lea esi , [ esi ] lea eax , [ esi + num ] push dword ptr [ edi + num ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar lea eax , [ esi + hexvar ] push dword ptr [ edi + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp + hexvar ] , eax sub dword ptr [ esp + hexvar ] , num je hexvar add esi , hexvar push dword ptr [ edi + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi add ebp , hexvar add edi , hexvar call hexvar add esp , hexvar mov dword ptr [ ebp ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar lea eax , [ esi + num ] push dword ptr [ edi + num ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rsi cmp edx , r8d mov r12d , edx cmovl r12d , r8d mov r13 , rcx cmovl r13 , rsi mov ebp , r8d cmovle ebp , edx mov qword ptr [ rsp ] , rdi cmovl rbx , rcx test ebp , ebp jle hexvar mov r14d , edx mov dword ptr [ rsp + hexvar ] , r8d movsxd rdx , r12d mov qword ptr [ rsp + hexvar ] , rdx mov rcx , qword ptr [ r13 ] mov r15 , qword ptr [ rsp ] mov rdi , r15 mov rsi , rbx call hexvar mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ r15 + rdx * num ] , rax cmp ebp , num je hexvar not r14d mov ecx , dword ptr [ rsp + hexvar ] not ecx cmp r14d , ecx cmovge ecx , r14d mov rax , qword ptr [ rsp ] lea rbp , [ rax + rdx * num ] add rbp , hexvar mov r15d , hexvar sub r15d , ecx xor r14d , r14d nop word ptr cs : [ rax + rax ] nop mov rax , qword ptr [ rsp ] lea rdi , [ rax + r14 ] add rdi , num mov rcx , qword ptr [ r13 + r14 + num ] mov rsi , rbx mov edx , r12d call hexvar mov qword ptr [ rbp + r14 - hexvar ] , rax lea eax , [ r15 + num ] test eax , eax jle hexvar mov rax , qword ptr [ rsp ] lea rdi , [ rax + r14 ] add rdi , hexvar mov rcx , qword ptr [ r13 + r14 + hexvar ] mov rsi , rbx mov edx , r12d call hexvar mov qword ptr [ rbp + r14 - hexvar ] , rax lea eax , [ r15 + num ] test eax , eax jle hexvar mov rax , qword ptr [ rsp ] lea rdi , [ rax + r14 ] add rdi , hexvar mov rcx , qword ptr [ r13 + r14 + hexvar ] mov rsi , rbx mov edx , r12d call hexvar mov qword ptr [ rbp + r14 - num ] , rax test r15d , r15d jle hexvar mov rax , qword ptr [ rsp ] lea rdi , [ rax + r14 ] add rdi , hexvar mov rcx , qword ptr [ r13 + r14 + hexvar ] mov rsi , rbx mov edx , r12d call hexvar mov qword ptr [ rbp + r14 ] , rax add r14 , hexvar add r15d , - num cmp r15d , - num jne hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi cmp edx , r8d mov eax , edx cmovl eax , r8d mov dword ptr [ rsp + hexvar ] , eax mov rax , rcx cmovl rax , rsi mov qword ptr [ rsp + hexvar ] , rax mov ebp , r8d cmovle ebp , edx mov rbx , rdi cmovl r13 , rcx test ebp , ebp jle hexvar mov r12d , r8d mov r14d , edx movsxd r15 , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax ] mov rdi , rbx mov rsi , r13 mov edx , r15d call hexvar mov qword ptr [ rbx + r15 * num ] , rax cmp ebp , num je hexvar not r14d not r12d cmp r14d , r12d cmovge r12d , r14d lea rbp , [ rbx + r15 * num ] add rbp , hexvar mov r15d , hexvar sub r15d , r12d xor r14d , r14d nop lea rdi , [ rbx + r14 ] add rdi , num mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax + r14 + num ] mov rsi , r13 mov edx , dword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rbp + r14 - hexvar ] , rax cmp r15d , - num je hexvar lea r12d , [ r15 + num ] lea rdi , [ rbx + r14 ] add rdi , hexvar mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax + r14 + hexvar ] mov rsi , r13 mov edx , dword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rbp + r14 - hexvar ] , rax cmp r12d , num jl hexvar lea rdi , [ rbx + r14 ] add rdi , hexvar mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax + r14 + hexvar ] mov rsi , r13 mov edx , dword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rbp + r14 - num ] , rax test r15d , r15d jle hexvar lea rdi , [ rbx + r14 ] add rdi , hexvar mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax + r14 + hexvar ] mov rsi , r13 mov edx , dword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rbp + r14 ] , rax add r14 , hexvar add r15d , - num cmp r15d , - num jne hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi cmp edx , r8d mov eax , edx cmovl eax , r8d mov dword ptr [ rsp + hexvar ] , eax mov rax , rcx cmovl rax , rsi mov qword ptr [ rsp + hexvar ] , rax mov ebp , r8d cmovle ebp , edx mov rbx , rdi cmovl r13 , rcx test ebp , ebp jle hexvar mov r12d , r8d mov r14d , edx movsxd r15 , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax ] mov rdi , rbx mov rsi , r13 mov edx , r15d call hexvar mov qword ptr [ rbx + r15 * num ] , rax cmp ebp , num je hexvar not r14d not r12d cmp r14d , r12d cmovge r12d , r14d lea rbp , [ rbx + r15 * num ] add rbp , hexvar mov r15d , hexvar sub r15d , r12d xor r14d , r14d nop lea rdi , [ rbx + r14 ] add rdi , num mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax + r14 + num ] mov rsi , r13 mov edx , dword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rbp + r14 - hexvar ] , rax cmp r15d , - num je hexvar lea r12d , [ r15 + num ] lea rdi , [ rbx + r14 ] add rdi , hexvar mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax + r14 + hexvar ] mov rsi , r13 mov edx , dword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rbp + r14 - hexvar ] , rax cmp r12d , num jl hexvar lea rdi , [ rbx + r14 ] add rdi , hexvar mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax + r14 + hexvar ] mov rsi , r13 mov edx , dword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rbp + r14 - num ] , rax test r15d , r15d jle hexvar lea rdi , [ rbx + r14 ] add rdi , hexvar mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rax + r14 + hexvar ] mov rsi , r13 mov edx , dword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rbp + r14 ] , rax add r14 , hexvar add r15d , - num cmp r15d , - num jne hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + num ] test edx , edx je hexvar mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + num ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
sub rsp , num cmp qword ptr [ rdi + num ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax + num ] test rdx , rdx je hexvar mov qword ptr [ rax + hexvar ] , rsi mov qword ptr [ rdi + hexvar ] , rdx mov eax , num add rsp , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lui s2 , hexvar lw t9 , - hexvar ( gp ) move s1 , a0 addiu a3 , zero , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num lw s0 , hexvar ( s1 )
push r14 push rbx push rax test rdi , rdi je hexvar mov r14 , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rbx , qword ptr [ r14 + hexvar ] test rbx , rbx je hexvar add dword ptr [ rbx + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar lea ebp , [ ebx - hexvar ] push hexvar push ebp push hexvar push num call hexvar mov esi , dword ptr [ edi + hexvar ] add esp , hexvar test esi , esi je hexvar add dword ptr [ esi + hexvar ] , num push hexvar push ebp push hexvar push hexvar call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push r14 push rbx push rax test rdi , rdi je hexvar mov r14 , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rbx , qword ptr [ r14 + hexvar ] test rbx , rbx je hexvar add dword ptr [ rbx + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , num cmp dword ptr [ edx + hexvar ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edx mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ edx + hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar nop lea esi , [ esi ] mov eax , num ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num lea eax , [ ebp - hexvar ] mov ecx , eax lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num lea eax , [ ebp - hexvar ] mov ecx , eax lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx cmp eax , hexvar je hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num sub esp , num push num push hexvar lea ebx , [ esp + hexvar ] push ebx call hexvar mov dword ptr [ esp ] , ebx mov ecx , hexvar mov edx , esi mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ rbp - num ] lea rdi , [ rbp - hexvar ] call hexvar lea rax , [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov rdi , rax mov rsi , rcx mov edx , hexvar call hexvar lea rdi , [ rbp - hexvar ] mov esi , hexvar mov edx , num call hexvar mov edi , dword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , - num lea rcx , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar bnez a1 , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw v0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rdi mov r8d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , r8d mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , r9 cmp dword ptr [ rdx ] , num setne r10b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , r10b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rcx ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar lea eax , [ ebx - hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , num add esp , num pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jal hexvar nop addiu v1 , zero , - num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a0 , sp , hexvar move a1 , v0 bal hexvar move s1 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw a0 , num ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jal hexvar nop addiu v1 , zero , - num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a0 , sp , hexvar move a1 , v0 bal hexvar move s1 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw a0 , num ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jal hexvar nop addiu v1 , zero , - num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a0 , sp , hexvar move a1 , v0 bal hexvar move s1 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw a0 , num ( v0 ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw t9 , ( v0 )
push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rcx , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rcx xor ecx , ecx call hexvar cmp rax , - num je hexvar mov rbp , rax lea rdi , [ rsp + num ] mov rsi , rax call hexvar mov rbx , rax test rax , rax je hexvar mov edi , dword ptr [ rax + num ] mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] call qword ptr [ rax ] mov edx , eax cmp eax , num je hexvar cmp eax , num jbe hexvar mov eax , num cmp edx , num je hexvar cmp edx , num jne hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax fild dword ptr [ ebp - hexvar ] fstp qword ptr [ ebp - hexvar ] sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax fild dword ptr [ ebp - hexvar ] fstp qword ptr [ ebp - hexvar ] fldz fld qword ptr [ ebp - hexvar ] fucomip st ( num ) fstp st ( num ) jb hexvar fldz fld qword ptr [ ebp - hexvar ] fucomip st ( num ) fstp st ( num ) jb hexvar fld qword ptr [ ebp - hexvar ] fmul qword ptr [ ebp - hexvar ] jmp hexvar sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num fild qword ptr [ ebp - hexvar ] fstp qword ptr [ ebp - hexvar ] fld qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num fild qword ptr [ ebp - hexvar ] fstp qword ptr [ ebp - hexvar ] fld qword ptr [ ebp - hexvar ] fmulp st ( num ) jmp hexvar fld qword ptr [ ebx - hexvar ] mov eax , dword ptr [ ebp - hexvar ] xor eax , dword ptr gs : [ hexvar ] je hexvar fstp st ( num ) call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push hexvar call hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp ] , hexvar fild dword ptr [ esp + hexvar ] fstp qword ptr [ esp + hexvar ] call hexvar fldz mov dword ptr [ esp + hexvar ] , eax add esp , hexvar fld qword ptr [ esp ] fucomi st ( num ) jb hexvar fild dword ptr [ esp + hexvar ] fucomi st ( num ) fstp st ( num ) jb hexvar add esp , hexvar fmulp st ( num ) pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar cvtsi2sd xmm0 , eax movsd qword ptr [ ebp - hexvar ] , xmm0 mov dword ptr [ esp ] , hexvar call hexvar cvtsi2sd xmm0 , eax movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] mulsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - num ] , xmm0 jmp hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num jne hexvar movd xmm0 , dword ptr [ ebp - hexvar ] movsd xmm1 , qword ptr [ hexvar ] movaps xmm2 , xmm1 por xmm0 , xmm2 subsd xmm0 , xmm1 movd xmm3 , dword ptr [ ebp - hexvar ] por xmm3 , xmm2 subsd xmm3 , xmm1 mulsd xmm0 , xmm3 movsd qword ptr [ ebp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ hexvar ] movsd qword ptr [ ebp - num ] , xmm0 movsd xmm0 , qword ptr [ ebp - num ] movsd qword ptr [ ebp - hexvar ] , xmm0 fld qword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar cvtsi2sd xmm0 , eax movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov dword ptr [ esp ] , hexvar call hexvar cvtsi2sd xmm0 , eax movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm0 , xmm1 jb hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 xorps xmm0 , xmm0 movsd xmm1 , qword ptr [ ebp - hexvar ] ucomisd xmm1 , xmm0 setae al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] mulsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - num ] , xmm0 jmp hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movd xmm0 , eax movsd xmm1 , qword ptr [ hexvar ] movaps xmm2 , xmm1 por xmm0 , xmm2 subsd xmm0 , xmm1 movd xmm3 , dword ptr [ ebp - hexvar ] por xmm3 , xmm2 subsd xmm3 , xmm1 mulsd xmm0 , xmm3 movsd qword ptr [ ebp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ hexvar ] movsd qword ptr [ ebp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ ebp - num ] movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 fld qword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { r4 , r5 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] bl hexvar mov r3 , num str r3 , [ sp ] mov r2 , num mov r3 , num mov r0 , r4 bl hexvar cmp r0 , num movne r0 , num bne hexvar mov r2 , r4 mov r1 , num add r0 , sp , num bl hexvar cmp r0 , num movne r0 , num bne hexvar ldrb r3 , [ sp , num ] cmp r3 , hexvar bne hexvar ldrb r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] ldrb r3 , [ r2 , r3 ] cmp r3 , hexvar beq hexvar ldrb r3 , [ sp , hexvar ] ldrb r3 , [ r2 , r3 ] cmp r3 , hexvar beq hexvar ldrb r3 , [ sp , hexvar ] ldrb r3 , [ r2 , r3 ] cmp r3 , hexvar beq hexvar ldr r5 , [ r4 , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num ldrne r3 , [ r4 , hexvar ] orrne r3 , r3 , hexvar strne r3 , [ r4 , hexvar ] ldr r0 , [ r4 , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push { r4 , r5 , r6 , r7 , lr } ldr r5 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r2 , [ r5 , num ] ldr r3 , [ r6 ] sub sp , sp , hexvar cmp r2 , num mov r4 , r0 str r3 , [ sp , hexvar ] beq hexvar mov r1 , num mov r2 , num mov r3 , num str r1 , [ sp ] mov r0 , r4 bl hexvar cmp r0 , num bne hexvar mov r2 , r4 mov r1 , num add r0 , sp , num bl hexvar cmp r0 , num bne hexvar ldrb r3 , [ sp , num ] cmp r3 , hexvar bne hexvar ldr r3 , [ pc , hexvar ] ldrb r2 , [ sp , num ] ldrb r2 , [ r3 , r2 ] cmp r2 , hexvar beq hexvar ldrb r2 , [ sp , hexvar ] ldrb r2 , [ r3 , r2 ] cmp r2 , hexvar beq hexvar ldrb r2 , [ sp , hexvar ] ldrb r3 , [ r3 , r2 ] cmp r3 , hexvar beq hexvar ldr r3 , [ r5 , num ] ldr r7 , [ r4 , hexvar ] cmp r3 , num beq hexvar mov r1 , hexvar mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r3 , num mov r2 , num str r0 , [ r4 , hexvar ] str r2 , [ r0 , num ] str r3 , [ r0 ] str r3 , [ r0 , num ] str r3 , [ r0 , hexvar ] str r3 , [ r0 , hexvar ] str r3 , [ r0 , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] ldr r0 , [ r4 , num ] cmp r3 , num ldrne r3 , [ r4 , hexvar ] orrne r3 , r3 , hexvar strne r3 , [ r4 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edx , edx je hexvar push num push num push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar push esi push num push num lea eax , [ esp + hexvar ] push eax call hexvar xor eax , num add esp , hexvar or edx , eax jne hexvar cmp byte ptr [ esp + num ] , hexvar jne hexvar movzx edx , byte ptr [ esp + num ] lea eax , [ ebx - hexvar ] cmp byte ptr [ eax + edx ] , hexvar je hexvar movzx edx , byte ptr [ esp + hexvar ] cmp byte ptr [ eax + edx ] , hexvar je hexvar movzx edx , byte ptr [ esp + hexvar ] cmp byte ptr [ eax + edx ] , hexvar je hexvar sub esp , hexvar mov ebx , dword ptr [ esi + hexvar ] push esi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , esi call hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esi + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax call hexvar push num push num push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar push esi push num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar xor eax , num or edx , eax jne hexvar cmp byte ptr [ esp + num ] , hexvar jne hexvar movzx eax , byte ptr [ esp + num ] lea edx , [ ebx - hexvar ] cmp byte ptr [ edx + eax ] , hexvar je hexvar movzx eax , byte ptr [ esp + hexvar ] cmp byte ptr [ edx + eax ] , hexvar je hexvar movzx eax , byte ptr [ esp + hexvar ] cmp byte ptr [ edx + eax ] , hexvar je hexvar mov ebx , dword ptr [ esi + hexvar ] sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , esi call hexvar test eax , eax je hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar or dword ptr [ esi + hexvar ] , hexvar mov eax , dword ptr [ esi + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a3 , zero , num lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov eax , dword ptr [ rsi + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar xor eax , eax ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] mov r3 , num ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu a2 , zero , num lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num move a2 , zero lw a1 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , v0 , num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar subu v0 , v1 , v0 sltiu v0 , v0 , hexvar bnez v0 , hexvar nop move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] cmp byte ptr [ eax ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] sub eax , ecx cmp eax , hexvar jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] add ecx , num mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar add eax , num add eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] test al , al jne hexvar mov eax , num jmp hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num sub esp , num push num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar add eax , num add dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] lea eax , [ ebx - hexvar ] sub edx , eax mov eax , edx cmp eax , hexvar jbe hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push { fp , lr } add fp , sp , num sub sp , sp , num ldr r0 , [ pc , hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - hexvar ] b hexvar mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num mov r2 , num ldr r1 , [ fp , - num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 add r3 , r3 , num ldr r2 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] sub r3 , r3 , r2 mov r2 , r3 ldr r3 , [ pc , hexvar ] cmp r2 , r3 bls hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] and edx , num test edx , edx je hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push hexvar lea eax , [ eax - hexvar ] push eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea edx , [ eax + num ] test eax , eax cmovs eax , edx sar eax , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , dword ptr [ ebp - hexvar ] sub eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx mov edx , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] shrd eax , edx , num shr edx , num mov ecx , eax mov ebx , edx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , ebx add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jl hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
tst r3 , num push { r4 , lr } bne hexvar cmp r3 , num add ip , r3 , num movlt r3 , ip asr r3 , r3 , num cmp r3 , num pople { r4 , pc } ldr ip , [ sp , num ] add r3 , r2 , r3 cmp ip , num bne hexvar sub r3 , r3 , num sub r2 , r2 , num strb r0 , [ r2 , num ] ! cmp r2 , r3 lsr r0 , r0 , num orr r0 , r0 , r1 , lsl num lsr r1 , r1 , num bne hexvar pop { r4 , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov ecx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test dl , num jne hexvar lea eax , [ edx + num ] test edx , edx cmovns eax , edx sar eax , num mov esi , eax test eax , eax jle hexvar mov eax , num lea ebp , [ esi - num ] mov dword ptr [ esp + hexvar ] , esi mov esi , ebp mov ebp , edi mov edi , esi mov edx , edi sub edx , eax test ebp , ebp cmove edx , eax mov esi , dword ptr [ esp + hexvar ] mov byte ptr [ esi + edx ] , cl shrd ecx , ebx , num shr ebx , num add eax , num cmp dword ptr [ esp + hexvar ] , eax jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
tst r3 , num push { r4 , lr } bne hexvar cmp r3 , num add ip , r3 , num movlt r3 , ip asr r3 , r3 , num cmp r3 , num pople { r4 , pc } ldr ip , [ sp , num ] add r3 , r2 , r3 cmp ip , num bne hexvar sub r3 , r3 , num sub r2 , r2 , num strb r0 , [ r2 , num ] ! cmp r2 , r3 lsr r0 , r0 , num orr r0 , r0 , r1 , lsl num lsr r1 , r1 , num bne hexvar pop { r4 , pc }
push r15 push r14 mov rax , rdx push r13 push r12 mov r13d , hexvar push rbp push rbx mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp ] , rdx mov qword ptr [ rsp + hexvar ] , rdi mov rdx , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rdx xor edx , edx cmp rax , hexvar mov qword ptr [ rsp + hexvar ] , rcx jbe hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rsp ] mov r15 , qword ptr [ rsp + hexvar ] shr rax , num mov r12 , r15 mov rbp , r15 mov qword ptr [ rsp + num ] , rax shl rax , num mov qword ptr [ rsp + hexvar ] , rax add r12 , rax nop dword ptr [ rax ] lea rdi , [ rsp + hexvar ] call hexvar mov rcx , qword ptr [ rsp + hexvar ] cmp rbx , hexvar mov rsi , r13 cmovbe rsi , rbx mov r14 , rax mov rdi , rbp mov r8 , rax mov edx , hexvar sub rbx , rsi add r15 , num sub rbp , - hexvar call hexvar mov qword ptr [ r15 - num ] , r14 cmp r12 , r15 jne hexvar mov r15 , qword ptr [ rsp + num ] mov rbp , qword ptr [ rsp ] mov ecx , hexvar mov rdi , qword ptr [ rsp + hexvar ] mov r12 , r15 mov rax , r15 shl r15 , num shl r12 , num and eax , hexvar sub rcx , rax sub rbp , r12 cmp rbp , rcx ja hexvar mov rax , qword ptr [ rsp + hexvar ] lea rdx , [ rbp * num ] lea rsi , [ rax + r15 ] add rdi , rax call hexvar mov rax , qword ptr [ rsp + num ] mov r14 , rax add rbx , rax sub r14 , r12 add qword ptr [ rsp ] , r14 mov rax , qword ptr [ rsp ] cmp rax , hexvar ja hexvar mov r15 , qword ptr [ rsp + hexvar ] mov r14 , qword ptr [ rsp + hexvar ] mov rsi , rbx mov rdx , qword ptr [ rsp ] mov rcx , r15 mov rdi , r14 call hexvar xor ecx , ecx mov rdx , rax mov r8 , r15 mov rsi , rbx mov rdi , r14 call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s7 , hexvar ( sp ) lui s7 , hexvar sw s1 , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw a0 , - hexvar ( s7 ) sw s2 , hexvar ( sp ) move s2 , a1 sw v0 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a2 sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v1 , ( v0 ) sltu v0 , a0 , a2 sw v1 , hexvar ( sp ) beqz v0 , hexvar addiu s3 , sp , hexvar sltu v0 , s0 , a0 bnez v0 , hexvar move fp , s1 move s6 , zero move s4 , zero move s5 , s1 move a1 , zero jal hexvar move a0 , s3 sll a0 , s4 , num lw a2 , - hexvar ( s7 ) addiu t0 , v0 , num move fp , v0 lw a3 , hexvar ( sp ) move v0 , s2 sw t0 , hexvar ( sp ) sltu a1 , s2 , a2 sw t0 , hexvar ( sp ) movz v0 , a2 , a1 addu a0 , s1 , a0 addiu s5 , s5 , num addiu s6 , s6 , num jal hexvar move a1 , v0 sltu v1 , s2 , v0 lw a0 , - hexvar ( s7 ) addu s4 , s4 , v0 movn v0 , s2 , v1 lw t0 , hexvar ( sp ) subu v1 , s0 , s4 lw gp , hexvar ( sp ) sltu a1 , v1 , a0 sw fp , - num ( s5 )
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] cmp ecx , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax jbe hexvar mov esi , edx xor edi , edi xor ebp , ebp nop lea esi , [ esi ] mov edx , dword ptr [ esp ] mov eax , dword ptr [ esp + num ] xor ecx , ecx call hexvar mov ebx , eax mov eax , dword ptr [ esp + hexvar ] mov edx , esi mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp ecx , esi lea eax , [ eax + ebp * num ] cmovbe edx , ecx sub esp , num push ebx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , esi cmp eax , esi cmovbe edx , eax mov ecx , dword ptr [ esp + hexvar ] add ebp , eax sub esi , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ ecx + edi * num ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ ecx + edi * num + num ] , edx mov ecx , dword ptr [ eax + hexvar ] add edi , num sub ebx , ebp cmp ebx , ecx jae hexvar mov eax , dword ptr [ esp + hexvar ] lea edx , [ eax + edi * num ] mov eax , edi mov dword ptr [ esp + hexvar ] , edx xor edx , edx div ecx
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s5 , a0 move s6 , a1 move s7 , a2 sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sltu v0 , v0 , a2 beqz v0 , hexvar lui v0 , hexvar sw v0 , hexvar ( sp ) b hexvar addiu fp , sp , hexvar subu a2 , s7 , s0 sll a1 , s0 , num sll a0 , s2 , num sll a2 , a2 , num addu a1 , s5 , a1 addu a0 , s5 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) subu s0 , s2 , s0 addu s7 , s7 , s0 lw v0 , hexvar ( sp ) lw v0 , - hexvar ( v0 ) sltu v0 , v0 , s7 beqz v0 , hexvar addu s6 , s6 , s2 lw v0 , hexvar ( sp ) lw v0 , - hexvar ( v0 ) sltu v1 , s7 , v0 bnez v1 , hexvar move s1 , s5 move s2 , zero move s0 , zero move a1 , zero move a0 , fp jal hexvar nop lw gp , hexvar ( sp ) move s3 , v0 lw v0 , hexvar ( sp ) lw v0 , - hexvar ( v0 ) addiu s4 , s3 , num sltu a1 , s6 , v0 sll a0 , s0 , num sw s4 , hexvar ( sp ) lw a3 , hexvar ( sp ) move a2 , v0 move v1 , v0 movn v1 , s6 , a1 move a1 , v1 addu a0 , s5 , a0 jal hexvar nop lw gp , hexvar ( sp ) sltu v1 , s6 , v0 move a0 , s6 movz a0 , v0 , v1 subu s6 , s6 , a0 sw s4 , ( s1 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r5 , num mov r7 , num mov r4 , r1 mov r6 , r0 cmp r7 , r5 sub sp , sp , hexvar cmpeq r0 , r1 str r4 , [ sp , num ] str r5 , [ sp , hexvar ] stm sp , { r6 , r7 } ldr r8 , [ sp , hexvar ] bls hexvar mov fp , r3 mov sl , r2 asr r4 , r8 , hexvar mov r1 , r4 str r0 , [ sp , hexvar ] mov r0 , r8 mov sb , fp mov fp , sl subs r2 , r6 , num str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] mul r1 , r2 , r1 sbc r3 , r7 , num mov r4 , r6 mov r5 , r7 mla r0 , r8 , r3 , r1 umull r6 , r7 , r2 , r8 add r7 , r0 , r7 subs r4 , r4 , num ldm sp , { r2 , r3 } mov r0 , r6 mov r1 , r7 sbc r5 , r5 , num bl hexvar mov sl , r0 ldr r3 , [ sp , hexvar ] sub r1 , r8 , r0 sub r2 , r3 , r4 ldr r3 , [ sp , hexvar ] add r2 , fp , r2 add r1 , r1 , r3 ldrb r2 , [ r2 , - num ] mov r0 , sb bl hexvar add r3 , sp , hexvar ldm r3 , { r2 , r3 } subs r6 , r6 , r2 sbc r7 , r7 , r3 add r3 , sp , num ldm r3 , { r2 , r3 } cmp r5 , r3 cmpeq r4 , r2 mov r8 , sl bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , num cmp byte ptr [ ebx + hexvar ] , num mov esi , dword ptr [ esp + hexvar ] je hexvar mov ecx , esi mov eax , dword ptr [ ebx + hexvar ] cmp cl , hexvar je hexvar test eax , eax jg hexvar call hexvar mov ecx , esi movzx edx , cl mov ecx , dword ptr [ eax ] test byte ptr [ ecx + edx * num + num ] , hexvar jne hexvar mov eax , esi cmp al , num jne hexvar sub dword ptr [ ebx + hexvar ] , num nop mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] cmp edx , dword ptr [ eax + hexvar ] jae hexvar lea ecx , [ edx + num ] mov dword ptr [ eax + hexvar ] , ecx mov eax , esi mov byte ptr [ edx ] , al add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov dword ptr [ rbp - hexvar ] , r9d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov rdx , qword ptr [ rbp - hexvar ] sub rdx , num imul rax , rdx mov edx , num div qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov edx , eax mov eax , dword ptr [ rbp - hexvar ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , al add qword ptr [ rbp - hexvar ] , num movzx edx , byte ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
test rdi , rdi je hexvar push r12 push rbp push rbx mov rbx , rsi mov r12 , rdx lea rbp , [ rsi + rdi ] add rbx , num movzx edx , byte ptr [ rbx - num ] mov rsi , r12 mov edi , num mov eax , num call hexvar cmp rbp , rbx jne hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , esp lea esi , [ ebp - hexvar ] mov dword ptr [ edx ] , esi mov dword ptr [ edx + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar test eax , eax sete bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] imul eax , eax , hexvar mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub eax , - num setne cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ hexvar ] jmp eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret num
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , num push num lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] imul eax , eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx jmp hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar lea eax , [ ebx - hexvar ] push eax push hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret num
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax xor edx , edx lea esi , [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx cmp ecx , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax imul eax , dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ecx + num ] , eax jmp hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret num
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax xor edx , edx lea esi , [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx cmp ecx , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax imul eax , dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ecx + num ] , eax jmp hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret num
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar ldr r0 , [ fp , - hexvar ] bl hexvar ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 b hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push rbx mov rbx , qword ptr [ rdi ] call hexvar mov eax , num test rbx , rbx je hexvar mov rdi , rbx call hexvar pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar cmp dword ptr [ ebp - num ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
call hexvar add edx , hexvar mov eax , dword ptr [ esp + num ] cmp eax , num je hexvar mov dword ptr [ edx + hexvar ] , eax ret movzx ecx , byte ptr [ edx + hexvar ] test cl , cl je hexvar jmp hexvar
addiu v0 , zero , num beq a0 , v0 , hexvar lui v0 , hexvar sw a0 , hexvar ( v0 ) jr ra nop lui v0 , hexvar lbu v0 , hexvar ( v0 ) andi v0 , v0 , hexvar bnez v0 , hexvar lui v0 , hexvar sw a0 , hexvar ( v0 ) b hexvar nop
mov eax , dword ptr [ esp + num ] call hexvar add edx , hexvar cmp eax , num je hexvar mov dword ptr [ edx + hexvar ] , eax ret
addiu v0 , zero , num beq a0 , v0 , hexvar lui v0 , hexvar sw a0 , - hexvar ( v0 ) jr ra nop lui v0 , hexvar lbu v0 , - hexvar ( v0 ) andi v0 , v0 , hexvar bnez v0 , hexvar lui v0 , hexvar sw a0 , - hexvar ( v0 ) b hexvar nop
push rax test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar mov rsi , qword ptr [ rax + num ] test rsi , rsi je hexvar pop rax jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
beqz a0 , hexvar move a0 , zero addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra move v0 , zero
beqz a0 , hexvar move a0 , zero addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra move v0 , zero
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push edi push esi push ebx mov eax , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test eax , eax je hexvar lea edi , [ ebx - hexvar ] sub esp , num push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + num ] , num call hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + hexvar ] , eax je hexvar mov eax , dword ptr [ eax + num ] sub esp , num mov dword ptr [ esi + num ] , eax lea eax , [ esi + hexvar ] push eax push esi push hexvar call hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi ret
ldr r3 , [ r1 , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r3 , num cmpne r3 , num moveq r3 , num movne r3 , num cmp r2 , num cmpne r2 , num beq hexvar ldr r2 , [ r0 , hexvar ] cmp r3 , num and r2 , r2 , hexvar beq hexvar cmp r2 , hexvar beq hexvar mov r0 , num bx lr cmp r3 , num bne hexvar ldr r3 , [ r1 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar mvn r0 , num bx lr ldr r3 , [ r1 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar cmp r2 , hexvar beq hexvar ldr r1 , [ r1 ] ldr r0 , [ r0 ] b hexvar
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar ldrb r3 , [ fp , - num ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar mvn r3 , num b hexvar ldrb r3 , [ fp , - num ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx mov ebx , dword ptr [ edx + hexvar ] cmp dword ptr [ edx + hexvar ] , ebx jle hexvar mov edi , dword ptr [ edx + num ] cmp dword ptr [ edx + hexvar ] , num mov ebp , ecx movzx esi , byte ptr [ edi + ebx ] mov ecx , esi mov byte ptr [ eax ] , cl jle hexvar cmp ebx , dword ptr [ edx + hexvar ] je hexvar mov ecx , dword ptr [ edx + num ] cmp dword ptr [ ecx + ebx * num ] , - num je hexvar mov ecx , esi cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp cl , hexvar jne hexvar mov byte ptr [ eax + num ] , hexvar mov eax , num jmp hexvar nop mov byte ptr [ eax + num ] , num xor eax , eax pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx mov ebx , dword ptr [ edx + hexvar ] cmp dword ptr [ edx + hexvar ] , ebx jle hexvar mov edi , dword ptr [ edx + num ] cmp dword ptr [ edx + hexvar ] , num mov ebp , ecx movzx esi , byte ptr [ edi + ebx ] mov ecx , esi mov byte ptr [ eax ] , cl jle hexvar cmp ebx , dword ptr [ edx + hexvar ] je hexvar mov ecx , dword ptr [ edx + num ] cmp dword ptr [ ecx + ebx * num ] , - num je hexvar mov ecx , esi cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp cl , hexvar jne hexvar mov byte ptr [ eax + num ] , hexvar mov eax , num jmp hexvar nop mov byte ptr [ eax + num ] , num xor eax , eax pop ebx pop esi pop edi pop ebp ret
lw v1 , hexvar ( a1 ) lw v0 , hexvar ( a1 ) sltu v0 , v1 , v0 beqz v0 , hexvar nop lw t0 , num ( a1 ) lw a3 , hexvar ( a1 ) addu v0 , t0 , v1 slti a3 , a3 , num lbu v0 , ( v0 )
push ebp push edi push esi push ebx mov ebx , dword ptr [ edx + hexvar ] cmp dword ptr [ edx + hexvar ] , ebx jle hexvar mov edi , dword ptr [ edx + num ] cmp dword ptr [ edx + hexvar ] , num mov ebp , ecx movzx esi , byte ptr [ edi + ebx ] mov ecx , esi mov byte ptr [ eax ] , cl jle hexvar cmp ebx , dword ptr [ edx + hexvar ] je hexvar mov ecx , dword ptr [ edx + num ] cmp dword ptr [ ecx + ebx * num ] , - num je hexvar mov ecx , esi cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar cmp cl , hexvar jne hexvar mov byte ptr [ eax + num ] , hexvar mov eax , num jmp hexvar nop mov byte ptr [ eax + num ] , num xor eax , eax pop ebx pop esi pop edi pop ebp ret
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , num mov rsi , qword ptr [ rdi + num ] cmp qword ptr [ rdi ] , rsi je hexvar mov rax , qword ptr [ rdi + hexvar ] lea rdx , [ rsi + num ] mov qword ptr [ rbx + num ] , rdx mov qword ptr [ rax + rsi * num ] , rbp mov eax , num add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar lw v0 , ( a0 ) lui gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) lw a1 , num ( a0 ) beq v0 , a1 , hexvar lw a0 , num ( a0 ) sll v0 , a1 , num addiu a1 , a1 , num addu a0 , a0 , v0 addiu v0 , zero , num sw a1 , num ( s0 ) sw s1 , ( a0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a1 , a1 , num lw t9 , - hexvar ( gp ) sll v0 , a1 , num sll a1 , a1 , num jalr t9 sw v0 , ( s0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] add eax , num shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] shl ecx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ edx + num ] mov edi , esi add edi , num mov dword ptr [ edx + num ] , edi mov dword ptr [ ecx + esi * num ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] add eax , num shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] shl ecx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ edx + num ] mov edi , esi add edi , num mov dword ptr [ edx + num ] , edi mov dword ptr [ ecx + esi * num ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rbp - num ] cmp dword ptr [ rsi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rdi , rax lea rsi , [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar lea rcx , [ rbp - hexvar ] mov rdi , rax mov rsi , rcx mov edx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov rdi , qword ptr [ rbp - num ] lea rsi , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rbp - num ] cmp dword ptr [ rsi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rdi , rax lea rsi , [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar lea rcx , [ rbp - hexvar ] mov rdi , rax mov rsi , rcx mov edx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov rdi , qword ptr [ rbp - num ] lea rsi , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rbp - num ] cmp dword ptr [ rsi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rdi , rax lea rsi , [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar lea rcx , [ rbp - hexvar ] mov rdi , rax mov rsi , rcx mov edx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov rdi , qword ptr [ rbp - num ] lea rsi , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rbp - num ] cmp dword ptr [ rsi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rdi , rax lea rsi , [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar lea rcx , [ rbp - hexvar ] mov rdi , rax mov rsi , rcx mov edx , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov rdi , qword ptr [ rbp - num ] lea rsi , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , qword ptr [ rbp - num ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s7 , hexvar ( sp ) move s7 , a1 sw s6 , hexvar ( sp ) move s6 , a0 sw s5 , hexvar ( sp ) sw s2 , hexvar ( sp ) lui s2 , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s4 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s3 , hexvar ( sp ) move s5 , v0 lw v0 , - hexvar ( s1 ) lw gp , hexvar ( sp ) lw v1 , ( s5 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , lr } ldr r5 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r5 ] add r4 , sp , num mov r7 , r2 mov r2 , r4 str r3 , [ sp , hexvar ] bl hexvar sub r4 , r0 , r4 rsb r4 , r4 , hexvar ldr r6 , [ pc , hexvar ] cmp r4 , r7 mov r1 , r0 ldrhs r3 , [ r6 , num ] bhs hexvar ldr ip , [ r6 , num ] mov lr , hexvar mov r3 , ip add r2 , r7 , ip sub r2 , r2 , r4 strb lr , [ r3 ] , num cmp r3 , r2 bne hexvar sub r3 , r7 , r4 add r3 , ip , r3 mov r2 , r4 mov r0 , r3 bl hexvar ldr r1 , [ sp , hexvar ] ldr r2 , [ r5 ] add ip , r0 , r4 cmp r1 , r2 str ip , [ r6 , num ] bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc } andeq r0 , r0 , r0 , lsr r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] lea esi , [ ebp - hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , esi mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub eax , ecx mov ecx , hexvar sub ecx , eax sub ecx , num mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov eax , dword ptr [ hexvar ] mov ecx , eax add ecx , num mov dword ptr [ hexvar ] , ecx mov byte ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] lea rsi , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] sub rsi , rax add rsi , hexvar mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] add rdx , qword ptr [ hexvar ] mov qword ptr [ hexvar ] , rdx add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] lea esi , [ ebp - hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , esi mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub eax , ecx mov ecx , hexvar sub ecx , eax sub ecx , num mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov eax , dword ptr [ hexvar ] mov ecx , eax add ecx , num mov dword ptr [ hexvar ] , ecx mov byte ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r4 , [ pc , hexvar ] cmp r1 , num mov r7 , r0 mov r5 , r2 mov r8 , r3 ldrb r0 , [ r4 , hexvar ] beq hexvar cmp r0 , num ldr sb , [ r7 , num ] bne hexvar mov r7 , r0 cmp r5 , num beq hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ r5 , hexvar ] ldr r2 , [ r5 , hexvar ] add r3 , r0 , num cmp r2 , r3 blo hexvar mov r2 , num ldr r1 , [ pc , hexvar ] bl hexvar ldr r3 , [ r5 , hexvar ] add r3 , r3 , num str r3 , [ r5 , hexvar ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r4 , hexvar ] ldr r0 , [ r3 ] mov r1 , sb mov r3 , num bl hexvar ldr r3 , [ r4 , hexvar ] ldrb r2 , [ r4 , hexvar ] add r3 , r3 , r0 cmp r2 , num mov r6 , r0 str r3 , [ r4 , hexvar ] beq hexvar ldr r0 , [ r5 , hexvar ] ldr r2 , [ r5 , hexvar ] add r3 , r0 , num cmp r2 , r3 blo hexvar mov r2 , num ldr r1 , [ pc , hexvar ] bl hexvar ldr r3 , [ r5 , hexvar ] add r3 , r3 , num str r3 , [ r5 , hexvar ] bl hexvar cmp r7 , num bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp push edi mov ebp , eax push esi push ebx mov esi , edx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] lea edi , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar nop lea esi , [ esi ] cmp al , hexvar je hexvar jle hexvar cmp al , hexvar je hexvar cmp al , hexvar jne hexvar lea eax , [ ebx - hexvar ] sub esp , num nop push eax push num push esi call hexvar add esp , hexvar test eax , eax js hexvar add ebp , num movzx eax , byte ptr [ ebp - num ] test al , al je hexvar cmp al , hexvar je hexvar jg hexvar cmp al , num je hexvar cmp al , hexvar je hexvar cmp al , num je hexvar lea edx , [ eax - hexvar ] cmp dl , hexvar ja hexvar sub esp , num push esi push eax call hexvar add esp , hexvar cmp eax , - num jne hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 move s5 , a2 beqz a1 , hexvar move s3 , a3 lui v0 , hexvar lbu v0 , - hexvar ( v0 ) bnez v0 , hexvar lw s4 , num ( a0 )
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , num nop dword ptr [ rax ] add rbx , num movzx ecx , byte ptr [ rbx - num ] test cl , cl je hexvar cmp cl , hexvar je hexvar jle hexvar cmp cl , hexvar je hexvar jle hexvar cmp cl , hexvar je hexvar cmp cl , hexvar jne hexvar mov rcx , rbp add rbx , num mov edx , num mov esi , num mov edi , hexvar call hexvar movzx ecx , byte ptr [ rbx - num ] test cl , cl jne hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax sete al pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , esp mov edi , esi add edi , - hexvar mov esp , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , ebx mov eax , dword ptr [ eax - hexvar ] mov dword ptr [ edx - hexvar ] , eax mov eax , dword ptr [ ecx - hexvar ] mov dword ptr [ esi - hexvar ] , eax mov eax , dword ptr [ edx - hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esi - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] xor eax , edx xor ecx , esi or ecx , eax sete al mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar lea eax , [ eax + hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
call hexvar add edx , hexvar mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] lea edx , [ edx + hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ esp + num ] jmp hexvar lea esi , [ esi ] lea edi , [ edi ]
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
lw v0 , hexvar ( a0 ) lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v1 , ( v0 )
push r15 push r14 push r13 push r12 mov r13 , rdi push rbp push rbx add rdi , hexvar mov rbx , rsi mov r12 , rdx sub rsp , hexvar mov rax , qword ptr [ rdi ] mov dword ptr [ rsp + hexvar ] , ecx mov r14d , dword ptr [ rax + hexvar ] call hexvar mov rbp , rax mov rax , qword ptr [ r13 + hexvar ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , rbp mov r15 , rax call hexvar mov rdi , r12 mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rcx , qword ptr [ rsp + hexvar ] lea rdi , [ rcx + r15 + hexvar ] mov r15 , qword ptr [ rsp + hexvar ] add r15 , rdi lea rdi , [ r15 + rax ] call hexvar mov r15 , rax mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar jb hexvar cmp eax , num jne hexvar lea rdx , [ rip + hexvar ] mov rax , qword ptr [ r13 + hexvar ] sub rsp , num lea rcx , [ rip + hexvar ] push r12 push rbp mov r9 , rbx push rdx mov esi , num mov rdx , - num mov r8 , qword ptr [ rax + hexvar ] mov rdi , r15 xor eax , eax call hexvar mov rax , qword ptr [ r13 + hexvar ] add rsp , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ r13 + hexvar ] test r14d , r14d mov qword ptr [ rax + hexvar ] , r15 je hexvar mov dword ptr [ rax + hexvar ] , num add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 mov r13 , rdi push rbp push rbx add rdi , hexvar mov rbx , rsi mov r12 , rdx sub rsp , hexvar mov rax , qword ptr [ rdi ] mov dword ptr [ rsp + hexvar ] , ecx mov r14d , dword ptr [ rax + hexvar ] call hexvar mov rbp , rax mov rax , qword ptr [ r13 + hexvar ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , rbp mov r15 , rax call hexvar mov rdi , r12 mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rcx , qword ptr [ rsp + hexvar ] lea rdi , [ rcx + r15 + hexvar ] mov r15 , qword ptr [ rsp + hexvar ] add r15 , rdi lea rdi , [ r15 + rax ] call hexvar mov r15 , rax mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar jb hexvar cmp eax , num jne hexvar lea rdx , [ rip + hexvar ] mov rax , qword ptr [ r13 + hexvar ] sub rsp , num lea rcx , [ rip + hexvar ] push r12 push rbp mov r9 , rbx push rdx mov esi , num mov rdx , - num mov r8 , qword ptr [ rax + hexvar ] mov rdi , r15 xor eax , eax call hexvar mov rax , qword ptr [ r13 + hexvar ] add rsp , hexvar mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ r13 + hexvar ] test r14d , r14d mov qword ptr [ rax + hexvar ] , r15 je hexvar mov dword ptr [ rax + hexvar ] , num add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esi + hexvar ] call hexvar mov edi , eax mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar pop ecx mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp ] , edi mov ebp , eax call hexvar pop edx mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] call hexvar mov ecx , dword ptr [ esp + hexvar ] lea edx , [ ecx + ebp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] add ebp , edx add eax , ebp mov dword ptr [ esp ] , eax call hexvar add esp , hexvar mov ebp , eax cmp dword ptr [ esp + hexvar ] , num je hexvar jb hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] push edi push eax mov eax , dword ptr [ esi + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] lea eax , [ ebx - hexvar ] push eax push - num push num push ebp call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esi + hexvar ] test edx , edx mov dword ptr [ eax + hexvar ] , ebp je hexvar mov dword ptr [ eax + hexvar ] , num add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num sete bl and bl , num movzx eax , bl add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar test eax , eax sete al add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar cmp dword ptr [ ebp + num ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ ebx + hexvar ] test eax , eax sete cl test esi , esi sete dl or cl , dl mov ebp , ecx jne hexvar mov edi , eax test esi , esi je hexvar sub esp , num push dword ptr [ esi ] push edi call hexvar add esp , hexvar test eax , eax je hexvar mov esi , dword ptr [ esi + num ] test esi , esi jne hexvar jmp hexvar mov ebp , num mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui v0 , hexvar lui gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( v0 ) beqz s0 , hexvar lw ra , hexvar ( sp ) beqz a0 , hexvar move s1 , a0 lw t9 , - hexvar ( gp ) move a0 , s1 jalr t9 lw a1 , ( s0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw s0 , num ( s0 ) bnez s0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) move v0 , zero lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] sub esp , num push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
mov rdx , qword ptr [ rsi ] cmp qword ptr [ rdi ] , rdx mov eax , num ja hexvar jb hexvar mov rcx , qword ptr [ rsi + num ] cmp qword ptr [ rdi + num ] , rcx ja hexvar sbb eax , eax ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi ] mov rdi , qword ptr [ rbp - hexvar ] cmp rsi , qword ptr [ rdi ] jbe hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx ] jae hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + num ] jbe hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + num ] jae hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
ldr r2 , [ r0 ] ldr r3 , [ r1 ] cmp r2 , r3 bhi hexvar blo hexvar ldr r2 , [ r0 , num ] ldr r3 , [ r1 , num ] cmp r2 , r3 bhi hexvar mvnlo r0 , num movhs r0 , num bx lr mov r0 , num bx lr mvn r0 , num bx lr
ldr r2 , [ r0 ] ldr r3 , [ r1 ] cmp r2 , r3 bhi hexvar blo hexvar ldr r2 , [ r0 , num ] ldr r3 , [ r1 , num ] cmp r2 , r3 bhi hexvar mvnlo r0 , num movhs r0 , num bx lr mov r0 , num bx lr mvn r0 , num bx lr
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) move v0 , a3 sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sb zero , hexvar ( fp ) addiu v0 , zero , num sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) andi v0 , v0 , num sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltiu v0 , v0 , num andi v0 , v0 , hexvar move v1 , v0 lw v0 , hexvar ( fp ) slt v0 , v1 , v0 bnez v0 , hexvar nop lw v0 , hexvar ( fp ) bgtz v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , zero move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw v0 , hexvar ( fp ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 sw a2 , hexvar ( fp ) lw s5 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sb zero , hexvar ( fp ) lw v0 , hexvar ( s5 ) lui v1 , hexvar ori v1 , v1 , hexvar and v0 , v0 , v1 sltiu v1 , a2 , num slt v1 , v1 , a0 beqz v1 , hexvar nop beqz a3 , hexvar sltu v0 , zero , v0 lw v1 , hexvar ( fp ) bnez v1 , hexvar slti v1 , a0 , num beqz v1 , hexvar lui v1 , hexvar ori v1 , v1 , hexvar addu v1 , a0 , v1 sll v1 , v1 , num addu v1 , a1 , v1 move a3 , v0 addiu a2 , fp , hexvar addiu a1 , fp , hexvar lw a0 , ( v1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sltiu v0 , a2 , num sw fp , hexvar ( sp ) move fp , sp lw v1 , - hexvar ( gp ) slt v0 , v0 , a0 sw s5 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a0 sw v1 , hexvar ( fp ) sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) sb zero , hexvar ( fp ) lw v1 , ( v1 ) lw s5 , hexvar ( fp ) sw v1 , hexvar ( fp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) beqz a3 , hexvar move s6 , a2 bnez a2 , hexvar slti v0 , a0 , num beqz v0 , hexvar sll s1 , a0 , num addiu a2 , fp , hexvar addu s1 , a1 , s1 addiu a1 , fp , hexvar jal hexvar lw a0 , - num ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 sw a2 , hexvar ( fp ) lw s5 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sb zero , hexvar ( fp ) lw v0 , hexvar ( s5 ) lui v1 , hexvar ori v1 , v1 , hexvar and v0 , v0 , v1 sltiu v1 , a2 , num slt v1 , v1 , a0 beqz v1 , hexvar nop beqz a3 , hexvar sltu v0 , zero , v0 lw v1 , hexvar ( fp ) bnez v1 , hexvar slti v1 , a0 , num beqz v1 , hexvar lui v1 , hexvar ori v1 , v1 , hexvar addu v1 , a0 , v1 sll v1 , v1 , num addu v1 , a1 , v1 move a3 , v0 addiu a2 , fp , hexvar addiu a1 , fp , hexvar lw a0 , ( v1 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar call hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , hexvar sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a3 sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , - hexvar ( s0 ) lw s4 , hexvar ( sp ) beqz v0 , hexvar lw s6 , hexvar ( sp ) lw ra , hexvar ( sp ) move a3 , s5 lw s7 , hexvar ( sp ) move a2 , s3 lw s5 , hexvar ( sp ) move a1 , s2 lw s3 , hexvar ( sp ) move a0 , s1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw t9 , num ( v0 ) jr t9 addiu sp , sp , hexvar lui s7 , hexvar lw t9 , - hexvar ( gp ) addiu a3 , zero , hexvar addiu a2 , s7 , hexvar addiu a1 , zero , num bal hexvar addiu a0 , zero , num lw v0 , - hexvar ( s0 ) bnez v0 , hexvar lw gp , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , - hexvar ( s0 ) lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test edx , edx mov dword ptr [ esp ] , eax mov eax , dword ptr [ esp + hexvar ] je hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp ] mov dword ptr [ esp + hexvar ] , ebp mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ edx + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp jmp eax nop mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ ebx - hexvar ] push hexvar mov dword ptr [ esp + num ] , eax push eax push num push num call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar mov ecx , dword ptr [ esp + num ] test eax , eax mov eax , dword ptr [ esp + hexvar ] jne hexvar lea edx , [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + num ] , ecx push hexvar push dword ptr [ esp + num ] push num push hexvar call hexvar add esp , hexvar mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + num ] jmp hexvar lea esi , [ esi ] lea edi , [ edi ]
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r9 mov r15 , r8 mov r12 , rcx mov r13 , rdx mov rbx , rsi mov ebp , edi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , hexvar mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edi , ebp mov rsi , rbx mov rdx , r13 mov rcx , r12 mov r8 , r15 mov r9 , r14 add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp jmp rax nop dword ptr [ rax + rax ]
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] sub ecx , hexvar setne dl movzx esi , dl cmp esi , num mov dword ptr [ rbp - hexvar ] , ecx jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rdi cmp qword ptr [ rdx ] , num setb r8b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , dword ptr [ rcx ] sub edx , hexvar setne sil movzx edi , sil cmp edi , num sete sil mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] sub ecx , hexvar setne dl movzx esi , dl cmp esi , num mov dword ptr [ rbp - hexvar ] , ecx jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rdi cmp qword ptr [ rdx ] , num setb r8b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , dword ptr [ rcx ] sub edx , hexvar setne sil movzx edi , sil cmp edi , num sete sil mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi cmp edx , num je hexvar cmp edx , num je hexvar cmp edx , num jne hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar jmp hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar mov rcx , rsi mov rdx , qword ptr [ rip + hexvar ] mov esi , num mov rdi , qword ptr [ rip + hexvar ] call hexvar jmp hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar mov rcx , rsi mov rdx , qword ptr [ rip + hexvar ] mov esi , num mov rdi , qword ptr [ rip + hexvar ] call hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rcx , rbp mov esi , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rdx , qword ptr [ rbx + num ] mov rdi , qword ptr [ rbx + hexvar ] mov rcx , rbp mov esi , num call hexvar jmp hexvar mov rdx , qword ptr [ rip + hexvar ] jmp hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar jmp hexvar add rsp , num pop rbx pop rbp ret
push ebp push edi push esi push ebx call hexvar add esi , hexvar sub esp , hexvar mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov ebp , ebx or ebp , ecx jne hexvar movzx edx , byte ptr [ esi + hexvar ] xor edx , num test dl , dl jne hexvar mov edi , eax mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] mov ebx , esi push dword ptr [ eax ] push dword ptr [ edi + num ] push num push dword ptr [ edi + num ] call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi cmp edx , num je hexvar cmp edx , num je hexvar cmp edx , num jne hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar jmp hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rsi + hexvar ] cmp rax , qword ptr [ rsi + hexvar ] jb hexvar mov esi , num mov rdi , rbp call hexvar jmp hexvar lea rdx , [ rax + num ] mov qword ptr [ rsi + hexvar ] , rdx mov byte ptr [ rax ] , num jmp hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rsi + hexvar ] cmp rax , qword ptr [ rsi + hexvar ] jb hexvar mov esi , num mov rdi , rbp call hexvar jmp hexvar lea rdx , [ rax + num ] mov qword ptr [ rsi + hexvar ] , rdx mov byte ptr [ rax ] , num cmp byte ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rbp + hexvar ] cmp rax , qword ptr [ rbp + hexvar ] jb hexvar mov esi , num mov rdi , rbp call hexvar jmp hexvar lea rdx , [ rax + num ] mov qword ptr [ rbp + hexvar ] , rdx mov byte ptr [ rax ] , num mov rdx , qword ptr [ rbx + num ] mov rdi , qword ptr [ rbx + hexvar ] mov rcx , rbp mov esi , num call hexvar add rsp , num pop rbx pop rbp ret
test rdx , rdx jne hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al jne hexvar mov ecx , dword ptr [ rip + hexvar ] push rbx mov rbx , rdi test ecx , ecx je hexvar mov rdx , qword ptr [ rbx + num ] mov rdi , qword ptr [ rbx + hexvar ] mov esi , num pop rbx mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] test sil , sil jne hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar ret nop dword ptr [ rax ] movzx eax , byte ptr [ rip + hexvar ] xor eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] add rdx , num mov edi , num call hexvar jmp hexvar nop
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar lui s0 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , - hexvar ( s0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a1 , s0 , - hexvar jalr t9 move a0 , zero lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , zero lw ra , hexvar ( sp ) addiu a1 , a1 , - hexvar lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbx sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov ebx , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , ebx cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov esi , hexvar xor edi , edi call hexvar mov esi , hexvar xor edi , edi call hexvar mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx ret
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r12 , rdi call hexvar mov r14 , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , num mov rdx , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar test eax , eax js hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov r15d , eax xor ebx , ebx nop dword ptr [ rax + rax ] lea esi , [ r15 + rbx ] mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] call hexvar mov r13 , qword ptr [ rax + num ] lea rdi , [ r13 + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , r14 mov rsi , r13 call hexvar test eax , eax je hexvar add ebx , num cmp ebx , dword ptr [ rsp + hexvar ] jl hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar xor r14d , r14d mov rax , r14 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r12 , rdi call hexvar mov r14 , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , num mov rdx , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar test eax , eax js hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov r15d , eax xor ebx , ebx nop dword ptr [ rax + rax ] lea esi , [ r15 + rbx ] mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] call hexvar mov r13 , qword ptr [ rax + num ] lea rdi , [ r13 + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , r14 mov rsi , r13 call hexvar test eax , eax je hexvar add ebx , num cmp ebx , dword ptr [ rsp + hexvar ] jl hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar xor r14d , r14d mov rax , r14 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r12 , rdi call hexvar mov r14 , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , num mov rdx , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar test eax , eax js hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov r15d , eax xor ebx , ebx nop word ptr cs : [ rax + rax ] nop lea esi , [ r15 + rbx ] mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] call hexvar mov r13 , qword ptr [ rax + num ] lea rdi , [ r13 + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , r14 mov rsi , r13 call hexvar test eax , eax je hexvar add ebx , num cmp ebx , dword ptr [ rsp + hexvar ] jl hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar xor r14d , r14d mov rax , r14 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r12 , rdi call hexvar mov r14 , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , num mov rdx , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar test eax , eax js hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov r15d , eax xor ebx , ebx nop dword ptr [ rax + rax ] lea esi , [ r15 + rbx ] mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] call hexvar mov r13 , qword ptr [ rax + num ] lea rdi , [ r13 + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , r14 mov rsi , r13 call hexvar test eax , eax je hexvar add ebx , num cmp ebx , dword ptr [ rsp + hexvar ] jl hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar xor r14d , r14d mov rax , r14 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push rbx cmp esi , hexvar jl hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx ret
push rbx cmp esi , hexvar jl hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar lui v0 , hexvar slt v0 , a1 , v0 beqz v0 , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , hexvar ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar lui v0 , hexvar addiu gp , gp , hexvar slt v0 , a1 , v0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rax , rdi sub rax , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
sltiu v0 , a0 , hexvar beqz v0 , hexvar move v0 , zero sll v0 , a0 , num lui a0 , hexvar addiu a0 , a0 , hexvar addu a0 , a0 , v0 lw v0 , ( a0 ) jr v0 nop lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rax , rdi sub rax , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , hexvar ja hexvar mov edx , dword ptr [ ebp + num ] shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 lw a0 , ( a0 )
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , edi push esi push dword ptr [ ebp ] call hexvar xor eax , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] add esp , hexvar xor edx , edx push edx push esi push ebx mov ebx , edi mov ecx , eax push ecx call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx + num ] mov ecx , dword ptr [ ecx + num ] mov esi , eax not esi and esi , hexvar and eax , hexvar mov edi , ecx not edi mov ebx , edx not ebx and ebx , hexvar and edi , hexvar and edx , hexvar and ecx , hexvar or esi , eax or edi , ecx or ebx , edx xor esi , ebx xor edi , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + num ] , edi mov dword ptr [ ecx ] , esi mov dword ptr [ ecx + hexvar ] , num call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num mov rdi , qword ptr [ rdi ] call hexvar xor rax , qword ptr [ rbp + num ] xor edx , edx add rsp , num div rbx pop rbx pop rbp mov rax , rdx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , lr } mov r4 , r0 bl hexvar adds r4 , r4 , num movne r4 , num cmp r0 , num movne r4 , num cmp r4 , num popeq { r4 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbx mov rbx , rdi call hexvar test rax , rax jne hexvar test rbx , rbx jne hexvar pop rbx ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov dword ptr [ esp + num ] , num test eax , eax je hexvar sub esp , num push esi lea edx , [ esp + hexvar ] push edx push eax call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar test edx , edx je hexvar mov dword ptr [ esp + num ] , edx push esi push eax lea eax , [ esp + hexvar ] push eax push num call hexvar mov esi , eax add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar add r3 , sp , hexvar ldr r2 , [ sp , hexvar ] mov r1 , r3 ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r1 , sp , hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] mov r0 , num bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) sw zero , hexvar ( sp ) lw v1 , ( s0 ) sw v1 , hexvar ( sp ) beqz a1 , hexvar lw t9 , - hexvar ( gp ) move v0 , a1 addiu a1 , sp , hexvar move a2 , a0 move s1 , a0 bal hexvar move a0 , v0 lw v1 , hexvar ( sp ) beqz v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , sp , hexvar move a0 , zero sw v1 , hexvar ( sp ) move a3 , s1 bal hexvar move a2 , v0 lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar bal - hexvar addiu a0 , zero , hexvar move v0 , zero b hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar add r3 , sp , hexvar ldr r2 , [ sp , hexvar ] mov r1 , r3 ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r1 , sp , hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] mov r0 , num bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmn r3 , num moveq r3 , num movne r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , - num sete cl and cl , num movzx edx , cl mov dword ptr [ ebp - num ] , eax mov eax , edx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , - num sete cl and cl , num movzx edx , cl mov dword ptr [ ebp - num ] , eax mov eax , edx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , - num sete cl and cl , num movzx edx , cl mov dword ptr [ ebp - num ] , eax mov eax , edx add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp byte ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + ecx ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar movzx eax , byte ptr [ edi ] mov esi , edi cmp al , hexvar jne hexvar nop lea esi , [ esi ] add esi , num movzx eax , byte ptr [ esi ] cmp al , hexvar je hexvar test al , al je hexvar mov edx , esi xor ecx , ecx jmp hexvar lea esi , [ esi ] test cl , cl je hexvar mov esi , edx xor ecx , ecx add edx , num movzx eax , byte ptr [ edx ] test al , al je hexvar cmp al , hexvar jne hexvar add edx , num movzx eax , byte ptr [ edx ] mov ecx , num test al , al jne hexvar cmp byte ptr [ esi ] , num je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar cmp eax , num jbe hexvar cmp byte ptr [ esi + eax - num ] , hexvar lea edx , [ eax - num ] je hexvar xor edx , edx cmp byte ptr [ esi + eax ] , hexvar sete dl sub esp , num add eax , edx push eax push esi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbp push rbx sub rsp , num mov rbp , rdi call hexvar cmp byte ptr [ rax ] , num je hexvar mov rbx , rax mov rdi , rax call hexvar cmp byte ptr [ rbx + rax ] , hexvar sete dl movzx edx , dl add rax , rdx mov rsi , rax mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 lb v0 , ( v0 ) beqz v0 , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) addu v1 , s0 , v0 lb a0 , ( v1 ) addiu v1 , zero , hexvar beq a0 , v1 , hexvar nop move a1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a1 , v0 move a0 , s1 lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a3 sw s3 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) beqz a2 , hexvar lw s5 , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , zero , hexvar move s0 , a2 jalr t9 move s6 , a0 move a3 , s0 sw s5 , hexvar ( sp ) move a2 , s3 sw s4 , hexvar ( sp ) move a1 , v0 move a0 , s6 jal hexvar move s2 , v0 lw gp , hexvar ( sp ) beqz s2 , hexvar move s1 , v0 lw ra , hexvar ( sp ) move v0 , s1 lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz v0 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , hexvar jalr t9 move a0 , s6 beqz v0 , hexvar move a3 , s0 sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) move a2 , s3 move a1 , v0 jal hexvar move a0 , s6 bnez v0 , hexvar lw ra , hexvar ( sp ) b hexvar move s1 , zero move a3 , zero sw s5 , hexvar ( sp ) move a1 , zero sw s4 , hexvar ( sp ) jal hexvar move a2 , s3 lw ra , hexvar ( sp ) move s1 , v0 move v0 , s1 lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + num ] , rsi mov r14 , rcx mov r15 , r8 test rdx , rdx je hexvar mov r12 , rdx mov esi , hexvar call hexvar mov r13 , rax mov r9 , r15 mov r8 , r14 mov rcx , r12 mov rdx , qword ptr [ rsp + num ] mov rsi , rax mov rdi , rbx call hexvar mov rbp , rax test r13 , r13 jne hexvar test rax , rax je hexvar mov esi , hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov r9 , r15 mov r8 , r14 mov rcx , r12 mov rdx , qword ptr [ rsp + num ] mov rsi , rax mov rdi , rbx call hexvar test rax , rax mov eax , num cmove rbp , rax jmp hexvar mov r9 , r8 mov r8 , rcx mov ecx , num mov rdx , qword ptr [ rsp + num ] mov esi , num call hexvar mov rbp , rax mov rax , rbp add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar jmp hexvar mov eax , num mov qword ptr [ rbp - hexvar ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar test rax , rax jne hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] leave ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } subs r6 , r2 , num sub sp , sp , num mov r7 , r1 mov r8 , r3 ldr sb , [ sp , hexvar ] beq hexvar mov r1 , hexvar mov r5 , r0 bl hexvar stm sp , { r8 , sb } mov sl , r0 mov r1 , r0 mov r3 , r6 mov r2 , r7 mov r0 , r5 bl hexvar cmp sl , num mov r4 , r0 bne hexvar cmp r0 , num beq hexvar mov r1 , hexvar mov r0 , r5 bl hexvar subs r1 , r0 , num beq hexvar stm sp , { r8 , sb } mov r3 , r6 mov r2 , r7 mov r0 , r5 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar xor ecx , ecx mov ah , cl test al , num mov byte ptr [ ebp - hexvar ] , ah jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] xor eax , eax mov ecx , eax mov dword ptr [ rbp - hexvar ] , eax call hexvar movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov al , cl mov byte ptr [ rbp - hexvar ] , al jmp rdx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp rdx mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar xor ecx , ecx mov ah , cl test al , num mov byte ptr [ ebp - hexvar ] , ah jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar xor ecx , ecx mov ah , cl test al , num mov byte ptr [ ebp - hexvar ] , ah jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num setl bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jge hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , ( v0 )
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov ecx , esp lea edx , [ ebp - hexvar ] mov dword ptr [ ecx + num ] , edx mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] add r3 , sp , hexvar ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] mov r1 , hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a2 , hexvar ( sp ) addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu v0 , zero , num lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov ebp , edx mov rbx , rsi mov r14 , rdi mov qword ptr [ rsp + num ] , num call hexvar mov r12 , rax movsxd rdx , ebp lea rdi , [ rsp + num ] mov rsi , rbx call hexvar xor ebp , ebp test rax , rax je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov r15d , eax mov rdi , qword ptr [ rsp + num ] call hexvar test r12 , r12 jne hexvar call hexvar mov r12 , rax mov rdi , r14 mov esi , hexvar mov rdx , rax call hexvar test eax , eax je hexvar mov rdi , r12 mov esi , r15d call hexvar xor ebp , ebp test eax , eax setne bpl mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a0 , sp , hexvar lw gp , hexvar ( sp ) move s1 , v0 lw a2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a1 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( sp ) lw gp , hexvar ( sp ) move s3 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( sp ) beqz s1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s3 jalr t9 move a0 , s1 lw gp , hexvar ( sp ) b hexvar sltu v0 , zero , v0 lw t9 , - hexvar ( gp ) jalr t9 nop addiu a1 , zero , hexvar lw gp , hexvar ( sp ) move a2 , v0 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
cmp dword ptr [ rdi ] , num jne hexvar mov rax , qword ptr [ rdi + num ] mov qword ptr [ rax + hexvar ] , rsi mov qword ptr [ rax + hexvar ] , rdx mov eax , num ret
lw v1 , ( a0 ) addiu v0 , zero , num bne v1 , v0 , hexvar addiu v0 , zero , num lw v1 , num ( a0 ) sw a1 , hexvar ( v1 ) jr ra sw a2 , hexvar ( v1 ) lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a3 , hexvar addiu v0 , zero , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a3 , a3 , hexvar sw v0 , hexvar ( sp ) addiu a2 , zero , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar move v0 , zero lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] cmp edx , num je hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx add esp , num mov eax , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + num ] , hexvar jne hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mulsd xmm2 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mulsd xmm1 , qword ptr [ rax + hexvar ] addsd xmm2 , xmm1 mov rax , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rax + hexvar ] addsd xmm2 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm1 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm1 mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movaps xmm0 , xmm1 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + num ] , hexvar jne hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mulsd xmm2 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mulsd xmm1 , qword ptr [ rax + hexvar ] addsd xmm2 , xmm1 mov rax , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rax + hexvar ] addsd xmm2 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm1 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm1 mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movaps xmm0 , xmm1 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + num ] , hexvar jne hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] movsd xmm2 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mulsd xmm2 , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mulsd xmm1 , qword ptr [ rax + hexvar ] addsd xmm2 , xmm1 mov rax , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rax + hexvar ] addsd xmm2 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm1 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm1 mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movaps xmm0 , xmm1 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm2 addsd xmm1 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rax + hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] mulsd xmm0 , xmm2 addsd xmm0 , xmm1 movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movq xmm0 , rax call hexvar movq rax , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movq xmm3 , rax mulsd xmm3 , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm3 mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movq xmm0 , rax call hexvar movq rax , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movq xmm4 , rax mulsd xmm4 , xmm0 movapd xmm0 , xmm4 addsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movq xmm0 , rax call hexvar movq rax , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movq xmm6 , rax mulsd xmm6 , xmm0 movapd xmm0 , xmm6 addsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rbp - num ] , xmm0 movsd xmm0 , qword ptr [ rbp - num ] movq rax , xmm0 movq xmm0 , rax leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ecx ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] xor edx , eax mov eax , dword ptr [ ebp - hexvar ] xor eax , ecx or eax , edx sete bl and bl , num movzx ecx , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea esi , [ ebx + hexvar ] cmp byte ptr [ esi + hexvar ] , num je hexvar call hexvar call hexvar mov byte ptr [ esi + hexvar ] , num add esp , num pop ebx pop esi ret
push ebp mov ebp , esp sub esp , num test byte ptr [ hexvar ] , num je hexvar call hexvar mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ hexvar ] , num add esp , num pop ebp ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rax , qword ptr [ rbx ] cmp rax , hexvar je hexvar cmp rax , hexvar jne hexvar cmp byte ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar lea rsi , [ rbx + hexvar ] lea rdi , [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar pop rbx ret
push ebx sub esp , num call hexvar add ebx , hexvar lea eax , [ ebx + hexvar ] cmp byte ptr [ eax + hexvar ] , num jne hexvar add esp , num pop ebx ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r5 , [ r1 , hexvar ] cmp r5 , num beq hexvar mov r8 , r1 ldr r7 , [ pc , hexvar ] mov r6 , hexvar b hexvar ldrb r3 , [ r8 , num ] lsr r3 , r3 , num and r3 , r3 , num str r3 , [ sp ] mov r3 , num mov r2 , r3 mov r1 , r4 mov r0 , r5 bl hexvar str r0 , [ sp , hexvar ] cmp r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] add r3 , r3 , r3 , lsl num add r0 , r0 , r3 , lsl num str r0 , [ sp , hexvar ] b hexvar bl hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num beq hexvar mov r2 , r6 mov r1 , r7 ldr r0 , [ r4 ] bl hexvar cmp r0 , num bne hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num bne hexvar str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r2 , sp , hexvar mov r1 , r4 mov r0 , r8 bl hexvar ldr r0 , [ sp , hexvar ] cmp r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r0 , r3 bne hexvar b hexvar ldr r5 , [ r5 , hexvar ] cmp r5 , num beq hexvar ldr r3 , [ r5 , num ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ r5 , hexvar ] cmp r3 , num beq hexvar ldrh r3 , [ r3 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar mov r2 , r5 mov r1 , r8 add r0 , sp , hexvar bl hexvar cmp r0 , num beq hexvar ldr r4 , [ r5 , hexvar ] cmp r4 , num bne hexvar b hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc } blvs hexvar andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r5 , [ r1 , hexvar ] cmp r5 , num beq hexvar mov r8 , r1 ldr r7 , [ pc , hexvar ] mov r6 , hexvar b hexvar ldrb r3 , [ r8 , num ] lsr r3 , r3 , num and r3 , r3 , num str r3 , [ sp ] mov r3 , num mov r2 , r3 mov r1 , r4 mov r0 , r5 bl hexvar str r0 , [ sp , hexvar ] cmp r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] add r3 , r3 , r3 , lsl num add r0 , r0 , r3 , lsl num str r0 , [ sp , hexvar ] b hexvar bl hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num beq hexvar mov r2 , r6 mov r1 , r7 ldr r0 , [ r4 ] bl hexvar cmp r0 , num bne hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num bne hexvar str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r2 , sp , hexvar mov r1 , r4 mov r0 , r8 bl hexvar ldr r0 , [ sp , hexvar ] cmp r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r0 , r3 bne hexvar b hexvar ldr r5 , [ r5 , hexvar ] cmp r5 , num beq hexvar ldr r3 , [ r5 , num ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ r5 , hexvar ] cmp r3 , num beq hexvar ldrh r3 , [ r3 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar mov r2 , r5 mov r1 , r8 add r0 , sp , hexvar bl hexvar cmp r0 , num beq hexvar ldr r4 , [ r5 , hexvar ] cmp r4 , num bne hexvar b hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc } stcl p15 , c8 , [ ip ] , { hexvar } andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw s5 , - hexvar ( gp ) lw s1 , hexvar ( a1 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp + hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , ecx lea ebx , [ ebp + hexvar ] mov dword ptr [ edi ] , ebx mov eax , dword ptr [ eax ] mov edi , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , sp , hexvar sw s0 , hexvar ( sp ) sw a1 , hexvar ( sp ) move a1 , v0 sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal hexvar nop lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp + hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r5 , r1 ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] ldr r0 , [ r4 ] cmp r0 , num beq hexvar mov r1 , r5 blx r6 cmp r0 , num bne hexvar ldr r0 , [ r4 , num ] ! cmp r0 , num bne hexvar pop { r4 , r5 , r6 , pc } ldrpl r3 , [ r2 ] , hexvar andeq r0 , r0 , r0
push edi push esi push ebx call hexvar add eax , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebx ] test eax , eax je hexvar sub esp , num push esi push eax call edi add esp , hexvar test eax , eax jne hexvar add ebx , num mov eax , dword ptr [ ebx ] test eax , eax jne hexvar jmp hexvar mov eax , dword ptr [ ebx ] pop ebx pop esi pop edi ret
push r12 push rbp push rbx mov r12 , rdi mov rbp , rsi mov rbx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar mov rsi , rbp call r12
addiu sp , sp , - hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 lw s0 , - hexvar ( v0 ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw a0 , ( s0 ) beqz a0 , hexvar move s1 , a1 b hexvar move t9 , s2 lw a0 , ( s0 ) beqz a0 , hexvar lw ra , hexvar ( sp ) move t9 , s2 jalr t9 move a1 , s1 beqz v0 , hexvar addiu s0 , s0 , num addiu s0 , s0 , - num lw ra , hexvar ( sp ) lw v0 , ( s0 ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp push edi push esi push ebx mov esi , edx sub esp , hexvar mov ebp , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , ecx lea edx , [ eax + eax * num ] mov eax , dword ptr [ ebp + hexvar ] lea edi , [ eax + edx * num ] mov edx , dword ptr [ edi + num ] test edx , edx jle hexvar mov eax , esi and esi , num xor ebx , ebx and eax , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] lea eax , [ eax + eax * num ] shl eax , num mov dword ptr [ esp + hexvar ] , eax mov eax , num shl eax , cl mov dword ptr [ esp + hexvar ] , eax not eax mov dword ptr [ esp + hexvar ] , eax jmp hexvar nop lea esi , [ esi ] cmp al , num je hexvar cmp al , num je hexvar add ebx , num cmp ebx , edx jge hexvar mov eax , dword ptr [ edi + num ] mov esi , dword ptr [ eax + ebx * num ] mov eax , dword ptr [ ebp ] lea ecx , [ eax + esi * num ] movzx eax , byte ptr [ ecx + num ] cmp al , num jne hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esp + num ] cmp dword ptr [ ecx ] , eax jne hexvar add esp , hexvar mov eax , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp ] , rdx lea rdx , [ rcx + rcx * num ] mov qword ptr [ rsp + num ] , rdi mov dword ptr [ rsp + hexvar ] , esi mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + hexvar ] , r8 lea rax , [ rax + rdx * num ] mov rdx , qword ptr [ rax + num ] mov qword ptr [ rsp + hexvar ] , rax test rdx , rdx je hexvar mov eax , esi movzx ecx , byte ptr [ rsp ] mov qword ptr [ rsp + hexvar ] , num and eax , num mov dword ptr [ rsp + hexvar ] , eax mov eax , esi and eax , num mov dword ptr [ rsp + hexvar ] , eax mov rax , qword ptr [ rsp + hexvar ] lea rax , [ rax + rax * num ] shl rax , num mov qword ptr [ rsp + hexvar ] , rax mov eax , num shl rax , cl mov qword ptr [ rsp + hexvar ] , rax not eax mov word ptr [ rsp + hexvar ] , ax mov rax , qword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + rbx * num ] mov qword ptr [ rsp + hexvar ] , rax shl rax , num add rax , qword ptr [ rsi ] movzx ecx , byte ptr [ rax + num ] cmp cl , num je hexvar cmp cl , num je hexvar cmp cl , num je hexvar add qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] cmp rax , rdx jb hexvar mov eax , dword ptr [ rsp + hexvar ] shr eax , num and eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw s4 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ hexvar ] mov byte ptr [ ebp - num ] , al mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] test al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ ebp - num ] , edx jmp hexvar mov dword ptr [ esp ] , num call hexvar test al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ ebp - num ] , edx jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] add eax , hexvar mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] add eax , num mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num test byte ptr [ hexvar ] , num je hexvar mov dword ptr [ esp ] , num call hexvar test al , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] add eax , hexvar mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] add eax , num mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push rbp mov rbp , rsp movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov edi , num call hexvar test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar lea rdi , [ rip + hexvar ] call hexvar nop pop rbp ret
push ebx call hexvar add ebx , hexvar sub esp , num cmp byte ptr [ ebx + hexvar ] , num je hexvar mov eax , num call hexvar test al , al jne hexvar add esp , num pop ebx ret
push { r4 , r5 , r6 , lr } subs r4 , r0 , num beq hexvar mov r1 , hexvar bl hexvar subs r5 , r0 , num beq hexvar add r6 , r5 , num sub r3 , r6 , r4 cmp r3 , num ble hexvar mov r2 , num ldr r1 , [ pc , hexvar ] sub r0 , r5 , num bl hexvar cmp r0 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r6 bl hexvar cmp r0 , num movne r4 , r6 ldreq r3 , [ pc , hexvar ] addeq r4 , r5 , num streq r4 , [ r3 ] ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r4 , [ r2 ] str r4 , [ r3 ] pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push rbp push rbx mov ebx , edi mov rbp , rsi mov rdi , rsi call hexvar mov edx , num test eax , eax je hexvar mov rax , rdx pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s2 , a1 move a0 , a1 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , zero move s0 , zero move v0 , s0 move v1 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar sltiu v0 , s0 , hexvar bnez v0 , hexvar addiu v0 , zero , num srl s0 , s0 , num sltiu v1 , s0 , hexvar beqz v1 , hexvar addiu v0 , v0 , num move s1 , v0 lw a0 , ( s2 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , num test eax , eax je hexvar mov eax , num mov edx , num jmp hexvar push dword ptr [ ebp + num ] call hexvar add esp , num cdq mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] push eax call hexvar add esp , num cdq add dword ptr [ ebp - hexvar ] , eax adc dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar add eax , num mov edx , num add dword ptr [ ebp - hexvar ] , eax adc dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov esi , eax mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov edi , dword ptr [ rbp - hexvar ] call hexvar movsxd rcx , eax mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rcx ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rax + num ] call hexvar movsxd rcx , eax mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] and cl , num shr cl , num movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rax , [ rdi + rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi + hexvar ] , rax jg hexvar jl hexvar mov rax , qword ptr [ rdi + hexvar ] sub eax , dword ptr [ rsi + hexvar ] jne hexvar push rbp push rbx sub rsp , num mov rbp , qword ptr [ rdi ] mov rbx , qword ptr [ rsi ] call hexvar mov dword ptr [ rax ] , num add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp jmp hexvar nop dword ptr [ rax ] mov eax , num ret nop word ptr [ rax + rax ] mov eax , hexvar ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov eax , dword ptr [ esi + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov edi , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , edi mov eax , esi call hexvar mov ebp , eax mov ecx , hexvar mov eax , num mov edi , ebp repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub esp , hexvar add eax , hexvar push eax call hexvar mov edi , eax add esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ebp lea eax , [ ebx - hexvar ] push eax push - num push num push edi call hexvar add esp , hexvar push ebp call hexvar add esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , num mov edx , edi mov eax , esi call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 mov r15 , rsi push r13 push r12 push rbp push rbx lea rbx , [ rdi + hexvar ] sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdi , rbx mov qword ptr [ rsp + num ] , rdx mov r12d , dword ptr [ rax + hexvar ] mov r13d , dword ptr [ rax + hexvar ] call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdi , [ rax + hexvar ] call hexvar sub rsp , num lea rcx , [ rip + hexvar ] mov r9 , r15 mov rdx , qword ptr [ rsp + hexvar ] mov r8 , rbp mov esi , num mov rdi , rax mov r14 , rax xor eax , eax push rdx mov rdx , - num call hexvar mov rdi , rbp call hexvar xor edx , edx mov ecx , r12d mov r8d , r13d mov rsi , r14 mov rdi , rbx call hexvar test eax , eax pop rdx pop rcx je hexvar mov rdi , r14 call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] sub esp , hexvar push edx push eax push dword ptr [ ebp - hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s5 , a3 lw s6 , hexvar ( sp ) lw v0 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , num mov dword ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num sete al and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov dword ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num sete al and al , num movzx eax , al add esp , num pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] mov r3 , num str r3 , [ fp , - hexvar ] mov r3 , num strb r3 , [ fp , - hexvar ] mov r3 , num strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] strb r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num moveq r3 , num movne r3 , num and r3 , r3 , hexvar mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov dword ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num sete al and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov dword ptr [ hexvar ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar lea ecx , [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop dword ptr [ eax ]
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar
push ebp mov ebp , esp sub esp , hexvar cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov dword ptr [ hexvar ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar lea ecx , [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop dword ptr [ eax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop dword ptr [ eax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] cmp ecx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , eax jg hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num setne cl and cl , num mov byte ptr [ ebp - num ] , cl test byte ptr [ ebp - num ] , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ ecx ] cmp eax , dword ptr [ edi ] setle bl mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar cmp eax , num setne dl and dl , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov dl , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar jmp hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] test eax , eax js hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax setne al mov byte ptr [ ebp - num ] , al movzx eax , byte ptr [ ebp - num ] xor eax , num test al , al jne hexvar lea eax , [ ebx - hexvar ] push eax push hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax call hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi ] mov dword ptr [ ebp - num ] , esi cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , hexvar xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi ] mov dword ptr [ ebp - num ] , esi cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , hexvar xor edx , edx div dword ptr [ ebp + hexvar ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num sete al movzx eax , al add qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , num shr rax , num add qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
sub rsp , num mov r9 , rdx mov rcx , qword ptr [ rsi ] test rdi , rdi je hexvar movabs rax , hexvar mov edx , num div r9 cmp rax , rcx jbe hexvar mov rax , rcx shr rax , num lea rcx , [ rax + rcx + num ] mov qword ptr [ rsi ] , rcx imul rcx , r9 mov rsi , rcx call hexvar add rsp , num ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , a2 move a2 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a1 , zero , num sw gp , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s2 , hexvar ( sp ) lw gp , hexvar ( sp ) bltz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 bnez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp )
push rbp push rbx mov rbp , rdi sub rsp , num call hexvar test eax , eax mov ebx , eax js hexvar add rsp , num mov eax , ebx pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rbp , rdi call hexvar mov ebx , eax test eax , eax jns hexvar mov rdi , rbp call hexvar test eax , eax jne hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rbp , rax call hexvar mov edi , dword ptr [ rip + hexvar ] mov rdx , rbp mov esi , dword ptr [ rax ] mov eax , num call hexvar mov eax , ebx add rsp , num pop rbx pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edi call hexvar add esp , hexvar test eax , eax mov esi , eax js hexvar mov eax , esi pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } subs r5 , r3 , num sbc r6 , r4 , num mov r2 , r5 mov r3 , r6 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r4 , r1 mov r0 , r3 mov r1 , r4 sub sp , fp , hexvar pop { r4 , r5 , r6 , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] add ecx , - num adc esi , - num mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , eax mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] add ecx , - num adc esi , - num mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , eax mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call num mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - num ] , num je hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ esp ] , num lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ esp ] , num lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ esp ] , num call hexvar nop dword ptr [ eax ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) move a0 , a1 sw a1 , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a0 , zero , num lw gp , hexvar ( sp ) move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a1 , hexvar ( sp ) beqz s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , sp , hexvar bal hexvar move a0 , s0 lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 addiu a0 , zero , num lw gp , hexvar ( sp ) move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a1 , s0 lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a0 , zero , num addiu a2 , zero , num jalr t9 addiu a1 , a1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num
push rbx sub rsp , hexvar mov ebx , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rcx , - num mov rdi , rsi repne scasb al , byte ptr [ rdi ] not rcx lea rdx , [ rcx - num ] mov edi , num call hexvar test ebx , ebx je hexvar lea rsi , [ rsp + hexvar ] mov edi , ebx call hexvar mov rbx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rcx , - num mov al , num mov rdi , rbx repne scasb al , byte ptr [ rdi ] mov rdx , rcx not rdx lea rdx , [ rdx - num ] mov rsi , rbx mov edi , num call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov edi , num call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rsi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov edi , num mov rsi , qword ptr [ rbp - hexvar ] mov rdx , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov edi , dword ptr [ rbp - num ] test edi , edi setne cl movzx edi , cl mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov edi , dword ptr [ rbp - num ] lea rsi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov esi , hexvar mov edi , num mov edx , num mov dword ptr [ rbp - hexvar ] , edi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov qword ptr [ rbp - hexvar ] , rax call hexvar mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov edi , num movabs rsi , hexvar mov edx , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov edi , num call hexvar nop dword ptr [ rax ]
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] shr rax , hexvar cmp eax , num mov ecx , hexvar mov edx , hexvar cmove rdx , rcx cmp eax , num mov eax , hexvar cmovne rax , rdx ret
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] shr rax , hexvar cmp eax , num mov ecx , hexvar mov edx , hexvar cmove rdx , rcx cmp eax , num mov eax , hexvar cmovne rax , rdx ret
test rdi , rdi je hexvar mov rax , qword ptr [ rdi + hexvar ] shr rax , hexvar cmp eax , num mov ecx , hexvar mov edx , hexvar cmove rdx , rcx cmp eax , num mov eax , hexvar cmovne rax , rdx ret
sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] lsr r3 , r3 , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] mov r0 , r3 add sp , sp , hexvar bx lr eoreq r1 , r5 , r0 , lsr num eoreq r1 , r5 , r8 , lsr num eoreq r1 , r5 , r0 , lsr num
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , hexvar lw gp , hexvar ( sp ) beqz s1 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) bal hexvar move a0 , s1 move s1 , v0 lw ra , hexvar ( sp ) move v0 , s0 sw s1 , ( s0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbx call hexvar test eax , eax mov ebx , eax js hexvar mov eax , ebx pop rbx ret
push rbx call hexvar test eax , eax mov ebx , eax js hexvar mov eax , ebx pop rbx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax sets r9b movzx eax , r9b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx call hexvar mov ecx , dword ptr [ rax ] sub ecx , hexvar sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax call hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
mov ecx , dword ptr [ esp + num ] call hexvar add edx , hexvar mov eax , ecx and ecx , hexvar shr al , num movzx eax , al mov eax , dword ptr [ edx + eax * num - hexvar ] shr eax , cl and eax , num ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al lea eax , [ hexvar ] mov cl , byte ptr [ ebp - num ] mov byte ptr [ ebp - num ] , cl movzx edx , byte ptr [ ebp - num ] sar edx , num shl edx , num add eax , edx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] movzx edx , byte ptr [ ebp - num ] and edx , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - hexvar ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx eax , cl add esp , hexvar pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp move v0 , a0 sb v0 , num ( fp ) lbu v0 , num ( fp ) srl v0 , v0 , num andi v0 , v0 , hexvar move v1 , v0 lui v0 , hexvar sll v1 , v1 , num addiu v0 , v0 , - hexvar addu v0 , v1 , v0 lw v1 , ( v0 ) lbu v0 , num ( fp ) andi v0 , v0 , hexvar srlv v0 , v1 , v0 andi v0 , v0 , num sltu v0 , zero , v0 andi v0 , v0 , hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop nop
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
sub rsp , hexvar movsxd rdi , edi mov qword ptr [ rsp ] , rdi mov rdi , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov rcx , rax mov esi , hexvar call hexvar lea rax , [ rip + hexvar ] mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
sub rsp , hexvar movsxd rdi , edi mov qword ptr [ rsp ] , rdi mov rdi , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rcx , rax mov esi , hexvar mov edi , hexvar call hexvar mov eax , hexvar mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx push eax call hexvar add esp , hexvar test eax , eax je hexvar lea esi , [ ebx + hexvar ] push eax push dword ptr [ ebx + hexvar ] push hexvar push esi call hexvar add esp , hexvar mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx push eax call hexvar add esp , hexvar test eax , eax je hexvar lea esi , [ ebx + hexvar ] push eax push dword ptr [ ebx + hexvar ] push hexvar push esi call hexvar add esp , hexvar mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rax call hexvar mov qword ptr [ rsp ] , rax mov esi , hexvar mov ecx , hexvar mov edx , hexvar jmp hexvar mov esi , hexvar mov rax , qword ptr [ rsp ] nop word ptr cs : [ rax + rax ] nop cmp esi , hexvar jle hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov esi , hexvar cmove esi , edx jmp hexvar nop cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar mov rsi , qword ptr [ rsp ] cmp qword ptr [ rsi + hexvar ] , num mov esi , hexvar cmove esi , ecx jmp hexvar mov esi , hexvar xor eax , eax jmp hexvar pop rcx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar nop beqz v0 , hexvar lw ra , hexvar ( sp ) lw v1 , hexvar ( v0 )
push rax call hexvar mov qword ptr [ rsp ] , rax mov esi , hexvar mov ecx , hexvar mov edx , hexvar jmp hexvar mov esi , hexvar mov rax , qword ptr [ rsp ] nop word ptr cs : [ rax + rax ] nop cmp esi , hexvar jle hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar jmp hexvar mov rsi , qword ptr [ rsp ] cmp qword ptr [ rsi + hexvar ] , num mov esi , hexvar cmove esi , edx jmp hexvar mov esi , hexvar xor eax , eax jmp hexvar cmp qword ptr [ rsp ] , num mov esi , hexvar cmove esi , ecx jmp hexvar pop rcx ret
push rax call hexvar test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a0 , hexvar ( a0 )
push edi mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar lea edi , [ ecx + num ] mov dword ptr [ ecx ] , num mov dword ptr [ ecx + hexvar ] , num xor eax , eax and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov eax , num pop edi ret
push edi mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar lea edi , [ ecx + num ] mov dword ptr [ ecx ] , num mov dword ptr [ ecx + hexvar ] , num xor eax , eax and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov eax , num pop edi ret
mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar push rax mov edx , hexvar xor esi , esi call hexvar add rsp , num mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx add esp , hexvar pop esi pop edi pop ebp ret
sltiu v0 , a0 , hexvar beqz v0 , hexvar nop sll v0 , a0 , num addu a0 , v0 , a0 lui v0 , hexvar sll a0 , a0 , num addiu v0 , v0 , hexvar addu a0 , a0 , v0 jr ra lw v0 , num ( a0 ) jr ra addiu v0 , zero , - num
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , edx cmp dword ptr [ ecx ] , hexvar setb bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] imul ecx , dword ptr [ eax ] , hexvar lea edx , [ hexvar ] add edx , ecx mov ecx , dword ptr [ edx + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar imul eax , dword ptr [ ebp + num ] , hexvar lea ecx , [ hexvar ] add ecx , eax mov eax , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
cmp edi , num jg hexvar movsxd rdi , edi shl rdi , num mov eax , dword ptr [ rdi + hexvar ] ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax sete al movzx eax , al leave ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar test eax , eax sete al movzx eax , al mov ebx , dword ptr [ ebp - num ] leave ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar test eax , eax sete al movzx eax , al add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sltiu v0 , v0 , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea edx , [ eax + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , edx lea eax , [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw s2 , hexvar ( sp ) addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , hexvar ( a0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , num ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push r15 push r14 push r12 push rbx push rax mov r14 , rdx mov r15 , rsi mov rbx , rdi lea r12 , [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ r12 ] , xmm0 mov eax , num test r15 , r15 je hexvar test r14 , r14 je hexvar mov esi , hexvar mov edi , r14d mov edx , hexvar call hexvar mov qword ptr [ r12 ] , rax test rax , rax je hexvar mov rdi , rax mov rsi , r15 mov rdx , r14 call hexvar mov qword ptr [ rbx + hexvar ] , r14 mov rax , r14 jmp hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push hexvar lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] add esp , num pop ebx ret
cmp rsi , rcx jne hexvar mov rax , rsi mov rsi , rdx mov rdx , rax jmp hexvar setbe al movzx eax , al lea eax , [ rax + rax ] add eax , - num ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov dword ptr [ rsp + hexvar ] , r9d mov dword ptr [ rsp + hexvar ] , num mov rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx mov rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx mov dword ptr [ rsp + hexvar ] , hexvar mov eax , dword ptr [ rsp + hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rsp + hexvar ] , eax mov dword ptr [ rsp + hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rsp + hexvar ] sub eax , hexvar mov dword ptr [ rsp + num ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rsp + hexvar ] sub eax , hexvar mov dword ptr [ rsp + num ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rsp + hexvar ] sub eax , hexvar mov dword ptr [ rsp ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] cmp rax , rcx mov edx , hexvar mov esi , hexvar cmovne esi , edx mov dword ptr [ rsp + hexvar ] , esi jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] cmp rax , rcx mov edx , hexvar mov esi , num cmova esi , edx mov dword ptr [ rsp + hexvar ] , esi mov dword ptr [ rsp + hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] call hexvar mov dword ptr [ rsp + hexvar ] , eax mov dword ptr [ rsp + hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov dword ptr [ rsp + hexvar ] , r9d mov dword ptr [ rsp + hexvar ] , num mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] sub rcx , rdx setne al movzx r9d , al mov edx , r9d mov rdx , qword ptr [ rdx * num ] mov qword ptr [ rsp + hexvar ] , rcx jmp rdx mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] sub rax , rcx setbe dl movzx esi , dl mov ecx , esi lea esi , [ rcx + rcx - num ] mov dword ptr [ rsp + hexvar ] , esi mov rcx , qword ptr [ rip ] mov qword ptr [ rsp + num ] , rax jmp rcx mov rdi , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] call hexvar mov dword ptr [ rsp + hexvar ] , eax mov rdx , qword ptr [ rip ] jmp rdx mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
cmp rsi , rcx jne hexvar mov rax , rsi mov rsi , rdx mov rdx , rax jmp hexvar setbe al movzx eax , al lea eax , [ rax + rax ] add eax , - num ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] and cl , num mov byte ptr [ ebp - num ] , cl mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + hexvar ] , hexvar mov dword ptr [ esi + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp eax , - num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + ecx ] , num jmp hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp - hexvar ] , hexvar jae hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dl , byte ptr [ eax + ecx ] xor dl , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and dl , num mov byte ptr [ eax + ecx ] , dl mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar jmp hexvar add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , sil mov qword ptr [ rbp - num ] , rdi and al , num mov byte ptr [ rbp - num ] , al mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , - num mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rdi , qword ptr [ rbp - num ] xor eax , eax mov esi , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax sub eax , - num setne cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , dword ptr [ rbp - hexvar ] mov byte ptr [ rax + rcx ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - num ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] sub rax , hexvar setb cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov dl , byte ptr [ rax + rcx ] not dl and dl , num mov byte ptr [ rax + rcx ] , dl mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mvn r8 , num mvn sb , num mov r5 , r0 mov r7 , r1 mov r4 , r2 str r8 , [ r0 , num ] str sb , [ r0 , hexvar ] mov r6 , num b hexvar strb r6 , [ r4 , r0 ] mov r1 , num mov r0 , r5 bl hexvar cmn r0 , num bne hexvar cmp r7 , num popeq { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } sub r3 , r4 , num add r1 , r4 , hexvar ldrb r2 , [ r3 , num ] ! eor r2 , r2 , num cmp r3 , r1 strb r2 , [ r3 ] bne hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar jmp hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] add eax , edx mov byte ptr [ eax ] , num sub esp , num push num push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx movzx eax , byte ptr [ eax ] movzx eax , al test eax , eax setne al xor eax , num movzx eax , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] add edx , ecx and eax , num mov byte ptr [ edx ] , al add dword ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp - hexvar ] , hexvar jbe hexvar nop leave ret
push edi push esi push ebx mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ecx , num mov edx , dword ptr [ ebx + ecx * num ] mov esi , edx shl esi , hexvar mov edi , edx shr edi , hexvar or esi , edi mov edi , edx shl edi , num and edi , hexvar or esi , edi shr edx , num and edx , hexvar or edx , esi mov dword ptr [ eax + ecx * num ] , edx add ecx , num cmp ecx , num jne hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - num ] , num mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp - num ] sub eax , num setl cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] lea eax , [ eax + ecx * num ] mov edx , dword ptr [ ebp + num ] mov ecx , dword ptr [ edx + ecx * num ] mov edx , ecx shl edx , hexvar mov esi , ecx and esi , hexvar shl esi , num or edx , esi mov esi , ecx shr esi , num and esi , hexvar or edx , esi shr ecx , hexvar or edx , ecx mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar pop esi pop ebp ret
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ edx ] bswap ecx mov dword ptr [ eax ] , ecx mov ecx , dword ptr [ edx + num ] bswap ecx mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ edx + num ] bswap ecx mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ edx + hexvar ] bswap ecx mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] bswap ecx mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] bswap ecx mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] bswap ecx mov dword ptr [ eax + hexvar ] , ecx mov edx , dword ptr [ edx + hexvar ] bswap edx mov dword ptr [ eax + hexvar ] , edx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] shl eax , hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] shl eax , num and eax , hexvar or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] shr eax , num and eax , hexvar or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] shr eax , hexvar or ecx , eax mov edx , ecx mov eax , dword ptr [ rbp - hexvar ] cdqe lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rcx mov esi , edx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
movzx eax , byte ptr [ rip + hexvar ] push rbx mov ebx , edi test al , al je hexvar mov edi , num call hexvar mov edi , ebx xor esi , esi call hexvar mov edi , ebx pop rbx jmp hexvar nop dword ptr [ rax ]
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar sub esp , hexvar push num call hexvar add esp , hexvar sub esp , num push num push dword ptr [ ebp + num ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num movzx eax , byte ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] test al , al je hexvar mov eax , num call hexvar sub esp , num push num push esi call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , num mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , num mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov eax , num mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , num mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
push r15 push r14 mov r15 , r9 push r13 push r12 mov r13d , edi push rbp push rbx mov rbp , r8 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rip + hexvar ] test r8 , r8 mov qword ptr [ rsp ] , rsi cmove rbp , rax test rcx , rcx jne hexvar lea r12 , [ rsp + hexvar ] mov ebx , hexvar mov r14 , r12 jmp hexvar nop word ptr [ rax + rax ] add rbx , rbx mov rdi , rbx call qword ptr [ rbp ] test rax , rax mov r14 , rax je hexvar mov rcx , rbx mov rdx , r14 mov rsi , qword ptr [ rsp ] mov edi , r13d call r15
push r15 push r14 mov r15 , r9 push r13 push r12 mov r14 , rsi push rbp push rbx mov rbp , r8 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test r8 , r8 mov eax , hexvar mov dword ptr [ rsp ] , edi cmove rbp , rax test rcx , rcx jne hexvar lea r12 , [ rsp + hexvar ] mov ebx , hexvar mov r13 , r12 jmp hexvar nop dword ptr [ rax ] add rbx , rbx mov rdi , rbx call qword ptr [ rbp ] test rax , rax mov r13 , rax je hexvar mov rcx , rbx mov rdx , r13 mov rsi , r14 mov edi , dword ptr [ rsp ] call r15
push r15 push r14 mov r15 , r9 push r13 push r12 mov r14 , rsi push rbp push rbx mov rbp , r8 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test r8 , r8 mov eax , hexvar mov dword ptr [ rsp ] , edi cmove rbp , rax test rcx , rcx jne hexvar lea r12 , [ rsp + hexvar ] mov ebx , hexvar mov r13 , r12 jmp hexvar nop dword ptr [ rax ] add rbx , rbx mov rdi , rbx call qword ptr [ rbp ] test rax , rax mov r13 , rax je hexvar mov rcx , rbx mov rdx , r13 mov rsi , r14 mov edi , dword ptr [ rsp ] call r15
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s1 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move s3 , a2 sw s0 , hexvar ( sp ) move s0 , a3 sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( v0 ) lw s6 , hexvar ( sp ) sw v0 , hexvar ( sp ) beqz s1 , hexvar nop bnez s0 , hexvar nop addiu s0 , zero , hexvar addiu s3 , sp , hexvar lui s2 , hexvar move fp , s3 b hexvar addiu s2 , s2 , num sll s0 , s0 , num lw t9 , ( s1 ) jalr t9 move a0 , s0 lw gp , hexvar ( sp ) beqz v0 , hexvar move fp , v0 move a3 , s0 move a2 , fp move a1 , s5 move t9 , s6 jalr t9 move a0 , s4 lw gp , hexvar ( sp ) bltz v0 , hexvar move s7 , v0 sltu v0 , s7 , s0 bnez v0 , hexvar addu v0 , fp , s7 beq s3 , fp , hexvar sltu v0 , s0 , s2 lw t9 , num ( s1 ) jalr t9 move a0 , fp lw gp , hexvar ( sp ) sltu v0 , s0 , s2 bnez v0 , hexvar nop bltz s0 , hexvar lw t9 , - hexvar ( gp ) lui s0 , hexvar lw t9 , ( s1 ) jalr t9 move a0 , s0 lw gp , hexvar ( sp ) bnez v0 , hexvar move fp , v0 lw t9 , hexvar ( s1 ) beqz t9 , hexvar nop jalr t9 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move fp , zero addiu a0 , zero , hexvar lw gp , hexvar ( sp ) sw a0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push rbx push rax xor r15d , r15d test rdi , rdi je hexvar mov r14 , rsi mov rbp , rdi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov rsi , rbp call hexvar mov qword ptr [ rsp ] , num mov rdi , rsp mov rsi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rsp ] mov edx , hexvar mov rsi , r14 call hexvar mov r15d , eax mov rdi , qword ptr [ rsp ] mov esi , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar xor r15d , r15d mov rdi , rbx call hexvar mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp push edi xor edi , edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar call hexvar test eax , eax mov ebp , eax je hexvar sub esp , num push esi lea esi , [ ebx - hexvar ] push eax call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax mov edx , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , num push ebp push edx mov dword ptr [ esp + hexvar ] , edx call eax add esp , hexvar test eax , eax mov edx , dword ptr [ esp + hexvar ] je hexvar sub esp , num push esi push dword ptr [ esp + hexvar ] push edx mov dword ptr [ esp + hexvar ] , edx call hexvar mov edi , eax pop eax pop edx push esi mov edx , dword ptr [ esp + hexvar ] push edx call hexvar add esp , hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push rbx push rax xor r15d , r15d test rdi , rdi je hexvar mov r14 , rsi mov rbp , rdi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov rsi , rbp call hexvar mov qword ptr [ rsp ] , num mov rdi , rsp mov rsi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rsp ] mov edx , hexvar mov rsi , r14 call hexvar mov r15d , eax mov rdi , qword ptr [ rsp ] mov esi , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar xor r15d , r15d mov rdi , rbx call hexvar mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov cl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl je hexvar cmp dword ptr [ ebp + num ] , hexvar sete al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov cl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl je hexvar cmp dword ptr [ ebp + num ] , hexvar sete al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov cl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl je hexvar cmp dword ptr [ ebp + num ] , hexvar sete al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , hexvar beq hexvar ldr r3 , [ fp , - num ] cmp r3 , hexvar bne hexvar mov r3 , num b hexvar mov r3 , num and r3 , r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , dword ptr [ ebx + hexvar ] test esi , esi jne hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar test edx , edx je hexvar sub esp , hexvar push edx call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx jne hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push edi call hexvar add esp , hexvar mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , dword ptr [ esp + hexvar ] test ecx , ecx jne hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar test edx , edx je hexvar sub esp , hexvar push edx call hexvar add esp , hexvar test eax , eax jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push esi call hexvar add esp , hexvar xor eax , eax lea esi , [ esi ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rbp push rbx sub rsp , hexvar xor ebp , ebp cmp byte ptr [ rip + hexvar ] , num jne hexvar test byte ptr [ rip + hexvar ] , num jne hexvar mov rbx , rsi test rdi , rdi jne hexvar mov rdi , rsp mov esi , hexvar call hexvar mov rdi , rax test rax , rax je hexvar call hexvar mov ebp , num test eax , eax jne hexvar xor ebp , ebp mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar mov eax , ebp add rsp , hexvar pop rbx pop rbp ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , dword ptr [ ebx + hexvar ] test esi , esi jne hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar test edx , edx je hexvar sub esp , hexvar push edx call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx jne hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push edi call hexvar add esp , hexvar mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) lw s4 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a2 sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s4 ) lw s1 , hexvar ( sp ) sw v0 , hexvar ( sp ) beqz a2 , hexvar lw t9 , - hexvar ( gp ) move s5 , a0 move a0 , a2 move s2 , a1 bal hexvar move s6 , a3 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw v0 , hexvar ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov edi , ecx test ecx , ecx je hexvar mov ebp , edx sub esp , hexvar push ecx call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] cmp byte ptr [ eax ] , hexvar je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp push esi call dword ptr [ esi + hexvar ] mov ebp , eax add esp , hexvar mov eax , dword ptr [ esp + hexvar ] cmp byte ptr [ eax ] , hexvar jne hexvar test ebp , ebp je hexvar sub esp , hexvar push ebp mov ecx , dword ptr [ esp + hexvar ] mov edx , edi mov eax , esi call hexvar mov edi , eax mov eax , dword ptr [ esi + num ] add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push ebp call dword ptr [ esi + hexvar ] add esp , hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax test edx , edx je hexvar mov r15 , r8 mov r13d , ecx mov r14d , edx mov r12 , rsi mov rbp , rdi mov edi , edx call hexvar test rax , rax je hexvar mov rbx , rax cmp qword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rsp + num ] , r13d cmp byte ptr [ r15 ] , hexvar jne hexvar lea rsi , [ r15 + num ] mov rdi , rbp call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax test edx , edx je hexvar mov r15 , r8 mov r13d , ecx mov r14d , edx mov r12 , rsi mov rbp , rdi mov edi , edx call hexvar test rax , rax je hexvar mov rbx , rax cmp qword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rsp + num ] , r13d cmp byte ptr [ r15 ] , hexvar jne hexvar lea rsi , [ r15 + num ] mov rdi , rbp call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov rax , rbp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov byte ptr [ ebp - hexvar ] , num call hexvar mov dword ptr [ eax ] , num sub esp , num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] call eax add esp , hexvar fstp xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ ebp - hexvar ] , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] test al , al je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar fld xword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) jp hexvar fld xword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) je hexvar call hexvar mov eax , dword ptr [ eax ] cmp eax , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fstp xword ptr [ eax ] movzx eax , byte ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp lea esi , [ ebp - hexvar ] mov dword ptr [ edx + num ] , esi mov dword ptr [ edx ] , ecx call eax fstp xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar fld xword ptr [ ebp - hexvar ] fldz fxch st ( num ) fucomip st ( num ) fstp st ( num ) jne hexvar jp hexvar jmp hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax fld xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] fstp xword ptr [ eax ] mov cl , byte ptr [ ebp - hexvar ] and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
push r14 push r13 mov r14 , rcx push r12 push rbp mov rbp , rdi push rbx mov r13 , rdx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar mov rsi , rsp mov r12 , rax mov dword ptr [ rax ] , num mov rdi , rbp call r14
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp lea esi , [ ebp - hexvar ] mov dword ptr [ edx + num ] , esi mov dword ptr [ edx ] , ecx call eax fstp xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar fld xword ptr [ ebp - hexvar ] fldz fxch st ( num ) fucomip st ( num ) fstp st ( num ) jne hexvar jp hexvar jmp hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax fld xword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] fstp xword ptr [ eax ] mov cl , byte ptr [ ebp - hexvar ] and cl , num movzx eax , cl add esp , hexvar pop esi pop ebp ret
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
cmp rdi , hexvar ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , hexvar ja hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , hexvar ja hexvar mov edx , dword ptr [ ebp + num ] shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar add rsp , hexvar pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov eax , num add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num add esp , hexvar mov eax , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] xorps xmm0 , xmm0 movss dword ptr [ eax + hexvar ] , xmm0 mov cl , num and cl , num movzx eax , cl add esp , hexvar pop ebp ret
sub rsp , num mov edi , hexvar call hexvar mov rdi , rax call hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov eax , num add rsp , num ret
push rbx test rdi , rdi je hexvar mov rbx , rdi call hexvar mov edi , dword ptr [ rbx ] call hexvar mov rdi , rax mov esi , num mov rdx , rbx call hexvar test eax , eax je hexvar mov edi , dword ptr [ rbx ] call hexvar mov edi , dword ptr [ rbx ] call hexvar mov rdi , rax mov esi , num mov rdx , rbx pop rbx jmp hexvar xor eax , eax pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi call hexvar mov edi , dword ptr [ rbx ] call hexvar mov rdi , rax mov esi , num mov rdx , rbx call hexvar test eax , eax je hexvar mov edi , dword ptr [ rbx ] call hexvar mov edi , dword ptr [ rbx ] call hexvar mov rdi , rax mov esi , num mov rdx , rbx pop rbx jmp hexvar xor eax , eax pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi call hexvar mov edi , dword ptr [ rbx ] call hexvar mov rdi , rax mov esi , num mov rdx , rbx call hexvar test eax , eax je hexvar mov edi , dword ptr [ rbx ] call hexvar mov edi , dword ptr [ rbx ] call hexvar mov rdi , rax mov esi , num mov rdx , rbx pop rbx jmp hexvar xor eax , eax pop rbx ret
beqz a0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 move s0 , a1 move s2 , a2 lw v0 , num ( a0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ eax + hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] sub esp , num push ebx push edx push eax call ecx add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] lea ebx , [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push ebx push edx push eax call ecx add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] lea ebx , [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push ebx push edx push eax call ecx add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] add rsi , num call rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] add rsi , hexvar call rdx add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , num mov eax , dword ptr [ edi + num ] push ebx push dword ptr [ esi + num ] push dword ptr [ esi ] call dword ptr [ eax + hexvar ] add esp , hexvar mov eax , dword ptr [ edi + num ] lea edx , [ ebx + num ] push edx push dword ptr [ esi + hexvar ] push dword ptr [ esi + num ] call dword ptr [ eax + hexvar ] add esp , hexvar mov eax , dword ptr [ edi + num ] add ebx , hexvar push ebx push dword ptr [ esi + hexvar ] push dword ptr [ esi + hexvar ] call dword ptr [ eax + hexvar ] add esp , hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax call hexvar add esp , hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax call hexvar add esp , hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi ] cmp eax , esi jae hexvar mov ecx , dword ptr [ edi + num ] cmp ecx , esi jae hexvar cmp esi , hexvar ja hexvar lea edx , [ esi + num ] mov ebp , hexvar mov eax , edx mul ebp mov eax , dword ptr [ edi + num ] shr edx , num test eax , eax lea ebp , [ edx * num ] je hexvar lea edx , [ ebx - hexvar ] sub esp , hexvar push hexvar push edx mov dword ptr [ esp + hexvar ] , edx push ebp push ecx push eax call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ edi ] mov ecx , esi sub esp , num mov dword ptr [ edi + num ] , eax mov dword ptr [ edi + num ] , ebp sub ecx , edx add eax , edx push ecx push num push eax call hexvar add esp , hexvar mov dword ptr [ edi ] , esi mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
lui gp , hexvar lw v0 , ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sltu v1 , v0 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz v1 , hexvar sw gp , hexvar ( sp ) lw a1 , num ( a0 ) sltu v1 , a1 , s0 beqz v1 , hexvar subu a2 , s0 , v0 lui v0 , hexvar ori v0 , v0 , hexvar sltu v0 , s0 , v0 beqz v0 , hexvar lui v0 , hexvar lw a0 , num ( a0 ) addiu s2 , s0 , num ori v0 , v0 , hexvar multu s2 , v0 lui s3 , hexvar mfhi s2 srl s2 , s2 , num beqz a0 , hexvar sll s2 , s2 , num lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , s3 , - hexvar sw v0 , hexvar ( sp ) jalr t9 move a2 , s2 lw gp , hexvar ( sp ) beqz v0 , hexvar move a1 , zero lw a0 , ( s1 ) lw t9 , - hexvar ( gp ) sw s2 , num ( s1 ) subu a2 , s0 , a0 sw v0 , num ( s1 ) jalr t9 addu a0 , v0 , a0 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) sw s0 , ( s1 ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , num ( a0 )
lui gp , hexvar lw v0 , ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sltu v1 , v0 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz v1 , hexvar sw gp , hexvar ( sp ) lw a1 , num ( a0 ) sltu v1 , a1 , s0 beqz v1 , hexvar subu a2 , s0 , v0 lui v0 , hexvar ori v0 , v0 , hexvar sltu v0 , s0 , v0 beqz v0 , hexvar lui v0 , hexvar lw a0 , num ( a0 ) addiu s2 , s0 , num ori v0 , v0 , hexvar multu s2 , v0 lui s3 , hexvar mfhi s2 srl s2 , s2 , num beqz a0 , hexvar sll s2 , s2 , num lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , s3 , - hexvar sw v0 , hexvar ( sp ) jalr t9 move a2 , s2 lw gp , hexvar ( sp ) beqz v0 , hexvar move a1 , zero lw a0 , ( s1 ) lw t9 , - hexvar ( gp ) sw s2 , num ( s1 ) subu a2 , s0 , a0 sw v0 , num ( s1 ) jalr t9 addu a0 , v0 , a0 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) sw s0 , ( s1 ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , num ( a0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx ] , - num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + hexvar ] je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] sub edx , - num setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] sub eax , ecx setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop ebx pop ebp ret
push ebp push edi mov ebp , eax push esi push ebx mov edi , edx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ eax ] cmp esi , - num je hexvar cmp esi , edx je hexvar lea eax , [ ebx - hexvar ] sub esp , num add esi , num push num push eax push num call hexvar lea edx , [ edi + num ] mov dword ptr [ esp ] , edx push esi push eax push num push num call hexvar add esp , hexvar mov dword ptr [ ebp ] , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx ] , - num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + hexvar ] je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub eax , hexvar add eax , num add eax , hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push edi push esi mov edi , eax push ebx call hexvar add ebx , hexvar sub esp , hexvar lea esi , [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar pop edx pop ecx push edi push esi call hexvar add esp , hexvar push num push esi push num call hexvar add esp , hexvar test eax , eax je hexvar push eax lea eax , [ ebx - hexvar ] push num push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push { r4 , lr } ldr ip , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] cmp r2 , num beq hexvar b hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r1 , r3 bne hexvar ldr r3 , [ r4 , hexvar ] cmp r2 , r3 bne hexvar mov r3 , num str r4 , [ r0 , hexvar ] mov r0 , r3 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebx sub esp , num call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , num test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , num add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edi , cl mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( fp ) lui v1 , hexvar addiu v1 , v1 , hexvar sw v1 , hexvar ( v0 ) addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - num ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar cmp eax , num sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] sub esp , num push num push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar nop word ptr cs : [ eax + eax ] nop dword ptr [ eax + eax ]
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop pop rbp ret
push { r4 , lr } mov r2 , hexvar mov r1 , num mov r4 , r0 bl hexvar bl hexvar clz r0 , r0 lsr r0 , r0 , num strb r0 , [ r4 , hexvar ] strb r0 , [ r4 , hexvar ] pop { r4 , pc }
push edi push esi xor eax , eax push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar lea edi , [ esi + num ] mov ecx , esi mov dword ptr [ esi ] , num mov dword ptr [ esi + hexvar ] , num and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax call hexvar test eax , eax sete al mov byte ptr [ esi + hexvar ] , al mov byte ptr [ esi + hexvar ] , al pop ebx pop esi pop edi ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] mov r2 , hexvar mov r1 , num ldr r0 , [ fp , - num ] bl hexvar bl hexvar mov r3 , r0 cmp r3 , num moveq r3 , num movne r3 , num and r2 , r3 , hexvar ldr r3 , [ fp , - num ] strb r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldrb r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] strb r2 , [ r3 , hexvar ] mov r0 , r0 sub sp , fp , num pop { fp , pc }
push edi push esi xor eax , eax push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar lea edi , [ esi + num ] mov ecx , esi mov dword ptr [ esi ] , num mov dword ptr [ esi + hexvar ] , num and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax call hexvar test eax , eax mov dword ptr [ esi + hexvar ] , hexvar sete al mov byte ptr [ esi + hexvar ] , al mov byte ptr [ esi + hexvar ] , al pop ebx pop esi pop edi ret
ldr r3 , [ r0 , hexvar ] push { r4 , r5 , r6 , lr } cmp r3 , num bne hexvar mov r3 , num ldr r5 , [ r0 , hexvar ] mov r4 , r0 cmp r5 , r3 str r3 , [ r0 , hexvar ] add r6 , r0 , hexvar beq hexvar ldr r0 , [ r0 , hexvar ] ldr r1 , [ r4 , hexvar ] str r6 , [ r4 , num ] cmp r1 , hexvar str r0 , [ r4 , hexvar ] bhi hexvar ldr r3 , [ r0 , num ] ldr r2 , [ pc , hexvar ] and r5 , r1 , hexvar cmp r3 , r2 bhi hexvar add r2 , r3 , num add r3 , r0 , r3 str r2 , [ r0 , num ] strb r5 , [ r3 , num ] ldr r5 , [ r4 , hexvar ] add r6 , r4 , hexvar cmp r5 , num beq hexvar ldr r0 , [ r4 , hexvar ] ldr r2 , [ pc , hexvar ] ldr r3 , [ r0 , num ] str r0 , [ r4 , hexvar ] cmp r3 , r2 str r6 , [ r4 , num ] bhi hexvar mov r2 , num add r1 , r3 , num add r3 , r0 , r3 str r1 , [ r0 , num ] strb r2 , [ r3 , num ] ldr r5 , [ r4 , hexvar ] cmp r5 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r4 , hexvar ] cmp r2 , num ldrne r2 , [ r4 , hexvar ] streq r3 , [ r4 , hexvar ] strne r3 , [ r2 ] ldr r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r4 , hexvar ] cmp r2 , num ldrne r2 , [ r4 , hexvar ] streq r3 , [ r4 , hexvar ] strne r3 , [ r2 ] ldr r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] mov r3 , num mov r0 , num str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 ldmdale lr ! , { r1 , r2 , r3 , r5 , r6 , sb , sl , fp , ip }
push rbp push rbx sub rsp , num cmp dword ptr [ rdi + hexvar ] , num jne hexvar cmp qword ptr [ rdi + hexvar ] , num mov rbx , rdi mov dword ptr [ rdi + hexvar ] , num lea rbp , [ rdi + hexvar ] je hexvar mov rax , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , rax cmp rsi , hexvar mov rbp , rsi ja hexvar mov edx , dword ptr [ rax + num ] cmp edx , hexvar ja hexvar lea ecx , [ rdx + num ] mov dword ptr [ rax + num ] , ecx mov byte ptr [ rax + rdx + hexvar ] , sil cmp qword ptr [ rbx + hexvar ] , num lea rbp , [ rbx + hexvar ] je hexvar mov rax , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rax + num ] mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , rax cmp edx , hexvar ja hexvar lea ecx , [ rdx + num ] mov dword ptr [ rax + num ] , ecx mov byte ptr [ rax + rdx + hexvar ] , num cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov eax , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num cmp dword ptr [ rdi + hexvar ] , num jne hexvar cmp qword ptr [ rdi + hexvar ] , num mov rbx , rdi mov dword ptr [ rdi + hexvar ] , num lea rbp , [ rdi + hexvar ] je hexvar mov rax , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , rax cmp rsi , hexvar mov rbp , rsi ja hexvar mov edx , dword ptr [ rax + num ] cmp edx , hexvar ja hexvar lea ecx , [ rdx + num ] mov dword ptr [ rax + num ] , ecx mov byte ptr [ rax + rdx + hexvar ] , sil cmp qword ptr [ rbx + hexvar ] , num lea rbp , [ rbx + hexvar ] je hexvar mov rax , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rax + num ] mov qword ptr [ rbx + hexvar ] , rbp mov qword ptr [ rbx + hexvar ] , rax cmp edx , hexvar ja hexvar lea ecx , [ rdx + num ] mov dword ptr [ rax + num ] , ecx mov byte ptr [ rax + rdx + hexvar ] , num cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov eax , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , num lea edi , [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + num ] , edi mov edi , dword ptr [ esi + hexvar ] xor ecx , ecx mov dword ptr [ esi + hexvar ] , eax cmp edi , hexvar mov edx , edi ja hexvar mov edx , dword ptr [ eax + num ] cmp edx , hexvar ja hexvar lea ecx , [ edx + num ] mov dword ptr [ eax + num ] , ecx mov ecx , edi mov byte ptr [ eax + edx + num ] , cl mov eax , dword ptr [ esi + hexvar ] lea edi , [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + num ] mov dword ptr [ esi + num ] , edi mov dword ptr [ esi + hexvar ] , eax cmp edx , hexvar ja hexvar lea ecx , [ edx + num ] mov dword ptr [ eax + num ] , ecx mov byte ptr [ eax + edx + num ] , num mov edi , dword ptr [ esi + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ esi + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r6 , r1 ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 ] bl hexvar ldr r4 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ pc , hexvar ] mov r1 , num ldr r0 , [ r4 ] bl hexvar mov r3 , r6 mov r2 , r5 mov r1 , num ldr r0 , [ r4 ] bl hexvar ldr r1 , [ r4 ] mov r0 , hexvar bl hexvar pop { r4 , r5 , r6 , pc }
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rcx , qword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov esi , num mov rdi , qword ptr [ rip + hexvar ] mov eax , num call hexvar mov rcx , rbp mov rdx , rbx mov esi , num mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , num pop rbx pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] lea eax , [ ebx - hexvar ] push eax push num push dword ptr [ esi ] call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num push dword ptr [ esi ] call hexvar pop eax pop edx push dword ptr [ esi ] push hexvar call hexvar add esp , hexvar pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , - hexvar ( gp ) jalr t9 lw a0 , ( v0 ) lui a2 , hexvar lw gp , hexvar ( sp ) addiu a1 , zero , num lw a0 , ( s0 ) addiu a2 , a2 , hexvar lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 lw a3 , ( v0 ) addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , s2 lw a0 , ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 move a2 , s1 addiu a0 , zero , hexvar lw gp , hexvar ( sp ) lw a1 , ( s0 ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14d , num test rsi , rsi je hexvar mov r15 , rcx mov r12 , rdx mov r13 , rsi mov rbp , rdi xor ebx , ebx nop word ptr cs : [ rax + rax ] nop mov rax , qword ptr [ rbp ] mov rsi , qword ptr [ r12 + rbx * num ] mov rdi , rbp mov rdx , r15 call qword ptr [ rax + hexvar ] test eax , eax je hexvar add rbx , num cmp rbx , r13 jb hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , rcx mov r15 , rdx mov r12 , rsi mov r13 , rdi mov eax , hexvar xor ebx , ebx jmp hexvar mov rbx , qword ptr [ rsp ] add rbx , num mov eax , hexvar nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ r13 ] mov rcx , qword ptr [ rsp ] mov rsi , qword ptr [ r15 + rcx * num ] mov rdi , r13 mov rdx , r14 call qword ptr [ rax + hexvar ] test eax , eax mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov qword ptr [ rsp ] , rbx mov rax , qword ptr [ rsp ] cmp rax , r12 mov eax , hexvar mov ecx , hexvar cmovb eax , ecx jmp hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov eax , hexvar mov ebp , num jmp hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14d , num test rsi , rsi je hexvar mov r15 , rcx mov r12 , rdx mov r13 , rsi mov rbp , rdi xor ebx , ebx nop word ptr cs : [ rax + rax ] nop mov rax , qword ptr [ rbp ] mov rsi , qword ptr [ r12 + rbx * num ] mov rdi , rbp mov rdx , r15 call qword ptr [ rax + hexvar ] test eax , eax je hexvar add rbx , num cmp rbx , r13 jb hexvar jmp hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , rcx mov r15 , rdx mov r12 , rsi mov r13 , rdi mov eax , hexvar xor ebx , ebx jmp hexvar mov rbx , qword ptr [ rsp ] add rbx , num mov eax , hexvar nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ r13 ] mov rcx , qword ptr [ rsp ] mov rsi , qword ptr [ r15 + rcx * num ] mov rdi , r13 mov rdx , r14 call qword ptr [ rax + hexvar ] test eax , eax mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov qword ptr [ rsp ] , rbx mov rax , qword ptr [ rsp ] cmp rax , r12 mov eax , hexvar mov ecx , hexvar cmovb eax , ecx jmp hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov eax , hexvar mov ebp , num jmp hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , rcx mov r13d , edx mov ebp , esi mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , ebp mov edx , r13d mov rcx , r15 add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp jmp rax call hexvar test rax , rax je hexvar mov r14 , rax mov rdi , rax call hexvar mov rdi , r14 call hexvar mov r12 , rax mov rdi , r14 call hexvar test r12 , r12 je hexvar test rax , rax je hexvar cmp qword ptr [ rbx + num ] , num mov qword ptr [ rsp ] , rax jne hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar cmp r13d , num jg hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , r14 call hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebx , ebx mov eax , ebx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r4 , [ r3 , hexvar ] ldr r3 , [ sp ] ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] blx r4 mov r3 , r0 b hexvar ldr r3 , [ sp ] ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { r4 , pc }
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , rcx mov r13d , edx mov ebp , esi mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , ebp mov edx , r13d mov rcx , r15 add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp jmp rax call hexvar test rax , rax je hexvar mov r14 , rax mov rdi , rax call hexvar mov rdi , r14 call hexvar mov r12 , rax mov rdi , r14 call hexvar test r12 , r12 je hexvar test rax , rax je hexvar cmp qword ptr [ rbx + num ] , num mov qword ptr [ rsp ] , rax jne hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar cmp r13d , num jg hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , r14 call hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebx , ebx mov eax , ebx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , rcx mov r13d , edx mov ebp , esi mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , ebp mov edx , r13d mov rcx , r15 add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp jmp rax call hexvar test rax , rax je hexvar mov r14 , rax mov rdi , rax call hexvar mov rdi , r14 call hexvar mov r12 , rax mov rdi , r14 call hexvar test r12 , r12 je hexvar test rax , rax je hexvar cmp qword ptr [ rbx + num ] , num mov qword ptr [ rsp ] , rax jne hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar cmp r13d , num jg hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , r14 call hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebx , ebx mov eax , ebx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12d , edi mov r13 , rsi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdx , rdx je hexvar cmp rbp , hexvar mov edx , hexvar cmovbe rdx , rbp mov rsi , rsp mov edi , r12d call hexvar mov rbx , rax cmp rax , - num je hexvar sub rbp , rax test rax , rax jne hexvar test rbp , rbp jne hexvar mov rcx , r13 mov rdx , rbx mov esi , num mov rdi , rsp call hexvar cmp rbx , rax ja hexvar test rbp , rbp jne hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovbe rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) or v0 , a2 , a3 beqz v0 , hexvar move s0 , a2 move s4 , a0 move s1 , a3 addiu s6 , zero , hexvar addiu s3 , sp , hexvar b hexvar addiu s5 , zero , - num move a1 , v0 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) or s2 , s2 , s7 beqz s2 , hexvar move v0 , zero bnez s0 , hexvar move a2 , s1 bnez s0 , hexvar move a1 , s3 sltiu v0 , s1 , hexvar bnez v0 , hexvar move a0 , s4 move a2 , s6 move a1 , s3 move a0 , s4 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beq v0 , s5 , hexvar subu s7 , s1 , v0 sltu s1 , s1 , s7 subu s2 , s0 , s1 move s0 , s2 bnez v0 , hexvar move s1 , s7 or s0 , s2 , s7 bnez s0 , hexvar move a1 , zero addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero b hexvar addiu v0 , zero , num b hexvar addiu v0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov qword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovbe rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , - num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r5 , r0 mov r0 , r1 bl hexvar adds r3 , r4 , num movne r3 , num cmp r0 , num movne r3 , num cmp r3 , num bne hexvar mov r2 , r4 mov r1 , r5 pop { r4 , r5 , r6 , lr } b hexvar bl hexvar
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r2 mov r4 , r1 mov r7 , r0 mov r0 , r2 bl hexvar cmp r5 , r4 mov r6 , r0 bls hexvar sub r2 , r5 , r4 mov r1 , num add r0 , r0 , r4 bl hexvar mov r2 , r4 mov r1 , r7 mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , lr } b hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
mov eax , num cmp qword ptr [ rsi + hexvar ] , - num je hexvar ret movzx eax , byte ptr [ rsi + hexvar ] and eax , num sub eax , num cmp al , num ja hexvar movzx eax , byte ptr [ rsi + hexvar ] sub eax , num cmp al , num jbe hexvar or byte ptr [ rsi + hexvar ] , num mov rdx , qword ptr [ rdi + hexvar ] mov eax , num cmp dword ptr [ rdx + hexvar ] , num je hexvar push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rsi mov rbp , rdi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsi + hexvar ] , rax mov rax , qword ptr [ rdi + hexvar ] add qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rdi + hexvar ] mov r12 , qword ptr [ rax + hexvar ] test r12 , r12 je hexvar mov r13 , qword ptr [ rbx + num ] mov esi , hexvar mov rdi , r13 call hexvar mov rbp , rax test rax , rax je hexvar mov byte ptr [ rax ] , num mov edx , num mov rsi , r13 mov rdi , r12 call hexvar mov rdx , rax mov byte ptr [ rbp ] , hexvar mov eax , num cmp rdx , - num je hexvar mov qword ptr [ rbx + hexvar ] , rdx mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
ldr r3 , [ r1 , hexvar ] cmn r3 , num beq hexvar mov r0 , num bx lr ldrb r3 , [ r1 , hexvar ] ldr r2 , [ r0 , hexvar ] and r3 , r3 , num sub r3 , r3 , num cmp r3 , num bls hexvar push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r1 ldr r3 , [ r2 , hexvar ] ldr r6 , [ r2 , hexvar ] add r1 , r3 , num cmp r6 , num str r3 , [ r4 , hexvar ] mov r5 , r0 str r1 , [ r2 , hexvar ] beq hexvar ldr r5 , [ r4 , num ] mov r1 , hexvar mov r0 , r5 bl hexvar subs r7 , r0 , num beq hexvar mov r3 , num mov r1 , r5 strb r3 , [ r7 ] mov r0 , r6 mov r2 , num bl hexvar mov r3 , hexvar strb r3 , [ r7 ] cmn r0 , num beq hexvar str r0 , [ r4 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 , asr num andeq r0 , r0 , r0
ldr r3 , [ r1 , hexvar ] cmn r3 , num beq hexvar mov r0 , num bx lr ldrb r3 , [ r1 , hexvar ] and r3 , r3 , num sub r3 , r3 , num cmp r3 , num bhi hexvar ldrb r3 , [ r1 , hexvar ] sub r3 , r3 , num cmp r3 , num bls hexvar ldrb r3 , [ r1 , hexvar ] orr r3 , r3 , num strb r3 , [ r1 , hexvar ] ldr r3 , [ r0 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r1 mov r5 , r0 ldr r3 , [ r0 , hexvar ] ldr r3 , [ r3 , hexvar ] str r3 , [ r1 , hexvar ] ldr r2 , [ r0 , hexvar ] ldr r3 , [ r2 , hexvar ] add r3 , r3 , num str r3 , [ r2 , hexvar ] ldr r3 , [ r0 , hexvar ] ldr r6 , [ r3 , hexvar ] cmp r6 , num beq hexvar ldr r5 , [ r4 , num ] mov r1 , hexvar mov r0 , r5 bl hexvar subs r7 , r0 , num beq hexvar mov r3 , num strb r3 , [ r7 ] mov r2 , num mov r1 , r5 mov r0 , r6 bl hexvar mov r3 , hexvar strb r3 , [ r7 ] cmn r0 , num beq hexvar str r0 , [ r4 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 , asr num andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v1 , hexvar ( a1 )
sub rsp , num mov r8 , rdi mov rdi , rdx mov rcx , qword ptr [ rip + hexvar ] mov rax , rcx shr rax , hexvar and eax , num shl eax , num mov edx , eax movzx eax , byte ptr [ rdi + hexvar ] and eax , hexvar or eax , edx or eax , hexvar mov byte ptr [ rdi + hexvar ] , al mov rdx , rsi mov rsi , r8 call hexvar test eax , eax je hexvar cdqe lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] add rsi , qword ptr [ rdx + rax * num ] mov edx , num mov edi , num call hexvar add rsp , num ret
sub rsp , num mov rcx , qword ptr [ rip + hexvar ] mov r8 , rdi mov rdi , rdx movzx edx , byte ptr [ rdx + hexvar ] mov rax , rcx shr rax , hexvar and eax , num and edx , hexvar shl eax , num or eax , edx mov rdx , rsi mov rsi , r8 or eax , hexvar mov byte ptr [ rdi + hexvar ] , al call hexvar test eax , eax je hexvar cdqe mov rax , qword ptr [ rax * num + hexvar ] add rsp , num add rax , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ hexvar ] and rdx , hexvar cmp rdx , num setne al xor al , hexvar xor al , hexvar and al , num movzx ecx , al mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx add rsi , hexvar mov al , cl mov r8b , byte ptr [ rdx + hexvar ] and al , num shl al , num mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , r8b mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , hexvar mov cl , byte ptr [ rbp - hexvar ] or al , cl mov rdx , qword ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al mov rsi , qword ptr [ rbp - hexvar ] mov al , byte ptr [ rsi + hexvar ] and al , hexvar or al , hexvar mov byte ptr [ rsi + hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar movsxd rax , dword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] add rax , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] and esi , hexvar cmp esi , num setne bl xor bl , hexvar xor bl , hexvar and bl , num movzx ebx , bl mov esi , dword ptr [ ebp + hexvar ] mov bh , byte ptr [ esi + hexvar ] and bl , num shl bl , num and bh , hexvar or bh , bl mov byte ptr [ esi + hexvar ] , bh mov esi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ esi + hexvar ] and bl , hexvar or bl , hexvar mov byte ptr [ esi + hexvar ] , bl mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] add ecx , dword ptr [ eax * num + hexvar ] mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov edx , dword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr sl , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ sl ] str r1 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , num mov r4 , r0 add r0 , sp , num str ip , [ sp , hexvar ] bl hexvar add r0 , sp , num bl hexvar cmp r0 , num beq hexvar mov sb , num mov r8 , num add r6 , sp , num ldr r1 , [ r4 , hexvar ] add r7 , r6 , r0 mov fp , r6 cmp r1 , hexvar ldrb r5 , [ fp ] , num bne hexvar ldr r3 , [ r4 , hexvar ] strb sb , [ r4 , hexvar ] ldr r2 , [ r4 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ r4 , hexvar ] cmp r7 , fp add r3 , r3 , num str r8 , [ r4 , hexvar ] strb r5 , [ r4 ] strb r5 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] beq hexvar mov r3 , num ldrb r5 , [ fp ] add r6 , r6 , num add r1 , r3 , num cmp r7 , r6 str r1 , [ r4 , hexvar ] strb r5 , [ r4 , r3 ] strb r5 , [ r4 , hexvar ] bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sl ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr sl , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ sl ] str r1 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , num mov r4 , r0 add r0 , sp , num str ip , [ sp , hexvar ] bl hexvar add r0 , sp , num bl hexvar cmp r0 , num beq hexvar mov sb , num mov r8 , num add r6 , sp , num ldr r1 , [ r4 , hexvar ] add r7 , r6 , r0 mov fp , r6 cmp r1 , hexvar ldrb r5 , [ fp ] , num bne hexvar ldr r3 , [ r4 , hexvar ] strb sb , [ r4 , hexvar ] ldr r2 , [ r4 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ r4 , hexvar ] cmp r7 , fp add r3 , r3 , num str r8 , [ r4 , hexvar ] strb r5 , [ r4 ] strb r5 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] beq hexvar mov r3 , num ldrb r5 , [ fp ] add r6 , r6 , num add r1 , r3 , num cmp r7 , r6 str r1 , [ r4 , hexvar ] strb r5 , [ r4 , r3 ] strb r5 , [ r4 , hexvar ] bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sl ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx xor ecx , ecx sub esp , num push dword ptr [ ebp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ ebp - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar sub esp , num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar nop mov eax , dword ptr [ ebp - hexvar ] xor eax , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
ldr r3 , [ pc , hexvar ] push { r4 , lr } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar ldr r2 , [ pc , hexvar ] mov r3 , r0 mov r1 , num mov r0 , r4 bl hexvar bl hexvar andeq r8 , r2 , ip , ror num andeq r6 , r1 , r4 , ror num andeq r6 , r1 , r8 , ror num
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar nop nop nop nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar lea edx , [ ebx + hexvar ] mov edx , dword ptr [ edx ] push eax lea eax , [ ebx - hexvar ] push eax push num push edx call hexvar add esp , hexvar call hexvar nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 move s1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) addiu a2 , sp , hexvar move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw a1 , - hexvar ( gp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 sb zero , hexvar ( v0 ) sb zero , hexvar ( v0 ) lw a0 , hexvar ( sp ) sw a0 , hexvar ( v0 ) move a1 , zero jal hexvar nop lw gp , hexvar ( sp ) swc1 f0 , hexvar ( s0 ) b hexvar addiu v0 , zero , num lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp byte ptr [ ebx + hexvar ] , num mov esi , dword ptr [ esp + hexvar ] je hexvar xor eax , eax test esi , esi je hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ecx ] mov esi , dword ptr [ esi + edx * num ] test esi , esi je hexvar sub esp , num add edx , num mov dword ptr [ ecx ] , edx push esi push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov edi , eax mov dword ptr [ eax + hexvar ] , esi pop eax lea eax , [ ebx - hexvar ] pop edx push eax push esi call hexvar fld dword ptr [ ebx - hexvar ] add esp , hexvar test eax , eax fstp dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmovne eax , dword ptr [ ebx - hexvar ] mov dword ptr [ edi + hexvar ] , eax lea eax , [ ebx + hexvar ] cmp byte ptr [ eax + hexvar ] , num je hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jle hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov edi , hexvar call hexvar sub dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jg hexvar nop leave ret
push { r4 , r5 , r6 , lr } subs r4 , r0 , num pople { r4 , r5 , r6 , pc } mov r6 , hexvar ldr r5 , [ pc , hexvar ] b hexvar subs r4 , r4 , num popeq { r4 , r5 , r6 , pc } ldr r0 , [ r5 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] add r1 , r3 , num cmp r3 , r2 strlo r1 , [ r0 , hexvar ] strblo r6 , [ r3 ] blo hexvar mov r1 , hexvar bl hexvar subs r4 , r4 , num bne hexvar pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
test edi , edi jle hexvar push rbx mov ebx , edi jmp hexvar nop dword ptr [ rax ] lea rdx , [ rax + num ] sub ebx , num mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , hexvar je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jb hexvar mov esi , hexvar call hexvar sub ebx , num jne hexvar pop rbx ret nop dword ptr [ rax ] nop word ptr cs : [ rax + rax ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov edi , hexvar call hexvar xor esi , esi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov esi , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov esi , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , esi mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , hexvar push hexvar call hexvar add ebx , hexvar call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , edi mov dword ptr [ eax + hexvar ] , esi mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov dword ptr [ eax + num ] , edx pop ebx pop esi pop edi ret
push r14 push r13 mov r14 , rsi push r12 push rbp mov r13 , rdx push rbx mov r12 , rcx mov rbp , r8 mov ebx , r9d mov edi , hexvar call hexvar mov qword ptr [ rax ] , r14 mov qword ptr [ rax + num ] , r13 mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , r12d mov dword ptr [ rax + hexvar ] , ebp mov dword ptr [ rax + hexvar ] , ebx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov edi , hexvar call hexvar xor esi , esi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov esi , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov esi , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , esi mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , num mov eax , dword ptr [ edi + num ] push ebx push dword ptr [ esi + num ] push dword ptr [ esi ] call dword ptr [ eax + hexvar ] add esp , hexvar mov eax , dword ptr [ edi + num ] add ebx , num push ebx push dword ptr [ esi + hexvar ] push dword ptr [ esi + num ] call dword ptr [ eax + hexvar ] add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , num mov eax , dword ptr [ edi + num ] push ebx push dword ptr [ esi + num ] add ebx , num push dword ptr [ esi ] call dword ptr [ eax + hexvar ] add esp , hexvar mov eax , dword ptr [ edi + num ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esi + hexvar ] mov ecx , dword ptr [ esi + num ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr [ eax + hexvar ] pop ebx pop esi pop edi jmp eax jmp hexvar nop nop nop nop nop nop nop nop nop nop nop nop nop
push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax cmp esi , num je hexvar mov edi , esi and edi , num mov rsi , r12 call hexvar mov rbx , rax mov rax , rbx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax cmp esi , num je hexvar mov edi , esi and edi , num mov rsi , r12 call hexvar mov rbx , rax mov rax , rbx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax cmp esi , num je hexvar mov edi , esi and edi , num mov rsi , r12 call hexvar mov rbx , rax mov rax , rbx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp mov r12 , rdx push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax cmp esi , num je hexvar and esi , num jne hexvar cmp rdi , rdx jae hexvar lea r8 , [ rsp + num ] xor edx , edx mov rsi , r12 mov rcx , rsp call hexvar mov rbp , rax mov eax , dword ptr [ rsp ] mov edx , num lea rsi , [ rip + hexvar ] add rbx , rax mov eax , dword ptr [ rsp + num ] test al , num jne hexvar test al , num jne hexvar lea rsi , [ rip + hexvar ] mov rcx , rbp mov rdx , rbp mov edi , num xor eax , eax call hexvar jmp hexvar nop lea rsi , [ rip + hexvar ] xor eax , eax mov edx , num mov edi , num call hexvar cmp rbx , r12 jae hexvar mov rbp , r12 mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar sub rbp , rbx sub rbp , num call hexvar test rbp , rbp jne hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi mov rbx , r12 call hexvar mov edi , num mov rsi , rax xor eax , eax call hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar nop dword ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov edi , num call hexvar lea r8 , [ rsp + num ] xor edx , edx mov rdi , rbx mov rcx , rsp mov rsi , r12 call hexvar mov rbp , rax mov eax , dword ptr [ rsp ] add rbx , rax mov eax , ebp cmp rbp , rax mov eax , dword ptr [ rsp + num ] je hexvar or eax , num mov dword ptr [ rsp + num ] , eax test al , num mov edx , num lea rsi , [ rip + hexvar ] jne hexvar test al , num jne hexvar cmp ebp , num je hexvar cmp ebp , num mov edx , num lea rsi , [ rip + hexvar ] jne hexvar xor edi , edi call hexvar mov edi , num mov rsi , rax xor eax , eax call hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] mov rax , rbx jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , num test edi , edi je hexvar mov esi , dword ptr [ edi ] cmp esi , num je hexvar mov esi , num mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar cmp dword ptr [ esi ] , num je hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] str r3 , [ sp , hexvar ] ldr r0 , [ sp ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r0 , [ r3 , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num moveq r3 , num movne r3 , num and r3 , r3 , hexvar mvn r2 , num ldr r1 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , num ] mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , r2 blt hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r1 , num mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bge hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , num ] mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw s2 , ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 sw zero , hexvar ( a0 )
push { r4 , r5 , r6 , lr } mov r5 , num mov r4 , r0 ldr r2 , [ r0 , hexvar ] str r5 , [ r0 , hexvar ] str r5 , [ r0 , hexvar ] str r5 , [ r0 , hexvar ] lsl r2 , r2 , num mov r1 , r5 ldr r0 , [ r0 , hexvar ] bl hexvar str r5 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num nop leave ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num shl eax , num push eax push num push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar pop ebx pop esi ret
lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar lea rax , [ rax + hexvar ] cmp rsi , rax je hexvar test byte ptr [ rsi + hexvar ] , hexvar je hexvar ret push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rsi mov rbp , rdi mov rdi , rsi call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] cmp esi , edx je hexvar add eax , hexvar cmp esi , eax je hexvar mov eax , dword ptr [ esi + hexvar ] test ah , hexvar mov dword ptr [ esp + hexvar ] , eax je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar add rax , hexvar cmp rsi , rax je hexvar test byte ptr [ rsi + hexvar ] , hexvar je hexvar ret nop push r13 push r12 push rbp push rbx mov rbp , rdi mov rdi , rsi mov rbx , rsi sub rsp , num call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar lea rax , [ rax + hexvar ] cmp rsi , rax je hexvar test byte ptr [ rsi + hexvar ] , hexvar je hexvar ret push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rsi mov rbp , rdi mov rdi , rsi call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) addiu s7 , zero , num sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) addiu s4 , zero , - num sw s3 , hexvar ( sp ) addiu s3 , zero , num sw s2 , hexvar ( sp ) addiu s2 , zero , num sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , a1 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw fp , hexvar ( sp ) addiu a1 , zero , hexvar lw gp , hexvar ( sp ) move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar move s6 , v0 lw s0 , hexvar ( s1 )
push rbp push r15 push r14 push r12 push rbx mov r14 , rsi mov rbx , rdi mov rdi , rsi call hexvar mov r15 , rax mov rdi , rbx mov esi , hexvar call hexvar mov r12 , qword ptr [ rbx + hexvar ] nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar mov rdi , rbx mov rsi , r12 call hexvar test eax , eax jg hexvar jmp hexvar mov rsi , r14 mov edx , r15d call hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov r14 , rsi mov rbx , rdi mov rdi , rsi call hexvar mov r15 , rax mov rdi , rbx mov esi , hexvar call hexvar mov r12 , qword ptr [ rbx + hexvar ] nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar mov rdi , rbx mov rsi , r12 call hexvar test eax , eax jg hexvar jmp hexvar mov rsi , r14 mov edx , r15d call hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rcx , rcx je hexvar mov rbx , r8 test r8 , r8 je hexvar mov r14 , rcx mov r15 , rdx mov r13 , rsi mov r12 , rdi mov dword ptr [ rsp + hexvar ] , r9d mov al , byte ptr [ rcx ] test al , al je hexvar lea rbp , [ r14 + num ] nop movsx esi , al mov rdi , rbx call hexvar test rax , rax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar movzx eax , byte ptr [ rbp ] add rbp , num test al , al jne hexvar test r13 , r13 je hexvar mov rbp , qword ptr [ rsp + hexvar ] test rbp , rbp je hexvar mov qword ptr [ rsp + hexvar ] , r15 mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r15 , rax mov eax , dword ptr [ rsp + hexvar ] mov qword ptr [ r15 + num ] , r13 xor ecx , ecx cmp dword ptr [ rsp + hexvar ] , num setne cl mov dword ptr [ r15 + hexvar ] , ecx mov dword ptr [ r15 + hexvar ] , eax mov dword ptr [ r15 ] , num mov qword ptr [ r15 + hexvar ] , rbp cmp qword ptr [ r12 + num ] , num lea rbp , [ r12 + num ] jne hexvar call hexvar mov qword ptr [ rbp ] , rax test rax , rax je hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r15 + hexvar ] , rax mov qword ptr [ r15 + hexvar ] , r14 mov qword ptr [ r15 + hexvar ] , rbx mov rdi , qword ptr [ rbp ] mov rsi , r15 call hexvar xor ecx , ecx test eax , eax setle cl sub eax , ecx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a3 , hexvar lw s1 , hexvar ( sp ) move s4 , a0 move s6 , a1 move s7 , a2 beqz s1 , hexvar move s3 , a3 lb a1 , ( a3 ) beqz a1 , hexvar addiu s5 , zero , hexvar move s0 , a3 lui s2 , hexvar b hexvar addiu s2 , s2 , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar addiu v0 , zero , - num addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar addiu v0 , zero , - num addiu s0 , s0 , num lb a1 , ( s0 ) beqz a1 , hexvar lw v0 , hexvar ( sp ) move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a3 , s2 sw s5 , hexvar ( sp ) addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar addiu s0 , s0 , num lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) move a1 , s6 move a0 , s4 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw v0 , num ( s4 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rcx , rcx je hexvar mov rbx , r8 test r8 , r8 je hexvar mov r14 , rcx mov r15 , rdx mov r13 , rsi mov r12 , rdi mov dword ptr [ rsp + hexvar ] , r9d mov al , byte ptr [ rcx ] test al , al je hexvar lea rbp , [ r14 + num ] nop movsx esi , al mov rdi , rbx call hexvar test rax , rax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar movzx eax , byte ptr [ rbp ] add rbp , num test al , al jne hexvar test r13 , r13 je hexvar mov rbp , qword ptr [ rsp + hexvar ] test rbp , rbp je hexvar mov qword ptr [ rsp + hexvar ] , r15 mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r15 , rax mov eax , dword ptr [ rsp + hexvar ] mov qword ptr [ r15 + num ] , r13 xor ecx , ecx cmp dword ptr [ rsp + hexvar ] , num setne cl mov dword ptr [ r15 + hexvar ] , ecx mov dword ptr [ r15 + hexvar ] , eax mov dword ptr [ r15 ] , num mov qword ptr [ r15 + hexvar ] , rbp cmp qword ptr [ r12 + num ] , num lea rbp , [ r12 + num ] jne hexvar call hexvar mov qword ptr [ rbp ] , rax test rax , rax je hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r15 + hexvar ] , rax mov qword ptr [ r15 + hexvar ] , r14 mov qword ptr [ r15 + hexvar ] , rbx mov rdi , qword ptr [ rbp ] mov rsi , r15 call hexvar xor ecx , ecx test eax , eax setle cl sub eax , ecx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar test rcx , rcx je hexvar mov rbx , r8 test r8 , r8 je hexvar mov r14 , rcx mov r15 , rdx mov r13 , rsi mov r12 , rdi mov dword ptr [ rsp + hexvar ] , r9d mov al , byte ptr [ rcx ] test al , al je hexvar lea rbp , [ r14 + num ] nop movsx esi , al mov rdi , rbx call hexvar test rax , rax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar movzx eax , byte ptr [ rbp ] add rbp , num test al , al jne hexvar test r13 , r13 je hexvar mov rbp , qword ptr [ rsp + hexvar ] test rbp , rbp je hexvar mov qword ptr [ rsp + hexvar ] , r15 mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r15 , rax mov eax , dword ptr [ rsp + hexvar ] mov qword ptr [ r15 + num ] , r13 xor ecx , ecx cmp dword ptr [ rsp + hexvar ] , num setne cl mov dword ptr [ r15 + hexvar ] , ecx mov dword ptr [ r15 + hexvar ] , eax mov dword ptr [ r15 ] , num mov qword ptr [ r15 + hexvar ] , rbp cmp qword ptr [ r12 + num ] , num lea rbp , [ r12 + num ] jne hexvar call hexvar mov qword ptr [ rbp ] , rax test rax , rax je hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r15 + hexvar ] , rax mov qword ptr [ r15 + hexvar ] , r14 mov qword ptr [ r15 + hexvar ] , rbx mov rdi , qword ptr [ rbp ] mov rsi , r15 call hexvar xor ecx , ecx test eax , eax setle cl sub eax , ecx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , esi test byte ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar xor eax , eax cmp eax , dword ptr [ hexvar ] jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , hexvar xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , dword ptr [ ebp - hexvar ] jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
cmp byte ptr [ rip + hexvar ] , num je hexvar mov ecx , dword ptr [ rip + hexvar ] xor eax , eax test ecx , ecx je hexvar cmp byte ptr [ rip + hexvar ] , num mov eax , dword ptr [ rdx + hexvar ] je hexvar mov ecx , dword ptr [ rsi + hexvar ] and ecx , hexvar cmp ecx , eax sete al ret push rax call hexvar nop word ptr [ rax + rax ]
cmp byte ptr [ rip + hexvar ] , num je hexvar mov ecx , dword ptr [ rip + hexvar ] xor eax , eax test ecx , ecx je hexvar cmp byte ptr [ rip + hexvar ] , num mov eax , dword ptr [ rdx + hexvar ] je hexvar mov ecx , dword ptr [ rsi + hexvar ] and ecx , hexvar cmp ecx , eax sete al ret push rax call hexvar nop word ptr [ rax + rax ]
sub rsp , num cmp qword ptr [ rdi + num ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax + num ] test rdx , rdx je hexvar mov qword ptr [ rax + hexvar ] , rsi mov qword ptr [ rdi + hexvar ] , rdx mov eax , num add rsp , num ret
ldr r2 , [ r0 , num ] push { r4 , lr } cmp r2 , num beq hexvar ldr r2 , [ r0 , hexvar ] mov r3 , r0 cmp r2 , num beq hexvar ldr r4 , [ r2 , num ] cmp r4 , num beq hexvar str r1 , [ r2 , hexvar ] mov r0 , num str r4 , [ r3 , hexvar ] pop { r4 , pc } andeq r0 , r0 , r0 sbcsvc r3 , lr , r5 , lsl sp
ldr r2 , [ r0 , num ] push { r4 , lr } cmp r2 , num beq hexvar ldr r2 , [ r0 , hexvar ] mov r3 , r0 cmp r2 , num beq hexvar ldr r4 , [ r2 , num ] cmp r4 , num beq hexvar str r1 , [ r2 , hexvar ] mov r0 , num str r4 , [ r3 , hexvar ] pop { r4 , pc } andeq r0 , r0 , r0 ldmibls lr , { r0 , r1 , r2 , r3 , r4 , r5 , r7 , r8 , sb , ip } ^
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + num ] test edx , edx je hexvar mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + num ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx call hexvar mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num mov byte ptr [ ebp - hexvar ] , al push dword ptr [ ebp + hexvar ] call hexvar add esp , num mov byte ptr [ ebp - num ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar movzx eax , byte ptr [ ebp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - num ] , num je hexvar mov eax , num jmp hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] push eax push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s2 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw v0 , hexvar ( s1 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al test byte ptr [ rbp - hexvar ] , num je hexvar test byte ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar test byte ptr [ rbp - hexvar ] , num jne hexvar test byte ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rax mov rsi , rcx movabs rdx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test edi , edi js hexvar cmp eax , edi jle hexvar sub esp , num push edi push esi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , eax jge hexvar cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar cmp eax , edi jle hexvar test edi , edi js hexvar sub esp , num push edi push esi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r0 , [ sp , num ] bl hexvar mov r2 , r0 ldr r3 , [ sp ] cmp r3 , r2 bge hexvar ldr r3 , [ sp ] cmp r3 , num bge hexvar mov r3 , num b hexvar ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
ldrb r3 , [ r0 ] cmp r3 , hexvar beq hexvar cmp r3 , num beq hexvar cmp r3 , hexvar beq hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , num cmpne r3 , hexvar bne hexvar cmp r3 , hexvar bne hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , hexvar beq hexvar cmp r3 , num bne hexvar mov r0 , num bx lr ldrb r3 , [ r0 , num ] cmp r3 , hexvar beq hexvar cmp r3 , num cmpne r3 , hexvar add r0 , r0 , num bne hexvar b hexvar ldrb r3 , [ r0 , num ] add r0 , r0 , num cmp r3 , num cmpne r3 , hexvar beq hexvar cmp r3 , num cmpne r3 , hexvar bne hexvar b hexvar mov r0 , num bx lr
ldrb r3 , [ r0 ] cmp r3 , hexvar bne hexvar mov r0 , num bx lr add r2 , r0 , num ldrb r3 , [ r0 , num ] cmp r3 , num cmpne r3 , hexvar beq hexvar mov r0 , r2 ldrb r3 , [ r0 ] cmp r3 , num cmpne r3 , hexvar beq hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , num cmpne r3 , hexvar bne hexvar ldrb r3 , [ r0 ] cmp r3 , hexvar bne hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , hexvar beq hexvar ldrb r3 , [ r0 ] cmp r3 , num beq hexvar cmp r3 , hexvar bne hexvar ldrb r3 , [ r0 , num ] cmp r3 , hexvar beq hexvar add r0 , r0 , num b hexvar mov r0 , num bx lr mov r0 , num bx lr
ldrb r3 , [ r0 ] cmp r3 , hexvar beq hexvar cmp r3 , num beq hexvar cmp r3 , hexvar beq hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , num cmpne r3 , hexvar bne hexvar cmp r3 , hexvar bne hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , hexvar beq hexvar cmp r3 , num bne hexvar mov r0 , num bx lr ldrb r3 , [ r0 , num ] cmp r3 , hexvar beq hexvar cmp r3 , num cmpne r3 , hexvar add r0 , r0 , num bne hexvar b hexvar ldrb r3 , [ r0 , num ] add r0 , r0 , num cmp r3 , num cmpne r3 , hexvar beq hexvar cmp r3 , num cmpne r3 , hexvar bne hexvar b hexvar mov r0 , num bx lr
movzx edx , byte ptr [ rdi ] xor eax , eax cmp dl , hexvar je hexvar test dl , dl je hexvar nop word ptr [ rax + rax ] cmp dl , hexvar je hexvar nop dword ptr [ rax ] add rdi , num movzx edx , byte ptr [ rdi ] test dl , dl je hexvar cmp dl , hexvar jne hexvar cmp dl , hexvar jne hexvar nop dword ptr [ rax ] add rdi , num movzx edx , byte ptr [ rdi ] cmp dl , hexvar je hexvar test dl , dl jne hexvar mov eax , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , num xor edx , hexvar mov edi , ecx and edi , hexvar and eax , edx mov ebx , esi and ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edx and eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] or edi , eax mov eax , dword ptr [ ebp - hexvar ] or ebx , eax xor edi , ebx or ecx , esi xor ecx , hexvar or edx , hexvar and ecx , edx or edi , ecx mov dword ptr [ ebp + num ] , edi xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov cl , al xor cl , hexvar and cl , num mov dl , num xor dl , num and al , dl or cl , al mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar add eax , num sub eax , hexvar mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] or eax , num mov dword ptr [ ebp + num ] , eax xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor al , hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] sub rdi , hexvar setb al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi jmp rdx mov qword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov al , byte ptr [ rbp - num ] or al , num mov byte ptr [ rbp - num ] , al mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rax , qword ptr [ rbp - num ] sub rax , - num setne cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] xor edx , edx mov cl , dl mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , cl jmp rsi mov rdi , qword ptr [ rbp - num ] call hexvar xor al , num mov rdi , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp rdi mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov edx , ecx mov ecx , edx and ecx , num mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
cmp r0 , hexvar movlo r0 , hexvar push { r4 , r5 , r6 , r7 , r8 , lr } orr r6 , r0 , num cmn r6 , num beq hexvar ldr r8 , [ pc , hexvar ] umull r2 , r3 , r6 , r8 lsr r3 , r3 , num add r3 , r3 , r3 , lsl num cmp r6 , num sub r3 , r6 , r3 bls hexvar cmp r3 , num beq hexvar mov r7 , hexvar mov r5 , num mov r4 , num b hexvar cmp r1 , num add r7 , r7 , num beq hexvar add r4 , r4 , num mov r1 , r4 mov r0 , r6 bl hexvar add r5 , r5 , r7 cmp r5 , r6 mov r3 , r1 blo hexvar cmp r3 , num bne hexvar add r6 , r6 , num cmn r6 , num bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop dword ptr [ eax ]
push ebp mov ebp , esp sub esp , hexvar cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov dword ptr [ hexvar ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar lea ecx , [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop dword ptr [ eax ]
push { r4 , r5 , fp , lr } add fp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar bl hexvar mov r3 , r0 ldr r4 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r2 , r3 mov r1 , r4 mov r0 , num bl hexvar andeq fp , r2 , r4 , lsl num andeq sl , r1 , r4 , ror r7
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar
push rax add rdi , hexvar call hexvar xor ecx , ecx test rax , rax setne cl mov eax , ecx pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a0 , a0 , hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) jalr t9 sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) sltu v0 , zero , v0 jr ra addiu sp , sp , hexvar
push rax add rdi , hexvar call hexvar xor ecx , ecx test rax , rax setne cl mov eax , ecx pop rcx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax movsd xmm0 , qword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax ] , xmm0 movsd xmm0 , qword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax + num ] , xmm0 mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax sete bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub eax , ecx setne byte ptr [ ebp - hexvar ] movzx ecx , byte ptr [ ebp - hexvar ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a1 , hexvar ( fp ) sw a0 , hexvar ( fp ) sw a3 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , num ( a0 ) sw v0 , ( a0 ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , hexvar ( a0 ) sw v0 , num ( a0 ) lui v0 , hexvar lw v0 , hexvar ( v0 ) lw a1 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) xor v0 , v1 , v0 sltu v0 , zero , v0 sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lbu v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax movsd xmm0 , qword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax ] , xmm0 movsd xmm0 , qword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax + num ] , xmm0 mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] setne cl and cl , num mov byte ptr [ ebp - hexvar ] , cl test byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax movsd xmm0 , qword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax ] , xmm0 movsd xmm0 , qword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax + num ] , xmm0 mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] setne cl and cl , num mov byte ptr [ ebp - hexvar ] , cl test byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push rbp push rbx sub rsp , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rax , [ rbx - num ] cmp rax , qword ptr [ rip + hexvar ] jbe hexvar add rsp , num pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar mov rbx , qword ptr [ rip + hexvar ] lea rax , [ rbx - num ] cmp rax , qword ptr [ rip + hexvar ] jbe hexvar add rsp , num pop rbx pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ ebx + hexvar ] lea ecx , [ edx - num ] cmp ecx , dword ptr [ ebx + hexvar ] jbe hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe shl rax , num mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax - num ] mov rax , qword ptr [ rip + hexvar ] cmp rdx , rax ja hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] add eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] shl rcx , num add rax , rcx mov esi , num mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe mov qword ptr [ rip + hexvar ] , rax leave ret
push r15 push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rax , qword ptr [ rdi + num ] lea r9 , [ rsp + hexvar ] mov r8d , hexvar mov ecx , hexvar call qword ptr [ rax + hexvar ] mov rbx , rax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov rsi , qword ptr [ r14 + hexvar ] cmp dword ptr [ rsi + hexvar ] , num je hexvar mov dword ptr [ rsi + hexvar ] , num movsxd r15 , dword ptr [ rsi + hexvar ] cmp rbx , r15 jne hexvar mov rdi , qword ptr [ r14 + hexvar ] add rsi , hexvar mov rdx , rbx call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar mov rdi , r14 mov esi , num call hexvar xor ebx , ebx mov eax , ebx add rsp , hexvar pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + num ] lea edx , [ esp + hexvar ] push edx push hexvar push hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call dword ptr [ eax + hexvar ] mov edi , eax add esp , hexvar cmp dword ptr [ esp + num ] , num je hexvar mov eax , dword ptr [ esi + hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esi + hexvar ] cmp edi , dword ptr [ eax + hexvar ] je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , hexvar sub esp , num push eax push num push esi call hexvar add esp , hexvar mov edi , num mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + num ] lea edx , [ esp + hexvar ] push edx push hexvar push hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call dword ptr [ eax + hexvar ] mov edi , eax add esp , hexvar cmp dword ptr [ esp + num ] , num je hexvar mov eax , dword ptr [ esi + hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esi + hexvar ] cmp edi , dword ptr [ eax + hexvar ] je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , hexvar sub esp , num push eax push num push esi call hexvar add esp , hexvar mov edi , num mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push rbx sub rsp , hexvar mov r14 , rdi mov rax , qword ptr [ rdi + num ] lea r9 , [ rsp + hexvar ] mov r8d , hexvar mov ecx , hexvar call qword ptr [ rax + hexvar ] mov rbx , rax cmp dword ptr [ rsp + hexvar ] , num je hexvar mov rsi , qword ptr [ r14 + hexvar ] cmp dword ptr [ rsi + hexvar ] , num je hexvar mov dword ptr [ rsi + hexvar ] , num movsxd r15 , dword ptr [ rsi + hexvar ] cmp rbx , r15 jne hexvar mov rdi , qword ptr [ r14 + hexvar ] add rsi , hexvar mov rdx , rbx call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar mov rdi , r14 mov esi , num call hexvar xor ebx , ebx mov eax , ebx add rsp , hexvar pop rbx pop r14 pop r15 ret
call hexvar add edx , hexvar mov ecx , dword ptr [ esp + num ] cmp ecx , dword ptr [ edx + hexvar ] sete al cmp ecx , dword ptr [ edx + hexvar ] sete dl or eax , edx ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar mov r3 , num b hexvar mov r3 , num and r3 , r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr andeq r4 , r1 , ip , lsl num andeq r5 , r1 , ip , ror r4
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw a0 , num ( fp ) lw v1 , num ( fp ) lw v0 , - hexvar ( gp ) beq v1 , v0 , hexvar nop lw v1 , num ( fp ) lw v0 , - hexvar ( gp ) bne v1 , v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero andi v0 , v0 , num andi v0 , v0 , hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi lea rax , [ rip - hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar lea rax , [ rip - hexvar ] cmp qword ptr [ rbp - num ] , rax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
lea rax , [ rip + hexvar ] cmp rdi , num je hexvar lea rax , [ rip + hexvar ] cmp rdi , num jb hexvar cmp rdi , num lea rax , [ rip + hexvar ] mov edx , num cmovne rax , rdx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] test rdi , rdi mov qword ptr [ rbp - hexvar ] , rdi je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - hexvar ] , rax je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - hexvar ] , rax je hexvar jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] cmp rax , num je hexvar cmp rax , num jb hexvar cmp rax , num je hexvar jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] cmp rax , num je hexvar cmp rax , num jb hexvar cmp rax , num je hexvar jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar mov edx , dword ptr [ eax + hexvar ] cmp byte ptr [ edx ] , hexvar jne hexvar mov esi , eax lea eax , [ edx + num ] mov dword ptr [ esi + hexvar ] , eax movzx eax , byte ptr [ edx + num ] cmp al , hexvar je hexvar cmp al , hexvar je hexvar sub esp , hexvar push esi call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar cmp dword ptr [ eax ] , hexvar je hexvar mov eax , dword ptr [ esi + hexvar ] mov ebp , hexvar cmp byte ptr [ eax ] , hexvar je hexvar mov edx , dword ptr [ esi + hexvar ] movzx eax , byte ptr [ edx ] cmp al , hexvar je hexvar test al , al je hexvar lea ebx , [ edx + num ] mov ecx , ebx mov dword ptr [ esi + hexvar ] , ebx movzx eax , byte ptr [ ebx ] cmp al , hexvar je hexvar add ebx , num test al , al jne hexvar mov edi , num jmp hexvar sub esp , num push num push esi call hexvar mov edi , eax add esp , hexvar mov eax , dword ptr [ esi + hexvar ] cmp byte ptr [ eax ] , hexvar jne hexvar add eax , num mov dword ptr [ esi + hexvar ] , eax mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rax , qword ptr [ rdi + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar mov rbx , rdi lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx movzx eax , byte ptr [ rax + num ] cmp al , hexvar je hexvar cmp al , hexvar je hexvar call hexvar mov rbp , rax test rax , rax je hexvar cmp dword ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ rbx + hexvar ] mov r12d , hexvar cmp byte ptr [ rax ] , hexvar je hexvar mov rsi , qword ptr [ rbx + hexvar ] movzx eax , byte ptr [ rsi ] cmp al , hexvar je hexvar test al , al je hexvar lea rax , [ rsi + num ] mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax movzx ecx , byte ptr [ rax ] cmp cl , hexvar je hexvar add rax , num test cl , cl jne hexvar mov ebp , num jmp hexvar mov esi , num mov rdi , rbx call hexvar mov rbp , rax mov rax , qword ptr [ rbx + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar add rax , num mov qword ptr [ rbx + hexvar ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
mov rax , qword ptr [ rdi + hexvar ] cmp byte ptr [ rax ] , hexvar jne hexvar lea rdx , [ rax + num ] push rbx mov rbx , rdi mov qword ptr [ rdi + hexvar ] , rdx movzx ecx , byte ptr [ rax + num ] cmp cl , hexvar je hexvar cmp cl , hexvar je hexvar call hexvar test rax , rax je hexvar cmp dword ptr [ rax ] , hexvar je hexvar mov r8 , qword ptr [ rbx + hexvar ] mov esi , hexvar movzx ecx , byte ptr [ r8 ] cmp cl , hexvar jne hexvar lea rdx , [ r8 + num ] mov esi , hexvar mov qword ptr [ rbx + hexvar ] , rdx movzx ecx , byte ptr [ r8 + num ] mov r8 , rdx cmp cl , hexvar je hexvar test cl , cl je hexvar lea rcx , [ r8 + num ] jmp hexvar add rcx , num test dil , dil je hexvar mov qword ptr [ rbx + hexvar ] , rcx movzx edi , byte ptr [ rcx ] cmp dil , hexvar jne hexvar mov edi , ecx sub edi , r8d mov edx , dword ptr [ rbx + hexvar ] cmp edx , dword ptr [ rbx + hexvar ] jge hexvar movsxd rcx , edx add edx , num test r8 , r8 lea r9 , [ rcx + rcx * num ] mov rcx , qword ptr [ rbx + hexvar ] lea rcx , [ rcx + r9 * num ] mov dword ptr [ rcx + num ] , num mov dword ptr [ rbx + hexvar ] , edx je hexvar test edi , edi je hexvar mov dword ptr [ rcx + num ] , num mov dword ptr [ rcx ] , num mov qword ptr [ rcx + num ] , r8 mov dword ptr [ rcx + hexvar ] , edi mov rdx , rax mov rdi , rbx call hexvar mov rdx , qword ptr [ rbx + hexvar ] movzx ecx , byte ptr [ rdx ] cmp cl , hexvar je hexvar xor eax , eax pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , hexvar ( a0 ) lb a1 , ( v0 ) addiu v1 , zero , hexvar bne a1 , v1 , hexvar addiu v1 , v0 , num sw v1 , hexvar ( a0 ) lb v0 , num ( v0 ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar move s0 , a0 addiu v1 , zero , hexvar bne v0 , v1 , hexvar nop move a1 , zero move a0 , s0 jal hexvar nop move s1 , v0 lw v0 , hexvar ( s0 ) lb a0 , ( v0 ) addiu v1 , zero , hexvar bne a0 , v1 , hexvar addiu v0 , v0 , num sw v0 , hexvar ( s0 ) move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop beqz v0 , hexvar move s1 , v0 lw v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v0 , hexvar ( s0 )
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push rbx mov rbx , rdi call hexvar test rax , rax je hexvar mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov dword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , ecx mov edi , dword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov esi , hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num mov cl , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar jmp hexvar mov esi , hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov al , byte ptr [ rbp - hexvar ] xor al , hexvar and al , num mov byte ptr [ rbp - num ] , al mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al mov rsp , rbp pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ edx + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar mov ecx , num lea edi , [ ebx - hexvar ] mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num mov eax , num test cl , cl je hexvar mov ecx , num lea edi , [ ebx - hexvar ] mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al setne al pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , ecx mov edi , dword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov esi , hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num mov cl , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar jmp hexvar mov esi , hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov al , byte ptr [ rbp - hexvar ] xor al , hexvar and al , num mov byte ptr [ rbp - num ] , al mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al mov rsp , rbp pop rbp ret
lui v0 , hexvar lw a1 , hexvar ( a0 ) addiu v0 , v0 , - hexvar beq a1 , v0 , hexvar nop jr ra addiu v0 , zero , num lw v0 , num ( a0 ) beqz v0 , hexvar nop j hexvar nop
lea rax , [ rip + hexvar ] cmp qword ptr [ rdi + hexvar ] , rax je hexvar mov eax , num ret
ldr r3 , [ pc , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r2 , r3 beq hexvar mov r0 , num bx lr ldr r3 , [ r0 , num ] cmp r3 , num beq hexvar push { r4 , lr } mov r4 , r0 mov r0 , r3 bl hexvar cmp r0 , num mov r0 , num bne hexvar ldr r1 , [ r4 , hexvar ] ldr r2 , [ r4 , hexvar ] ldr r3 , [ pc , hexvar ] str r1 , [ r2 , hexvar ] ldr ip , [ r3 ] ldr r1 , [ r4 , hexvar ] cmp r4 , ip str r2 , [ r1 , hexvar ] bne hexvar cmp r4 , r1 moveq r2 , num strne r1 , [ r3 ] streq r2 , [ r3 ] mov r1 , num ldr r2 , [ r3 , num ] str r1 , [ r4 , num ] sub r2 , r2 , num str r2 , [ r3 , num ] pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] lea ecx , [ eax - hexvar ] mov eax , num cmp dword ptr [ edx + hexvar ] , ecx je hexvar add esp , hexvar ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r0 mov r7 , r1 ldr r4 , [ pc , hexvar ] ldr r0 , [ r4 , hexvar ] ldr r3 , [ r0 , num ] ldr r5 , [ r3 , hexvar ] ldr r3 , [ r4 , hexvar ] mov r2 , r6 ldr r1 , [ r4 , hexvar ] blx r5 mov r5 , r0 ldr r0 , [ r4 , hexvar ] ldr r3 , [ r0 , num ] ldr r8 , [ r3 , hexvar ] ldr r3 , [ r4 , hexvar ] mov r2 , r7 ldr r1 , [ r4 , hexvar ] blx r8 cmp r0 , num cmpne r5 , num beq hexvar mov r3 , r0 ldr r2 , [ r5 , hexvar ] ldr r1 , [ r0 , hexvar ] ldr r0 , [ pc , hexvar ] cmp r2 , r0 beq hexvar ldr r0 , [ pc , hexvar ] cmp r1 , r0 beq hexvar ldr r0 , [ r2 , hexvar ] ldr r2 , [ r5 , num ] add r0 , r0 , r2 ldr r2 , [ r1 , hexvar ] ldr r3 , [ r3 , num ] add r3 , r2 , r3 cmp r0 , r3 beq hexvar mvnlo r0 , num movhs r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 stmpl pc , { r0 , r1 , r3 , r7 , r8 , sb , fp , sp , lr , pc } ^
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v0 , num ( v0 ) lw v0 , hexvar ( v0 ) lui v1 , hexvar lw a0 , hexvar ( v1 ) lui v1 , hexvar lw a1 , hexvar ( v1 ) lui v1 , hexvar lw v1 , hexvar ( v1 ) move a3 , v1 lw a2 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v0 , num ( v0 ) lw v0 , hexvar ( v0 ) lui v1 , hexvar lw a0 , hexvar ( v1 ) lui v1 , hexvar lw a1 , hexvar ( v1 ) lui v1 , hexvar lw v1 , hexvar ( v1 ) move a3 , v1 lw a2 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push r12 mov r12 , rdi mov rdi , qword ptr [ rip + hexvar ] push rbp push rbx mov rbp , rsi mov rcx , qword ptr [ rip + hexvar ] mov rdx , r12 mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov rbx , rax mov rcx , qword ptr [ rip + hexvar ] mov rdx , rbp mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test rbx , rbx je hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbx + hexvar ] lea rcx , [ rip + hexvar ] mov rsi , qword ptr [ rax + hexvar ] cmp rdx , rcx je hexvar cmp rsi , rcx je hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] add rcx , qword ptr [ rdx + hexvar ] add rax , qword ptr [ rsi + hexvar ] cmp rcx , rax je hexvar sbb eax , eax or eax , num pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ hexvar ] mov rsi , qword ptr [ rsi + num ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ hexvar ] mov eax , dword ptr [ hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov esi , eax mov r8 , qword ptr [ rbp - hexvar ] call r8
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) addiu a1 , zero , hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) sb zero , ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar sub esp , num push hexvar push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push r14 push rbx sub rsp , hexvar mov r14 , rsi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ r14 ] mov qword ptr [ rsp + num ] , rax mov qword ptr [ rsp + hexvar ] , hexvar lea rcx , [ rsp + num ] mov rdi , rbx mov esi , hexvar xor edx , edx call hexvar test eax , eax js hexvar cdqe mov byte ptr [ rbx + rax ] , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor ebx , ebx mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar xor eax , eax call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) addiu a0 , zero , hexvar sw s0 , hexvar ( sp ) move s0 , a1 lw s1 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , a1 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a3 , sp , hexvar lw gp , hexvar ( sp ) move a2 , zero lw v1 , ( s0 )
push r14 push rbx sub rsp , hexvar mov r14 , rsi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ r14 ] mov qword ptr [ rsp + num ] , rax mov qword ptr [ rsp + hexvar ] , hexvar lea rcx , [ rsp + num ] mov rdi , rbx mov esi , hexvar xor edx , edx call hexvar test eax , eax js hexvar cdqe mov byte ptr [ rbx + rax ] , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor ebx , ebx mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar xor eax , eax call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop r14 ret
push r14 push rbx sub rsp , hexvar mov r14 , rsi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rax , qword ptr [ r14 ] mov qword ptr [ rsp + num ] , rax mov qword ptr [ rsp + hexvar ] , hexvar lea rcx , [ rsp + num ] mov rdi , rbx mov esi , hexvar xor edx , edx call hexvar test eax , eax js hexvar cdqe mov byte ptr [ rbx + rax ] , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor ebx , ebx mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar xor eax , eax call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop r14 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar cmp eax , num setl bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar cmp eax , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , - num jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] sub eax , - num setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp eax , num jge hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , - num jae hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop bgez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop beqz v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar lui v0 , hexvar lui gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( v0 ) beqz s0 , hexvar lw ra , hexvar ( sp ) beqz a0 , hexvar move s1 , a0 lw t9 , - hexvar ( gp ) move a0 , s1 jalr t9 lw a1 , ( s0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw s0 , num ( s0 ) bnez s0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) move v0 , zero lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar lui v0 , hexvar lui gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( v0 ) beqz s0 , hexvar lw ra , hexvar ( sp ) beqz a0 , hexvar move s1 , a0 lw t9 , - hexvar ( gp ) move a0 , s1 jalr t9 lw a1 , ( s0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw s0 , num ( s0 ) bnez s0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) move v0 , zero lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ ebx + hexvar ] test esi , esi sete dl test eax , eax sete al or dl , al mov ebp , edx jne hexvar lea esi , [ esi ] sub esp , num push dword ptr [ esi ] push edi call hexvar add esp , hexvar test eax , eax je hexvar mov esi , dword ptr [ esi + num ] test esi , esi jne hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r1 , num mov r2 , r4 mov r5 , r0 bl hexvar cmp r0 , num subne r0 , r0 , r5 addne r0 , r0 , num moveq r0 , r4 pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] xor esi , esi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx esi , cl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num push esi push num push edi call hexvar add esp , hexvar mov edx , eax sub edx , edi add edx , num test eax , eax mov eax , esi cmovne eax , edx pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui a3 , hexvar sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp push edi push esi push ebx call hexvar add ecx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , ecx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] lea edi , [ esi + num ] mov eax , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , edx and edi , hexvar add edi , hexvar add eax , edi push eax push dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar test eax , eax mov ecx , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num mov eax , dword ptr [ edx ] lea ebx , [ ecx + eax ] add edi , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ edx ] , edi push ebx push num push num call dword ptr [ eax + hexvar ] lea eax , [ ebx + num ] add esp , hexvar mov edi , dword ptr [ ebp + num ] push eax mov eax , esi cdq push edx push esi call dword ptr [ edi + hexvar ] lea edx , [ ebx + num ] add esp , hexvar mov eax , dword ptr [ ebp + num ] lea edi , [ ebx + hexvar ] push edx push num push hexvar call dword ptr [ eax + hexvar ] add esp , hexvar xor edx , edx mov eax , hexvar mov dword ptr [ ebx + hexvar ] , hexvar mov word ptr [ ebx + hexvar ] , ax mov word ptr [ ebx + hexvar ] , dx push esi push dword ptr [ esp + hexvar ] push edi mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test esi , num mov ecx , dword ptr [ esp + hexvar ] je hexvar nop mov byte ptr [ edi + esi ] , num add esi , num test esi , num jne hexvar add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rsi + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r14 , qword ptr [ rsi + hexvar ] cmp dword ptr [ r14 + hexvar ] , num je hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] cmp dword ptr [ edi + hexvar ] , num je hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rsi + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] cmp rax , qword ptr [ rcx + num ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rcx , hexvar sub rax , rcx add rax , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jae hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] jbe hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lw a1 , ( a0 ) lw a2 , num ( a0 ) sltu v0 , a1 , a2 beqz v0 , hexvar nop b hexvar move v0 , zero sltu v1 , v0 , a0 movn v0 , a0 , v1 addiu a1 , a1 , num sltu v1 , a1 , a2 beqz v1 , hexvar nop lw v1 , ( a1 )
push esi push ebx mov eax , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ eax ] mov esi , dword ptr [ eax + num ] xor eax , eax cmp ebx , esi jae hexvar lea esi , [ esi ] mov edx , dword ptr [ ebx ] test edx , edx je hexvar mov edx , dword ptr [ ebx + num ] mov ecx , num test edx , edx je hexvar lea esi , [ esi ] mov edx , dword ptr [ edx + num ] add ecx , num test edx , edx jne hexvar cmp eax , ecx cmovb eax , ecx add ebx , num cmp ebx , esi jb hexvar pop ebx pop esi ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov ebp , num sub esp , num push esi push edi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp eax , - num je hexvar test eax , eax je hexvar add ebp , eax add edi , eax sub esi , eax jne hexvar jmp hexvar call hexvar mov dword ptr [ eax ] , num mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a2 , hexvar sw gp , hexvar ( sp ) move s0 , a2 move s3 , a0 move s1 , a1 move s2 , zero b hexvar addiu s4 , zero , - num beqz v0 , hexvar lw t9 , - hexvar ( gp ) addu s2 , s2 , v0 beqz s0 , hexvar addu s1 , s1 , v0 lw t9 , - hexvar ( gp ) move a2 , s0 move a1 , s1 bal hexvar move a0 , s3 lw gp , hexvar ( sp ) bne v0 , s4 , hexvar subu s0 , s0 , v0 lw ra , hexvar ( sp ) move v0 , s2 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jalr t9 nop lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) sw zero , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a2 , hexvar move s0 , a2 move s3 , a0 move s1 , a1 move s2 , zero addiu s4 , zero , - num move a2 , s0 move a1 , s1 move a0 , s3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beq v0 , s4 , hexvar nop beqz v0 , hexvar subu s0 , s0 , v0 addu s2 , s2 , v0 bnez s0 , hexvar addu s1 , s1 , v0 b hexvar move v0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , ( v0 ) move v0 , s2 lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s2 , a2
push r13 push r12 push rbp push rbx sub rsp , num test rdx , rdx je hexvar mov r13d , edi mov rbp , rsi mov rbx , rdx xor r12d , r12d jmp hexvar nop dword ptr [ rax ] test rax , rax je hexvar add r12 , rax add rbp , rax sub rbx , rax je hexvar mov rdx , rbx mov rsi , rbp mov edi , r13d call hexvar cmp rax , - num jne hexvar add rsp , num mov rax , r12 pop rbx pop rbp pop r12 pop r13 ret
push r15 push r14 push r12 push rbx push rax test edx , edx jle hexvar mov r14 , rsi mov r15 , rdi mov r12d , edx xor ebx , ebx nop word ptr [ rax + rax ] movzx edx , byte ptr [ r14 + rbx ] mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar add rbx , num cmp r12 , rbx jne hexvar add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax test edx , edx jle hexvar mov r14 , rsi mov r15 , rdi mov r12d , edx xor ebx , ebx nop word ptr [ rax + rax ] movzx edx , byte ptr [ r14 + rbx ] mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar add rbx , num cmp r12 , rbx jne hexvar add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax test edx , edx jle hexvar mov r14 , rsi mov r15 , rdi mov r12d , edx xor ebx , ebx nop word ptr [ rax + rax ] movzx edx , byte ptr [ r14 + rbx ] mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar add rbx , num cmp r12 , rbx jne hexvar add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax test edx , edx jle hexvar mov r14 , rsi mov r15 , rdi mov r12d , edx xor ebx , ebx nop word ptr [ rax + rax ] movzx edx , byte ptr [ r14 + rbx ] mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar add rbx , num cmp r12 , rbx jne hexvar add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push rbp mov rbp , rsp mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rip + hexvar ] cmp rax , num jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rip + hexvar ] , rax jmp hexvar mov qword ptr [ rip + hexvar ] , num nop pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + hexvar ] test ebp , ebp je hexvar mov edi , dword ptr [ esi ] mov ebx , dword ptr [ esi + num ] mov eax , ebx or eax , edi je hexvar mov eax , num mov dword ptr [ esp + num ] , ebp jmp hexvar sub esp , num push num mov esi , dword ptr [ esp + hexvar ] lea eax , [ esi - hexvar ] push eax push num mov ebx , esi call hexvar add esp , hexvar push eax push num push num call hexvar mov edi , ecx mov ebx , edx add eax , num cmp dword ptr [ esp + num ] , eax je hexvar mov ecx , dword ptr [ esi + eax * num ] mov edx , dword ptr [ esi + eax * num + num ] mov ebp , edx or ebp , ecx je hexvar cmp edx , ebx ja hexvar jb hexvar cmp ecx , edi ja hexvar sub esp , num push num mov esi , dword ptr [ esp + hexvar ] lea eax , [ esi - hexvar ] push eax push num mov ebx , esi call hexvar add esp , hexvar push eax push num push num call hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + hexvar ] mov edx , eax or edx , dword ptr [ edi + hexvar ] mov edx , num cmove eax , edx mov edi , dword ptr [ esp + hexvar ] lea edx , [ edi + hexvar ] mov dword ptr [ edx ] , eax mov dword ptr [ edi + hexvar ] , eax mov dword ptr [ edi + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , fp , lr } add fp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldm r3 , { r3 , r4 } orrs r3 , r3 , r4 bne hexvar ldr r3 , [ pc , hexvar ] ldm r3 , { r3 , r4 } orrs r3 , r3 , r4 beq hexvar ldr r3 , [ pc , hexvar ] ldm r3 , { r3 , r4 } b hexvar mov r3 , num b hexvar ldr r3 , [ pc , hexvar ] ldm r3 , { r3 , r4 } ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r4 , num ldr r2 , [ pc , hexvar ] stm r2 , { r3 , r4 } b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldm r3 , { r3 , r4 } orrs r3 , r3 , r4 bne hexvar ldr r3 , [ pc , hexvar ] ldm r3 , { r3 , r4 } orrs r3 , r3 , r4 bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldm r3 , { r3 , r4 } ldr r2 , [ pc , hexvar ] stm r2 , { r3 , r4 } b hexvar ldr r2 , [ pc , hexvar ] mov r3 , num mov r4 , num stm r2 , { r3 , r4 } mov r0 , r0 pop { r4 , r5 , fp , pc } cdplo p5 , hexvar , c15 , c10 , c6 , num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar cmp dword ptr [ hexvar ] , num jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] or ecx , eax mov dword ptr [ ebp - num ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] or ecx , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov ecx , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , ecx mov dword ptr [ hexvar ] , ecx mov dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ hexvar ] , num jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] or ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] or ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] movsd xmm0 , qword ptr [ eax ] movsd qword ptr [ hexvar ] , xmm0 jmp hexvar mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar call hexvar call hexvar add esp , num pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a0 , zero sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) bltz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num bltz v0 , hexvar lw gp , hexvar ( sp ) lui v1 , hexvar addiu v0 , zero , num lw v1 , - hexvar ( v1 ) beq v1 , v0 , hexvar lw ra , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar jal hexvar nop lw t9 , - hexvar ( gp ) jalr t9 nop lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , hexvar lw s0 , ( v0 )
push { r4 , lr } bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar bl hexvar pop { r4 , lr } b hexvar andeq pc , r2 , r8 , asr r1
push { r4 , lr } bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar bl hexvar pop { r4 , lr } b hexvar andeq pc , r2 , r8 , ror num
mov edx , hexvar mov eax , edi mul edx mov eax , edi sub eax , edx shr eax , num add edx , eax shr edx , num imul edx , edx , hexvar mov eax , edi sub eax , edx mov rax , qword ptr [ rsi + rax * num ] test rax , rax je hexvar cmp edi , dword ptr [ rax ] je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp dword ptr [ rax ] , edi jne hexvar ret ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , hexvar ori v0 , v0 , hexvar multu v1 , v0 mfhi v0 subu a0 , v1 , v0 srl a0 , a0 , num addu v0 , v0 , a0 srl a0 , v0 , num move v0 , a0 sll v0 , v0 , num subu v0 , v0 , a0 sll v0 , v0 , num addu v0 , v0 , a0 subu v0 , v1 , v0 sw v0 , num ( fp ) lw v0 , num ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 lw v0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov eax , ecx mul edx mov eax , ecx sub eax , edx shr eax , num add eax , edx shr eax , num imul eax , eax , hexvar sub ecx , eax mov eax , ecx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp + hexvar ] add eax , edx mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] cmp dword ptr [ ebp + num ] , eax jne hexvar mov eax , dword ptr [ ebp - num ] jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , num leave ret
push ebx mov ecx , eax mov ebx , edx mov edx , hexvar mul edx mov eax , ecx sub eax , edx shr eax , num add edx , eax shr edx , num imul edx , edx , hexvar mov eax , ecx sub eax , edx mov eax , dword ptr [ ebx + eax * num ] test eax , eax je hexvar cmp ecx , dword ptr [ eax ] je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp dword ptr [ eax ] , ecx jne hexvar pop ebx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp - hexvar ] and edi , hexvar and ebx , hexvar or ebx , edi mov dword ptr [ ebp - hexvar ] , ebx mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar and eax , hexvar or eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp - hexvar ] and edi , hexvar and ebx , hexvar or ebx , edi mov dword ptr [ ebp - hexvar ] , ebx mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , hexvar mov ebx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ebx xor ebx , ebx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov ebx , dword ptr [ esp + hexvar ] mov byte ptr [ esp + hexvar ] , bl lea ebx , [ esp + hexvar ] push ebx call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rdi + hexvar ] cmp byte ptr [ rax ] , num je hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx cmp byte ptr [ rax + num ] , num movzx r9d , byte ptr [ rax ] jne hexvar xor ebx , ebx lea r10 , [ rip + hexvar ] mov esi , hexvar xor edx , edx nop dword ptr [ rax ] mov ecx , esi sub ecx , edx mov eax , ecx shr eax , hexvar add eax , ecx sar eax , num add eax , edx movsxd rcx , eax lea rcx , [ rcx + rcx * num ] lea r8 , [ r10 + rcx * num ] mov rcx , qword ptr [ r8 ] cmp byte ptr [ rcx ] , r9b je hexvar jle hexvar mov esi , eax cmp edx , esi jne hexvar xor eax , eax add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , hexvar ( a0 )
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov rax , qword ptr [ rdi + hexvar ] cmp byte ptr [ rax ] , num je hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx movzx r8d , byte ptr [ rax ] cmp byte ptr [ rax + num ] , num je hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx movzx ebx , byte ptr [ rax + num ] cmp r8b , hexvar jne hexvar lea eax , [ rbx - hexvar ] cmp al , num jbe hexvar mov esi , hexvar mov edx , num lea r9 , [ rip + hexvar ] jmp hexvar call hexvar mov r12 , rax mov rdi , rbp call hexvar mov r13 , rax movsx esi , bl sub esi , hexvar mov rdx , r12 mov rdi , rax call hexvar test eax , eax mov eax , num cmove r13 , rax jmp hexvar mov r8d , num mov ebx , num cmp r8b , hexvar jne hexvar cmp bl , hexvar jne hexvar mov ebx , dword ptr [ rbp + hexvar ] cmp dword ptr [ rbp + hexvar ] , num sete al movzx eax , al mov dword ptr [ rbp + hexvar ] , eax mov rdi , rbp call hexvar cmp dword ptr [ rbp + hexvar ] , num je hexvar mov ecx , num mov rdx , rax mov esi , hexvar mov rdi , rbp call hexvar mov r13 , rax mov dword ptr [ rbp + hexvar ] , ebx jmp hexvar mov ecx , num mov rdx , rax mov esi , hexvar mov rdi , rbp call hexvar mov r13 , rax jmp hexvar movzx ecx , byte ptr [ rdi + num ] cmp cl , bl je hexvar cmp cl , bl jg hexvar lea edx , [ rax + num ] cmp edx , esi je hexvar mov ecx , esi sub ecx , edx mov eax , ecx shr eax , hexvar add eax , ecx sar eax , num add eax , edx movsxd rcx , eax lea rcx , [ rcx + rcx * num ] lea r12 , [ r9 + rcx * num ] mov rdi , qword ptr [ r12 ] movzx ecx , byte ptr [ rdi ] cmp cl , r8b je hexvar cmp cl , r8b jle hexvar mov esi , eax jmp hexvar mov rdi , rbp call hexvar mov r13 , rax test rax , rax je hexvar mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , r12 jmp hexvar mov esi , eax jmp hexvar mov r13d , num mov rax , r13 add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx mov ebx , eax call hexvar add edx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ eax + hexvar ] cmp byte ptr [ eax ] , num je hexvar lea ecx , [ eax + num ] mov dword ptr [ ebx + hexvar ] , ecx cmp byte ptr [ eax + num ] , num movzx edi , byte ptr [ eax ] jne hexvar mov byte ptr [ esp + hexvar ] , num lea ebp , [ edx - hexvar ] mov ebx , hexvar xor ecx , ecx lea esi , [ esi ] mov edx , ebx sub edx , ecx mov eax , edx shr eax , hexvar add eax , edx sar eax , num add eax , ecx mov edx , eax shl edx , num lea esi , [ edx + ebp ] mov edx , edi mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ esi ] cmp byte ptr [ esi ] , dl je hexvar jle hexvar mov ebx , eax cmp ecx , ebx jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rax + hexvar ] ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] jmp hexvar mov eax , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx mov rdi , qword ptr [ rdx ] mov rdi , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdi + hexvar ] , num setne r8b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a3 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a2 beqz s1 , hexvar lw gp , hexvar ( sp ) lb v1 , ( s0 ) addiu v0 , v1 , - hexvar andi v0 , v0 , hexvar sltiu v0 , v0 , hexvar beqz v0 , hexvar addu a3 , s0 , s1 lui a0 , hexvar b hexvar addiu a0 , a0 , hexvar lb v1 , ( s0 ) addiu v0 , v1 , - hexvar andi v0 , v0 , hexvar sltiu v0 , v0 , hexvar beqz v0 , hexvar nop addu v1 , a0 , v1 addiu s0 , s0 , num lbu v0 , - hexvar ( v1 ) bne s0 , a3 , hexvar sb v0 , - num ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , a0 , - hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a3 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a2 beqz s1 , hexvar lw gp , hexvar ( sp ) lb v1 , ( s0 ) addiu v0 , v1 , - hexvar andi v0 , v0 , hexvar sltiu v0 , v0 , hexvar beqz v0 , hexvar addu a3 , s0 , s1 lui a0 , hexvar b hexvar addiu a0 , a0 , hexvar lb v1 , ( s0 ) addiu v0 , v1 , - hexvar andi v0 , v0 , hexvar sltiu v0 , v0 , hexvar beqz v0 , hexvar nop addu v1 , a0 , v1 addiu s0 , s0 , num lbu v0 , - hexvar ( v1 ) bne s0 , a3 , hexvar sb v0 , - num ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , a0 , - hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , - num mov qword ptr [ rbp - hexvar ] , rcx test rax , rax setne dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] sub ecx , hexvar setg dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] sub ecx , hexvar setl dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] add ecx , - hexvar movsxd rdx , ecx mov sil , byte ptr [ rdx + hexvar ] mov byte ptr [ rax ] , sil mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar push edi push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test edi , edi je hexvar movsx eax , byte ptr [ esi ] lea edx , [ eax - hexvar ] cmp dl , hexvar ja hexvar add edi , esi lea edx , [ ebx - hexvar ] jmp hexvar lea esi , [ esi ] movsx eax , byte ptr [ esi ] lea ecx , [ eax - hexvar ] cmp cl , hexvar ja hexvar movzx eax , byte ptr [ eax + edx - hexvar ] add esi , num mov byte ptr [ esi - num ] , al cmp esi , edi jne hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov byte ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov r9d , dword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , r8 mov r8d , eax mov dword ptr [ rbp - hexvar ] , r9d mov r9d , eax mov dword ptr [ rsp ] , hexvar lea r10 , [ rbp - hexvar ] mov qword ptr [ rsp + num ] , r10 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rsp + hexvar ] , r10 mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rsp + hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
sub rsp , hexvar push r9 mov r9d , r8d mov r8 , rcx mov rcx , rdx mov rdx , rsi mov rsi , rdi xor edi , edi call hexvar add rsp , hexvar ret
push { r4 , r5 , lr } mov lr , num mvn r5 , num sub sp , sp , hexvar add ip , sp , hexvar ldr r4 , [ pc , hexvar ] strb lr , [ ip , - num ] ! str lr , [ sp , num ] str lr , [ sp ] str r5 , [ sp , num ] ldr lr , [ sp , hexvar ] ldr r5 , [ sp , hexvar ] str ip , [ sp , hexvar ] ldr ip , [ r4 ] str r5 , [ sp , hexvar ] str lr , [ sp , hexvar ] str ip , [ sp , hexvar ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
sub rsp , hexvar push r9 mov r9d , r8d mov r8 , rcx mov rcx , rdx mov rdx , rsi mov rsi , rdi mov edi , num call hexvar add rsp , hexvar ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a2 sw s3 , hexvar ( sp ) addiu a2 , zero , - num sw s2 , hexvar ( sp ) move s2 , a1 sw gp , hexvar ( sp ) move a1 , s0 sw ra , hexvar ( sp ) move s3 , a0 sw s4 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s1 , hexvar ( sp ) bltz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a2 , v0 move a1 , s0 move a0 , s3 bal hexvar move s1 , v0 addiu v1 , zero , - num lw gp , hexvar ( sp ) beq v0 , v1 , hexvar move s4 , v0 move v0 , zero lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , - num move a1 , s0 bal hexvar move a0 , s2 lw gp , hexvar ( sp ) bltz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp )
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push - num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num js hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp eax , - num je hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax jmp hexvar mov dword ptr [ esp + num ] , num sub esp , num push - num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num js hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp eax , - num je hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax jmp hexvar mov dword ptr [ esp + num ] , num cmp dword ptr [ esp + num ] , num jne hexvar cmp dword ptr [ esp + num ] , num jne hexvar mov eax , num jmp hexvar cmp dword ptr [ esp + num ] , num je hexvar cmp dword ptr [ esp + num ] , num jne hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num add esp , hexvar pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] mvn r2 , num ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmn r3 , num beq hexvar mov r3 , num b hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] b hexvar mov r3 , num str r3 , [ sp , hexvar ] mvn r2 , num ldr r1 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmn r3 , num beq hexvar mov r3 , num b hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] b hexvar mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r12d , edx mov r15 , rsi mov rbp , rdi mov esi , edx mov edx , hexvar call hexvar xor r13d , r13d test eax , eax js hexvar mov ebx , eax mov rdi , rbp mov esi , r12d mov edx , eax call hexvar cmp eax , - num jne hexvar mov rdi , rbp mov esi , ebx call hexvar mov rdi , rax call hexvar mov r14 , rax jmp hexvar xor r14d , r14d mov rdi , r15 mov esi , r12d mov edx , hexvar call hexvar xor r13d , r13d test eax , eax js hexvar mov ebx , eax mov rdi , r15 mov esi , r12d mov edx , eax call hexvar cmp eax , - num jne hexvar mov rdi , r15 mov esi , ebx call hexvar mov rdi , rax call hexvar mov r13d , num mov rcx , r14 or rcx , rax jne hexvar jmp hexvar xor eax , eax mov r13d , num mov rcx , r14 or rcx , rax je hexvar xor r13d , r13d test r14 , r14 je hexvar test rax , rax je hexvar mov rdi , r14 mov rsi , rax call hexvar xor r13d , r13d test eax , eax sete r13b mov eax , r13d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbp , rdi mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov edx , dword ptr [ rax + hexvar ] mov dword ptr [ rsp + num ] , edx mov rsi , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rsi mov r15d , dword ptr [ rax + hexvar ] call hexvar mov r12 , rax mov r13 , - num mov eax , num mov rcx , r13 mov rdi , r12 repne scasb al , byte ptr [ rdi ] mov rsi , rcx not rsi mov rcx , r13 mov rdi , rbx repne scasb al , byte ptr [ rdi ] mov rax , rcx not rax lea rdi , [ rsi + rax ] call hexvar mov r14 , rax mov r9 , rbx mov r8 , r12 lea rcx , [ rip + hexvar ] mov rdx , r13 mov esi , num mov rdi , rax mov eax , num call hexvar mov rdi , r12 call hexvar mov rdi , rbx call hexvar mov r8d , r15d mov ecx , dword ptr [ rsp + num ] mov rdx , qword ptr [ rsp + num ] mov rsi , r14 mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi je hexvar mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax + hexvar ] and cl , hexvar or cl , num mov byte ptr [ eax + hexvar ] , cl mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax + hexvar ] and cl , hexvar mov byte ptr [ eax + hexvar ] , cl mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , num add esp , hexvar pop esi pop edi pop ebp ret
bnez a2 , hexvar lbu v0 , hexvar ( a0 ) ins v0 , zero , num , num sb v0 , hexvar ( a0 ) sw zero , ( a1 )
test rdx , rdx jne hexvar and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rsi ] , num mov qword ptr [ rsi + hexvar ] , num mov qword ptr [ rsi + num ] , num ret
test rdx , rdx jne hexvar and byte ptr [ rdi + hexvar ] , hexvar mov qword ptr [ rsi ] , num mov qword ptr [ rsi + hexvar ] , num mov qword ptr [ rsi + num ] , num ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bhs hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bhi hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] and r3 , r3 , num strb r3 , [ fp , - num ] ldr r3 , [ pc , hexvar ] ldrb r2 , [ r3 ] ldrb r3 , [ fp , - num ] eor r3 , r3 , r2 and r3 , r3 , hexvar cmp r3 , num movne r3 , num moveq r3 , num strb r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r2 , r3 ldr r3 , [ fp , - hexvar ] strb r2 , [ r3 ] ldrb r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 ] ldr r2 , [ fp , - num ] cmp r2 , r3 movhs r3 , num movlo r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr muleq r2 , ip , r1
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov ecx , dword ptr [ ecx ] cmp ecx , dword ptr [ ebp + num ] setbe dl and dl , num movzx ecx , dl mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] cmp dword ptr [ ebp + num ] , eax jae hexvar mov eax , dword ptr [ ebx + hexvar ] cmp dword ptr [ ebp + num ] , eax ja hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test al , al je hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ ebp - hexvar ] , al and byte ptr [ ebp - hexvar ] , num movzx eax , byte ptr [ ebx + hexvar ] xor al , byte ptr [ ebp - hexvar ] movzx eax , al test eax , eax setne al mov byte ptr [ ebp - num ] , al cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp byte ptr [ ebp - num ] , num je hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax ] , dl movzx eax , byte ptr [ ebp - num ] mov ebx , dword ptr [ ebp - num ] leave ret
push r13 push r12 mov r13 , rdx push rbp push rbx mov rbp , rdi mov r12 , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov eax , dword ptr [ rdi + num ] test eax , eax je hexvar xor ebx , ebx nop dword ptr [ rax ] mov rsi , qword ptr [ rbp ] mov edi , hexvar add ebx , num call hexvar cmp ebx , dword ptr [ rbp + num ] jb hexvar mov rbx , rsp lea rcx , [ rip + hexvar ] mov r8 , r13 mov edx , hexvar mov esi , num mov rdi , rbx xor eax , eax call hexvar mov rdi , qword ptr [ rbp ] lea rdx , [ rip + hexvar ] mov rcx , r12 xor eax , eax mov r8 , rbx mov esi , num call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , num jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + num ] mov dword ptr [ esp + hexvar ] , edx test eax , eax je hexvar xor edi , edi nop sub esp , num push dword ptr [ esi ] add edi , num push hexvar call hexvar add esp , hexvar cmp edi , dword ptr [ esi + num ] jb hexvar lea eax , [ ebx - hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push hexvar push num lea edi , [ esp + hexvar ] push edi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push edi push ebp push eax push num push dword ptr [ esi ] call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r13 push r12 mov r13 , rdx push rbp push rbx mov rbp , rdi mov r12 , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov eax , dword ptr [ rdi + num ] test eax , eax je hexvar xor ebx , ebx nop dword ptr [ rax ] mov rsi , qword ptr [ rbp ] mov edi , hexvar add ebx , num call hexvar cmp ebx , dword ptr [ rbp + num ] jb hexvar mov rbx , rsp lea rcx , [ rip + hexvar ] mov r8 , r13 mov edx , hexvar mov esi , num mov rdi , rbx xor eax , eax call hexvar mov rdi , qword ptr [ rbp ] lea rdx , [ rip + hexvar ] mov rcx , r12 xor eax , eax mov r8 , rbx mov esi , num call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , num jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , hexvar push num push num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] lea edx , [ ebp - hexvar ] push edx push dword ptr [ ebp - hexvar ] lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
beqz a2 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , a2 lui v1 , hexvar addiu v1 , v1 , hexvar addiu a3 , v1 , hexvar lw a2 , ( v1 ) beq v0 , a2 , hexvar nop addiu v1 , v1 , num bne v1 , a3 , hexvar nop lw ra , hexvar ( sp ) move v0 , zero lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra move v0 , zero lw a1 , num ( v1 ) addiu v0 , zero , - num beq a1 , v0 , hexvar lui v0 , hexvar lw v1 , ( s1 ) lw a0 , hexvar ( v0 ) beq v1 , a0 , hexvar addiu v0 , v0 , hexvar lw a0 , num ( v0 ) beq v1 , a0 , hexvar nop lw v0 , hexvar ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar lw v1 , num ( v0 ) addiu v0 , zero , - num beq v1 , v0 , hexvar addiu v0 , zero , num sb a1 , ( s0 ) sb v1 , num ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar b hexvar addiu v0 , v0 , hexvar
push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , num test edx , edx je hexvar sub esp , hexvar push edx call hexvar mov edx , eax add esp , hexvar cmp eax , dword ptr [ ebx + hexvar ] je hexvar cmp eax , dword ptr [ ebx + hexvar ] je hexvar cmp eax , dword ptr [ ebx + hexvar ] je hexvar cmp eax , dword ptr [ ebx + hexvar ] je hexvar cmp eax , dword ptr [ ebx + hexvar ] je hexvar mov eax , num cmp edx , dword ptr [ ebx + hexvar ] je hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar lea edx , [ ebx + hexvar ] add esp , hexvar lea ecx , [ edx + hexvar ] cmp eax , dword ptr [ edx ] je hexvar add edx , num cmp edx , ecx jne hexvar add esp , num xor eax , eax pop ebx ret
push r14 push rbx push rax test rdx , rdx je hexvar mov rbx , rsi mov r14 , rdi mov rdi , rdx call hexvar mov ecx , eax lea eax , [ rcx - hexvar ] cmp eax , num ja hexvar jmp qword ptr [ rax * num + hexvar ] mov ecx , num mov edx , dword ptr [ rbx ] xor eax , eax cmp edx , num je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov eax , num jmp hexvar xor eax , eax add rsp , num pop rbx pop r14 ret
push { r4 , r5 , r6 , lr } mov r6 , r0 sub sp , sp , num mov r0 , hexvar bl hexvar subs r4 , r0 , num beq hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r2 , [ sp ] mov r1 , num ldr r2 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar cmp r0 , num movne r3 , num mov r5 , r0 str r0 , [ r4 ] strne r6 , [ r4 , num ] strne r3 , [ r4 , num ] beq hexvar mov r0 , r4 add sp , sp , num pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push dword ptr [ ebx + hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num push hexvar call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , num mov dword ptr [ esi + num ] , eax add esp , num mov eax , esi pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov edx , hexvar mov ecx , hexvar mov r8d , hexvar xor eax , eax mov esi , eax mov edi , hexvar call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne r9b movzx r10d , r9b mov eax , r10d mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar xor eax , eax mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , num lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , ( s2 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw s0 , hexvar ( sp ) move s0 , a2 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) bnez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( s2 ) lw v1 , hexvar ( s3 ) lw s6 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw s0 , hexvar ( sp ) move s0 , a2 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) bnez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( s2 ) lw v1 , hexvar ( s3 ) lw s6 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw s0 , hexvar ( sp ) move s0 , a2 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) bnez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( s2 )
cmp r0 , num push { r4 , lr } ldr r3 , [ r1 ] beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bhi hexvar add r2 , r3 , num add r3 , r2 , r3 , lsr num str r3 , [ r1 ] mov r1 , r3 bl hexvar cmp r0 , num popne { r4 , pc }
sub rsp , num test rdi , rdi mov rax , qword ptr [ rsi ] je hexvar movabs rdx , hexvar cmp rax , rdx ja hexvar lea rdx , [ rax + num ] shr rdx , num add rax , rdx test rax , rax mov qword ptr [ rsi ] , rax je hexvar mov rsi , rax call hexvar test rax , rax je hexvar add rsp , num ret
cmp r0 , num ldr r3 , [ r1 ] beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bhi hexvar add r2 , r3 , num add r3 , r2 , r3 , lsr num str r3 , [ r1 ] mov r1 , r3 b hexvar cmp r3 , num moveq r3 , hexvar beq hexvar bge hexvar push { r4 , lr } bl hexvar ldrbpl r5 , [ r5 , - hexvar ]
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , esi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rdi , qword ptr [ rip ] jmp rdi mov rax , qword ptr [ rsp + num ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + num ] mov ecx , dword ptr [ rax ] sub ecx , hexvar setl dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num ] mov dword ptr [ rsp + num ] , ecx jmp rax mov dword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , hexvar mov dword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rip ] jmp rax mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rdi , qword ptr [ rip ] jmp rdi mov rax , qword ptr [ rsp + num ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + num ] mov ecx , dword ptr [ rax ] sub ecx , hexvar setl dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num ] mov dword ptr [ rsp + num ] , ecx jmp rax mov dword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , hexvar mov dword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rip ] jmp rax mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
test rdi , rdi je hexvar mov eax , num cmp dword ptr [ rdi ] , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar mov eax , num cmp dword ptr [ rdi ] , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar xor eax , eax ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jge hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ ebp - num ] , num mov al , num mov byte ptr [ ebp - hexvar ] , al jne hexvar cmp dword ptr [ ebp - num ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx ecx , al mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jge hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ ebp - num ] , num mov al , num mov byte ptr [ ebp - hexvar ] , al jne hexvar cmp dword ptr [ ebp - num ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx ecx , al mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar sub r3 , fp , hexvar stm r3 , { r0 , r1 } ldr r3 , [ fp , - hexvar ] cmp r3 , num blt hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num b hexvar mvn r3 , num mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , edx cmp dword ptr [ eax ] , num setl bl mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num mov cl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx ecx , al mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop ebx pop ebp ret
push r14 push rbx push rax mov rbx , rdi mov rdi , qword ptr [ rdi + num ] xor r14d , r14d mov ecx , hexvar mov r8d , hexvar mov esi , num xor edx , edx call hexvar test eax , eax je hexvar mov r14d , num cmp dword ptr [ rbx ] , num je hexvar mov rdi , qword ptr [ rbx + num ] mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov esi , num call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov r8 , qword ptr [ rax + hexvar ] xor r14d , r14d mov esi , hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov esi , hexvar xor eax , eax call hexvar mov eax , r14d add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v0 , hexvar lui a3 , hexvar sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) addiu v0 , v0 , hexvar sw ra , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) addiu a3 , a3 , hexvar lw t9 , - hexvar ( gp ) move a2 , zero lw a0 , num ( a0 )
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num push num push dword ptr [ edi + num ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ edi ] test eax , eax jne hexvar mov esi , num mov eax , esi pop ebx pop esi pop edi ret
push r14 push rbx push rax mov rbx , rdi mov rdi , qword ptr [ rdi + num ] xor r14d , r14d mov ecx , hexvar mov r8d , hexvar mov esi , num xor edx , edx call hexvar test eax , eax je hexvar mov r14d , num cmp dword ptr [ rbx ] , num je hexvar mov rdi , qword ptr [ rbx + num ] mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov esi , num call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov r8 , qword ptr [ rax + hexvar ] xor r14d , r14d mov esi , hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbx + num ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov r8 , qword ptr [ rax + hexvar ] mov esi , hexvar xor eax , eax call hexvar mov eax , r14d add rsp , num pop rbx pop r14 ret
test r8 , r8 je hexvar cmp byte ptr [ r8 + hexvar ] , num je hexvar mov eax , num ret
test r8 , r8 mov rax , rsi je hexvar cmp byte ptr [ r8 + hexvar ] , num je hexvar mov eax , num ret
sub esp , num mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar cmp byte ptr [ eax + hexvar ] , num je hexvar mov eax , num add esp , num ret
test r8 , r8 mov rax , rsi je hexvar cmp byte ptr [ r8 + hexvar ] , num je hexvar mov eax , num ret
push { r0 , r1 , r2 , r3 } push { r4 , r5 , r6 , r7 , r8 , sb , lr } ldr sb , [ pc , hexvar ] sub sp , sp , hexvar ldr r4 , [ sp , hexvar ] ldr r2 , [ sb ] ldr r8 , [ pc , hexvar ] add r3 , sp , hexvar cmp r4 , num str r2 , [ sp , num ] ldr r5 , [ r8 ] str r3 , [ sp ] beq hexvar add r7 , sp , hexvar mov r0 , r4 bl hexvar mov r6 , r0 mov r2 , r0 mov r1 , r4 mov r0 , r5 bl hexvar ldr r4 , [ r7 , num ] ! add r5 , r5 , r6 cmp r4 , num bne hexvar mov r3 , num strb r3 , [ r5 ] ldr r2 , [ sp , num ] ldr r3 , [ sb ] ldr r0 , [ r8 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , lr } add sp , sp , hexvar bx lr bl hexvar andeq fp , fp , r8 , lsl num andeq r1 , ip , r8 , ror num
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , sp , hexvar sw s4 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , v0 sw v0 , hexvar ( sp ) lw s4 , - hexvar ( gp ) lw s3 , - hexvar ( gp ) sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s4 ) lw s1 , ( s3 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar nop move s0 , a0 lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu s2 , s2 , num move a1 , s0 lw gp , hexvar ( sp ) move s0 , v0 move a0 , s1 move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 addu s1 , s1 , s0 lw s0 , - num ( s2 ) bnez s0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) sb zero , ( s1 ) lw v1 , ( s4 ) bne a0 , v1 , hexvar lw v0 , ( s3 ) lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push r12 push rbp push rbx sub rsp , hexvar mov rbp , qword ptr [ rip + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rsp + hexvar ] test rdi , rdi mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp ] , num mov qword ptr [ rsp + hexvar ] , rax je hexvar mov rbx , rdi nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar mov rdi , rbp mov rdx , rax mov rsi , rbx mov r12 , rax call hexvar mov eax , dword ptr [ rsp ] add rbp , r12 cmp eax , hexvar ja hexvar mov edx , eax add rdx , qword ptr [ rsp + hexvar ] add eax , num mov dword ptr [ rsp ] , eax mov rbx , qword ptr [ rdx ] test rbx , rbx jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov byte ptr [ rbp ] , num mov rax , qword ptr [ rip + hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] lea ebp , [ esp + hexvar ] lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] test edx , edx je hexvar mov ecx , hexvar mov edi , edx mov eax , num repne scasb al , byte ptr es : [ edi ] not ecx lea edi , [ ecx - num ] sub esp , num push edi push edx push esi call hexvar add esi , edi add ebp , num mov edx , dword ptr [ ebp - num ] add esp , hexvar test edx , edx jne hexvar mov byte ptr [ esi ] , num lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 move s3 , a2 move s0 , a3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , ( v0 ) addiu v1 , zero , num beq v0 , v1 , hexvar addiu v1 , zero , hexvar bne v0 , v1 , hexvar move v0 , s0 lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , num bnez v0 , hexvar move a3 , s1 move a2 , s3 move a1 , s1 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , num lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move a2 , s3
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] bl hexvar mov r3 , r0 ldr r3 , [ r3 ] cmp r3 , num beq hexvar cmp r3 , hexvar bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] and r3 , r3 , num cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ eax ] mov ecx , eax sub ecx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 move s3 , a2 move s0 , a3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , ( v0 ) addiu v1 , zero , num beq v0 , v1 , hexvar addiu v1 , zero , hexvar bne v0 , v1 , hexvar move v0 , s0 lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , num bnez v0 , hexvar move a3 , s1 move a2 , s3 move a1 , s1 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , num lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move a2 , s3
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu a1 , a1 , - num sltiu v0 , a1 , hexvar beqz v0 , hexvar lw s0 , hexvar ( a0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num mov edi , dword ptr [ esi + hexvar ] mov eax , dword ptr [ esp + hexvar ] sub eax , num cmp eax , hexvar ja hexvar mov ecx , ebx add ecx , dword ptr [ ebx + eax * num - hexvar ] jmp ecx
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu a1 , a1 , - num sltiu v0 , a1 , hexvar beqz v0 , hexvar lw s0 , hexvar ( a0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num sub eax , num mov edi , dword ptr [ esi + hexvar ] cmp eax , hexvar ja hexvar mov ecx , dword ptr [ ebx + eax * num - hexvar ] add ecx , ebx jmp ecx nop lea esi , [ esi ]
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r0 , [ r3 , hexvar ] mov r3 , num mov r2 , num ldr r1 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) move s0 , v0 lw v0 , num ( v0 )
push r14 push rbx push rax mov r14 , rdi call hexvar test rax , rax je hexvar mov rbx , rax cmp qword ptr [ rax + num ] , num je hexvar mov rdi , qword ptr [ rbx ] call hexvar cmp eax , hexvar je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov qword ptr [ rax ] , num mov edi , hexvar call hexvar mov rcx , qword ptr [ rbx + num ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rcx ] , rax mov rdi , qword ptr [ rbx ] call hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rbx + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax + hexvar ] mov rsi , r14 xor edx , edx xor ecx , ecx call hexvar test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) move s0 , v0 lw v0 , num ( v0 )
push r15 push r14 push rbx mov r14 , rdx mov rbx , rdi xor esi , esi call hexvar mov r15 , rax mov rdi , rbx call hexvar cmp eax , - num je hexvar mov rdi , rbx mov esi , num xor edx , edx xor ecx , ecx call hexvar test rax , rax sete al test r15 , r15 setne cl and cl , al movzx eax , cl mov dword ptr [ r14 + num ] , eax jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar xor eax , eax call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s2 , a2 move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v1 , zero , - num beq v0 , v1 , hexvar move a3 , zero move a2 , zero addiu a1 , zero , num move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop sltu s1 , zero , s1 sw s1 , num ( s2 )
push r15 push r14 push rbx mov r14 , rdx mov rbx , rdi xor esi , esi call hexvar mov r15 , rax mov rdi , rbx call hexvar cmp eax , - num je hexvar mov rdi , rbx mov esi , num xor edx , edx xor ecx , ecx call hexvar test rax , rax sete al test r15 , r15 setne cl and cl , al movzx eax , cl mov dword ptr [ r14 + num ] , eax jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar xor eax , eax call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a1 , zero lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 addiu v0 , zero , - num beq v1 , v0 , hexvar nop move a3 , zero move a2 , zero addiu a1 , zero , num lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero lw v1 , hexvar ( sp ) sw v0 , num ( v1 )
push ebp push edi push esi push ebx xor ebx , ebx sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] cmp edx , esi jbe hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edi , esi jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ edi ] sub esp , num push ebp push eax call dword ptr [ esp + hexvar ] add esp , hexvar test al , al je hexvar mov edi , dword ptr [ edi + num ] add ebx , num test edi , edi jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] add esi , num cmp esi , edx jb hexvar add esp , hexvar mov eax , ebx pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx xor ebx , ebx sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] cmp edx , esi jbe hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edi , esi jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ edi ] sub esp , num push ebp push eax call dword ptr [ esp + hexvar ] add esp , hexvar test al , al je hexvar mov edi , dword ptr [ edi + num ] add ebx , num test edi , edi jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] add esi , num cmp esi , edx jb hexvar add esp , hexvar mov eax , ebx pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r3 , [ r0 , num ] ldr r8 , [ r0 ] cmp r3 , r8 bls hexvar mov r7 , r2 mov r6 , r1 mov sb , r0 mov r5 , num ldr r0 , [ r8 ] cmp r0 , num beq hexvar mov r4 , r8 b hexvar ldr r0 , [ r4 ] mov r1 , r7 blx r6 cmp r0 , num beq hexvar ldr r4 , [ r4 , num ] add r5 , r5 , num cmp r4 , num bne hexvar ldr r3 , [ sb , num ] add r8 , r8 , num cmp r3 , r8 bhi hexvar mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldr r0 , [ r3 ] , -ip , lsl num andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r3 , [ r0 , num ] ldr r8 , [ r0 ] cmp r3 , r8 bls hexvar mov r7 , r2 mov r6 , r1 mov sb , r0 mov r5 , num ldr r0 , [ r8 ] cmp r0 , num beq hexvar mov r4 , r8 b hexvar ldr r0 , [ r4 ] mov r1 , r7 blx r6 cmp r0 , num beq hexvar ldr r4 , [ r4 , num ] add r5 , r5 , num cmp r4 , num bne hexvar ldr r3 , [ sb , num ] add r8 , r8 , num cmp r3 , r8 bhi hexvar mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldrls sp , [ r1 , hexvar ] ! andeq r0 , r0 , r0
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r2 , [ pc , hexvar ] ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r2 , [ pc , hexvar ] ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp byte ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl and cl , num mov byte ptr [ ebp - num ] , cl mov edx , dword ptr [ ebp - num ] mov byte ptr [ edx ] , num mov cl , byte ptr [ ebp - num ] and cl , num movzx eax , cl add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al setne al mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num movzx eax , byte ptr [ rbp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] test cl , cl setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , rax mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num setne dl and dl , num mov byte ptr [ rbp - hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , num mov dl , byte ptr [ rbp - hexvar ] and dl , num movzx eax , dl add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , hexvar push edi call hexvar cmp byte ptr [ eax ] , num mov esi , eax cmove esi , edi mov dword ptr [ esp ] , esi call hexvar add esi , eax add esp , hexvar cmp byte ptr [ esi ] , num mov byte ptr [ esi ] , num pop ebx pop esi pop edi setne al ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rax call hexvar mov qword ptr [ rip + hexvar ] , num add rsp , num ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw a0 , hexvar ( v0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar sw zero , hexvar ( v0 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] call hexvar sub eax , num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rdi , qword ptr [ rbp - num ] call hexvar sub eax , num sete cl movzx edx , cl mov edi , edx mov rdi , qword ptr [ rdi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar add rsp , hexvar pop rbp ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + num ] cmp dword ptr [ edx + num ] , num je hexvar ret nop movzx edx , byte ptr [ eax + hexvar ] and edx , num cmp dl , num jne hexvar mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + num ] mov dword ptr [ eax + hexvar ] , edx ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + num ] cmp dword ptr [ edx + num ] , num je hexvar ret nop movzx edx , byte ptr [ eax + hexvar ] and edx , num cmp dl , num jne hexvar mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + num ] mov dword ptr [ eax + hexvar ] , edx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rax mov rax , qword ptr [ rdi ] mov r9 , qword ptr [ rax + hexvar ] test r9 , r9 je hexvar cmp rax , qword ptr [ rsi ] je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp eax , dword ptr [ ecx ] jne hexvar add esp , num pop ebx jmp edx lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar xor eax , eax add esp , num pop ebx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ecx ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp eax , dword ptr [ esi ] jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push ecx call edx add esp , hexvar add esp , num pop ebx pop esi ret
push rax mov rax , qword ptr [ rdi ] mov r9 , qword ptr [ rax + hexvar ] test r9 , r9 je hexvar cmp rax , qword ptr [ rsi ] je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push ebp mov ebp , esp sub esp , hexvar mov ax , word ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ hexvar ] mov word ptr [ ebp - num ] , ax jmp ecx mov eax , dword ptr [ ebp - num ] mov cx , word ptr [ eax * num + hexvar ] sub cx , - num setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] mov word ptr [ ebp - num ] , cx jmp eax mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] movsx ecx , word ptr [ ebp + num ] sub eax , ecx sete dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov eax , edi mov word ptr [ rbp - hexvar ] , ax mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cmp word ptr [ rbp - hexvar ] , ax je hexvar add dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] cmp ax , - num jne hexvar jmp hexvar nop mov eax , dword ptr [ rbp - num ] cdqe shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov ax , word ptr [ ebp + num ] mov word ptr [ ebp - num ] , ax mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov cx , word ptr [ eax * num + hexvar ] mov word ptr [ ebp - hexvar ] , cx mov ax , word ptr [ ebp - hexvar ] movsx ecx , ax cmp ecx , - num je hexvar mov eax , dword ptr [ ebp - num ] shl eax , num lea ecx , [ hexvar ] add ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] movsx ecx , word ptr [ eax ] mov dx , word ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx mov word ptr [ ebp - hexvar ] , dx mov ax , word ptr [ ebp - hexvar ] movsx ecx , ax mov edx , dword ptr [ ebp - hexvar ] cmp edx , ecx jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shl eax , num lea ecx , [ hexvar ] add ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov ax , word ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ hexvar ] mov word ptr [ ebp - num ] , ax jmp ecx mov eax , dword ptr [ ebp - num ] mov cx , word ptr [ eax * num + hexvar ] sub cx , - num setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] mov word ptr [ ebp - num ] , cx jmp eax mov eax , dword ptr [ ebp - num ] movsx eax , word ptr [ eax * num + hexvar ] movsx ecx , word ptr [ ebp + num ] sub eax , ecx sete dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov dword ptr [ rdi + hexvar ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + hexvar ] test eax , eax je hexvar sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax jne hexvar pop ebx xor eax , eax pop esi pop edi ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + hexvar ] test eax , eax je hexvar sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax jne hexvar pop ebx xor eax , eax pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + hexvar ] , num je hexvar sub esp , num push edi push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + hexvar ] test eax , eax je hexvar sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax jne hexvar pop ebx xor eax , eax pop esi pop edi ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r14d , hexvar add esi , - num cmp esi , num ja hexvar mov rbx , rcx mov rbp , rdi jmp qword ptr [ rsi * num + hexvar ] mov r14d , num test rdx , rdx jne hexvar mov qword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , num mov rdi , rbp call hexvar mov ebp , eax lea rdx , [ rsp + num ] lea rcx , [ rsp + hexvar ] mov rdi , rbx xor esi , esi call hexvar jmp hexvar mov r14d , num test rdx , rdx jne hexvar mov rdi , rbp call hexvar test rax , rax je hexvar mov r15 , rax lea rsi , [ rsp + num ] mov rdi , rbx call hexvar mov rbx , qword ptr [ rsp + num ] mov edi , dword ptr [ rbp ] jmp hexvar mov dword ptr [ rbx ] , hexvar mov r14d , num jmp hexvar mov r14d , num test rdx , rdx jne hexvar mov qword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , num mov rdi , rbp call hexvar mov ebp , eax lea rcx , [ rsp + num ] lea r8 , [ rsp + hexvar ] mov rdi , rbx xor esi , esi xor edx , edx call hexvar mov rbx , qword ptr [ rsp + num ] mov edi , hexvar call hexvar mov rdi , rbx mov rsi , rax mov edx , num xor ecx , ecx call hexvar test ebp , ebp je hexvar mov rbx , qword ptr [ rsp + hexvar ] mov edi , ebp call hexvar mov rdi , rbx mov rsi , rax mov edx , num xor ecx , ecx jmp hexvar mov r14d , num test rdx , rdx jne hexvar mov rdi , rbp call hexvar test rax , rax je hexvar mov r15 , rax lea rcx , [ rsp + num ] mov rdi , rbx xor esi , esi xor edx , edx call hexvar mov edi , dword ptr [ rbp ] mov rbx , qword ptr [ rsp + num ] call hexvar mov rdi , rbx mov rsi , rax mov edx , hexvar mov rcx , r15 call hexvar jmp hexvar mov r14d , hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ esp + hexvar ] , num ja hexvar mov eax , dword ptr [ esp + hexvar ] shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r14d , hexvar add esi , - num cmp esi , num ja hexvar mov rbx , rcx mov rbp , rdi jmp qword ptr [ rsi * num + hexvar ] mov r14d , num test rdx , rdx jne hexvar mov qword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , num mov rdi , rbp call hexvar mov ebp , eax lea rdx , [ rsp + num ] lea rcx , [ rsp + hexvar ] mov rdi , rbx xor esi , esi call hexvar jmp hexvar mov r14d , num test rdx , rdx jne hexvar mov rdi , rbp call hexvar test rax , rax je hexvar mov r15 , rax lea rsi , [ rsp + num ] mov rdi , rbx call hexvar jmp hexvar mov dword ptr [ rbx ] , hexvar mov r14d , num jmp hexvar mov r14d , num test rdx , rdx jne hexvar mov qword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , num mov rdi , rbp call hexvar mov ebp , eax lea rcx , [ rsp + num ] lea r8 , [ rsp + hexvar ] mov rdi , rbx xor esi , esi xor edx , edx call hexvar mov rbx , qword ptr [ rsp + num ] mov edi , hexvar call hexvar mov rdi , rbx mov rsi , rax mov edx , num xor ecx , ecx call hexvar test ebp , ebp je hexvar mov rbx , qword ptr [ rsp + hexvar ] mov edi , ebp call hexvar mov rdi , rbx mov rsi , rax mov edx , num xor ecx , ecx jmp hexvar mov r14d , num test rdx , rdx jne hexvar mov rdi , rbp call hexvar test rax , rax je hexvar mov r15 , rax lea rcx , [ rsp + num ] mov rdi , rbx xor esi , esi xor edx , edx call hexvar mov rbx , qword ptr [ rsp + num ] mov edi , dword ptr [ rbp ] call hexvar mov rdi , rbx mov rsi , rax mov edx , hexvar mov rcx , r15 call hexvar jmp hexvar mov r14d , hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sltiu v0 , a1 , num sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lui v1 , hexvar sll v0 , a1 , num addiu v1 , v1 , - hexvar move s0 , a1 addu v1 , v1 , v0 move s3 , a0 lw v0 , ( v1 ) jr v0 move s2 , a3 beqz a2 , hexvar addiu v0 , zero , num b hexvar nop beqz a2 , hexvar move v0 , a1 lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bnez a2 , hexvar addiu v0 , zero , num jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push rbx push rax call hexvar mov dword ptr [ rsp + num ] , eax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar jmp hexvar mov edi , num call hexvar mov eax , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ebp , dword ptr [ rsp ] add ebp , num mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r15d xor ebx , ebx jmp hexvar mov edi , num call hexvar mov eax , hexvar mov ebx , dword ptr [ rsp ] jmp hexvar mov dword ptr [ rsp ] , ebp call hexvar test rax , rax mov eax , hexvar cmove eax , r14d jmp hexvar mov eax , ebx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar mov r3 , num str r3 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r0 , num bl hexvar b hexvar ldr r3 , [ sp , num ] add r3 , r3 , num str r3 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r0 , num bl hexvar ldr r3 , [ sp , num ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push rbx sub rsp , hexvar xor r15d , r15d test byte ptr [ rip + hexvar ] , num je hexvar mov rdi , rsp call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar test byte ptr [ rip + hexvar ] , num jne hexvar mov rsi , rsp mov edi , hexvar call hexvar mov ebx , eax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar test ebx , ebx je hexvar mov edi , num call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar xor r15d , r15d mov r14 , rsp nop word ptr cs : [ rax + rax ] mov rdi , r14 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , r14 call hexvar test rax , rax je hexvar mov rbx , rax mov rbp , qword ptr [ rax + hexvar ] test rbp , rbp je hexvar add dword ptr [ rbp + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov eax , dword ptr [ rbx + hexvar ] lea ecx , [ rax - num ] mov dword ptr [ rbx + hexvar ] , ecx cmp eax , num jg hexvar mov qword ptr [ rbx + hexvar ] , num test rbp , rbp je hexvar add dword ptr [ rbp + hexvar ] , - num mov rdi , rbx call hexvar add r15d , num cmp qword ptr [ rip + hexvar ] , num jne hexvar jmp hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edi , num call hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar xor r15d , r15d mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test al , num je hexvar mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar add ecx , - num mov dword ptr [ rip + hexvar ] , ecx jne hexvar or eax , num mov dword ptr [ rip + hexvar ] , eax mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , r15d add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx sub rsp , hexvar xor r15d , r15d test byte ptr [ rip + hexvar ] , num je hexvar mov rdi , rsp call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar test byte ptr [ rip + hexvar ] , num jne hexvar mov rsi , rsp mov edi , hexvar call hexvar mov ebx , eax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar test ebx , ebx je hexvar mov edi , num call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar xor r15d , r15d mov r14 , rsp nop word ptr cs : [ rax + rax ] mov rdi , r14 call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , r14 call hexvar test rax , rax je hexvar mov rbx , rax mov rbp , qword ptr [ rax + hexvar ] test rbp , rbp je hexvar add dword ptr [ rbp + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbp call hexvar mov eax , dword ptr [ rbx + hexvar ] lea ecx , [ rax - num ] mov dword ptr [ rbx + hexvar ] , ecx cmp eax , num jg hexvar mov qword ptr [ rbx + hexvar ] , num test rbp , rbp je hexvar add dword ptr [ rbp + hexvar ] , - num mov rdi , rbx call hexvar add r15d , num cmp qword ptr [ rip + hexvar ] , num jne hexvar jmp hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edi , num call hexvar cmp qword ptr [ rip + hexvar ] , num jne hexvar xor r15d , r15d mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test al , num je hexvar mov ecx , dword ptr [ rip + hexvar ] test ecx , ecx je hexvar add ecx , - num mov dword ptr [ rip + hexvar ] , ecx jne hexvar or eax , num mov dword ptr [ rip + hexvar ] , eax mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov eax , r15d add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push { r4 , r5 , r6 , lr } mov r5 , r3 ldrb r3 , [ r1 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar ldr r4 , [ r2 , hexvar ] cmp r4 , num bne hexvar ldr r4 , [ r2 , hexvar ] bl hexvar cmp r5 , r4 bhi hexvar add r0 , r0 , r5 cmp r0 , r4 movhi r0 , num movls r0 , num pop { r4 , r5 , r6 , pc }
push ebp push edi push esi push ebx sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] movzx edx , byte ptr [ edx + hexvar ] and edx , hexvar cmp dl , hexvar je hexvar mov ebx , dword ptr [ eax + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov ecx , ebx or ecx , ebp je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp edi , ebx ja hexvar jae hexvar xor edx , edx add eax , esi mov ecx , num adc edx , edi cmp edx , ebx jae hexvar add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] movzx edx , byte ptr [ edx + hexvar ] and edx , hexvar cmp dl , hexvar je hexvar mov ebx , dword ptr [ eax + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov ecx , ebx or ecx , ebp je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp ebx , edi jb hexvar jbe hexvar xor edx , edx add eax , esi mov ecx , num adc edx , edi cmp edx , ebx jae hexvar add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , eax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] ja hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov eax , num jmp hexvar mov eax , num leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ esi + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov esi , dword ptr [ edx ] cmp dword ptr [ esi + hexvar ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov ebx , dword ptr [ ebx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , ebx call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov ebx , dword ptr [ ebx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , ebx call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push r12 push rbp mov r12 , rsi push rbx mov rbx , rdx mov rdx , qword ptr [ rdx + hexvar ] mov rbp , rdi test rdx , rdx je hexvar call hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rsi , r12 mov rdi , rbp pop rbx pop rbp pop r12 jmp hexvar nop nop word ptr cs : [ rax + rax ]
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num push eax push ebp push edi call hexvar add esp , hexvar sub esp , num push dword ptr [ esi + hexvar ] push ebp push edi call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 lui a1 , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , a1 , hexvar beqz v0 , hexvar move a1 , s1 move a0 , v0 jal hexvar move s0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 move a0 , s0 lw gp , hexvar ( sp ) move s0 , v0 lw t9 , - hexvar ( gp ) bal hexvar lw s2 , ( v0 ) bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s1 jalr t9 lw s2 , ( s0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) sw a0 , ( fp ) lw a0 , hexvar ( fp ) sw a0 , num ( fp ) lw a0 , ( fp ) lw a3 , num ( a0 ) lw a2 , ( a0 ) lw a0 , num ( fp ) lw a1 , num ( a0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx mov rdi , qword ptr [ rax ] call hexvar shr rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx mov rdi , qword ptr [ rax ] call hexvar shr rax , num add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar shr rax , num add rax , num add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] cmp dword ptr [ ebp + num ] , eax jae hexvar mov eax , dword ptr [ ebx + hexvar ] cmp dword ptr [ ebp + num ] , eax ja hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test al , al je hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ ebp - hexvar ] , al and byte ptr [ ebp - hexvar ] , num movzx eax , byte ptr [ ebx + hexvar ] xor al , byte ptr [ ebp - hexvar ] movzx eax , al test eax , eax setne al mov byte ptr [ ebp - num ] , al cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp byte ptr [ ebp - num ] , num je hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax ] , dl movzx eax , byte ptr [ ebp - num ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] sub edi , esi sbb ebx , edx setae dl and dl , num movzx esi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] sub edi , esi sbb ebx , edx setae dl and dl , num movzx esi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a1 , hexvar ( fp ) sw a0 , num ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v1 , num ( v0 ) lw v0 , ( v0 ) addiu a1 , zero , num lw a0 , num ( fp ) sltu a0 , a0 , v0 bnez a0 , hexvar nop lw a0 , num ( fp ) move a2 , v0 bne a0 , a2 , hexvar nop lw a0 , hexvar ( fp ) sltu v0 , a0 , v1 beqz v0 , hexvar nop move a1 , zero andi v0 , a1 , hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push rbp push rbx mov rbp , rdi mov edi , hexvar sub rsp , num call hexvar mov rbx , rax xor eax , eax test rbp , rbp je hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num mov rax , rbx mov qword ptr [ rbx + num ] , num mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar move s0 , v0 move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 sw s1 , ( s0 ) sw zero , num ( s0 ) sw zero , num ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) move v0 , s0 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar mov r3 , r0 str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r2 , r3 b hexvar mov r2 , num ldr r3 , [ fp , - num ] str r2 , [ r3 ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - num ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r0 , hexvar bl hexvar cmp r5 , num mov r4 , r0 beq hexvar mov r0 , r5 bl hexvar mov r5 , r0 mov r3 , num str r5 , [ r4 ] str r3 , [ r4 , num ] str r3 , [ r4 , num ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] mov r0 , r4 pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push edi push esi push ebx call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num mov esi , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ esi ] mov dword ptr [ esi ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ esi ] , edi mov dword ptr [ eax ] , num pop ebx pop esi pop edi ret
push r13 push r12 mov r13 , r8 push rbp push rbx mov rbp , rdx mov r12 , rcx sub rsp , hexvar test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edi , num mov ebx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] mov dword ptr [ rip + hexvar ] , ebx mov dword ptr [ rip + hexvar ] , num jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 mov r13 , r8 push rbp push rbx mov rbp , rdx mov r12 , rcx sub rsp , hexvar test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edi , num mov ebx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] mov dword ptr [ rip + hexvar ] , ebx mov dword ptr [ rip + hexvar ] , num jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 mov r13 , r8 push rbp push rbx mov rbp , rdx mov r12 , rcx sub rsp , hexvar test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edi , num mov ebx , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num je hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] mov dword ptr [ rip + hexvar ] , ebx mov dword ptr [ rip + hexvar ] , num jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ hexvar ] jae hexvar mov rax , qword ptr [ hexvar ] mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + rcx * num ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov qword ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw zero , hexvar ( fp ) b hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sb zero , - hexvar ( v0 ) lui v0 , hexvar sb zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar sw zero , - hexvar ( v0 ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r0 mov r4 , r1 bl hexvar subs r7 , r0 , num bne hexvar ldr r5 , [ r6 , hexvar ] cmp r4 , num rsblt r4 , r4 , num blt hexvar asr r7 , r4 , num add r7 , r7 , num cmp r4 , hexvar andle r4 , r4 , hexvar mov r8 , r4 sub r3 , r4 , num cmp r4 , num cmpne r3 , num bhi hexvar ldr r1 , [ r5 , hexvar ] cmp r1 , num beq hexvar ldr r3 , [ r5 , hexvar ] cmp r4 , r3 beq hexvar ldr r3 , [ r6 , hexvar ] ldr r0 , [ r6 , hexvar ] blx r3 mov r3 , num str r3 , [ r5 , hexvar ] str r7 , [ r5 , hexvar ] str r8 , [ r5 , hexvar ] mov r0 , r6 bl hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , num jns hexvar mov dword ptr [ ebp - hexvar ] , num neg dword ptr [ ebp + hexvar ] jmp hexvar mov eax , dword ptr [ ebp + hexvar ] sar eax , num add eax , num mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , hexvar jg hexvar and dword ptr [ ebp + hexvar ] , hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num jle hexvar cmp dword ptr [ ebp + hexvar ] , hexvar jle hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] cmp edx , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push ecx push edx call eax add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , num jns hexvar mov dword ptr [ ebp - hexvar ] , num neg dword ptr [ ebp + hexvar ] jmp hexvar mov eax , dword ptr [ ebp + hexvar ] sar eax , num add eax , num mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , hexvar jg hexvar and dword ptr [ ebp + hexvar ] , hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num jle hexvar cmp dword ptr [ ebp + hexvar ] , hexvar jle hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] cmp edx , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push ecx push edx call eax add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s3 , a0 move s0 , a1 jal hexvar nop bnez v0 , hexvar move s2 , v0 bltz s0 , hexvar lw s1 , hexvar ( s3 )
cmp r0 , hexvar push { r4 , r5 , r6 , r7 , r8 , lr } bhi hexvar ldr ip , [ pc , hexvar ] mov r6 , r2 add r0 , ip , r0 , lsl num ldr r1 , [ r0 , hexvar ] add ip , ip , hexvar mov r2 , num add r1 , ip , r1 mov r0 , num mov r4 , r3 bl hexvar mov r7 , r0 bl hexvar cmp r4 , num add r5 , r0 , num beq hexvar cmp r5 , r4 movhi r3 , num subhi r2 , r4 , num strbhi r3 , [ r6 , r2 ] movls r2 , r5 mov r1 , r7 mov r0 , r6 bl hexvar mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sltiu v0 , a0 , hexvar beqz v0 , hexvar sw gp , hexvar ( sp ) move s1 , a2 move s0 , a3 sll a0 , a0 , num lui v0 , hexvar addiu v0 , v0 , hexvar addu a0 , a0 , v0 lw a1 , ( a0 ) addiu a2 , zero , num lui v0 , hexvar addiu v0 , v0 , hexvar addu a1 , v0 , a1 move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s3 , v0 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s0 , hexvar addiu s2 , v0 , num sltu v0 , s0 , s2 bnez v0 , hexvar move a2 , s2 move a1 , s3 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s2 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu a2 , s0 , - num addu v0 , s1 , a2 b hexvar sb zero , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] cmp eax , hexvar ja hexvar mov eax , dword ptr [ ebx + eax * num - hexvar ] sub esp , num push num lea eax , [ ebx + eax - hexvar ] push eax push num call hexvar mov dword ptr [ esp ] , eax mov ebp , eax call hexvar add esp , hexvar test edi , edi lea esi , [ eax + num ] je hexvar cmp esi , edi mov eax , esi ja hexvar sub esp , num push eax push ebp push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] cmp eax , hexvar ja hexvar sub esp , num push num mov eax , dword ptr [ ebx + eax * num - hexvar ] lea eax , [ ebx + eax - hexvar ] push eax push num call hexvar mov edx , eax mov ecx , hexvar mov eax , num mov edi , edx repne scasb al , byte ptr es : [ edi ] not ecx mov esi , ecx add esp , hexvar test ebp , ebp je hexvar mov eax , ecx cmp ecx , ebp ja hexvar sub esp , num push eax push edx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a0 lw s2 , - hexvar ( gp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 lw s3 , - hexvar ( gp ) lw a0 , ( s2 ) sw s4 , hexvar ( sp ) move s4 , a2 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a1 move s0 , a0 lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw v1 , hexvar ( a0 )
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r5 , [ pc , hexvar ] mov r6 , r0 ldr r0 , [ r5 ] mov r4 , r2 ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] mov r7 , r1 cmp r3 , r2 movlo r2 , hexvar addlo r1 , r3 , num strlo r1 , [ r0 , hexvar ] strblo r2 , [ r3 ] bhs hexvar mov r0 , r6 mov r1 , r7 mov r2 , hexvar bl hexvar cmp r4 , num popeq { r4 , r5 , r6 , r7 , r8 , pc } ldr r0 , [ r5 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r3 , r2 bhs hexvar add r2 , r3 , num str r2 , [ r0 , hexvar ] strb r4 , [ r3 ] pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl call hexvar mov ecx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , ecx mov dword ptr [ edi + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp byte ptr [ ebp + hexvar ] , num je hexvar movsx eax , byte ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edx ] mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar cmp eax , dword ptr [ esi ] jne hexvar cmp edx , esi je hexvar add esp , num pop ebx pop esi jmp ecx lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar xor eax , eax add esp , num pop ebx pop esi ret
push rax mov rcx , qword ptr [ rdi ] mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar cmp rcx , qword ptr [ rsi ] je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 ) lw t9 , hexvar ( v0 )
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , hexvar mov r5 , r0 mov r6 , r2 mov r7 , r3 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs r8 , r1 , num beq hexvar mov r0 , sp bl hexvar subs r4 , r0 , num bne hexvar mov r1 , r8 mov r0 , sp bl hexvar subs r4 , r0 , num beq hexvar mov r0 , sp bl hexvar b hexvar mov r3 , r7 mov r2 , r6 mov r1 , sp mov r0 , r5 bl hexvar mov r4 , r0 b hexvar mov r3 , r7 mov r1 , num bl hexvar mov r4 , r0 cmp r4 , num beq hexvar bl hexvar str r4 , [ r0 ] clz r0 , r4 lsr r0 , r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc } stmdbvs sb ! , { r2 , r3 , r4 , r5 , fp , ip , sp } andeq r0 , r0 , r0
push r15 push r14 mov r14 , rcx push r13 push r12 mov r13 , rdx push rbp push rbx mov r12 , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rsi , rsi je hexvar mov r15 , rsp mov rbp , rsi mov rdi , r15 call hexvar test eax , eax mov ebx , eax je hexvar call hexvar mov dword ptr [ rax ] , ebx xor eax , eax test ebx , ebx sete al mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + num ] , edx sub esp , hexvar lea ebp , [ esp + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar call hexvar mov dword ptr [ eax ] , esi xor eax , eax test esi , esi sete al mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + num ] , edx sub esp , hexvar lea ebp , [ esp + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar call hexvar mov dword ptr [ eax ] , esi xor eax , eax test esi , esi sete al mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
sub esp , hexvar lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax push num push ebp push esi call hexvar mov edi , dword ptr [ esp + hexvar ] add esp , hexvar mov ecx , eax mov eax , dword ptr [ esp + hexvar ] add edi , esi test edx , edx je hexvar or eax , num mov dword ptr [ esp + hexvar ] , eax test al , num jne hexvar test al , num jne hexvar mov eax , ecx call hexvar cmp dword ptr [ esp + hexvar ] , num lea edx , [ ebx - hexvar ] push edx sbb eax , eax and eax , hexvar add eax , hexvar push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar pop ecx pop esi push eax push num call hexvar add esp , hexvar jmp hexvar nop
push edi push num push ebp push esi call hexvar add esi , dword ptr [ esp + hexvar ] lea edx , [ ebx - hexvar ] add esp , hexvar test eax , eax lea eax , [ ebx - hexvar ] cmove eax , edx push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ]
sub esp , hexvar lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax push num push ebp push esi call hexvar mov edi , dword ptr [ esp + hexvar ] add esp , hexvar mov ecx , eax mov eax , dword ptr [ esp + hexvar ] add edi , esi test edx , edx je hexvar or eax , num mov dword ptr [ esp + hexvar ] , eax test al , num jne hexvar test al , num jne hexvar mov eax , ecx call hexvar cmp dword ptr [ esp + hexvar ] , num lea edx , [ ebx - hexvar ] push edx sbb eax , eax and eax , hexvar add eax , hexvar push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar pop ecx pop esi push eax push num call hexvar add esp , hexvar jmp hexvar nop
push edi push num push ebp push esi call hexvar add esi , dword ptr [ esp + hexvar ] lea edx , [ ebx - hexvar ] add esp , hexvar test eax , eax lea eax , [ ebx - hexvar ] cmove eax , edx push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 addiu a0 , a0 , num sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) lw v1 , num ( s0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] add ebx , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar and al , num mov byte ptr [ ebp - hexvar ] , al mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , ecx mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] add edx , num sub esp , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar mov byte ptr [ ebp - num ] , al mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx movzx eax , byte ptr [ ebp - num ] mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rcx , qword ptr [ rbp - num ] add rcx , num mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rcx , qword ptr [ rbp - num ] mov r9d , dword ptr [ rcx + num ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx ] , r9d mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , num bne v1 , v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , num beq v1 , v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push ebp push edi mov eax , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esi + hexvar ] shr ecx , num and ecx , hexvar test ch , hexvar jne hexvar mov edi , dword ptr [ esi + num ] cmp dword ptr [ edi + num ] , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 ) ext v0 , v0 , hexvar , num bnez v0 , hexvar addiu v0 , zero , num lw s7 , num ( a0 ) lw v1 , num ( s7 ) bne v1 , v0 , hexvar addiu v0 , zero , num lw v0 , num ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push r15 push r14 push rbx add esi , - num cmp esi , hexvar ja hexvar mov r14 , rcx mov rbx , rdi mov r15 , qword ptr [ rdi + hexvar ] mov eax , num jmp qword ptr [ rsi * num + hexvar ] mov dword ptr [ r15 ] , num mov edi , dword ptr [ r15 + hexvar ] cmp edi , - num je hexvar mov esi , num call hexvar mov edi , dword ptr [ r15 + hexvar ] call hexvar mov dword ptr [ r15 + hexvar ] , hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov dword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu v0 , zero , hexvar beq a1 , v0 , hexvar lw s1 , hexvar ( a0 ) move s2 , a3 slti v0 , a1 , hexvar bnez v0 , hexvar move s0 , a0 addiu v0 , zero , hexvar beq a1 , v0 , hexvar slti v0 , a1 , hexvar bnez v0 , hexvar addiu v0 , zero , hexvar beq a1 , v0 , hexvar nop addiu v0 , zero , hexvar beq a1 , v0 , hexvar nop addiu v0 , zero , hexvar beq a1 , v0 , hexvar nop move v0 , zero lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , num beq a1 , v0 , hexvar nop slti v0 , a1 , hexvar beqz v0 , hexvar addiu v0 , zero , num beq a1 , v0 , hexvar nop addiu v0 , zero , num bne a1 , v0 , hexvar nop b hexvar lw v0 , hexvar ( a0 ) slti v0 , a1 , hexvar bnez v0 , hexvar slti v0 , a1 , hexvar bnez v0 , hexvar addiu v0 , zero , num addiu v0 , zero , hexvar bne a1 , v0 , hexvar move a1 , s1 jal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) addiu v0 , zero , hexvar beq a1 , v0 , hexvar addiu v0 , zero , num addiu v0 , zero , hexvar bne a1 , v0 , hexvar move v0 , zero lw v0 , hexvar ( a0 ) beqz v0 , hexvar nop beqz a3 , hexvar nop lw v0 , num ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu v0 , zero , hexvar beq a1 , v0 , hexvar lw s1 , hexvar ( a0 ) move s2 , a3 slti v0 , a1 , hexvar bnez v0 , hexvar move s0 , a0 addiu v0 , zero , hexvar beq a1 , v0 , hexvar slti v0 , a1 , hexvar bnez v0 , hexvar addiu v0 , zero , hexvar beq a1 , v0 , hexvar nop addiu v0 , zero , hexvar beq a1 , v0 , hexvar nop addiu v0 , zero , hexvar beq a1 , v0 , hexvar nop move v0 , zero lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , num beq a1 , v0 , hexvar nop slti v0 , a1 , hexvar beqz v0 , hexvar addiu v0 , zero , num beq a1 , v0 , hexvar nop addiu v0 , zero , num bne a1 , v0 , hexvar nop b hexvar lw v0 , hexvar ( a0 ) slti v0 , a1 , hexvar bnez v0 , hexvar slti v0 , a1 , hexvar bnez v0 , hexvar addiu v0 , zero , num addiu v0 , zero , hexvar bne a1 , v0 , hexvar move a1 , s1 jal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) addiu v0 , zero , hexvar beq a1 , v0 , hexvar addiu v0 , zero , num addiu v0 , zero , hexvar bne a1 , v0 , hexvar move v0 , zero lw v0 , hexvar ( a0 ) beqz v0 , hexvar nop beqz a3 , hexvar nop lw v0 , num ( s1 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub ecx , hexvar sbb eax , num setb dl movzx esi , dl movsd xmm0 , qword ptr [ esi * num + hexvar ] cvtsd2ss xmm0 , xmm0 mov esi , dword ptr [ ebp - hexvar ] movss dword ptr [ esi + hexvar ] , xmm0 mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbx mov rax , rdi mov rdi , rsi mov rbx , rdx mov rdx , rax mov rsi , rbx call hexvar test rax , rax je hexvar movss xmm0 , dword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , hexvar jbe hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 mov eax , num jmp hexvar sub dword ptr [ rbx ] , num mov eax , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) move v0 , a1 move a1 , a2 move a2 , a0 move a0 , v0 jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub ecx , hexvar sbb eax , num setb dl movzx esi , dl movsd xmm0 , qword ptr [ esi * num + hexvar ] cvtsd2ss xmm0 , xmm0 mov esi , dword ptr [ ebp - hexvar ] movss dword ptr [ esi + hexvar ] , xmm0 mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp + num ] mov bl , byte ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi movzx esi , bl mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp + num ] mov bl , byte ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi movzx esi , bl mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbx mov r8 , rdx movzx edx , byte ptr [ rdi + hexvar ] mov rcx , rsi mov rbx , rdi mov rsi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + num ] call hexvar test eax , eax js hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , num ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] cmp dword ptr [ esi ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov esi , dword ptr [ eax ] cmp dword ptr [ esi ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , ebx call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , hexvar mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , ebx call hexvar add esp , hexvar jmp hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 lw v0 , ( a0 ) beqz v0 , hexvar move s0 , a2 lw a3 , ( s2 ) move a2 , s0 addiu a1 , zero , num move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s3 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , ( v0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r12 , rdi mov rbp , rsi mov rbx , rdx cmp qword ptr [ rdi ] , num je hexvar mov rcx , qword ptr [ r12 ] mov rdx , rbx mov esi , num mov rdi , rbp call hexvar mov r13 , rax call hexvar mov ecx , dword ptr [ rax ] add rbp , r13 sub rbx , r13 je hexvar mov rdx , qword ptr [ r12 ] mov edx , dword ptr [ rdx ] and edx , hexvar cmovne edx , ecx mov dword ptr [ rax ] , edx mov rdi , qword ptr [ r12 + hexvar ] call qword ptr [ r12 + num ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s5 , a0 move a0 , a1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s4 , v0 lw v0 , ( s5 ) beqz v0 , hexvar move s3 , zero move s2 , zero move v0 , s2 lw ra , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar lui s6 , hexvar jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , ( s5 )
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax push edx call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax mov eax , num je hexvar mov ecx , dword ptr [ edi ] xor edi , edi test ecx , ecx je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , rdi mov rdi , rsi call hexvar xor ebx , ebx test rax , rax je hexvar cmp qword ptr [ r14 ] , num jne hexvar mov r15 , rax mov rdi , rax call hexvar test eax , eax jle hexvar xor ebp , ebp mov rdi , r15 mov esi , ebp call hexvar mov rbx , qword ptr [ rax + num ] mov r12 , qword ptr [ r14 ] test r12 , r12 jne hexvar call hexvar mov r12 , rax mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax jne hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov eax , hexvar mov r13d , hexvar jmp hexvar nop dword ptr [ rax ] mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar nop dword ptr [ rax ] mov esi , dword ptr [ rax ] mov rdi , r12 mov edx , num call hexvar xor ebx , ebx test eax , eax je hexvar cmp qword ptr [ r13 ] , num je hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar mov ebx , num mov esi , hexvar mov rdi , r15 call hexvar mov eax , ebx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test ecx , ecx je hexvar push num push num push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar push esi push num push num lea eax , [ esp + hexvar ] push eax call hexvar xor eax , num add esp , hexvar or edx , eax jne hexvar cmp byte ptr [ esp + num ] , hexvar jne hexvar movzx edx , byte ptr [ esp + num ] lea eax , [ ebx - hexvar ] cmp byte ptr [ eax + edx ] , hexvar je hexvar movzx edx , byte ptr [ esp + hexvar ] cmp byte ptr [ eax + edx ] , hexvar je hexvar movzx edx , byte ptr [ esp + hexvar ] cmp byte ptr [ eax + edx ] , hexvar je hexvar sub esp , num push num push hexvar push esi call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov eax , esi call hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + num ] jmp hexvar lea esi , [ esi ] xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar cmp rax , num je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ rbp - hexvar ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] cmp al , hexvar je hexvar movzx eax , byte ptr [ rbp - hexvar ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] cmp al , hexvar je hexvar movzx eax , byte ptr [ rbp - num ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax call hexvar push num push num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar push dword ptr [ ebp - hexvar ] push num push num lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov ecx , eax xor ecx , num mov esi , ecx mov eax , edx xor ah , num mov edi , eax mov eax , edi or eax , esi test eax , eax je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ ebp - hexvar ] movzx eax , al lea edx , [ ebx - hexvar ] movzx eax , byte ptr [ edx + eax ] cmp al , hexvar je hexvar movzx eax , byte ptr [ ebp - hexvar ] movzx eax , al lea edx , [ ebx - hexvar ] movzx eax , byte ptr [ edx + eax ] cmp al , hexvar je hexvar movzx eax , byte ptr [ ebp - hexvar ] movzx eax , al lea edx , [ ebx - hexvar ] movzx eax , byte ptr [ edx + eax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov edi , dword ptr [ ebp - hexvar ] xor edi , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar cmp rax , num je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ rbp - hexvar ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] cmp al , hexvar je hexvar movzx eax , byte ptr [ rbp - hexvar ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] cmp al , hexvar je hexvar movzx eax , byte ptr [ rbp - num ] movzx eax , al movsxd rdx , eax lea rax , [ rip + hexvar ] movzx eax , byte ptr [ rdx + rax ] cmp al , hexvar jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , zero , num beq v0 , v1 , hexvar nop sltiu v1 , v0 , num beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v0 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop sw zero , hexvar ( sp ) move a3 , zero lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , zero , num beq v0 , v1 , hexvar nop sltiu v1 , v0 , num beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v0 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop sw zero , hexvar ( sp ) move a3 , zero lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar cmp eax , num ja hexvar cmp eax , num je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , num mov ecx , num mov rdi , rax call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , zero , num beq v0 , v1 , hexvar nop sltiu v1 , v0 , num beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) b hexvar nop lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v0 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop sw zero , hexvar ( sp ) move a3 , zero lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edi mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ esi ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar mov edi , eax mov ebp , dword ptr [ eax ] sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num push num call hexvar lea esi , [ eax + num ] add esp , hexvar push esi call hexvar mov ebx , eax add esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push eax call hexvar mov dword ptr [ edi ] , ebp mov eax , ebx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , lr } mov ip , r1 orr r1 , r1 , r2 cmp r1 , hexvar movlo r3 , num movhs r3 , num cmp r2 , num moveq r3 , num cmp r3 , num bne hexvar mul r1 , r2 , ip bl hexvar pop { r4 , r5 , r6 , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , edi je hexvar mov eax , esi or eax , edi je hexvar test ecx , ecx jne hexvar test edi , edi jne hexvar imul edi , ebp mov eax , ebp imul ecx , esi mul esi add ecx , edi add ecx , edx mov edx , dword ptr [ esp + hexvar ] mov edi , eax test edx , edx je hexvar test ecx , ecx jne hexvar test eax , eax js hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar test edi , edi je hexvar mov dword ptr [ esp + num ] , eax sub esp , hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) or a1 , a2 , v0 beqz a1 , hexvar lw v1 , hexvar ( sp ) or a1 , v0 , v1 beqz a1 , hexvar mult v0 , a3 move a1 , zero bnez a2 , hexvar move t2 , zero bnez v0 , hexvar move t4 , v0 or a1 , a1 , t2 bnez a1 , hexvar lw t9 , - hexvar ( gp ) mult v0 , a3 madd a2 , v1 mflo v0 multu a3 , v1 mflo a3 mfhi a2 addu a2 , v0 , a2 jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar move t0 , a3 multu t0 , t4 mflo t5 mfhi t4 multu a3 , v1 mfhi t0 addu t0 , t0 , t5 sltu t0 , t0 , t5 addu t0 , t0 , t4 beqz t0 , hexvar nop move a1 , zero b hexvar addiu t2 , zero , num bnez v0 , hexvar move t4 , a2 b hexvar move t0 , v1 addiu a0 , zero , num bal hexvar nop lw gp , hexvar ( sp ) b hexvar move v0 , zero
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) or a1 , a2 , v0 beqz a1 , hexvar lw v1 , hexvar ( sp ) or a1 , v0 , v1 beqz a1 , hexvar mult v0 , a3 move a1 , zero bnez a2 , hexvar move t2 , zero bnez v0 , hexvar move t4 , v0 or a1 , a1 , t2 bnez a1 , hexvar lw t9 , - hexvar ( gp ) mult v0 , a3 madd a2 , v1 mflo v0 multu a3 , v1 mflo a3 mfhi a2 addu a2 , v0 , a2 jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar move t0 , a3 multu t0 , t4 mflo t5 mfhi t4 multu a3 , v1 mfhi t0 addu t0 , t0 , t5 sltu t0 , t0 , t5 addu t0 , t0 , t4 beqz t0 , hexvar nop move a1 , zero b hexvar addiu t2 , zero , num bnez v0 , hexvar move t4 , a2 b hexvar move t0 , v1 addiu a0 , zero , num bal hexvar nop lw gp , hexvar ( sp ) b hexvar move v0 , zero
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdi , qword ptr [ rdx ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdi , qword ptr [ rdx ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdi , qword ptr [ rdx ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rsp , rbp pop rbp ret
push ebx xor eax , eax sub esp , num mov edx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ ebx ] mov edx , dword ptr [ edx + ecx * num ] test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] add ecx , num mov dword ptr [ ebx ] , ecx call hexvar test al , al jne hexvar sub dword ptr [ ebx ] , num add esp , num pop ebx ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
test rsi , rsi je hexvar push rbp push rbx sub rsp , num movsxd rcx , dword ptr [ rdx ] mov rbp , qword ptr [ rsi + rcx * num ] mov rax , rcx test rbp , rbp je hexvar add eax , num mov dword ptr [ rdx ] , eax call hexvar xor edi , edi mov rbx , rax mov qword ptr [ rax + hexvar ] , num call hexvar mov edi , hexvar mov qword ptr [ rbx + hexvar ] , rax mov ecx , hexvar mov rsi , rbp repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] je hexvar mov edi , hexvar mov ecx , hexvar mov rsi , rbp repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] je hexvar mov rdi , rbp mov esi , hexvar call hexvar test rax , rax mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , rbp je hexvar call hexvar xor edx , edx cmp eax , - num je hexvar mov edi , eax call hexvar test eax , eax setne dl mov byte ptr [ rbx + hexvar ] , dl mov byte ptr [ rbx + hexvar ] , num mov eax , num mov byte ptr [ rbx + hexvar ] , num mov byte ptr [ rbx + hexvar ] , num mov byte ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx jmp hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) addiu s0 , sp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) sw a2 , hexvar ( sp ) move a2 , a1 lw v0 , ( s1 ) move a1 , a0 move a0 , s0 sw v0 , hexvar ( sp ) bal hexvar nop move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) lw gp , hexvar ( sp ) bne a0 , v1 , hexvar lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi lea edi , [ ebp - hexvar ] mov ebx , edi mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a2 , a1 move a1 , a0 addiu s0 , sp , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar move v0 , s2 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop nop
push rbp push rbx sub rsp , hexvar lea rbx , [ rsp + num ] mov dword ptr [ rsp + num ] , edx mov edx , esi mov rsi , rdi mov rdi , rbx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar mov rdi , rbx mov ebp , eax call hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar mov eax , ebp pop rbx pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ r3 ] ldr r3 , [ sp ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar mvn r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ sp ] ldr r0 , [ sp , num ] blx r3 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bgt hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ sp ] ldr r0 , [ sp , num ] blx r3 mov r3 , r0 b hexvar mvn r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp push r14 push rbx mov eax , dword ptr [ rdi ] mov ebp , hexvar cmp eax , dword ptr [ rsi ] jne hexvar mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov ebp , hexvar test rax , rax je hexvar mov r14 , rsi mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar mov rdi , rbx mov rsi , r14 call rcx test eax , eax jle hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov rsi , r14 pop rbx pop r14 pop rbp jmp rax mov ebp , eax mov eax , ebp pop rbx pop r14 pop rbp ret
push esi push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] cmp dword ptr [ ebx ] , eax jne hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , num push esi push ebx call edx add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ebx add esp , num pop ebx pop esi jmp eax nop lea esi , [ esi ] mov eax , hexvar add esp , num pop ebx pop esi ret
push rbp push r14 push rbx mov eax , dword ptr [ rdi ] mov ebp , hexvar cmp eax , dword ptr [ rsi ] jne hexvar mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov ebp , hexvar test rax , rax je hexvar mov r14 , rsi mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar mov rdi , rbx mov rsi , r14 call rcx test eax , eax jle hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov rsi , r14 pop rbx pop r14 pop rbp jmp rax mov ebp , eax mov eax , ebp pop rbx pop r14 pop rbp ret
mov eax , dword ptr [ ebx + hexvar ] add edi , num mov eax , dword ptr [ eax ] mov ecx , dword ptr [ eax + hexvar ] cmp ecx , dword ptr [ eax + hexvar ] jae hexvar lea ebp , [ ecx + num ] mov dword ptr [ eax + hexvar ] , ebp mov byte ptr [ ecx ] , dl jmp hexvar lea esi , [ esi ] sub esp , num push hexvar push eax call hexvar add esp , hexvar jmp hexvar movzx esi , byte ptr [ edi + num ] lea eax , [ ebp - hexvar ] test byte ptr [ ecx + esi * num + num ] , hexvar mov edx , esi je hexvar lea esi , [ edi + num ] lea edi , [ edx - hexvar ] shl eax , num mov ebp , eax movsx ecx , dl mov eax , edi cmp al , num ja hexvar sub ecx , hexvar lea eax , [ ebp + ecx ] jmp hexvar
sub esp , hexvar push dword ptr [ edi + hexvar ] call hexvar add esp , hexvar lea ecx , [ ebx - hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ eax ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar mov esi , num jmp hexvar
sub esp , hexvar push dword ptr [ edi + hexvar ] call hexvar add esp , hexvar lea ecx , [ ebx - hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ eax ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar mov esi , num jmp hexvar
mov edx , dword ptr [ esi + hexvar ] push num mov eax , hexvar sub eax , edx push eax lea eax , [ ebx + edx ] push eax push esi call hexvar add esp , hexvar test eax , eax jns hexvar cmp eax , hexvar je hexvar sub esp , num push dword ptr [ esi + hexvar ] lea eax , [ ebx ] push eax push dword ptr [ esi + hexvar ] call hexvar mov edx , num mov eax , esi call hexvar add esp , hexvar jmp hexvar add dword ptr [ esi + hexvar ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar jmp hexvar
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esi - num ] cmp eax , num ja hexvar test edi , edi je hexvar sub esp , num push edi push esi push ebp call hexvar add esp , hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push num mov ecx , edi mov edx , dword ptr [ esp + hexvar ] mov eax , ebp call hexvar add esp , hexvar cmp eax , - num je hexvar cmp dword ptr [ esp + hexvar ] , num sbb edx , edx and edx , hexvar add edx , hexvar mov ecx , dword ptr [ esp + num ] mov dword ptr [ ecx + hexvar ] , edx mov dword ptr [ ecx + hexvar ] , esi mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] lea r8 , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , - num jne hexvar mov qword ptr [ rbp - num ] , - num jmp hexvar xor eax , eax mov ecx , dword ptr [ rbp - hexvar ] cmp ecx , num mov ecx , num cmovne eax , ecx shl eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , hexvar mov esi , eax xor esi , hexvar xor ecx , hexvar mov edi , edx and edi , hexvar mov r8d , ecx and r8d , hexvar mov r9d , esi and r9d , hexvar and eax , ecx or edi , r8d or r9d , eax xor edi , r9d or edx , esi xor edx , hexvar or ecx , hexvar and edx , ecx or edi , edx mov r10 , qword ptr [ rbp - hexvar ] mov dword ptr [ r10 + hexvar ] , edi mov eax , dword ptr [ rbp - hexvar ] mov r10 , qword ptr [ rbp - hexvar ] mov dword ptr [ r10 + hexvar ] , eax mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , r10 mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx xor ecx , ecx mov dword ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar sub esp , num push hexvar push dword ptr [ ebp - hexvar ] mov ebx , eax call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edx , dword ptr [ ebp + hexvar ] sub esp , num push dword ptr [ ebp - hexvar ] push edx push dword ptr [ ebp - hexvar ] mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov edx , hexvar jmp hexvar mov edx , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx xor ecx , ecx mov dword ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar sub esp , num push hexvar push dword ptr [ ebp - hexvar ] mov ebx , eax call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edx , dword ptr [ ebp + hexvar ] sub esp , num push dword ptr [ ebp - hexvar ] push edx push dword ptr [ ebp - hexvar ] mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov edx , hexvar jmp hexvar mov edx , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
test r8 , r8 mov rax , rsi je hexvar cmp byte ptr [ r8 + hexvar ] , num je hexvar mov eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov cx , word ptr [ rax + hexvar ] mov dx , hexvar xor dx , hexvar mov si , cx xor si , dx and si , cx movzx edi , si cmp edi , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + hexvar ] and ecx , hexvar and ecx , hexvar add ecx , hexvar mov dl , cl mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov eax , num add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar addiu v1 , zero , num lbu a0 , hexvar ( v0 ) beq a0 , v1 , hexvar move s0 , a2 addiu v0 , zero , num lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , hexvar ( v0 )
addiu sp , sp , - hexvar lui gp , hexvar lw v0 , hexvar ( sp ) addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lbu a0 , hexvar ( v0 ) addiu v1 , zero , num beq a0 , v1 , hexvar nop lw ra , hexvar ( sp ) addiu v0 , zero , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , edi mov eax , dword ptr [ eax - hexvar ] mov dword ptr [ edx - hexvar ] , eax mov eax , dword ptr [ edx - hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ecx - hexvar ] sub esp , hexvar mov ebx , esp mov dword ptr [ ebx + num ] , ecx mov dword ptr [ ebx + num ] , eax mov dword ptr [ ebx ] , edx mov dword ptr [ ebx + hexvar ] , num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edx mov dword ptr [ ecx + hexvar ] , num call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovb edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax movabs rsi , num mov edx , num call hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax movabs rsi , num mov edx , num call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rdi , rax movabs rsi , num mov edx , num call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rdi cmp qword ptr [ rdx ] , num setb r8b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , num mov rdi , rcx movabs rsi , hexvar mov edx , num call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push r14 push rbx push rax mov rbx , rdi call hexvar mov rdi , rbx mov rsi , rax call hexvar xor r14d , r14d test rax , rax je hexvar mov ecx , num mov rdi , rax mov esi , num xor edx , edx xor r8d , r8d call hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar test rax , rax je hexvar mov ecx , num mov rdi , rax mov esi , num xor edx , edx xor r8d , r8d call hexvar call hexvar mov r14d , num mov eax , r14d add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a1 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a3 , zero , num move a2 , zero sw zero , hexvar ( sp ) addiu a1 , zero , num bal hexvar move a0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a1 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a3 , zero , num move a2 , zero sw zero , hexvar ( sp ) addiu a1 , zero , num bal hexvar move a0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop addiu v0 , zero , num lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push r14 push rbx push rax mov rbx , rdi call hexvar mov rdi , rbx mov rsi , rax call hexvar xor r14d , r14d test rax , rax je hexvar mov ecx , num mov rdi , rax mov esi , num xor edx , edx xor r8d , r8d call hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar test rax , rax je hexvar mov ecx , num mov rdi , rax mov esi , num xor edx , edx xor r8d , r8d call hexvar call hexvar mov r14d , num mov eax , r14d add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov rbx , rdi call hexvar mov rdi , rbx mov rsi , rax call hexvar xor r14d , r14d test rax , rax je hexvar mov ecx , num mov rdi , rax mov esi , num xor edx , edx xor r8d , r8d call hexvar call hexvar mov rdi , rbx mov rsi , rax call hexvar test rax , rax je hexvar mov ecx , num mov rdi , rax mov esi , num xor edx , edx xor r8d , r8d call hexvar call hexvar mov r14d , num mov eax , r14d add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar test edi , edi je hexvar sub esp , hexvar push dword ptr [ esi ] call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax setne al pop ebx movzx eax , al pop esi pop edi ret
push r14 push rbx push rax test rdi , rdi je hexvar mov r14 , rsi test rsi , rsi je hexvar mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar mov rdi , r14 call hexvar mov rcx , rax mov qword ptr [ rbx ] , rax xor eax , eax test rcx , rcx setne al add rsp , num pop rbx pop r14 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r0 , [ sp , num ] bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , sp , hexvar pop { pc }
push { r4 , r5 , r6 , r7 , r8 , lr } subs r4 , r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r4 , hexvar ] cmp r2 , num beq hexvar ldr r6 , [ r4 , hexvar ] cmp r6 , num beq hexvar ldr r3 , [ r6 ] cmp r4 , r3 beq hexvar mvn r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andls fp , r7 , hexvar andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , lr } subs r4 , r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r4 , hexvar ] cmp r2 , num beq hexvar ldr r6 , [ r4 , hexvar ] cmp r6 , num beq hexvar ldr r3 , [ r6 ] cmp r4 , r3 beq hexvar mvn r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } adcshi sb , r5 , hexvar andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov eax , esi call hexvar test eax , eax jne hexvar mov ebp , eax mov edi , dword ptr [ esi + hexvar ] test ebx , ebx js hexvar mov ebp , ebx sar ebp , num add ebp , num mov eax , ebx and eax , hexvar cmp ebx , hexvar cmovl ebx , eax mov dword ptr [ esp + hexvar ] , ebx lea eax , [ ebx - num ] cmp eax , num jbe hexvar test ebx , ebx jne hexvar mov eax , dword ptr [ edi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] cmp edx , dword ptr [ edi + hexvar ] je hexvar sub esp , num push eax push dword ptr [ esi + hexvar ] call dword ptr [ esi + hexvar ] mov dword ptr [ edi + hexvar ] , num add esp , hexvar mov dword ptr [ edi + hexvar ] , ebp mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + hexvar ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov eax , esi call hexvar test eax , eax jne hexvar mov ebp , eax mov edi , dword ptr [ esi + hexvar ] test ebx , ebx js hexvar mov ebp , ebx sar ebp , num add ebp , num mov eax , ebx and eax , hexvar cmp ebx , hexvar cmovl ebx , eax mov dword ptr [ esp + hexvar ] , ebx lea eax , [ ebx - num ] cmp eax , num jbe hexvar test ebx , ebx jne hexvar mov eax , dword ptr [ edi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] cmp edx , dword ptr [ edi + hexvar ] je hexvar sub esp , num push eax push dword ptr [ esi + hexvar ] call dword ptr [ esi + hexvar ] mov dword ptr [ edi + hexvar ] , num add esp , hexvar mov dword ptr [ edi + hexvar ] , ebp mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + hexvar ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num mov eax , dword ptr [ eax + hexvar ] push eax push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a2 , - hexvar ( gp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r7 ] mov r5 , r0 ldr r0 , [ pc , hexvar ] mov r8 , r1 str r3 , [ sp , hexvar ] bl hexvar subs r6 , r0 , num moveq r0 , num beq hexvar add r1 , pc , hexvar ldm r1 , { r0 , r1 } mov r2 , num mov r3 , num mov ip , num str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r3 , pc , hexvar ldm r3 , { r2 , r3 } stm sp , { r0 , r1 } str r2 , [ sp , num ] str r3 , [ sp , hexvar ] add r3 , pc , hexvar ldm r3 , { r2 , r3 } str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r3 , pc , hexvar ldm r3 , { r2 , r3 } str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r3 , pc , hexvar ldm r3 , { r2 , r3 } str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r3 , pc , hexvar ldm r3 , { r2 , r3 } str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r3 , pc , hexvar ldm r3 , { r2 , r3 } str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] add r3 , pc , hexvar ldm r3 , { r2 , r3 } str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str ip , [ sp , hexvar ] mov r4 , num b hexvar cmp r0 , num ldr r3 , [ r5 ] beq hexvar tst r3 , hexvar bne hexvar rsb r2 , r4 , hexvar add r0 , r6 , r4 mov r3 , r5 mov r1 , num bl hexvar add r4 , r4 , r0 cmp r4 , hexvar bne hexvar mov r1 , r4 mov r2 , sp mov r0 , r6 bl hexvar b hexvar tst r3 , hexvar beq hexvar mov r0 , r6 bl hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r7 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ fp , - num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar cmp eax , num sbb eax , eax add esp , hexvar and eax , num add eax , num pop ebx ret
sub rsp , num mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp rax , num sbb eax , eax add rsp , num and eax , num add eax , num ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ fp , - num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx movsxd rdi , dword ptr [ rbp - num ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rcx , [ rcx + rcx * num ] mov edx , dword ptr [ rax + rcx * num + num ] mov eax , edx movsxd rsi , dword ptr [ rax * num + hexvar ] call hexvar mov edx , eax mov dword ptr [ rbp - num ] , edx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar cmp dword ptr [ hexvar ] , num jne hexvar mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov dword ptr [ ecx ] , num mov dword ptr [ eax ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] cmp ecx , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ esi ] shl edi , num add edx , edi mov edx , dword ptr [ edx + num ] mov edx , dword ptr [ edx * num + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp - num ] shl edx , num add ecx , edx mov ecx , dword ptr [ ecx + num ] mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , hexvar add eax , num sub eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui v0 , hexvar lw t0 , hexvar ( v0 ) beqz t0 , hexvar sll t0 , t0 , num lui v0 , hexvar lw a2 , hexvar ( v0 ) addu t0 , t0 , a2 addiu v0 , zero , num lui t1 , hexvar b hexvar addiu t1 , t1 , - hexvar move v1 , a0 teq v1 , zero , num divu zero , v0 , v1 mfhi a0 bnez a0 , hexvar move v0 , v1 teq v1 , zero , num divu zero , a1 , v1 mflo v0 addiu a2 , a2 , hexvar beq a2 , t0 , hexvar mul v0 , v0 , a3 move a3 , v0 lw v1 , num ( a2 ) sll v1 , v1 , num addu v1 , v1 , t1 lw a1 , ( v1 ) b hexvar move v1 , a1 addiu v0 , zero , num jr ra nop
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s1 , hexvar ( sp ) addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw s1 , hexvar ( s0 ) beqz s1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( s1 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( s1 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 lw gp , hexvar ( sp ) addiu s0 , s0 , hexvar lw s0 , num ( s0 ) beqz s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( s0 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( s0 ) move a0 , s0 lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { fp , lr } add fp , sp , num sub sp , sp , num mov r3 , num str r3 , [ fp , - num ] b hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] ldr r3 , [ r2 , r3 , lsl num ] cmp r3 , num beq hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] ldr r3 , [ r2 , r3 , lsl num ] mov r0 , r3 bl hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - num ] ldr r3 , [ r2 , r3 , lsl num ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bls hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , num setb cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shl eax , num lea ecx , [ hexvar ] add ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num setb al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax * num + hexvar ] , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a3 , v0 lui a2 , hexvar addiu a2 , a2 , hexvar move a1 , zero move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop
sub rsp , num mov edx , num mov esi , hexvar xor edi , edi call hexvar mov edi , dword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar xor esi , esi xor eax , eax call hexvar call hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) b hexvar nop lw a0 , hexvar ( sp ) jal hexvar nop bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , ( v0 )
push rbp push rbx push rax mov ebp , num cmp dword ptr [ rdi ] , - num je hexvar mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , rax mov rsi , rbx call hexvar test eax , eax je hexvar cmp dword ptr [ rbx + hexvar ] , - num lea rbx , [ rbx + hexvar ] jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop rbp ret
push rbp push rbx push rax mov ebp , num cmp dword ptr [ rdi ] , - num je hexvar mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rdi , rax mov rsi , rbx call hexvar test eax , eax je hexvar cmp dword ptr [ rbx + hexvar ] , - num lea rbx , [ rbx + hexvar ] jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) b hexvar nop lw a0 , hexvar ( sp ) jal hexvar nop bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar bl hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar mov r2 , num mov r1 , hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 , hexvar ] mov r2 , num mov r1 , hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 , hexvar ] mov r2 , num mov r1 , hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 , hexvar ] mov r2 , num mov r1 , hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 , hexvar ] mov r2 , num mov r1 , hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] mov r0 , r3 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lui a0 , hexvar lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar addiu a0 , a0 , hexvar jalr t9 move s0 , v0 lui a0 , hexvar lw gp , hexvar ( sp ) move a2 , zero addiu a1 , zero , hexvar sw v0 , hexvar ( s0 )
push rbx call hexvar test rax , rax je hexvar mov rbx , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax mov edi , hexvar mov esi , hexvar xor edx , edx call hexvar mov qword ptr [ rbx + hexvar ] , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx cmove rbx , rcx test rax , rax cmove rbx , rax mov rax , rbx pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num call hexvar test eax , eax je hexvar mov esi , eax lea eax , [ ebx + hexvar ] sub esp , num push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx + hexvar ] add esp , hexvar push num push hexvar push eax call hexvar mov edx , dword ptr [ esi + hexvar ] add esp , hexvar mov dword ptr [ esi + hexvar ] , eax test edx , edx je hexvar mov ebx , dword ptr [ esi + hexvar ] test ebx , ebx je hexvar mov ecx , dword ptr [ esi + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test eax , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push r15 push r14 push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov rbp , qword ptr [ rbx + hexvar ] test rbp , rbp je hexvar cmp qword ptr [ rbp ] , num jne hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar test rax , rax mov rbp , rax je hexvar cmp qword ptr [ rax + hexvar ] , hexvar jbe hexvar lea rdx , [ rsp + hexvar ] mov rsi , rax mov rdi , rbx call hexvar test eax , eax je hexvar mov r15 , qword ptr [ rbp + hexvar ] cmp r15 , hexvar jbe hexvar mov rbp , qword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + num ] lea rdi , [ rbp + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rbx + num ] mov rdi , rbp call qword ptr [ rax + hexvar ] mov r13 , rax mov rax , qword ptr [ rbx + num ] lea rdi , [ rbp + num ] call qword ptr [ rax + hexvar ] cmp r13 , - num mov r12 , rax ja hexvar lea r14 , [ r13 + num ] and r14 , hexvar cmp qword ptr [ rsp + num ] , num setne cl test rax , rax sete al or cl , al jne hexvar cmp r13 , num jne hexvar lea r13 , [ rbp + hexvar ] lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , r13 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar lea rsi , [ r12 + hexvar ] cmp r15 , rsi jb hexvar mov rdi , rbx call hexvar test rax , rax mov rbp , rax je hexvar lea rdi , [ rax + num ] lea rsi , [ r13 + r14 ] mov qword ptr [ rax ] , r12 mov rdx , r12 call hexvar mov qword ptr [ rbx + hexvar ] , rbp mov rdi , qword ptr [ rsp + hexvar ] call hexvar nop mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi mov ebp , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test ebp , ebp je hexvar mov esi , dword ptr [ ebp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi + num ] or eax , dword ptr [ esi ] jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar cmp dword ptr [ eax + hexvar ] , num jbe hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push esi push ebp call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] xor esi , esi test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar nop lea esi , [ esi ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov r12 , qword ptr [ rbx + hexvar ] test r12 , r12 je hexvar cmp qword ptr [ r12 ] , num jne hexvar lea rsi , [ rip + hexvar ] mov rdi , rbx call hexvar mov rbp , rax test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , hexvar jbe hexvar lea rdx , [ rsp + hexvar ] mov rsi , rax mov rdi , rbx call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rsp + hexvar ] mov r12d , num test rdi , rdi je hexvar call hexvar mov rax , r12 mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi mov ebp , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test ebp , ebp je hexvar mov esi , dword ptr [ ebp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi + num ] or eax , dword ptr [ esi ] jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar cmp dword ptr [ eax + hexvar ] , num jbe hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push esi push ebp call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] xor esi , esi test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar nop lea esi , [ esi ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
beqz a0 , hexvar lui v0 , hexvar lw v1 , hexvar ( v0 ) lui v0 , hexvar addiu v0 , v0 , hexvar beq v1 , v0 , hexvar nop sw v1 , ( a0 ) beqz a1 , hexvar lui v0 , hexvar lw v1 , hexvar ( v0 ) lui v0 , hexvar addiu v0 , v0 , hexvar beq v1 , v0 , hexvar nop sw v1 , ( a1 )
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov r8d , hexvar xor ecx , ecx cmp rax , r8 cmovne rcx , rax mov qword ptr [ rdi ] , rcx test rsi , rsi je hexvar mov rax , qword ptr [ rip + hexvar ] mov ecx , hexvar xor edi , edi cmp rax , rcx cmovne rdi , rax mov qword ptr [ rsi ] , rdi test rdx , rdx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdx ] , rax ret
sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] b hexvar mov r3 , num ldr r2 , [ sp , hexvar ] str r3 , [ r2 ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] b hexvar mov r3 , num ldr r2 , [ sp , num ] str r3 , [ r2 ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , num ] str r2 , [ r3 ] mov r0 , r0 add sp , sp , hexvar bx lr eoreq sl , sl , r0 , lsl r3 andeq r5 , ip , r4 , ror num eoreq sl , sl , r8 , lsl r3 andeq r5 , ip , ip , lsl r6 eoreq sl , sl , ip , lsl r3
call hexvar add eax , hexvar cmp dword ptr [ esp + num ] , num je hexvar mov ecx , dword ptr [ eax + hexvar ] lea edx , [ eax - hexvar ] cmp ecx , edx je hexvar mov edx , dword ptr [ eax + hexvar ] jmp hexvar mov edx , num mov ecx , dword ptr [ esp + num ] mov dword ptr [ ecx ] , edx cmp dword ptr [ esp + num ] , num je hexvar mov ecx , dword ptr [ eax + hexvar ] lea edx , [ eax - hexvar ] cmp ecx , edx je hexvar mov edx , dword ptr [ eax + hexvar ] jmp hexvar mov edx , num mov ecx , dword ptr [ esp + num ] mov dword ptr [ ecx ] , edx cmp dword ptr [ esp + hexvar ] , num je hexvar mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx nop ret
ldrb r3 , [ r0 , hexvar ] push { r4 , r5 , r6 , r7 , r8 , lr } ands r4 , r3 , hexvar bne hexvar mov r5 , r0 mov r0 , num bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , r7 , r8 , pc } mov r6 , num mov r7 , num str r0 , [ r5 , num ] str r4 , [ r0 ] str r4 , [ r0 , num ] ldr r3 , [ r5 , hexvar ] ldr r1 , [ pc , hexvar ] orr r3 , r3 , hexvar and r2 , r3 , hexvar orr r2 , r2 , hexvar str r3 , [ r5 , hexvar ] str r6 , [ r5 , hexvar ] str r7 , [ r5 , hexvar ] strb r2 , [ r5 , hexvar ] str r6 , [ r5 , hexvar ] str r7 , [ r5 , hexvar ] str r1 , [ r5 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbx test byte ptr [ rdi + hexvar ] , hexvar jne hexvar mov rbx , rdi mov edi , hexvar call hexvar mov rdx , rax xor eax , eax test rdx , rdx je hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov qword ptr [ rdx ] , num mov qword ptr [ rdx + num ] , num or dword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num and eax , hexvar or eax , hexvar mov byte ptr [ rbx + hexvar ] , al mov eax , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lui v0 , hexvar and v0 , v1 , v0 beqz v0 , hexvar nop addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop addiu a1 , zero , hexvar move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) move a3 , zero move a2 , zero sw a3 , num ( v0 ) sw a2 , ( v0 ) lw v0 , hexvar ( fp ) sw zero , num ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) ext v0 , v0 , num , hexvar ori a0 , v0 , hexvar lw v1 , hexvar ( fp ) lw v0 , hexvar ( v1 ) ins v0 , a0 , num , hexvar sw v0 , hexvar ( v1 ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw a3 , hexvar ( v0 ) sw a2 , hexvar ( v0 ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( v1 ) addiu a0 , zero , num ins v0 , a0 , hexvar , num sw v0 , hexvar ( v1 ) lw v0 , hexvar ( fp ) sw a3 , hexvar ( v0 ) sw a2 , hexvar ( v0 ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test byte ptr [ esi + hexvar ] , hexvar jne hexvar sub esp , num push num push hexvar call hexvar mov edx , eax add esp , hexvar xor eax , eax test edx , edx je hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esi + num ] , edx mov dword ptr [ edx ] , num mov dword ptr [ edx + num ] , num mov dword ptr [ edx + num ] , num or dword ptr [ esi + hexvar ] , hexvar mov dword ptr [ esi + hexvar ] , eax movzx eax , byte ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num and eax , hexvar or eax , hexvar mov byte ptr [ esi + hexvar ] , al mov eax , num add esp , num pop ebx pop esi ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar mov r3 , r0 str r1 , [ fp , - hexvar ] strb r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r1 , r3 mov r0 , num bl hexvar mov r3 , r0 cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] cmp r3 , hexvar beq hexvar bl hexvar mov r3 , r0 ldr r4 , [ r3 ] ldr r2 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] mov r1 , r4 mov r0 , num bl hexvar ldrb r3 , [ fp , - hexvar ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , r0 ldr r2 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar mov r3 , r0 mov r2 , r4 mov r1 , num mov r0 , num bl hexvar ldrb r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] ldrh r2 , [ fp , - hexvar ] mov r1 , r2 ldrh r2 , [ fp , - hexvar ] mov r0 , r3 bl hexvar ldrb r3 , [ fp , - hexvar ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , num str r2 , [ r3 ] mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc } eorslo r0 , ip , hexvar andeq r0 , r0 , r0
push edi push esi mov esi , eax push ebx mov edi , edx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + num ] push eax push hexvar push num call hexvar add esp , hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ eax ] cmp eax , hexvar jne hexvar mov eax , esi test al , al je hexvar nop mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push r12 push rbp push rbx sub rsp , hexvar mov ebx , edi mov rbp , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov rdx , rsp mov esi , hexvar mov edi , num call hexvar test eax , eax je hexvar call hexvar mov r12 , rax cmp dword ptr [ rax ] , hexvar jne hexvar test bl , bl je hexvar mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi mov edi , edx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + num ] push eax push hexvar push num call hexvar add esp , hexvar test eax , eax je hexvar call hexvar cmp dword ptr [ eax ] , hexvar mov ebp , eax jne hexvar mov eax , esi test al , al je hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push rbx sub rsp , hexvar mov rax , rdx mov qword ptr [ rsp + num ] , rdx mov rbx , qword ptr [ rdi + hexvar ] cmp qword ptr [ rbx + num ] , num je hexvar mov r15 , rsi lea r14 , [ rsp + num ] nop word ptr cs : [ rax + rax ] nop mov esi , dword ptr [ rbx ] mov rdi , r15 call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] xor esi , esi mov rdx , r14 call hexvar cmp qword ptr [ rbx + hexvar ] , num lea rbx , [ rbx + hexvar ] jne hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rax , rdx mov qword ptr [ rsp + num ] , rdx mov rbx , qword ptr [ rdi + hexvar ] cmp qword ptr [ rbx + num ] , num je hexvar mov r15 , rsi lea r14 , [ rsp + num ] nop word ptr cs : [ rax + rax ] nop mov esi , dword ptr [ rbx ] mov rdi , r15 call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] xor esi , esi mov rdx , r14 call hexvar cmp qword ptr [ rbx + hexvar ] , num lea rbx , [ rbx + hexvar ] jne hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rax , rdx mov qword ptr [ rsp + num ] , rdx mov rbx , qword ptr [ rdi + hexvar ] cmp qword ptr [ rbx + num ] , num je hexvar mov r15 , rsi lea r14 , [ rsp + num ] nop word ptr cs : [ rax + rax ] nop mov esi , dword ptr [ rbx ] mov rdi , r15 call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] xor esi , esi mov rdx , r14 call hexvar cmp qword ptr [ rbx + hexvar ] , num lea rbx , [ rbx + hexvar ] jne hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rax , rdx mov qword ptr [ rsp + num ] , rdx mov rbx , qword ptr [ rdi + hexvar ] cmp qword ptr [ rbx + num ] , num je hexvar mov r15 , rsi lea r14 , [ rsp + num ] nop word ptr cs : [ rax + rax ] nop mov esi , dword ptr [ rbx ] mov rdi , r15 call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx + num ] xor esi , esi mov rdx , r14 call hexvar cmp qword ptr [ rbx + hexvar ] , num lea rbx , [ rbx + hexvar ] jne hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx pop r14 pop r15 ret
push rbx mov rbx , rdx sub rsp , hexvar mov rdx , qword ptr [ rdx + num ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rsi , qword ptr [ rax + hexvar ] test rsi , rsi je hexvar mov rax , rdx shr rax , num test rax , rax je hexvar mov rdi , qword ptr [ rdi + hexvar ] shl rax , num xor edx , edx add rsi , rax mov rcx , rsp mov rax , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] call qword ptr [ rax + hexvar ] test eax , eax je hexvar movzx eax , byte ptr [ rsp + hexvar ] and eax , hexvar cmp al , hexvar je hexvar mov rdx , qword ptr [ rbx + num ] movzx edx , dl cmp rdx , num je hexvar jbe hexvar cmp rdx , num mov eax , num je hexvar cmp rdx , hexvar mov eax , num jne hexvar nop mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push rbx mov rbx , rdx sub rsp , hexvar mov rdx , qword ptr [ rdx + num ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rsi , qword ptr [ rax + hexvar ] test rsi , rsi je hexvar mov rax , rdx shr rax , num test rax , rax je hexvar mov rdi , qword ptr [ rdi + hexvar ] shl rax , num xor edx , edx add rsi , rax mov rcx , rsp mov rax , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] call qword ptr [ rax + hexvar ] test eax , eax je hexvar movzx eax , byte ptr [ rsp + hexvar ] and eax , hexvar cmp al , hexvar je hexvar mov rdx , qword ptr [ rbx + num ] movzx edx , dl cmp rdx , num je hexvar jbe hexvar cmp rdx , num mov eax , num je hexvar cmp rdx , hexvar mov eax , num jne hexvar nop mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdx + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar xor eax , eax mov edx , eax mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov r8 , qword ptr [ rbp - hexvar ] shl r8 , num add rsi , r8 lea r8 , [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rcx , r8 mov r8 , qword ptr [ rbp - hexvar ] call r8
push rbx sub rsp , hexvar mov rbx , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rsi , qword ptr [ rdx + num ] shr rsi , num test rsi , rsi je hexvar mov rdi , qword ptr [ rdi + hexvar ] mov rcx , rsp shl rsi , num add rsi , rax mov rax , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , num call qword ptr [ rax + hexvar ] test eax , eax je hexvar movzx eax , byte ptr [ rsp + hexvar ] and eax , hexvar cmp al , hexvar je hexvar movzx edx , byte ptr [ rbx + num ] cmp rdx , num je hexvar cmp rdx , num jbe hexvar mov eax , num cmp rdx , num je hexvar mov eax , num cmp rdx , hexvar je hexvar mov eax , num jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov eax , num jmp hexvar mov eax , num cmp rdx , num jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov edi , eax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov ecx , num mov edi , eax call hexvar leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] imul rdx , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] test rdx , rdx sete al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sets dl mov rax , qword ptr [ rbp - hexvar ] test rax , rax sets sil xor dl , sil movzx edi , dl sub ecx , edi sete dl movzx edi , dl mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cqo idiv rcx mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx sete sil movzx edi , sil mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rax add rsp , hexvar pop rbp ret
sub rsp , num mov rcx , qword ptr [ rsi ] mov rsi , qword ptr [ rdx ] mov r8 , rcx imul r8 , rsi test rcx , rcx je hexvar test rsi , rsi je hexvar mov r9 , rcx mov rax , rsi mov rdx , r8 shr r9 , hexvar shr rax , hexvar shr rdx , hexvar xor eax , r9d cmp al , dl jne hexvar mov rax , r8 cqo idiv rcx cmp rsi , rax jne hexvar mov qword ptr [ rdi ] , r8 add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] imul rdx , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] test rdx , rdx sete al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sets dl mov rax , qword ptr [ rbp - hexvar ] test rax , rax sets sil xor dl , sil movzx edi , dl sub ecx , edi sete dl movzx edi , dl mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cqo idiv rcx mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx sete sil movzx edi , sil mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rax add rsp , hexvar pop rbp ret
sub rsp , num mov rcx , qword ptr [ rsi ] mov rsi , qword ptr [ rdx ] mov r8 , rcx imul r8 , rsi test rcx , rcx je hexvar test rsi , rsi je hexvar mov rdx , r8 shr rdx , hexvar mov r9 , rcx shr r9 , hexvar mov rax , rsi shr rax , hexvar xor eax , r9d cmp al , dl jne hexvar mov rax , r8 cqo idiv rcx cmp rsi , rax je hexvar mov edi , hexvar call hexvar mov qword ptr [ rdi ] , r8 add rsp , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sb zero , hexvar ( sp ) lui v0 , hexvar lw a2 , hexvar ( v0 ) addiu v0 , v0 , hexvar lw a1 , num ( v0 ) lw a0 , num ( v0 ) lw v1 , hexvar ( v0 ) sw a2 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a0 , hexvar ( sp ) sw v1 , hexvar ( sp ) lhu v1 , hexvar ( v0 ) sh v1 , hexvar ( sp ) lbu v0 , hexvar ( v0 ) sb v0 , hexvar ( sp ) addiu a2 , zero , hexvar move a1 , zero addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar lw t9 , hexvar ( v0 ) beqz t9 , hexvar addiu a3 , sp , hexvar addiu a2 , sp , hexvar move a1 , s0 addiu a0 , sp , hexvar jalr t9 nop lw gp , hexvar ( sp ) addiu v1 , zero , num bne v0 , v1 , hexvar move a2 , zero lb v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) move a1 , s0 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a3 , zero , hexvar lui a2 , hexvar addiu a2 , a2 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar jal hexvar nop lw gp , hexvar ( sp ) b hexvar move v0 , zero addiu a3 , zero , hexvar lui a2 , hexvar addiu a2 , a2 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar jal hexvar nop lw gp , hexvar ( sp ) addiu a1 , sp , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp )
push r14 push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , num mov byte ptr [ rsp + num ] , num movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rbx , rsi mov r14 , rdi lea rdi , [ rsp + hexvar ] lea rdx , [ rsp + num ] lea rcx , [ rsp + num ] call rax cmp eax , num jne hexvar mov rcx , qword ptr [ rsp + num ] movsx r8d , byte ptr [ rsp + num ] mov rdi , r14 mov rsi , rbx xor edx , edx call hexvar mov rbx , rax jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx lea rsi , [ rsp + hexvar ] mov edi , num xor eax , eax call hexvar mov rax , rbx add rsp , hexvar pop rbx pop r14 ret
push r14 push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , num mov byte ptr [ rsp + num ] , num movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rbx , rsi mov r14 , rdi lea rdi , [ rsp + hexvar ] lea rdx , [ rsp + num ] lea rcx , [ rsp + num ] call rax cmp eax , num jne hexvar mov rcx , qword ptr [ rsp + num ] movsx r8d , byte ptr [ rsp + num ] mov rdi , r14 mov rsi , rbx xor edx , edx call hexvar mov rbx , rax jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx lea rsi , [ rsp + hexvar ] mov edi , num xor eax , eax call hexvar mov rax , rbx add rsp , hexvar pop rbx pop r14 ret
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num strb r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] add ip , sp , hexvar mov lr , r3 ldm lr ! , { r0 , r1 , r2 , r3 } stm ip ! , { r0 , r1 , r2 , r3 } ldr r3 , [ lr ] strh r3 , [ ip ] add ip , ip , num lsr r3 , r3 , hexvar strb r3 , [ ip ] add r3 , sp , hexvar mov r2 , hexvar mov r1 , num mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , hexvar ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar b hexvar ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] add r3 , sp , hexvar add r2 , sp , hexvar add r0 , sp , hexvar ldr r1 , [ sp , hexvar ] blx r4 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar mov r3 , hexvar ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar add r3 , sp , hexvar mov r1 , r3 mov r0 , num bl hexvar b hexvar ldr r2 , [ sp , hexvar ] ldrb r3 , [ sp , hexvar ] str r3 , [ sp ] mov r3 , r2 ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { r4 , pc }
push { r4 , r5 , fp , lr } add fp , sp , hexvar bl hexvar mov r3 , r0 ldr r4 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r2 , r3 mov r1 , r4 mov r0 , num bl hexvar andeq sl , r3 , r8 , lsl r0
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push num push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar mov dword ptr [ esp ] , num call hexvar
push rbx lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov rbx , rax call hexvar mov esi , dword ptr [ rax ] xor edi , edi mov rdx , rbx xor eax , eax call hexvar mov edi , num call hexvar nop nop word ptr cs : [ rax + rax ]
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push num push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar mov dword ptr [ esp ] , num call hexvar
ldr r3 , [ pc , hexvar ] push { r4 , lr } ldr r1 , [ r3 ] mov r0 , hexvar bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r2 , [ pc , hexvar ] mov r1 , r0 mov r0 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] mov r1 , r0 ldr r2 , [ pc , hexvar ] mov r0 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar pop { r4 , lr } mov r1 , r0 ldr r2 , [ pc , hexvar ] mov r0 , num b hexvar andeq r7 , r2 , ip , asr r1 andeq r6 , r1 , r0 , lsr num strheq r6 , [ r1 ] , -r4 andeq r6 , r1 , ip , asr num strheq r5 , [ r1 ] , -r0 ldrdeq r5 , r6 , [ r1 ] , -r8
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push { r4 , lr } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r2 , [ pc , hexvar ] mov r1 , r0 mov r0 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] mov r1 , r0 ldr r2 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r1 , [ pc , hexvar ] mov r2 , num mov r0 , num bl hexvar pop { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r1 , [ r3 ] b hexvar andeq fp , r1 , r4 , asr num andeq fp , r1 , ip , asr r1 andeq fp , r1 , r4 , ror r1 strdeq sl , fp , [ r1 ] , -ip andeq sl , r1 , r4 , lsr num andeq fp , r1 , r8 , lsl num andeq ip , r2 , r4 , ror num
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a1 , hexvar addiu a2 , zero , num sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num addiu a2 , a2 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a3 , hexvar lw gp , hexvar ( sp ) lui a2 , hexvar addiu a3 , a3 , - hexvar addiu a2 , a2 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , zero addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a2 , zero , num lw gp , hexvar ( sp ) move a0 , v0 lw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw a1 , ( v0 ) jr t9 addiu sp , sp , hexvar
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ esp + hexvar ] , hexvar jbe hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] add eax , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , num jne hexvar cmp dword ptr [ esp + hexvar ] , hexvar ja hexvar mov eax , hexvar sub eax , dword ptr [ esp + hexvar ] lea edx , [ esp + hexvar ] lea ecx , [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] add edx , ecx sub esp , num push eax push num push edx call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num lea edx , [ esp + hexvar ] push edx push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , num setne al movzx eax , al mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
xor eax , eax cmp edx , hexvar ja hexvar push rbp push r15 push r14 push rbx sub rsp , hexvar mov ebp , edx mov r14 , rdi mov r15d , edx mov ebx , dword ptr [ rdi ] mov dword ptr [ rsp + num ] , ebx mov dword ptr [ rsp + hexvar ] , edx lea rdi , [ rsp + hexvar ] mov rdx , r15 call hexvar cmp ebp , hexvar ja hexvar cmp ebx , num jne hexvar lea rdi , [ rsp + r15 ] add rdi , hexvar mov edx , hexvar sub edx , ebp xor esi , esi call hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rsp + num ] call hexvar mov rbx , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax test rbx , rbx setne al add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
xor eax , eax cmp edx , hexvar ja hexvar push rbp push r15 push r14 push rbx sub rsp , hexvar mov ebp , edx mov r14 , rdi mov r15d , edx mov ebx , dword ptr [ rdi ] mov dword ptr [ rsp + num ] , ebx mov dword ptr [ rsp + hexvar ] , edx lea rdi , [ rsp + hexvar ] mov rdx , r15 call hexvar cmp ebp , hexvar ja hexvar cmp ebx , num jne hexvar lea rdi , [ rsp + r15 ] add rdi , hexvar mov edx , hexvar sub edx , ebp xor esi , esi call hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rsp + num ] call hexvar mov rbx , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax test rbx , rbx setne al add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
xor eax , eax cmp edx , hexvar ja hexvar push rbp push r15 push r14 push rbx sub rsp , hexvar mov ebp , edx mov r14 , rdi mov r15d , edx mov ebx , dword ptr [ rdi ] mov dword ptr [ rsp + num ] , ebx mov dword ptr [ rsp + hexvar ] , edx lea rdi , [ rsp + hexvar ] mov rdx , r15 call hexvar cmp ebp , hexvar ja hexvar cmp ebx , num jne hexvar lea rdi , [ rsp + r15 ] add rdi , hexvar mov edx , hexvar sub edx , ebp xor esi , esi call hexvar mov dword ptr [ rsp + hexvar ] , hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ rax + hexvar ] lea rsi , [ rsp + num ] call hexvar mov rbx , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax test rbx , rbx setne al add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi jne hexvar add esp , num pop ebx pop esi ret
push rbx mov rbx , rdi call hexvar test rbx , rbx je hexvar test rax , rax je hexvar pop rbx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov dword ptr [ rsi ] , eax mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] shl eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rcx ] mov dword ptr [ rcx ] , eax mov rcx , qword ptr [ rbp - num ] mov rdx , rcx add rdx , num mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rcx ] shl eax , num mov rcx , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rcx ] mov dword ptr [ rcx ] , eax mov rcx , qword ptr [ rbp - num ] mov rdx , rcx add rdx , num mov qword ptr [ rbp - num ] , rdx movzx eax , byte ptr [ rcx ] mov rcx , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , ecx mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov dword ptr [ rsi ] , eax mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , hexvar mov rsi , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rsi ] mov dword ptr [ rsi ] , eax mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , num mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rsi ] mov edx , ecx xor edx , hexvar mov r8d , eax xor r8d , hexvar mov r9d , hexvar xor r9d , hexvar mov r10d , edx and r10d , hexvar and ecx , r9d mov r11d , r8d and r11d , hexvar and eax , r9d or r10d , ecx or r11d , eax xor r10d , r11d or edx , r8d xor edx , hexvar or r9d , hexvar and edx , r9d or r10d , edx mov dword ptr [ rsi ] , r10d mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rsi ] mov edx , ecx and edx , eax xor ecx , eax or edx , ecx mov dword ptr [ rsi ] , edx mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov dword ptr [ rsi ] , eax mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , hexvar mov rsi , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rsi ] mov dword ptr [ rsi ] , eax mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , num mov rsi , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rsi ] mov dword ptr [ rsi ] , eax mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rsi ] mov dword ptr [ rsi ] , eax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov dword ptr [ rsi ] , eax mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , hexvar mov rsi , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rsi ] mov dword ptr [ rsi ] , eax mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] shl eax , num mov rsi , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rsi ] mov dword ptr [ rsi ] , eax mov rsi , qword ptr [ rbp - num ] mov rdi , rsi add rdi , num mov qword ptr [ rbp - num ] , rdi movzx eax , byte ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] or eax , dword ptr [ rsi ] mov dword ptr [ rsi ] , eax mov rax , qword ptr [ rbp - num ] pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar test edi , edi je hexvar cmp dword ptr [ edi ] , num je hexvar sub esp , num mov eax , dword ptr [ esi ] push dword ptr [ edi ] push esi call dword ptr [ eax + hexvar ] mov esi , eax add esp , hexvar test eax , eax jle hexvar mov eax , esi pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar test edi , edi je hexvar mov eax , dword ptr [ edi ] test eax , eax je hexvar sub esp , num mov edx , dword ptr [ esi ] push eax push esi call dword ptr [ edx + hexvar ] mov esi , eax add esp , hexvar test eax , eax jle hexvar mov eax , esi pop ebx pop esi pop edi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp eax , num je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar call hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] sub esp , num push edx push dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jg hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push rbp push r14 push rbx test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov r14 , rsi mov ebp , hexvar test rsi , rsi je hexvar mov rsi , qword ptr [ r14 ] test rsi , rsi jne hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov rsi , rax mov rax , qword ptr [ rbx ] mov rcx , qword ptr [ rax + hexvar ] mov rdi , rbx call rcx mov ebp , eax test eax , eax jg hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , num jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ebp , hexvar mov eax , ebp pop rbx pop r14 pop rbp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r5 , r0 mov r0 , r1 bl hexvar adds r3 , r4 , num movne r3 , num cmp r0 , num movne r3 , num cmp r3 , num bne hexvar mov r2 , r4 mov r1 , r5 pop { r4 , r5 , r6 , lr } b hexvar bl hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] add rcx , rdx mov rdx , rax mov esi , num mov rdi , rcx call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar cmp esi , edi mov ebp , eax jbe hexvar lea eax , [ eax + edi ] sub esp , num sub esi , edi push esi push num push eax call hexvar add esp , hexvar sub esp , num push edi push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push esi push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar pop ebx pop esi ret
push r15 push r14 mov r15 , rsi push r13 push r12 push rbp push rbx mov rbp , rdi sub rsp , hexvar mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp + num ] , rdx mov rax , qword ptr [ rdi ] mov rbx , qword ptr [ rdi + num ] mov r14d , dword ptr [ rdi + hexvar ] mov r13d , dword ptr [ rdi + hexvar ] mov qword ptr [ rbp + hexvar ] , rax call hexvar mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar sub rsp , num lea rcx , [ rip + hexvar ] mov r9 , r15 mov rdx , qword ptr [ rsp + hexvar ] mov r8 , rbx mov esi , num mov r12 , rax mov rdi , rax xor eax , eax push rdx mov rdx , - num call hexvar mov rdi , rbx call hexvar mov edi , hexvar call hexvar mov rdi , r12 mov rbx , rax call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov rdi , r12 mov dword ptr [ rbx + hexvar ] , r14d mov dword ptr [ rbx + hexvar ] , r13d mov qword ptr [ rbp + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num call hexvar add rsp , hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 mov r15 , rsi push r13 push r12 push rbp push rbx lea rbx , [ rdi + hexvar ] sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov rdi , rbx mov qword ptr [ rsp + num ] , rdx mov r12d , dword ptr [ rax + hexvar ] mov r13d , dword ptr [ rax + hexvar ] call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdi , [ rax + hexvar ] call hexvar sub rsp , num lea rcx , [ rip + hexvar ] mov r9 , r15 mov rdx , qword ptr [ rsp + hexvar ] mov r8 , rbp mov esi , num mov rdi , rax mov r14 , rax xor eax , eax push rdx mov rdx , - num call hexvar mov rdi , rbp call hexvar xor edx , edx mov ecx , r12d mov r8d , r13d mov rsi , r14 mov rdi , rbx call hexvar test eax , eax pop rdx pop rcx je hexvar mov rdi , r14 call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r5 , r0 ldr r0 , [ r0 , hexvar ] sub sp , sp , hexvar ldr r3 , [ r0 ] ldr r4 , [ r0 , num ] ldr r8 , [ r0 , hexvar ] ldr r7 , [ r0 , hexvar ] str r3 , [ r5 , hexvar ] mov sb , r1 mov sl , r2 bl hexvar mov r0 , r4 bl hexvar add r0 , r0 , hexvar bl hexvar mov r1 , num ldr r3 , [ pc , hexvar ] mvn r2 , num stm sp , { r4 , sb , sl } mov r6 , r0 bl hexvar mov r0 , r4 bl hexvar mov r0 , hexvar bl hexvar mov r4 , r0 mov r0 , r6 bl hexvar mov r3 , num ldr r2 , [ r5 , hexvar ] str r0 , [ r4 , num ] str r4 , [ r5 , hexvar ] mov r0 , r6 str r8 , [ r4 , hexvar ] str r7 , [ r4 , hexvar ] str r2 , [ r4 ] str r3 , [ r4 , num ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] bl hexvar mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
lw v0 , hexvar ( a0 ) lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v1 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a1 , hexvar addiu a2 , zero , num sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero move a1 , zero lw gp , hexvar ( sp ) addiu a0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jr t9 move a2 , v0
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar jmp hexvar nop word ptr cs : [ eax + eax ] nop dword ptr [ eax + eax ]
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar lea esi , [ esi ]
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) jal hexvar sw a1 , hexvar ( sp ) move a0 , s0 lw a1 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] mov eax , ebx call hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebx call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push esi push ebx sub esp , num mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov eax , esi call hexvar mov eax , dword ptr [ esi ] mov edx , dword ptr [ esi + num ] bswap eax bswap edx mov dword ptr [ ebx ] , edx mov dword ptr [ ebx + num ] , eax mov eax , dword ptr [ esi + num ] mov edx , dword ptr [ esi + hexvar ] bswap eax bswap edx mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] bswap eax bswap edx mov dword ptr [ ebx + hexvar ] , edx mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] bswap eax bswap edx mov dword ptr [ ebx + hexvar ] , edx mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] bswap eax bswap edx mov dword ptr [ ebx + hexvar ] , edx mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] bswap eax bswap edx mov dword ptr [ ebx + hexvar ] , eax mov dword ptr [ ebx + hexvar ] , edx add esp , num mov eax , ebx pop ebx pop esi ret
push r15 push r14 push rbx mov rbx , rsi mov r15 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , rbx call hexvar cmp dword ptr [ r15 + hexvar ] , num je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] mov rax , qword ptr [ r15 ] mov rax , qword ptr [ rax + rbx * num ] mov ecx , num test rax , rax je hexvar xor ecx , ecx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] add ecx , num mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov esi , hexvar mov rdi , r14 mov edx , ebx xor eax , eax call hexvar add rbx , num mov eax , dword ptr [ r15 + hexvar ] cmp rbx , rax jb hexvar mov rdi , r14 pop rbx pop r14 pop r15 jmp hexvar pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s1 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s0 move a0 , v0 bal - hexvar move s1 , v0 lw v0 , hexvar ( s3 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi call hexvar mov rdi , rax call hexvar mov qword ptr [ rsp + num ] , rax mov eax , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] xor r12d , r12d mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar mov r15 , qword ptr [ rsp + num ] mov eax , hexvar jmp hexvar mov rbp , qword ptr [ rax ] mov eax , hexvar nop word ptr cs : [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov r13d , dword ptr [ rsp + num ] add r13d , num mov rax , qword ptr [ rsp + hexvar ] add rax , num jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov dword ptr [ rsp + num ] , r13d mov qword ptr [ rsp + hexvar ] , rbp cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov dword ptr [ rsp ] , r12d mov eax , dword ptr [ rsp ] cmp eax , dword ptr [ rbx + hexvar ] mov eax , hexvar mov ecx , hexvar cmovb eax , ecx jmp hexvar mov rax , qword ptr [ rbx ] mov ecx , dword ptr [ rsp ] lea rax , [ rax + rcx * num ] xor r13d , r13d jmp hexvar mov edx , dword ptr [ rsp ] mov ecx , dword ptr [ rsp + num ] mov esi , hexvar mov rdi , r15 xor eax , eax call hexvar mov r12d , dword ptr [ rsp ] add r12d , num mov eax , hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push r15 push r14 push rbx mov rbx , rsi mov r15 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , rbx call hexvar cmp dword ptr [ r15 + hexvar ] , num je hexvar xor ebx , ebx nop dword ptr [ rax + rax ] mov rax , qword ptr [ r15 ] mov rax , qword ptr [ rax + rbx * num ] mov ecx , num test rax , rax je hexvar xor ecx , ecx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] add ecx , num mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov esi , hexvar mov rdi , r14 mov edx , ebx xor eax , eax call hexvar add rbx , num mov eax , dword ptr [ r15 + hexvar ] cmp rbx , rax jb hexvar mov rdi , r14 pop rbx pop r14 pop r15 jmp hexvar pop rbx pop r14 pop r15 ret
ldr ip , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] ldr ip , [ ip ] push { r4 , lr } cmp ip , r3 mov ip , num beq hexvar ldrb r3 , [ r0 , num ] ldrb r4 , [ r0 , num ] ldrb lr , [ r0 , num ] orr r3 , r3 , r4 , lsl num orr r3 , r3 , lr , lsl num ldrb lr , [ r0 , num ] str ip , [ r1 , num ] orr r3 , r3 , lr , lsl num str r3 , [ r1 ] ldrb r1 , [ r0 , num ] ldrb r3 , [ r0 ] ldrb lr , [ r0 , num ] orr r3 , r3 , r1 , lsl num ldrb r1 , [ r0 , num ] orr r3 , r3 , lr , lsl num orr r3 , r3 , r1 , lsl num stm r2 , { r3 , ip } pop { r4 , pc }
lea rax , [ rip - hexvar ] cmp qword ptr [ rip + hexvar ] , rax je hexvar mov eax , dword ptr [ rdi + num ] mov qword ptr [ rsi ] , rax mov eax , dword ptr [ rdi ] mov qword ptr [ rdx ] , rax ret
lui gp , hexvar lui v0 , hexvar addiu gp , gp , hexvar addiu v0 , v0 , hexvar lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) beq v1 , v0 , hexvar nop lwl v0 , num ( a0 ) lwr v0 , num ( a0 ) sw zero , ( a1 )
lui gp , hexvar lui v0 , hexvar addiu gp , gp , - hexvar addiu sp , sp , - hexvar addiu v0 , v0 , hexvar lw v1 , - hexvar ( gp ) sw s3 , hexvar ( sp ) addiu s3 , a0 , num sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( v1 ) beq v1 , v0 , hexvar move s1 , a2 addiu a1 , zero , num move s0 , a0 jal hexvar move a0 , s3 addiu a1 , zero , num move a0 , s0 sw v1 , num ( s2 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] and eax , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] and eax , num add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] and r3 , r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] and eax , num add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( a0 )
push r14 push rbx push rax mov r14 , rdi mov rdi , qword ptr [ rdi ] call hexvar mov rbx , rax mov rdi , qword ptr [ r14 + num ] call hexvar shl rbx , num xor rbx , rax mov rax , rbx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rdi mov rdi , qword ptr [ rdi ] call hexvar mov rbx , rax shl rbx , num mov rdi , qword ptr [ r14 + num ] call hexvar xor rax , rbx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rdi mov rdi , qword ptr [ rdi ] call hexvar mov rbx , rax shl rbx , num mov rdi , qword ptr [ r14 + num ] call hexvar xor rax , rbx add rsp , num pop rbx pop r14 ret
add r3 , r1 , num ldm r3 , { r2 , r3 } push { r4 , r5 , r6 , lr } add r5 , r0 , num ldm r5 , { r4 , r5 } cmp r5 , r3 cmpeq r4 , r2 beq hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi + num ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl movzx edi , dl mov edi , dword ptr [ edi * num + hexvar ] xor ebx , ebx mov dl , bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov byte ptr [ ebp - hexvar ] , dl jmp edi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] xor eax , edx xor ecx , esi or ecx , eax sete bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] xor edx , edx mov bl , dl mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl jmp eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp ecx mov al , byte ptr [ ebp - hexvar ] xor ecx , ecx test al , num mov edx , num cmovne ecx , edx cmp ecx , num setne al and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v1 , num ( a0 )
add r3 , r1 , num ldm r3 , { r2 , r3 } push { r4 , r5 , r6 , lr } add r5 , r0 , num ldm r5 , { r4 , r5 } cmp r5 , r3 cmpeq r4 , r2 beq hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx sar eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + hexvar ] cdq push num push dword ptr [ ebp + hexvar ] lea ebx , [ ecx - hexvar ] push ebx push num push hexvar push edx push eax push dword ptr [ ebp + num ] mov ebx , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx sar eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx sar eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu v1 , a0 , hexvar sltu v0 , v1 , a0 bnez v0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v1 beqz v0 , hexvar move a0 , v0 addiu v1 , v0 , num addiu v0 , zero , - hexvar and v1 , v1 , v0 addiu v0 , v1 , num subu a0 , v0 , a0 sb a0 , num ( v1 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero jr ra addiu sp , sp , hexvar jr ra move v0 , zero
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] add eax , num jb hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar lea ecx , [ eax + num ] mov dword ptr [ eax + num ] , hexvar mov edx , hexvar mov eax , ecx mul edx shr edx , num mov eax , edx shl eax , num add edx , eax mov eax , ecx sub eax , edx mov edx , eax lea eax , [ ebx + hexvar ] mov ebx , dword ptr [ eax + edx * num ] mov dword ptr [ eax + edx * num ] , ecx mov eax , ecx mov dword ptr [ esi ] , ebx add esp , num pop ebx pop esi ret
mov rdx , rdi lea rdi , [ rdi + hexvar ] mov eax , num cmp rdx , rdi ja hexvar sub rsp , num call hexvar mov rsi , rax test rax , rax je hexvar lea rcx , [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , hexvar movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num mov rax , rdx shl rax , num add rdx , rax mov rax , rcx sub rax , rdx mov rdx , rax mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rsi ] , rax mov qword ptr [ rdx * num + hexvar ] , rcx mov rax , rcx jmp hexvar mov eax , num add rsp , num ret
mov rdx , rdi lea rdi , [ rdi + hexvar ] mov eax , num cmp rdx , rdi ja hexvar sub rsp , num call hexvar test rax , rax je hexvar lea rdx , [ rax + hexvar ] and rdx , hexvar add rdx , hexvar mov rcx , rdx sub rcx , rax mov byte ptr [ rdx - num ] , cl mov rax , rdx jmp hexvar mov eax , num add rsp , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ hexvar ] mov ebx , dword ptr [ hexvar ] xor edx , ebx xor esi , edi or esi , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi jne hexvar jmp hexvar call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] add ecx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jg hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ eax + num ] movsd qword ptr [ hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r2 , r3 , hexvar ldm r2 , { r1 , r2 } ldr r3 , [ pc , hexvar ] ldm r3 , { r3 , r4 } cmp r2 , r4 cmpeq r1 , r3 bne hexvar bl hexvar mov r2 , r0 mov r3 , hexvar str r3 , [ r2 ] mov r3 , num b hexvar bl hexvar mov r2 , r0 mov r3 , num str r3 , [ r2 ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , hexvar mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bgt hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] add r4 , r3 , hexvar ldm r4 , { r3 , r4 } ldr r2 , [ pc , hexvar ] stm r2 , { r3 , r4 } ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ecx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov esi , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ ebx + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , esi mov eax , ecx mov ecx , dword ptr [ ebp - hexvar ] xor ecx , edi mov edx , ecx or eax , edx test eax , eax jne hexvar call hexvar mov dword ptr [ eax ] , hexvar mov eax , num jmp hexvar call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + hexvar ] add eax , hexvar sub esp , num push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jg hexvar call hexvar mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar test al , al je hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebx + hexvar ] , eax mov dword ptr [ ebx + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] cmp rsi , qword ptr [ hexvar ] jne hexvar call hexvar mov dword ptr [ rax ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar call hexvar mov dword ptr [ rax ] , num mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jg hexvar call hexvar mov edi , dword ptr [ rax ] call hexvar test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add eax , hexvar mov esi , dword ptr [ esp + hexvar ] lea edi , [ eax - hexvar ] lea ebx , [ eax - hexvar ] test ebx , ebx je hexvar sub esp , num push esi push ebx call dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar mov ebx , dword ptr [ ebx + hexvar ] test ebx , ebx jne hexvar add edi , num mov ebx , dword ptr [ edi ] test ebx , ebx jne hexvar mov ebx , num mov eax , ebx pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop beqz v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) bnez v0 , hexvar nop move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r12 lea r12 , [ rip + hexvar ] push rbp push rbx lea rbx , [ rip + hexvar ] mov rbp , rdi nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call qword ptr [ rbx + hexvar ] test eax , eax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add r12 , num mov rax , qword ptr [ r12 ] test rax , rax je hexvar mov rbx , rax mov rsi , rbp mov rdi , rbx call qword ptr [ rbx + hexvar ] test eax , eax je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push r12 lea r12 , [ rip + hexvar ] push rbp push rbx lea rbx , [ rip + hexvar ] mov rbp , rdi nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call qword ptr [ rbx + hexvar ] test eax , eax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add r12 , num mov rax , qword ptr [ r12 ] test rax , rax je hexvar mov rbx , rax mov rsi , rbp mov rdi , rbx call qword ptr [ rbx + hexvar ] test eax , eax je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx ] , - num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + hexvar ] je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop ebp ret
push ebp push edi mov ebp , eax push esi push ebx mov edi , edx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ eax ] cmp esi , - num je hexvar cmp esi , edx je hexvar lea eax , [ ebx - hexvar ] sub esp , num add esi , num push num push eax push num call hexvar lea edx , [ edi + num ] mov dword ptr [ esp ] , edx push esi push eax push num push num call hexvar add esp , hexvar mov dword ptr [ ebp ] , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push edi push esi push ebx mov edi , dword ptr [ eax ] call hexvar add ebx , hexvar cmp edi , - num je hexvar cmp edi , edx jne hexvar mov dword ptr [ eax ] , edx pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi ] sub rsi , - num setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi jmp rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setne dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax movabs rdi , hexvar call hexvar xor esi , esi mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov edi , num mov rdx , rax mov al , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rax add rsp , hexvar pop rbp ret
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov r8 , rdx mov rcx , rsi mov rdx , rdi sub rsp , num mov edi , hexvar mov esi , hexvar push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
addiu sp , sp , - hexvar lui gp , hexvar lw v0 , hexvar ( sp ) addiu gp , gp , hexvar sw a3 , hexvar ( sp ) move a3 , a1 lui a1 , hexvar sw a2 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a2 , a0 lw v0 , hexvar ( sp ) addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ eax ] push dword ptr [ eax + num ] push dword ptr [ eax + num ] push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a3 , ( a0 ) lw a2 , num ( a0 ) lw v0 , num ( a0 ) sw a1 , hexvar ( sp ) move a1 , v0 lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar move v0 , a0 addiu gp , gp , hexvar addiu sp , sp , - hexvar lw a3 , ( v0 )
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx + num ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] sub esp , hexvar push dword ptr [ esp + hexvar ] push ebx push ecx push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp push r15 push r14 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx xor eax , eax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , r8 mov r9 , qword ptr [ rbp - hexvar ] mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ r9 ] , r10 mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r11 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ r11 ] mov rbx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbx ] mov r9 , qword ptr [ rbp - hexvar ] mov r14 , qword ptr [ rbp - hexvar ] mov r15 , qword ptr [ r14 ] sub rsp , hexvar mov qword ptr [ rsp ] , r15 mov dword ptr [ rsp + num ] , num mov dword ptr [ rbp - hexvar ] , eax call hexvar lea rsp , [ rbp - hexvar ] pop rbx pop r14 pop r15 pop rbp ret
push ebx mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx pop ebx jmp hexvar lea esi , [ esi ] lea edi , [ edi ]
push ebx mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx pop ebx jmp hexvar lea esi , [ esi ] lea edi , [ edi ]
push ebx mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx pop ebx jmp hexvar lea esi , [ esi ] lea edi , [ edi ]
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edx , edi or edx , esi jne hexvar mov esi , dword ptr [ ebx + hexvar ] test esi , esi jne hexvar mov dword ptr [ esp + num ] , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , dword ptr [ esp + num ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov edx , dword ptr [ edi + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ edi + hexvar ] mov dword ptr [ esp + hexvar ] , edx or edx , eax mov dword ptr [ esp + num ] , eax jne hexvar mov ebx , dword ptr [ edi + hexvar ] test ebx , ebx jne hexvar mov esi , num mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , qword ptr [ rip + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test r12 , r12 jne hexvar mov ebx , dword ptr [ rip + hexvar ] test ebx , ebx jne hexvar mov ebp , num mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] mov eax , ebp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , qword ptr [ rip + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test r12 , r12 jne hexvar mov ebx , dword ptr [ rip + hexvar ] test ebx , ebx jne hexvar mov ebp , num mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] mov eax , ebp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , num ] bl hexvar add sp , sp , hexvar pop { pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , num ] bl hexvar add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov rax , rdi add rdi , hexvar cmp rax , rdi ja hexvar sub rsp , num call hexvar test rax , rax mov rsi , rax je hexvar lea rcx , [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , hexvar movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num mov rax , rdx shl rax , num add rdx , rax mov rax , rcx sub rax , rdx mov rdx , rax mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rdx * num + hexvar ] , rcx mov qword ptr [ rsi ] , rax mov rax , rcx add rsp , num ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] cmp ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jb hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , hexvar mov eax , dword ptr [ ebp - hexvar ] xor edx , edx mov ecx , hexvar div ecx mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx * num + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx * num + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp - num ] cmp ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jb hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , hexvar mov eax , dword ptr [ ebp - hexvar ] xor edx , edx mov ecx , hexvar div ecx mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx * num + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx * num + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
mov rdx , rdi lea rdi , [ rdi + hexvar ] mov eax , num cmp rdx , rdi ja hexvar sub rsp , num call hexvar mov rsi , rax test rax , rax je hexvar lea rcx , [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , hexvar movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num mov rax , rdx shl rax , num add rdx , rax mov rax , rcx sub rax , rdx mov rdx , rax mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rsi ] , rax mov qword ptr [ rdx * num + hexvar ] , rcx mov rax , rcx jmp hexvar mov eax , num add rsp , num ret
push ebp push edi mov edi , ecx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ecx + hexvar ] mov ebp , edx call hexvar test eax , eax jne hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ ecx + hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , ecx mov eax , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ edi + hexvar ] mov dword ptr [ esi + hexvar ] , ebp mov dword ptr [ esi + hexvar ] , eax movzx eax , byte ptr [ edi + hexvar ] mov ecx , dword ptr [ edx + hexvar ] shr al , num and eax , num test eax , eax mov dword ptr [ esi + hexvar ] , eax je hexvar movzx eax , byte ptr [ ecx + num ] xor edx , edx mov dword ptr [ esp + hexvar ] , ecx push edx push eax push dword ptr [ edi + hexvar ] push dword ptr [ edi + hexvar ] call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor edx , edx mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + hexvar ] , eax mov edx , hexvar cmp byte ptr [ ecx + hexvar ] , hexvar mov ecx , num cmove edx , ecx mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ edi + hexvar ] test edx , edx mov dword ptr [ esi + hexvar ] , edx je hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num xor eax , eax mov dword ptr [ esi + num ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rcx , rax call hexvar test eax , eax setne r8b movzx eax , r8b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] push dword ptr [ ebp + hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , num leave ret
push { r4 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldrb r3 , [ r0 , hexvar ] tst r3 , hexvar beq hexvar ldr r0 , [ r0 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test byte ptr [ rdi + hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rsi , rsp call qword ptr [ rax + hexvar ] mov edx , eax mov eax , num test edx , edx jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test byte ptr [ rdi + hexvar ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lhu v0 , hexvar ( a0 )
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r2 , [ r0 ] mov lr , r0 ldrb r1 , [ r2 ] cmp r1 , hexvar beq hexvar sub r1 , r1 , hexvar and r3 , r1 , hexvar cmp r3 , num bhi hexvar mov r7 , num mov r0 , num mvn r8 , hexvar ldr r6 , [ pc , hexvar ] b hexvar mov r1 , r3 sub r3 , r8 , r3 umull r4 , r5 , r3 , r6 cmp r0 , r5 , lsr num bgt hexvar add r2 , r2 , num str r2 , [ lr ] ldrb r3 , [ r2 ] add r0 , r0 , r0 , lsl num sub r3 , r3 , hexvar and ip , r3 , hexvar cmp ip , num add r0 , r1 , r0 , lsl num bls hexvar cmp r7 , num rsbne r0 , r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi mov edi , eax push esi push ebx sub esp , num mov ebx , dword ptr [ eax ] movsx ecx , byte ptr [ ebx ] cmp cl , hexvar je hexvar lea eax , [ ecx - hexvar ] cmp al , num ja hexvar mov dword ptr [ esp ] , num sub ecx , hexvar add ebx , num xor esi , esi mov ebp , hexvar jmp hexvar lea esi , [ esi ] sub ecx , hexvar mov edx , ebp mov eax , hexvar sub edx , ecx add ebx , num mul edx shr edx , num cmp edx , esi jl hexvar lea eax , [ esi + esi * num ] mov dword ptr [ edi ] , ebx lea esi , [ ecx + eax * num ] movsx ecx , byte ptr [ ebx ] lea eax , [ ecx - hexvar ] cmp al , num jbe hexvar mov edx , dword ptr [ esp ] mov eax , esi neg eax test edx , edx cmovne esi , eax add esp , num mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov edi , eax push esi push ebx sub esp , num mov ebx , dword ptr [ eax ] movsx ecx , byte ptr [ ebx ] cmp cl , hexvar je hexvar lea eax , [ ecx - hexvar ] cmp al , num ja hexvar mov dword ptr [ esp ] , num sub ecx , hexvar add ebx , num xor esi , esi mov ebp , hexvar jmp hexvar lea esi , [ esi ] sub ecx , hexvar mov edx , ebp mov eax , hexvar sub edx , ecx add ebx , num mul edx shr edx , num cmp edx , esi jl hexvar lea eax , [ esi + esi * num ] mov dword ptr [ edi ] , ebx lea esi , [ ecx + eax * num ] movsx ecx , byte ptr [ ebx ] lea eax , [ ecx - hexvar ] cmp al , num jbe hexvar mov edx , dword ptr [ esp ] mov eax , esi neg eax test edx , edx cmovne esi , eax add esp , num mov eax , esi pop ebx pop esi pop edi pop ebp ret
mov rsi , qword ptr [ rdi ] movsx ecx , byte ptr [ rsi ] cmp cl , hexvar je hexvar lea eax , [ rcx - hexvar ] cmp al , num ja hexvar xor r9d , r9d sub ecx , hexvar add rsi , num xor r8d , r8d mov r11d , hexvar mov r10d , hexvar jmp hexvar nop dword ptr [ rax ] sub ecx , hexvar mov edx , r11d add rsi , num sub edx , ecx mov eax , edx mul r10d shr edx , num cmp edx , r8d jl hexvar lea eax , [ r8 + r8 * num ] mov qword ptr [ rdi ] , rsi lea r8d , [ rcx + rax * num ] movsx ecx , byte ptr [ rsi ] lea eax , [ rcx - hexvar ] cmp al , num jbe hexvar mov eax , r8d neg eax test r9d , r9d cmovne r8d , eax mov eax , r8d ret
cmp r0 , num bxeq lr push { r4 , lr } sub sp , sp , hexvar mov r4 , r1 bl hexvar mov r2 , num mov r3 , num str r4 , [ sp , num ] stm sp , { r2 , r3 } bl hexvar add sp , sp , hexvar pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) move s0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw s0 , hexvar ( sp ) move a1 , zero move a0 , zero sw a1 , hexvar ( sp ) sw a0 , hexvar ( sp ) move a3 , zero move a2 , zero move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r1 , r0 ldr r3 , [ fp , - hexvar ] str r3 , [ sp , num ] mov r3 , num mov r4 , num stm sp , { r3 , r4 } mov r2 , num mov r3 , num mov r0 , r1 bl hexvar mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
test rdi , rdi je hexvar push rbx mov ebx , esi call hexvar mov ecx , ebx xor edx , edx xor esi , esi pop rbx mov edi , eax jmp hexvar nop dword ptr [ rax + rax ] ret nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ]
push { r4 , lr } ldrb r3 , [ r0 , hexvar ] tst r3 , hexvar bne hexvar mov r4 , r0 mov r0 , num bl hexvar cmp r0 , num beq hexvar str r0 , [ r4 , num ] mov r3 , num str r3 , [ r0 ] str r3 , [ r0 , num ] ldr r3 , [ r4 , hexvar ] orr r3 , r3 , hexvar str r3 , [ r4 , hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ r4 , hexvar ] mov r0 , num mov r1 , num str r0 , [ r4 , hexvar ] str r1 , [ r4 , hexvar ] ldrb r3 , [ r4 , hexvar ] bic r3 , r3 , num orr r3 , r3 , hexvar strb r3 , [ r4 , hexvar ] str r0 , [ r4 , hexvar ] str r1 , [ r4 , hexvar ] mov r0 , num pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , lr } ldrb r3 , [ r0 , hexvar ] tst r3 , hexvar bne hexvar mov r4 , r0 mov r0 , num bl hexvar cmp r0 , num beq hexvar str r0 , [ r4 , num ] mov r3 , num str r3 , [ r0 ] str r3 , [ r0 , num ] ldr r3 , [ r4 , hexvar ] orr r3 , r3 , hexvar str r3 , [ r4 , hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ r4 , hexvar ] mov r0 , num mov r1 , num str r0 , [ r4 , hexvar ] str r1 , [ r4 , hexvar ] ldrb r3 , [ r4 , hexvar ] bic r3 , r3 , num orr r3 , r3 , hexvar strb r3 , [ r4 , hexvar ] str r0 , [ r4 , hexvar ] str r1 , [ r4 , hexvar ] mov r0 , num pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test byte ptr [ esi + hexvar ] , hexvar jne hexvar sub esp , num push num push hexvar call hexvar mov edx , eax add esp , hexvar xor eax , eax test edx , edx je hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esi + num ] , edx mov dword ptr [ edx ] , num mov dword ptr [ edx + num ] , num mov dword ptr [ edx + num ] , num or dword ptr [ esi + hexvar ] , hexvar mov dword ptr [ esi + hexvar ] , eax movzx eax , byte ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num and eax , hexvar or eax , hexvar mov byte ptr [ esi + hexvar ] , al mov eax , num add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp ecx , hexvar mov dword ptr [ ebp - num ] , eax jge hexvar mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num add esp , num pop ebp ret
lui v0 , hexvar lw v1 , hexvar ( v0 ) lui v0 , hexvar ori v0 , v0 , hexvar beq v1 , v0 , hexvar lui v1 , hexvar lw v0 , hexvar ( v1 ) addiu v0 , v0 , num sw v0 , hexvar ( v1 ) lui v0 , hexvar addiu v1 , zero , num sw v1 , hexvar ( v0 ) jr ra nop
lui v0 , hexvar lw v1 , hexvar ( v0 ) lui v0 , hexvar ori v0 , v0 , hexvar beq v1 , v0 , hexvar lui v1 , hexvar lw v0 , hexvar ( v1 ) addiu v0 , v0 , num sw v0 , hexvar ( v1 ) lui v0 , hexvar addiu v1 , zero , num sw v1 , hexvar ( v0 ) jr ra nop
call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] cmp edx , hexvar je hexvar mov edx , dword ptr [ eax + hexvar ] add edx , num mov dword ptr [ eax + hexvar ] , edx mov dword ptr [ eax + hexvar ] , num ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , - hexvar ( s0 ) beqz v0 , hexvar move s1 , a0 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , zero , num beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move a2 , zero lw a0 , - hexvar ( s0 ) move a1 , v0 lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw s1 , ( v0 ) lw s1 , hexvar ( sp ) b hexvar addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , - hexvar ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar move s0 , a0 addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a2 , zero sw s0 , ( v0 ) move a1 , v0 lui v0 , hexvar lw a0 , - hexvar ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lui v1 , hexvar beqz v0 , hexvar sw v0 , - hexvar ( v1 ) b hexvar addiu a2 , zero , hexvar
push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx sub esp , num push num push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar lea eax , [ ebx - hexvar ] sub esp , num push hexvar push eax push num call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] sub esp , num mov dword ptr [ eax ] , edx push num push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sltu s2 , a3 , a1 move s0 , a1 sw s1 , hexvar ( sp ) move a1 , a2 sw ra , hexvar ( sp ) move a2 , a3 sw gp , hexvar ( sp ) movz a2 , s0 , s2 lw t9 , - hexvar ( gp ) jalr t9 move s1 , a3 bnez v0 , hexvar sltu s0 , s0 , s1 addiu v0 , zero , - num movz v0 , s2 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] sub rcx , rdx setbe al movzx r8d , al mov edx , r8d mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rcx jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax sete cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx seta dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , num mov eax , esi cmp edi , esi cmovbe eax , edi push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar cmp edi , esi jb hexvar seta al movzx eax , al pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - hexvar ] , rax cmovbe rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rcx ] mov esi , hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax cmp qword ptr [ rcx ] , num setne r8b mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx ] mov qword ptr [ rsi + hexvar ] , rcx mov rcx , qword ptr [ rax ] mov dword ptr [ rcx + num ] , num mov rcx , qword ptr [ rax ] mov qword ptr [ rcx ] , num mov rcx , qword ptr [ rax ] mov qword ptr [ rcx + hexvar ] , num mov rcx , qword ptr [ rax ] mov qword ptr [ rcx + hexvar ] , num mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
mov r1 , hexvar push { r4 , lr } mov r4 , r0 bl hexvar subs r3 , r0 , num movne r2 , num movne r1 , num strne r3 , [ r4 , hexvar ] movne r0 , r1 strne r1 , [ r3 , num ] strne r2 , [ r3 ] strne r2 , [ r3 , num ] strne r2 , [ r3 , hexvar ] moveq r0 , r3 pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) addiu a3 , zero , hexvar move a2 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 )
push rbx mov esi , hexvar mov rbx , rdi call hexvar mov rdx , rax xor eax , eax test rdx , rdx je hexvar mov qword ptr [ rbx + hexvar ] , rdx mov eax , num mov dword ptr [ rdx + num ] , num mov qword ptr [ rdx ] , num mov qword ptr [ rdx + hexvar ] , num mov qword ptr [ rdx + hexvar ] , num pop rbx ret
push rbp mov rbp , rsp mov al , dil mov byte ptr [ rbp - num ] , al movzx edi , byte ptr [ rbp - num ] and edi , hexvar sar edi , num mov eax , edi pop rbp ret
push rbp mov rbp , rsp mov al , dil mov byte ptr [ rbp - num ] , al movzx edi , byte ptr [ rbp - num ] and edi , hexvar sar edi , num mov eax , edi pop rbp ret
push rbp mov rbp , rsp mov al , dil mov byte ptr [ rbp - num ] , al mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - num ] , al movzx ecx , byte ptr [ rbp - num ] and ecx , hexvar sar ecx , num mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov al , dil mov byte ptr [ rbp - num ] , al movzx edi , byte ptr [ rbp - num ] and edi , hexvar sar edi , num mov eax , edi pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r4 , r3 ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 ldr r2 , [ sp , num ] mov r1 , r3 mov r0 , r4 bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { r4 , pc }
push r14 push rbx push rax mov r14 , rsi mov rbx , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx mov esi , eax mov rdx , r14 call hexvar mov eax , num add rsp , num pop rbx pop r14 ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push eax push dword ptr [ esi + hexvar ] call hexvar mov eax , num add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move a1 , zero lui a0 , hexvar addiu a0 , a0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beq s0 , v0 , hexvar nop bltz v0 , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v1 , zero , num sw v1 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx setle dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ eax ] , num jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a1 , zero sw s0 , hexvar ( sp ) move s0 , a0 lui a0 , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , a0 , hexvar beq s0 , v0 , hexvar lw gp , hexvar ( sp ) bltz v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop move v1 , zero lw ra , hexvar ( sp ) addiu a0 , zero , num lw s0 , hexvar ( sp ) sw a0 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi xor esi , esi mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax movabs rdi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - num ] setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ rbp - hexvar ] cmp eax , ecx setle dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rax ] , num mov byte ptr [ rbp - num ] , num jmp hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) addiu v0 , zero , - num b hexvar nop lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
test byte ptr [ rdi + hexvar ] , hexvar je hexvar cmp rsi , - num lea rax , [ rsi + num ] mov rsi , qword ptr [ rdi + hexvar ] mov ecx , num cmove rax , rcx cmp qword ptr [ rsi + hexvar ] , rax jbe hexvar mov rcx , rax shl rcx , num add rcx , qword ptr [ rsi + hexvar ] mov qword ptr [ rdx ] , rcx ret
lw v0 , hexvar ( a0 ) andi v0 , v0 , num beqz v0 , hexvar addiu v0 , zero , - num beq a1 , v0 , hexvar addiu v0 , a1 , num lw a0 , hexvar ( a0 ) lw v1 , hexvar ( a0 ) sltu v1 , v0 , v1 beqz v1 , hexvar nop lw v1 , hexvar ( a0 ) sll a0 , v0 , num addu v1 , v1 , a0 jr ra sw v1 , ( a2 )
ldrsb r3 , [ r0 , hexvar ] cmp r3 , num bge hexvar cmn r1 , num moveq r1 , num ldr r3 , [ r0 , hexvar ] addne r1 , r1 , num ldr r0 , [ r3 , hexvar ] cmp r0 , r1 mvnls r1 , num ldrhi r3 , [ r3 , hexvar ] mov r0 , r1 addhi r3 , r3 , r1 , lsl num strhi r3 , [ r2 ] bx lr push { r4 , lr } mov r0 , num bl hexvar mvn r1 , num mov r0 , r1 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
cmp eax , hexvar mov esi , hexvar jg hexvar test al , num jne hexvar cmp eax , num mov esi , num jg hexvar test al , num mov esi , num jne hexvar and eax , num cmp eax , num sbb esi , esi and esi , num add esi , num jmp hexvar nop
mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax lea ecx , [ eax + num ] mov edx , hexvar mov eax , ecx imul edx lea eax , [ edx + ecx ] sar eax , num mov edx , ecx sar edx , hexvar sub eax , edx lea edx , [ eax * num ] sub edx , eax sub ecx , edx add ecx , num mov dword ptr [ esp + hexvar ] , num jmp hexvar
mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax shl eax , num add eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov edi , dword ptr [ ebp - hexvar ] cmp edi , num je hexvar cmp edi , num jb hexvar cmp edi , num jne hexvar sub esp , hexvar lea edx , [ ebp - hexvar ] push edx push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push - num push num push esi mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar sub esp , num lea edx , [ ebp - hexvar ] push edx push eax push dword ptr [ ebp - hexvar ] push - num push num push esi mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar lea edx , [ ebp - hexvar ] push edx push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push - num push num push esi mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar call hexvar
cmp dword ptr [ ebp + hexvar ] , - num jne hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num movzx eax , byte ptr [ eax ] test al , al setne al jmp hexvar cmp dword ptr [ ebp + hexvar ] , num setne al test al , al jne hexvar
push r14 push r13 push r12 push rbp push rbx mov rbp , rdi mov r14 , rsi mov r13 , rdx mov r12 , rcx mov rbx , qword ptr [ rdi + hexvar ] mov eax , num test rbx , rbx je hexvar mov eax , dword ptr [ rbp + hexvar ] cmp eax , num ja hexvar mov eax , eax lea rax , [ rbx + rax * num ] mov rdx , qword ptr [ rax + hexvar ] cmp rdx , - num je hexvar mov rcx , qword ptr [ rax + hexvar ] cmp r12 , rcx jbe hexvar mov rax , qword ptr [ rbx + num ] mov rsi , qword ptr [ rax + num ] mov rdi , r13 call qword ptr [ r14 + hexvar ]
push r14 push r13 push r12 push rbp push rbx mov rbp , rdi mov r14 , rsi mov r13 , rdx mov r12 , rcx mov rbx , qword ptr [ rdi + hexvar ] mov eax , num test rbx , rbx je hexvar mov eax , dword ptr [ rbp + hexvar ] cmp eax , num ja hexvar mov eax , eax lea rax , [ rbx + rax * num ] mov rdx , qword ptr [ rax + hexvar ] cmp rdx , - num je hexvar mov rcx , qword ptr [ rax + hexvar ] cmp r12 , rcx jbe hexvar mov rax , qword ptr [ rbx + num ] mov rsi , qword ptr [ rax + num ] mov rdi , r13 call qword ptr [ r14 + hexvar ]
push ebp push edi push esi push ebx sub esp , hexvar mov esi , eax mov ebp , edx mov dword ptr [ esp + num ] , ecx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov eax , num test ebx , ebx je hexvar mov eax , dword ptr [ esi + hexvar ] cmp eax , num ja hexvar mov ecx , dword ptr [ ebx + eax * num + num ] cmp ecx , - num je hexvar mov edx , dword ptr [ ebx + eax * num + hexvar ] mov eax , dword ptr [ ebx + eax * num + hexvar ] cmp edi , edx ja hexvar jb hexvar cmp dword ptr [ esp + hexvar ] , eax ja hexvar mov eax , num jmp hexvar sub esp , hexvar push edx push eax push ecx mov eax , dword ptr [ ebx + num ] push dword ptr [ eax + num ] push dword ptr [ esp + hexvar ] call dword ptr [ ebp + hexvar ] add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] add eax , num mov dword ptr [ esi + hexvar ] , eax cmp eax , num ja hexvar mov ecx , dword ptr [ ebx + eax * num + num ] cmp ecx , - num je hexvar mov edx , dword ptr [ ebx + eax * num + hexvar ] mov eax , dword ptr [ ebx + eax * num + hexvar ] cmp edx , edi ja hexvar jb hexvar cmp eax , dword ptr [ esp + hexvar ] jb hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v1 , hexvar ( fp ) addiu v0 , v0 , num sll v0 , v0 , num addu v0 , v1 , v0 lw v1 , ( v0 )
push rax mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num cmp byte ptr [ rip + hexvar ] , num jne hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , hexvar call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar xor edi , edi call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar lui s0 , hexvar addiu v0 , zero , num lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a1 , hexvar addiu a1 , a1 , hexvar lw a0 , hexvar ( s0 )
push rax mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rip + hexvar ] , num cmp byte ptr [ rip + hexvar ] , num jne hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , hexvar call hexvar mov edi , dword ptr [ rip + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar xor edi , edi call hexvar mov byte ptr [ rip + hexvar ] , num mov eax , num pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , num test eax , eax jne hexvar lea eax , [ ebx + hexvar ] sub esp , num push eax push dword ptr [ ebx + hexvar ] call hexvar pop eax lea eax , [ ebx + hexvar ] pop edx push eax push dword ptr [ ebx + hexvar ] call hexvar pop ecx pop eax lea eax , [ ebx + hexvar ] push eax push num call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar add esp , num mov eax , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] test ecx , ecx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , esp mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + num ] , hexvar mov dword ptr [ ecx ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add edx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] test eax , eax je hexvar cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num sub esp , num push eax push hexvar push num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] add eax , num sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num jmp hexvar mov ebx , edx call hexvar nop nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov eax , dword ptr [ rdi ] test eax , eax je hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] test ecx , ecx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num jmp hexvar jmp hexvar call hexvar add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r0 ldr r0 , [ r0 ] mov r5 , r1 bl hexvar ldr r3 , [ r4 , num ] mov r2 , r5 eor r0 , r0 , r3 ldr r1 , [ r4 , hexvar ] mov r3 , num bl hexvar mov r0 , r2 pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add edx , hexvar mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ ebp + hexvar ] push eax mov dword ptr [ ebp - hexvar ] , edx mov ebx , edx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov ebx , num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov edi , ecx xor edi , eax mov dword ptr [ ebp - hexvar ] , edi mov esi , ebx xor esi , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp + hexvar ] mov edx , num push edx push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , edi push esi push dword ptr [ ebp ] call hexvar xor eax , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] xor edx , edx push edx push esi push ebx mov ebx , edi mov ecx , eax push ecx call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a1 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar lw a0 , ( a0 )
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al call hexvar mov eax , dword ptr [ eax ] movzx ecx , byte ptr [ ebp + num ] movzx eax , word ptr [ eax + ecx * num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] mov dl , num mov byte ptr [ ebp - num ] , dl jmp eax mov al , byte ptr [ ebp + num ] sub al , hexvar sete cl mov edx , dword ptr [ hexvar ] mov byte ptr [ ebp - num ] , al mov byte ptr [ ebp - num ] , cl jmp edx mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al call hexvar mov eax , dword ptr [ eax ] movzx ecx , byte ptr [ ebp + num ] movzx eax , word ptr [ eax + ecx * num ] and eax , num cmp eax , num mov dl , num mov byte ptr [ ebp - num ] , dl jne hexvar movzx eax , byte ptr [ ebp + num ] cmp eax , hexvar sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , num pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , dl mov ebx , eax call hexvar mov eax , dword ptr [ eax ] movzx edx , byte ptr [ ebp - hexvar ] add edx , edx add eax , edx movzx eax , word ptr [ eax ] movzx eax , ax and eax , num test eax , eax jne hexvar cmp byte ptr [ ebp - hexvar ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num add esp , hexvar pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a0 sb v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) lbu v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lhu v0 , ( v0 )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] bl hexvar mov r2 , r0 mov r3 , hexvar str r3 , [ r2 ] mvn r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , num mov edi , dword ptr [ hexvar ] lea ebx , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ ebp + num ] movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp + hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , num mov edi , dword ptr [ hexvar ] lea ebx , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu a1 , sp , hexvar lui v0 , hexvar lw a0 , - hexvar ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) lw v1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp ] , rdi mov qword ptr [ rsp + num ] , rsi mov qword ptr [ rsp + hexvar ] , num mov rsi , rsp mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test eax , eax js hexvar xor edx , edx cmp eax , hexvar mov esi , hexvar setne dl mov qword ptr [ rsp ] , num mov qword ptr [ rsp + hexvar ] , num add eax , edx mov rdx , rsp mov qword ptr [ rsp + num ] , num mov edi , eax call hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp - num ] , hexvar jge hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , dword ptr [ ebp - num ] lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , hexvar ori v0 , v0 , hexvar beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a3 , v0 lui v0 , hexvar addiu a2 , v0 , hexvar lw a1 , hexvar ( fp ) move a0 , zero jal hexvar nop lw gp , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , hexvar sw v1 , hexvar ( v0 ) lw v1 , hexvar ( fp ) lui v0 , hexvar sw v1 , hexvar ( v0 ) nop lw v0 , - hexvar ( gp ) lw v1 , hexvar ( fp ) lw v0 , ( v0 ) beq v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 subs r5 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 , num ] cmp r0 , num ldreq r3 , [ r3 ] ldreq r0 , [ r3 ] cmp r4 , num strne r0 , [ r4 , num ] ldrbne r3 , [ r4 , hexvar ] orrne r3 , r3 , num strbne r3 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc } stc2l p13 , c4 , [ lr , hexvar ]
push rbx mov rax , rdi mov rbx , rsi test rdi , rdi je hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar test rbx , rbx je hexvar mov qword ptr [ rbx + num ] , rax or byte ptr [ rbx + hexvar ] , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] test ebp , ebp je hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , ebp repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al je hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] and byte ptr [ eax + hexvar ] , hexvar mov edi , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ edi ] test esi , esi jne hexvar jmp hexvar nop lea esi , [ esi ] add edi , num mov esi , dword ptr [ edi ] test esi , esi je hexvar sub esp , num push dword ptr [ esi ] push ebp call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , esi add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
ldr r2 , [ r0 , hexvar ] ldr r3 , [ r1 , hexvar ] cmp r2 , r3 bne hexvar ldr r2 , [ r0 ] ldr r3 , [ r1 ] cmp r2 , r3 bne hexvar ldr r2 , [ r0 , hexvar ] ldr r3 , [ r1 , hexvar ] cmp r2 , r3 movlo r0 , r1 bx lr mov r0 , num bx lr mov r0 , num bx lr
mov eax , dword ptr [ rsi + hexvar ] cmp dword ptr [ rdi + hexvar ] , eax jne hexvar mov eax , dword ptr [ rsi ] cmp dword ptr [ rdi ] , eax jne hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rax mov rax , rdi cmovb rax , rsi ret
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ eax + hexvar ] cmp dword ptr [ edx + hexvar ] , ecx jne hexvar mov ecx , dword ptr [ eax ] cmp dword ptr [ edx ] , ecx jne hexvar mov ecx , dword ptr [ eax + hexvar ] cmp dword ptr [ edx + hexvar ] , ecx cmovae eax , edx ret
mov eax , dword ptr [ rsi + hexvar ] cmp dword ptr [ rdi + hexvar ] , eax jne hexvar mov eax , dword ptr [ rsi ] cmp dword ptr [ rdi ] , eax jne hexvar mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rax mov rax , rdi cmovb rax , rsi ret
push rbx test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rbx + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax test eax , eax jle hexvar pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 ) beqz v0 , hexvar move s0 , a0 lw v1 , hexvar ( v0 )
push rbx test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rbx + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax test eax , eax jle hexvar pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov dword ptr [ rbx + hexvar ] , num mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax test eax , eax jle hexvar pop rbx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] push num push hexvar call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , eax add esp , hexvar pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , zero sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu a0 , zero , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw a3 , - hexvar ( gp ) lw a2 , - hexvar ( gp ) bal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) sw v0 , hexvar ( s0 )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx push num push hexvar mov ebx , eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar sub ecx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] sub eax , hexvar add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar sub ecx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] sub eax , hexvar add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar sub ecx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] sub eax , hexvar add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] sub r3 , r3 , hexvar cmp r3 , hexvar bhi hexvar ldr r3 , [ fp , - num ] sub r3 , r3 , hexvar b hexvar ldr r3 , [ fp , - num ] mov r0 , r3 add sp , fp , num pop { fp } bx lr
push { r4 , r5 , r6 , lr } ldr r5 , [ r0 , hexvar ] cmp r5 , num beq hexvar ldrb r3 , [ r5 , hexvar ] lsrs r3 , r3 , num bne hexvar mov r4 , num mov r6 , r4 b hexvar mov r5 , r3 ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] adds r4 , r4 , r3 adc r6 , r6 , r2 ldr r3 , [ r5 , hexvar ] cmp r3 , num beq hexvar ldrb r2 , [ r3 , hexvar ] mov r0 , r5 lsrs r2 , r2 , num beq hexvar ldr r3 , [ r5 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r3 , num ] mov r0 , r5 blx r3 str r0 , [ r5 , hexvar ] str r1 , [ r5 , hexvar ] subs r0 , r0 , r4 sbc r1 , r1 , r6 pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s2 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , hexvar ( a0 ) beqz s1 , hexvar move s2 , zero lw v0 , hexvar ( s1 ) bltz v0 , hexvar nop b hexvar move s0 , zero move s1 , v0 lw v0 , hexvar ( a0 ) lw a0 , hexvar ( a0 ) addu a0 , s0 , a0 sltu s0 , a0 , s0 addu v0 , s2 , v0 addu s2 , s0 , v0 lw v0 , hexvar ( s1 )
push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdi + hexvar ] test rbx , rbx je hexvar cmp byte ptr [ rbx + hexvar ] , num js hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] cmp byte ptr [ rax + hexvar ] , num mov rdi , rbx js hexvar mov rbx , rax mov rax , qword ptr [ rbx + hexvar ] add rbp , qword ptr [ rdi + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , rbx call qword ptr [ rax + hexvar ] mov qword ptr [ rbx + hexvar ] , rax sub rax , rbp add rsp , num pop rbx pop rbp ret
test rdi , rdi je hexvar movsx ecx , byte ptr [ rdi ] add ecx , - hexvar cmp ecx , hexvar ja hexvar xor eax , eax jmp qword ptr [ rcx * num + hexvar ] mov eax , num ret
beqz a0 , hexvar move v0 , a1 lbu v1 , ( a0 ) addiu v1 , v1 , - hexvar andi v0 , v1 , hexvar sltiu v0 , v0 , hexvar beqz v0 , hexvar andi v1 , v1 , hexvar sll v1 , v1 , num lui a0 , hexvar addiu a0 , a0 , hexvar addu v1 , a0 , v1 lw v0 , ( v1 ) jr v0 nop jr ra addiu v0 , zero , num jr ra move v0 , a1 move v0 , zero jr ra nop
test rdi , rdi je hexvar movsx ecx , byte ptr [ rdi ] add ecx , - hexvar cmp ecx , hexvar ja hexvar xor eax , eax jmp qword ptr [ rcx * num + hexvar ] mov eax , num ret
test rdi , rdi je hexvar movsx ecx , byte ptr [ rdi ] add ecx , - hexvar cmp ecx , hexvar ja hexvar xor eax , eax jmp qword ptr [ rcx * num + hexvar ] mov eax , num ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r1 , [ r0 , hexvar ] ldr r6 , [ pc , hexvar ] ldrb r3 , [ r1 ] ldr r2 , [ r6 ] sub sp , sp , hexvar sub r3 , r3 , hexvar mov r4 , r0 str r2 , [ sp , num ] cmp r3 , hexvar ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq r7 , ip , r0 , lsr num andeq r7 , ip , ip , ror num andeq r7 , ip , ip , ror num andeq r7 , ip , ip , ror num andeq r7 , ip , ip , ror num andeq r7 , ip , ip , lsr num andeq r7 , ip , ip , ror num andeq r7 , ip , r0 , lsl ip andeq r7 , ip , ip , ror num andeq r7 , ip , ip , ror num andeq r7 , ip , ip , ror num andeq r7 , ip , ip , ror num andeq r7 , ip , r4 , lsl num ldr r2 , [ sp , num ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } b hexvar ldrb r3 , [ r1 , num ] cmp r3 , hexvar beq hexvar mov r1 , num bl hexvar ldr r3 , [ r4 , hexvar ] mov r5 , r0 ldrb r2 , [ r3 ] cmp r2 , hexvar bne hexvar add r3 , r3 , num str r3 , [ r4 , hexvar ] mov r0 , r4 bl hexvar mov r3 , r0 b hexvar bl hexvar ldr r3 , [ r4 , hexvar ] mov r5 , r0 ldrb r2 , [ r3 ] cmp r2 , hexvar beq hexvar ldr r2 , [ sp , num ] ldr r3 , [ r6 ] mov r0 , r5 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx mov ebx , eax call hexvar add edi , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebx + hexvar ] movzx edx , byte ptr [ eax ] cmp dl , hexvar je hexvar jle hexvar cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar add eax , num xor edx , edx mov dword ptr [ ebx + hexvar ] , eax mov eax , ebx call hexvar test eax , eax mov esi , eax je hexvar mov edx , dword ptr [ ebx + hexvar ] cmp byte ptr [ edx ] , hexvar jne hexvar lea eax , [ edx + num ] mov dword ptr [ ebx + hexvar ] , eax movzx eax , byte ptr [ edx + num ] cmp al , hexvar je hexvar cmp al , hexvar je hexvar mov eax , ebx call hexvar test eax , eax mov ebp , eax je hexvar mov eax , dword ptr [ eax ] and eax , hexvar cmp eax , hexvar je hexvar mov eax , ebx call hexvar test eax , eax jne hexvar lea esi , [ esi ] xor ecx , ecx mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] mov eax , ecx jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx mov ebx , eax call hexvar add esi , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebx + hexvar ] movzx edx , byte ptr [ eax ] cmp dl , hexvar je hexvar jle hexvar cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar add eax , num xor edx , edx mov dword ptr [ ebx + hexvar ] , eax mov eax , ebx call hexvar test eax , eax mov edi , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] cmp byte ptr [ eax ] , hexvar jne hexvar lea edx , [ eax + num ] mov dword ptr [ ebx + hexvar ] , edx movzx edx , byte ptr [ eax + num ] cmp dl , hexvar je hexvar cmp dl , hexvar je hexvar mov eax , ebx call hexvar test eax , eax mov esi , eax je hexvar mov eax , dword ptr [ eax ] sub eax , hexvar and eax , hexvar je hexvar mov eax , ebx call hexvar test eax , eax jne hexvar xor ecx , ecx jmp hexvar nop mov eax , ebx call hexvar mov ecx , eax lea esi , [ esi ] mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] mov eax , ecx jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov al , byte ptr [ rdi ] mov byte ptr [ rbp - hexvar ] , al movsx ecx , byte ptr [ rbp - hexvar ] add ecx , - hexvar mov edi , ecx sub ecx , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , ecx ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx
push ebp push edi mov edi , eax push esi push ebx sub esp , num mov eax , dword ptr [ eax + hexvar ] cmp byte ptr [ eax ] , hexvar jne hexvar lea esi , [ eax + num ] mov dword ptr [ edi + hexvar ] , esi movsx ecx , byte ptr [ eax + num ] cmp cl , hexvar je hexvar lea eax , [ ecx - hexvar ] cmp al , num ja hexvar xor ebx , ebx jmp hexvar nop lea esi , [ esi ] mov esi , eax lea eax , [ ecx - hexvar ] mov edx , hexvar sub edx , eax mov eax , hexvar mul edx shr edx , num cmp edx , ebx jl hexvar lea eax , [ ebx + ebx * num ] lea eax , [ ecx + eax * num ] mov dword ptr [ esp ] , eax lea ebx , [ eax - hexvar ] lea eax , [ esi + num ] mov dword ptr [ edi + hexvar ] , eax movsx ecx , byte ptr [ esi + num ] lea ebp , [ ecx - hexvar ] mov edx , ebp cmp dl , num jbe hexvar mov edx , dword ptr [ esp ] sub edx , hexvar cmp cl , hexvar jne hexvar add esi , num mov dword ptr [ edi + hexvar ] , esi jmp hexvar lea esi , [ esi ] add eax , num xor edx , edx mov dword ptr [ edi + hexvar ] , eax mov ecx , dword ptr [ edi + hexvar ] cmp ecx , dword ptr [ edi + hexvar ] jge hexvar mov eax , ecx add ecx , num shl eax , num add eax , dword ptr [ edi + hexvar ] mov dword ptr [ eax + num ] , num mov dword ptr [ edi + hexvar ] , ecx mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , edx add esp , num pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] movsx eax , byte ptr [ rdi ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] add rcx , num mov qword ptr [ rax + hexvar ] , rcx mov dl , num test dl , num jne hexvar jmp hexvar xor eax , eax mov cl , al test cl , num jne hexvar jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jge hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov rdx , qword ptr [ rdi + hexvar ] mov eax , num cmp byte ptr [ rdx ] , hexvar jne hexvar push rbp push rbx mov rbx , rdi add rdx , num mov qword ptr [ rdi + hexvar ] , rdx call hexvar mov ebp , eax test eax , eax js hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov dword ptr [ rax ] , num movsxd rbp , ebp mov qword ptr [ rax + num ] , rbp pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , num jmp hexvar mov edx , dword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , a0 sw s1 , hexvar ( sp ) move a2 , zero lw s1 , - hexvar ( gp ) move a1 , zero lw t9 , - hexvar ( gp ) addiu a0 , sp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s2 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s2 jalr t9 move a0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , zero lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , a0 sw s1 , hexvar ( sp ) move a2 , zero lw s1 , - hexvar ( gp ) move a1 , zero lw t9 , - hexvar ( gp ) addiu a0 , sp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s2 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s2 jalr t9 move a0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , zero lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp )
push r14 push rbx push rax mov rcx , rdi mov rdi , rsp xor esi , esi xor edx , edx call hexvar mov rdi , qword ptr [ rsp ] call hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov rcx , rdi mov rdi , rsp xor esi , esi xor edx , edx call hexvar mov rdi , qword ptr [ rsp ] call hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r14 call hexvar test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
mov r8 , qword ptr [ rsi ] mov r9 , qword ptr [ rdi ] cmp r8 , r9 mov r10 , r9 cmovae r10 , r8 test r10 , r10 je hexvar xor eax , eax xor ecx , ecx nop dword ptr [ rax ] xor edx , edx cmp r9 , rax jbe hexvar mov rdx , qword ptr [ rdi + num ] mov rdx , qword ptr [ rdx + rax * num ] cmp r8 , rax jbe hexvar mov r11 , qword ptr [ rsi + num ] xor rdx , qword ptr [ r11 + rax * num ] add rax , num or rcx , rdx cmp r10 , rax jne hexvar mov rax , rcx and ecx , num shr rax , num or rax , rcx neg rax shr rax , hexvar xor eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , rax or rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov ecx , hexvar mov edx , ecx xor edx , num and edx , hexvar xor ecx , hexvar mov esi , ecx and esi , num mov r8d , eax xor r8d , hexvar and r8d , hexvar and eax , ecx or edx , esi or r8d , eax xor edx , r8d mov eax , edx add rsp , hexvar pop rbp ret
mov r8 , qword ptr [ rsi ] mov r9 , qword ptr [ rdi ] cmp r8 , r9 mov r10 , r9 cmovae r10 , r8 test r10 , r10 je hexvar xor eax , eax xor ecx , ecx nop dword ptr [ rax ] xor edx , edx cmp r9 , rax jbe hexvar mov rdx , qword ptr [ rdi + num ] mov rdx , qword ptr [ rdx + rax * num ] cmp r8 , rax jbe hexvar mov r11 , qword ptr [ rsi + num ] xor rdx , qword ptr [ r11 + rax * num ] add rax , num or rcx , rdx cmp r10 , rax jne hexvar mov rax , rcx and ecx , num shr rax , num or rax , rcx neg rax shr rax , hexvar xor eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] setb cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] xor rsi , rax mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] or rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] xor eax , num add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , hexvar push edi call hexvar mov dword ptr [ esp ] , num mov esi , eax push num push eax push edi mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar cmp eax , esi pop ebx sete al pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push num push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar cmp dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , num jmp hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , hexvar push edi call hexvar mov dword ptr [ esp ] , num mov esi , eax push num push eax push edi mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar cmp eax , esi pop ebx sete al pop esi pop edi ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r0 ldr r0 , [ r0 , num ] sub sp , sp , num cmp r0 , num beq hexvar ldm r0 , { r3 , r5 } str r3 , [ r4 , num ] mov r7 , r1 mov r6 , r2 bl hexvar cmp r5 , num moveq r0 , r5 beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar mov r2 , num mov r1 , r7 ldr r0 , [ r4 , hexvar ] blx r3 subs r8 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] bl hexvar subs r3 , r0 , num beq hexvar mov r2 , num strb r2 , [ r3 ] , num ldr r2 , [ r4 , hexvar ] ldr r0 , [ r4 ] mov r1 , num stm sp , { r2 , r5 } ldr r2 , [ pc , hexvar ] bl hexvar cmp r6 , num blo hexvar cmp r6 , num bls hexvar cmp r6 , num beq hexvar mov r3 , r8 ldr r2 , [ pc , hexvar ] mov r1 , num ldr r0 , [ r4 ] bl hexvar mov r0 , r8 bl hexvar ldr r1 , [ r4 ] mov r0 , hexvar bl hexvar mov r0 , r5 bl hexvar mov r0 , num add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push r14 push r13 push r12 push rbp push rbx mov rbx , rdi mov rbp , rsi mov r14d , edx call hexvar mov r12 , rax mov eax , num test r12 , r12 je hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov edx , num mov rsi , rbp call rax mov r13 , rax test rax , rax je hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rbp , rax test rax , rax je hexvar mov byte ptr [ rax ] , num lea rcx , [ rax + num ] mov r9 , r12 mov r8 , qword ptr [ rbx + hexvar ] lea rdx , [ rip + hexvar ] mov esi , num mov rdi , qword ptr [ rbx ] mov eax , num call hexvar cmp r14d , num jb hexvar cmp r14d , num jbe hexvar cmp r14d , num jne hexvar mov rbp , r13 mov rcx , qword ptr [ rbx ] mov edx , hexvar mov esi , num lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rbp , r13 mov rcx , qword ptr [ rbx ] mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar test rbp , rbp je hexvar mov rcx , rbp lea rdx , [ rip + hexvar ] mov esi , num mov rdi , qword ptr [ rbx ] mov eax , num call hexvar test r13 , r13 je hexvar mov rdi , r13 call hexvar mov rsi , qword ptr [ rbx ] mov edi , hexvar call hexvar mov rdi , r12 call hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 mov r14 , rsi push r12 push rbp mov r13d , edx push rbx mov rbx , rdi add rdi , hexvar call hexvar mov rbp , rax xor eax , eax test rbp , rbp je hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] mov edx , num mov rsi , r14 call rax test rax , rax mov r12 , rax je hexvar lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test rax , rax je hexvar mov byte ptr [ rax ] , num mov r8 , qword ptr [ rbx + hexvar ] lea rcx , [ rax + num ] mov rdi , qword ptr [ rbx ] lea rdx , [ rip + hexvar ] xor eax , eax mov r9 , rbp mov esi , num call hexvar cmp r13d , num jb hexvar cmp r13d , num jbe hexvar cmp r13d , num jne hexvar mov rcx , qword ptr [ rbx ] lea rdi , [ rip + hexvar ] mov edx , hexvar mov esi , num call hexvar mov rdi , qword ptr [ rbx ] lea rdx , [ rip + hexvar ] mov rcx , r12 mov esi , num xor eax , eax call hexvar mov rdi , r12 call hexvar mov rsi , qword ptr [ rbx ] mov edi , hexvar call hexvar mov rdi , rbp call hexvar mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push rbp push r15 push r14 push r12 push rbx mov r14 , rdx mov r12 , rsi mov r15 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar mov rdi , r15 mov rsi , rbx mov rdx , r14 call hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar move s1 , a2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s3 jalr t9 move a0 , v0 move a2 , s1 move a1 , s0 jal hexvar move a0 , s2 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar bal - hexvar addiu a0 , zero , hexvar move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi call hexvar mov rdi , rax call hexvar mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov r12d , hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] mov esi , hexvar xor edx , edx mov rcx , r15 call hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , rbx mov rdx , r14 call hexvar mov ebp , eax mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r12d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar move s1 , a2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s3 jalr t9 move a0 , v0 move a2 , s1 move a1 , s0 jal hexvar move a0 , s2 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar bal - hexvar addiu a0 , zero , hexvar move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) jal hexvar move s0 , a0 move a0 , s0 lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 addiu a0 , s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , zero , hexvar addiu a0 , s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , zero , hexvar addiu a0 , s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , zero , hexvar addiu a0 , s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , zero , hexvar addiu v0 , zero , - num lw gp , hexvar ( sp ) move a0 , s0 lw ra , hexvar ( sp ) sw v0 , hexvar ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) move s0 , a0 jal hexvar nop lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s3 , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a0 lw s3 , - hexvar ( gp ) lbu v1 , hexvar ( v0 ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , ( s3 ) sw a0 , hexvar ( sp ) beqz v1 , hexvar lw t9 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) addiu a2 , zero , num lw t9 , - hexvar ( gp ) lw a1 , ( s4 ) lw a0 , num ( s4 ) jalr t9 lw a3 , ( v0 ) lw v1 , hexvar ( sp ) lw v0 , ( s3 ) bne v1 , v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v1 , zero , num addiu a0 , zero , num jalr t9 sb v1 , hexvar ( v0 ) bgez v0 , hexvar lw gp , hexvar ( sp ) lui a0 , hexvar addiu a0 , a0 , hexvar lw v0 , hexvar ( a0 ) beqz v0 , hexvar nop lui a0 , hexvar jal hexvar addiu a0 , a0 , hexvar b hexvar lw gp , hexvar ( sp ) lui v0 , hexvar lw t9 , - hexvar ( gp )
cmp byte ptr [ rip + hexvar ] , num push rbx mov rbx , rdi je hexvar mov rsi , qword ptr [ rbx ] mov rdi , qword ptr [ rbx + num ] mov edx , num pop rbx mov rcx , qword ptr [ rip + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] cmp qword ptr [ rip + hexvar ] , num mov byte ptr [ rip + hexvar ] , num je hexvar mov edi , hexvar call hexvar jmp hexvar nop dword ptr [ rax ] mov edi , hexvar call hexvar mov edi , hexvar call hexvar mov edi , hexvar call hexvar jmp hexvar
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , eax cmp byte ptr [ ebx + hexvar ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] push num push dword ptr [ esi ] push dword ptr [ esi + num ] call hexvar add esp , hexvar pop ebx pop esi ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 ] mov r0 , num bl hexvar mov r3 , r0 cmp r3 , num blt hexvar bl hexvar bl hexvar ldr r3 , [ fp , - num ] ldr r0 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r1 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r2 , num bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jge hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] lea ecx , [ hexvar ] cmp dword ptr [ eax + num ] , ecx je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar lea eax , [ hexvar ] mov dword ptr [ hexvar ] , eax lea eax , [ hexvar ] cmp dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar lea eax , [ hexvar ] mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
mov eax , dword ptr [ rip + hexvar ] push r12 mov r12 , qword ptr [ rip + hexvar ] push rbp push rbx cmp eax , num jbe hexvar sub eax , num lea rbx , [ r12 + hexvar ] shl rax , num lea rbp , [ r12 + rax + hexvar ] nop word ptr [ rax + rax ] mov rdi , qword ptr [ rbx ] add rbx , hexvar call hexvar cmp rbx , rbp jne hexvar mov rdi , qword ptr [ r12 + num ] cmp rdi , hexvar je hexvar call hexvar mov qword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , hexvar cmp r12 , hexvar je hexvar mov rdi , r12 call hexvar mov qword ptr [ rip + hexvar ] , hexvar pop rbx mov dword ptr [ rip + hexvar ] , num pop rbp pop r12 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] cmp eax , num jbe hexvar lea esi , [ ebp + hexvar ] lea edi , [ ebp + eax * num + num ] sub esp , hexvar push dword ptr [ esi ] call hexvar add esi , num add esp , hexvar cmp esi , edi jne hexvar mov eax , dword ptr [ ebp + num ] lea edx , [ ebx + hexvar ] cmp eax , edx je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ ebx + hexvar ] , hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar lea eax , [ ebx + hexvar ] cmp ebp , eax je hexvar sub esp , hexvar push ebp call hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] cmp eax , num jbe hexvar lea esi , [ ebp + hexvar ] lea edi , [ ebp + eax * num + num ] sub esp , hexvar push dword ptr [ esi ] call hexvar add esi , num add esp , hexvar cmp esi , edi jne hexvar mov eax , dword ptr [ ebp + num ] lea edx , [ ebx + hexvar ] cmp eax , edx je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ ebx + hexvar ] , hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar lea eax , [ ebx + hexvar ] cmp ebp , eax je hexvar sub esp , hexvar push ebp call hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rdx , rbx mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov edi , hexvar call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push r12 push rbp mov r12 , rdi push rbx mov edi , num mov rbx , rdx call hexvar xor edi , edi mov rbp , rax mov rsi , r12 call hexvar mov rcx , rbp mov rdx , rax mov esi , hexvar xor eax , eax mov edi , num call hexvar test rbx , rbx je hexvar mov rdi , rbx call hexvar mov edx , num mov rbx , rax mov esi , hexvar xor edi , edi call hexvar mov rdx , rbx mov rsi , rax mov edi , num xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , hexvar pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , lr } mov r4 , r2 mov r6 , r1 mov r2 , r0 mov r1 , num mov r0 , num bl hexvar mov r2 , r6 mov r5 , r0 mov r1 , num mov r0 , num bl hexvar mov r2 , r5 mov r3 , r0 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar cmp r4 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r4 mov r5 , r0 mov r0 , num bl hexvar mov r1 , r5 mov r2 , r0 mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r3 , r2 bhs hexvar mov r2 , hexvar add r1 , r3 , num str r1 , [ r0 , hexvar ] strb r2 , [ r3 ] pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r1 , [ r3 , hexvar ] ldr r3 , [ sp , num ] str r3 , [ sp ] mov r3 , r1 ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push rax cmp qword ptr [ rip + hexvar ] , num je hexvar mov rax , rdx mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx je hexvar mov r8 , rcx mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar pop rax jmp hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi jne hexvar call hexvar mov edi , eax mov dword ptr [ rip + hexvar ] , eax mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push edi push esi push ebx mov eax , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar mov ecx , dword ptr [ esi + hexvar ] test ecx , ecx je hexvar mov esi , dword ptr [ esi + hexvar ] test esi , esi je hexvar mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , esi pop ebx pop esi pop edi jmp hexvar lea esi , [ esi ] lea edi , [ edi ] mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar call hexvar mov dword ptr [ ebx + hexvar ] , eax lea edx , [ ebx - hexvar ] sub esp , hexvar push hexvar push edx push hexvar push hexvar push eax call hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar jal hexvar nop b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push rbx sub rsp , hexvar mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar call hexvar mov rbx , qword ptr [ rip + hexvar ] mov edx , num test rbx , rbx je hexvar lea rsi , [ rip + hexvar ] mov rbp , rsp xor edi , edi call hexvar mov r8 , rbx mov rcx , rax mov edx , hexvar mov esi , num mov rdi , rbp xor eax , eax call hexvar mov ebx , dword ptr [ rip + hexvar ] xor esi , esi mov rdi , rbp call hexvar mov r8 , qword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] lea rcx , [ rip + hexvar ] sub ebx , eax mov eax , num lea rsi , [ rip + hexvar ] cmovs ebx , eax lea rax , [ rip + hexvar ] sub rsp , num mov r9d , ebx push rbp mov edi , num sar r9d , num push rax sub ebx , r9d push rbx push qword ptr [ rip + hexvar ] push rax xor eax , eax call hexvar add rsp , hexvar mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov dword ptr [ rip + hexvar ] , num mov edi , dword ptr [ rip + hexvar ] call hexvar call hexvar mov rbx , qword ptr [ rip + hexvar ] test rbx , rbx jne hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rbp , rsp mov r8 , rbx mov rcx , rax mov edx , hexvar mov esi , num mov rdi , rsp mov eax , num call hexvar mov ebx , dword ptr [ rip + hexvar ] mov esi , num mov rdi , rsp call hexvar sub ebx , eax mov eax , num cmovs ebx , eax mov r9d , ebx sar r9d , num sub rsp , num push rbp push hexvar sub ebx , r9d push rbx push qword ptr [ rip + hexvar ] push hexvar mov r8 , qword ptr [ rip + hexvar ] mov ecx , hexvar mov edx , dword ptr [ rip + hexvar ] mov esi , hexvar mov edi , num call hexvar mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num add rsp , hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax lea rax , [ rbp - hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar mov ebx , dword ptr [ rip + hexvar ] lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar sub ebx , eax mov eax , ebx mov dword ptr [ rbp - hexvar ] , eax mov eax , num cmp dword ptr [ rbp - hexvar ] , num cmovns eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sar eax , num mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] mov edi , dword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] push rsi lea rsi , [ rip + hexvar ] push rsi mov esi , dword ptr [ rbp - hexvar ] push rsi push rcx lea r9 , [ rip + hexvar ] mov r8d , edi mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , eax lea rdi , [ rip + hexvar ] mov eax , num call hexvar add rsp , hexvar mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar mov rbx , qword ptr [ rbp - num ] leave ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] call hexvar call hexvar mov eax , dword ptr [ ebx + hexvar ] or eax , dword ptr [ ebx + hexvar ] je hexvar mov esi , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ ebx + hexvar ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push edi push esi push eax push hexvar push num lea edi , [ esp + hexvar ] push edi call hexvar mov esi , dword ptr [ ebx + hexvar ] add esp , hexvar push num push edi call hexvar add esp , hexvar sub esi , eax mov eax , num cmovs esi , eax mov eax , esi sar eax , num push edi lea edx , [ ebx - hexvar ] push edx sub esi , eax push esi push dword ptr [ ebx + hexvar ] push edx push eax push dword ptr [ ebx + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] lea eax , [ ebx - hexvar ] push eax push num call hexvar mov byte ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx jmp hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ ebx + num ] , eax mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx ] , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] dec ecx mov dword ptr [ eax ] , ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax - num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
jmp hexvar nop word ptr [ rax + rax ] add eax , hexvar cmp cl , hexvar jbe hexvar cmp dl , al jne hexvar add rdi , num add rsi , num movzx eax , byte ptr [ rdi ] test al , al je hexvar movzx edx , byte ptr [ rsi ] cmp dl , al je hexvar lea r8d , [ rax - hexvar ] lea ecx , [ rdx - hexvar ] cmp r8b , hexvar jbe hexvar cmp cl , hexvar ja hexvar add edx , hexvar jmp hexvar nop dword ptr [ rax ] xor eax , eax cmp byte ptr [ rsi ] , num sete al ret
push ebp push edi push esi push ebx mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ ebp ] test al , al jne hexvar cmp byte ptr [ ecx ] , num sete al movzx eax , al pop ebx pop esi pop edi pop ebp ret
ldrb r3 , [ r0 ] cmp r3 , num beq hexvar str lr , [ sp , - num ] ! mov ip , r1 b hexvar cmp r1 , hexvar and r3 , lr , hexvar bls hexvar cmp r2 , r3 bne hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , num beq hexvar ldrb r2 , [ ip ] , num sub lr , r3 , hexvar cmp r2 , r3 sub r1 , r2 , hexvar beq hexvar cmp lr , hexvar and r1 , r1 , hexvar add lr , r3 , hexvar bls hexvar cmp r1 , hexvar bhi hexvar add r2 , r2 , hexvar and r2 , r2 , hexvar b hexvar ldrb r0 , [ ip ] clz r0 , r0 lsr r0 , r0 , num pop { pc }
jmp hexvar nop word ptr [ rax + rax ] add eax , hexvar cmp cl , hexvar jbe hexvar cmp dl , al jne hexvar add rdi , num add rsi , num movzx eax , byte ptr [ rdi ] test al , al je hexvar movzx edx , byte ptr [ rsi ] cmp dl , al je hexvar lea r8d , [ rax - hexvar ] lea ecx , [ rdx - hexvar ] cmp r8b , hexvar jbe hexvar cmp cl , hexvar ja hexvar add edx , hexvar jmp hexvar nop dword ptr [ rax ] xor eax , eax cmp byte ptr [ rsi ] , num sete al ret
sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num blt hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num ble hexvar mov r3 , num b hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ sp , hexvar ] ldr r2 , [ r2 , r3 , lsl num ] ldr r3 , [ sp , num ] str r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ sp , hexvar ] ldr r2 , [ r2 , r3 , lsl num ] ldr r3 , [ sp , num ] str r2 , [ r3 ] b hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 ] mov r3 , num mov r0 , r3 add sp , sp , hexvar bx lr eoreq sb , sl , r8 , lsl num eoreq r2 , fp , ip , ror num
xor eax , eax cmp edi , num ja hexvar movsxd rax , edi movsxd rcx , dword ptr [ rax * num + hexvar ] mov qword ptr [ rsi ] , rcx cmp edi , num jne hexvar xor eax , eax jmp hexvar mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rdx ] , rax mov eax , num ret
xor eax , eax cmp edi , num ja hexvar movsxd rax , edi movsxd rcx , dword ptr [ rax * num + hexvar ] mov qword ptr [ rsi ] , rcx cmp edi , num jne hexvar xor eax , eax jmp hexvar mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rdx ] , rax mov eax , num ret
sltiu v0 , a0 , num beqz v0 , hexvar sll a0 , a0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , a0 , v0 lw v0 , ( v0 )
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , hexvar push hexvar call hexvar add ebx , hexvar call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , esi mov dword ptr [ eax + hexvar ] , edi mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov dword ptr [ eax + hexvar ] , edx pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a0 , zero , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , a3 addiu a2 , zero , hexvar lw gp , hexvar ( sp ) move a1 , zero addiu a0 , v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 move v0 , s0 lw v1 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw ra , hexvar ( sp ) sw v1 , hexvar ( s0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , num push hexvar push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov dword ptr [ rbp - hexvar ] , r9d mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] leave ret
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdx , rsp mov esi , hexvar mov edi , num call hexvar test eax , eax je hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu a2 , sp , hexvar addiu a1 , zero , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a1 , sp , hexvar move v0 , zero lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop b hexvar nop lw t9 , - hexvar ( gp )
push { fp , lr } add fp , sp , num sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar mov r2 , r3 mov r1 , hexvar mov r0 , num bl hexvar mov r3 , r0 cmp r3 , num bne hexvar sub r3 , fp , hexvar mov r1 , r3 mov r0 , hexvar bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp eax , num jne hexvar mov dword ptr [ esp ] , hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jbe hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar nop add esp , num pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( a0 )
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + num ] call hexvar test byte ptr [ rbx ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , hexvar call hexvar mov rdi , rbx pop rbx jmp hexvar nop word ptr [ rax + rax ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( a0 ) lw v0 , ( s0 ) andi v0 , v0 , num bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) jalr t9 lw a0 , num ( s0 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( s0 ) move a0 , s0 lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push r12 push rbp push rbx mov r12 , rsi mov rbp , qword ptr [ rdi ] mov esi , hexvar mov rdi , rbp call hexvar mov rbx , rax mov r12 , qword ptr [ r12 ] mov esi , hexvar mov rdi , r12 call hexvar test rax , rax je hexvar test rbx , rbx lea rdx , [ rip + hexvar ] cmove rbx , rdx mov rsi , rax mov rdi , rbx call hexvar test eax , eax jne hexvar mov rsi , r12 mov rdi , rbp call hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , esi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax ] push hexvar push edi call hexvar add esp , num mov esi , eax mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ eax ] push hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar test esi , esi lea edx , [ ebx - hexvar ] cmove esi , edx sub esp , num push eax push esi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push ebp push edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test eax , eax je hexvar test esi , esi mov edx , hexvar cmovs esi , edx mov edi , dword ptr [ eax ] sub esp , hexvar push edi call hexvar mov ebp , eax add esi , num add esp , hexvar cmp eax , esi jle hexvar sub esp , num push esi push edi call hexvar add esp , num push dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar test eax , eax je hexvar add esi , num cmp ebp , esi jg hexvar mov esi , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov ebx , edx mov r14 , rsi cmp edx , - num mov eax , hexvar cmovle ebx , eax mov r15 , qword ptr [ rdi ] mov rdi , r15 call hexvar mov ebp , eax nop dword ptr [ rax ] add ebx , num cmp ebx , ebp jge hexvar mov rdi , r15 mov esi , ebx call hexvar mov rdi , qword ptr [ rax ] mov rsi , r14 call hexvar test eax , eax jne hexvar jmp hexvar mov ebx , hexvar mov eax , ebx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) addiu v0 , zero , - num lw s2 , ( a0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov esi , dword ptr [ eax ] test edx , edx mov ecx , hexvar cmovns ecx , edx sub esp , hexvar mov ebp , ecx push esi add ebp , num call hexvar add esp , hexvar cmp eax , ebp mov edi , eax jg hexvar jmp hexvar nop lea esi , [ esi ] add ebp , num cmp edi , ebp je hexvar sub esp , num push ebp push esi call hexvar pop edx pop ecx push dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push r14 push rbx push rax mov ebx , esi mov r14 , rdi mov edi , esi call hexvar add ebx , - hexvar cmp ebx , num ja hexvar jmp qword ptr [ rbx * num + hexvar ] mov qword ptr [ r14 + hexvar ] , rax mov edi , num call hexvar mov rcx , rax mov qword ptr [ r14 + hexvar ] , rax mov eax , num test rcx , rcx jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov qword ptr [ r14 + hexvar ] , rax call hexvar mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rax ] mov esi , num call hexvar mov ecx , eax mov eax , num test ecx , ecx jne hexvar mov rdi , qword ptr [ r14 + hexvar ] call hexvar mov qword ptr [ r14 + hexvar ] , num jmp hexvar mov qword ptr [ r14 + hexvar ] , rax call hexvar mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rax ] xor esi , esi call hexvar test eax , eax je hexvar mov edi , hexvar call hexvar mov rcx , qword ptr [ r14 + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] jmp hexvar mov qword ptr [ r14 + hexvar ] , rax call hexvar mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rax ] mov esi , num call hexvar mov rax , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ rax ] mov esi , num call hexvar test eax , eax je hexvar mov edi , hexvar call hexvar mov rcx , qword ptr [ r14 + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] jmp hexvar mov qword ptr [ r14 + hexvar ] , rax call hexvar mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rax ] xor esi , esi call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu s0 , s0 , - hexvar sltiu v1 , s0 , num beqz v1 , hexvar lui v1 , hexvar sll s0 , s0 , num addiu v1 , v1 , hexvar addu s0 , v1 , s0 lw v1 , ( s0 ) jr v1 nop sw v0 , hexvar ( s1 )
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push esi sub esi , hexvar call hexvar add esp , hexvar cmp esi , num ja hexvar mov edx , dword ptr [ ebx + esi * num - hexvar ] mov dword ptr [ edi + hexvar ] , eax add edx , ebx jmp edx lea esi , [ esi ]
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push esi sub esi , hexvar call hexvar add esp , hexvar cmp esi , num ja hexvar mov edx , dword ptr [ ebx + esi * num - hexvar ] mov dword ptr [ edi + hexvar ] , eax add edx , ebx jmp edx lea esi , [ esi ]
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r4 , [ pc , hexvar ] ldr r5 , [ pc , hexvar ] ldr r0 , [ r4 , hexvar ] ldr r3 , [ r5 ] sub sp , sp , hexvar cmp r0 , num str r3 , [ sp , hexvar ] beq hexvar ldr r3 , [ r0 ] ands r6 , r3 , hexvar bne hexvar bl hexvar subs r7 , r0 , num bne hexvar add r3 , r4 , hexvar ldm r3 , { r2 , r3 } orrs r1 , r2 , r3 bne hexvar ldrb r1 , [ r4 , hexvar ] cmp r1 , num bne hexvar ldrb r1 , [ r4 , hexvar ] cmp r1 , num beq hexvar mov r3 , num str r3 , [ r4 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc } ssat sl , hexvar , lr , asr hexvar andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar test byte ptr [ eax ] , hexvar jne hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] mov esi , edx or esi , eax jne hexvar cmp byte ptr [ ebx + hexvar ] , num jne hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar mov dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar test byte ptr [ rdi ] , hexvar je hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov rbx , rax mov edx , num mov esi , hexvar mov edi , num call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar call hexvar test eax , eax je hexvar mov rbx , qword ptr [ rip + hexvar ] call hexvar mov rcx , rbx mov edx , hexvar mov esi , dword ptr [ rax ] mov edi , num mov eax , num call hexvar mov qword ptr [ rip + hexvar ] , num call hexvar mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar mov rdx , rsp mov esi , hexvar call hexvar mov rbp , qword ptr [ rip + hexvar ] mov rdi , rbp call hexvar mov ebx , eax call hexvar mov r12d , dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] test ebx , ebx sete dl movzx edx , dl sub eax , edx mov dword ptr [ rip + hexvar ] , eax mov edx , num mov rsi , rsp mov edi , num call hexvar test ebx , ebx je hexvar mov rcx , rbp mov edx , hexvar mov esi , r12d mov edi , num mov eax , num call hexvar jmp hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar lea rsi , [ rsp + hexvar ] call hexvar mov rcx , rax mov edx , hexvar mov esi , num mov rdi , qword ptr [ rip + hexvar ] mov eax , num call hexvar mov qword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar test byte ptr [ eax ] , hexvar jne hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] mov esi , edx or esi , eax jne hexvar cmp byte ptr [ ebx + hexvar ] , num jne hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar mov dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov ebp , ecx mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax sub esp , hexvar push eax call hexvar add esp , hexvar mov edi , hexvar test eax , eax jg hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r13 , rdx mov r15 , rsi mov r12 , rdi mov rdi , rcx xor esi , esi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov ebp , hexvar test eax , eax jle hexvar mov rdi , rbx mov esi , hexvar mov edx , hexvar mov ecx , num xor r8d , r8d mov r9 , r13 call hexvar test eax , eax jle hexvar mov rax , qword ptr [ r13 + hexvar ] mov rcx , qword ptr [ rax + num ] movsxd r8 , dword ptr [ rax ] xor r14d , r14d mov rdx , rsp mov rdi , rbx xor esi , esi call hexvar test eax , eax jle hexvar mov edi , dword ptr [ rsp ] mov esi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r14 , rax mov rax , qword ptr [ r13 + hexvar ] mov rcx , qword ptr [ rax + num ] movsxd r8 , dword ptr [ rax ] mov rdx , rsp mov rdi , rbx mov rsi , r14 call hexvar test eax , eax jle hexvar mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar movsxd rsi , dword ptr [ r15 ] call hexvar mov rdi , qword ptr [ r12 ] call hexvar mov qword ptr [ r12 ] , r14 mov eax , dword ptr [ rsp ] mov dword ptr [ r15 ] , eax mov ebp , num mov rdi , rbx call hexvar test r14 , r14 jne hexvar jmp hexvar mov ebp , hexvar jmp hexvar xor r14d , r14d mov rdi , rbx call hexvar test r14 , r14 je hexvar test ebp , ebp jne hexvar mov rdi , r14 call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r13 , rdx mov r15 , rsi mov r12 , rdi mov rdi , rcx xor esi , esi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov ebp , hexvar test eax , eax jle hexvar mov rdi , rbx mov esi , hexvar mov edx , hexvar mov ecx , num xor r8d , r8d mov r9 , r13 call hexvar test eax , eax jle hexvar mov rax , qword ptr [ r13 + hexvar ] mov rcx , qword ptr [ rax + num ] movsxd r8 , dword ptr [ rax ] xor r14d , r14d mov rdx , rsp mov rdi , rbx xor esi , esi call hexvar test eax , eax jle hexvar mov edi , dword ptr [ rsp ] mov esi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r14 , rax mov rax , qword ptr [ r13 + hexvar ] mov rcx , qword ptr [ rax + num ] movsxd r8 , dword ptr [ rax ] mov rdx , rsp mov rdi , rbx mov rsi , r14 call hexvar test eax , eax jle hexvar mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar movsxd rsi , dword ptr [ r15 ] call hexvar mov rdi , qword ptr [ r12 ] call hexvar mov qword ptr [ r12 ] , r14 mov eax , dword ptr [ rsp ] mov dword ptr [ r15 ] , eax mov ebp , num mov rdi , rbx call hexvar test r14 , r14 jne hexvar jmp hexvar mov ebp , hexvar jmp hexvar xor r14d , r14d mov rdi , rbx call hexvar test r14 , r14 je hexvar test ebp , ebp jne hexvar mov rdi , r14 call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r13 , rdx mov r15 , rsi mov r12 , rdi mov rdi , rcx xor esi , esi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov ebp , hexvar test eax , eax jle hexvar mov rdi , rbx mov esi , hexvar mov edx , hexvar mov ecx , num xor r8d , r8d mov r9 , r13 call hexvar test eax , eax jle hexvar mov rax , qword ptr [ r13 + hexvar ] mov rcx , qword ptr [ rax + num ] movsxd r8 , dword ptr [ rax ] xor r14d , r14d mov rdx , rsp mov rdi , rbx xor esi , esi call hexvar test eax , eax jle hexvar mov edi , dword ptr [ rsp ] mov esi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r14 , rax mov rax , qword ptr [ r13 + hexvar ] mov rcx , qword ptr [ rax + num ] movsxd r8 , dword ptr [ rax ] mov rdx , rsp mov rdi , rbx mov rsi , r14 call hexvar test eax , eax jle hexvar mov rdi , qword ptr [ r12 ] test rdi , rdi je hexvar movsxd rsi , dword ptr [ r15 ] call hexvar mov rdi , qword ptr [ r12 ] call hexvar mov qword ptr [ r12 ] , r14 mov eax , dword ptr [ rsp ] mov dword ptr [ r15 ] , eax mov ebp , num mov rdi , rbx call hexvar test r14 , r14 jne hexvar jmp hexvar mov ebp , hexvar jmp hexvar xor r14d , r14d mov rdi , rbx call hexvar test r14 , r14 je hexvar test ebp , ebp jne hexvar mov rdi , r14 call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar leave ret
push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx mov rbx , rdi jmp hexvar nop mov rbx , rax mov rax , qword ptr [ rbx + num ] test rax , rax jne hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax jne hexvar mov rsi , rbx mov rdi , rbp call r12
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 move s2 , a1 b hexvar move s1 , a2 move s0 , v1 move a1 , s0 move a0 , s1 move t9 , s2 jalr t9 nop bnez v0 , hexvar lw ra , hexvar ( sp ) lw v1 , ( s0 ) beqz v1 , hexvar nop lw v0 , num ( v1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 move s2 , a1 b hexvar move s1 , a2 move s0 , v1 move a1 , s0 move a0 , s1 move t9 , s2 jalr t9 nop bnez v0 , hexvar lw ra , hexvar ( sp ) lw v1 , ( s0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ esp + hexvar ] , hexvar mov esi , dword ptr [ esp + hexvar ] jbe hexvar lea eax , [ esi + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov esi , edi mov edi , dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] shr edx , hexvar mov dword ptr [ esp + hexvar ] , edx shl edx , hexvar lea eax , [ ebp + edx + hexvar ] mov dword ptr [ esp + num ] , eax sub esp , num push dword ptr [ edi + num ] push dword ptr [ esp + hexvar ] push dword ptr [ edi + hexvar ] push hexvar push esi add esi , hexvar push ebp add ebp , hexvar call hexvar add esp , hexvar cmp ebp , dword ptr [ esp + num ] jne hexvar mov eax , dword ptr [ esp + hexvar ] and dword ptr [ esp + hexvar ] , hexvar mov esi , edi add eax , num shl eax , hexvar add dword ptr [ esp + hexvar ] , eax add dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar lea eax , [ esi + hexvar ] sub esp , num push dword ptr [ esi + num ] push eax push dword ptr [ esi + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar lui v0 , hexvar addiu gp , gp , hexvar sltu v0 , a3 , v0 sw fp , hexvar ( sp ) sw s5 , hexvar ( sp ) move fp , a0 sw s3 , hexvar ( sp ) move s5 , a3 sw s2 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) move s2 , a2 sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bnez v0 , hexvar sw gp , hexvar ( sp ) addiu s7 , a0 , hexvar lui s6 , hexvar move s4 , a3 move s1 , a2 move s0 , a1 lw v0 , num ( fp )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ esp + hexvar ] , hexvar mov esi , dword ptr [ esp + hexvar ] jbe hexvar lea eax , [ esi + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov esi , edi mov edi , dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] shr edx , hexvar mov dword ptr [ esp + hexvar ] , edx shl edx , hexvar lea eax , [ ebp + edx + hexvar ] mov dword ptr [ esp + num ] , eax sub esp , num push dword ptr [ edi + num ] push dword ptr [ esp + hexvar ] push dword ptr [ edi + hexvar ] push hexvar push esi add esi , hexvar push ebp add ebp , hexvar call hexvar add esp , hexvar cmp ebp , dword ptr [ esp + num ] jne hexvar mov eax , dword ptr [ esp + hexvar ] and dword ptr [ esp + hexvar ] , hexvar mov esi , edi add eax , num shl eax , hexvar add dword ptr [ esp + hexvar ] , eax add dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar lea eax , [ esi + hexvar ] sub esp , num push dword ptr [ esi + num ] push eax push dword ptr [ esi + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov r15 , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ r15 + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rbp , [ rax + num ] movabs r14 , hexvar mov qword ptr [ rsp + num ] , r13 nop dword ptr [ rax ] movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ r15 + hexvar ] mov r9d , dword ptr [ r15 + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , rbp mov r8 , qword ptr [ rsp + hexvar ] call hexvar add r12 , r14 add rbx , r14 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp + num ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ r15 + hexvar ] mov r9d , dword ptr [ r15 + hexvar ] add r15 , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r8 , r15 call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax lea eax , [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub esp , num push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) addiu a1 , sp , hexvar sw a1 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 test al , al je hexvar movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm1 movaps xmmword ptr [ rsp + hexvar ] , xmm2 movaps xmmword ptr [ rsp + hexvar ] , xmm3 movaps xmmword ptr [ rsp + hexvar ] , xmm4 movaps xmmword ptr [ rsp + hexvar ] , xmm5 movaps xmmword ptr [ rsp + hexvar ] , xmm6 movaps xmmword ptr [ rsp + hexvar ] , xmm7 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov dword ptr [ rsp ] , num mov dword ptr [ rsp + num ] , hexvar lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rsi , rsp call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , sp , hexvar sw s0 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a2 , a0 sw a1 , hexvar ( sp ) addiu a1 , zero , num sw a3 , hexvar ( sp ) move a3 , v0 sw v0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , ( s0 ) lw a0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar move s1 , v0 lw a0 , hexvar ( sp ) move v0 , s1 lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a1 , hexvar sw gp , hexvar ( sp ) move s2 , a2 move s0 , a1 move a2 , zero addiu a1 , zero , hexvar jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw s0 , ( v0 ) sw s2 , num ( v0 ) sw v0 , hexvar ( s1 ) move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , a1
test rsi , rsi push r12 push rbp push rbx je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov r12d , edx call hexvar test rax , rax mov rbp , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov dword ptr [ rax + num ] , r12d mov qword ptr [ rbp + hexvar ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
test rsi , rsi push r12 push rbp push rbx je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov r12d , edx call hexvar test rax , rax mov rbp , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov dword ptr [ rax + num ] , r12d mov qword ptr [ rbp + hexvar ] , rax mov rax , rbp pop rbx pop rbp pop r12 ret
test rsi , rsi push r12 push rbp push rbx je hexvar mov edi , hexvar mov r12d , edx mov rbp , rsi call hexvar pxor xmm0 , xmm0 mov rbx , rax mov dword ptr [ rax ] , hexvar mov dword ptr [ rax + num ] , num mov edi , hexvar movups xmmword ptr [ rax + num ] , xmm0 call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbp mov dword ptr [ rax + num ] , r12d mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , dil mov byte ptr [ rbp - num ] , al mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] movzx edi , al call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov dl , byte ptr [ ebp - num ] mov byte ptr [ eax ] , dl mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , esi cmp dword ptr [ ecx ] , num sete dh mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , dh mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx ecx , byte ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx ecx , byte ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a0 sw a1 , hexvar ( fp ) sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lbu v0 , hexvar ( fp ) b hexvar nop lbu v0 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl jne hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
test rsi , rsi je hexvar movsxd rcx , dword ptr [ rdi + num ] test rcx , rcx jle hexvar mov r8 , qword ptr [ rdi ] xor edx , edx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r8 + rcx * num - num ] shld rdx , rdi , hexvar mov rax , rdx xor edx , edx div rsi shl rdx , hexvar mov eax , edi or rax , rdx xor edx , edx div rsi add rcx , - num jg hexvar mov rax , rdx ret
test rsi , rsi je hexvar movsxd rcx , dword ptr [ rdi + num ] test rcx , rcx jle hexvar mov r8 , qword ptr [ rdi ] xor edx , edx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r8 + rcx * num - num ] shld rdx , rdi , hexvar mov rax , rdx xor edx , edx div rsi shl rdx , hexvar mov eax , edi or rax , rdx xor edx , edx div rsi add rcx , - num jg hexvar mov rax , rdx ret
test rsi , rsi je hexvar movsxd rcx , dword ptr [ rdi + num ] test rcx , rcx jle hexvar mov r8 , qword ptr [ rdi ] xor edx , edx nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r8 + rcx * num - num ] shld rdx , rdi , hexvar mov rax , rdx xor edx , edx div rsi shl rdx , hexvar mov eax , edi or rax , rdx xor edx , edx div rsi add rcx , - num jg hexvar mov rax , rdx ret
push { r4 , r5 , r6 , lr } sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] mov r3 , num mov r4 , num str r3 , [ sp , hexvar ] str r4 , [ sp , hexvar ] ldr r3 , [ sp ] cmp r3 , num bne hexvar mvn r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] sub r3 , r3 , num str r3 , [ sp , hexvar ] b hexvar add r2 , sp , hexvar ldm r2 , { r1 , r2 } mov r3 , num mov r4 , num mov r4 , r1 mov r3 , num ldr r2 , [ sp , num ] ldr r1 , [ r2 ] ldr r2 , [ sp , hexvar ] lsl r2 , r2 , num add r2 , r1 , r2 ldr r2 , [ r2 ] mov r1 , r2 mov r2 , num orr r5 , r3 , r1 orr r6 , r4 , r2 ldr r3 , [ sp ] mov r4 , num mov r2 , r3 mov r3 , r4 mov r0 , r5 mov r1 , r6 bl hexvar mov r4 , r3 mov r3 , r2 str r3 , [ sp , hexvar ] str r4 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] sub r3 , r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bge hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov eax , dword ptr [ edi + num ] test eax , eax je hexvar lea esi , [ esi ] mov esi , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar test esi , esi mov eax , esi jne hexvar sub esp , hexvar push edi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw a0 , num ( a0 ) beqz a0 , hexvar nop lw s0 , ( a0 )
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + num ] test eax , eax je hexvar mov esi , dword ptr [ eax ] sub esp , hexvar push eax call hexvar mov eax , esi add esp , hexvar test esi , esi jne hexvar sub esp , hexvar push edi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , num ( a0 )
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14d , edx mov rbx , rsi mov rbp , rdi mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp + num ] , rax mov ecx , hexvar mov r15d , hexvar mov r12d , hexvar jmp hexvar call hexvar mov ecx , hexvar mov eax , hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , r12d jmp hexvar mov dword ptr [ rbp + hexvar ] , num mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test byte ptr [ rbp + hexvar ] , num mov ecx , hexvar cmove ecx , r15d jmp hexvar mov rax , qword ptr [ rbp + num ] mov rdi , rbp mov rsi , rbx mov edx , r14d call qword ptr [ rax + hexvar ] mov ecx , hexvar jmp hexvar add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] and r3 , r3 , num cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] blx r3 mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14d , edx mov rbx , rsi mov rbp , rdi mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp + num ] , rax mov ecx , hexvar mov r15d , hexvar mov r12d , hexvar jmp hexvar call hexvar mov ecx , hexvar mov eax , hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , r12d jmp hexvar mov dword ptr [ rbp + hexvar ] , num mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test byte ptr [ rbp + hexvar ] , num mov ecx , hexvar cmove ecx , r15d jmp hexvar mov rax , qword ptr [ rbp + num ] mov rdi , rbp mov rsi , rbx mov edx , r14d call qword ptr [ rax + hexvar ] mov ecx , hexvar jmp hexvar add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop sw s1 , hexvar ( sp ) addiu a3 , zero , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , num addiu a0 , zero , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) addiu a1 , sp , hexvar lui v0 , hexvar lw a0 , - hexvar ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 addiu a3 , zero , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , num addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop bnez v0 , hexvar lw gp , hexvar ( sp ) b hexvar move s0 , zero addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp )
push rbp push rbx sub rsp , hexvar mov ebp , edi cmp qword ptr [ rip + hexvar ] , num jne hexvar mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar cmp qword ptr [ rip + hexvar ] , num je hexvar mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar jmp hexvar mov edi , hexvar mov esi , hexvar call hexvar mov rbx , rax mov qword ptr [ rip + hexvar ] , rax mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar test rbx , rbx je hexvar mov dword ptr [ rsp ] , ebp mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rsp call hexvar test rax , rax je hexvar mov rbx , rax mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar jmp hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , ebp mov dword ptr [ rax + hexvar ] , num call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar jmp hexvar mov rdi , rbx call hexvar mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop rbp ret
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebx + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test ecx , ecx je hexvar lea ebp , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , edi push hexvar push ebp push num push num call hexvar pop eax pop edx lea eax , [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar push hexvar push ebp push num push hexvar call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) lui s2 , hexvar lw s3 , - hexvar ( gp ) sw s4 , hexvar ( sp ) move s4 , a0 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s3 ) lw v0 , - hexvar ( s2 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar nop lui s0 , hexvar lw t9 , - hexvar ( gp ) addiu a3 , zero , hexvar sw s4 , hexvar ( sp ) addiu a2 , s0 , hexvar addiu a1 , zero , num bal hexvar addiu a0 , zero , num addiu a1 , sp , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , - hexvar ( s2 ) lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) addiu a3 , zero , hexvar addiu a2 , s0 , hexvar addiu a1 , zero , num bal hexvar addiu a0 , zero , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s1 lw v1 , ( s3 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop bnez v0 , hexvar lw gp , hexvar ( sp ) b hexvar move s1 , zero lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 )
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , hexvar mov rcx , qword ptr [ rsi ] cmp rcx , qword ptr [ rsi + num ] je hexvar mov rax , qword ptr [ rsi + hexvar ] lea rsi , [ rax + rcx * num ] mov rdi , rbp call hexvar test al , al je hexvar add qword ptr [ rbx ] , num add rsp , hexvar pop rbx pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov esi , edx mov ebp , ecx mov eax , dword ptr [ edx ] cmp eax , dword ptr [ edx + num ] je hexvar mov edx , dword ptr [ esi ] mov eax , dword ptr [ esi + num ] lea edx , [ eax + edx * num ] mov ecx , ebp mov eax , edi call hexvar test al , al je hexvar add dword ptr [ esi ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] cmp r2 , r3 bne hexvar ldr r3 , [ fp , - hexvar ] ldr r0 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num mov r2 , num mov r1 , r3 bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - num ] lsl r3 , r3 , num add r3 , r2 , r3 mov r2 , num str r2 , [ r3 ] ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - num ] cmp r2 , r3 blo hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r2 , [ fp , - hexvar ] mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] add r2 , r3 , num ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] mov r3 , num b hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov cl , al mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , cl jge hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar xor al , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar cmp dword ptr [ ebp - num ] , num jne hexvar lea eax , [ ebp - hexvar ] mov cx , word ptr [ hexvar ] mov word ptr [ ebp - hexvar ] , cx mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov cl , al mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , cl jge hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar xor al , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar test byte ptr [ ebp - num ] , num je hexvar lea eax , [ ebp - hexvar ] mov cx , word ptr [ hexvar ] mov word ptr [ ebp - hexvar ] , cx mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov cl , al mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , cl jge hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num call hexvar mov dl , al xor dl , hexvar and dl , num mov ah , num mov dh , ah xor dh , num and al , dh xor ah , num and ah , num and dh , num or dl , al or ah , dh xor dl , ah mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar cmp dword ptr [ ebp - num ] , num jne hexvar lea eax , [ ebp - hexvar ] mov cx , word ptr [ hexvar ] mov word ptr [ ebp - hexvar ] , cx mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov edx , eax lea eax , [ ebx + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + num ] jge hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx mov eax , dword ptr [ eax ] sub esp , num push num push eax call hexvar add esp , hexvar xor eax , num test al , al jne hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov word ptr [ ebp - hexvar ] , hexvar sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar nop mov eax , dword ptr [ ebp - hexvar ] xor eax , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov dword ptr [ rsp + hexvar ] , esi mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rcx cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar cmp dword ptr [ rsp + hexvar ] , num je hexvar cmp dword ptr [ rsp + hexvar ] , num jl hexvar cmp dword ptr [ rsp + hexvar ] , hexvar jle hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar cmp dword ptr [ rsp + hexvar ] , num je hexvar mov dword ptr [ rsp + hexvar ] , num jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] cmp dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi je hexvar mov eax , dword ptr [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , eax jmp hexvar mov eax , num mov dword ptr [ rsp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ rsp + hexvar ] xor ecx , ecx mov rdx , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rdx mov edx , eax mov r8 , qword ptr [ rsp + num ] call hexvar mov dword ptr [ rsp + hexvar ] , num mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , num jne hexvar test edx , edx mov eax , num cmovne eax , edx xor ebx , ebx mov rsi , rdi mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , num jne hexvar test edx , edx mov eax , num cmovne eax , edx xor ebx , ebx mov rsi , rdi mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
push rbx test rdi , rdi je hexvar mov r8 , rcx test rcx , rcx je hexvar lea eax , [ rdx - num ] cmp eax , num jae hexvar mov ebx , num cmp esi , num jne hexvar test edx , edx mov eax , num cmovne eax , edx xor ebx , ebx mov rsi , rdi mov edx , eax xor ecx , ecx call hexvar mov eax , ebx pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop move v0 , zero b hexvar nop addiu v0 , fp , hexvar lw a1 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) move s1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) move s3 , a0 jal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 addiu v0 , zero , - num beq s0 , v0 , hexvar move a1 , s0 addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw t9 , ( v0 ) lw a0 , num ( s2 )
push r13 push r12 mov r12 , rdi push rbp push rbx mov ebp , edx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp + num ] , rdi call hexvar cmp rax , - num je hexvar lea rdi , [ rsp + num ] mov rsi , rax mov rbx , rax call hexvar test rax , rax mov r13 , rax je hexvar mov edi , dword ptr [ rax + num ] mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] call qword ptr [ rax ] cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] xor edx , edx lea rcx , [ rsp + hexvar ] mov rsi , r13 mov rax , qword ptr [ rdi ] call qword ptr [ rax + hexvar ] mov rsi , rbx mov rdi , r12 call hexvar test rax , rax jne hexvar mov rax , qword ptr [ rsp + num ] mov rbx , qword ptr [ rsp + hexvar ] mov edi , dword ptr [ r13 + num ] mov rax , qword ptr [ rax ] add rbx , r13 call qword ptr [ rax + hexvar ] test eax , eax je hexvar cmp ebp , dword ptr [ rbx + num ] je hexvar sub eax , num lea rax , [ rbx + rax * num + num ] jmp hexvar nop dword ptr [ rax ] cmp dword ptr [ rbx + num ] , ebp je hexvar add rbx , num cmp rbx , rax jne hexvar mov esi , hexvar mov rdi , r12 call hexvar xor eax , eax mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov qword ptr [ rsp + num ] , rdi mov ebp , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar cmp rax , - num je hexvar mov rbx , rax lea rdi , [ rsp + num ] mov rsi , rax call hexvar mov r13 , rax test rax , rax je hexvar mov edi , dword ptr [ rax + num ] mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] call qword ptr [ rax ] cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] lea rcx , [ rsp + hexvar ] mov rax , qword ptr [ rdi ] mov edx , num mov rsi , r13 call qword ptr [ rax + hexvar ] mov rsi , rbx mov rdi , r12 call hexvar test rax , rax jne hexvar mov r14 , r13 add r14 , qword ptr [ rsp + hexvar ] mov rbx , r14 mov edi , dword ptr [ r13 + num ] mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] call qword ptr [ rax + hexvar ] test eax , eax je hexvar cmp ebp , dword ptr [ r14 + num ] je hexvar lea eax , [ rax - num ] lea rax , [ r14 + rax * num + num ] add rbx , num cmp rbx , rax je hexvar cmp dword ptr [ rbx + num ] , ebp jne hexvar mov esi , dword ptr [ rbx ] mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar mov esi , hexvar mov rdi , r12 call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp ebp , dword ptr [ rax + hexvar ] je hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar cmp dword ptr [ rax + hexvar ] , ebp jne hexvar mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov esi , hexvar mov rdi , r12 call hexvar mov eax , num mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov edx , dword ptr [ rbp - num ] mov dword ptr [ rcx ] , edx cmp dword ptr [ rcx ] , hexvar sete sil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rbp - num ] sub edi , hexvar sete al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] mov dword ptr [ rbp - hexvar ] , edi jmp rdx mov eax , dword ptr [ rbp - num ] sub eax , hexvar sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] pop rbp ret
mov edx , dword ptr [ ebx + hexvar ] sub esp , hexvar push num push dword ptr [ ebp - hexvar ] push num push num push dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ ebp - hexvar ] jne hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ edx ] call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar mov edx , dword ptr [ ebp - hexvar ] push edx push eax push num push num call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebx + hexvar ] , eax jmp hexvar
mov edx , dword ptr [ ebx + hexvar ] sub esp , hexvar push num push dword ptr [ ebp - hexvar ] push num push num push dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ ebp - hexvar ] jne hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ edx ] call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar mov edx , dword ptr [ ebp - hexvar ] push edx push eax push num push num call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebx + hexvar ] , eax jmp hexvar
mov edx , dword ptr [ ebx + hexvar ] sub esp , hexvar push num push dword ptr [ ebp - hexvar ] push num push num push dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ ebp - hexvar ] jne hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ edx ] call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar mov edx , dword ptr [ ebp - hexvar ] push edx push eax push num push num call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebx + hexvar ] , eax jmp hexvar
mov edx , dword ptr [ ebx + hexvar ] sub esp , hexvar push num push dword ptr [ ebp - hexvar ] push num push num push dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ ebp - hexvar ] jne hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ edx ] call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar mov edx , dword ptr [ ebp - hexvar ] push edx push eax push num push num call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebx + hexvar ] , eax jmp hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx cmp qword ptr [ rax ] , num setne dl mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , hexvar cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rcx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] add rsp , hexvar pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + num ] add eax , hexvar mov ecx , dword ptr [ edx + hexvar ] test ecx , ecx je hexvar sub esp , num push esi push eax push edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call ecx add esp , hexvar add esp , num mov eax , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rcx mov r15 , rdx mov r12 , rsi mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + hexvar ] , rax lea r13 , [ rdi + hexvar ] mov eax , hexvar mov ebp , hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , ebp nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rcx , qword ptr [ rsp + num ] mov rax , qword ptr [ rsp + num ] mov r9 , qword ptr [ rax + hexvar ] mov rdi , r15 mov rsi , r12 mov rdx , r14 mov r8 , r13 call hexvar mov eax , hexvar jmp hexvar mov rcx , qword ptr [ rsp + num ] mov r9d , dword ptr [ rbx + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov rdi , r15 mov rsi , r12 mov rdx , r14 mov r8 , r13 call rax mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rax mov r8 , rdi mov rax , qword ptr [ rdi + hexvar ] mov r10 , qword ptr [ rax + hexvar ] test r10 , r10 je hexvar mov r9d , dword ptr [ r8 + hexvar ] add r8 , hexvar mov rdi , rdx mov rdx , rcx mov rcx , rax call r10
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esi - num ] cmp eax , num ja hexvar test edi , edi je hexvar sub esp , num push edi push esi push ebp call hexvar add esp , hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push num mov ecx , edi mov edx , dword ptr [ esp + hexvar ] mov eax , ebp call hexvar add esp , hexvar cmp eax , - num je hexvar cmp dword ptr [ esp + hexvar ] , num sbb edx , edx and edx , hexvar add edx , hexvar mov ecx , dword ptr [ esp + num ] mov dword ptr [ ecx + hexvar ] , edx mov dword ptr [ ecx + hexvar ] , esi mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , a3 , - num sltiu v0 , v0 , num beqz v0 , hexvar move s0 , a1 move s2 , a2 beqz a2 , hexvar move s1 , a3 move a1 , a3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) addiu v0 , sp , hexvar sw v0 , hexvar ( sp ) addiu a3 , zero , num move a2 , s2 move a1 , s0 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) addiu v1 , zero , - num beq v0 , v1 , hexvar lui a0 , hexvar lui v1 , hexvar movn v1 , a0 , s0 move s0 , v1 lw v1 , hexvar ( sp ) sw s0 , hexvar ( v1 ) sw s1 , hexvar ( v1 ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a1 , zero , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar nop lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx xor ecx , ecx mov dword ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar sub esp , num push hexvar push dword ptr [ ebp - hexvar ] mov ebx , eax call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edx , dword ptr [ ebp + hexvar ] sub esp , num push dword ptr [ ebp - hexvar ] push edx push dword ptr [ ebp - hexvar ] mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov edx , hexvar jmp hexvar mov edx , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lw v1 , hexvar ( fp ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lw v1 , hexvar ( fp ) addiu v0 , zero , num beq v1 , v0 , hexvar nop addiu a1 , zero , hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar sw v0 , hexvar ( sp ) addiu a3 , zero , num lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar b hexvar nop lui v0 , hexvar lw v1 , hexvar ( fp ) sw v0 , hexvar ( v1 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , hexvar bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] add r3 , r3 , num ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] b hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] add r2 , r3 , num cmp r3 , num movlt r3 , r2 movge r3 , r3 asr r3 , r3 , num add r3 , r3 , num lsl r3 , r3 , num ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] b hexvar ldr r3 , [ fp , - hexvar ] b hexvar ldr r0 , [ fp , - num ] bl hexvar str r0 , [ fp , - hexvar ] b hexvar mov r0 , r3 sub sp , fp , num pop { fp , pc }
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , eax mov eax , edx jmp hexvar add dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ esi + num ] cmp eax , dword ptr [ esi + num ] jae hexvar lea edx , [ eax + num ] mov dword ptr [ esi + num ] , edx movzx eax , byte ptr [ eax ] cmp eax , hexvar je hexvar cmp eax , num jne hexvar mov byte ptr [ ebx + hexvar ] , num mov edx , dword ptr [ ebx + hexvar ] lea eax , [ edx + num ] test edx , edx cmovns eax , edx sar eax , num lea eax , [ eax * num + num ] mov dword ptr [ ebx + hexvar ] , eax jmp hexvar sub esp , hexvar push esi call hexvar add esp , hexvar jmp hexvar add esp , num pop ebx pop esi ret
push rbx mov eax , esi mov rbx , rdi jmp hexvar nop dword ptr [ rax + rax ] cmp eax , num jne hexvar mov edx , dword ptr [ rip + hexvar ] mov byte ptr [ rip + hexvar ] , num lea eax , [ rdx + num ] test edx , edx cmovns eax , edx sar eax , num lea eax , [ rax * num + num ] mov dword ptr [ rip + hexvar ] , eax mov rax , qword ptr [ rbx + num ] cmp rax , qword ptr [ rbx + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rbx + num ] , rdx movzx eax , byte ptr [ rax ] cmp eax , hexvar jne hexvar add dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbx + num ] cmp rax , qword ptr [ rbx + hexvar ] jb hexvar mov rdi , rbx call hexvar jmp hexvar nop pop rbx ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , num mov eax , edx jmp hexvar lea esi , [ esi ] lea edi , [ edi ] cmp eax , num jne hexvar mov edx , dword ptr [ ebx + hexvar ] mov byte ptr [ ebx + hexvar ] , num lea eax , [ edx + num ] test edx , edx cmovns eax , edx sar eax , num lea eax , [ eax * num + num ] mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ esi + num ] cmp eax , dword ptr [ esi + num ] jae hexvar lea edx , [ eax + num ] mov dword ptr [ esi + num ] , edx movzx eax , byte ptr [ eax ] cmp eax , hexvar jne hexvar add dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ esi + num ] cmp eax , dword ptr [ esi + num ] jb hexvar sub esp , hexvar push esi call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ] add esp , num pop ebx pop esi ret
push { fp , lr } umull fp , ip , r0 , r1 adds r3 , ip , num movne r3 , num cmp fp , num blt hexvar cmp r3 , num bne hexvar bl hexvar cmp r0 , num popne { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , hexvar xor edx , edx div dword ptr [ ebp - num ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) move a0 , zero lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) multu v1 , v0 mflo v1 mfhi v0 srl a3 , v0 , num move a2 , zero beqz a3 , hexvar nop addiu a0 , zero , num bgez v1 , hexvar nop addiu a0 , zero , num move v0 , a0 andi v0 , v0 , num andi v0 , v0 , hexvar bnez v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
cmp r1 , num cmpne r0 , num push { r4 , r5 , r6 , lr } moveq r4 , num movne r5 , r0 moveq r5 , r4 movne r4 , r1 mov r0 , r5 mov r1 , r4 bl hexvar cmp r0 , num popne { r4 , r5 , r6 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , a0 lw gp , hexvar ( sp ) addiu a0 , v0 , num lw t9 , - hexvar ( gp ) bal hexvar move s0 , v0 move a2 , s0 lw gp , hexvar ( sp ) addu s0 , v0 , s0 move a1 , s1 move a0 , v0 sb zero , ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar nop
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r7 , [ pc , hexvar ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r7 ] sub sp , sp , num cmp r3 , num str r2 , [ sp , num ] beq hexvar ldr r4 , [ r3 ] cmp r4 , num beq hexvar add r6 , r4 , hexvar mov r5 , r1 mov r8 , r0 mov r1 , sp mov r0 , r6 mov r2 , hexvar bl hexvar ldr r3 , [ sp ] str r0 , [ r5 , hexvar ] cmp r6 , r3 beq hexvar add r6 , r4 , hexvar mov r0 , r6 mov r2 , hexvar mov r1 , sp bl hexvar ldr r3 , [ sp ] str r0 , [ r5 , hexvar ] cmp r6 , r3 beq hexvar add r6 , r4 , hexvar mov r0 , r6 mov r2 , hexvar mov r1 , sp bl hexvar ldr r3 , [ sp ] str r0 , [ r5 , hexvar ] cmp r6 , r3 beq hexvar add r4 , r4 , hexvar mov r1 , sp mov r0 , r4 mov r2 , num bl hexvar ldr r3 , [ sp ] str r0 , [ r5 , hexvar ] cmp r4 , r3 beq hexvar mov r3 , num mov r0 , r3 ldr r2 , [ r8 , hexvar ] ldr r2 , [ r2 , num ] str r3 , [ r5 , hexvar ] str r2 , [ r5 , hexvar ] ldr r2 , [ sp , num ] ldr r3 , [ r7 ] cmp r2 , r3 bne hexvar add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov esi , dword ptr [ eax ] test esi , esi je hexvar sub esp , num lea edx , [ esi + hexvar ] push hexvar lea ebp , [ esp + hexvar ] push ebp push edx mov dword ptr [ esp + hexvar ] , edx call hexvar add esp , hexvar mov edx , dword ptr [ esp + num ] mov dword ptr [ edi + hexvar ] , eax cmp edx , dword ptr [ esp + hexvar ] je hexvar lea edx , [ esi + hexvar ] sub esp , num push hexvar push ebp push edx mov dword ptr [ esp + hexvar ] , edx call hexvar add esp , hexvar mov edx , dword ptr [ esp + num ] mov dword ptr [ edi + hexvar ] , eax cmp edx , dword ptr [ esp + hexvar ] je hexvar lea edx , [ esi + hexvar ] sub esp , num push hexvar push ebp push edx mov dword ptr [ esp + hexvar ] , edx call hexvar add esp , hexvar mov edx , dword ptr [ esp + num ] mov dword ptr [ edi + hexvar ] , eax cmp edx , dword ptr [ esp + hexvar ] je hexvar sub esp , num add esi , hexvar push num push ebp push esi call hexvar add esp , hexvar mov dword ptr [ edi + hexvar ] , eax cmp esi , dword ptr [ esp + hexvar ] je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ edi + hexvar ] , edx mov dword ptr [ edi + hexvar ] , eax xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov esi , dword ptr [ eax ] test esi , esi je hexvar sub esp , num lea edx , [ esi + hexvar ] push hexvar lea ebp , [ esp + hexvar ] push ebp push edx mov dword ptr [ esp + hexvar ] , edx call hexvar add esp , hexvar mov edx , dword ptr [ esp + num ] mov dword ptr [ edi + hexvar ] , eax cmp edx , dword ptr [ esp + hexvar ] je hexvar lea edx , [ esi + hexvar ] sub esp , num push hexvar push ebp push edx mov dword ptr [ esp + hexvar ] , edx call hexvar add esp , hexvar mov edx , dword ptr [ esp + num ] mov dword ptr [ edi + hexvar ] , eax cmp edx , dword ptr [ esp + hexvar ] je hexvar lea edx , [ esi + hexvar ] sub esp , num push hexvar push ebp push edx mov dword ptr [ esp + hexvar ] , edx call hexvar add esp , hexvar mov edx , dword ptr [ esp + num ] mov dword ptr [ edi + hexvar ] , eax cmp edx , dword ptr [ esp + hexvar ] je hexvar sub esp , num add esi , hexvar push num push ebp push esi call hexvar add esp , hexvar mov dword ptr [ edi + hexvar ] , eax cmp esi , dword ptr [ esp + hexvar ] je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ edi + hexvar ] , edx mov dword ptr [ edi + hexvar ] , eax xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r7 , [ pc , hexvar ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r7 ] sub sp , sp , num cmp r3 , num str r2 , [ sp , num ] beq hexvar ldr r4 , [ r3 ] cmp r4 , num beq hexvar add r6 , r4 , hexvar mov r5 , r1 mov r8 , r0 mov r1 , sp mov r0 , r6 mov r2 , hexvar bl hexvar ldr r3 , [ sp ] str r0 , [ r5 , hexvar ] cmp r6 , r3 beq hexvar add r6 , r4 , hexvar mov r0 , r6 mov r2 , hexvar mov r1 , sp bl hexvar ldr r3 , [ sp ] str r0 , [ r5 , hexvar ] cmp r6 , r3 beq hexvar add r6 , r4 , hexvar mov r0 , r6 mov r2 , hexvar mov r1 , sp bl hexvar ldr r3 , [ sp ] str r0 , [ r5 , hexvar ] cmp r6 , r3 beq hexvar add r4 , r4 , hexvar mov r1 , sp mov r0 , r4 mov r2 , num bl hexvar ldr r3 , [ sp ] str r0 , [ r5 , hexvar ] cmp r4 , r3 beq hexvar mov r3 , num mov r0 , r3 ldr r2 , [ r8 , hexvar ] ldr r2 , [ r2 , num ] str r3 , [ r5 , hexvar ] str r2 , [ r5 , hexvar ] ldr r2 , [ sp , num ] ldr r3 , [ r7 ] cmp r2 , r3 bne hexvar add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push r13 push r12 mov r12 , rdi push rbp push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar movsxd rbp , eax cmp ebp , hexvar jg hexvar test ebp , ebp mov r8d , hexvar cmovne r8 , rbp cmp qword ptr [ rbx + hexvar ] , num jne hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov edi , num call hexvar xor eax , eax mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) bal hexvar nop move s1 , v0 slti v0 , v0 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop move s1 , v0 slti v0 , v0 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) addiu v1 , zero , hexvar lw a0 , hexvar ( s0 ) or v0 , v0 , a0 bnez v0 , hexvar movn v1 , s1 , s1 lw v0 , hexvar ( s0 ) beqz v0 , hexvar lui a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num move v0 , zero lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s2 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( s0 )
mov r3 , num push { r4 , r5 , r6 , r7 , lr } ldr r6 , [ pc , hexvar ] sub sp , sp , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ r6 ] mov r7 , r0 str r3 , [ sp , hexvar ] mov r5 , r1 bl hexvar cmp r0 , hexvar bgt hexvar ldr r3 , [ r5 , hexvar ] cmp r0 , num movne r2 , r0 moveq r2 , hexvar cmp r3 , num mov r4 , r0 bne hexvar ldr r3 , [ r5 , hexvar ] cmp r3 , num beq hexvar mov r0 , num bl hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , hexvar mov rdx , qword ptr [ rsi + num ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov dword ptr [ rsp + num ] , num test rdx , rdx je hexvar cmp byte ptr [ rdx + hexvar ] , hexvar je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar cmp byte ptr [ rdx + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] mov eax , dword ptr [ rsp + num ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
lui gp , hexvar lw a2 , num ( a1 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw s2 , hexvar ( sp ) move s2 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) beqz a2 , hexvar addiu v0 , zero , hexvar lbu v1 , hexvar ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push esi push ebx sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , num mov ecx , dword ptr [ ebx + num ] test ecx , ecx je hexvar cmp byte ptr [ ecx + hexvar ] , hexvar je hexvar mov ecx , dword ptr [ ebx + num ] test ecx , ecx je hexvar cmp byte ptr [ ecx + hexvar ] , hexvar je hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov ebp , ecx mov r15d , edx mov r14 , rsi mov rbx , rdi test ecx , ecx je hexvar mov rdi , r14 call hexvar test eax , eax jne hexvar mov esi , hexvar mov ecx , hexvar mov rdi , rbx mov edx , r15d xor eax , eax call hexvar mov rdi , r14 call hexvar test eax , eax jne hexvar mov esi , hexvar mov rdi , rbx call hexvar mov rdi , r14 call hexvar test eax , eax jle hexvar test ebp , ebp je hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop mov esi , hexvar mov ecx , hexvar mov rdi , rbx mov edx , r15d xor eax , eax call hexvar mov rdi , r14 mov esi , ebp call hexvar mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test rcx , rcx je hexvar mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov rdi , rbx mov rsi , rcx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx mov rsi , rdx call hexvar mov esi , hexvar mov rdi , rbx call hexvar add ebp , num mov rdi , r14 call hexvar cmp ebp , eax jl hexvar jmp hexvar xor ebp , ebp nop test ebp , ebp je hexvar mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar mov rdi , r14 mov esi , ebp call hexvar mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test rcx , rcx je hexvar mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar jmp hexvar mov rdi , rbx mov rsi , rcx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx mov rsi , rdx call hexvar add ebp , num mov rdi , r14 call hexvar cmp ebp , eax jl hexvar add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test edi , edi je hexvar test ebp , ebp jne hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar test eax , eax je hexvar lea eax , [ ebx - hexvar ] xor esi , esi mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar test esi , esi jle hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , num push esi push edi call hexvar mov edx , dword ptr [ eax + num ] add esp , hexvar test edx , edx je hexvar mov eax , dword ptr [ eax + num ] test eax , eax je hexvar push eax lea eax , [ ebx - hexvar ] push edx push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test ebp , ebp jne hexvar add esi , num sub esp , hexvar push edi call hexvar add esp , hexvar cmp eax , esi jle hexvar test ebp , ebp je hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + num ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar jmp hexvar nop lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar jmp hexvar sub esp , num push edx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar jmp hexvar lea esi , [ esi ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov ebp , ecx mov r15d , edx mov r14 , rsi mov rbx , rdi test ecx , ecx je hexvar mov rdi , r14 call hexvar test eax , eax jne hexvar mov esi , hexvar mov ecx , hexvar mov rdi , rbx mov edx , r15d xor eax , eax call hexvar mov rdi , r14 call hexvar test eax , eax jne hexvar mov esi , hexvar mov rdi , rbx call hexvar mov rdi , r14 call hexvar test eax , eax jle hexvar test ebp , ebp je hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop mov esi , hexvar mov ecx , hexvar mov rdi , rbx mov edx , r15d xor eax , eax call hexvar mov rdi , r14 mov esi , ebp call hexvar mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test rcx , rcx je hexvar mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov rdi , rbx mov rsi , rcx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx mov rsi , rdx call hexvar mov esi , hexvar mov rdi , rbx call hexvar add ebp , num mov rdi , r14 call hexvar cmp ebp , eax jl hexvar jmp hexvar xor ebp , ebp nop test ebp , ebp je hexvar mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar mov rdi , r14 mov esi , ebp call hexvar mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test rcx , rcx je hexvar mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar jmp hexvar mov rdi , rbx mov rsi , rcx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx mov rsi , rdx call hexvar add ebp , num mov rdi , r14 call hexvar cmp ebp , eax jl hexvar add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov ebp , ecx mov r15d , edx mov r14 , rsi mov rbx , rdi test ecx , ecx je hexvar mov rdi , r14 call hexvar test eax , eax jne hexvar mov esi , hexvar mov ecx , hexvar mov rdi , rbx mov edx , r15d xor eax , eax call hexvar mov rdi , r14 call hexvar test eax , eax jne hexvar mov esi , hexvar mov rdi , rbx call hexvar mov rdi , r14 call hexvar test eax , eax jle hexvar test ebp , ebp je hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop mov esi , hexvar mov ecx , hexvar mov rdi , rbx mov edx , r15d xor eax , eax call hexvar mov rdi , r14 mov esi , ebp call hexvar mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test rcx , rcx je hexvar mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov rdi , rbx mov rsi , rcx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx mov rsi , rdx call hexvar mov esi , hexvar mov rdi , rbx call hexvar add ebp , num mov rdi , r14 call hexvar cmp ebp , eax jl hexvar jmp hexvar xor ebp , ebp nop test ebp , ebp je hexvar mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar mov rdi , r14 mov esi , ebp call hexvar mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ rax + hexvar ] test rdx , rdx je hexvar test rcx , rcx je hexvar mov esi , hexvar mov rdi , rbx xor eax , eax call hexvar jmp hexvar mov rdi , rbx mov rsi , rcx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx mov rsi , rdx call hexvar add ebp , num mov rdi , r14 call hexvar cmp ebp , eax jl hexvar add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp ecx , num mov dword ptr [ ebp - num ] , eax jne hexvar mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx jne hexvar mov edx , dword ptr [ eax + hexvar ] add edx , num mov dword ptr [ eax + hexvar ] , edx nop pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] add r3 , r3 , num ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] mov r0 , r0 add sp , fp , num pop { fp } bx lr strheq fp , [ r4 ] , -r8 strheq fp , [ r4 ] , -ip
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] test esi , esi sete bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ hexvar ] jmp eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar cmp eax , num setg bl and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + hexvar ] cmp esi , dword ptr [ edi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar cmp eax , num setg bl and bl , num movzx eax , bl add esp , hexvar pop esi pop edi pop ebx pop ebp ret
sub rsp , num mov eax , dword ptr [ rdx + hexvar ] test eax , eax jne hexvar mov rax , rsi mov rcx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] call hexvar test eax , eax setg al add rsp , num ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar lea edx , [ eax - hexvar ] push edx push hexvar lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar lea eax , [ ebp - hexvar ] sub esp , num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] push dword ptr [ eax + hexvar ] push dword ptr [ eax + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax setg al mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sltiu v0 , a0 , num sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s3 , v0 move a0 , s0 lw gp , hexvar ( sp ) move s1 , v0 lw s2 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , s3 sw s2 , ( s1 ) lw ra , hexvar ( sp ) move v0 , s0 lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sltiu v0 , a0 , num bnez v0 , hexvar move s0 , a0 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov dword ptr [ rbp - num ] , edi cmp eax , dword ptr [ rbp - num ] jg hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov edi , dword ptr [ rbp - num ] call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov edi , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - num ] call hexvar mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , edi call hexvar mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edi mov edi , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
cmp r0 , num push { r4 , r5 , r6 , lr } mov r4 , r0 bhi hexvar bl hexvar mov r6 , r0 bl hexvar mov r5 , r0 mov r0 , r4 mov r4 , r6 ldr r6 , [ r5 ] bl hexvar str r6 , [ r5 ] mov r0 , r4 pop { r4 , r5 , r6 , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar test edi , edi je hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ edi + edi * num + num ] push eax call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar mov ecx , eax test edi , edi jle hexvar lea ecx , [ edi + edi * num ] add ecx , eax movzx edx , byte ptr [ esi ] shr dl , num movzx edx , dl movzx edx , byte ptr [ ebx + edx - hexvar ] mov byte ptr [ eax ] , dl movzx edx , byte ptr [ esi ] and edx , hexvar movzx edx , byte ptr [ ebx + edx - hexvar ] mov byte ptr [ eax + num ] , dl add eax , num mov byte ptr [ eax - num ] , hexvar add esi , num cmp ecx , eax jne hexvar mov byte ptr [ ecx - num ] , num mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push rbx push rax xor eax , eax test rdi , rdi je hexvar mov r14 , rsi test rsi , rsi je hexvar mov rbx , rdi lea edi , [ r14 + r14 * num ] add edi , num mov esi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rcx , rax test r14 , r14 jle hexvar mov r8d , r14d and r8d , num cmp r14 , num jne hexvar mov rcx , rax test r8 , r8 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r14 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r2 , [ sp , num ] mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 add r3 , r3 , num ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldrb r3 , [ r3 ] lsr r3 , r3 , num and r3 , r3 , hexvar and r2 , r3 , hexvar ldr r3 , [ sp , hexvar ] add r1 , r3 , num str r1 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldrb r2 , [ r1 , r2 ] strb r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldrb r3 , [ r3 ] and r2 , r3 , hexvar ldr r3 , [ sp , hexvar ] add r1 , r3 , num str r1 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldrb r2 , [ r1 , r2 ] strb r2 , [ r3 ] ldr r3 , [ sp , hexvar ] add r2 , r3 , num str r2 , [ sp , hexvar ] mov r2 , hexvar strb r2 , [ r3 ] ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r2 , r3 blt hexvar ldr r3 , [ sp , hexvar ] sub r3 , r3 , num mov r2 , num strb r2 , [ r3 ] ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push r14 push rbx push rax xor eax , eax test rdi , rdi je hexvar mov r14 , rsi test rsi , rsi je hexvar mov rbx , rdi lea edi , [ r14 + r14 * num ] add edi , num mov esi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rcx , rax test r14 , r14 jle hexvar mov r8d , r14d and r8d , num cmp r14 , num jne hexvar mov rcx , rax test r8 , r8 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r14 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , edi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx - hexvar ] , ecx mov edx , dword ptr [ edx - hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] sub esp , hexvar mov eax , esp mov dword ptr [ eax + num ] , esi mov dword ptr [ eax + num ] , edx mov dword ptr [ eax ] , ebx call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , edi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx - hexvar ] , ecx mov edx , dword ptr [ edx - hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] sub esp , hexvar mov eax , esp mov dword ptr [ eax + num ] , esi mov dword ptr [ eax + num ] , edx mov dword ptr [ eax ] , ebx call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ecx ] mov ecx , dword ptr [ ecx + num ] sub esp , hexvar mov esi , esp mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi + num ] , edi mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , edx call hexvar mov dword ptr [ esp ] , eax call hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ ebp - hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , esi mov dword ptr [ eax + num ] , edi mov dword ptr [ eax ] , ebx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , lr } subs r4 , r0 , num popeq { r4 , pc } ldr r2 , [ pc , hexvar ] ldr r3 , [ r2 ] cmp r3 , num beq hexvar ldr r2 , [ r2 , num ] ldr r1 , [ r3 , r2 , lsl num ] cmp r4 , r1 moveq r1 , num streq r1 , [ r3 , r2 , lsl num ] ldr r3 , [ r4 , hexvar ] cmp r3 , num bne hexvar mov r0 , r4 pop { r4 , lr } b hexvar ldr r0 , [ r4 , num ] bl hexvar mov r0 , r4 pop { r4 , lr } b hexvar andeq ip , pc , r8 , ror pc
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) b hexvar nop move v0 , zero lw v1 , hexvar ( fp ) bne v0 , v1 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sll v0 , v0 , num addu v0 , v1 , v0 sw zero , ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) move a0 , v0 jal hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop b hexvar nop nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] cmp rdi , qword ptr [ rax ] je hexvar mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax jne hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + num ] call hexvar mov rdi , rbx pop rbx jmp hexvar nop word ptr [ rax + rax ] mov qword ptr [ rax ] , num mov eax , dword ptr [ rdi + hexvar ] mov rbx , rdi test eax , eax je hexvar jmp hexvar nop dword ptr [ rax + rax ] ret nop word ptr [ rax + rax ]
test rdi , rdi je hexvar push rbx mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] lea rax , [ rax + rdx * num ] cmp rdi , qword ptr [ rax ] je hexvar mov rbx , rdi cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rdi , rbx call hexvar pop rbx ret
push r14 push rbx push rax mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov r14 , qword ptr [ rbx + num ] add r14 , hexvar cmp qword ptr [ r14 ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbx + num ] mov r14 , qword ptr [ rax + num ] test r14 , r14 je hexvar cmp qword ptr [ r14 ] , num jne hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov edi , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov rsi , rax call hexvar test eax , eax jne hexvar mov esi , hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov r14 , qword ptr [ rbx + num ] add r14 , hexvar cmp qword ptr [ r14 ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbx + num ] mov r14 , qword ptr [ rax + num ] test r14 , r14 je hexvar cmp qword ptr [ r14 ] , num jne hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov edi , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov rsi , rax call hexvar test eax , eax jne hexvar mov esi , hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar call hexvar mov edx , eax mov eax , dword ptr [ esp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push r14 push rbx push rax mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov r14 , qword ptr [ rbx + num ] add r14 , hexvar cmp qword ptr [ r14 ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbx + num ] mov r14 , qword ptr [ rax + num ] test r14 , r14 je hexvar cmp qword ptr [ r14 ] , num jne hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov edi , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov rsi , rax call hexvar test eax , eax jne hexvar mov esi , hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push rbp push r15 push r14 push rbx push rax mov rbp , rdx mov rbx , rsi mov r14 , rdi mov esi , dword ptr [ rdx ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar mov r15d , num test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar mov r15d , num test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar xor ecx , ecx test eax , eax sete cl mov eax , ecx jmp hexvar xor r15d , r15d mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , num sub esp , num push dword ptr [ edi ] push ebp call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , num push dword ptr [ edi ] push ebp push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esi , num cmp esi , hexvar jne hexvar cmp esi , num setbe al movzx eax , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , num sub esp , num push dword ptr [ edi ] push ebp call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , num push dword ptr [ edi ] push ebp push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esi , num cmp esi , hexvar jne hexvar cmp esi , num setbe al movzx eax , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push rbx push rax mov rbp , rdx mov rbx , rsi mov r14 , rdi mov esi , dword ptr [ rdx ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar mov r15d , num test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar test eax , eax je hexvar mov esi , dword ptr [ rbp ] mov rdi , rbx call hexvar mov r15d , num test eax , eax jle hexvar mov edx , dword ptr [ rbp ] mov rdi , r14 mov rsi , rbx call hexvar xor ecx , ecx test eax , eax sete cl mov eax , ecx jmp hexvar xor r15d , r15d mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
ldr r3 , [ r1 , num ] ldr r0 , [ r2 ] cmp r3 , r0 bxhs lr ldr r2 , [ r2 , num ] add r0 , r2 , r3 , lsl num ldr r3 , [ r2 , r3 , lsl num ] str r3 , [ r1 , hexvar ] ldr r3 , [ r0 , num ] str r3 , [ r1 , hexvar ] bx lr
mov eax , dword ptr [ rsi + hexvar ] cmp eax , dword ptr [ rdx ] jae hexvar shl rax , num add rax , qword ptr [ rdx + num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsi + hexvar ] , rdx mov qword ptr [ rsi + hexvar ] , rax ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] cmp edx , eax jae hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , ecx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx jmp hexvar nop leave ret
ldr r3 , [ r1 , num ] ldr r0 , [ r2 ] cmp r3 , r0 bxhs lr ldr r2 , [ r2 , num ] add r0 , r2 , r3 , lsl num ldr r0 , [ r0 , num ] ldr r3 , [ r2 , r3 , lsl num ] str r0 , [ r1 , hexvar ] str r3 , [ r1 , hexvar ] bx lr
push rbp push rbx mov rbp , rsi lea rsi , [ rip + hexvar ] mov rbx , rdi sub rsp , num call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp mov rdx , rax jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdx , rbp mov rdi , rbx mov dword ptr [ rip + hexvar ] , num call hexvar mov edx , dword ptr [ rip + hexvar ] xor eax , eax test edx , edx setg al add rsp , num pop rbx pop rbp ret
push rbp push rbx mov rbp , rsi lea rsi , [ rip + hexvar ] mov rbx , rdi sub rsp , num call hexvar test rax , rax je hexvar add rsp , num mov rsi , rbp mov rdi , rbx pop rbx pop rbp mov rdx , rax jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdx , rbp mov rdi , rbx mov dword ptr [ rip + hexvar ] , num call hexvar mov edx , dword ptr [ rip + hexvar ] xor eax , eax test edx , edx setg al add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov dword ptr [ hexvar ] , num mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar cmp dword ptr [ hexvar ] , num setg al and al , num movzx ecx , al mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] sub esp , num lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar pop ebx mov ecx , eax mov edx , edi mov eax , esi pop esi pop edi jmp hexvar nop lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , num mov dword ptr [ ebx + hexvar ] , num push edi push eax push esi call hexvar mov edx , dword ptr [ ebx + hexvar ] add esp , hexvar xor eax , eax pop ebx pop esi test edx , edx setg al pop edi ret
addiu sp , sp , - hexvar addiu v1 , zero , hexvar sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lbu v0 , ( a1 ) lbu fp , num ( a1 ) lbu a3 , num ( a1 ) lbu t0 , num ( a1 ) sll v0 , v0 , hexvar sll fp , fp , hexvar sll a3 , a3 , num xor fp , v0 , fp xor fp , fp , t0 xor fp , fp , a3 sw fp , ( a2 )
addiu sp , sp , - hexvar addiu v1 , zero , hexvar sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lbu v0 , ( a1 ) lbu fp , num ( a1 ) lbu a3 , num ( a1 ) lbu t0 , num ( a1 ) sll v0 , v0 , hexvar sll fp , fp , hexvar sll a3 , a3 , num xor fp , v0 , fp xor fp , fp , t0 xor fp , fp , a3 sw fp , ( a2 )
addiu sp , sp , - hexvar addiu v1 , zero , hexvar sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lbu v0 , ( a1 ) lbu fp , num ( a1 ) lbu a3 , num ( a1 ) lbu t0 , num ( a1 ) sll v0 , v0 , hexvar sll fp , fp , hexvar sll a3 , a3 , num xor fp , v0 , fp xor fp , fp , t0 xor fp , fp , a3 sw fp , ( a2 )
lbu t1 , ( a1 ) sll t1 , t1 , hexvar lbu v0 , num ( a1 ) sll v0 , v0 , hexvar xor t1 , t1 , v0 lbu v0 , num ( a1 ) xor t1 , t1 , v0 lbu v0 , num ( a1 ) sll v0 , v0 , num xor t1 , t1 , v0 sw t1 , ( a2 )
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmn r3 , hexvar bne hexvar ldr r3 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] blx r3 mov r3 , r0 b hexvar sub r3 , fp , hexvar mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r0 , r3 bl hexvar bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r3 , [ r2 ] mvn r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] blx r3 str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bge hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] b hexvar mov r3 , num str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] mov r0 , r3 bl hexvar sub r3 , fp , hexvar mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r3 , [ r2 ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a1 move s2 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , - hexvar bne a0 , v0 , hexvar move t9 , a1 move a0 , a2 jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s0 , a0 addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a0 , s0 lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax cmp dword ptr [ ebp + num ] , - hexvar jne hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] call eax add esp , hexvar jmp hexvar sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar call hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , eax mov eax , hexvar jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jns hexvar call hexvar mov eax , dword ptr [ eax ] jmp hexvar mov eax , num mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar call hexvar mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar call hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ esp + hexvar ] , - hexvar jne hexvar sub esp , hexvar push edi call esi mov esi , eax add esp , hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar mov word ptr [ rbp - hexvar ] , ax movsx eax , word ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar mov word ptr [ rbp - hexvar ] , ax movsx eax , word ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov word ptr [ rdi ] , ax movsx eax , word ptr [ rdi ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar mov word ptr [ rbp - hexvar ] , ax movsx eax , word ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push { r4 , r5 , lr } sub sp , sp , hexvar mov r4 , r0 bl hexvar bl hexvar mov r5 , r0 ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 ] bl hexvar cmp r4 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ pc , hexvar ] ldr r0 , [ r2 ] str r5 , [ sp , num ] str r4 , [ sp ] ldr r2 , [ pc , hexvar ] mov r1 , num bl hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , rsi lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar nop leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 lw gp , hexvar ( sp ) move s1 , v0 lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( v0 ) addiu a1 , zero , num lw gp , hexvar ( sp ) beqz s0 , hexvar lw t9 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) lui a2 , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a2 , a2 , hexvar lw a3 , ( v0 ) lw v0 , - hexvar ( gp ) jalr t9 lw a0 , ( v0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a2 , hexvar sw s1 , hexvar ( sp ) addiu a2 , a2 , hexvar lw a3 , ( v0 ) lw v0 , - hexvar ( gp ) jalr t9 lw a0 , ( v0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov edi , dword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ hexvar ] call hexvar cmp qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax je hexvar mov rdi , qword ptr [ hexvar ] mov rdx , qword ptr [ hexvar ] mov rcx , qword ptr [ rbp - num ] mov r8 , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rdi , qword ptr [ hexvar ] mov rdx , qword ptr [ hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push rbp push rbx mov rbp , rdi mov edi , hexvar sub rsp , num mov esi , dword ptr [ rip + hexvar ] call hexvar mov rbx , qword ptr [ rip + hexvar ] cmp rbx , rbp je hexvar nop dword ptr [ rax ] mov esi , dword ptr [ rip + hexvar ] mov rdi , rbx call hexvar mov rbx , qword ptr [ rbx + hexvar ] cmp rbp , rbx jne hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 lui v0 , hexvar lw a1 , - hexvar ( v0 ) lui s0 , hexvar addiu a0 , s0 , - hexvar jal hexvar nop addiu s0 , s0 , - hexvar lw s0 , hexvar ( s0 ) beq s0 , s1 , hexvar lui s2 , hexvar lw a1 , - hexvar ( s2 ) move a0 , s0 jal hexvar nop lw s0 , hexvar ( s0 ) bne s1 , s0 , hexvar lw a1 , - hexvar ( s2 ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sw v0 , hexvar ( sp ) addiu a3 , zero , - num move a2 , a0 addiu a1 , zero , num addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 lb v1 , ( s1 ) lb v0 , hexvar ( sp ) beq v1 , v0 , hexvar move a0 , s1 addiu v0 , zero , num lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) xor v0 , v0 , s0 b hexvar sltu v0 , zero , v0 lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sw v0 , hexvar ( sp ) addiu a3 , zero , - num move a2 , a0 addiu a1 , zero , num addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 lb v1 , ( s1 ) lb v0 , hexvar ( sp ) beq v1 , v0 , hexvar move a0 , s1 addiu v0 , zero , num lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) xor v0 , v0 , s0 b hexvar sltu v0 , zero , v0 lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp - hexvar ] cmp eax , ecx mov bl , num mov byte ptr [ ebp - hexvar ] , bl jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar cmp eax , dword ptr [ ebp - hexvar ] setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp - hexvar ] cmp eax , ecx mov bl , num mov byte ptr [ ebp - hexvar ] , bl jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar cmp eax , dword ptr [ ebp - hexvar ] setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) addiu a3 , zero , num move a2 , zero lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
sub esp , hexvar push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
sub esp , hexvar call hexvar add eax , hexvar push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] mov r3 , num mov r2 , num ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar
ldr r3 , [ pc , hexvar ] push { r4 , lr } ldr r0 , [ r3 ] bl hexvar bl hexvar mov r2 , num ldr r4 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r4 mov r2 , r0 mov r0 , num bl hexvar andeq r8 , r2 , ip , ror num andeq r7 , r1 , r0 , asr num
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar lea esi , [ esi ] lea edi , [ edi ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , dword ptr [ ebp - num ] cmp eax , dword ptr [ ecx + hexvar ] jg hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + hexvar ] , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
mov rax , qword ptr [ rdi + num ] cmp qword ptr [ rax + hexvar ] , num js hexvar cmp qword ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax + num ] cmp qword ptr [ rax + hexvar ] , num js hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar ret ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] not rax shr rax , hexvar mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax pop rbp ret
mov rax , qword ptr [ rdi + num ] cmp qword ptr [ rax + hexvar ] , num js hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar ret cmp qword ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rax + num ] cmp qword ptr [ rax + hexvar ] , num jns hexvar ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov edi , eax mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , edx xor edx , edx movzx esi , word ptr [ eax + hexvar ] cmp si , hexvar je hexvar cmp si , hexvar jne hexvar mov dword ptr [ ebp - hexvar ] , num cmp dword ptr [ edi + hexvar ] , num je hexvar lea esi , [ ebp - hexvar ] mov ecx , num mov edx , hexvar mov eax , num mov dword ptr [ esi + eax ] , ecx add eax , num cmp eax , edx jb hexvar mov ecx , edi mov dword ptr [ ebp - hexvar ] , edi mov esi , dword ptr [ edi + hexvar ] mov edx , dword ptr [ edi + hexvar ] test edx , edx je hexvar mov dword ptr [ ebp - hexvar ] , num mov edi , num mov dword ptr [ ebp - hexvar ] , num lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num movzx esi , si push esi push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r14 , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax movzx ebx , word ptr [ rdi + hexvar ] cmp bx , hexvar je hexvar cmp bx , hexvar jne hexvar mov dword ptr [ rsp + hexvar ] , num cmp qword ptr [ r14 + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , r14 mov rbx , qword ptr [ r14 + hexvar ] mov eax , dword ptr [ r14 + hexvar ] test eax , eax je hexvar mov dword ptr [ rsp + hexvar ] , num mov ebp , num mov r12d , num lea r15 , [ rsp + hexvar ] jmp hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar movzx esi , bx mov rdi , rax mov eax , num call hexvar mov dword ptr [ rsp + hexvar ] , num mov eax , dword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v1 , zero , hexvar sw s5 , hexvar ( sp ) move s5 , a0 lw v0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move a1 , v0 sw v0 , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lhu v0 , hexvar ( a0 ) lw a0 , ( a1 ) sw a0 , hexvar ( sp ) beq v0 , v1 , hexvar addiu v1 , zero , hexvar bne v0 , v1 , hexvar lui a1 , hexvar lw v0 , hexvar ( s5 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lhu v0 , hexvar ( a0 ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar addiu v1 , zero , hexvar bne v0 , v1 , hexvar addiu a2 , zero , num lw v0 , hexvar ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a3 , hexvar addiu v0 , zero , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a3 , a3 , - hexvar sw v0 , hexvar ( sp ) addiu a2 , zero , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , num jalr t9 addiu a0 , a0 , hexvar lw ra , hexvar ( sp ) slti v0 , v0 , num xori v0 , v0 , num jr ra addiu sp , sp , hexvar
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r0 , r3 , hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , num bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num movgt r3 , num movle r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax call hexvar cmp eax , num setg al movzx eax , al add esp , hexvar pop ebx ret
push rax add rdi , hexvar mov ecx , hexvar mov esi , num mov edx , hexvar mov r8d , hexvar call hexvar xor ecx , ecx cmp eax , num setg cl mov eax , ecx pop rcx ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] push ebp call hexvar pop ecx pop esi xor edx , edx mov esi , eax add eax , num push edx push eax call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar sub esp , num push esi push ebp push eax call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , hexvar jg hexvar lea edx , [ edi + esi ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ ebx - hexvar ] lea ebp , [ ecx + hexvar ] mov dword ptr [ esp + hexvar ] , edx jmp hexvar lea esi , [ esi ] cmp esi , hexvar mov eax , esi je hexvar sub esp , hexvar lea esi , [ eax + num ] push eax push dword ptr [ esp + hexvar ] push - num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push num push num push edi push ebp call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , esi add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a0 move s0 , a1 move s6 , a2 move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s2 , v0 move a0 , zero addiu a1 , v0 , num lui t9 , hexvar addiu t9 , t9 , - hexvar bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 move a2 , s2 move a1 , s0 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s6 , hexvar lui v0 , hexvar lw v1 , ( s6 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov ecx , hexvar mov eax , num mov edi , ebp repne scasb al , byte ptr es : [ edi ] mov edx , ecx not edx mov ecx , edx lea esi , [ edx - num ] add ecx , num mov edx , num push edx push ecx call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar sub esp , num push esi push ebp push eax call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , hexvar jg hexvar lea ebp , [ ebx - hexvar ] lea edx , [ edi + esi ] mov dword ptr [ esp + hexvar ] , edx jmp hexvar mov eax , esi cmp esi , hexvar jg hexvar lea esi , [ eax + num ] sub esp , hexvar push eax push ebp push - num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push num push num push edi mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , esi mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 mov r15 , rdx push r13 push r12 mov r13 , rdi push rbp push rbx mov rdi , rsi mov rbx , rsi sub rsp , num call hexvar lea edi , [ rax + num ] mov rbp , rax call hexvar test rax , rax mov r12 , rax je hexvar mov ebp , ebp mov rsi , rbx mov rdi , rax mov rdx , rbp call hexvar test r15 , r15 je hexvar mov r8d , dword ptr [ r15 ] cmp r8d , hexvar jg hexvar add rbp , r12 add r13 , hexvar lea r14 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] cmp ebx , hexvar mov r8d , ebx je hexvar mov rcx , r14 mov rdx , - num mov esi , num mov rdi , rbp xor eax , eax lea ebx , [ r8 + num ] call hexvar xor ecx , ecx xor edx , edx mov rsi , r12 mov rdi , r13 call hexvar test rax , rax jne hexvar test r15 , r15 je hexvar mov dword ptr [ r15 ] , ebx add rsp , num mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
sub rsp , num mov rax , rsi mov rsi , qword ptr [ rdi + hexvar ] mov edx , num mov rdi , rax call hexvar cmp eax , num sbb eax , eax and eax , hexvar add eax , num add rsp , num ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] sub edx , esi setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx add esp , hexvar pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar lui t9 , hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move a0 , zero sw s2 , hexvar ( sp ) move s3 , a1 sw gp , hexvar ( sp ) addiu a1 , zero , hexvar sw ra , hexvar ( sp ) addiu t9 , t9 , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) jalr t9 move s2 , a3 beqz v0 , hexvar lw gp , hexvar ( sp ) lui s1 , hexvar lw t9 , - hexvar ( gp ) addiu a3 , zero , hexvar addiu a2 , zero , hexvar addiu a1 , s1 , - hexvar move a0 , v0 jalr t9 move s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( s2 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a0 , zero sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) addiu a1 , zero , hexvar sw gp , hexvar ( sp ) move s2 , a3 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lui s1 , hexvar lw t9 , - hexvar ( gp ) addiu a3 , zero , hexvar addiu a2 , zero , hexvar addiu a1 , s1 , hexvar move a0 , v0 jalr t9 move s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( s2 ) lui a0 , hexvar lui v1 , hexvar sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) and v0 , v0 , a0 sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) beq v0 , v1 , hexvar sw zero , hexvar ( s0 ) lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , s1 , hexvar jalr t9 addiu a0 , s0 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( s3 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a1 move s1 , a3 addiu a1 , zero , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a3 , zero , hexvar move s0 , v0 addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui v1 , hexvar sw zero , hexvar ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a1 move s1 , a3 addiu a1 , zero , hexvar move a0 , zero lui t9 , hexvar addiu t9 , t9 , hexvar jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a3 , zero , hexvar move s0 , v0 addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui v1 , hexvar sw zero , hexvar ( s0 )
push rbx mov ebx , edi mov rax , qword ptr [ rip + hexvar ] lea rsi , [ rax + num ] mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rsi , qword ptr [ rax ] ja hexvar mov rax , qword ptr [ rip + hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rdx movzx eax , byte ptr [ rax ] cmp ebx , hexvar jne hexvar sar eax , num cmp dword ptr [ rip + hexvar ] , num je hexvar and eax , num mov edx , dword ptr [ rip + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov rdx , qword ptr [ rip + hexvar ] jmp hexvar call hexvar jmp hexvar call hexvar mov rdx , qword ptr [ rip + hexvar ] cdqe mov rdi , qword ptr [ rdx + rax * num ] call hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov rax , qword ptr [ hexvar ] add rax , num mov rcx , qword ptr [ hexvar ] mov rcx , qword ptr [ rcx + hexvar ] cmp rax , qword ptr [ rcx ] ja hexvar jmp hexvar mov rdi , qword ptr [ hexvar ] mov rax , qword ptr [ hexvar ] add rax , num mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ hexvar ] mov rcx , rax add rcx , num mov qword ptr [ hexvar ] , rcx movzx edx , byte ptr [ rax ] mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - num ] , hexvar je hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] sar eax , num mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , hexvar xor ecx , num mov edx , eax xor edx , ecx and edx , eax mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rip + hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov rax , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + rcx * num ] call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] cmp edx , eax jbe hexvar mov eax , dword ptr [ ebx + hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ ebx + hexvar ] sub esp , num push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebx + hexvar ] , edx movzx eax , byte ptr [ eax ] movzx eax , al mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + num ] , hexvar je hexvar call hexvar sar dword ptr [ ebp - hexvar ] , num lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] cmp eax , num je hexvar and dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] lea esi , [ eax + num ] mov ecx , dword ptr [ edi ] cmp esi , ecx ja hexvar cmp dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ ebx + hexvar ] , esi movzx eax , byte ptr [ eax ] jne hexvar lea ecx , [ ebx + hexvar ] sar eax , num mov edx , eax and edx , num cmp dword ptr [ ecx ] , num cmovne eax , edx mov edx , dword ptr [ ebx + hexvar ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov edx , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ edx + eax * num ] push dword ptr [ ebx + hexvar ] call hexvar mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] test ebp , ebp je hexvar sub esp , num push dword ptr [ esi + hexvar ] push edi call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , num jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a3 , hexvar lw t9 , - hexvar ( gp ) lw a1 , hexvar ( s0 )
push r15 push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi test ecx , ecx jne hexvar mov rdi , rbx call hexvar and eax , hexvar cmp rax , num je hexvar mov rdi , rbx call hexvar and eax , hexvar cmp rax , num jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r14 call hexvar mov eax , num add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi test ecx , ecx jne hexvar mov rdi , rbx call hexvar and eax , hexvar cmp rax , num je hexvar mov rdi , rbx call hexvar and eax , hexvar cmp rax , num jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r14 call hexvar mov eax , num add rsp , hexvar pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a3 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , v0 jalr t9 move s0 , v0 lw gp , hexvar ( sp ) lw a1 , hexvar ( s1 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rcx mov r14 , rdx mov rbp , rdi call hexvar mov rbx , rax mov rdi , rax call hexvar mov rdi , qword ptr [ r14 + num ] mov rsi , qword ptr [ r15 + hexvar ] call hexvar test eax , eax jg hexvar mov rdi , qword ptr [ r14 ] mov rsi , qword ptr [ r15 + hexvar ] call hexvar test eax , eax jle hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move s3 , a2 sw s1 , hexvar ( sp ) move s1 , a3 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 lw gp , hexvar ( sp ) lw a1 , hexvar ( s1 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rcx mov r14 , rdx mov rbp , rdi call hexvar mov rbx , rax mov rdi , rax call hexvar mov rsi , qword ptr [ r15 + hexvar ] mov rdi , qword ptr [ r14 + num ] call hexvar test eax , eax jg hexvar mov rdi , qword ptr [ r14 ] mov rsi , qword ptr [ r15 + hexvar ] call hexvar test eax , eax jle hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push { r4 , r5 , r6 , lr } subs r6 , r2 , num beq hexvar mov r5 , r1 mov r4 , r0 bl hexvar sub r3 , r4 , num ldr ip , [ r0 ] add r6 , r3 , r6 sub r1 , r5 , num ldrb r4 , [ r3 , num ] ! ldrb lr , [ r1 , num ] ! ldr r0 , [ ip , r4 , lsl num ] ldr r2 , [ ip , lr , lsl num ] subs r0 , r0 , r2 popne { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dl , byte ptr [ eax + ecx ] mov byte ptr [ ebp - hexvar ] , dl mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dl , byte ptr [ eax + ecx ] mov byte ptr [ ebp - hexvar ] , dl movzx eax , byte ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test esi , esi je hexvar call hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ eax ] mov edi , dword ptr [ esp + hexvar ] add esi , edx jmp hexvar lea esi , [ esi ] add edx , num add edi , num cmp esi , edx je hexvar movzx eax , byte ptr [ edx ] movzx ebx , byte ptr [ edi ] mov eax , dword ptr [ ecx + eax * num ] sub eax , dword ptr [ ecx + ebx * num ] je hexvar pop ebx pop esi pop edi ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] b hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 ldrb r3 , [ r3 ] strb r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 ldrb r3 , [ r3 ] strb r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar str r0 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar str r0 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] sub r3 , r2 , r3 str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 blo hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ hexvar ] test bl , num mov edi , hexvar cmovne eax , edi mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar mov edi , eax call hexvar jmp hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al jne hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov esi , hexvar jmp hexvar mov esi , num mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov r8d , esi mov rsi , rax mov edi , hexvar call hexvar mov edi , eax call hexvar jmp hexvar mov eax , hexvar leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ hexvar ] test bl , num mov edi , hexvar cmovne eax , edi mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar lui v0 , hexvar lui v0 , hexvar lbu v0 , hexvar ( v0 ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar lw t9 , - hexvar ( gp ) b hexvar move v0 , zero jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw v0 , ( v0 ) lbu v0 , hexvar ( v0 )
push rbp push rbx mov esi , hexvar mov rbp , rdi sub rsp , num call hexvar test rax , rax je hexvar mov esi , hexvar mov rdi , rbp mov rbx , rax call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar mov dword ptr [ rax + hexvar ] , num lea rax , [ rip + hexvar ] mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx ] , rbp add rsp , num mov rax , rbx pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx r8d , cl mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov qword ptr [ rbp - hexvar ] , hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx r8d , cl mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov qword ptr [ rbp - hexvar ] , hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , num push num push hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num mov esi , eax push num push hexvar push edi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + hexvar ] , eax je hexvar mov dword ptr [ eax + hexvar ] , num lea eax , [ ebx + hexvar ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi ] , edi add eax , hexvar mov dword ptr [ esi + hexvar ] , eax mov eax , esi pop ebx pop esi pop edi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) addiu a2 , zero , num lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
cmp r0 , num ldr r3 , [ r1 ] beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bhi hexvar add r2 , r3 , num add r3 , r2 , r3 , lsr num str r3 , [ r1 ] mov r1 , r3 b hexvar cmp r3 , num moveq r3 , hexvar beq hexvar bge hexvar push { r4 , lr } bl hexvar ldrbpl r5 , [ r5 , - hexvar ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar andi v0 , a0 , num sw ra , hexvar ( sp ) bnez v0 , hexvar sw gp , hexvar ( sp ) andi v0 , a0 , num bnez v0 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lbu v0 , - num ( a0 ) addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jr t9 subu a0 , a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] and ecx , num cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar call hexvar mov eax , dword ptr [ ebp + num ] and eax , num cmp eax , num je hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] movzx edx , byte ptr [ edx - num ] sub eax , hexvar sub eax , edx add eax , hexvar add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar cmp dword ptr [ ecx - num ] , hexvar je hexvar add esp , num pop ebx pop esi ret
test rdi , rdi je hexvar cmp dword ptr [ rdi - num ] , hexvar je hexvar ret mov rax , rdi movabs rdx , hexvar mul rdx shr rdx , num mov rax , rdx shl rax , num add rdx , rax mov rax , rdi sub rax , rdx mov rcx , qword ptr [ rax * num + hexvar ] test rcx , rcx je hexvar cmp rdi , rcx jne hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp rdi , rax je hexvar mov rcx , rax mov rax , qword ptr [ rcx - hexvar ] test rax , rax jne hexvar jmp hexvar nop dword ptr [ rax + rax ] sub rcx , hexvar mov rax , qword ptr [ rdi - hexvar ] sub rdi , hexvar mov qword ptr [ rcx ] , rax jmp hexvar lea rcx , [ rax * num + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ]
push rax mov esi , hexvar call hexvar test rax , rax je hexvar cmp dword ptr [ rax ] , hexvar jne hexvar mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rsp ] , rcx movsxd rdx , dword ptr [ rax ] mov rsi , rsp mov ecx , hexvar xor edi , edi call hexvar pop rcx ret
push rax mov esi , hexvar call hexvar test rax , rax je hexvar cmp dword ptr [ rax ] , hexvar jne hexvar mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rsp ] , rcx movsxd rdx , dword ptr [ rax ] mov rsi , rsp mov ecx , hexvar xor edi , edi call hexvar pop rcx ret
push rax mov esi , hexvar call hexvar test rax , rax je hexvar cmp dword ptr [ rax ] , hexvar jne hexvar mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rsp ] , rcx movsxd rdx , dword ptr [ rax ] mov rsi , rsp mov ecx , hexvar xor edi , edi call hexvar pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov edx , eax xor eax , eax cmp dword ptr [ edx ] , hexvar jne hexvar mov eax , dword ptr [ edx + num ] mov edx , dword ptr [ eax + num ] mov dword ptr [ esp + num ] , edx push dword ptr [ ebx + hexvar ] push dword ptr [ eax ] lea eax , [ esp + hexvar ] push eax push num call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s2 , hexvar ( sp ) move s2 , a1 move a1 , zero sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s5 , a3 sw gp , hexvar ( sp ) move s3 , a2 sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) bal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s3 , hexvar move s0 , v0 addiu s4 , sp , hexvar move a2 , zero addiu a1 , zero , hexvar move a3 , s5 move t9 , s3 jalr t9 move a0 , s4 lw gp , hexvar ( sp ) blez v0 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 move a2 , v0 jalr t9 move a1 , s4 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 beqz s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , v0 beqz s0 , hexvar lw gp , hexvar ( sp ) beqz s2 , hexvar nop lw a0 , ( s2 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ esp + hexvar ] je hexvar test edx , edx mov ebp , eax je hexvar push edi push num push hexvar lea edi , [ esp + hexvar ] push edi call edx add esp , hexvar test eax , eax jle hexvar sub esp , num push eax push edi push ebp call hexvar mov edi , eax mov dword ptr [ esp ] , ebp call hexvar add esp , hexvar test edi , edi je hexvar sub esp , hexvar push edi call hexvar mov ebp , eax mov dword ptr [ esp ] , edi call hexvar add esp , hexvar test ebp , ebp je hexvar test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esi ] , ebp mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , ebp jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , rcx mov r13 , rdx mov r14 , rsi xor ebx , ebx xor esi , esi call hexvar test rax , rax je hexvar mov r15 , rax mov rdi , rsp mov esi , hexvar xor edx , edx mov rcx , r12 test r13 , r13 je hexvar call r13
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ esp + hexvar ] je hexvar test edx , edx mov ebp , eax je hexvar push edi push num push hexvar lea edi , [ esp + hexvar ] push edi call edx add esp , hexvar test eax , eax jle hexvar sub esp , num push eax push edi push ebp call hexvar mov edi , eax mov dword ptr [ esp ] , ebp call hexvar add esp , hexvar test edi , edi je hexvar sub esp , hexvar push edi call hexvar mov ebp , eax mov dword ptr [ esp ] , edi call hexvar add esp , hexvar test ebp , ebp je hexvar test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esi ] , ebp mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , ebp jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v0 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a2 , zero , num sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) lui a1 , hexvar sw ra , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) addiu a1 , a1 , hexvar sw gp , hexvar ( sp ) move a0 , zero lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 lw s0 , ( v0 ) addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , s2 sw s1 , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 move a2 , v0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , num sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) lui a1 , hexvar sw ra , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) addiu a1 , a1 , hexvar sw gp , hexvar ( sp ) move a0 , zero lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 lw s0 , ( v0 ) addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , s2 sw s1 , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 move a2 , v0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push rbx mov rbx , rsi lea rsi , [ rip + hexvar ] mov rbp , rdi mov edx , num sub rsp , num xor edi , edi call hexvar mov rdi , qword ptr [ rip + hexvar ] add rsp , num mov r8 , rbp mov rcx , rbx mov rdx , rax mov esi , num pop rbx pop rbp xor eax , eax jmp hexvar nop dword ptr [ rax + rax ] nop word ptr cs : [ rax + rax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r1 , r3 ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar ldr r2 , [ sp , hexvar ] add r2 , r2 , hexvar str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , r1 mov r2 , hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , num ] add r3 , r3 , hexvar str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmn r3 , hexvar bhi hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar ldr r2 , [ sp , hexvar ] add r2 , r2 , hexvar str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , r0 mov r2 , r1 ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov rbp , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + num ] , rcx lea r14 , [ rax + num ] movabs r15 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ rbp + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , r14 mov r8 , qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + num ] call hexvar add rbx , r15 add r12 , r15 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ rbp + hexvar ] lea r8 , [ rbp + hexvar ] add rbp , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r9 , rbp call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r1 , r3 ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar ldr r2 , [ sp , hexvar ] add r2 , r2 , hexvar str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , r1 mov r2 , hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , num ] add r3 , r3 , hexvar str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmn r3 , hexvar bhi hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar ldr r2 , [ sp , hexvar ] add r2 , r2 , hexvar str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , r0 mov r2 , r1 ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push esi push ebx xor esi , esi mov ecx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] movzx edx , byte ptr [ ecx ] test dl , dl je hexvar nop lea esi , [ esi ] mov eax , esi add ecx , num shl eax , num sub eax , esi add eax , edx xor edx , edx div ebx
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - num ] , cl cmp cl , num je hexvar imul eax , dword ptr [ ebp - num ] , hexvar movzx ecx , byte ptr [ ebp - num ] add eax , ecx xor edx , edx div dword ptr [ ebp + hexvar ]
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - num ] mov cl , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , cl test cl , cl setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax shl rcx , num sub rcx , rax movzx edx , byte ptr [ rbp - hexvar ] mov eax , edx add rcx , rax mov rax , qword ptr [ rbp - hexvar ] xor edx , edx mov qword ptr [ rbp - hexvar ] , rax mov rax , rcx mov rcx , qword ptr [ rbp - hexvar ] div rcx mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
movzx ecx , byte ptr [ rdi ] test cl , cl je hexvar mov edx , num mov rax , rdx shl rax , num sub rax , rdx movzx ecx , cl add rax , rcx mov edx , num div rsi add rdi , num movzx ecx , byte ptr [ rdi ] test cl , cl jne hexvar jmp hexvar mov edx , num mov rax , rdx ret
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] mov r6 , r0 ldrb r3 , [ r4 ] ldr r5 , [ pc , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ r5 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] cmp r3 , r2 movlo r2 , hexvar addlo r1 , r3 , num strlo r1 , [ r0 , hexvar ] strblo r2 , [ r3 ] bhs hexvar mov r3 , num ldr r1 , [ r5 ] mov r0 , r6 strb r3 , [ r4 ] pop { r4 , r5 , r6 , lr } b hexvar mov r1 , hexvar bl hexvar b hexvar andeq r6 , r2 , sb , asr num andeq r6 , r2 , r4 , asr num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov byte ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , eax cmp byte ptr [ ebx + hexvar ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] cmp edx , dword ptr [ eax + hexvar ] jae hexvar lea ecx , [ edx + num ] mov dword ptr [ eax + hexvar ] , ecx mov byte ptr [ edx ] , hexvar mov byte ptr [ ebx + hexvar ] , num sub esp , num mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] push esi call hexvar add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lbu v0 , - hexvar ( s0 ) beqz v0 , hexvar lw s1 , - hexvar ( gp ) lw a0 , ( s1 ) lw v1 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r6 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r7 , [ r6 ] ldr r4 , [ r6 , num ] ldr r5 , [ r7 , r4 , lsl num ] add r8 , r7 , r4 , lsl num mov r0 , r5 bl hexvar cmp r0 , num beq hexvar ldrb r3 , [ r5 ] cmp r3 , hexvar bne hexvar ldrb r3 , [ r5 , num ] cmp r3 , num beq hexvar ldrb r3 , [ r5 , num ] cmp r3 , num bne hexvar mov r0 , r5 bl hexvar cmp r0 , num beq hexvar pop { r4 , r5 , r6 , r7 , r8 , lr } b hexvar ldr r3 , [ r8 , num ] add r4 , r4 , num ldrb r0 , [ r3 ] str r4 , [ r6 , num ] clz r0 , r0 lsr r0 , r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } bne hexvar andeq r0 , r0 , r0
push ebp push edi mov ecx , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] lea edi , [ ebx - hexvar ] mov ebp , dword ptr [ edx + eax * num ] lea esi , [ eax * num ] mov dword ptr [ esp + hexvar ] , esi mov esi , ebp repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num test cl , cl je hexvar cmp byte ptr [ ebp ] , hexvar jne hexvar cmp byte ptr [ ebp + num ] , num je hexvar cmp byte ptr [ ebp + num ] , num jne hexvar mov eax , ebp call hexvar test al , al je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp jmp hexvar nop mov esi , dword ptr [ esp + hexvar ] add eax , num mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ edx + esi + num ] cmp byte ptr [ eax ] , num sete al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov eax , dword ptr [ eax + ecx * num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num jne hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar call hexvar xor al , hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov eax , dword ptr [ eax + ecx * num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov eax , dword ptr [ eax + ecx * num ] movsx eax , byte ptr [ eax + num ] cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov eax , dword ptr [ eax + ecx * num ] movsx eax , byte ptr [ eax + num ] cmp eax , num jne hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar call hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar jmp hexvar call hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r6 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r7 , [ r6 ] ldr r4 , [ r6 , num ] ldr r5 , [ r7 , r4 , lsl num ] add r8 , r7 , r4 , lsl num mov r0 , r5 bl hexvar cmp r0 , num beq hexvar ldrb r3 , [ r5 ] cmp r3 , hexvar bne hexvar ldrb r3 , [ r5 , num ] cmp r3 , num beq hexvar ldrb r3 , [ r5 , num ] cmp r3 , num bne hexvar mov r0 , r5 bl hexvar cmp r0 , num beq hexvar pop { r4 , r5 , r6 , r7 , r8 , lr } b hexvar ldr r3 , [ r8 , num ] add r4 , r4 , num ldrb r0 , [ r3 ] str r4 , [ r6 , num ] clz r0 , r0 lsr r0 , r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] mov r1 , num ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , edx mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov esp , ebp pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] and rax , hexvar cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] and rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num je hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - num ] mov dl , byte ptr [ rcx - num ] mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov dword ptr [ rbp - hexvar ] , ecx xor eax , eax mov ecx , eax mov eax , dword ptr [ rbp - hexvar ] movsxd rdx , eax sub rcx , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
beqz a0 , hexvar lui v0 , hexvar lw v1 , - num ( a0 ) ori v0 , v0 , hexvar beq v1 , v0 , hexvar lui v0 , hexvar jr ra nop lui v1 , hexvar ori v0 , v0 , hexvar multu a0 , v0 addiu v1 , v1 , hexvar mfhi v0 srl v0 , v0 , num sll a1 , v0 , num addu v0 , a1 , v0 subu v0 , a0 , v0 sll v0 , v0 , num addu v0 , v0 , v1 lw v1 , ( v0 ) beqz v1 , hexvar nop bne v1 , a0 , hexvar lui gp , hexvar b hexvar lw v1 , - num ( a0 ) beq a0 , v0 , hexvar lui gp , hexvar move v1 , v0 lw v0 , - num ( v1 ) bnez v0 , hexvar nop b hexvar nop addiu v0 , v1 , - num lw v1 , - num ( a0 ) addiu a0 , a0 , - num addiu gp , gp , - hexvar lw t9 , - hexvar ( gp ) jr t9 sw v1 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax - num ] , hexvar jne hexvar mov eax , dword ptr [ ebp + num ] xor edx , edx mov ecx , hexvar div ecx mov dword ptr [ ebp - num ] , edx mov ecx , dword ptr [ ebp - num ] shl ecx , num lea edx , [ hexvar ] add edx , ecx mov dword ptr [ ebp - num ] , edx mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + num ] jne hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
cmp r0 , num bxeq lr ldr r3 , [ pc , hexvar ] ldr r2 , [ r0 , - num ] cmp r2 , r3 bxne lr
push { r4 , r5 , r6 , lr } subs r4 , r0 , num beq hexvar mov r1 , hexvar bl hexvar subs r5 , r0 , num beq hexvar add r6 , r5 , num sub r3 , r6 , r4 cmp r3 , num ble hexvar mov r2 , num ldr r1 , [ pc , hexvar ] sub r0 , r5 , num bl hexvar cmp r0 , num bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r6 bl hexvar cmp r0 , num movne r4 , r6 ldreq r3 , [ pc , hexvar ] addeq r4 , r5 , num streq r4 , [ r3 ] ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] str r4 , [ r2 ] str r4 , [ r3 ] pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push rbx test rdi , rdi je hexvar mov rbx , rdi mov esi , hexvar call hexvar lea rdx , [ rax + num ] test rax , rax mov rax , rdx cmove rax , rbx mov rdx , rax sub rdx , rbx cmp rdx , num jle hexvar lea rsi , [ rax - num ] mov ecx , num lea rdi , [ rip + hexvar ] repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num test dl , dl jne hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl sbb dl , num mov rbx , rax test dl , dl jne hexvar lea rbx , [ rax + num ] mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) lw v0 , hexvar ( v0 )
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rip ] mov rax , qword ptr [ rbp - num ] mulsd xmm0 , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rip ] mov rax , qword ptr [ rbp - num ] mulsd xmm0 , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax movsd xmm0 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mulsd xmm0 , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rip ] mov rax , qword ptr [ rbp - hexvar ] mulsd xmm0 , qword ptr [ rax + hexvar ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , - hexvar ( s0 ) beqz v0 , hexvar move s1 , a0 lw t9 , hexvar ( v0 ) beqz t9 , hexvar lw ra , hexvar ( sp ) move a0 , s1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal - hexvar move a0 , s2 lw gp , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp push r14 push rbx sub rsp , hexvar mov r14d , esi mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , r14d add rsp , hexvar pop rbx pop r14 pop rbp jmp rax movsd qword ptr [ rsp + num ] , xmm0 call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbp movsd xmm0 , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar jmp hexvar mov rdi , rbp call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax movsd xmm0 , qword ptr [ rsp + num ] jne hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov r14d , esi mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , r14d add rsp , hexvar pop rbx pop r14 pop rbp jmp rax movsd qword ptr [ rsp + num ] , xmm0 call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbp movsd xmm0 , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar jmp hexvar mov rdi , rbp call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax movsd xmm0 , qword ptr [ rsp + num ] jne hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar nop add esp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu a2 , zero , num lw a1 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
test rdi , rdi je hexvar mov rsi , rdi lea rdi , [ rip + hexvar ] mov edx , num jmp hexvar nop dword ptr [ rax ] lea rdi , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw a0 , ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar call hexvar sub esp , hexvar mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num pop eax push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , num test eax , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebp ret
addiu v0 , zero , num beq a0 , v0 , hexvar addiu v0 , zero , num jr ra nop lw v1 , ( a1 ) lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v0 , ( v1 )
push esi push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , num add esp , num pop ebx pop esi ret
push rbx cmp edi , num jne hexvar mov rax , qword ptr [ rsi ] mov ecx , dword ptr [ rax ] cmp ecx , num je hexvar cmp ecx , num je hexvar test ecx , ecx jne hexvar mov rbx , qword ptr [ rax + num ] mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov eax , num pop rbx ret
addiu v0 , zero , num beq a0 , v0 , hexvar addiu v0 , zero , num jr ra nop lw v1 , ( a1 )
push rbx mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbx + hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rdi , rbx call hexvar call hexvar mov rdi , rax call hexvar mov rcx , qword ptr [ rbx + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov edx , num mov rdi , rax mov esi , num xor ecx , ecx pop rbx jmp hexvar nop word ptr cs : [ rax + rax ] nop
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar call hexvar mov edi , dword ptr [ esi + hexvar ] sub esp , hexvar push eax call hexvar mov dword ptr [ edi + hexvar ] , eax push num push num push num mov eax , dword ptr [ esi + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar call hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] sub esp , hexvar push edx call hexvar add esp , hexvar mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] push num push num push num push eax call hexvar add esp , hexvar nop add esp , num pop ebx pop esi ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , hexvar push edx call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , esi call hexvar call hexvar sub esp , hexvar mov edi , dword ptr [ esi + hexvar ] push eax call hexvar mov dword ptr [ edi + hexvar ] , eax push num push num push num mov eax , dword ptr [ esi + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push dword ptr [ esp ] push num push dword ptr [ esp + hexvar ] push edi call hexvar add edi , dword ptr [ esp + hexvar ] mov ebp , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov ecx , dword ptr [ esp ] lea esi , [ edi + eax ] cmp esi , ecx jb hexvar xor eax , eax xor edx , edx cmp ecx , edi jbe hexvar mov eax , ecx sub eax , edi lea edx , [ eax - num ] cmp edx , num ja hexvar sub esp , num push eax push edi mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax ] add esp , hexvar call hexvar sub esp , num mov edi , eax lea eax , [ ebx - hexvar ] push num jmp hexvar mov esi , esi lea edi , [ edi ]
push dword ptr [ esp ] push num push dword ptr [ esp + hexvar ] push edi call hexvar add edi , dword ptr [ esp + hexvar ] mov ebp , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov ecx , dword ptr [ esp ] lea esi , [ edi + eax ] cmp esi , ecx jb hexvar xor eax , eax xor edx , edx cmp ecx , edi jbe hexvar mov eax , ecx sub eax , edi lea edx , [ eax - num ] cmp edx , num ja hexvar sub esp , num push eax push edi mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax ] add esp , hexvar call hexvar sub esp , num mov edi , eax lea eax , [ ebx - hexvar ] push num jmp hexvar mov esi , esi lea edi , [ edi ]
push dword ptr [ esp ] push num push dword ptr [ esp + hexvar ] push edi call hexvar add edi , dword ptr [ esp + hexvar ] mov ebp , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov ecx , dword ptr [ esp ] lea esi , [ edi + eax ] cmp esi , ecx jb hexvar xor eax , eax xor edx , edx cmp ecx , edi jbe hexvar mov eax , ecx sub eax , edi lea edx , [ eax - num ] cmp edx , num ja hexvar sub esp , num push eax push edi mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax ] add esp , hexvar call hexvar sub esp , num mov edi , eax lea eax , [ ebx - hexvar ] push num jmp hexvar mov esi , esi lea edi , [ edi ]
push dword ptr [ esp ] push num push dword ptr [ esp + hexvar ] push edi call hexvar add edi , dword ptr [ esp + hexvar ] mov ebp , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov ecx , dword ptr [ esp ] lea esi , [ edi + eax ] cmp esi , ecx jb hexvar xor eax , eax xor edx , edx cmp ecx , edi jbe hexvar mov eax , ecx sub eax , edi lea edx , [ eax - num ] cmp edx , num ja hexvar sub esp , num push eax push edi mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax ] add esp , hexvar call hexvar sub esp , num mov edi , eax lea eax , [ ebx - hexvar ] push num jmp hexvar mov esi , esi lea edi , [ edi ]
and r3 , r0 , hexvar cmp r3 , hexvar push { r4 , r5 , r6 , r7 , r8 , sb , lr } moveq sb , hexvar beq hexvar cmp r3 , hexvar moveq sb , hexvar beq hexvar cmp r3 , hexvar moveq sb , hexvar beq hexvar cmp r3 , hexvar moveq sb , hexvar beq hexvar cmp r3 , hexvar moveq sb , hexvar beq hexvar cmp r3 , hexvar moveq sb , hexvar movne sb , hexvar tst r0 , hexvar movne r8 , hexvar moveq r8 , hexvar tst r0 , hexvar movne r7 , hexvar moveq r7 , hexvar tst r0 , hexvar movne ip , hexvar moveq ip , hexvar tst r0 , hexvar movne r6 , hexvar moveq r6 , hexvar tst r0 , hexvar movne r5 , hexvar moveq r5 , hexvar tst r0 , num movne r2 , hexvar moveq r2 , hexvar tst r0 , num movne r4 , hexvar moveq r4 , hexvar tst r0 , num movne lr , hexvar moveq lr , hexvar tst r0 , num movne r3 , hexvar moveq r3 , hexvar tst r0 , hexvar strb sb , [ r1 ] strb r8 , [ r1 , num ] strb r7 , [ r1 , num ] strb ip , [ r1 , num ] strb r6 , [ r1 , num ] strb r5 , [ r1 , num ] strb r2 , [ r1 , num ] strb r4 , [ r1 , num ] strb lr , [ r1 , num ] strb r3 , [ r1 , num ] beq hexvar cmp ip , hexvar movne ip , hexvar moveq ip , hexvar strb ip , [ r1 , num ] tst r0 , hexvar beq hexvar cmp r2 , hexvar movne r2 , hexvar moveq r2 , hexvar strb r2 , [ r1 , num ] tst r0 , hexvar popeq { r4 , r5 , r6 , r7 , r8 , sb , pc }
mov rdx , rdi mov eax , hexvar and edx , hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar je hexvar cmp rdx , hexvar mov eax , hexvar mov edx , hexvar cmovne eax , edx nop dword ptr [ rax + rax ] mov byte ptr [ rsi ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num mov rax , rdi sbb ecx , ecx and eax , hexvar and ecx , hexvar add ecx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , cl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , hexvar cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num mov rax , rdi sbb edx , edx and eax , num and edx , hexvar add edx , hexvar cmp rax , num sbb eax , eax mov byte ptr [ rsi + num ] , dl and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar mov byte ptr [ rsi + num ] , al mov rax , rdi and eax , num cmp rax , num sbb eax , eax and eax , hexvar add eax , hexvar test edi , hexvar mov byte ptr [ rsi + num ] , al je hexvar cmp cl , hexvar mov r8d , hexvar mov ecx , hexvar cmovne ecx , r8d mov byte ptr [ rsi + num ] , cl test edi , hexvar je hexvar cmp dl , hexvar mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov byte ptr [ rsi + num ] , dl test edi , hexvar je hexvar cmp al , hexvar mov edx , hexvar mov eax , hexvar cmovne eax , edx mov byte ptr [ rsi + num ] , al ret nop
and r3 , r0 , hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar movne r3 , hexvar strb r3 , [ r1 ] and r3 , r0 , hexvar cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , hexvar cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , hexvar cmp r3 , num movne ip , hexvar moveq ip , hexvar strb ip , [ r1 , num ] and r3 , r0 , hexvar cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , hexvar cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , num cmp r3 , num movne r2 , hexvar moveq r2 , hexvar strb r2 , [ r1 , num ] and r3 , r0 , num cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , num cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , num cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] tst r0 , hexvar beq hexvar cmp ip , hexvar movne ip , hexvar moveq ip , hexvar strb ip , [ r1 , num ] tst r0 , hexvar beq hexvar cmp r2 , hexvar movne r2 , hexvar moveq r2 , hexvar strb r2 , [ r1 , num ] tst r0 , hexvar bxeq lr cmp r3 , hexvar movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] bx lr
and r3 , r0 , hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar beq hexvar cmp r3 , hexvar moveq r3 , hexvar movne r3 , hexvar strb r3 , [ r1 ] and r3 , r0 , hexvar cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , hexvar cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , hexvar cmp r3 , num movne ip , hexvar moveq ip , hexvar strb ip , [ r1 , num ] and r3 , r0 , hexvar cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , hexvar cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , num cmp r3 , num movne r2 , hexvar moveq r2 , hexvar strb r2 , [ r1 , num ] and r3 , r0 , num cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , num cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] and r3 , r0 , num cmp r3 , num movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] tst r0 , hexvar beq hexvar cmp ip , hexvar movne ip , hexvar moveq ip , hexvar strb ip , [ r1 , num ] tst r0 , hexvar beq hexvar cmp r2 , hexvar movne r2 , hexvar moveq r2 , hexvar strb r2 , [ r1 , num ] tst r0 , hexvar bxeq lr cmp r3 , hexvar movne r3 , hexvar moveq r3 , hexvar strb r3 , [ r1 , num ] bx lr
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) addiu a3 , sp , hexvar lw s0 , - hexvar ( gp ) addiu v0 , v0 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar move a1 , zero sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) lw v1 , ( s0 ) sw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) bal hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) bnez v0 , hexvar lw v1 , hexvar ( sp ) beqz v1 , hexvar addiu v0 , v1 , - num lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , - num jal hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r2 , fp , hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] mov r3 , r2 mov r2 , hexvar mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar mvn r3 , num str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , r0 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r2 , r4 mov r1 , num mov r0 , num bl hexvar ldr r3 , [ fp , - hexvar ] sub r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) addiu a3 , sp , hexvar lw s0 , - hexvar ( gp ) addiu v0 , v0 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar move a1 , zero sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) lw v1 , ( s0 ) sw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) bal hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) bnez v0 , hexvar lw v1 , hexvar ( sp ) beqz v1 , hexvar addiu v0 , v1 , - num lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , - num jal hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) addiu a3 , sp , hexvar lw s0 , - hexvar ( gp ) addiu v0 , v0 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar move a1 , zero sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) lw v1 , ( s0 ) sw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) bal hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) bnez v0 , hexvar lw v1 , hexvar ( sp ) beqz v1 , hexvar addiu v0 , v1 , - num lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , - num jal hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num cmp al , num je hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar cmp al , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar cmp al , hexvar jne hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar and eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov eax , num leave ret
push ebx mov eax , dword ptr [ esp + num ] call hexvar add ebx , hexvar movzx edx , byte ptr [ eax + hexvar ] mov ecx , edx and ecx , num cmp cl , num je hexvar mov dword ptr [ ebx + hexvar ] , num xor eax , eax pop ebx ret
push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ esp + num ] movzx edx , byte ptr [ eax + hexvar ] mov ecx , edx and ecx , num cmp cl , num jne hexvar test dl , num jne hexvar mov edx , dword ptr [ esp + hexvar ] and edx , hexvar mov ecx , edx shl ecx , num mov edx , dword ptr [ eax + hexvar ] and edx , hexvar or edx , ecx mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + hexvar ] and edx , dword ptr [ eax + hexvar ] mov eax , num cmp edx , dword ptr [ esp + hexvar ] je hexvar mov dword ptr [ ebx + hexvar ] , num mov eax , num jmp hexvar mov dword ptr [ ebx + hexvar ] , num mov eax , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num cmp al , num je hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar cmp al , num je hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar cmp al , hexvar jne hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar and eax , dword ptr [ rbp - hexvar ] cmp dword ptr [ rbp - hexvar ] , eax je hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov eax , num leave ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax test eax , eax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ rbx ] movsxd rsi , dword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx ] , xmm0 mov qword ptr [ rbx + hexvar ] , num mov rdi , rbx pop rbx jmp hexvar ret
push rbp push rbx push rax mov rbx , rdi test rdi , rdi mov eax , hexvar mov ebp , hexvar cmove ebp , eax mov eax , hexvar jmp hexvar mov eax , ebp nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , rbx call hexvar mov rdi , rbx call hexvar mov eax , hexvar jmp hexvar add rsp , num pop rbx pop rbp ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax test eax , eax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ rbx ] movsxd rsi , dword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx ] , xmm0 mov qword ptr [ rbx + hexvar ] , num mov rdi , rbx pop rbx jmp hexvar ret
beqz a0 , hexvar lui gp , hexvar lw v0 , ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lw t9 , hexvar ( v0 ) beqz t9 , hexvar nop jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) lw v0 , ( s0 ) jalr t9 lw a1 , hexvar ( v0 ) lw gp , hexvar ( sp ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , num ( s0 ) beqz a0 , hexvar nop lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar move a1 , zero jalr t9 move a0 , s0 lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar jr ra nop
ldrb r3 , [ r0 , hexvar ] tst r3 , hexvar bne hexvar ldrb r3 , [ r0 , hexvar ] sub r2 , r3 , num cmp r2 , num bls hexvar cmp r3 , num beq hexvar cmp r3 , num beq hexvar mov r0 , num bx lr ldrb r2 , [ r0 , hexvar ] tst r2 , num bne hexvar and r2 , r2 , hexvar cmp r2 , num cmpeq r3 , num beq hexvar push { r4 , lr } mov r4 , r0 ldm r1 , { r0 , r3 } mov r2 , num mov r1 , r4 blx r3 ldrb r3 , [ r4 , hexvar ] mov r0 , num and r3 , r3 , hexvar strb r3 , [ r4 , hexvar ] pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] and eax , hexvar test al , al jne hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] cmp al , num je hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] cmp al , num jne hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] and eax , num test al , al jne hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] and eax , num test al , al jne hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] and eax , num test al , al jne hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] cmp al , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] movzx eax , byte ptr [ eax + hexvar ] and eax , num test al , al je hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] cmp al , num je hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] cmp al , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] sub esp , num push num push dword ptr [ ebp + num ] push edx call eax add esp , hexvar mov eax , dword ptr [ ebp + num ] movzx edx , byte ptr [ eax + hexvar ] and edx , hexvar mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp + num ] movzx edx , byte ptr [ eax + hexvar ] and edx , hexvar mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp + num ] movzx edx , byte ptr [ eax + hexvar ] and edx , hexvar mov byte ptr [ eax + hexvar ] , dl mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lui v0 , hexvar and v0 , v1 , v0 bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v1 , hexvar ( v0 ) lui v0 , hexvar and v0 , v1 , v0 beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
ldrb r3 , [ r0 , hexvar ] tst r3 , hexvar bne hexvar ldrb r3 , [ r0 , hexvar ] sub r2 , r3 , num cmp r2 , num bls hexvar sub r3 , r3 , num cmp r3 , num bhi hexvar push { r4 , r5 , r6 , lr } mov r3 , r1 mov r4 , r0 ldr r5 , [ r1 , num ] mov r2 , num mov r1 , r0 ldr r0 , [ r3 ] blx r5 ldrb r3 , [ r4 , hexvar ] and r3 , r3 , hexvar strb r3 , [ r4 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) jal hexvar move s0 , a0 move a2 , s0 lw gp , hexvar ( sp ) move a1 , zero lw ra , hexvar ( sp ) move a0 , v0 lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) jal hexvar move s0 , a0 move a2 , s0 lw gp , hexvar ( sp ) move a1 , zero lw ra , hexvar ( sp ) move a0 , v0 lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a3 , sp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw a1 , hexvar ( sp ) addiu a1 , zero , hexvar sw a2 , hexvar ( sp ) move a2 , zero sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov qword ptr [ rsp + hexvar ] , rdx lea rcx , [ rsp + num ] mov esi , hexvar xor edx , edx call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov qword ptr [ rsp + hexvar ] , rdx lea rcx , [ rsp + num ] mov esi , hexvar xor edx , edx call hexvar add rsp , hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + num ] push eax push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ hexvar ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax lea eax , [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] add esp , hexvar pop ebp ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push num push eax lea eax , [ ebx - hexvar ] push eax push hexvar lea esi , [ ebx + hexvar ] push esi call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea esi , [ ebx + hexvar ] push dword ptr [ esp + hexvar ] push num push eax lea eax , [ ebx - hexvar ] push eax push hexvar push esi call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ hexvar ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax lea eax , [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov dl , cl mov dword ptr [ eax ] , hexvar and dl , num movzx eax , dl add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , hexvar and cl , num movzx eax , cl add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , hexvar and cl , num movzx eax , cl add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 ) bnez v0 , hexvar addiu v0 , zero , num lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s0 , a0 lw s1 , hexvar ( a0 ) jal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar nop lw a0 , num ( s1 ) beqz a0 , hexvar lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , num test esi , esi je hexvar mov eax , num cmp dword ptr [ esi + hexvar ] , num jne hexvar pop ebx pop esi pop edi ret
push edi push esi xor eax , eax push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] mov eax , num test edx , edx jne hexvar pop ebx pop esi pop edi ret
lw v1 , hexvar ( a0 ) lw a3 , hexvar ( a0 ) lw v0 , hexvar ( a1 ) slt a2 , v1 , v0 bnez a2 , hexvar lw t0 , hexvar ( a1 ) beq v0 , v1 , hexvar sltu a2 , a3 , t0 slt a2 , v0 , v1 beqz a2 , hexvar nop addiu v0 , zero , num jr ra nop beqz a2 , hexvar slt a2 , v0 , v1 jr ra addiu v0 , zero , - num bne v1 , v0 , hexvar sltu a3 , t0 , a3 bnez a3 , hexvar addiu v0 , zero , num addiu sp , sp , - hexvar sw ra , hexvar ( sp ) move v0 , a1 lw a1 , ( a0 ) lw a0 , ( v0 ) jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov ebp , dword ptr [ edx + hexvar ] mov edi , dword ptr [ eax + hexvar ] cmp esi , ecx jge hexvar add esp , hexvar mov eax , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num lea eax , [ eax - hexvar ] push eax push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar leave ret
push { fp , lr } umull fp , ip , r0 , r1 adds r3 , ip , num movne r3 , num cmp fp , num blt hexvar cmp r3 , num bne hexvar bl hexvar cmp r0 , num popne { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx xor ebx , ebx mov dword ptr [ ebp - hexvar ] , edx mov edx , ebx div dword ptr [ ecx ]
sub rsp , num mov rax , rdi mul rsi seto dl movzx edx , dl test rax , rax mov eax , num cmovns rax , rdx test al , al jne hexvar call hexvar test rax , rax je hexvar add rsp , num ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , ecx mul esi seto dl movzx edx , dl test eax , eax mov eax , num cmovns eax , edx test al , al jne hexvar sub esp , num push esi push ecx call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx pop esi ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r0 mov r7 , r1 mov r6 , r2 ldr r4 , [ r0 , hexvar ] cmp r4 , num beq hexvar mov r2 , r6 mov r1 , r4 mov r0 , r5 blx r7 cmp r0 , num bne hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num bne hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r4 , [ r0 , hexvar ] cmp r4 , num beq hexvar mov r5 , r0 mov r7 , r1 mov r6 , r2 b hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num beq hexvar mov r2 , r6 mov r1 , r4 mov r0 , r5 blx r7 cmp r0 , num beq hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi push esi push ebx sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esi + hexvar ] test ebx , ebx jne hexvar jmp hexvar lea esi , [ esi ] mov ebx , dword ptr [ ebx + hexvar ] test ebx , ebx je hexvar sub esp , num push edi push ebx push esi call ebp add esp , hexvar test eax , eax je hexvar add esp , hexvar mov eax , ebx pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esi + hexvar ] test ebx , ebx jne hexvar jmp hexvar lea esi , [ esi ] mov ebx , dword ptr [ ebx + hexvar ] test ebx , ebx je hexvar sub esp , num push edi push ebx push esi call ebp add esp , hexvar test eax , eax je hexvar add esp , hexvar mov eax , ebx pop ebx pop esi pop edi pop ebp ret
push rbx mov rbx , rdi call hexvar add rax , num je hexvar mov ecx , num xor edx , edx jmp hexvar nop dword ptr [ rax ] mov byte ptr [ rbx + rcx - num ] , sil mov rdx , rdi add rcx , num cmp rax , rdx jbe hexvar movzx esi , byte ptr [ rbx + rdx ] lea rdi , [ rdx + num ] cmp sil , hexvar jne hexvar lea r8 , [ rdx + num ] cmp rax , r8 jbe hexvar movzx r9d , byte ptr [ rbx + rdi ] lea r10d , [ r9 - hexvar ] cmp r10b , num ja hexvar movzx r10d , byte ptr [ rbx + rdx + num ] lea r11d , [ r10 - hexvar ] cmp r11b , num ja hexvar movzx edx , byte ptr [ rbx + rdx + num ] sub edx , hexvar cmp dl , num ja hexvar lea r9d , [ r10 + r9 * num ] lea edx , [ rdx + r9 * num - hexvar ] mov byte ptr [ rbx + rcx - num ] , dl mov rdx , r8 jmp hexvar nop word ptr cs : [ rax + rax ] pop rbx ret
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar lea ebp , [ eax + num ] mov dword ptr [ esp + num ] , edi xor eax , eax jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ esp + num ] mov byte ptr [ eax ] , cl mov eax , ebx add dword ptr [ esp + num ] , num cmp ebp , eax jbe hexvar movzx ecx , byte ptr [ edi + eax ] lea ebx , [ eax + num ] cmp cl , hexvar jne hexvar lea esi , [ eax + num ] cmp esi , ebp jae hexvar movzx edx , byte ptr [ edi + ebx ] mov byte ptr [ esp + hexvar ] , dl sub edx , hexvar cmp dl , num ja hexvar movzx edx , byte ptr [ edi + eax + num ] mov byte ptr [ esp + hexvar ] , dl sub edx , hexvar cmp dl , num ja hexvar movzx eax , byte ptr [ edi + eax + num ] sub eax , hexvar cmp al , num ja hexvar movzx ebx , byte ptr [ esp + hexvar ] movzx ecx , byte ptr [ esp + hexvar ] lea ecx , [ ecx + ebx * num ] mov ebx , dword ptr [ esp + num ] lea eax , [ eax + ecx * num - hexvar ] mov byte ptr [ ebx ] , al mov eax , esi jmp hexvar lea esi , [ esi ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar lea ebp , [ eax + num ] mov dword ptr [ esp + num ] , edi xor eax , eax jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ esp + num ] mov byte ptr [ eax ] , cl mov eax , ebx add dword ptr [ esp + num ] , num cmp ebp , eax jbe hexvar movzx ecx , byte ptr [ edi + eax ] lea ebx , [ eax + num ] cmp cl , hexvar jne hexvar lea esi , [ eax + num ] cmp esi , ebp jae hexvar movzx edx , byte ptr [ edi + ebx ] mov byte ptr [ esp + hexvar ] , dl sub edx , hexvar cmp dl , num ja hexvar movzx edx , byte ptr [ edi + eax + num ] mov byte ptr [ esp + hexvar ] , dl sub edx , hexvar cmp dl , num ja hexvar movzx eax , byte ptr [ edi + eax + num ] sub eax , hexvar cmp al , num ja hexvar movzx ebx , byte ptr [ esp + hexvar ] movzx ecx , byte ptr [ esp + hexvar ] lea ecx , [ ecx + ebx * num ] mov ebx , dword ptr [ esp + num ] lea eax , [ eax + ecx * num - hexvar ] mov byte ptr [ ebx ] , al mov eax , esi jmp hexvar lea esi , [ esi ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , v0 , num beqz v0 , hexvar move a0 , s0 move v1 , zero b hexvar addiu a3 , zero , hexvar sb a1 , ( a0 ) addiu v1 , v1 , num sltu a1 , v1 , v0 beqz a1 , hexvar addiu a0 , a0 , num addu a1 , s0 , v1 lb a1 , ( a1 ) bne a1 , a3 , hexvar addiu a2 , v1 , num sltu a2 , a2 , v0 beqz a2 , hexvar addu a2 , s0 , v1 lb t0 , num ( a2 ) addiu a2 , t0 , - hexvar andi a2 , a2 , hexvar sltiu a2 , a2 , num beqz a2 , hexvar addu a2 , s0 , v1 lb t1 , num ( a2 ) addiu a2 , t1 , - hexvar andi a2 , a2 , hexvar sltiu a2 , a2 , num beqz a2 , hexvar addiu t2 , v1 , num addu a2 , s0 , t2 lbu a2 , ( a2 ) addiu a2 , a2 , - hexvar andi a2 , a2 , hexvar sltiu t3 , a2 , num beqz t3 , hexvar addiu t1 , t1 , - hexvar addiu v1 , t0 , - hexvar sll v1 , v1 , num addu v1 , v1 , t1 sll v1 , v1 , num addu v1 , a2 , v1 sb v1 , ( a0 ) b hexvar move v1 , t2 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { r4 , r5 , r6 , lr } mov r4 , r0 bl hexvar subs r6 , r0 , num ble hexvar ldr r5 , [ r4 , hexvar ] ldr r3 , [ r4 , num ] sub r3 , r3 , r5 cmp r6 , r3 bgt hexvar add r3 , r5 , r6 str r3 , [ r4 , hexvar ] ldr r2 , [ r4 , num ] tst r2 , num beq hexvar ldrb r2 , [ r5 , r6 ] cmp r2 , hexvar addeq r3 , r3 , num streq r3 , [ r4 , hexvar ] cmp r6 , num ble hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar cmp r0 , num bne hexvar ldrb r2 , [ r5 , num ] cmp r2 , hexvar cmpne r2 , hexvar moveq r3 , num movne r3 , num cmp r2 , hexvar orreq r3 , r3 , num cmp r3 , num beq hexvar ldrb r3 , [ r5 , num ] cmp r3 , hexvar beq hexvar mov r2 , r6 mov r1 , r5 mov r0 , r4 bl hexvar str r0 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r5 , [ r0 , hexvar ] ldrb r2 , [ r5 ] cmp r2 , hexvar addeq r3 , r5 , num streq r3 , [ r0 , hexvar ] ldrbeq r2 , [ r5 , num ] moveq r5 , r3 sub r3 , r2 , hexvar moveq r6 , num movne r6 , num cmp r3 , num bhi hexvar mov r4 , num mvn lr , hexvar ldr r7 , [ pc , hexvar ] b hexvar umull r2 , r3 , ip , r7 cmp r4 , r3 , lsr num mov r2 , r1 bgt hexvar add r5 , r5 , num str r5 , [ r0 , hexvar ] ldrb r1 , [ r5 ] add r4 , r4 , r4 , lsl num sub r3 , r1 , hexvar sub ip , lr , r3 and r3 , r3 , hexvar add r4 , r2 , r4 , lsl num cmp r3 , num sub r4 , r4 , hexvar bls hexvar cmp r4 , num orrle r6 , r6 , num cmp r6 , num bne hexvar ldr r3 , [ r0 , num ] mov r6 , r0 sub r3 , r3 , r5 cmp r4 , r3 bgt hexvar ldr r2 , [ r0 , num ] add r3 , r5 , r4 tst r2 , num str r3 , [ r0 , hexvar ] beq hexvar ldrb r2 , [ r5 , r4 ] cmp r2 , hexvar addeq r3 , r3 , num streq r3 , [ r0 , hexvar ] cmp r4 , num ldr r7 , [ r6 , hexvar ] ldr r8 , [ r6 , hexvar ] ble hexvar ldr r1 , [ pc , hexvar ] mov r2 , num mov r0 , r5 bl hexvar subs r1 , r0 , num bne hexvar ldrb r2 , [ r5 , num ] cmp r2 , hexvar cmpne r2 , hexvar moveq r3 , num movne r3 , num cmp r2 , hexvar orreq r3 , r3 , num cmp r3 , num beq hexvar ldrb r3 , [ r5 , num ] cmp r3 , hexvar beq hexvar cmp r7 , r8 blt hexvar mov r0 , num str r0 , [ r6 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgtz v0 , hexvar nop move v0 , zero b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 )
addiu sp , sp , - hexvar lui gp , hexvar addiu v1 , zero , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] mov edx , dword ptr [ edx + num ] cmp edx , num je hexvar sub esp , hexvar push num mov ebx , eax call hexvar add esp , hexvar mov eax , hexvar jmp hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edx , dword ptr [ ebp - hexvar ] imul ecx , edx , hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push ecx push edx push dword ptr [ ebp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v1 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
ldr r3 , [ r0 , num ] push { r4 , lr } ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ r0 , hexvar ] ldr r4 , [ r3 , hexvar ] cmp r4 , num beq hexvar mov r2 , r1 ldr r1 , [ r3 , hexvar ] mov r0 , r2 lsl r2 , r4 , num bl hexvar mov r0 , r4 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push eax push num call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar pop edx pop ecx push eax push num call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar pop edx pop ecx push eax push num call hexvar mov dword ptr [ esp ] , num call hexvar nop
push { r4 , lr } ldr r3 , [ pc , hexvar ] mov r2 , r0 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r0 mov r0 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r0 mov r0 , num bl hexvar mov r0 , num bl hexvar andeq r1 , pc , ip , lsl lr muleq pc , ip , pc
push { r4 , lr } ldr r3 , [ pc , hexvar ] mov r2 , r0 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r0 mov r0 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r0 mov r0 , num bl hexvar mov r0 , num bl hexvar strdeq r5 , r6 , [ r1 ] , -r8
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push eax push num call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar pop edx pop ecx push eax push num call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar pop edx pop ecx push eax push num call hexvar mov dword ptr [ esp ] , num call hexvar nop
push rbx test rdi , rdi je hexvar mov rbx , rdi test byte ptr [ rdi + num ] , num jne hexvar pop rbx ret
push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar nop add esp , num pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] and r3 , r3 , num cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar nop add esp , num pop ebx ret
lui gp , hexvar addiu gp , gp , hexvar lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) subu a0 , v0 , a0 lui v0 , hexvar addiu v0 , v0 , hexvar mult a0 , v0 mfhi v0 addu v0 , v0 , a0 sra v0 , v0 , hexvar sra a0 , a0 , hexvar subu a0 , v0 , a0 mtc1 a0 , f0 cvt.s.w f0 , f0 cvt.d.s f4 , f0 lui v0 , hexvar ldc1 f2 , hexvar ( v0 ) c.lt.d f4 , f2 bc1t hexvar lui v0 , hexvar lwc1 f2 , hexvar ( v0 ) bc1t fcc1 , hexvar lui v0 , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] sub ecx , edx mov edx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx imul edx add edx , ecx mov eax , edx shr eax , hexvar sar edx , hexvar add edx , eax mov dword ptr [ ebp - num ] , edx cvtsi2ss xmm0 , dword ptr [ ebp - num ] mov eax , esp movss dword ptr [ eax ] , xmm0 call hexvar fst dword ptr [ ebp - num ] movss xmm0 , dword ptr [ ebp - num ] movss dword ptr [ ebp - hexvar ] , xmm0 add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] sub ecx , edx mov edx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx imul edx add edx , ecx mov eax , edx shr eax , hexvar sar edx , hexvar add edx , eax mov dword ptr [ ebp - num ] , edx cvtsi2ss xmm0 , dword ptr [ ebp - num ] mov eax , esp movss dword ptr [ eax ] , xmm0 call hexvar fst dword ptr [ ebp - num ] movss xmm0 , dword ptr [ ebp - num ] movss dword ptr [ ebp - hexvar ] , xmm0 add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] sub r3 , r2 , r3 ldr r0 , [ pc , hexvar ] smull r1 , r2 , r3 , r0 add r2 , r3 , r2 asr r2 , r2 , hexvar asr r3 , r3 , hexvar sub r3 , r2 , r3 str r3 , [ fp , - num ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ ebp - num ] , hexvar mov eax , hexvar mov ecx , hexvar cmovle ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax + ecx * num ] , num mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , hexvar jg hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax + ecx * num ] , num mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , hexvar jg hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax + ecx * num ] , num mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] sub eax , hexvar setl cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp edx mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax + ecx * num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebp ret
test dword ptr [ rsi + hexvar ] , hexvar jne hexvar mov rsi , qword ptr [ rsi + num ] test rsi , rsi je hexvar mov rax , qword ptr [ rdi + num ] jmp qword ptr [ rax + hexvar ] nop dword ptr [ rax ] xor eax , eax ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + num ] test dword ptr [ eax + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov edx , dword ptr [ edx + num ] mov dword ptr [ esp + num ] , eax jmp dword ptr [ edx + hexvar ] lea esi , [ esi ] xor eax , eax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , num test dword ptr [ edx + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ edx + num ] test eax , eax je hexvar sub esp , num mov edx , dword ptr [ ecx + num ] push eax push ecx call dword ptr [ edx + hexvar ] add esp , hexvar add esp , hexvar ret
push r12 push rbp push rbx mov rax , qword ptr [ rsi + num ] mov qword ptr [ rdi + num ] , rax mov r12 , qword ptr [ rsi + num ] test r12 , r12 jle hexvar mov rbx , rdi mov qword ptr [ rdi ] , rax lea rdi , [ rax * num ] mov rbp , rsi call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbp + hexvar ] lea rdx , [ r12 * num ] mov rdi , rax call hexvar xor eax , eax pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx mov rax , qword ptr [ rsi + num ] mov qword ptr [ rdi + num ] , rax mov r12 , qword ptr [ rsi + num ] test r12 , r12 jle hexvar mov rbx , rdi mov qword ptr [ rdi ] , rax lea rdi , [ rax * num ] mov rbp , rsi call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar mov rsi , qword ptr [ rbp + hexvar ] lea rdx , [ r12 * num ] mov rdi , rax call hexvar xor eax , eax pop rbx pop rbp pop r12 ret
mov rax , qword ptr [ rsi + num ] mov qword ptr [ rdi + num ] , rax cmp qword ptr [ rsi + num ] , num je hexvar push rbp push rbx sub rsp , num mov rbp , rsi mov rbx , rdi mov qword ptr [ rdi ] , rax lea rdi , [ rax * num ] call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar mov qword ptr [ rbx + num ] , num mov qword ptr [ rbx ] , num mov eax , hexvar jmp hexvar mov rcx , qword ptr [ rbp + num ] lea rdx , [ rcx * num ] mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov qword ptr [ rdi ] , num mov qword ptr [ rdi + num ] , num mov qword ptr [ rdi + hexvar ] , num mov eax , num ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + num ] , edx mov edx , dword ptr [ ebp + hexvar ] cmp dword ptr [ edx + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jle hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] shl eax , num mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] shl edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov r15d , edx mov r14 , rsi mov rbp , rdi mov rdi , rcx call hexvar mov rbx , rax mov rdi , rax call hexvar test rbp , rbp je hexvar mov r12 , rax mov rdi , qword ptr [ rbp ] mov rsi , qword ptr [ rax ] call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ r12 + num ] test rdi , rdi je hexvar call hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rbx + num ] call hexvar cmp eax , r15d jne hexvar mov rdi , qword ptr [ rbx + num ] call hexvar mov edx , r15d mov rdi , r14 mov rsi , rax call hexvar test eax , eax je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a1 sw s3 , hexvar ( sp ) move s3 , a2 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) move a0 , a3 lw t9 , - hexvar ( gp ) bal hexvar sw s2 , hexvar ( sp ) lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar move s1 , v0 beqz s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s2 , v0 lw a1 , ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r3 , r0 mov r2 , r3 ldr r3 , [ sp , hexvar ] cmp r3 , r2 bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r3 , r0 ldr r2 , [ sp , hexvar ] mov r1 , r3 ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a1 sw s3 , hexvar ( sp ) move s3 , a2 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) move a0 , a3 lw t9 , - hexvar ( gp ) bal hexvar sw s2 , hexvar ( sp ) lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar move s1 , v0 beqz s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s2 , v0 lw a1 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] sub eax , - num sete cl movzx edx , cl mov edi , edx mov rdi , qword ptr [ rdi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov edi , dword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] push hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar sub eax , edi sub esp , hexvar mov ebp , eax lea eax , [ eax + hexvar ] push eax call hexvar add esp , hexvar mov esi , eax push ebp push edi push eax call hexvar lea edx , [ ebp + num ] mov byte ptr [ esi + ebp ] , hexvar add esp , hexvar lea eax , [ esi + edx ] sub esp , hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ eax + num ] , hexvar mov byte ptr [ eax + num ] , num push esi call hexvar add esp , hexvar cmp eax , - num je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push rbx call hexvar mov rdi , rax mov rbx , rax call hexvar cmp eax , - num je hexvar mov edi , eax call hexvar mov rax , rbx pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a1 , zero , hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) subu s0 , v0 , s2 lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , s0 , hexvar move a2 , s0 lw gp , hexvar ( sp ) move s1 , v0 move a1 , s2 lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 addu v0 , s1 , s0 addiu v1 , zero , hexvar lw gp , hexvar ( sp ) addiu s0 , s0 , num sb v1 , ( v0 ) lui v1 , hexvar lw t9 , - hexvar ( gp ) addu v0 , s1 , s0 addiu a2 , v1 , - hexvar lw a1 , - hexvar ( v1 ) move a0 , s1 lw v1 , num ( a2 ) lbu a2 , num ( a2 ) swl a1 , ( v0 ) swr a1 , num ( v0 ) swl v1 , num ( v0 ) swr v1 , num ( v0 ) jalr t9 sb a2 , num ( v0 ) addiu v1 , zero , - num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw ra , hexvar ( sp ) move v0 , s1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a0 , zero , num jalr t9 move s0 , zero lw gp , hexvar ( sp ) b hexvar move s1 , v0 lw t9 , - hexvar ( gp )
sub rsp , num mov edx , esi mov rsi , - hexvar cmp edx , num je hexvar mov rsi , - hexvar cmp edx , num je hexvar cmp edx , num setne sil movzx esi , sil lea rsi , [ rsi + rsi * num - hexvar ] call hexvar add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num jne hexvar mov qword ptr [ rbp - hexvar ] , - hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , - hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , - hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , - hexvar nop mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
addiu v0 , a1 , - num sltiu v1 , v0 , num beqz v1 , hexvar move a2 , a1 lui v1 , hexvar sll v0 , v0 , num addiu v1 , v1 , hexvar addu v0 , v0 , v1 j hexvar lw a1 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , num je hexvar cmp eax , num je hexvar cmp eax , num jne hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar nop sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( fp ) addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar mov rdx , rsp mov esi , hexvar mov edi , num call hexvar mov edi , num call hexvar mov edx , num mov rsi , rsp mov edi , num call hexvar mov edi , num call hexvar
push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar mov rbx , rsp mov rdx , rbx lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov edi , num call hexvar mov edx , num mov rsi , rbx mov edi , num call hexvar mov edi , num call hexvar
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax call hexvar sub esp , num lea esi , [ esp + hexvar ] push esi lea eax , [ ebx + hexvar ] push eax push num call hexvar mov eax , num call hexvar add esp , hexvar push num push esi push num call hexvar mov dword ptr [ esp ] , num call hexvar
push { r4 , r5 , r6 , lr } mov r5 , r1 bl hexvar subs r4 , r0 , num beq hexvar mov r2 , r5 mov r1 , num mov r0 , r4 bl hexvar mov r0 , r4 pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a3 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) move a2 , v0 move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , lr } mov r5 , r1 bl hexvar subs r4 , r0 , num beq hexvar mov r2 , r5 mov r1 , num mov r0 , r4 bl hexvar mov r0 , r4 pop { r4 , r5 , r6 , pc }
push { r4 , lr } subs r4 , r1 , num blt hexvar ldr r0 , [ r0 , hexvar ] beq hexvar add r1 , r4 , num bics r1 , r1 , num bne hexvar bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r2 , r4 mov r1 , num mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 pop { r4 , pc }
push { r4 , lr } mov r4 , r1 ldr r3 , [ r0 , hexvar ] ldr r1 , [ r3 , hexvar ] cmp r1 , num beq hexvar ldr r1 , [ r4 , hexvar ] ldr ip , [ r1 , hexvar ] cmp ip , num beq hexvar ldr r2 , [ r3 , hexvar ] mov r0 , r3 blx r2 pop { r4 , pc }
ldr r3 , [ r0 , hexvar ] push { r4 , r5 , r6 , lr } mov r5 , r1 ldr r1 , [ r3 , hexvar ] mov r4 , r2 cmp r1 , num beq hexvar ldr r1 , [ r5 , hexvar ] ldr r2 , [ r1 , hexvar ] cmp r2 , num beq hexvar pop { r4 , r5 , r6 , lr } ldr r2 , [ r3 , hexvar ] mov r0 , r3 bx r2 mov r3 , r0 mov r0 , r5 mov r5 , r3 cmp r4 , num beq hexvar ldr r0 , [ r5 , hexvar ] pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] cmp dword ptr [ rsi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp dword ptr [ rax + hexvar ] , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rcx + hexvar ] call rax mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] shr ecx , hexvar and ecx , num cmp ecx , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov esi , hexvar mov rdi , rax call hexvar cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rsi + hexvar ] mov esi , eax mov eax , esi mov edi , hexvar imul rsi , rdi shr rsi , hexvar mov ecx , esi mov esi , ecx lea ecx , [ rsi + rsi * num ] sub eax , ecx sete dl movzx ecx , dl mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] add ecx , num mov eax , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx + hexvar ] mov esi , dword ptr [ rcx + hexvar ] mov edi , esi mov esi , edi add esi , num mov dword ptr [ rcx + hexvar ] , esi mov qword ptr [ rdx + rdi * num ] , rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov edx , hexvar mov eax , ecx mul edx mov eax , edx shr eax , num mov edx , eax shl edx , num add edx , eax mov eax , ecx sub eax , edx test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num mov eax , eax mov qword ptr [ rbp - hexvar ] , rax shl qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea ecx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx + hexvar ] , ecx mov eax , eax shl rax , num lea rdx , [ rsi + rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov edx , hexvar mov eax , ecx mul edx mov eax , edx shr eax , num mov edx , eax shl edx , num add edx , eax mov eax , ecx sub eax , edx test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , num mov eax , eax mov qword ptr [ rbp - hexvar ] , rax shl qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea ecx , [ rax + num ] mov rdx , qword ptr [ rbp - hexvar ] mov dword ptr [ rdx + hexvar ] , ecx mov eax , eax shl rax , num lea rdx , [ rsi + rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rsi + hexvar ] mov esi , eax mov eax , esi mov edi , hexvar imul rsi , rdi shr rsi , hexvar mov ecx , esi mov esi , ecx lea ecx , [ rsi + rsi * num ] sub eax , ecx sete dl movzx ecx , dl mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] add ecx , num mov eax , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx + hexvar ] mov esi , dword ptr [ rcx + hexvar ] mov edi , esi mov esi , edi add esi , num mov dword ptr [ rcx + hexvar ] , esi mov qword ptr [ rdx + rdi * num ] , rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar lea r12 , [ rsp + hexvar ] xor r13d , r13d lea r15 , [ rsp + hexvar ] nop mov esi , hexvar mov rdi , r15 call hexvar imul rax , r13 , hexvar mov qword ptr [ rsp + num ] , rax mov eax , dword ptr [ rsp + hexvar ] cmp eax , hexvar ja hexvar mov rcx , qword ptr [ rsp + num ] movsxd r14 , dword ptr [ rcx ] test r14d , r14d je hexvar mov rcx , qword ptr [ rsp + hexvar ] not rcx cmp rcx , r14 jb hexvar mov rcx , qword ptr [ rsp + num ] lea rbx , [ rcx ] test eax , eax je hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar cmp r14 , hexvar jb hexvar mov rdi , r15 mov rsi , rbx call hexvar add qword ptr [ rsp + hexvar ] , hexvar add r14 , - hexvar add rbx , hexvar test r14 , r14 jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov ebp , hexvar sub ebp , eax cmp r14 , rbp cmovb rbp , r14 mov edi , eax add rdi , r12 mov rsi , rbx mov rdx , rbp call hexvar mov eax , dword ptr [ rsp + hexvar ] add eax , ebp mov dword ptr [ rsp + hexvar ] , eax add rbx , rbp sub r14 , rbp cmp eax , hexvar jne hexvar mov rdi , r15 mov rsi , r12 call hexvar add qword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + hexvar ] , num test r14 , r14 jne hexvar mov rdi , r15 lea rbx , [ rsp + hexvar ] mov rsi , rbx call hexvar mov rax , qword ptr [ rsp + num ] lea rdx , [ rax ] mov esi , hexvar mov ecx , hexvar mov r8d , num mov rdi , rbx mov r9d , r13d call hexvar test eax , eax jne hexvar add r13 , num cmp r13 , num jbe hexvar xor eax , eax jmp hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar lea r12 , [ rsp + hexvar ] xor r13d , r13d lea r15 , [ rsp + hexvar ] nop mov esi , hexvar mov rdi , r15 call hexvar imul rax , r13 , hexvar mov qword ptr [ rsp + num ] , rax mov eax , dword ptr [ rsp + hexvar ] cmp eax , hexvar ja hexvar mov rcx , qword ptr [ rsp + num ] movsxd r14 , dword ptr [ rcx ] test r14d , r14d je hexvar mov rcx , qword ptr [ rsp + hexvar ] not rcx cmp rcx , r14 jb hexvar mov rcx , qword ptr [ rsp + num ] lea rbx , [ rcx ] test eax , eax je hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar cmp r14 , hexvar jb hexvar mov rdi , r15 mov rsi , rbx call hexvar add qword ptr [ rsp + hexvar ] , hexvar add rbx , hexvar add r14 , - hexvar test r14 , r14 jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov ebp , hexvar sub ebp , eax cmp r14 , rbp cmovb rbp , r14 mov edi , eax add rdi , r12 mov rsi , rbx mov rdx , rbp call hexvar mov eax , dword ptr [ rsp + hexvar ] add eax , ebp mov dword ptr [ rsp + hexvar ] , eax add rbx , rbp sub r14 , rbp cmp eax , hexvar jne hexvar mov rdi , r15 mov rsi , r12 call hexvar add qword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + hexvar ] , num test r14 , r14 jne hexvar mov rdi , r15 lea rbx , [ rsp + hexvar ] mov rsi , rbx call hexvar mov rax , qword ptr [ rsp + num ] lea rdx , [ rax ] mov esi , hexvar mov ecx , hexvar mov r8d , num mov rdi , rbx mov r9d , r13d call hexvar test eax , eax jne hexvar add r13 , num cmp r13 , num jbe hexvar xor eax , eax jmp hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar lea r12 , [ rsp + hexvar ] xor r13d , r13d lea r15 , [ rsp + hexvar ] nop mov esi , hexvar mov rdi , r15 call hexvar imul rax , r13 , hexvar mov qword ptr [ rsp + num ] , rax mov eax , dword ptr [ rsp + hexvar ] cmp eax , hexvar ja hexvar mov rcx , qword ptr [ rsp + num ] movsxd r14 , dword ptr [ rcx ] test r14d , r14d je hexvar mov rcx , qword ptr [ rsp + hexvar ] not rcx cmp rcx , r14 jb hexvar mov rcx , qword ptr [ rsp + num ] lea rbx , [ rcx ] test eax , eax je hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar cmp r14 , hexvar jb hexvar mov rdi , r15 mov rsi , rbx call hexvar add qword ptr [ rsp + hexvar ] , hexvar add rbx , hexvar add r14 , - hexvar test r14 , r14 jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov ebp , hexvar sub ebp , eax cmp r14 , rbp cmovb rbp , r14 mov edi , eax add rdi , r12 mov rsi , rbx mov rdx , rbp call hexvar mov eax , dword ptr [ rsp + hexvar ] add eax , ebp mov dword ptr [ rsp + hexvar ] , eax add rbx , rbp sub r14 , rbp cmp eax , hexvar jne hexvar mov rdi , r15 mov rsi , r12 call hexvar add qword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + hexvar ] , num test r14 , r14 jne hexvar mov rdi , r15 lea rbx , [ rsp + hexvar ] mov rsi , rbx call hexvar mov rax , qword ptr [ rsp + num ] lea rdx , [ rax ] mov esi , hexvar mov ecx , hexvar mov r8d , num mov rdi , rbx mov r9d , r13d call hexvar test eax , eax jne hexvar add r13 , num cmp r13 , num jbe hexvar xor eax , eax jmp hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar lea r12 , [ rsp + hexvar ] xor r13d , r13d lea r15 , [ rsp + hexvar ] nop mov esi , hexvar mov rdi , r15 call hexvar imul rax , r13 , hexvar mov qword ptr [ rsp + num ] , rax mov eax , dword ptr [ rsp + hexvar ] cmp eax , hexvar ja hexvar mov rcx , qword ptr [ rsp + num ] movsxd r14 , dword ptr [ rcx ] test r14d , r14d je hexvar mov rcx , qword ptr [ rsp + hexvar ] not rcx cmp rcx , r14 jb hexvar mov rcx , qword ptr [ rsp + num ] lea rbx , [ rcx ] test eax , eax je hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov eax , dword ptr [ rsp + hexvar ] test eax , eax jne hexvar cmp r14 , hexvar jb hexvar mov rdi , r15 mov rsi , rbx call hexvar add qword ptr [ rsp + hexvar ] , hexvar add rbx , hexvar add r14 , - hexvar test r14 , r14 jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov ebp , hexvar sub ebp , eax cmp r14 , rbp cmovb rbp , r14 mov edi , eax add rdi , r12 mov rsi , rbx mov rdx , rbp call hexvar mov eax , dword ptr [ rsp + hexvar ] add eax , ebp mov dword ptr [ rsp + hexvar ] , eax add rbx , rbp sub r14 , rbp cmp eax , hexvar jne hexvar mov rdi , r15 mov rsi , r12 call hexvar add qword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + hexvar ] , num test r14 , r14 jne hexvar mov rdi , r15 lea rbx , [ rsp + hexvar ] mov rsi , rbx call hexvar mov rax , qword ptr [ rsp + num ] lea rdx , [ rax ] mov esi , hexvar mov ecx , hexvar mov r8d , num mov rdi , rbx mov r9d , r13d call hexvar test eax , eax jne hexvar add r13 , num cmp r13 , num jbe hexvar xor eax , eax jmp hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push { r4 , lr } bl hexvar mov r2 , num ldr r4 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r4 mov r2 , r0 mov r0 , num bl hexvar andeq sl , r2 , r4 , asr num
push rbx lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov rbx , rax call hexvar mov esi , dword ptr [ rax ] mov rdx , rbx mov edi , num xor eax , eax call hexvar nop dword ptr [ rax ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , hexvar lw s0 , ( v0 )
push esi push ebx sub esp , num call hexvar add ebx , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] add esi , hexvar mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov ecx , dword ptr [ eax + num ] mov dword ptr [ edx + num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret num
push ebp mov ebp , esp push edi push esi push eax mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ esi + hexvar ] mov dword ptr [ eax ] , edi mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ eax + num ] , esi mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx add esp , num pop esi pop edi pop ebp ret num
push ebp mov ebp , esp push edi push esi push eax mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ esi + hexvar ] mov dword ptr [ eax ] , edi mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ eax + num ] , esi mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx add esp , num pop esi pop edi pop ebp ret num
push ebp mov ebp , esp push edi push esi push eax mov eax , dword ptr [ ebp + num ] mov ecx , eax mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ esi + hexvar ] mov dword ptr [ eax ] , edi mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ eax + num ] , esi mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx add esp , num pop esi pop edi pop ebp ret num
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov bl , byte ptr [ edx + hexvar ] mov bh , hexvar xor bh , num mov dl , bl xor dl , bh and dl , bl movzx esi , dl cmp esi , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov bl , byte ptr [ edx + hexvar ] and bl , num movzx edx , bl cmp edx , num setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi call ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] call ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov bl , byte ptr [ edx + hexvar ] and bl , num movzx edx , bl cmp edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , - hexvar and v0 , v1 , v0 andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar add rbx , hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ]
push rbx mov rbx , rdi lea rdi , [ rdi + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar add rbx , hexvar mov rdi , rbx pop rbx jmp hexvar nop dword ptr [ rax ]
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 move s1 , a2 sw a3 , hexvar ( sp ) move a1 , a2 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a2 , hexvar ( sp ) move a1 , s1 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 addiu a1 , sp , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v0 , ( v1 ) move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( sp ) sw zero , ( v0 ) b hexvar move v0 , zero
push rbp push r15 push r14 push rbx push rax mov r15 , r9 mov r14 , r8 mov ebp , edx mov rbx , rsi mov qword ptr [ rsp ] , rcx mov rdi , rsi mov esi , edx call hexvar mov rdi , rbx mov esi , ebp mov rdx , r15 call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , rsp mov edx , hexvar mov rdi , rax call hexvar mov dword ptr [ r14 ] , eax mov rdi , rbx call hexvar mov eax , num jmp hexvar mov dword ptr [ r14 ] , num xor eax , eax add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , num call hexvar add ebx , hexvar push edi push esi call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push edi push esi call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ esp + hexvar ] push eax push esi call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx ] , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi ret
push rbp push r15 push r14 push rbx push rax mov r15 , r9 mov r14 , r8 mov ebp , edx mov rbx , rsi mov qword ptr [ rsp ] , rcx mov rdi , rsi mov esi , edx call hexvar mov rdi , rbx mov esi , ebp mov rdx , r15 call hexvar test rax , rax je hexvar mov rbx , rax mov rsi , rsp mov edx , hexvar mov rdi , rax call hexvar mov dword ptr [ r14 ] , eax mov rdi , rbx call hexvar mov eax , num jmp hexvar mov dword ptr [ r14 ] , num xor eax , eax add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovb edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov edx , num call hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rsi cmp qword ptr [ rdx ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , num mov edx , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , num mov edx , num call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovb edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov edx , num call hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov r14d , ecx mov r15 , rdx mov rbp , rsi mov r12 , rdi mov edi , num call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , r12 mov rsi , rbx mov rdx , r15 mov ecx , r14d pop rbx pop r12 pop r14 pop r15 pop rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw s4 , hexvar ( sp ) addiu a0 , zero , num sw s3 , hexvar ( sp ) move s4 , a2 sw s1 , hexvar ( sp ) move s3 , a3 sw s0 , hexvar ( sp ) move s1 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s5 , hexvar ( sp ) lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a1 , s1 jalr t9 move a0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , zero lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s2 , hexvar lui a3 , hexvar beqz s4 , hexvar addiu v0 , zero , - num bne s3 , v0 , hexvar slti v0 , s3 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s4 lw gp , hexvar ( sp ) move s3 , v0 slti v0 , s3 , hexvar beqz v0 , hexvar lui a3 , hexvar lw s5 , ( s2 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push num call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax jne hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar push edi call hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov r14d , ecx mov r15 , rdx mov rbp , rsi mov r12 , rdi mov edi , num call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx mov rsi , rbp call hexvar test eax , eax je hexvar mov rdi , r12 mov rsi , rbx mov rdx , r15 mov ecx , r14d pop rbx pop r12 pop r14 pop r15 pop rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar movss xmm0 , dword ptr [ ebp + num ] xor eax , eax lea ecx , [ ebp - hexvar ] movss xmm1 , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , num movss dword ptr [ esp + hexvar ] , xmm1 movss dword ptr [ ebp - hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push dword ptr [ esp + hexvar ] push num push num push hexvar lea esi , [ esp + hexvar ] push esi call hexvar add esp , hexvar push esi call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rbx , rsp mov ecx , num mov edx , num mov esi , hexvar mov rdi , rbx call hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push dword ptr [ esp + hexvar ] push num push num push hexvar lea esi , [ esp + hexvar ] push esi call hexvar add esp , hexvar push esi call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov rdi , qword ptr [ hexvar ] call hexvar cmp eax , num je hexvar test byte ptr [ hexvar ] , num je hexvar call hexvar cmp dword ptr [ rax ] , hexvar je hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ hexvar ] , num je hexvar call hexvar mov esi , dword ptr [ rax ] mov rdi , qword ptr [ hexvar ] mov dword ptr [ rbp - hexvar ] , esi call hexvar xor edi , edi mov r8 , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rcx , rax mov al , num call hexvar jmp hexvar call hexvar xor edi , edi mov esi , dword ptr [ rax ] mov rcx , qword ptr [ rbp - num ] movabs rdx , hexvar mov al , num call hexvar mov edi , dword ptr [ hexvar ] call hexvar mov rdi , qword ptr [ hexvar ] call hexvar cmp eax , num je hexvar mov edi , dword ptr [ hexvar ] call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar test byte ptr [ hexvar ] , num je hexvar call hexvar cmp dword ptr [ eax ] , hexvar je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar xor ecx , ecx mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar addiu a2 , zero , num lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , v0 lui v0 , hexvar lw s0 , hexvar ( v0 ) beqz s0 , hexvar lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar test byte ptr [ hexvar ] , num je hexvar call hexvar cmp dword ptr [ eax ] , hexvar je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar xor ecx , ecx mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx + hexvar ] , rax sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx call hexvar mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar ldrb r3 , [ fp , - num ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar mvn r3 , num b hexvar ldrb r3 , [ fp , - num ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push r12 push rbp push rbx mov rbp , rdi mov rbx , rsi call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp al , num je hexvar test r12b , r12b jne hexvar cmp r12b , num je hexvar mov edx , num test al , al je hexvar mov eax , edx pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , num mov r0 , hexvar bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] sub rsp , num xor esi , esi mov edi , hexvar call hexvar test rax , rax mov qword ptr [ rip + hexvar ] , rax je hexvar add rsp , num ret
sub rsp , num xor esi , esi mov r8d , hexvar mov ecx , hexvar mov edx , hexvar mov edi , hexvar call hexvar test rax , rax mov qword ptr [ rip + hexvar ] , rax je hexvar add rsp , num ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num push hexvar call hexvar add esp , hexvar test eax , eax mov dword ptr [ ebx + hexvar ] , eax je hexvar add esp , num pop ebx ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] mov r3 , r2 strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r4 , r3 , hexvar ldm r4 , { r3 , r4 } mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r1 , r0 ldrb r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
push r12 push rbp push rbx mov r12 , rdi mov rbp , rsi mov edi , hexvar call hexvar mov rbx , rax mov edx , hexvar mov rsi , rax mov rdi , rbp call hexvar test eax , eax jns hexvar call hexvar mov rcx , r12 mov edx , hexvar mov esi , dword ptr [ rax ] mov edi , num mov eax , num call hexvar mov rdi , rbx call hexvar mov eax , num jmp hexvar cdqe mov byte ptr [ rbx + rax ] , num mov rax , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , dl mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num jne hexvar mov al , byte ptr [ rbp - hexvar ] movabs rdi , hexvar mov byte ptr [ rbp - hexvar ] , al call hexvar mov rdx , qword ptr [ rbp - num ] mov cl , byte ptr [ rbp - hexvar ] and cl , num movzx edi , cl mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , dl mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num jne hexvar mov al , byte ptr [ rbp - hexvar ] movabs rdi , hexvar mov byte ptr [ rbp - hexvar ] , al call hexvar mov rdx , qword ptr [ rbp - num ] mov cl , byte ptr [ rbp - hexvar ] and cl , num movzx edi , cl mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ r4 ] str r3 , [ sp ] mov r2 , hexvar add r3 , sp , num mov r1 , num str ip , [ sp , hexvar ] mov r5 , r0 bl hexvar subs r3 , r0 , num beq hexvar cmp r3 , num beq hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r6 , r0 mov r0 , r5 bl hexvar mov r1 , num mov r3 , r0 mov r2 , r6 mov r0 , r1 bl hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push r12 push rbp xor esi , esi push rbx mov r8d , hexvar mov edx , hexvar mov rbx , rdi sub rsp , hexvar lea rcx , [ rsp + num ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test eax , eax je hexvar cmp eax , num mov rdi , rbx je hexvar call hexvar mov edx , num mov rbx , rax mov esi , hexvar xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi xor eax , eax xor edi , edi call hexvar xor eax , eax mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi mov edx , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax movzx eax , byte ptr [ eax ] mov dword ptr [ esp + hexvar ] , ebx cmp al , hexvar jne hexvar mov esi , esi lea edi , [ edi ] add edx , num movzx eax , byte ptr [ edx ] cmp al , hexvar je hexvar lea ebx , [ edx + num ] cmp al , hexvar mov ebp , ebx jne hexvar lea eax , [ edx + num ] mov edx , ebx mov ebp , eax mov ecx , edx mov ebx , num lea esi , [ esi ] add ecx , num movsx eax , byte ptr [ ecx - num ] test eax , eax je hexvar sub eax , hexvar xor ebx , ebx cmp eax , num jbe hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , edi call hexvar add esp , hexvar mov esi , eax lea eax , [ edi - hexvar ] push num push eax push num call hexvar push esi push eax push num push num call hexvar add esp , hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , ebx push eax lea eax , [ esp + hexvar ] push eax push hexvar push num push esi call hexvar add esp , hexvar test eax , eax je hexvar cmp eax , num je hexvar sub esp , hexvar push esi mov edi , dword ptr [ esp + hexvar ] mov ebx , edi call hexvar add esp , hexvar mov esi , eax lea eax , [ edi - hexvar ] push num push eax push num call hexvar push esi push eax push num push num call hexvar add esp , hexvar xor eax , eax mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r5 , r1 mov r1 , num ldr r0 , [ pc , hexvar ] bl hexvar cmp r0 , num strne r5 , [ r0 , num ] ldrne r3 , [ r4 , hexvar ] strne r3 , [ r0 ] strne r0 , [ r4 , hexvar ] movne r0 , num moveq r0 , num pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) addiu a1 , zero , num lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push num lea eax , [ ebx + hexvar ] push eax call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx + num ] , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ edx ] , eax mov dword ptr [ esi + hexvar ] , edx mov eax , num add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] push num push eax call hexvar mov edx , eax add esp , hexvar xor eax , eax test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx + num ] , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ edx ] , eax mov dword ptr [ esi + hexvar ] , edx mov eax , num add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar pop ebx pop esi ret
push rbp push rbx mov ebp , esi mov rbx , rdi sub rsp , num call hexvar add rsp , num mov edx , ebp mov rdi , rbx pop rbx pop rbp mov rsi , rax jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ]
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , s1 move a1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ edx + num ] mov ebx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + num ] xor esi , edx xor edi , ebx mov edx , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldm r3 , { r1 , r2 } ldr r3 , [ fp , - hexvar ] add r4 , r3 , num ldm r4 , { r3 , r4 } eor r5 , r1 , r3 eor r6 , r2 , r4 ldr r3 , [ fp , - hexvar ] mov r4 , num mov r2 , r3 mov r3 , r4 mov r0 , r5 mov r1 , r6 bl hexvar mov r4 , r3 mov r3 , r2 mov r0 , r3 sub sp , fp , hexvar pop { r4 , r5 , r6 , fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edi , dword ptr [ edx + num ] mov ebx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + num ] xor esi , edx xor edi , ebx mov edx , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push edi push esi xor edi , edi push ebx mov eax , dword ptr [ esp + hexvar ] call hexvar add edx , hexvar mov esi , dword ptr [ eax ] xor esi , dword ptr [ eax + num ] mov ecx , esi mov esi , dword ptr [ eax + num ] xor esi , dword ptr [ eax + hexvar ] mov ebx , esi mov esi , dword ptr [ esp + hexvar ] push edi push esi push ebx mov ebx , edx push ecx call hexvar add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a1 sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] push esi call hexvar pop edx pop ecx push num push eax push num push eax push esi push dword ptr [ esp + hexvar ] call hexvar sar eax , hexvar add esp , hexvar and eax , num add eax , num pop ebx pop esi ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , zero jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r1 , [ fp , - num ] mov r0 , num bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } ldrb r3 , [ r1 ] ldr r5 , [ pc , hexvar ] cmp r3 , hexvar sub sp , sp , num mov r4 , r1 mov r7 , r0 add r5 , pc , r5 beq hexvar cmp r3 , hexvar bne hexvar mov r6 , num mov r2 , num mov r8 , r6 mov r3 , r6 mov r1 , r8 mov r0 , r7 bl hexvar cmp r0 , num bne hexvar add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc }
lui gp , num addiu gp , gp , - hexvar addu gp , gp , t9 addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) move s2 , a0 lb v0 , ( a1 ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar move s0 , a1 addiu v1 , zero , hexvar bne v0 , v1 , hexvar addiu a2 , zero , num move s1 , zero move s3 , zero move a3 , s1 move a1 , s3 move a0 , s2 lw t9 , - hexvar ( gp )
push ebp push edi mov edi , eax push esi push ebx mov esi , edx call hexvar add ebx , hexvar sub esp , hexvar movzx eax , byte ptr [ edx ] cmp al , hexvar je hexvar cmp al , hexvar jne hexvar xor edx , edx mov eax , num xor ebp , ebp push edx push eax push ebp push edi call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , num addiu gp , gp , - hexvar addu gp , gp , t9 addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) move s2 , a0 lb v0 , ( a1 ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar move s0 , a1 addiu v1 , zero , hexvar bne v0 , v1 , hexvar addiu a2 , zero , num move s1 , zero move s3 , zero move a3 , s1 move a1 , s3 move a0 , s2 lw t9 , - hexvar ( gp )
test rsi , rsi je hexvar mov rax , qword ptr [ rdi ] mov qword ptr [ rsi ] , rax mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax ] , num je hexvar test rdx , rdx je hexvar mov dword ptr [ rdx ] , hexvar test rcx , rcx je hexvar mov rax , qword ptr [ rax + num ] mov qword ptr [ rcx ] , rax test r8 , r8 jne hexvar jmp hexvar test rdx , rdx je hexvar mov eax , dword ptr [ rax + num ] mov dword ptr [ rdx ] , eax test rcx , rcx je hexvar mov qword ptr [ rcx ] , num test r8 , r8 je hexvar mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ r8 ] , rax ret
sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , num ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ r3 , num ] ldr r3 , [ sp , num ] str r2 , [ r3 ] ldr r3 , [ sp ] cmp r3 , num beq hexvar ldr r3 , [ sp ] mov r2 , num str r2 , [ r3 ] b hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] mvn r2 , num str r2 , [ r3 ] ldr r3 , [ sp ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ r3 , num ] ldr r3 , [ sp ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] mov r0 , r0 add sp , sp , hexvar bx lr
test rsi , rsi je hexvar mov rax , qword ptr [ rdi ] mov qword ptr [ rsi ] , rax mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax ] , num je hexvar test rdx , rdx je hexvar mov dword ptr [ rdx ] , hexvar test rcx , rcx je hexvar mov rax , qword ptr [ rax + num ] mov qword ptr [ rcx ] , rax test r8 , r8 jne hexvar jmp hexvar test rdx , rdx je hexvar mov eax , dword ptr [ rax + num ] mov dword ptr [ rdx ] , eax test rcx , rcx je hexvar mov qword ptr [ rcx ] , num test r8 , r8 je hexvar mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ r8 ] , rax ret
push edi push esi push ebx mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test ebx , ebx je hexvar mov edi , dword ptr [ eax ] mov dword ptr [ ebx ] , edi mov ebx , dword ptr [ eax + num ] mov edi , dword ptr [ ebx ] test edi , edi jne hexvar test esi , esi je hexvar mov ebx , dword ptr [ ebx + num ] mov dword ptr [ esi ] , ebx test ecx , ecx je hexvar mov dword ptr [ ecx ] , num test edx , edx je hexvar mov eax , dword ptr [ eax + num ] mov dword ptr [ edx ] , eax pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , r9 mov rbp , r8 mov qword ptr [ rsp + hexvar ] , rcx mov r12 , rdx mov r13 , rsi call hexvar mov ebx , hexvar test rax , rax je hexvar mov r15 , rax mov qword ptr [ rsp + num ] , r14 mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r14 , rax mov qword ptr [ rax ] , r13 mov qword ptr [ rax + num ] , r12 mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r14 + hexvar ] , rax mov qword ptr [ r14 + hexvar ] , rbp mov rax , qword ptr [ rsp + num ] mov qword ptr [ r14 + hexvar ] , rax mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar mov rdi , qword ptr [ r15 + num ] call hexvar mov ebx , dword ptr [ r15 + hexvar ] cmp eax , ebx jg hexvar mov rdi , qword ptr [ r15 + num ] xor esi , esi call hexvar test eax , eax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , r14 call hexvar mov ebx , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar lea eax , [ rbx + num ] mov dword ptr [ r15 + hexvar ] , eax mov rdi , qword ptr [ r15 + num ] mov esi , ebx mov rdx , r14 call hexvar mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] sub rax , qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx jmp hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov eax , num leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ esi ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx ] jb hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] add edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] add eax , dword ptr [ ecx ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ecx ] sub edx , eax mov dword ptr [ ecx ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ esi ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx ] jb hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] add edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] add eax , dword ptr [ ecx ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ecx ] sub edx , eax mov dword ptr [ ecx ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ esi ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx ] jb hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] add edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] add eax , dword ptr [ ecx ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ecx ] sub edx , eax mov dword ptr [ ecx ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ eax + hexvar ] cmp dword ptr [ eax + hexvar ] , ebp cmovle ebp , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + hexvar ] cmp ebp , esi jle hexvar call hexvar lea esi , [ esi ] mov edx , dword ptr [ edi ] mov ecx , dword ptr [ edi + hexvar ] add edx , esi add edx , dword ptr [ edi + hexvar ] test ecx , ecx movzx edx , byte ptr [ edx ] jne hexvar mov ebx , dword ptr [ eax ] mov ecx , dword ptr [ edi + num ] mov edx , dword ptr [ ebx + edx * num ] mov byte ptr [ ecx + esi ] , dl add esi , num cmp ebp , esi jne hexvar mov dword ptr [ edi + hexvar ] , esi mov dword ptr [ edi + hexvar ] , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] cmp ecx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jle hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp - num ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] add ecx , dword ptr [ ebp - num ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov cl , al mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - num ] mov byte ptr [ eax + edx ] , cl mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop ebp ret
push r14 push r13 mov r13 , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdi + hexvar ] , r13 cmovbe r13 , qword ptr [ rdi + hexvar ] push r12 push rbp push rbx mov rbp , rdi mov rbx , qword ptr [ rdi + hexvar ] cmp r13 , rbx ja hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rax , qword ptr [ rbp + num ] mov byte ptr [ rax + rbx ] , r12b add rbx , num cmp r13 , rbx je hexvar mov rax , rbx add rax , qword ptr [ rbp ] add rax , qword ptr [ rbp + hexvar ] movzx r12d , byte ptr [ rax ] mov rax , qword ptr [ rbp + hexvar ] test rax , rax jne hexvar call hexvar mov rax , qword ptr [ rax ] movzx r14d , r12b test byte ptr [ rax + r14 * num + num ] , num je hexvar call hexvar mov rax , qword ptr [ rax ] mov r12 , rbx add r12 , qword ptr [ rbp + num ] add rbx , num cmp r13 , rbx mov eax , dword ptr [ rax + r14 * num ] mov byte ptr [ r12 ] , al jne hexvar mov qword ptr [ rbp + hexvar ] , r13 mov qword ptr [ rbp + hexvar ] , r13 pop rbx pop rbp pop r12 pop r13 pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al lea eax , [ hexvar ] mov dword ptr [ hexvar ] , num mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax call hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lui v0 , hexvar addiu a2 , v0 , hexvar lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] add eax , num push eax call hexvar test eax , eax setne al add esp , hexvar movzx eax , al pop ebx ret
push rax add rdi , hexvar call hexvar xor ecx , ecx test rax , rax setne cl mov eax , ecx pop rcx ret
push rax add rdi , hexvar call hexvar xor ecx , ecx test rax , rax setne cl mov eax , ecx pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a0 , a0 , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sltu v0 , zero , v0 lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a2 , a1 move a1 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , zero addiu v1 , zero , - num beq v0 , v1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! mov r2 , r1 sub sp , sp , hexvar mov r1 , r0 mov r0 , num bl hexvar cmn r0 , num beq hexvar add sp , sp , hexvar pop { pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar cmp eax , - num je hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call rax mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne cl and cl , num movzx eax , cl movsxd rsi , eax cmp rsi , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rax , qword ptr [ rbp - hexvar ] mov cl , num mov byte ptr [ rbp - hexvar ] , cl je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] cmp eax , dword ptr [ ebp - hexvar ] mov cl , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push r12 push rbp push rbx mov rbx , rdi mov r12 , rsi mov rbp , rdx jmp hexvar mov rbx , rax mov rsi , rbx mov rdi , rbp call r12
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] blx r3 str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] str r3 , [ fp , - hexvar ] b hexvar mov r3 , num str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] str r3 , [ fp , - hexvar ] b hexvar mov r0 , r3 sub sp , fp , num pop { fp , pc }
ldr r3 , [ r0 , hexvar ] push { r4 , r5 , r6 , r7 , r8 , lr } cmp r3 , num beq hexvar ldr r4 , [ r3 , hexvar ] cmp r4 , num beq hexvar ldrb r3 , [ r3 , hexvar ] tst r3 , num bne hexvar ldr r3 , [ r4 , hexvar ] mov r5 , r0 cmp r3 , num ldr r6 , [ r4 ] beq hexvar ldr r7 , [ r4 , num ] add r8 , r4 , num cmp r7 , num beq hexvar ldr r0 , [ r4 , num ] str r0 , [ r5 , hexvar ] str r8 , [ r5 , num ] mov r2 , hexvar mov r1 , r6 mov r0 , r5 bl hexvar cmp r0 , num bne hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push r12 push rbp push rbx mov rdx , qword ptr [ rdi + hexvar ] test rdx , rdx je hexvar mov rbx , rdi mov rsi , qword ptr [ rdx + hexvar ] test rsi , rsi je hexvar mov eax , num test byte ptr [ rdx + hexvar ] , num jne hexvar mov ebp , dword ptr [ rsi ] cmp qword ptr [ rsi + hexvar ] , num je hexvar add rsi , num mov rdi , rbx call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx mov rdx , qword ptr [ rdi + hexvar ] test rdx , rdx je hexvar mov rbx , rdi mov rsi , qword ptr [ rdx + hexvar ] test rsi , rsi je hexvar mov eax , num test byte ptr [ rdx + hexvar ] , num jne hexvar mov ebp , dword ptr [ rsi ] cmp qword ptr [ rsi + hexvar ] , num je hexvar add rsi , num mov rdi , rbx call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov r15 , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ r15 + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rbp , [ rax + num ] movabs r14 , hexvar mov qword ptr [ rsp + num ] , r13 nop dword ptr [ rax ] movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ r15 + hexvar ] mov r9d , dword ptr [ r15 + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , rbp mov r8 , qword ptr [ rsp + hexvar ] call hexvar add r12 , r14 add rbx , r14 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp + num ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ r15 + hexvar ] mov r9d , dword ptr [ r15 + hexvar ] add r15 , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r8 , r15 call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + hexvar ] lea ecx , [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push eax push ecx push edx push hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub dword ptr [ esp + hexvar ] , hexvar add dword ptr [ esp + hexvar ] , hexvar add dword ptr [ esp + hexvar ] , hexvar cmp dword ptr [ esp + hexvar ] , hexvar ja hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ esp + hexvar ] lea ecx , [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov esi , eax mov eax , dword ptr [ esp + hexvar ] sub esp , num push edx push ecx push esi push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar lui v0 , hexvar addiu gp , gp , hexvar sltu v0 , a3 , v0 sw fp , hexvar ( sp ) sw s5 , hexvar ( sp ) move fp , a0 sw s3 , hexvar ( sp ) move s5 , a3 sw s2 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) move s2 , a2 sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bnez v0 , hexvar sw gp , hexvar ( sp ) addiu s7 , a0 , hexvar lui s6 , hexvar move s4 , a3 move s1 , a2 move s0 , a1 lw v0 , num ( fp )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ esp + hexvar ] , hexvar mov esi , dword ptr [ esp + hexvar ] jbe hexvar lea eax , [ esi + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov esi , edi mov edi , dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] shr edx , hexvar mov dword ptr [ esp + hexvar ] , edx shl edx , hexvar lea eax , [ ebp + edx + hexvar ] mov dword ptr [ esp + num ] , eax sub esp , num push dword ptr [ edi + num ] push dword ptr [ esp + hexvar ] push dword ptr [ edi + hexvar ] push hexvar push esi add esi , hexvar push ebp add ebp , hexvar call hexvar add esp , hexvar cmp ebp , dword ptr [ esp + num ] jne hexvar mov eax , dword ptr [ esp + hexvar ] and dword ptr [ esp + hexvar ] , hexvar mov esi , edi add eax , num shl eax , hexvar add dword ptr [ esp + hexvar ] , eax add dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar lea eax , [ esi + hexvar ] sub esp , num push dword ptr [ esi + num ] push eax push dword ptr [ esi + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar pop ebx ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r5 , r2 cmp r0 , num beq hexvar mov r2 , r5 mov r1 , r4 bl hexvar cmp r0 , num mvnne r3 , num strne r3 , [ r0 , hexvar ] movne r3 , num strne r3 , [ r0 , hexvar ] pop { r4 , r5 , r6 , pc }
push rbp push rbx sub rsp , num mov rbx , rsi mov rbp , rdx test rdi , rdi je hexvar mov rdx , rbp mov rsi , rbx call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , - num mov qword ptr [ rax + hexvar ] , num add rsp , num pop rbx pop rbp ret
sub rsp , num test rdi , rdi je hexvar mov qword ptr [ rdi + hexvar ] , - num mov qword ptr [ rdi + hexvar ] , num mov rax , rdi add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , - num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx esi , cl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi call hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , ecx mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx esi , cl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi call hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , ecx mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar bl hexvar mov r2 , r0 ldr r3 , [ fp , - num ] str r3 , [ r2 ] mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a1 beqz v0 , hexvar move a0 , v0 move a1 , s1 jal hexvar move s0 , v0 lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop move a0 , s0 lw gp , hexvar ( sp ) move s1 , v0 lw s2 , ( v0 ) lw t9 , - hexvar ( gp )
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 pop rcx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov eax , esi add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea esi , [ ebx - hexvar ] push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , num call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , num mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax movabs rdi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovge ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num call hexvar xor ecx , ecx cmp ecx , eax mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jl hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num call hexvar xor ecx , ecx cmp ecx , eax je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num js hexvar sub esp , num push num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mov r1 , hexvar ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num blt hexvar mov r2 , num mov r1 , num ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r0 , [ fp , - num ] bl hexvar mvn r3 , num str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] bl hexvar mov r3 , r0 ldr r1 , [ r3 ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , num ] mov r0 , num bl hexvar bl hexvar andeq r6 , r1 , r4 , lsr r5
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) lw a3 , hexvar ( fp ) lui v0 , hexvar addiu a2 , v0 , hexvar move a1 , v1 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop
push esi push ebx mov esi , eax push edx call hexvar add ebx , hexvar call hexvar lea edx , [ ebx - hexvar ] push esi push edx push dword ptr [ eax ] push num call hexvar call hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar call hexvar nop word ptr cs : [ eax + eax ] nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov edx , dword ptr [ ebp + hexvar ] movsx edx , byte ptr [ edx ] cmp eax , edx mov byte ptr [ ebp - hexvar ] , cl jne hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] add ecx , - num mov dword ptr [ ebp - num ] , ecx cmp eax , ecx jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] sub eax , ecx add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov edx , dword ptr [ ebp + hexvar ] movsx edx , byte ptr [ edx ] cmp eax , edx mov byte ptr [ ebp - hexvar ] , cl jne hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] add ecx , - num mov dword ptr [ ebp - num ] , ecx cmp eax , ecx jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] sub eax , ecx add esp , hexvar pop ebp ret
push { r4 , fp } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r4 , [ fp , - num ] b hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] ldrb r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r2 , r3 bne hexvar ldr r3 , [ fp , - num ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] mov r2 , r4 sub r3 , r3 , r2 mov r0 , r3 sub sp , fp , num pop { r4 , fp } bx lr
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) sw s0 , num ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lui v0 , hexvar ori v0 , v0 , hexvar sw v0 , num ( fp ) lw s0 , hexvar ( fp ) b hexvar nop lw v0 , num ( fp ) addiu v0 , v0 , - num sw v0 , num ( fp ) lw v0 , num ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v1 , ( v0 ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) bnez v0 , hexvar nop b hexvar nop nop lw v0 , hexvar ( fp ) move v1 , s0 subu v0 , v0 , v1 move sp , fp lw fp , hexvar ( sp ) lw s0 , num ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] movzx eax , word ptr [ esi + hexvar ] and ax , hexvar cmp ax , hexvar je hexvar lea eax , [ ebx - hexvar ] sub esp , num push hexvar push eax call hexvar add esp , hexvar and word ptr [ esi + hexvar ] , hexvar add esp , num pop ebx pop esi ret
push ebx call hexvar add edx , hexvar sub esp , num mov ebx , dword ptr [ esp + hexvar ] movzx eax , word ptr [ ebx + hexvar ] and ax , hexvar cmp ax , hexvar je hexvar lea eax , [ edx - hexvar ] sub esp , num push hexvar push eax call hexvar add esp , hexvar and word ptr [ ebx + hexvar ] , hexvar add esp , num pop ebx ret
push ebx sub esp , num call hexvar add edx , hexvar mov ebx , dword ptr [ esp + hexvar ] movzx eax , word ptr [ ebx + hexvar ] and ax , hexvar cmp ax , hexvar je hexvar sub esp , num push hexvar lea eax , [ edx - hexvar ] push eax call hexvar add esp , hexvar and word ptr [ ebx + hexvar ] , hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] shr ecx , num mov edx , hexvar xor edx , num mov esi , ecx xor esi , edx and esi , ecx cmp esi , num je hexvar movabs rdi , hexvar mov esi , hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , hexvar xor edx , hexvar or ecx , esi or edx , hexvar xor ecx , hexvar and ecx , edx mov dword ptr [ rax + hexvar ] , ecx add rsp , hexvar pop rbp ret
push r12 push rbp mov rsi , rdi push rbx mov rbp , rdi mov edx , num xor edi , edi call hexvar cmp rbp , rax mov rbx , rax je hexvar mov rsi , rbp mov rdi , rax call hexvar test al , al je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , lr } mov r1 , r0 mov r4 , r0 sub sp , sp , num mov r2 , num mov r0 , num bl hexvar cmp r4 , r0 mov r5 , r0 beq hexvar mov r1 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r5 add sp , sp , num pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx setne bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] lea eax , [ ecx + eax + num ] mov edx , esp mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , esp mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax mov dword ptr [ esi + num ] , hexvar call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push r12 push rbp mov rsi , rdi push rbx mov rbp , rdi mov edx , num xor edi , edi mov rbx , rbp call hexvar cmp rbp , rax je hexvar mov rsi , rbp mov rdi , rax mov r12 , rax call hexvar test al , al mov rbx , r12 je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push num mov esi , eax push hexvar push eax call hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar mov edi , eax push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push r15 push r14 push r13 push r12 push rbx mov r14 , rcx mov r15 , rdx mov r12 , rsi mov r13 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r13 call hexvar mov rdi , rbx mov rsi , r12 mov rdx , r15 mov rcx , r14 call hexvar mov r14 , rax mov rdi , rbx call hexvar mov rax , r14 jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r13 pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , hexvar mov r0 , num bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num mov r1 , hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push num mov esi , eax push hexvar push eax call hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar mov edi , eax push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , - num sete cl and cl , num movzx edx , cl mov dword ptr [ ebp - num ] , eax mov eax , edx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , - num sete cl and cl , num movzx edx , cl mov dword ptr [ ebp - num ] , eax mov eax , edx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , - num sete cl and cl , num movzx edx , cl mov dword ptr [ ebp - num ] , eax mov eax , edx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , - num sete cl and cl , num movzx edx , cl mov dword ptr [ ebp - num ] , eax mov eax , edx add esp , num pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r0 , [ fp , - num ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov ip , r0 mov r4 , r1 mov r6 , r2 mov r7 , num mov sl , num sub sp , sp , hexvar ldr sb , [ sp , hexvar ] mov r5 , r3 lsl r8 , sb , num ldrb r3 , [ sp , hexvar ] rsb r8 , r8 , num cmp r3 , num ldrne r3 , [ ip , hexvar ] ldreq r3 , [ ip , hexvar ] ldr r2 , [ ip , hexvar ] lsr r0 , r3 , num add fp , r6 , r8 sub r3 , r3 , r0 addne lr , ip , num addeq lr , ip , hexvar sub r6 , fp , r0 , lsl num add r2 , r2 , num mov r1 , num str r0 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str fp , [ r4 , num ] str fp , [ r4 ] str r6 , [ r4 , hexvar ] str r6 , [ r4 , num ] str lr , [ r4 , hexvar ] str ip , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] strb r7 , [ r4 , hexvar ] add r0 , r4 , hexvar bl hexvar lsr r3 , r5 , num cmp r5 , num add r1 , r4 , hexvar sub r5 , r5 , r3 bls hexvar str r1 , [ r4 , hexvar ] mov r0 , r4 stm sp , { sb , sl } mov r2 , fp bl hexvar mov ip , r4 str r0 , [ r4 , hexvar ] mov r3 , num mov r4 , r0 b hexvar mov r0 , r1 str r7 , [ r4 , hexvar ] str r7 , [ r4 , hexvar ] add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov ip , r0 mov r4 , r1 mov r6 , r2 mov r7 , num mov sl , num sub sp , sp , hexvar ldr sb , [ sp , hexvar ] mov r5 , r3 lsl r8 , sb , num ldrb r3 , [ sp , hexvar ] rsb r8 , r8 , num cmp r3 , num ldrne r3 , [ ip , hexvar ] ldreq r3 , [ ip , hexvar ] ldr r2 , [ ip , hexvar ] lsr r0 , r3 , num add fp , r6 , r8 sub r3 , r3 , r0 addne lr , ip , num addeq lr , ip , hexvar sub r6 , fp , r0 , lsl num add r2 , r2 , num mov r1 , num str r0 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str fp , [ r4 , num ] str fp , [ r4 ] str r6 , [ r4 , hexvar ] str r6 , [ r4 , num ] str lr , [ r4 , hexvar ] str ip , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] strb r7 , [ r4 , hexvar ] add r0 , r4 , hexvar bl hexvar lsr r3 , r5 , num cmp r5 , num add r1 , r4 , hexvar sub r5 , r5 , r3 bls hexvar str r1 , [ r4 , hexvar ] mov r0 , r4 stm sp , { sb , sl } mov r2 , fp bl hexvar mov ip , r4 str r0 , [ r4 , hexvar ] mov r3 , num mov r4 , r0 b hexvar mov r0 , r1 str r7 , [ r4 , hexvar ] str r7 , [ r4 , hexvar ] add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 mov r15 , r8 push r13 push r12 push rbp mov rbp , r8 push rbx shl rbp , num mov rbx , rsi neg rbp sub rsp , hexvar test r9b , r9b lea r13 , [ rdx + rbp ] je hexvar mov rax , qword ptr [ rdi + hexvar ] mov r12 , r13 mov rdx , rax shr rdx , num mov rsi , rdx sub rax , rdx shl rsi , num sub r12 , rsi lea rsi , [ rdi + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rdi + hexvar ] lea r14 , [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rdi lea rdi , [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , rsi mov qword ptr [ rbx + hexvar ] , r13 xor esi , esi mov qword ptr [ rbx ] , r13 add eax , num mov qword ptr [ rbx + hexvar ] , r12 mov qword ptr [ rbx + num ] , r12 mov qword ptr [ rbx + hexvar ] , rdx mov dword ptr [ rbx + hexvar ] , eax mov byte ptr [ rbx + hexvar ] , num mov qword ptr [ rsp + num ] , rcx call hexvar mov rcx , qword ptr [ rsp + num ] cmp rcx , num ja hexvar mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num add rsp , hexvar mov rax , r14 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 move s3 , a3 lbu v0 , hexvar ( sp ) beqz v0 , hexvar lw s4 , hexvar ( sp ) lw v0 , hexvar ( a0 ) srl v1 , v0 , num subu v0 , v0 , v1 sll s1 , s4 , num subu s1 , a2 , s1 sll s2 , v1 , num subu s2 , s1 , s2 addiu a1 , a0 , num sw s1 , num ( s0 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , num push edx push eax push dword ptr [ esp + hexvar ] push num push num push dword ptr [ esp + hexvar ] push num call hexvar cmp eax , - num mov edx , num cmove eax , edx add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rcx mov r8d , edx mov ecx , num mov edx , num mov rsi , rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , - num jne hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] leave ret
sub rsp , num mov r9 , rsi mov r8d , edx mov rsi , rdi mov edx , num xor edi , edi mov ecx , num call hexvar mov edx , num cmp rax , - num cmove rax , rdx add rsp , num ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , num sub esp , num push edx push eax push dword ptr [ ebp + hexvar ] push num push num push dword ptr [ ebp + num ] push num mov ebx , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] call hexvar sub esp , hexvar mov dword ptr [ eax ] , num push esi call hexvar add esp , hexvar test ah , hexvar je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar sub esp , hexvar push esi call dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax js hexvar je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14d , edx mov r15 , rsi mov rbp , rdi call hexvar mov dword ptr [ rax ] , num mov rdi , rbp call hexvar and eax , hexvar mov dword ptr [ rsp + num ] , eax mov eax , hexvar mov r12d , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov ebx , hexvar nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov ebx , dword ptr [ rsp ] jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , rbp call hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ rsp + num ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar cmp dword ptr [ rsp ] , num mov eax , hexvar cmove eax , r12d jmp hexvar mov rdi , rbp call qword ptr [ rbp + hexvar ] mov dword ptr [ rsp ] , eax cmp dword ptr [ rsp ] , num mov eax , hexvar cmovs eax , r13d jmp hexvar cmp dword ptr [ rbp + hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov rdi , rbp mov rsi , r15 mov edx , r14d call hexvar mov ebx , eax mov eax , hexvar jmp hexvar mov eax , ebx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r14 push rbx mov r14d , edx mov rbp , rsi mov rbx , rdi call hexvar mov dword ptr [ rax ] , num mov rdi , rbx call hexvar test eax , hexvar je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rdi , rbx call hexvar mov eax , hexvar pop rbx pop r14 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 move s2 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , ( v0 )
push r15 push r14 push r13 push r12 push rbp push rbx mov rbx , rdi mov rbp , rsi mov rdx , rbx sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov r15 , rax mov rcx , qword ptr [ rip + hexvar ] mov rdx , rbp mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test r15 , r15 je hexvar test rax , rax mov r14 , rax je hexvar mov rsi , qword ptr [ r15 + hexvar ] mov rcx , qword ptr [ rax + hexvar ] lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar cmp rcx , rax je hexvar mov rax , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ r15 + hexvar ] mov rcx , qword ptr [ r14 + hexvar ] add rdi , rsi add rcx , rax cmp rdi , rcx je hexvar sbb eax , eax or eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx mov rbx , rdi mov rbp , rsi mov rdx , rbx sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov r15 , rax mov rcx , qword ptr [ rip + hexvar ] mov rdx , rbp mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test r15 , r15 mov r14 , rax sete cl test rax , rax sete al or cl , al jne hexvar mov rdi , qword ptr [ r15 + hexvar ] lea rax , [ rip + hexvar ] mov rsi , qword ptr [ r14 + hexvar ] cmp rdi , rax je hexvar cmp rsi , rax je hexvar mov rax , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov r9 , qword ptr [ r15 + hexvar ] mov rsi , qword ptr [ r14 + hexvar ] add r9 , rdi add rsi , rax cmp r9 , rsi je hexvar sbb eax , eax or eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx mov rbx , rdi mov rbp , rsi mov rdx , rbx sub rsp , hexvar mov rdi , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov r15 , rax mov rcx , qword ptr [ rip + hexvar ] mov rdx , rbp mov esi , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test r15 , r15 je hexvar test rax , rax mov r14 , rax je hexvar mov rsi , qword ptr [ r15 + hexvar ] mov rcx , qword ptr [ rax + hexvar ] lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar cmp rcx , rax je hexvar mov rax , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ r15 + hexvar ] mov rcx , qword ptr [ r14 + hexvar ] add rdi , rsi add rcx , rax cmp rdi , rcx je hexvar sbb eax , eax or eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r4 , [ pc , hexvar ] mov r2 , r0 mov r7 , r0 ldr r0 , [ r4 , hexvar ] mov r8 , r1 ldr r1 , [ r0 , num ] sub sp , sp , hexvar ldr r5 , [ r1 , hexvar ] ldr r3 , [ r4 , hexvar ] ldr r1 , [ r4 , hexvar ] blx r5 mov r5 , r0 ldr r0 , [ r4 , hexvar ] ldr r3 , [ r4 , hexvar ] ldr r2 , [ r0 , num ] ldr r1 , [ r4 , hexvar ] ldr r6 , [ r2 , hexvar ] mov r2 , r8 blx r6 cmp r0 , num cmpne r5 , num beq hexvar ldr r1 , [ r5 , hexvar ] ldr r3 , [ pc , hexvar ] mov r6 , r0 cmp r1 , r3 ldr r2 , [ r0 , hexvar ] beq hexvar cmp r2 , r3 beq hexvar ldr r0 , [ r1 , hexvar ] ldr r3 , [ r6 , num ] ldr r1 , [ r2 , hexvar ] ldr r2 , [ r5 , num ] add r3 , r1 , r3 add r2 , r0 , r2 cmp r2 , r3 beq hexvar blo hexvar mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 strhi r2 , [ r1 , hexvar ]
sltu v0 , a1 , a3 bnez v0 , hexvar addiu v0 , zero , - num sltu v0 , a3 , a1 beq a0 , a2 , hexvar nop lw v1 , hexvar ( a0 )
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v1 , v0 beqz v0 , hexvar nop addiu v0 , zero , - num sw v0 , num ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v0 , v1 beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , num ( fp ) b hexvar nop sw zero , num ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bne v1 , v0 , hexvar nop lw v0 , num ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
xor eax , eax cmp rsi , rcx mov r8d , hexvar seta al cmovb eax , r8d cmp rdi , rdx je hexvar mov r8d , dword ptr [ rdi + hexvar ] cmp r8 , rsi jb hexvar mov rsi , qword ptr [ rdi + hexvar ] test rsi , rsi cmovne rdi , rsi mov esi , dword ptr [ rdx + hexvar ] cmp rsi , rcx jae hexvar cmp rdi , rdx jb hexvar mov edx , num cmova eax , edx ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp + num ] cmp eax , dword ptr [ ebp + hexvar ] jne hexvar mov eax , dword ptr [ ebp - num ] jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp + hexvar ] , eax ja hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp + hexvar ] , eax ja hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp + num ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] cmp eax , dword ptr [ ebp + hexvar ] jbe hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne r8b movzx ecx , r8b mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx esi , cl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov ecx , edx mov edx , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov ebp , ecx push dword ptr [ esp + hexvar ] push num push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax sub esp , num push num push edi call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar mov dword ptr [ edx + num ] , ebp mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ edx ] , eax mov dword ptr [ esi + hexvar ] , edx mov eax , num jmp hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne r8b movzx ecx , r8b mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx esi , cl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw s0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lw v1 , hexvar ( fp ) lw v1 , num ( v1 ) move a1 , v1 lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop move s0 , v0 lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) and v0 , s0 , v0 beqz v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bne v1 , v0 , hexvar nop move v0 , s0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r4 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] ldr r2 , [ r2 , num ] mov r1 , r2 ldr r0 , [ fp , - hexvar ] blx r3 mov r4 , r0 ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] and r3 , r3 , r4 cmp r3 , num beq hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 bne hexvar mov r3 , r4 mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi xor eax , eax mov cl , al mov eax , dword ptr [ ebp + hexvar ] and eax , dword ptr [ ebp - hexvar ] cmp eax , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + num ] setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrh r3 , [ r3 , hexvar ] cmp r3 , hexvar beq hexvar ldr r3 , [ fp , - hexvar ] ldrh r3 , [ r3 , hexvar ] cmp r3 , hexvar beq hexvar mov r3 , num b hexvar mov r3 , num and r3 , r3 , num and r2 , r3 , hexvar ldr r3 , [ pc , hexvar ] strb r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ pc , hexvar ] str r3 , [ r2 , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ pc , hexvar ] str r3 , [ r2 , hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ fp , - num ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar mov r2 , num ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a0 , hexvar ( a0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar move a3 , zero move a2 , zero addiu a1 , zero , num sw zero , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar addiu a0 , a0 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r0 , hexvar bl hexvar mov r2 , hexvar mov r4 , r0 mov r1 , num add r0 , r0 , hexvar bl hexvar mov r1 , num mov r0 , num ldr r3 , [ r5 , hexvar ] str r1 , [ r4 , num ] strb r1 , [ r4 , hexvar ] str r3 , [ r4 ] str r4 , [ r5 , hexvar ] str r0 , [ r4 , num ] pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push num push num push num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw zero , hexvar ( sp ) move a3 , zero move a2 , zero addiu a1 , zero , num jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar mov r3 , num mov r0 , r3 bx lr ldr r2 , [ r0 , hexvar ] cmp r2 , num bne hexvar ldrb r3 , [ r0 , hexvar ] cmp r3 , num bne hexvar ldrb r2 , [ r0 , hexvar ] cmp r2 , num bne hexvar ldrb r3 , [ r0 , hexvar ] cmp r3 , num bne hexvar ldrh r2 , [ r0 , hexvar ] cmp r2 , num bne hexvar ldrb r2 , [ r0 , hexvar ] cmp r2 , num bne hexvar ldrb r2 , [ r0 , hexvar ] cmp r2 , num ldrbeq r3 , [ r0 , hexvar ] eoreq r3 , r3 , num b hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero andi v0 , v0 , num andi v0 , v0 , hexvar move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
xor eax , eax cmp qword ptr [ rdi + hexvar ] , num je hexvar ret nop dword ptr [ rax + rax ] cmp qword ptr [ rdi + hexvar ] , num jne hexvar movzx eax , byte ptr [ rdi + hexvar ] test al , al jne hexvar cmp byte ptr [ rdi + hexvar ] , num jne hexvar movabs rdx , hexvar test qword ptr [ rdi + hexvar ] , rdx jne hexvar movzx eax , byte ptr [ rdi + hexvar ] test al , al jne hexvar cmp byte ptr [ rdi + hexvar ] , num jne hexvar movzx eax , byte ptr [ rdi + hexvar ] xor eax , num ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dl , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl jne hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num mov cl , num mov byte ptr [ ebp - num ] , cl jne hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ eax + hexvar ] , num mov cl , num mov byte ptr [ ebp - num ] , cl jne hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ eax + hexvar ] , num mov cl , num mov byte ptr [ ebp - num ] , cl jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num mov al , num mov byte ptr [ ebp - num ] , al jne hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ eax + hexvar ] , num mov cl , num mov byte ptr [ ebp - num ] , cl jne hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ eax + hexvar ] , num mov cl , num mov byte ptr [ ebp - num ] , cl jne hexvar mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax + hexvar ] mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] xor al , hexvar and al , num movzx eax , al add esp , hexvar pop ebp ret
push { fp , lr } umull fp , ip , r0 , r1 adds r3 , ip , num movne r3 , num cmp fp , num blt hexvar cmp r3 , num bne hexvar bl hexvar cmp r0 , num popne { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] mov r0 , num ldr ip , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] umull r1 , r2 , ip , r3 mov r3 , num mov r4 , num mov r3 , r2 mov r4 , num cmp r3 , num beq hexvar mov r0 , num cmp r1 , num bge hexvar mov r0 , num mov r3 , r0 and r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num bne hexvar ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar bl hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push esi push ebx call hexvar add ebx , hexvar push eax call hexvar mov dword ptr [ eax ] , hexvar mov esi , eax lea eax , [ ebx - hexvar ] push edx push num push eax push num call hexvar add esp , hexvar push eax push dword ptr [ esi ] push num call hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v1 , zero , hexvar sw v1 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , v0 addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp )
push rbx call hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdx , rax mov esi , dword ptr [ rbx ] mov edi , num mov eax , num call hexvar pop rbx ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sp , sp , num ldr r3 , [ r0 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r4 , [ r3 ] cmp r4 , num beq hexvar mov r5 , r0 ldr r8 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r7 , [ pc , hexvar ] b hexvar mov r1 , r7 mov r0 , r6 bl hexvar b hexvar mov r1 , hexvar mov r0 , r6 bl hexvar b hexvar mov r1 , r8 mov r0 , r6 bl hexvar b hexvar ldr r3 , [ r5 , hexvar ] mvn r2 , num str r2 , [ r3 , hexvar ] mov r0 , sl bl hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar ldr r3 , [ r4 , num ] cmp r3 , num bne hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num bls hexvar add r3 , r3 , num ldr sb , [ r4 , r3 , lsl num ] ldr r3 , [ sb , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sb , hexvar ] tst r3 , hexvar beq hexvar ldr r3 , [ sb , hexvar ] tst r3 , hexvar beq hexvar ldr r3 , [ sb , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r5 , num ] ldr r1 , [ r3 , num ] ldr r3 , [ r5 , hexvar ] ldr r3 , [ r3 , hexvar ] mov r2 , num clz r1 , r1 lsr r1 , r1 , num ldr r0 , [ sb , hexvar ] blx r3 subs sl , r0 , num beq hexvar add r3 , sb , hexvar ldm r3 , { r2 , r3 } mov r1 , num str r1 , [ sp ] mov r0 , r5 bl hexvar cmp r0 , num bne hexvar mov r2 , r5 ldr r1 , [ sb , hexvar ] mov r0 , sl bl hexvar ldr r3 , [ sb , hexvar ] cmp r0 , r3 bne hexvar b hexvar add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push r14 push r13 push r12 push rbp push rbx mov rbp , rdi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r13 , - num jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , r13 mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + num ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , num jbe hexvar lea eax , [ rax - num ] mov r12 , qword ptr [ rbx + rax * num + hexvar ] cmp qword ptr [ r12 + hexvar ] , num jne hexvar test byte ptr [ r12 + hexvar ] , hexvar je hexvar test byte ptr [ r12 + hexvar ] , hexvar je hexvar cmp qword ptr [ r12 + hexvar ] , num je hexvar mov rax , qword ptr [ rbp + num ] cmp dword ptr [ rax + hexvar ] , num sete sil movzx esi , sil mov rdi , qword ptr [ r12 + hexvar ] mov rax , qword ptr [ rbp + hexvar ] mov edx , num call qword ptr [ rax + hexvar ] mov r14 , rax test rax , rax je hexvar mov rsi , qword ptr [ r12 + hexvar ] mov edx , num mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ r12 + hexvar ] mov rdx , rbp mov rdi , r14 call hexvar cmp rax , qword ptr [ r12 + hexvar ] jne hexvar jmp hexvar mov rdi , rbp call hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 push r12 push rbp push rbx mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r12 , rdi mov r13 , - num jmp hexvar nop mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + num ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , num jbe hexvar sub eax , num mov rbp , qword ptr [ rbx + rax * num + hexvar ] cmp qword ptr [ rbp + hexvar ] , num jne hexvar mov eax , dword ptr [ rbp + hexvar ] test eax , hexvar je hexvar test al , hexvar je hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ r12 + num ] xor esi , esi mov edx , num mov eax , dword ptr [ rax + hexvar ] test eax , eax mov rax , qword ptr [ r12 + hexvar ] sete sil call qword ptr [ rax + hexvar ] test rax , rax mov r14 , rax je hexvar mov rsi , qword ptr [ rbp + hexvar ] xor edx , edx mov rdi , r12 call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdx , r12 mov rdi , r14 call hexvar cmp rax , qword ptr [ rbp + hexvar ] je hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rax + hexvar ] , r13 mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 push r12 push rbp push rbx mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r12 , rdi mov r13 , - num jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rax + hexvar ] , r13 mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + num ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , num jbe hexvar lea eax , [ rax - num ] mov rbp , qword ptr [ rbx + rax * num + hexvar ] cmp qword ptr [ rbp + hexvar ] , num jne hexvar test byte ptr [ rbp + hexvar ] , hexvar je hexvar test byte ptr [ rbp + hexvar ] , hexvar je hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rax , qword ptr [ r12 + num ] cmp dword ptr [ rax + hexvar ] , num sete sil movzx esi , sil mov rdi , qword ptr [ rbp + hexvar ] mov rax , qword ptr [ r12 + hexvar ] mov edx , num call qword ptr [ rax + hexvar ] mov r14 , rax test rax , rax je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov edx , num mov rdi , r12 call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdx , r12 mov rdi , r14 call hexvar cmp rax , qword ptr [ rbp + hexvar ] jne hexvar jmp hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ r0 , num ] mov r4 , r0 ldr r3 , [ r3 , hexvar ] ldr r6 , [ r0 , hexvar ] blx r3 subs r3 , r0 , num beq hexvar ldr r5 , [ r3 , num ] bl hexvar cmp r5 , num bhi hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr [ rdi + num ] mov r12 , qword ptr [ rdi + hexvar ] call qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax + num ] mov rdi , rax call hexvar cmp rbp , num ja hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esi + num ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar mov ebp , dword ptr [ eax + num ] mov edi , dword ptr [ eax + num ] push eax call hexvar add esp , hexvar cmp ebp , num jbe hexvar sub esp , num push ebp push edi push esi call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar push esi push ebp push edi push eax call hexvar xor eax , edi xor edx , ebp add esp , hexvar or edx , eax jne hexvar mov eax , dword ptr [ esi + num ] sub esp , hexvar push dword ptr [ esp + hexvar ] call dword ptr [ eax + hexvar ] shrd eax , edx , num shr edx , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov ecx , eax mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx xor edx , edx lea eax , [ ecx * num ] add edi , - num adc ebp , - num mov dword ptr [ esp + hexvar ] , eax add esp , hexvar cmp edx , ebp jb hexvar jbe hexvar sub esp , hexvar push num call hexvar add esp , hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar nop xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr [ rdi + num ] mov r12 , qword ptr [ rdi + hexvar ] call qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rbp , qword ptr [ rax + num ] mov rdi , rax call hexvar cmp rbp , num ja hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
sub rsp , num lea eax , [ rsi - hexvar ] cmp al , num ja hexvar movzx eax , al jmp qword ptr [ rax * num + hexvar ] add rdi , hexvar jmp hexvar add rdi , hexvar jmp hexvar add rdi , hexvar jmp hexvar add rdi , hexvar jmp hexvar add rdi , hexvar jmp hexvar sub esi , hexvar cmp sil , num ja hexvar movzx esi , sil jmp qword ptr [ rsi * num + hexvar ] mov rsi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi ] call hexvar sub rax , num jmp hexvar mov rsi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi ] call hexvar jmp hexvar mov rsi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi ] call hexvar sub rax , num jmp hexvar mov rsi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi ] call hexvar jmp hexvar mov rax , qword ptr [ rdi + hexvar ] sub rax , qword ptr [ rdi + num ] jmp hexvar mov rax , - num add rsp , num ret
sub rsp , num lea eax , [ rsi - hexvar ] cmp al , num ja hexvar movzx eax , al jmp qword ptr [ rax * num + hexvar ] add rdi , hexvar jmp hexvar add rdi , hexvar jmp hexvar add rdi , hexvar jmp hexvar add rdi , hexvar jmp hexvar add rdi , hexvar jmp hexvar sub esi , hexvar cmp sil , num ja hexvar movzx esi , sil jmp qword ptr [ rsi * num + hexvar ] mov rsi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi ] call hexvar sub rax , num jmp hexvar mov rsi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi ] call hexvar jmp hexvar mov rsi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi ] call hexvar sub rax , num jmp hexvar mov rsi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi ] call hexvar jmp hexvar mov rax , qword ptr [ rdi + hexvar ] sub rax , qword ptr [ rdi + num ] jmp hexvar mov rax , - num add rsp , num ret
lea eax , [ rsi - hexvar ] sub rsp , num cmp al , num ja hexvar movzx eax , al jmp qword ptr [ rax * num + hexvar ] nop dword ptr [ rax ] add rdi , hexvar mov rax , qword ptr [ rdi + hexvar ] sub rax , qword ptr [ rdi + num ] add rsp , num ret
push esi lea ecx , [ edx - hexvar ] push ebx call hexvar add ebx , hexvar sub esp , num cmp cl , num ja hexvar movzx ecx , cl mov esi , dword ptr [ ebx + ecx * num - hexvar ] add esi , ebx jmp esi lea esi , [ esi ]
push ebp push edi push esi push ebx mov esi , dword ptr [ eax ] cmp byte ptr [ esi + edx ] , hexvar je hexvar xor eax , eax pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al sub eax , hexvar cmp eax , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov eax , num leave ret
mov r8 , qword ptr [ rdi ] mov eax , num cmp byte ptr [ r8 + rsi ] , hexvar jne hexvar mov r10 , qword ptr [ rdi + num ] movzx eax , byte ptr [ r10 + rsi ] test al , al jne hexvar jmp hexvar movzx edi , byte ptr [ r8 + rsi + num ] movzx eax , dil sub eax , hexvar cmp eax , num ja hexvar movzx eax , byte ptr [ r10 + rsi + num ] test al , al je hexvar jmp hexvar movzx edi , byte ptr [ r8 + rdx ] movzx ecx , dil sub ecx , hexvar cmp ecx , num ja hexvar cmp byte ptr [ r10 + rdx ] , num je hexvar jmp hexvar mov eax , num cmp dil , hexvar jne hexvar movzx eax , byte ptr [ r10 + rdx ] xor eax , num movzx eax , al jmp hexvar mov eax , num jmp hexvar mov eax , num and eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar xor eax , num test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al sub eax , hexvar cmp eax , num ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al je hexvar mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov eax , num leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar lea eax , [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] test edx , edx setne bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar cmp dword ptr [ rax + hexvar ] , esi jbe hexvar mov esi , esi lea r12 , [ rcx + rsi * num ] mov rax , qword ptr [ r12 ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar add rsp , num mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar cmp dword ptr [ rax + hexvar ] , esi jbe hexvar mov esi , esi lea rbp , [ rcx + rsi * num ] mov rax , qword ptr [ rbp ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov rax , rbx add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rax + hexvar ] test rcx , rcx je hexvar cmp dword ptr [ rax + hexvar ] , esi jbe hexvar mov esi , esi lea rbp , [ rcx + rsi * num ] mov rax , qword ptr [ rbp ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov rax , rbx add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push rbp push r14 push rbx sub rsp , hexvar mov esi , edi lea rdi , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdi mov rax , qword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r14d , hexvar mov ebp , hexvar jmp hexvar mov eax , hexvar xor ebx , ebx nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov ebx , dword ptr [ rax ] mov eax , hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov dword ptr [ rsp + hexvar ] , ebx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , ebp jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbx sub rsp , hexvar mov esi , edi lea rdi , [ rsp + num ] call hexvar test rax , rax je hexvar mov ebx , dword ptr [ rax ] mov rdi , qword ptr [ rsp + num ] test rdi , rdi je hexvar call hexvar mov eax , ebx add rsp , hexvar pop rbx ret
push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov esi , dword ptr [ eax ] mov eax , dword ptr [ esp + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , a0 sw s0 , hexvar ( sp ) addiu a0 , sp , hexvar lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw s1 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax movsxd rcx , dword ptr [ rbp - num ] mov dl , byte ptr [ rcx + hexvar ] mov byte ptr [ rbp - num ] , dl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar movsxd rax , dword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax mov edi , dword ptr [ rcx * num + hexvar ] movsxd rcx , dword ptr [ rbp - num ] shl rcx , num movabs rdx , hexvar add rdx , rcx mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov edi , dword ptr [ rbp - hexvar ] mov edx , num call hexvar movsxd rsi , dword ptr [ rbp - num ] mov qword ptr [ rsi * num + hexvar ] , rax movsxd rax , dword ptr [ rbp - num ] shl rax , num movabs rcx , hexvar add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar addiu v1 , v0 , hexvar lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lbu v0 , ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lui v0 , hexvar addiu v1 , v0 , hexvar lw v0 , hexvar ( fp ) addu v0 , v1 , v0 addiu v1 , zero , num sb v1 , ( v0 ) lui v0 , hexvar lw v1 , hexvar ( fp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw a1 , ( v0 ) lui v0 , hexvar lw v1 , hexvar ( fp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v1 , num ( v0 ) lw v0 , ( v0 ) addiu a0 , zero , num sw a0 , hexvar ( sp ) move a3 , v1 move a2 , v0 move a0 , a1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui a0 , hexvar lw a1 , hexvar ( fp ) sll a1 , a1 , num addiu a0 , a0 , hexvar addu a0 , a1 , a0 sw v1 , num ( a0 ) sw v0 , ( a0 ) lui v0 , hexvar lw v1 , hexvar ( fp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v1 , num ( v0 ) lw v0 , ( v0 ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbx movsxd rbx , edi cmp byte ptr [ rbx + hexvar ] , num je hexvar mov rax , qword ptr [ rbx * num + hexvar ] pop rbx ret
push rbp push rbx sub rsp , num mov ebx , edi movsxd rax , edi lea rdx , [ rip + hexvar ] cmp byte ptr [ rdx + rax ] , num je hexvar movsxd rbx , ebx lea rax , [ rip + hexvar ] mov rax , qword ptr [ rax + rbx * num ] add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] sub edx , - num setne al movzx esi , al mov edi , esi mov rdi , qword ptr [ rdi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , edx jmp rdi mov edi , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , - num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu v1 , zero , - num beq a1 , v1 , hexvar addiu gp , gp , hexvar lw t9 , - hexvar ( gp ) move v0 , a1 move a0 , v0 jr t9 move a1 , a2 lw t9 , - hexvar ( gp ) jr t9 move a1 , a2
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] sub esi , - num setne bl movzx edi , bl mov edi , dword ptr [ edi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jmp edi mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , hexvar ja hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
sltiu v0 , a0 , hexvar beqz v0 , hexvar move v0 , zero sll v0 , a0 , num lui a0 , hexvar addiu a0 , a0 , hexvar addu a0 , a0 , v0 lw v0 , ( a0 ) jr v0 nop lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar jr ra nop
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) sltiu v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , num ( fp ) sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) jr v0 nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop move v0 , zero move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , hexvar ja hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) bltz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , hexvar lw v0 , ( v0 ) bne v0 , v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push { r4 , lr } sub sp , sp , num ldr ip , [ sp , hexvar ] str ip , [ sp ] bl hexvar subs r4 , r0 , num blt hexvar mov r0 , r4 add sp , sp , num pop { r4 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) bltz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , hexvar lw v0 , ( v0 ) bne v0 , v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - num ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - num ] call hexvar add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] sub esp , num lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar mov edi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ edi + hexvar ] , eax sub esp , num lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ edi + hexvar ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui a1 , hexvar lw s1 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a1 , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) addiu a1 , a1 , hexvar sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw v1 , hexvar ( s0 )
push r15 push r14 push r13 push r12 mov r12 , rdx push rbp push rbx sub rsp , num mov eax , dword ptr [ rdx ] lea edx , [ rax - num ] cmp edx , num ja hexvar mov r13 , qword ptr [ r12 + hexvar ] mov ecx , dword ptr [ rdi + hexvar ] mov r15 , rdi cmp dword ptr [ r13 + hexvar ] , ecx ja hexvar mov rbx , qword ptr [ rdi + hexvar ] mov r14 , rsi test rbx , rbx jne hexvar jmp hexvar nop word ptr [ rax + rax ] test rdi , rdi je hexvar movzx eax , byte ptr [ r14 ] cmp byte ptr [ rdi ] , al jne hexvar mov rsi , r14 call hexvar test eax , eax jne hexvar mov rdx , r12 mov rsi , rbp mov rdi , r15 call hexvar test eax , eax jne hexvar nop dword ptr [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar mov eax , dword ptr [ r12 ] mov rbp , qword ptr [ rbx + num ] cmp dword ptr [ rbp ] , eax jne hexvar test r14 , r14 mov rdi , qword ptr [ rbx + hexvar ] jne hexvar test rdi , rdi je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar nop dword ptr [ rax + rax ] mov eax , dword ptr [ r15 + hexvar ] mov edi , hexvar add eax , num mov dword ptr [ r15 + hexvar ] , eax mov dword ptr [ r13 + hexvar ] , eax call hexvar mov rdx , qword ptr [ r15 + hexvar ] mov qword ptr [ rax + num ] , r12 mov qword ptr [ rax + hexvar ] , r14 mov qword ptr [ r15 + hexvar ] , rax mov qword ptr [ rax ] , rdx add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov eax , dword ptr [ rdx ] sub eax , num cmp eax , num ja hexvar mov r14 , rdi mov r13 , rsi mov r12 , rdx mov r15 , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rdi + hexvar ] cmp dword ptr [ r15 + hexvar ] , eax ja hexvar mov rbx , qword ptr [ rdi + hexvar ] test rbx , rbx jne hexvar mov eax , dword ptr [ r14 + hexvar ] add eax , num mov dword ptr [ r14 + hexvar ] , eax mov dword ptr [ r15 + hexvar ] , eax mov edi , hexvar call hexvar mov qword ptr [ rax + num ] , r12 mov qword ptr [ rax + hexvar ] , r13 mov rdx , qword ptr [ r14 + hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ r14 + hexvar ] , rax mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 )
push ebp push edi mov ebp , edx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ecx ] lea edx , [ eax - num ] cmp edx , num ja hexvar mov edi , ecx mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov esi , dword ptr [ edx + hexvar ] cmp dword ptr [ ecx + num ] , esi mov dword ptr [ esp + hexvar ] , ecx ja hexvar mov esi , dword ptr [ edx + hexvar ] test esi , esi jne hexvar jmp hexvar nop lea esi , [ esi ] test eax , eax mov dword ptr [ esp + num ] , edx je hexvar movzx ecx , byte ptr [ ebp ] cmp byte ptr [ eax ] , cl jne hexvar sub esp , num push ebp push eax call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ esp + num ] jne hexvar mov eax , dword ptr [ esp + num ] mov ecx , edi call hexvar test eax , eax jne hexvar lea esi , [ esi ] mov esi , dword ptr [ esi ] test esi , esi je hexvar mov eax , dword ptr [ edi ] mov edx , dword ptr [ esi + num ] cmp dword ptr [ edx ] , eax jne hexvar test ebp , ebp mov eax , dword ptr [ esi + num ] jne hexvar test eax , eax je hexvar mov esi , dword ptr [ esi ] test esi , esi jne hexvar nop lea esi , [ esi ] mov esi , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] sub esp , hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esp + hexvar ] , eax add eax , num mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ ecx + num ] , eax push hexvar call hexvar mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ eax + num ] , edi add esp , hexvar mov dword ptr [ eax + num ] , ebp mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ eax ] , edx add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - num ] call hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - num ] call hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - num ] call hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov edi , hexvar call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - num ] , rax mov rsi , qword ptr [ rbp - num ] call hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , esi mov esi , dword ptr [ ebp + hexvar ] movsx esi , byte ptr [ esi ] cmp esi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov eax , dword ptr [ ebp + hexvar ] movsx eax , byte ptr [ eax + num ] cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax add ecx , num mov dword ptr [ ebp - num ] , ecx mov dl , byte ptr [ eax ] mov eax , dword ptr [ ebp + num ] mov ecx , eax add ecx , num mov dword ptr [ ebp + num ] , ecx mov byte ptr [ eax ] , dl jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + hexvar ] jbe hexvar mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax - num ] cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax add ecx , num mov dword ptr [ ebp + num ] , ecx mov byte ptr [ eax ] , hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , num mov dword ptr [ ebp + hexvar ] , ecx mov dl , byte ptr [ eax ] mov eax , dword ptr [ ebp + num ] mov ecx , eax add ecx , num mov dword ptr [ ebp + num ] , ecx mov byte ptr [ eax ] , dl jmp hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax ] , num add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) lw v0 , hexvar ( fp ) lb v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num lb v0 , ( v0 ) beqz v0 , hexvar nop b hexvar nop lw v1 , num ( fp ) addiu v0 , v1 , num sw v0 , num ( fp ) lw v0 , hexvar ( fp ) addiu a0 , v0 , num sw a0 , hexvar ( fp ) lb v1 , ( v1 ) sb v1 , ( v0 ) lw v0 , num ( fp ) lb v0 , ( v0 ) bnez v0 , hexvar nop lw v1 , num ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v0 , v1 beqz v0 , hexvar nop lw v0 , num ( fp ) addiu v0 , v0 , - num lb v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v1 , v0 , num sw v1 , hexvar ( fp ) addiu v1 , zero , hexvar sb v1 , ( v0 ) b hexvar nop lw v1 , hexvar ( fp ) addiu v0 , v1 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu a0 , v0 , num sw a0 , hexvar ( fp ) lb v1 , ( v1 ) sb v1 , ( v0 ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) sb zero , ( v0 ) nop move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] movsx eax , byte ptr [ rdx ] cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax + num ] cmp ecx , num je hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp byte ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov dl , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rcx , rax add rcx , num mov qword ptr [ rbp - num ] , rcx mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jbe hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax - num ] cmp ecx , hexvar je hexvar mov rax , qword ptr [ rbp - num ] mov rcx , rax add rcx , num mov qword ptr [ rbp - num ] , rcx mov byte ptr [ rax ] , hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp byte ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov dl , byte ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rcx , rax add rcx , num mov qword ptr [ rbp - num ] , rcx mov byte ptr [ rax ] , dl jmp hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num pop rbp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , hexvar bne hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num ldrb r3 , [ r3 ] cmp r3 , num beq hexvar b hexvar ldr r2 , [ fp , - num ] add r3 , r2 , num str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] add r1 , r3 , num str r1 , [ fp , - hexvar ] ldrb r2 , [ r2 ] strb r2 , [ r3 ] ldr r3 , [ fp , - num ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 bls hexvar ldr r3 , [ fp , - num ] sub r3 , r3 , num ldrb r3 , [ r3 ] cmp r3 , hexvar beq hexvar ldr r3 , [ fp , - hexvar ] add r2 , r3 , num str r2 , [ fp , - hexvar ] mov r2 , hexvar strb r2 , [ r3 ] b hexvar ldr r2 , [ fp , - hexvar ] add r3 , r2 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r1 , r3 , num str r1 , [ fp , - hexvar ] ldrb r2 , [ r2 ] strb r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] mov r2 , num strb r2 , [ r3 ] mov r0 , r0 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] add eax , num sub esp , hexvar push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] add eax , num sub esp , hexvar push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 ) beqz v0 , hexvar move t0 , a3 lw t9 , hexvar ( v0 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ esp + hexvar ] , - num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax ] cmp dword ptr [ esp + hexvar ] , eax je hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ esp + hexvar ] , - num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] and eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , - num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax ] test edx , edx je hexvar mov ecx , dword ptr [ edx + hexvar ] test ecx , ecx je hexvar cmp esi , - num je hexvar cmp dword ptr [ edx ] , esi jne hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ esp + hexvar ] , - num jne hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call ecx add esp , hexvar cmp eax , - num je hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax ] test edx , edx je hexvar mov ecx , dword ptr [ edx + hexvar ] test ecx , ecx je hexvar cmp esi , - num je hexvar cmp dword ptr [ edx ] , esi jne hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ esp + hexvar ] , - num jne hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call ecx mov esi , eax add esp , hexvar cmp eax , - num je hexvar mov eax , esi add esp , num pop ebx pop esi ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi jne hexvar mov edi , hexvar call hexvar mov rdi , rax mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rsi , rbx call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi jne hexvar mov edi , hexvar call hexvar mov rdi , rax mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov rsi , rbx call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar pop rbx ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , num test edi , edi je hexvar cmp byte ptr [ edi ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] cmp byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] test esi , esi jne hexvar jmp hexvar nop lea esi , [ esi ] mov esi , dword ptr [ esi ] test esi , esi je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + num ] , eax jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push dword ptr [ esi + num ] call hexvar add esp , hexvar test al , al je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test al , al je hexvar jmp hexvar nop lea esi , [ esi ] xor eax , eax pop ebx pop esi pop edi ret
beqz a1 , hexvar nop lb v0 , ( a1 ) beqz v0 , hexvar nop beqz a3 , hexvar nop lb v0 , ( a3 ) beqz v0 , hexvar lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , ( a0 )
push { r4 , r5 , r6 , r7 , r8 , lr } subs r6 , r1 , num beq hexvar ldrb ip , [ r6 ] cmp r3 , num cmpne ip , num bne hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } subs r8 , r1 , num moveq r5 , num beq hexvar ldrb ip , [ r8 ] clz r5 , r3 lsr r5 , r5 , num cmp ip , num moveq r5 , num cmp r5 , num movne r5 , num beq hexvar mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , eax mov ebp , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edi xor edi , edi lea ecx , [ ebx + hexvar ] cmp dword ptr [ ecx ] , num je hexvar test ebp , ebp jne hexvar sub esp , hexvar push eax lea eax , [ ebx - hexvar ] push eax push - num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , eax mov ebp , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edi xor edi , edi lea ecx , [ ebx + hexvar ] cmp dword ptr [ ecx ] , num je hexvar test ebp , ebp jne hexvar sub esp , hexvar push eax lea eax , [ ebx - hexvar ] push eax push - num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp dword ptr [ rip + hexvar ] , num je hexvar test esi , esi jne hexvar mov r8d , edx lea rcx , [ rip + hexvar ] mov rdx , - num mov esi , num mov eax , num call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp dword ptr [ rip + hexvar ] , num je hexvar test esi , esi jne hexvar mov r8d , edx lea rcx , [ rip + hexvar ] mov rdx , - num mov esi , num mov eax , num call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rcx call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar add rsp , hexvar pop rbp ret
push rbx mov rbx , rsi xor esi , esi call hexvar test rax , rax mov rdx , rax jne hexvar jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx je hexvar cmp rax , rdx je hexvar cmp dword ptr [ rdx + num ] , num jne hexvar mov rcx , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx mov qword ptr [ rcx + hexvar ] , rbx jne hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rcx call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar add rsp , hexvar pop rbp ret
push rbx mov rbx , rsi mov esi , num call hexvar test rax , rax je hexvar mov rcx , rax mov edx , hexvar mov rsi , rbx mov rdi , rax call hexvar pop rbx ret
push { r4 , r5 , r6 , lr } mov r2 , num mov r4 , r0 mov r5 , r1 mov r0 , num ldr r1 , [ pc , hexvar ] bl hexvar mov r2 , r4 mov r1 , r0 mov r0 , num bl hexvar sub r1 , r5 , r4 mov r0 , r4 bl hexvar mov r1 , r5 add r0 , r4 , r0 bl hexvar mov r0 , r5 pop { r4 , r5 , r6 , pc }
push rbp push rbx mov rbp , rsi lea rsi , [ rip + hexvar ] mov rbx , rdi mov edx , num sub rsp , num xor edi , edi call hexvar mov rdx , rbx mov rsi , rax mov edi , num xor eax , eax call hexvar mov rsi , rbp mov rdi , rbx sub rsi , rbx call hexvar lea rdi , [ rbx + rax ] mov rsi , rbp call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push rbp push rbx mov rbp , rsi lea rsi , [ rip + hexvar ] mov rbx , rdi mov edx , num sub rsp , num xor edi , edi call hexvar mov rdx , rbx mov rsi , rax mov edi , num xor eax , eax call hexvar mov rsi , rbp mov rdi , rbx sub rsi , rbx call hexvar lea rdi , [ rbx + rax ] mov rsi , rbp call hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - num ] mov rdi , rax mov al , num call hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] movabs rdx , hexvar sub rsi , rdx sub rsi , rcx add rsi , rdx mov dword ptr [ rbp - hexvar ] , eax call hexvar add rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - num ] , rax mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop ebp ret
cmp byte ptr [ rip + hexvar ] , num je hexvar sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar test eax , eax je hexvar call hexvar mov edx , hexvar mov esi , dword ptr [ rax ] mov edi , num mov eax , num call hexvar add rsp , num ret
push { fp , lr } add fp , sp , num ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] ldr r2 , [ pc , hexvar ] mov r1 , r3 mov r0 , num bl hexvar mov r0 , r0 pop { fp , pc } andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ edi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , dword ptr [ rdi + hexvar ] mov edx , dword ptr [ rsi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar ret nop dword ptr [ rax ] push r12 push rbp push rbx mov r12 , qword ptr [ rsi ] mov rbx , rdi mov esi , hexvar mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx ] mov esi , hexvar mov rbp , rax mov rdi , rbx call hexvar test rax , rax je hexvar lea rdx , [ rip + hexvar ] test rbp , rbp cmove rbp , rdx mov rsi , rax mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , rbx mov rdi , r12 pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax + rax ] pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw s1 , ( s0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bne v1 , v0 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) addiu a1 , v0 , num lui a0 , hexvar sw a1 , - hexvar ( a0 ) sll v0 , v0 , num addu v0 , v1 , v0 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) move a1 , zero move a0 , zero sw a1 , hexvar ( v0 ) sw a0 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw a1 , hexvar ( v0 ) sw a0 , num ( v0 ) lw v0 , hexvar ( fp ) sw a1 , num ( v0 ) sw a0 , ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx call hexvar add ebx , hexvar mov ecx , dword ptr [ ebx + hexvar ] cmp ecx , dword ptr [ ebx + hexvar ] je hexvar mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] lea ecx , [ eax + num ] mov dword ptr [ ebx + hexvar ] , ecx shl eax , num add eax , edx mov byte ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num pop ebx pop esi pop edi ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] add r1 , r3 , num ldr r0 , [ pc , hexvar ] str r1 , [ r0 ] lsl r3 , r3 , num add r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] ldr r2 , [ fp , - hexvar ] mov r3 , num mov r4 , num str r3 , [ r2 , hexvar ] str r4 , [ r2 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] ldr r2 , [ fp , - hexvar ] mov r3 , num mov r4 , num str r3 , [ r2 , num ] str r4 , [ r2 , hexvar ] ldr r2 , [ fp , - hexvar ] mov r3 , num mov r4 , num stm r2 , { r3 , r4 } ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , r6 , r7 , lr } ldr r4 , [ pc , hexvar ] ldr r3 , [ r4 , hexvar ] ldr r2 , [ r4 , hexvar ] ldr r0 , [ r4 , hexvar ] cmp r3 , r2 beq hexvar mov r6 , num mov r7 , num mov r2 , num add r0 , r0 , r3 , lsl num add r3 , r3 , num str r3 , [ r4 , hexvar ] strb r2 , [ r0 , hexvar ] strb r2 , [ r0 , hexvar ] str r6 , [ r0 , hexvar ] str r7 , [ r0 , hexvar ] str r6 , [ r0 , num ] str r7 , [ r0 , hexvar ] stm r0 , { r6 , r7 } pop { r4 , r6 , r7 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + num ] , rsi lea rdx , [ rsp + num ] mov esi , hexvar mov edi , num call hexvar add rsp , hexvar ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , sp , hexvar sw s0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui a1 , hexvar lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) addiu a1 , a1 , hexvar sw a0 , hexvar ( sp ) addiu a0 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop lw v1 , hexvar ( sp ) lw v0 , ( s0 ) bne v1 , v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + num ] , rsi lea rdx , [ rsp + num ] mov esi , hexvar mov edi , num call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + num ] , rsi lea rdx , [ rsp + num ] mov esi , hexvar mov edi , num call hexvar add rsp , hexvar ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - hexvar ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
adds r3 , r0 , num movne r3 , num cmp r1 , num movne r3 , num cmp r3 , num push { r4 , lr } bne hexvar mov r4 , r1 bl hexvar adds r4 , r4 , num movne r4 , num cmp r0 , num movne r4 , num cmp r4 , num popeq { r4 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] test rsi , rsi setne al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi jne hexvar add esp , num pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 sw a1 , hexvar ( sp ) move a0 , s0 lw gp , hexvar ( sp ) move a2 , v0 lw a1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 bnez v0 , hexvar addu s0 , s0 , s1 lb v1 , ( s0 ) beqz v1 , hexvar lw ra , hexvar ( sp ) xori v0 , v1 , hexvar sltu v0 , zero , v0 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] sub esp , num push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + hexvar ] add eax , edx movzx eax , byte ptr [ eax ] mov byte ptr [ esp + num ] , al cmp byte ptr [ esp + num ] , num je hexvar cmp byte ptr [ esp + num ] , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num add esp , hexvar pop ebx ret
push r15 push r14 push rbx mov rbx , rsi mov r14 , rdi mov rdi , rsi call hexvar movsxd r15 , eax mov rdi , r14 mov rsi , rbx mov rdx , r15 call hexvar test eax , eax je hexvar pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push edi call hexvar add esp , hexvar mov ebp , eax push eax push edi push esi call hexvar add esp , hexvar test eax , eax jne hexvar movzx edx , byte ptr [ esi + ebp ] test dl , dl sete al cmp dl , hexvar sete dl or eax , edx xor eax , num movzx eax , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar beqz v0 , hexvar lw ra , hexvar ( sp ) sw zero , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
sub rsp , num mov rax , rdx test rsi , rsi je hexvar cmp qword ptr [ rdi + num ] , num jne hexvar mov qword ptr [ rdi ] , rdx mov qword ptr [ rdi + num ] , rsi add rsp , num ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add esi , hexvar mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] xor edi , num mov ecx , edi mov edi , dword ptr [ ebp - hexvar ] xor edi , num mov ebx , edi or ecx , ebx test ecx , ecx je hexvar mov ecx , dword ptr [ ebp + num ] mov ebx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + num ] mov edi , ecx xor edi , num mov eax , edi xor bh , num mov edx , ebx or eax , edx test eax , eax je hexvar lea eax , [ esi - hexvar ] push eax push hexvar lea eax , [ esi - hexvar ] push eax lea eax , [ esi - hexvar ] push eax mov ebx , esi call hexvar mov ecx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx mov ecx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx jmp hexvar push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add esi , hexvar mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp - hexvar ] xor edi , num mov ecx , edi mov edi , dword ptr [ ebp - hexvar ] xor edi , num mov ebx , edi or ecx , ebx test ecx , ecx je hexvar mov ecx , dword ptr [ ebp + num ] mov ebx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + num ] mov edi , ecx xor edi , num mov eax , edi xor bh , num mov edx , ebx or eax , edx test eax , eax je hexvar lea eax , [ esi - hexvar ] push eax push hexvar lea eax , [ esi - hexvar ] push eax lea eax , [ esi - hexvar ] push eax mov ebx , esi call hexvar mov ecx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx mov ecx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx jmp hexvar push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } orrs r3 , r3 , r4 beq hexvar ldr r3 , [ fp , - hexvar ] add r4 , r3 , num ldm r4 , { r3 , r4 } orrs r3 , r3 , r4 beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r2 , [ fp , - hexvar ] ldmib fp , { r3 , r4 } stm r2 , { r3 , r4 } ldr r2 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } str r3 , [ r2 , num ] str r4 , [ r2 , hexvar ] b hexvar mov r3 , num str r3 , [ sp ] ldmib fp , { r2 , r3 } ldr r0 , [ fp , - hexvar ] bl hexvar mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
push r15 push r14 mov r14 , rdi push r13 push r12 lea r12d , [ r8 + num ] push rbp push rbx mov rdi , rsi and r12d , hexvar mov r15 , rdx mov ebx , r8d sub rsp , hexvar movsxd rsi , dword ptr [ rdx ] movsxd r12 , r12d add r12 , hexvar mov qword ptr [ rsp + num ] , rcx add rsi , r12 call hexvar test rax , rax mov r13 , rax je hexvar movsxd rbp , dword ptr [ r15 ] mov edi , num mov rax , rbp add rbp , r13 add r12d , eax mov rax , qword ptr [ r14 + num ] mov rsi , rbp mov dword ptr [ r15 ] , r12d call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] mov r12 , rdi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] lea rsi , [ rbp + num ] mov edi , hexvar call qword ptr [ rax + hexvar ] lea rcx , [ rbp + hexvar ] mov rsi , qword ptr [ rsp + num ] xor edx , edx mov eax , hexvar mov word ptr [ rbp + hexvar ] , dx mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rcx mov word ptr [ rbp + hexvar ] , ax mov rdx , r12 call hexvar test bl , num lea rdi , [ rax + r12 ] je hexvar add ebx , num add rdi , num mov byte ptr [ rdi - num ] , num test bl , num jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui a3 , hexvar sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui a3 , hexvar sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , - hexvar lw a0 , ( a0 )
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
push rbp push r14 push rbx sub rsp , hexvar mov r14 , rdi xor ebp , ebp mov rdi , rsi xor esi , esi call hexvar test rax , rax je hexvar mov rbx , rax mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax lea rbp , [ rsp + num ] mov rdi , rbp call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , r14 mov rax , qword ptr [ rsp + num ] mov rdi , rbp mov rsi , rbx call qword ptr [ rax + hexvar ] mov ebp , eax mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) move a1 , zero lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 sw s1 , hexvar ( sp ) move a1 , zero sw s3 , hexvar ( sp ) move s3 , a0 lw s1 , - hexvar ( gp ) move a0 , v0 lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lui s2 , hexvar lw v0 , hexvar ( s2 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw t9 , num ( v0 ) addiu s2 , sp , hexvar jalr t9 move a0 , s2 move a1 , s0 lw v0 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw t9 , hexvar ( v0 ) jalr t9 move a0 , s2 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar b hexvar lw gp , hexvar ( sp ) bal hexvar nop b hexvar sw v0 , hexvar ( s2 ) lw t9 , - hexvar ( gp )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 ) beqz s0 , hexvar lw ra , hexvar ( sp ) lw a0 , num ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push r15 push r14 push rbx mov r15 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax mov edi , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , r15 call hexvar test rax , rax je hexvar mov r15 , rax mov rdi , rax call hexvar mov edx , num mov rdi , rbx mov esi , hexvar mov rcx , r15 call hexvar mov rdi , rbx mov rsi , r14 call hexvar test rax , rax je hexvar pop rbx pop r14 pop r15 ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r14 , rdi call hexvar mov rdi , rax call hexvar mov qword ptr [ rsp ] , rax mov eax , hexvar mov ebp , hexvar mov r15d , hexvar jmp hexvar mov eax , hexvar xor ebx , ebx nop word ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp ] call hexvar mov eax , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rsi , qword ptr [ rsp ] mov rdi , qword ptr [ rsp + num ] call hexvar mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , ebp jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , r14 mov esi , num call hexvar mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , ebp jmp hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov rbx , qword ptr [ rsp + hexvar ] jmp hexvar mov rax , rbx add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 beqz v0 , hexvar addiu a1 , zero , num move a0 , s1 jal hexvar move s0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s0 jalr t9 move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 b hexvar move v0 , zero
push esi push ebx call hexvar add ebx , hexvar sub esp , num call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num mov esi , eax push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push hexvar push dword ptr [ edi ] call hexvar add esp , num mov esi , eax push hexvar push dword ptr [ ebp ] call hexvar add esp , num lea edx , [ ebx - hexvar ] test eax , eax cmove eax , edx test esi , esi cmove esi , edx push eax push esi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push dword ptr [ ebp ] push dword ptr [ edi ] call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , num mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al lea eax , [ hexvar ] mov dword ptr [ hexvar ] , num mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edi mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ esi ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar add esp , hexvar and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a2 , hexvar ( sp ) move a3 , a1 addiu a2 , zero , - num move a1 , a0 lui a0 , hexvar addiu a0 , a0 , - hexvar jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax lea rdi , [ rip + hexvar ] call hexvar leave ret
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , num add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ sp ] str r3 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , num add esp , hexvar ret
mov ecx , num xor eax , eax nop word ptr [ rax + rax ] cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar add rax , num lea rdx , [ rcx + num ] add rcx , num cmp rcx , hexvar mov rcx , rdx jb hexvar mov eax , hexvar ret
mov ecx , num xor eax , eax nop word ptr [ rax + rax ] cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar add rax , num lea rdx , [ rcx + num ] add rcx , num cmp rcx , hexvar mov rcx , rdx jb hexvar mov eax , hexvar ret
mov ecx , num xor eax , eax nop word ptr [ rax + rax ] cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar cmp dword ptr [ rcx * num ] , edi je hexvar add rax , num lea rdx , [ rcx + num ] add rcx , num cmp rcx , hexvar mov rcx , rdx jb hexvar mov eax , hexvar ret
mov dword ptr [ rsp - num ] , edi mov dword ptr [ rsp - hexvar ] , num mov dword ptr [ rsp - hexvar ] , hexvar mov eax , dword ptr [ rsp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rsp - hexvar ] , eax mov dword ptr [ rsp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rsp - hexvar ] sub eax , hexvar mov dword ptr [ rsp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rsp - hexvar ] sub eax , hexvar mov dword ptr [ rsp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rsp - hexvar ] sub eax , hexvar mov dword ptr [ rsp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rsp - hexvar ] sub eax , hexvar mov dword ptr [ rsp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rsp - hexvar ] sub eax , hexvar mov dword ptr [ rsp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rsp - hexvar ] sub eax , hexvar mov dword ptr [ rsp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ rsp - hexvar ] , hexvar mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ rsp - hexvar ] , ecx jmp hexvar movsxd rax , dword ptr [ rsp - hexvar ] mov ecx , dword ptr [ rax * num ] cmp ecx , dword ptr [ rsp - num ] mov ecx , hexvar mov edx , hexvar cmove edx , ecx mov dword ptr [ rsp - hexvar ] , edx jmp hexvar movsxd rax , dword ptr [ rsp - hexvar ] mov ecx , dword ptr [ rax * num ] mov dword ptr [ rsp - num ] , ecx mov dword ptr [ rsp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rsp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rsp - hexvar ] add eax , num mov dword ptr [ rsp - hexvar ] , eax mov dword ptr [ rsp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rsp - num ] , hexvar mov dword ptr [ rsp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rsp - num ] ret
push { r4 , r5 , r6 , r7 , lr } ldr r5 , [ r0 , num ] sub sp , sp , hexvar cmp r5 , num beq hexvar ldr r6 , [ r5 , num ] mov r4 , r0 mov r1 , hexvar mov r0 , r6 bl hexvar subs r7 , r0 , num beq hexvar ldrb r3 , [ r7 , num ] cmp r3 , hexvar beq hexvar mov r0 , r6 bl hexvar add r0 , r0 , num bl hexvar mov r5 , r0 ldr r6 , [ r4 , num ] ldr r1 , [ r6 , num ] sub r2 , r7 , r1 bl hexvar ldr r0 , [ r6 , num ] mov r2 , num sub r0 , r7 , r0 ldr r1 , [ pc , hexvar ] add r0 , r5 , r0 bl hexvar add r1 , r7 , num mov r0 , r5 bl hexvar ldr r0 , [ r6 , num ] bl hexvar ldr r3 , [ r4 , num ] str r5 , [ r3 , num ] mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push { r4 , r5 , r6 , r7 , lr } ldr r5 , [ r0 , num ] sub sp , sp , hexvar cmp r5 , num beq hexvar ldr r6 , [ r5 , num ] mov r4 , r0 mov r1 , hexvar mov r0 , r6 bl hexvar subs r7 , r0 , num beq hexvar ldrb r3 , [ r7 , num ] cmp r3 , hexvar beq hexvar mov r0 , r6 bl hexvar add r0 , r0 , num bl hexvar mov r5 , r0 ldr r6 , [ r4 , num ] ldr r1 , [ r6 , num ] sub r2 , r7 , r1 bl hexvar ldr r0 , [ r6 , num ] mov r2 , num sub r0 , r7 , r0 ldr r1 , [ pc , hexvar ] add r0 , r5 , r0 bl hexvar add r1 , r7 , num mov r0 , r5 bl hexvar ldr r0 , [ r6 , num ] bl hexvar ldr r3 , [ r4 , num ] str r5 , [ r3 , num ] mov r0 , num add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] add esi , num mov dword ptr [ ebp - hexvar ] , eax mov eax , esi xor esi , esi mov dword ptr [ ebp - hexvar ] , edx mov edx , esi mov esi , num div esi shl eax , num mov esi , hexvar add esi , num add esi , eax sub esi , hexvar mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] sub eax , num add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push r14 push r13 mov rcx , rdx push r12 push rbp movabs rdx , hexvar push rbx lea rbx , [ rsi + num ] mov rax , rbx mul rdx shr rdx , num lea rbx , [ rdx * num ] lea r12 , [ rbx + num ] cmp rsi , r12 jbe hexvar mov qword ptr [ rcx ] , num xor ebx , ebx mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] add esi , num mov dword ptr [ ebp - hexvar ] , eax mov eax , esi xor esi , esi mov dword ptr [ ebp - hexvar ] , edx mov edx , esi mov esi , num div esi shl eax , num add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push r14 push r13 push r12 push rbp push rbx mov r13 , rdx lea rbx , [ rsi + num ] movabs rdx , hexvar mov rax , rbx mul rdx shr rdx , num lea rbx , [ rdx * num ] lea r12 , [ rbx + num ] cmp rsi , r12 jbe hexvar mov qword ptr [ r13 ] , num mov ebx , num jmp hexvar mov rbp , rsi mov r14 , rdi mov rdi , r12 call hexvar mov qword ptr [ r13 ] , rax test rax , rax je hexvar mov rcx , r12 mov rdx , rax mov rsi , rbp mov rdi , r14 call hexvar jmp hexvar mov rbx , r12 mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret
adds r3 , r0 , num movne r3 , num cmp r1 , num movne r3 , num cmp r3 , num push { r4 , lr } bne hexvar mov r4 , r1 bl hexvar adds r4 , r4 , num movne r4 , num cmp r0 , num movne r4 , num cmp r4 , num popeq { r4 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) bnez a1 , hexvar sw gp , hexvar ( sp ) bnez a0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp )
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , num b hexvar ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar bl hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] call hexvar sub esp , hexvar mov dword ptr [ eax ] , num push esi call hexvar add esp , hexvar test ah , hexvar je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar sub esp , hexvar push esi call dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax js hexvar je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw zero , ( v0 ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push r14 push rbx mov r14d , edx mov rbp , rsi mov rbx , rdi call hexvar mov dword ptr [ rax ] , num mov rdi , rbx call hexvar test eax , hexvar je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rdi , rbx call hexvar mov eax , hexvar pop rbx pop r14 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 move s2 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , cl movsx edx , byte ptr [ rbp - hexvar ] and edx , hexvar movsxd rax , edx movzx edx , word ptr [ rax * num + hexvar ] mov esi , hexvar xor esi , hexvar mov edi , edx xor edi , esi and edi , edx cmp edi , num jne hexvar movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar je hexvar movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar je hexvar movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar jne hexvar mov rsi , qword ptr [ rbp - hexvar ] mov edi , hexvar call hexvar mov edi , hexvar cmp edi , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar jmp hexvar movsx edi , byte ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov edi , hexvar cmp edi , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rsi , qword ptr [ rbp - hexvar ] mov edi , hexvar call hexvar mov edi , hexvar cmp edi , eax jne hexvar mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , lr } subs r6 , r1 , num beq hexvar ldr r5 , [ r0 ] mov r8 , r0 cmp r5 , num beq hexvar ldr r7 , [ pc , hexvar ] ldrb r4 , [ r5 ] cmp r4 , num bne hexvar b hexvar ldrb r4 , [ r5 , num ] ! cmp r4 , num beq hexvar lsl r3 , r4 , num ldrh r3 , [ r7 , r3 ] tst r3 , hexvar bne hexvar cmp r4 , hexvar cmpne r4 , hexvar moveq r3 , num movne r3 , num cmp r4 , hexvar orreq r3 , r3 , num cmp r3 , num beq hexvar mov r1 , r6 mov r0 , hexvar bl hexvar cmn r0 , num beq hexvar mov r0 , r4 mov r1 , r6 bl hexvar cmn r0 , num bne hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a1 , hexvar sw gp , hexvar ( sp ) move s7 , a0 lw s0 , ( a0 )
mov eax , num test rsi , rsi je hexvar push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r15 , rdi mov rbp , rsi mov rbx , qword ptr [ rdi ] lea r13 , [ rip + hexvar ] movabs r14 , hexvar mov eax , num test rbx , rbx je hexvar movzx eax , byte ptr [ rbx ] test al , al jne hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar add r15 , num mov rbx , qword ptr [ r15 ] test rbx , rbx jne hexvar mov eax , num jmp hexvar bt r14 , rax jae hexvar mov rsi , rbp mov edi , hexvar call hexvar cmp eax , - num je hexvar mov rsi , rbp mov edi , r12d call hexvar cmp eax , - num je hexvar add rbx , num movzx eax , byte ptr [ rbx ] test al , al je hexvar movsx r12d , al movzx edx , al test byte ptr [ r13 + rdx * num ] , hexvar jne hexvar sub eax , hexvar cmp al , hexvar ja hexvar jmp hexvar mov eax , num jmp hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ hexvar ] , eax test byte ptr [ hexvar ] , num je hexvar movsd xmm0 , qword ptr [ hexvar ] movsd qword ptr [ hexvar ] , xmm0 mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , edx lea edx , [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , edx sub esp , hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , hexvar movzx eax , byte ptr [ hexvar ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movsd xmm0 , qword ptr [ hexvar ] movsd qword ptr [ hexvar ] , xmm0 mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov edi , hexvar call hexvar nop pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 lw v0 , ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ esp + hexvar ] , num jle hexvar mov edi , edx mov ebp , ecx mov esi , num lea eax , [ esp + hexvar ] mov dword ptr [ esp ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + esi * num ] mov dword ptr [ edi + esi * num ] , eax add esi , num cmp dword ptr [ esp + hexvar ] , esi je hexvar mov eax , dword ptr [ edi + esi * num ] test eax , eax je hexvar mov edx , dword ptr [ ebp + esi * num ] test edx , edx je hexvar sub esp , num add edx , num push edx add eax , num push eax push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax jne hexvar sub esp , num push dword ptr [ esp + num ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ edi + esi * num ] , eax add esp , num push dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax je hexvar jmp hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 lw v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu v1 , v1 , v0 lw v0 , hexvar ( fp ) sll v0 , v0 , num lw a0 , hexvar ( fp ) addu v0 , a0 , v0 lw v1 , ( v1 )
push { r4 , r5 , r6 , r7 , r8 , sb , lr } ldr sb , [ pc , hexvar ] subs r7 , r3 , num ldr r3 , [ sb ] sub sp , sp , hexvar str r3 , [ sp , hexvar ] beq hexvar mov r8 , r0 mov r5 , num sub r4 , r1 , num sub r6 , r2 , num ldr r1 , [ r4 , num ] ! ldr r2 , [ r6 , num ] ! cmp r1 , num streq r2 , [ r4 ] beq hexvar cmp r2 , num beq hexvar add r2 , r2 , num add r1 , r1 , num add r0 , sp , num bl hexvar cmp r0 , num str r0 , [ sp , num ] bne hexvar add r2 , sp , num mov r1 , r8 add r0 , sp , num bl hexvar str r0 , [ r4 ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r0 , [ sp , num ] cmp r0 , num bne hexvar add r5 , r5 , num cmp r7 , r5 bne hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ sb ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r15 , rcx mov r12 , rdx mov r13 , rsi mov rbx , rdi call hexvar mov rdi , rax call hexvar mov qword ptr [ rsp ] , rax mov eax , hexvar jmp hexvar mov rdi , qword ptr [ rsp ] mov esi , hexvar xor edx , edx mov rcx , rbx call hexvar mov rdi , qword ptr [ rsp ] mov rsi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 call hexvar mov ebp , eax mov rdi , qword ptr [ rsp ] call hexvar mov eax , hexvar nop word ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r15 , rcx mov r12 , rdx mov r13 , rsi mov rbx , rdi call hexvar mov rdi , rax call hexvar mov qword ptr [ rsp ] , rax mov eax , hexvar jmp hexvar mov rdi , qword ptr [ rsp ] mov esi , hexvar xor edx , edx mov rcx , rbx call hexvar mov rdi , qword ptr [ rsp ] mov rsi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 call hexvar mov ebp , eax mov rdi , qword ptr [ rsp ] call hexvar mov eax , hexvar nop word ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r15 , rcx mov r12 , rdx mov r13 , rsi mov rbp , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , rbp call hexvar mov rdi , rbx mov rsi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 call hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax push dword ptr [ esp + hexvar ] push num push hexvar push eax call hexvar add esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar mov edi , eax add esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , esp mov dword ptr [ esi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] lea edx , [ edx * num + num ] add eax , num mov esi , esp mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ edx + ecx * num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] inc ecx mov dword ptr [ eax + num ] , ecx mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] add rax , num lea rcx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] shl rax , num add rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov eax , num jmp hexvar mov eax , hexvar leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r0 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] add r3 , r3 , num lsl r1 , r3 , num ldr r3 , [ fp , - hexvar ] add r3 , r3 , num mov r2 , r3 bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - num ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r2 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] add r2 , r3 , num ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , num ] mov r3 , num b hexvar mvn r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ eax + num ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] add eax , num lea edx , [ eax * num ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] sub esp , num push ecx push edx push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] shl eax , num add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov eax , num jmp hexvar mov eax , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] shr ecx , hexvar and ecx , num cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , ecx jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , eax mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar mov edx , hexvar cmovb edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] shr ecx , hexvar and ecx , num cmp ecx , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , ecx mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , eax mov dword ptr [ rbp - num ] , ecx mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , num test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar add qword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , qword ptr [ rbp - hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] shr ecx , hexvar mov edx , hexvar xor edx , num mov esi , ecx xor esi , edx and esi , ecx cmp esi , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , ecx jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , eax mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r5 , r0 mov r6 , r1 mov r8 , r2 mov r7 , r3 ldr r3 , [ r0 , hexvar ] cmp r3 , num bne hexvar ldr sl , [ r0 , hexvar ] cmp sl , num moveq sb , sl beq hexvar add r1 , r1 , sl mov r2 , r6 mov sb , num ldrb r3 , [ r2 ] , num add r3 , r3 , r3 , lsl num add sb , r3 , sb eor sb , sb , sb , lsr num cmp r2 , r1 bne hexvar b hexvar ldr r0 , [ r0 , hexvar ] cmp r0 , num movne ip , num movne r3 , ip bne hexvar add r1 , r6 , num ldrb r2 , [ r6 ] cmp r2 , num beq hexvar mov r3 , num add r2 , r2 , r2 , lsl num add r3 , r2 , r3 eor r3 , r3 , r3 , lsr num sub sl , r1 , r6 ldrb r2 , [ r1 ] , num cmp r2 , num bne hexvar add r3 , r3 , sl add sb , r3 , sl , lsl num b hexvar mov sl , num mov r3 , sl b hexvar add lr , r1 , r0 ldrb r2 , [ r1 ] , num add r2 , r2 , r2 , lsl num add r3 , r2 , r3 eor r3 , r3 , r3 , lsr num cmp lr , r1 bne hexvar add ip , ip , num cmp r0 , num beq hexvar ldrb r2 , [ r1 ] cmp r2 , num bne hexvar mov lr , r1 add r2 , r2 , num cmp r0 , r2 beq hexvar ldrb r4 , [ lr , num ] ! cmp r4 , num beq hexvar b hexvar add r3 , r3 , ip add sb , r3 , ip , lsl num mul sl , ip , r0 eor sb , sb , sb , lsr num add sl , r0 , sl ldr r1 , [ r5 , hexvar ] mov r0 , sb bl hexvar ldr r3 , [ r5 ] ldr r4 , [ r3 , r1 , lsl num ] cmp r4 , num bne hexvar cmp r7 , num moveq r4 , num beq hexvar mov r2 , sb mov r1 , r6 mov r0 , r5 bl hexvar subs r4 , r0 , num strne sl , [ r4 , hexvar ] strne r8 , [ r4 , hexvar ] mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } movwne fp , hexvar andeq r0 , r0 , r0
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , rdi mov r14 , rsi mov dword ptr [ rsp + hexvar ] , edx mov dword ptr [ rsp + num ] , ecx cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov r12d , dword ptr [ rdi + hexvar ] mov ebp , num test r12d , r12d je hexvar lea eax , [ r12 - num ] lea rsi , [ rsi + rax + num ] mov rdx , r14 mov ebp , num add rdx , num movzx ecx , byte ptr [ rdx - num ] mov eax , ecx shl eax , hexvar add eax , ecx mov eax , eax add rbp , rax mov rax , rbp shr rax , num xor rbp , rax cmp rdx , rsi jne hexvar jmp hexvar mov esi , dword ptr [ rdi + hexvar ] cmp esi , num je hexvar mov rdx , r14 mov r12d , num mov ebp , num lea edi , [ rsi - num ] add rdi , num jmp hexvar lea rdi , [ r14 + num ] movzx eax , byte ptr [ r14 ] test eax , eax je hexvar mov r12d , num mov ecx , num mov edx , eax shl edx , hexvar add edx , eax mov eax , edx add rax , rcx mov rcx , rax shr rcx , num xor rcx , rax add r12d , num movzx eax , byte ptr [ rdi ] add rdi , num test eax , eax jne hexvar mov eax , r12d shl eax , hexvar lea ebp , [ rax + r12 ] add rbp , rcx jmp hexvar mov r12d , eax mov ecx , num jmp hexvar lea r8 , [ rdx + rdi ] add rdx , num movzx ecx , byte ptr [ rdx - num ] mov eax , ecx shl eax , hexvar add eax , ecx mov eax , eax add rbp , rax mov rax , rbp shr rax , num xor rbp , rax cmp r8 , rdx jne hexvar add r12d , num test esi , esi je hexvar cmp byte ptr [ rdx ] , num jne hexvar lea rcx , [ rdx + num ] mov eax , num add eax , num cmp esi , eax je hexvar add rcx , num cmp byte ptr [ rcx - num ] , num je hexvar jmp hexvar mov eax , r12d shl eax , hexvar lea ecx , [ rax + r12 ] add rbp , rcx imul r12d , esi mov rax , rbp shr rax , num xor rbp , rax add r12d , esi mov ecx , dword ptr [ r13 + hexvar ] mov rax , rbp mov edx , num div rcx
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 move s4 , a2 lw v0 , hexvar ( a0 ) bnez v0 , hexvar move s3 , a3 lw s6 , hexvar ( a0 ) beqz s6 , hexvar addu a1 , a1 , s6 move v1 , s2 move s5 , zero addiu v1 , v1 , num lbu a0 , - num ( v1 ) sll v0 , a0 , hexvar addu v0 , v0 , a0 addu s5 , v0 , s5 srl v0 , s5 , num bne a1 , v1 , hexvar xor s5 , v0 , s5 b hexvar lw v1 , hexvar ( s1 ) b hexvar move s5 , s6 lw s6 , hexvar ( a0 )
push ebp push edi push esi push ebx mov esi , eax call hexvar add edi , hexvar sub esp , hexvar mov ebx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp ] , edx mov dword ptr [ esp + hexvar ] , ecx mov edi , dword ptr [ eax + hexvar ] test ebx , ebx jne hexvar test edi , edi je hexvar mov ecx , dword ptr [ esp ] xor ebp , ebp lea ebx , [ ecx + edi ] lea esi , [ esi ] add ecx , num movzx edx , byte ptr [ ecx - num ] mov eax , edx shl eax , hexvar add eax , edx add ebp , eax mov eax , ebp shr eax , num xor ebp , eax cmp ecx , ebx jne hexvar xor edx , edx mov eax , ebp div dword ptr [ esi + hexvar ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi cmp dword ptr [ edx ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num je hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a1 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test esi , esi mov edx , num cmove esi , edx test eax , eax je hexvar sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx pop esi ret
adds r3 , r0 , num movne r3 , num cmp r1 , num movne r3 , num cmp r3 , num push { r4 , lr } bne hexvar mov r4 , r1 bl hexvar adds r4 , r4 , num movne r4 , num cmp r0 , num movne r4 , num cmp r4 , num popeq { r4 , pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) move a1 , v0 lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r1 , r3 ldr r0 , [ sp ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
test byte ptr [ rip + hexvar ] , hexvar jne hexvar ret nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] push rbx mov edx , hexvar mov rbx , rdi mov esi , num mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar pop rbx mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar jmp hexvar
test byte ptr [ rip + hexvar ] , hexvar jne hexvar ret nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] push rbx mov edx , hexvar mov rbx , rdi mov esi , num mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar pop rbx mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar jmp hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar lea eax , [ ebx + hexvar ] test byte ptr [ eax + hexvar ] , hexvar jne hexvar add esp , num pop ebx pop esi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar call hexvar mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , eax mov edi , edx mov dword ptr [ esp + hexvar ] , ecx cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax ] , ebp sub esp , hexvar push edi call hexvar mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , num add esp , num push esi push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) move s5 , a1 sw s3 , hexvar ( sp ) move s4 , a0 sw s2 , hexvar ( sp ) move s3 , a2 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( s1 ) beqz v0 , hexvar move s2 , a3 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jalr t9 addiu a0 , zero , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a0 , s5 jalr t9 sw s4 , ( v0 ) move a1 , s0 lw gp , hexvar ( sp ) lw a0 , hexvar ( s1 ) sw v0 , num ( s0 ) sw s3 , num ( s0 ) sw s2 , hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 sw zero , hexvar ( s0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , hexvar ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , ( v0 ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov edx , dword ptr [ esi ] mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar sub esp , hexvar push esi call eax add esp , hexvar sub esp , hexvar lea eax , [ esi + hexvar ] push eax call hexvar mov eax , dword ptr [ esi + num ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar lea eax , [ esi + num ] push eax call hexvar lea eax , [ esi + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esi + hexvar ] push eax call hexvar add esp , num push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar sub esp , num push hexvar push esi call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov edx , dword ptr [ edi ] mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar sub esp , hexvar push edi call eax add esp , hexvar mov esi , dword ptr [ edi + hexvar ] test esi , esi je hexvar nop lea esi , [ esi ] mov ebp , dword ptr [ esi ] sub esp , hexvar push dword ptr [ esi + num ] call dword ptr [ esi + hexvar ] mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test ebp , ebp mov esi , ebp jne hexvar mov esi , dword ptr [ edi + num ] mov dword ptr [ edi + hexvar ] , num test esi , esi je hexvar mov edx , dword ptr [ esi ] mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar sub esp , hexvar push esi call eax add esp , hexvar sub esp , num push hexvar push esi call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar lea eax , [ edi + num ] sub esp , hexvar push eax call hexvar lea eax , [ edi + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ edi + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ edi + hexvar ] push eax call hexvar pop eax push dword ptr [ edi + hexvar ] call hexvar add esp , hexvar sub esp , num push hexvar push edi call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rdi , rdi je hexvar push r15 push r14 push rbx mov r15 , rdi mov rcx , qword ptr [ rdi ] mov rax , qword ptr [ rcx + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rdi , r15 call rax mov rbx , qword ptr [ r15 + hexvar ] test rbx , rbx je hexvar nop word ptr cs : [ rax + rax ] nop mov r14 , qword ptr [ rbx ] mov rdi , qword ptr [ rbx + num ] call qword ptr [ rbx + hexvar ] mov rdi , rbx call hexvar mov rbx , r14 test r14 , r14 jne hexvar mov qword ptr [ r15 + hexvar ] , num mov r14 , qword ptr [ r15 + num ] test r14 , r14 je hexvar mov rcx , qword ptr [ r14 ] mov rax , qword ptr [ rcx + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rdi , r14 call rax mov esi , hexvar mov rdi , r14 call hexvar mov rdi , r14 call hexvar lea rdi , [ r15 + hexvar ] call hexvar lea rdi , [ r15 + hexvar ] call hexvar mov rdi , qword ptr [ r15 + hexvar ] test rdi , rdi je hexvar mov rsi , qword ptr [ r15 + hexvar ] call hexvar mov rdi , qword ptr [ r15 + hexvar ] call hexvar mov esi , hexvar mov rdi , r15 call hexvar mov rdi , r15 pop rbx pop r14 pop r15 jmp hexvar ret
push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , num sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar jmp hexvar nop add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx cmp eax , num jl hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) move s0 , a0 addiu a1 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , s0 addiu s1 , v0 , num subu v0 , s1 , s0 slti v0 , v0 , num bnez v0 , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , s1 , - num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw v0 , - hexvar ( gp ) addiu s0 , s1 , num sw s0 , ( v0 ) lui v0 , hexvar sw s0 , - hexvar ( v0 ) lw v0 , - hexvar ( gp ) sw s0 , ( v0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lw a3 , ( v0 ) addiu a2 , zero , hexvar addiu a1 , zero , num lui a0 , hexvar addiu a0 , a0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] test ebp , ebp je hexvar sub esp , num push hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar lea edx , [ eax + num ] mov ecx , edx sub ecx , ebp cmp ecx , num jle hexvar lea esi , [ eax - num ] lea edi , [ ebx - hexvar ] mov ecx , num repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num test cl , cl jne hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , edx mov ebp , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num test cl , cl jne hexvar lea ebp , [ eax + num ] mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ eax ] , ebp mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ ebx + hexvar ] , ebp mov dword ptr [ eax ] , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rbp , rdi mov r12 , rsi call hexvar mov ebx , eax mov rdi , r12 call hexvar mov edx , eax cmp al , num je hexvar test bl , bl jne hexvar cmp bl , num je hexvar mov eax , num test dl , dl je hexvar pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lw v0 , hexvar ( a0 ) addiu a2 , zero , num beq v0 , a2 , hexvar lw v1 , hexvar ( a1 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] bl hexvar str r0 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmn r3 , hexvar beq hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push r12 push rbp mov edi , hexvar push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax je hexvar mov rbp , rax xor r12d , r12d mov ebx , hexvar mov rdi , rbp call hexvar test rax , rax je hexvar cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar movzx edx , byte ptr [ rax + hexvar ] cmp dl , hexvar je hexvar test dl , dl je hexvar lea rdi , [ rax + hexvar ] xor esi , esi mov r12d , num call hexvar mov rdi , rbp cmp ebx , eax cmovl ebx , eax call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar test r12d , r12d je hexvar cmp ebx , - num mov rbp , rsp je hexvar xor eax , eax cmp ebx , hexvar mov rsi , rbp setne al mov qword ptr [ rsp ] , num mov qword ptr [ rsp + hexvar ] , num add ebx , eax mov qword ptr [ rsp + num ] , num mov edi , ebx call hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test eax , eax js hexvar xor edx , edx cmp eax , hexvar mov esi , hexvar setne dl mov qword ptr [ rsp ] , num mov qword ptr [ rsp + hexvar ] , num add eax , edx mov rdx , rsp mov qword ptr [ rsp + num ] , num mov edi , eax call hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp - num ] , hexvar jge hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push r15 push r14 mov eax , ecx push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , ecx mov qword ptr [ rsp + hexvar ] , rsi mov rcx , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rcx xor ecx , ecx cmp eax , num mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov qword ptr [ rsp + hexvar ] , rdx mov byte ptr [ rsp + hexvar ] , dil jle hexvar sub eax , num mov r12d , num mov dword ptr [ rsp + hexvar ] , eax nop movsxd r13 , r12d lea rax , [ r13 * num ] mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp ] mov rbx , qword ptr [ rax + r13 * num ] test rbx , rbx je hexvar cmp byte ptr [ rbx ] , hexvar je hexvar mov edi , hexvar mov ecx , num mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] je hexvar mov byte ptr [ rsp + hexvar ] , num mov r14d , hexvar mov r15d , hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] add r14 , hexvar mov r15 , qword ptr [ r14 - hexvar ] add ebp , num test r15 , r15 je hexvar mov rsi , r15 mov rdi , rbx call hexvar test eax , eax jne hexvar movsxd rbp , ebp mov rax , rbp shl rax , num movzx eax , byte ptr [ rax + hexvar ] test al , hexvar je hexvar mov edi , hexvar mov ecx , num mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] jne hexvar cmp dword ptr [ rsp + hexvar ] , r12d je hexvar mov rax , qword ptr [ rsp ] cmp qword ptr [ rax + r13 * num + num ] , num je hexvar add r12d , num cmp byte ptr [ rsp + hexvar ] , num je hexvar nop dword ptr [ rax + rax ] add r12d , num cmp dword ptr [ rsp + hexvar ] , r12d jg hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar slti v0 , a3 , num sw a0 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw a3 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw a0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) sw a0 , hexvar ( sp ) sw v1 , hexvar ( sp ) bnez v0 , hexvar lui v0 , hexvar lui s6 , hexvar sw v0 , hexvar ( sp ) lui v1 , hexvar addiu v0 , s6 , - hexvar move s3 , a2 sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) lui v0 , hexvar addiu s7 , zero , num sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) addiu v0 , v1 , - hexvar b hexvar sw v0 , hexvar ( sp ) addiu s7 , s7 , num slt v0 , s7 , s2 beqz v0 , hexvar lw v0 , hexvar ( sp ) sll s1 , s7 , num addu s0 , s3 , s1 lw fp , ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar slti v0 , a3 , num sw a0 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw a3 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw a0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) sw a0 , hexvar ( sp ) sw v1 , hexvar ( sp ) bnez v0 , hexvar lui v0 , hexvar lui s6 , hexvar sw v0 , hexvar ( sp ) lui v1 , hexvar addiu v0 , s6 , - hexvar move s3 , a2 sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) lui v0 , hexvar addiu s7 , zero , num sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) addiu v0 , v1 , - hexvar b hexvar sw v0 , hexvar ( sp ) addiu s7 , s7 , num slt v0 , s7 , s2 beqz v0 , hexvar lw v0 , hexvar ( sp ) sll s1 , s7 , num addu s0 , s3 , s1 lw fp , ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar slti v0 , a3 , num sw a0 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw a3 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw a0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) sw a0 , hexvar ( sp ) sw v1 , hexvar ( sp ) bnez v0 , hexvar lui s6 , hexvar move s3 , a2 addiu v0 , s6 , hexvar addiu s7 , zero , num sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar sw v0 , hexvar ( sp ) addiu s7 , s7 , num slt v0 , s7 , s2 beqz v0 , hexvar lw v0 , hexvar ( sp ) sll s1 , s7 , num addu s0 , s3 , s1 lw fp , ( s0 )
cmp r2 , hexvar push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r4 , r2 mov r5 , r1 mov r8 , r3 mov r7 , r0 bhi hexvar mov r6 , hexvar add r3 , r2 , r2 , lsl num lsl r3 , r3 , num add r2 , r3 , hexvar mla r3 , r6 , r1 , r2 ldr r6 , [ r0 , hexvar ] add r6 , r6 , r3 cmp r5 , num beq hexvar cmp r5 , num bne hexvar cmp r4 , hexvar moveq r5 , num beq hexvar tst r4 , num movne r5 , num str r5 , [ r6 ] mov r0 , r8 bl hexvar add r4 , r0 , num mov r1 , r4 mov r0 , r7 bl hexvar mov r2 , r4 mov r1 , r8 bl hexvar str r0 , [ r6 , num ] pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp push edi push esi push ebx sub esp , hexvar mov ebx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov ecx , ebp mov edx , edi mov eax , ebx call hexvar mov esi , eax sub esp , num push ebp push edi push ebx call hexvar mov dword ptr [ esi ] , eax add esp , num push dword ptr [ esp + hexvar ] push ebx call hexvar mov dword ptr [ esi + num ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] cmp edi , hexvar ja hexvar imul eax , edx , hexvar lea ecx , [ edi + edi * num ] lea esi , [ eax + ecx * num + hexvar ] add esi , dword ptr [ ebp + hexvar ] test edx , edx je hexvar cmp edx , num jne hexvar cmp edi , hexvar je hexvar and edi , num mov eax , num cmovne edx , eax jmp hexvar mov eax , dword ptr [ ebp + num ] sub esp , hexvar mov eax , dword ptr [ eax + hexvar ] push edi call dword ptr [ eax + hexvar ] add esp , hexvar mov edx , eax sub esp , hexvar mov dword ptr [ esi ] , edx push dword ptr [ esp + hexvar ] call hexvar lea edi , [ eax + num ] add esp , hexvar xor edx , edx push edx push edi push ebp call hexvar add esp , hexvar push edi push dword ptr [ esp + hexvar ] push eax call hexvar mov dword ptr [ esi + num ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , ( v0 ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , num ( v0 ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , num addiu a1 , zero , - num move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bgtz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) b hexvar nop nop b hexvar nop nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , num addiu a1 , zero , - num move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bgtz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax lea eax , [ esi + hexvar ] push num push - num push eax call hexvar add esp , hexvar test eax , eax jle hexvar add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num cmp dword ptr [ esp + hexvar ] , num je hexvar add esp , num mov eax , num pop ebx pop esi ret
addiu v0 , zero , num beq a0 , v0 , hexvar lui gp , hexvar jr ra nop addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a0 , zero , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw s0 , ( a1 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num cmp dword ptr [ esp + hexvar ] , num je hexvar add esp , num mov eax , num pop ebx pop esi ret
cmp edi , num jne hexvar push rbx mov rbx , qword ptr [ rsi ] mov edi , hexvar call hexvar mov qword ptr [ rbx ] , rax pop rbx mov eax , num ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ ebx + hexvar ] lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] add dword ptr [ ebx + hexvar ] , num push eax push num push dword ptr [ ebp ] adc dword ptr [ ebx + hexvar ] , num call hexvar lea edx , [ ebx + hexvar ] add esp , hexvar mov eax , dword ptr [ edx + hexvar ] cmp eax , num je hexvar jb hexvar cmp eax , num jne hexvar lea esi , [ ebx + hexvar ] mov eax , dword ptr [ esi + hexvar ] cmp eax , - hexvar je hexvar test eax , eax js hexvar mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ esi ] test edx , edx jne hexvar sub esp , hexvar push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax mov edi , eax jne hexvar add esp , hexvar xor edi , edi pop ebx mov eax , edi pop esi pop edi pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] add dword ptr [ ebx + hexvar ] , num adc dword ptr [ ebx + hexvar ] , num push esi lea eax , [ ebx - hexvar ] push eax push num mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp eax , num je hexvar cmp eax , num jb hexvar cmp eax , num jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lui v0 , hexvar lw a1 , - hexvar ( v0 ) lw a0 , - hexvar ( v0 ) addiu a3 , zero , num move a2 , zero addu v1 , a1 , a3 sltu t0 , v1 , a1 addu v0 , a0 , a2 addu a0 , t0 , v0 move v0 , a0 lui a0 , hexvar sw v1 , - hexvar ( a0 ) sw v0 , - hexvar ( a0 ) lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lw a2 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) addiu v1 , zero , num beq v0 , v1 , hexvar nop sltiu v1 , v0 , num bnez v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] add edx , num adc dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , edx mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ hexvar ] test ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , num mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] and eax , num test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) jal hexvar nop sw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lw v0 , hexvar ( sp ) b hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
mov edx , dword ptr [ esp + num ] cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , edx call hexvar cmp eax , num mov edx , num cmove eax , edx ret
mov rcx , qword ptr [ rsi + hexvar ] test edx , edx je hexvar test cl , num je hexvar xor eax , eax test byte ptr [ rsi + hexvar ] , num je hexvar test cl , num jne hexvar mov edx , ecx and edx , hexvar xor edi , edi cmp rdx , hexvar sete dil mov eax , num sub eax , edi cmp rdx , hexvar je hexvar mov edx , ecx and edx , num test rdx , rdx jne hexvar test cl , num je hexvar mov eax , num test byte ptr [ rsi + hexvar ] , num jne hexvar xor eax , eax ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx ja hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jbe hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 movlo r3 , r2 movhs r3 , r3 mov r2 , r3 ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 bhs hexvar mvn r3 , num str r3 , [ fp , - num ] b hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 bls hexvar mov r3 , num str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx ja hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jbe hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx ja hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jbe hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 ] add r2 , sp , num mov r1 , hexvar mov r0 , num str r3 , [ sp , hexvar ] bl hexvar cmp r0 , num beq hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , esp add eax , - hexvar mov esp , eax mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar cmp eax , num jne hexvar sub esp , hexvar mov dword ptr [ esp ] , hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jbe hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov esp , ebp pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar cmp eax , num sete bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar sub esp , hexvar mov dword ptr [ esp ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num seta dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu a2 , sp , hexvar addiu a1 , zero , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a1 , sp , hexvar move v0 , zero lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop b hexvar nop lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] cmp dword ptr [ ebp + hexvar ] , edx jb hexvar mov edx , dword ptr [ ebp + num ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] shl edx , num add edx , ecx cmp dword ptr [ ebp + hexvar ] , edx jae hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] test edx , edx je hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] cmp edx , num jne hexvar mov ebx , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] sub esp , hexvar push edx call eax add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbp push rbx sub rsp , num mov rax , qword ptr [ rdi + hexvar ] cmp rax , rsi ja hexvar mov rbx , rdi mov rbp , rsi mov rdx , qword ptr [ rdi + hexvar ] lea rax , [ rax + rdx * num ] cmp rsi , rax jae hexvar mov rdi , qword ptr [ rsi ] cmp rdi , num jbe hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar call rax mov qword ptr [ rbp ] , num add qword ptr [ rbx + hexvar ] , num add rsp , num pop rbx pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] cmp eax , edi ja hexvar mov edx , dword ptr [ esi + hexvar ] lea eax , [ eax + edx * num ] cmp edi , eax jae hexvar mov eax , dword ptr [ edi ] cmp eax , num jbe hexvar mov edx , dword ptr [ esi + num ] test edx , edx je hexvar sub esp , hexvar push eax call edx add esp , hexvar mov dword ptr [ edi ] , num add dword ptr [ esi + hexvar ] , num pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] cmp eax , edi ja hexvar mov edx , dword ptr [ esi + hexvar ] lea eax , [ eax + edx * num ] cmp edi , eax jae hexvar mov eax , dword ptr [ edi ] cmp eax , num jbe hexvar mov edx , dword ptr [ esi + num ] test edx , edx je hexvar sub esp , hexvar push eax call edx add esp , hexvar mov dword ptr [ edi ] , num add dword ptr [ esi + hexvar ] , num pop ebx pop esi pop edi ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test eax , eax je hexvar test edx , edx je hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edx push eax call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar test eax , eax je hexvar movzx ebx , byte ptr [ eax + hexvar ] lea edx , [ ebx - num ] cmp dl , num ja hexvar lea esi , [ esi ] mov eax , dword ptr [ eax + hexvar ] movzx ecx , byte ptr [ eax + hexvar ] lea edx , [ ecx - num ] cmp dl , num jbe hexvar add esp , num pop ebx ret
test rdi , rdi je hexvar test rsi , rsi je hexvar push rbx mov ebx , r8d call hexvar test ebx , ebx je hexvar test rax , rax je hexvar movzx ecx , byte ptr [ rax + hexvar ] lea edx , [ rcx - num ] cmp dl , num ja hexvar mov rax , qword ptr [ rax + hexvar ] movzx ebx , byte ptr [ rax + hexvar ] lea edx , [ rbx - num ] cmp dl , num jbe hexvar pop rbx ret
push rbx mov ebx , r8d call hexvar test ebx , ebx je hexvar test rax , rax je hexvar movzx ecx , byte ptr [ rax + hexvar ] lea edx , [ rcx - num ] cmp dl , num ja hexvar nop mov rax , qword ptr [ rax + hexvar ] movzx ebx , byte ptr [ rax + hexvar ] lea edx , [ rbx - num ] cmp dl , num jbe hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , num beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ hexvar ] mov ebx , dword ptr [ hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar xor ecx , ecx cmp ecx , eax sete al and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx + hexvar ] push num push num push dword ptr [ eax + hexvar ] push dword ptr [ eax + hexvar ] call hexvar test eax , eax sete al add esp , hexvar pop ebx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ hexvar ] mov ebx , dword ptr [ hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar xor ecx , ecx cmp ecx , eax sete al and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ ebx + hexvar ] mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , num mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ esp + num ] push edx lea edx , [ ebx - hexvar ] push edx push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar test eax , eax sete al mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] cmp ecx , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] cmp ecx , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar cmp byte ptr [ esi ] , num jne hexvar lea esi , [ ebx - hexvar ] mov dword ptr [ ebx + hexvar ] , esi add esp , num pop ebx pop esi ret
test rdi , rdi push rbx mov rbx , rdi je hexvar cmp byte ptr [ rbx ] , num jne hexvar lea rbx , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rbx pop rbx ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] and eax , num test al , al je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar mov rdi , qword ptr [ rbx + num ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar test byte ptr [ rbx + hexvar ] , num je hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar nop word ptr cs : [ rax + rax ]
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] ldrb r3 , [ r3 , hexvar ] and r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r0 , [ fp , - num ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( a0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] xor edi , edi cmp edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ eax + ecx ] mov byte ptr [ ebp - hexvar ] , dl mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dl , byte ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] xor edi , edi cmp edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ eax + ecx ] mov byte ptr [ ebp - hexvar ] , dl mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dl , byte ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 b hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 ldrb r3 , [ r3 ] strb r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 mov r2 , num strb r2 , [ r3 ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 ldrb r2 , [ fp , - num ] strb r2 , [ r3 ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov esi , ecx mov edi , eax call hexvar jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , num mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , ecx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rdx , rax movzx eax , byte ptr [ rbp - num ] mov byte ptr [ rdx ] , al mov rax , qword ptr [ rbp - num ] leave ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] cmn r3 , num bne hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar addiu a0 , a0 , num sltiu a0 , a0 , num bnez a0 , hexvar sw gp , hexvar ( sp ) move v0 , zero lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , ( v0 ) jal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp )
test edi , edi sete cl cmp edi , - num sete dl xor eax , eax cmp cl , dl je hexvar push rax call hexvar mov ecx , dword ptr [ rax ] mov eax , num lea edx , [ rcx - hexvar ] cmp edx , hexvar lea rsp , [ rsp + num ] ja hexvar movabs rsi , hexvar bt rsi , rdx jb hexvar cmp ecx , num je hexvar cmp ecx , hexvar jne hexvar ret
test edi , edi sete cl cmp edi , - num sete dl xor eax , eax cmp cl , dl je hexvar push rax call hexvar mov ecx , dword ptr [ rax ] mov eax , num lea edx , [ rcx - hexvar ] cmp edx , hexvar lea rsp , [ rsp + num ] ja hexvar movabs rsi , hexvar bt rsi , rdx jb hexvar cmp ecx , num je hexvar cmp ecx , hexvar jne hexvar ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edi or edi , esi mov dword ptr [ esp + num ] , esi jne hexvar mov dword ptr [ ecx ] , num xor esi , esi add esp , hexvar pop ebx mov eax , esi pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s3 , hexvar ( a1 ) lw s5 , hexvar ( a1 ) or v0 , s3 , s5 bnez v0 , hexvar move s1 , a2 beqz a2 , hexvar nop sw zero , ( a2 )
push rbp mov rbp , rsp push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , r12 mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov r12 , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rbx mov rsi , r12 mov rdi , rax mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rdx + hexvar ] mov edx , num div rbx
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov edi , esi mov ebp , dword ptr [ esp + num ] or edi , ebp jne hexvar mov esi , num test ecx , ecx je hexvar mov dword ptr [ ecx ] , num jmp hexvar mov edi , dword ptr [ edx + hexvar ] mov ebp , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , ebp mov esi , num cmp dword ptr [ esp + num ] , ebp jb hexvar ja hexvar cmp dword ptr [ esp ] , edi jb hexvar mov esi , num mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + num ] , edx mov ebp , eax mov eax , esi test al , al jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , eax or esi , edx je hexvar mov eax , dword ptr [ esp ] mov edx , dword ptr [ esp + num ] cmp edx , dword ptr [ ebp + hexvar ] jb hexvar ja hexvar cmp eax , dword ptr [ ebp + num ] jbe hexvar mov edx , dword ptr [ esp + num ] mov eax , ebp call hexvar mov edi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + num ] push edi push eax call hexvar add esp , hexvar mov edi , num mov dword ptr [ esp ] , num jmp hexvar mov edx , dword ptr [ esp + num ] mov eax , ebp call hexvar mov esi , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push esi push eax call hexvar add esp , hexvar mov edi , num mov dword ptr [ esp ] , num sub esp , hexvar push edi call hexvar add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov esi , num cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 mov r15 , rdi push r13 push r12 add rdi , num push rbp push rbx mov r14 , rsi sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea r12 , [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] mov qword ptr [ rsp ] , rdx movdqu xmm0 , xmmword ptr [ rbx ] mov rax , qword ptr [ rbx + hexvar ] mov rbp , qword ptr [ rbx + hexvar ] mov rdx , r12 movaps xmmword ptr [ rsp + hexvar ] , xmm0 mov rsi , r13 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , num call hexvar mov rdx , qword ptr [ rsp ] mov esi , hexvar mov rdi , r12 call r14
push r15 push r14 mov r15 , rdi push r13 push r12 add rdi , num push rbp push rbx mov r14 , rsi sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea r12 , [ rsp + hexvar ] lea r13 , [ rsp + hexvar ] mov qword ptr [ rsp ] , rdx movdqu xmm0 , xmmword ptr [ rbx ] mov rax , qword ptr [ rbx + hexvar ] mov rbp , qword ptr [ rbx + hexvar ] mov rdx , r12 movaps xmmword ptr [ rsp + hexvar ] , xmm0 mov rsi , r13 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , num call hexvar mov rdx , qword ptr [ rsp ] mov esi , hexvar mov rdi , r12 call r14
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v1 , sp , hexvar sw s2 , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , a0 lw s2 , hexvar ( a0 ) lw v0 , - hexvar ( gp ) sw s1 , hexvar ( sp ) sw a1 , hexvar ( sp ) addiu a1 , s2 , hexvar sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw v1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw a0 , ( v0 ) lw v0 , hexvar ( s2 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ ebp + hexvar ] sub edx , num cmp edx , num jbe hexvar sub esp , hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , num jmp hexvar nop sub esp , num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test esi , esi je hexvar lea edx , [ eax - num ] cmp edx , num ja hexvar xor edx , edx call hexvar test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi pop ebx pop esi pop edi jmp hexvar lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar push eax lea eax , [ ebx - hexvar ] push eax mov eax , dword ptr [ ebx + hexvar ] push num push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx xor eax , eax pop esi pop edi ret
beqz a1 , hexvar nop lui gp , hexvar addiu sp , sp , - hexvar addiu v0 , a2 , - num addiu gp , gp , hexvar sltiu v0 , v0 , num sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) move s0 , a1 beqz v0 , hexvar sw gp , hexvar ( sp ) move a1 , zero jal hexvar move a0 , a2 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move a1 , s0 move a0 , s1 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) addiu sp , sp , hexvar j hexvar move a2 , v0 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , hexvar jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) move a3 , v0 addiu a1 , zero , num addiu a2 , a2 , hexvar lw v0 , - hexvar ( gp )
beqz a1 , hexvar nop lui gp , hexvar addiu sp , sp , - hexvar addiu v0 , a2 , - num addiu gp , gp , - hexvar sltiu v0 , v0 , num sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) move s0 , a1 beqz v0 , hexvar sw gp , hexvar ( sp ) move a1 , zero jal hexvar move a0 , a2 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move a1 , s0 move a0 , s1 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) addiu sp , sp , hexvar j hexvar move a2 , v0 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) move a3 , v0 addiu a1 , zero , num addiu a2 , a2 , hexvar lw v0 , - hexvar ( gp )
str lr , [ sp , - num ] ! sub sp , sp , hexvar bl hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar mov r0 , hexvar bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 ] mov r1 , num ldr r0 , [ sp , num ] bl hexvar ldr r3 , [ sp , num ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , hexvar push hexvar call hexvar mov dword ptr [ esi ] , eax mov dword ptr [ esp ] , eax call hexvar add esp , hexvar cmp eax , hexvar je hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov edi , dword ptr [ esi + num ] cmp dword ptr [ edi ] , num jne hexvar add edi , num lea esi , [ esi ] mov eax , dword ptr [ edi ] test eax , eax je hexvar or dword ptr [ eax + hexvar ] , hexvar mov eax , esi pop ebx pop esi pop edi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , hexvar push hexvar call hexvar mov dword ptr [ esi ] , eax pop eax pop edx push num push esi call hexvar add esp , hexvar add esp , num mov eax , esi pop ebx pop esi ret
push rbx mov edi , hexvar call hexvar mov rbx , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx ] , rax mov rdi , rbx xor esi , esi call hexvar mov rax , rbx pop rbx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , r9 mov r12d , r8d mov r13d , ecx mov rbp , rdx mov rbx , rsi mov r15 , rdi mov rdi , rsi call hexvar mov ecx , num test eax , eax jle hexvar xor r14d , r14d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , rbx mov esi , r14d call hexvar mov rdi , r15 mov rsi , rax mov rdx , rbp mov ecx , r13d mov r8d , r12d mov r9 , qword ptr [ rsp ] call hexvar test eax , eax je hexvar add r14d , num mov rdi , rbx call hexvar cmp r14d , eax jl hexvar mov ecx , num jmp hexvar xor ecx , ecx mov eax , ecx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + num ] , r8d mov r12d , ecx mov r13 , rdx mov rbx , rsi mov rbp , rdi mov eax , hexvar xor r15d , r15d jmp hexvar mov r15d , dword ptr [ rsp ] add r15d , num mov eax , hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov r14d , num jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov dword ptr [ rsp ] , r15d mov qword ptr [ rsp + num ] , rbx mov rdi , qword ptr [ rsp + num ] call hexvar mov ecx , dword ptr [ rsp ] cmp ecx , eax mov eax , hexvar mov ecx , hexvar cmovl eax , ecx jmp hexvar mov rdi , qword ptr [ rsp + num ] mov esi , dword ptr [ rsp ] call hexvar mov rdi , rbp mov rsi , rax mov rdx , r13 mov ecx , r12d mov r8d , dword ptr [ rsp + num ] mov r9 , qword ptr [ rsp + hexvar ] call hexvar test eax , eax mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov eax , hexvar xor r14d , r14d jmp hexvar mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s4 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw v0 , hexvar ( sp ) lw v0 , ( v0 ) sw s3 , hexvar ( sp ) move s3 , a1 sw fp , hexvar ( sp ) sw v0 , hexvar ( sp ) andi v0 , s4 , num sw v0 , hexvar ( sp ) andi v0 , s4 , num sw v0 , hexvar ( sp ) andi v0 , s4 , num sw v0 , hexvar ( sp ) andi v0 , s4 , hexvar sw v0 , hexvar ( sp ) andi v0 , s4 , num sw v0 , hexvar ( sp ) lui v0 , hexvar sw s7 , hexvar ( sp ) move s7 , a2 addiu v0 , v0 , hexvar sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a0 sw v0 , hexvar ( sp ) lui v0 , hexvar sw s1 , hexvar ( sp ) move a0 , s3 addiu v0 , v0 , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move s1 , zero sw v0 , hexvar ( sp ) lui v0 , hexvar sw s2 , hexvar ( sp ) move s6 , a3 sw v0 , hexvar ( sp ) lui v0 , hexvar sw s0 , hexvar ( sp ) addiu v0 , v0 , hexvar lw fp , hexvar ( sp ) sw v0 , hexvar ( sp ) lui v0 , hexvar jalr t9 sw v0 , hexvar ( sp ) slt v0 , s1 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , s3 jalr t9 move a1 , s1 lw gp , hexvar ( sp ) move s2 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s4 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw v0 , hexvar ( sp ) lw v0 , ( v0 ) sw s3 , hexvar ( sp ) move s3 , a1 sw fp , hexvar ( sp ) sw v0 , hexvar ( sp ) andi v0 , s4 , num sw v0 , hexvar ( sp ) andi v0 , s4 , num sw v0 , hexvar ( sp ) andi v0 , s4 , num sw v0 , hexvar ( sp ) andi v0 , s4 , hexvar sw v0 , hexvar ( sp ) andi v0 , s4 , num sw v0 , hexvar ( sp ) lui v0 , hexvar sw s7 , hexvar ( sp ) move s7 , a2 addiu v0 , v0 , hexvar sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a0 sw v0 , hexvar ( sp ) lui v0 , hexvar sw s1 , hexvar ( sp ) move a0 , s3 addiu v0 , v0 , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move s1 , zero sw v0 , hexvar ( sp ) lui v0 , hexvar sw s2 , hexvar ( sp ) move s6 , a3 sw v0 , hexvar ( sp ) lui v0 , hexvar sw s0 , hexvar ( sp ) addiu v0 , v0 , hexvar lw fp , hexvar ( sp ) sw v0 , hexvar ( sp ) lui v0 , hexvar jalr t9 sw v0 , hexvar ( sp ) slt v0 , s1 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , s3 jalr t9 move a1 , s1 lw gp , hexvar ( sp ) move s2 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov dword ptr [ rsp + hexvar ] , ecx test edx , edx jle hexvar mov ebx , edx mov r12 , rsi mov r13 , rdi xor r14d , r14d nop word ptr cs : [ rax + rax ] lea eax , [ r14 + rbx ] mov r15d , eax shr r15d , hexvar add r15d , eax sar r15d , num mov eax , r15d imul eax , dword ptr [ rsp + hexvar ] movsxd rbp , eax add rbp , r12 mov rdi , r13 mov rsi , rbp call qword ptr [ rsp + hexvar ] test eax , eax js hexvar je hexvar add r15d , num mov r14d , r15d cmp r14d , ebx jl hexvar jmp hexvar nop dword ptr [ rax ] mov ebx , r15d cmp r14d , ebx jl hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov dword ptr [ rsp + hexvar ] , ecx test edx , edx jle hexvar mov ebx , edx mov r12 , rsi mov r13 , rdi xor r14d , r14d nop word ptr cs : [ rax + rax ] lea eax , [ r14 + rbx ] mov r15d , eax shr r15d , hexvar add r15d , eax sar r15d , num mov eax , r15d imul eax , dword ptr [ rsp + hexvar ] movsxd rbp , eax add rbp , r12 mov rdi , r13 mov rsi , rbp call qword ptr [ rsp + hexvar ] test eax , eax js hexvar je hexvar add r15d , num mov r14d , r15d cmp r14d , ebx jl hexvar jmp hexvar nop dword ptr [ rax ] mov ebx , r15d cmp r14d , ebx jl hexvar xor ebp , ebp mov rax , rbp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw s4 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a2 , hexvar lw s4 , hexvar ( sp ) blez a2 , hexvar move s5 , a2 move s1 , a0 move s2 , a1 move s3 , a3 b hexvar move s6 , zero beqz v0 , hexvar addiu s6 , s0 , num slt v1 , s6 , s5 beqz v1 , hexvar nop addu s0 , s5 , s6 move a0 , s1 move v0 , s0 srl s0 , s0 , hexvar move t9 , s4 addu s0 , s0 , v0 sra s0 , s0 , num mul v0 , s3 , s0 addu s7 , v0 , s2 jalr t9 move a1 , s7 bgez v0 , hexvar slt v1 , s6 , s0 move s5 , s0 bnez v1 , hexvar addu s0 , s5 , s6 beqz v0 , hexvar lw ra , hexvar ( sp ) move s7 , zero lw ra , hexvar ( sp ) move v0 , s7 lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ebx pop ebx pop esi jmp hexvar lea esi , [ esi ] xor eax , eax pop ebx pop esi ret
push edi push esi xor eax , eax push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] mov eax , num test edx , edx jne hexvar pop ebx pop esi pop edi ret
push rbp push r14 push rbx test rdi , rdi je hexvar mov rbx , rdi mov r14d , num cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov edi , dword ptr [ rbp + hexvar ] cmp edi , - num je hexvar mov esi , num call hexvar mov edi , dword ptr [ rbp + hexvar ] call hexvar mov dword ptr [ rbp + hexvar ] , hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi jne hexvar jmp hexvar xor r14d , r14d jmp hexvar test rbp , rbp je hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , r14d pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx test rdi , rdi je hexvar mov rbx , rdi mov r14d , num cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov edi , dword ptr [ rbp + hexvar ] cmp edi , - num je hexvar mov esi , num call hexvar mov edi , dword ptr [ rbp + hexvar ] call hexvar mov dword ptr [ rbp + hexvar ] , hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi jne hexvar jmp hexvar xor r14d , r14d jmp hexvar test rbp , rbp je hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , r14d pop rbx pop r14 pop rbp ret
push edi push esi xor eax , eax push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] mov eax , num test edx , edx jne hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] movzx edx , byte ptr [ edx + hexvar ] mov esi , edx sub esi , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar xor eax , eax add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] movzx edx , byte ptr [ edx + hexvar ] mov esi , edx sub esi , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + hexvar ] , eax jmp hexvar xor eax , eax add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lbu v0 , hexvar ( v0 ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
mov eax , dword ptr [ esp + num ] movzx edx , byte ptr [ eax + hexvar ] cmp dl , hexvar je hexvar cmp dl , hexvar je hexvar mov edx , dword ptr [ eax + num ] test edx , edx je hexvar mov ecx , dword ptr [ eax + hexvar ] mov dword ptr [ edx + hexvar ] , ecx mov edx , dword ptr [ eax + num ] test edx , edx je hexvar mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ edx + hexvar ] , eax jmp hexvar mov edx , dword ptr [ eax + num ] mov dword ptr [ edx + hexvar ] , eax mov eax , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rdx , rax jb hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax shl qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push ebp push edi mov ebp , eax push esi push ebx mov ebx , ecx sub esp , hexvar mov edi , dword ptr [ eax + hexvar ] mov esi , dword ptr [ edx ] mov ecx , dword ptr [ eax + hexvar ] cmp esi , edi ja hexvar test esi , esi je hexvar add esi , esi xor edi , edi mov dword ptr [ edx ] , esi mov edx , edi mov eax , esi shld edx , esi , num shl eax , num sub esp , num push edx push eax push ecx call hexvar mov ecx , eax add esp , hexvar xor eax , eax test ecx , ecx je hexvar mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , ecx test ebx , ebx mov dword ptr [ ecx + edi * num ] , ebx mov eax , num je hexvar add edi , num mov dword ptr [ ebp + hexvar ] , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] call hexvar add eax , hexvar cmp edx , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + hexvar ] , edx ja hexvar add esp , hexvar ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] cmp edx , hexvar jbe hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push hexvar lea eax , [ eax - hexvar ] push eax call hexvar nop leave ret
mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rdi mov dword ptr [ rip + hexvar ] , esi cmp esi , hexvar ja hexvar ret sub rsp , num lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar
lui v0 , hexvar addiu v1 , zero , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar sw a0 , - hexvar ( v0 ) lui v0 , hexvar sw a1 , - hexvar ( v0 ) sltiu a1 , a1 , hexvar beqz a1 , hexvar lui a2 , hexvar jr ra nop addiu sp , sp , - hexvar sw ra , hexvar ( sp ) addiu a2 , a2 , - hexvar addiu a1 , zero , hexvar lui a0 , hexvar addiu a0 , a0 , - hexvar jal hexvar nop
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov dword ptr [ rbp - num ] , eax add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } mov r4 , r2 mov r5 , r3 ldr r6 , [ r0 , num ] ldr r1 , [ sp , hexvar ] cmp r1 , num beq hexvar ldr r1 , [ r0 , hexvar ] ldr ip , [ r0 , hexvar ] adds r4 , r2 , r1 adc r5 , r3 , ip cmp r4 , num sbcs r3 , r5 , num blt hexvar mov r1 , r4 ldr r3 , [ r6 ] cmp r4 , r3 bls hexvar ldrb r2 , [ r0 , hexvar ] tst r2 , hexvar beq hexvar add r3 , r3 , hexvar bic r4 , r3 , hexvar str r1 , [ r6 ] add r1 , r1 , hexvar bic r5 , r1 , hexvar cmp r4 , r5 blo hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test ecx , ecx mov esi , dword ptr [ ebp + num ] je hexvar add eax , dword ptr [ ebp + hexvar ] adc edx , dword ptr [ ebp + hexvar ] test edx , edx js hexvar mov ebx , dword ptr [ esi + num ] mov ecx , dword ptr [ esi ] cmp ebx , edx jae hexvar test byte ptr [ ebp + hexvar ] , hexvar je hexvar add ecx , hexvar mov dword ptr [ esi ] , eax mov dword ptr [ esi + num ] , edx mov ebp , ecx adc ebx , num and ebp , hexvar add eax , hexvar mov dword ptr [ esp ] , ebx mov dword ptr [ esp + hexvar ] , ebp mov ebp , eax adc edx , num and ebp , hexvar cmp dword ptr [ esp ] , edx mov ebx , edx mov ecx , ebp jbe hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r1 , [ sp , hexvar ] ldr r6 , [ r0 , num ] cmp r1 , num beq hexvar ldr r1 , [ r0 , hexvar ] ldr ip , [ r0 , hexvar ] adds r2 , r2 , r1 adc r3 , r3 , ip cmp r2 , num sbcs r1 , r3 , num blt hexvar ldr r1 , [ r6 ] cmp r2 , r1 bls hexvar ldrb lr , [ r0 , hexvar ] ands lr , lr , hexvar beq hexvar add r1 , r1 , hexvar add ip , r2 , hexvar bic r4 , r1 , hexvar bic r5 , ip , hexvar cmp r4 , r5 str r2 , [ r6 ] blo hexvar mov r3 , num mov r0 , r3 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test ecx , ecx mov esi , dword ptr [ edi + num ] je hexvar add eax , dword ptr [ edi + hexvar ] adc edx , dword ptr [ edi + hexvar ] test edx , edx js hexvar mov ebx , dword ptr [ esi + num ] mov ecx , dword ptr [ esi ] cmp ebx , edx jae hexvar test byte ptr [ edi + hexvar ] , hexvar je hexvar add ecx , hexvar mov dword ptr [ esi ] , eax mov dword ptr [ esi + num ] , edx mov edi , ecx adc ebx , num and edi , hexvar add eax , hexvar mov ecx , ebx adc edx , num mov ebx , eax mov dword ptr [ esp + hexvar ] , edi and ebx , hexvar cmp ecx , edx mov ebp , edx mov edi , ebx jbe hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) addiu v0 , sp , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , rdi mov dword ptr [ rsp + hexvar ] , num lea rdi , [ rsp + hexvar ] call hexvar cmp dword ptr [ r12 + hexvar ] , hexvar jne hexvar mov rax , qword ptr [ r12 + hexvar ] mov rcx , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ rax + num ] mov rax , qword ptr [ rcx ] mov r15 , qword ptr [ rax + num ] mov rdi , r15 xor esi , esi call hexvar mov r14 , rax test rax , rax je hexvar mov rdi , r14 call hexvar test eax , eax jle hexvar call hexvar mov rdi , r14 mov esi , hexvar mov edx , hexvar mov ecx , num xor r8d , r8d mov r9 , rax call hexvar test eax , eax jle hexvar mov eax , dword ptr [ r12 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov rax , qword ptr [ r12 + num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rsp + hexvar ] mov rdi , r12 mov esi , hexvar call qword ptr [ rax + hexvar ] jmp hexvar xor r14d , r14d lea rdi , [ rsp + hexvar ] call hexvar mov rdi , r14 call hexvar mov rdi , r12 mov esi , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rdi , r14 call hexvar mov dword ptr [ r12 + hexvar ] , num mov eax , hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , hexvar ( s1 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , rdi mov dword ptr [ rsp + hexvar ] , num lea rdi , [ rsp + hexvar ] call hexvar cmp dword ptr [ r12 + hexvar ] , hexvar jne hexvar mov rax , qword ptr [ r12 + hexvar ] mov rcx , qword ptr [ r12 + hexvar ] mov rbx , qword ptr [ rax + num ] mov rax , qword ptr [ rcx ] mov r15 , qword ptr [ rax + num ] mov rdi , r15 xor esi , esi call hexvar mov r14 , rax test rax , rax je hexvar mov rdi , r14 call hexvar test eax , eax jle hexvar call hexvar mov rdi , r14 mov esi , hexvar mov edx , hexvar mov ecx , num xor r8d , r8d mov r9 , rax call hexvar test eax , eax jle hexvar mov eax , dword ptr [ r12 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov rax , qword ptr [ r12 + num ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rsp + hexvar ] mov rdi , r12 mov esi , hexvar call qword ptr [ rax + hexvar ] jmp hexvar xor r14d , r14d lea rdi , [ rsp + hexvar ] call hexvar mov rdi , r14 call hexvar mov rdi , r12 mov esi , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rdi , r14 call hexvar mov dword ptr [ r12 + hexvar ] , num mov eax , hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push edi push esi mov edi , eax call hexvar add esi , hexvar push ebx mov edx , dword ptr [ esi + hexvar ] lea eax , [ esi + hexvar ] call hexvar mov ebx , dword ptr [ esi + hexvar ] cmp ebx , edi je hexvar nop lea esi , [ esi ] mov edx , dword ptr [ esi + hexvar ] mov eax , ebx call hexvar mov ebx , dword ptr [ ebx + hexvar ] cmp edi , ebx jne hexvar pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r4 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] mov r0 , r4 ldr r1 , [ r6 , hexvar ] bl hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , r5 popeq { r4 , r5 , r6 , pc } mov r0 , r4 ldr r1 , [ r6 , num ] bl hexvar ldr r4 , [ r4 , hexvar ] cmp r5 , r4 bne hexvar pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov esi , dword ptr [ rip + hexvar ] mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] sub rax , rcx setne dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rip + hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push rbx mov rbx , rdi mov esi , hexvar call hexvar mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num test rdx , rdx je hexvar mov dword ptr [ rdx + hexvar ] , num lea rax , [ rip - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov qword ptr [ rdx + hexvar ] , num mov qword ptr [ rdx + hexvar ] , num lea rdi , [ rdx + hexvar ] and rdi , hexvar sub edx , edi lea ecx , [ rdx + hexvar ] shr ecx , num mov ecx , ecx mov eax , num rep stosq qword ptr [ rdi ] , rax mov eax , num pop rbx ret
push rbx mov rbx , rdi mov esi , hexvar call hexvar mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , num test rdx , rdx je hexvar mov dword ptr [ rdx + hexvar ] , num lea rax , [ rip - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , hexvar mov dword ptr [ rdx + hexvar ] , num mov qword ptr [ rdx + hexvar ] , num mov qword ptr [ rdx + hexvar ] , num lea rdi , [ rdx + hexvar ] and rdi , hexvar sub edx , edi lea ecx , [ rdx + hexvar ] shr ecx , num mov ecx , ecx mov eax , num rep stosq qword ptr [ rdi ] , rax mov eax , num pop rbx ret
push rbx mov esi , hexvar mov rbx , rdi call hexvar mov rdx , rax mov qword ptr [ rbx + hexvar ] , rax xor eax , eax test rdx , rdx je hexvar lea rdi , [ rdx + hexvar ] lea rax , [ rip - hexvar ] mov dword ptr [ rdx + hexvar ] , num mov qword ptr [ rdx + hexvar ] , num mov qword ptr [ rdx + hexvar ] , num and rdi , hexvar mov qword ptr [ rdx + hexvar ] , rax xor eax , eax sub edx , edi lea ecx , [ rdx + hexvar ] shr ecx , num rep stosq qword ptr [ rdi ] , rax mov eax , num pop rbx ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] sub esp , num push num push hexvar push esi call hexvar mov edi , eax mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , num test edi , edi je hexvar mov dword ptr [ edi + hexvar ] , num lea eax , [ ebx - hexvar ] mov dword ptr [ edi + hexvar ] , eax mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , num lea ecx , [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , num mov dword ptr [ edi + hexvar ] , num sub edi , - hexvar and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov eax , num pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , num cmp dword ptr [ esi + hexvar ] , - num je hexvar mov edi , dword ptr [ esi + num ] movzx eax , byte ptr [ esi + hexvar ] shr al , num and eax , num cmp al , num jbe hexvar sub esp , num push hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar sub eax , edi mov dword ptr [ esp + hexvar ] , eax sub esp , num add eax , num cdq push edx push eax call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push eax call hexvar mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ ebp + eax ] , num mov dword ptr [ esp ] , ebp call hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] lea ecx , [ edx + num ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ edi ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esp ] , ebp call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , num mov eax , num jmp hexvar sub esp , hexvar push edi call hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ecx ] lea ecx , [ edx + num ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ edi ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov ebp , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + hexvar ] , - num je hexvar movzx eax , byte ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] shr al , num and eax , num cmp al , num jbe hexvar sub esp , num push hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar sub eax , edi sub esp , num mov dword ptr [ esp + hexvar ] , eax add eax , num cdq push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push eax mov dword ptr [ esp + hexvar ] , eax call hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ edx + eax ] , num mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp ] , edx call hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ ecx ] lea edi , [ ecx + num ] mov dword ptr [ edx ] , edi mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esp ] , edx call hexvar add esp , hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
ldr r3 , [ r0 , hexvar ] cmn r3 , num beq hexvar ldrb r3 , [ r0 , hexvar ] push { r4 , r5 , r6 , r7 , r8 , lr } lsr r3 , r3 , num and r3 , r3 , num cmp r3 , num mov r6 , r1 mov r4 , r0 ldr r7 , [ r0 , num ] bls hexvar mov r1 , hexvar mov r0 , r7 bl hexvar cmp r0 , num beq hexvar sub r8 , r0 , r7 add r0 , r8 , num bl hexvar subs r5 , r0 , num beq hexvar mov r1 , r7 mov r2 , r8 bl hexvar mov r3 , num mov r0 , r5 strb r3 , [ r5 , r8 ] bl hexvar mov r3 , r0 ldr r2 , [ r6 ] mov r0 , r5 add r1 , r2 , num str r1 , [ r6 ] str r3 , [ r2 ] str r3 , [ r4 , hexvar ] bl hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi mov ebp , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + hexvar ] , - num je hexvar movzx eax , byte ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] shr al , num and eax , num cmp al , num jbe hexvar sub esp , num push hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar sub eax , edi sub esp , num mov dword ptr [ esp + hexvar ] , eax add eax , num cdq push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push eax mov dword ptr [ esp + hexvar ] , eax call hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ edx + eax ] , num mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp ] , edx call hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ ecx ] lea edi , [ ecx + num ] mov dword ptr [ edx ] , edi mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esp ] , edx call hexvar add esp , hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm3 movsd qword ptr [ rbp - hexvar ] , xmm4 movsd qword ptr [ rbp - hexvar ] , xmm5 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] movsd xmm3 , qword ptr [ rbp - hexvar ] movsd xmm4 , qword ptr [ rbp - hexvar ] movsd xmm5 , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm3 movsd qword ptr [ rbp - hexvar ] , xmm4 movsd qword ptr [ rbp - hexvar ] , xmm5 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] movsd xmm3 , qword ptr [ rbp - hexvar ] movsd xmm4 , qword ptr [ rbp - hexvar ] movsd xmm5 , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm3 movsd qword ptr [ rbp - hexvar ] , xmm4 movsd qword ptr [ rbp - hexvar ] , xmm5 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] movsd xmm3 , qword ptr [ rbp - hexvar ] movsd xmm4 , qword ptr [ rbp - hexvar ] movsd xmm5 , qword ptr [ rbp - hexvar ] movabs rsi , num mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd qword ptr [ rbp - hexvar ] , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm3 movsd qword ptr [ rbp - hexvar ] , xmm4 movsd qword ptr [ rbp - hexvar ] , xmm5 cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] movsd xmm3 , qword ptr [ rbp - hexvar ] movsd xmm4 , qword ptr [ rbp - hexvar ] movsd xmm5 , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] call hexvar add eax , hexvar mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ esp + num ] lea eax , [ eax - hexvar ] jmp hexvar lea esi , [ esi ] lea edi , [ edi ]
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] lea eax , [ eax - hexvar ] call hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) addiu a2 , zero , - num lw a1 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rcx , qword ptr [ rbp - hexvar ] mov al , byte ptr [ rcx + hexvar ] test al , num setne al movzx r9d , al mov ecx , r9d mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov r9d , num call hexvar mov dword ptr [ rbp - num ] , num mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov eax , num test byte ptr [ rsi + hexvar ] , num jne hexvar ret sub rsp , num mov r9d , num call hexvar mov eax , num add rsp , num ret
push ebp push edi xor eax , eax push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] test byte ptr [ ebp + hexvar ] , num jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , num test byte ptr [ rsi + hexvar ] , num jne hexvar ret sub rsp , num mov r9d , num call hexvar mov eax , num add rsp , num ret
push esi push ebx sub esp , num call hexvar add esi , hexvar test edx , edx je hexvar movzx ecx , byte ptr [ edx ] test cl , cl je hexvar sub ecx , hexvar cmp cl , hexvar ja hexvar movzx ecx , cl mov ebx , esi add ebx , dword ptr [ esi + ecx * num - hexvar ] jmp ebx
push esi push ebx call hexvar add esi , hexvar sub esp , num test edx , edx je hexvar movzx ecx , byte ptr [ edx ] test cl , cl je hexvar sub ecx , hexvar cmp cl , hexvar ja hexvar movzx ecx , cl mov ebx , dword ptr [ esi + ecx * num - hexvar ] add ebx , esi jmp ebx lea esi , [ esi ]
push { r4 , lr } cmp r1 , num beq hexvar ldrb r3 , [ r1 ] cmp r3 , num beq hexvar sub r3 , r3 , hexvar cmp r3 , hexvar ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq sb , sb , r4 , asr num andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsl num andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsr fp ldrdeq sb , sl , [ sb ] , -r0 strdeq sb , sl , [ sb ] , -r0 andeq sb , sb , r0 , ror num andeq sb , sb , r0 , lsr fp andeq sb , sb , r0 , lsl fp add r4 , r1 , num mov r0 , r4 pop { r4 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al sub eax , hexvar cmp eax , hexvar ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax add qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push { r4 , r5 , r6 , r7 , lr } sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] cmp r2 , num beq hexvar mov r6 , r0 mov r4 , r1 sub r5 , r2 , num mov r7 , hexvar add r2 , sp , num mov r1 , r4 mov r0 , r6 bl hexvar mov r2 , r6 mov r1 , r7 add r0 , sp , num bl hexvar cmp r0 , hexvar bne hexvar add r4 , r4 , hexvar sub r5 , r5 , num cmn r5 , num bne hexvar mov r0 , num b hexvar mvn r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a2 , hexvar move v0 , zero move s2 , a0 move s0 , a1 addiu s1 , a2 , - num addiu s3 , sp , hexvar addiu s5 , zero , hexvar b hexvar addiu s4 , zero , - num beq s1 , s4 , hexvar addiu s0 , s0 , hexvar move a2 , s3 move a1 , s0 move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) addiu a3 , zero , hexvar move a2 , zero move a0 , s3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar addiu v0 , zero , - num beq v1 , s5 , hexvar addiu s1 , s1 , - num addiu s1 , s1 , num addiu v0 , zero , - num lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax jmp hexvar sub esp , num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar push dword ptr [ ebp - hexvar ] push num push hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov ecx , eax xor ecx , hexvar mov esi , ecx mov eax , edx xor ah , num mov edi , eax mov eax , edi or eax , esi test eax , eax je hexvar mov eax , hexvar jmp hexvar add dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp + hexvar ] lea edx , [ eax - num ] mov dword ptr [ ebp + hexvar ] , edx test eax , eax jne hexvar mov eax , num mov edi , dword ptr [ ebp - hexvar ] xor edi , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r7 ] cmp r2 , num str r3 , [ sp , hexvar ] beq hexvar sub r6 , r2 , num mov r5 , r0 add r4 , r1 , hexvar b hexvar sub r6 , r6 , num cmn r6 , num add r4 , r4 , hexvar beq hexvar ldr r3 , [ r5 , num ] add r1 , sp , num ldr r2 , [ r3 , hexvar ] ldr r0 , [ r4 , - hexvar ] ldrb r2 , [ r2 , hexvar ] ldr r3 , [ r3 , hexvar ] tst r2 , hexvar movne r8 , num ldreq r8 , [ r4 , - hexvar ] blx r3 ldr r3 , [ r5 , num ] add r1 , sp , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ r4 , - hexvar ] blx r3 ldr r3 , [ r5 , num ] add r1 , sp , hexvar ldr r3 , [ r3 , hexvar ] ldr r0 , [ r4 , - hexvar ] blx r3 ldr r3 , [ r5 , num ] mov r0 , r8 ldr r3 , [ r3 , hexvar ] add r1 , sp , hexvar blx r3 ldr r3 , [ r5 , num ] add r1 , sp , hexvar ldr r3 , [ r3 , hexvar ] ldr r0 , [ r4 , - hexvar ] blx r3 ldr r3 , [ r5 , num ] add r1 , sp , hexvar ldr r3 , [ r3 , hexvar ] ldr r0 , [ r4 , - num ] blx r3 ldr r3 , [ r5 , num ] add r1 , sp , hexvar ldr r3 , [ r3 , hexvar ] ldr r0 , [ r4 , - hexvar ] blx r3 ldr r3 , [ r5 , num ] add r1 , sp , hexvar ldr r3 , [ r3 , hexvar ] ldr r0 , [ r4 , - num ] blx r3 mov r2 , r5 mov r1 , hexvar add r0 , sp , num bl hexvar cmp r0 , hexvar beq hexvar mvn r0 , num b hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r7 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 lui a1 , hexvar sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s2 , a0 sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar sw ra , hexvar ( sp ) move a0 , v0 sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a2 bnez v0 , hexvar lw gp , hexvar ( sp ) beqz s0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 addiu v1 , zero , num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) addiu v1 , zero , num bne v0 , v1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu a0 , zero , hexvar lbu v1 , ( s0 ) lw v0 , ( v0 ) sll v1 , v1 , num addu v1 , v0 , v1 lw v1 , ( v1 )
push rbp push r14 push rbx mov rbx , rdx mov rax , rsi mov r14 , rdi mov esi , hexvar mov rdi , rax call hexvar mov ebp , hexvar test eax , eax je hexvar mov eax , ebp pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov rbx , rdx mov rax , rsi mov r14 , rdi mov esi , hexvar mov rdi , rax call hexvar mov ebp , hexvar test eax , eax je hexvar mov eax , ebp pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov rbx , rdx mov rax , rsi mov r14 , rdi mov esi , hexvar mov rdi , rax call hexvar mov ebp , hexvar test eax , eax je hexvar mov eax , ebp pop rbx pop r14 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 bnez a0 , hexvar move s1 , a1 b hexvar addiu v0 , zero , num lw a3 , hexvar ( s0 ) lw a2 , hexvar ( s0 ) lw a0 , hexvar ( s0 ) sw zero , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a2 , zero lw a3 , num ( s0 ) lw v0 , hexvar ( s0 ) sw v0 , hexvar ( sp ) move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw a0 , num ( s0 ) bne v1 , a0 , hexvar move v0 , zero lw v0 , num ( s0 ) lw s0 , ( s0 ) beqz s0 , hexvar addu s1 , s1 , v0 lw v0 , num ( s0 ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) lw a2 , num ( s0 ) lw a1 , hexvar ( s0 ) move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw v0 , num ( s0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero b hexvar move v0 , zero
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 bnez a0 , hexvar move s1 , a1 b hexvar addiu v0 , zero , num lw a3 , hexvar ( s0 )
lw v0 , hexvar ( a0 ) beqz v0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a2 , a0 lui a3 , hexvar sw ra , hexvar ( sp ) lui a1 , hexvar sw gp , hexvar ( sp ) lui a0 , hexvar sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu v0 , zero , num addiu a3 , a3 , - hexvar addiu a1 , a1 , hexvar sw v0 , hexvar ( sp ) jalr t9 addiu a0 , a0 , - hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra addiu v0 , zero , num
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar sub esp , num push num push num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar jmp hexvar mov eax , num add esp , num pop ebx ret
push rbp push rbx push rax mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp ] , rax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov ecx , hexvar mov eax , num nop word ptr cs : [ rax + rax ] nop cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar mov rdx , rbx mov r8d , num xor r9d , r9d call hexvar mov ecx , hexvar jmp hexvar add rsp , num pop rbx pop rbp ret
cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rdx , rdi mov edi , hexvar mov esi , hexvar mov ecx , hexvar mov r8d , num xor r9d , r9d jmp hexvar mov eax , num ret
push { r4 , r5 , r6 , lr } ldr r6 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r6 ] cmp r1 , num mov r5 , r0 str r3 , [ sp , hexvar ] beq hexvar cmp r1 , num beq hexvar lsl r1 , r1 , num ldr r3 , [ pc , hexvar ] mov r2 , hexvar str r1 , [ sp ] add r0 , sp , hexvar mov r1 , num bl hexvar mov r0 , hexvar bl hexvar mov r2 , hexvar mov r1 , num mov r4 , r0 bl hexvar add r0 , sp , hexvar bl hexvar mov r1 , num mov r2 , num ldr r3 , [ r5 , num ] stmib r4 , { r0 , r1 , r2 } str r3 , [ r4 ] ldr r0 , [ r4 , num ] str r4 , [ r5 , num ] bl hexvar add r0 , r0 , num bl hexvar mov r4 , r0 ldr r3 , [ r5 , num ] ldr r2 , [ pc , hexvar ] ldr r1 , [ r3 , num ] ldr r3 , [ pc , hexvar ] str r1 , [ sp , num ] str r2 , [ sp ] mov r1 , num mvn r2 , num bl hexvar ldr r3 , [ r5 , num ] ldr r0 , [ r3 , num ] bl hexvar ldr r1 , [ sp , hexvar ] ldr r2 , [ r6 ] ldr r3 , [ r5 , num ] cmp r1 , r2 str r4 , [ r3 , num ] mov r0 , num bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp esi , num je hexvar cmp esi , num je hexvar lea r8d , [ rsi * num ] mov r12 , rsp lea rcx , [ rip + hexvar ] mov edx , hexvar mov esi , num mov rdi , r12 xor eax , eax call hexvar mov edi , hexvar call hexvar pxor xmm0 , xmm0 mov rbp , rax mov qword ptr [ rax + hexvar ] , num mov rdi , r12 movups xmmword ptr [ rax ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 call hexvar mov rdi , rax mov qword ptr [ rbp + num ] , rax mov rax , qword ptr [ rbx + hexvar ] mov dword ptr [ rbp + hexvar ] , num mov qword ptr [ rbp + hexvar ] , num mov qword ptr [ rbp ] , rax mov qword ptr [ rbx + hexvar ] , rbp call hexvar lea rdi , [ rax + num ] call hexvar mov rbp , rax mov rax , qword ptr [ rbx + hexvar ] lea r8 , [ rip + hexvar ] lea rcx , [ rip + hexvar ] mov rdx , - num mov esi , num mov rdi , rbp mov r9 , qword ptr [ rax + num ] xor eax , eax call hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rax , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] mov qword ptr [ rax + num ] , rbp mov eax , num jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] lea edi , [ hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edi , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov ecx , eax mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push num push edi push esi push ecx push edx lea edx , [ ebx - hexvar ] push edx push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar lea eax , [ ebx - hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax call hexvar add esp , hexvar nop lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rbx , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov edx , num mov esi , hexvar xor edi , edi mov r12 , rax call hexvar mov edx , num mov esi , hexvar xor edi , edi mov rbp , rax call hexvar mov rcx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] mov r8 , rax push num push r12 mov r9 , rbp mov rsi , rbx mov edx , hexvar xor eax , eax call hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar pop rdx pop rcx pop rbx pop rbp pop r12 mov rdx , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , num xor eax , eax jmp hexvar
push { r4 , r5 , r6 , r7 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r5 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r6 , r0 ldr r0 , [ pc , hexvar ] bl hexvar mov r7 , r0 ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 mov r3 , num str r3 , [ sp , hexvar ] str r2 , [ sp , num ] str r7 , [ sp , num ] str r6 , [ sp ] mov r3 , r5 ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , r4 bl hexvar mov r0 , r0 sub sp , fp , hexvar pop { r4 , r5 , r6 , r7 , fp , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + num ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar mov eax , dword ptr [ esi + hexvar ] push esi call dword ptr [ eax + hexvar ] xor edx , edx add esp , hexvar test eax , eax sete dl mov edi , edx je hexvar mov eax , esi call hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbx + hexvar ] xor ebp , ebp mov rdi , rbx call qword ptr [ rax + hexvar ] test eax , eax sete bpl je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rdi , [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , ebp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] blx r3 subs r5 , r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 cmp r0 , num moveq r5 , num movne r5 , num beq hexvar mov r0 , r4 bl hexvar mov r0 , r5 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + num ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar mov eax , dword ptr [ esi + hexvar ] push esi call dword ptr [ eax + hexvar ] xor edx , edx add esp , hexvar test eax , eax sete dl mov edi , edx je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar lea eax , [ esi + hexvar ] sub esp , hexvar push eax call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
lw v0 , hexvar ( a0 ) lw v1 , hexvar ( a0 ) sll a0 , v0 , num lw v1 , num ( v1 ) addu a1 , a1 , a0 beqz v1 , hexvar sw zero , ( a1 ) sw v1 , - num ( a1 ) lw v1 , hexvar ( v1 ) bnez v1 , hexvar addiu a1 , a1 , - num jr ra nop
push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ecx + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebx + edx * num ] , num test eax , eax je hexvar lea esi , [ edx * num ] lea edx , [ ebx + esi - num ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ eax + hexvar ] sub edx , num test eax , eax jne hexvar mov eax , dword ptr [ ecx + hexvar ] pop ebx pop esi ret
push ebx mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ edx + num ] mov dword ptr [ ecx + eax * num ] , num test edx , edx je hexvar lea ebx , [ eax * num ] lea ecx , [ ecx + ebx - num ] nop mov dword ptr [ ecx ] , edx mov edx , dword ptr [ edx + hexvar ] sub ecx , num test edx , edx jne hexvar pop ebx ret
push rbp push rbx mov rbx , rdi pxor xmm0 , xmm0 sub rsp , hexvar mov qword ptr [ rsp ] , rdi mov rdi , qword ptr [ rdi + hexvar ] mov rbp , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax xor eax , eax test rdi , rdi movups xmmword ptr [ rsp + num ] , xmm0 mov qword ptr [ rbp + hexvar ] , num movups xmmword ptr [ rbp + hexvar ] , xmm0 movups xmmword ptr [ rbp + hexvar ] , xmm0 mov dword ptr [ rsp + hexvar ] , esi je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rsi , [ rip - hexvar ] mov rdx , rbp call hexvar mov rdi , rbx call hexvar test eax , eax setne al movzx eax , al neg eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rcx , [ rip - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdx , rax lea rax , [ rip - hexvar ] mov rsi , rax lea rax , [ rip - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] lea rsi , [ rip - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rdi , [ rbp - hexvar ] mov esi , eax mov edx , hexvar call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rdx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdx + hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar movabs rdi , hexvar movabs rsi , hexvar movabs rdx , hexvar movabs rcx , hexvar call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov esi , eax mov dword ptr [ rbp - num ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] lea rax , [ rbp - hexvar ] movabs rsi , hexvar mov rdx , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov byte ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov byte ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov ecx , dword ptr [ ebx + hexvar ] lea eax , [ ebx + hexvar ] test ecx , ecx mov byte ptr [ eax + hexvar ] , num je hexvar sub esp , hexvar push ecx call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar add esp , hexvar mov eax , num pop ebx ret
sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax + hexvar ] mov byte ptr [ eax + hexvar ] , num mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar cmp rdx , num jb hexvar movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + num ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 xor r11d , r11d xor ecx , ecx xor r8d , r8d nop dword ptr [ rax ] movzx r9d , byte ptr [ rdi + r11 + num ] mov r10d , r9d add r10d , r8d movzx r8d , byte ptr [ rsi + rcx ] add rcx , num add r8d , r10d movzx r8d , r8b cmp rcx , rdx mov eax , num cmove rcx , rax movzx eax , byte ptr [ rdi + r8 + num ] mov byte ptr [ rdi + r11 + num ] , al mov byte ptr [ rdi + r8 + num ] , r9b add r11 , num cmp r11 , hexvar jne hexvar mov qword ptr [ rdi ] , num xor eax , eax pop rcx ret
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar cmp rdx , num jb hexvar movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + num ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 xor r11d , r11d xor ecx , ecx xor r8d , r8d nop dword ptr [ rax ] movzx r9d , byte ptr [ rdi + r11 + num ] mov r10d , r9d add r10d , r8d movzx r8d , byte ptr [ rsi + rcx ] add rcx , num add r8d , r10d movzx r8d , r8b cmp rcx , rdx mov eax , num cmove rcx , rax movzx eax , byte ptr [ rdi + r8 + num ] mov byte ptr [ rdi + r11 + num ] , al mov byte ptr [ rdi + r8 + num ] , r9b add r11 , num cmp r11 , hexvar jne hexvar mov qword ptr [ rdi ] , num xor eax , eax pop rcx ret
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar cmp rdx , num jb hexvar movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + num ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 xor r11d , r11d xor ecx , ecx xor r8d , r8d nop dword ptr [ rax ] movzx r9d , byte ptr [ rdi + r11 + num ] mov r10d , r9d add r10d , r8d movzx r8d , byte ptr [ rsi + rcx ] add rcx , num add r8d , r10d movzx r8d , r8b cmp rcx , rdx mov eax , num cmove rcx , rax movzx eax , byte ptr [ rdi + r8 + num ] mov byte ptr [ rdi + r11 + num ] , al mov byte ptr [ rdi + r8 + num ] , r9b add r11 , num cmp r11 , hexvar jne hexvar mov qword ptr [ rdi ] , num xor eax , eax pop rcx ret
push rax test rdi , rdi je hexvar test rsi , rsi je hexvar cmp rdx , num jb hexvar movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + num ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 xor r11d , r11d xor ecx , ecx xor r8d , r8d nop dword ptr [ rax ] movzx r9d , byte ptr [ rdi + r11 + num ] mov r10d , r9d add r10d , r8d movzx r8d , byte ptr [ rsi + rcx ] add rcx , num add r8d , r10d movzx r8d , r8b cmp rcx , rdx mov eax , num cmove rcx , rax movzx eax , byte ptr [ rdi + r8 + num ] mov byte ptr [ rdi + r11 + num ] , al mov byte ptr [ rdi + r8 + num ] , r9b add r11 , num cmp r11 , hexvar jne hexvar mov qword ptr [ rdi ] , num xor eax , eax pop rcx ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ ecx ] mov esi , dword ptr [ eax + edx * num ] test esi , esi je hexvar lea eax , [ ebx + hexvar ] sub esp , num add edx , num mov ebp , dword ptr [ eax + hexvar ] mov dword ptr [ ecx ] , edx or ebp , hexvar mov dword ptr [ esp + hexvar ] , ebp push esi push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov edi , eax mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov dword ptr [ esp ] , hexvar call hexvar mov ebp , eax mov dword ptr [ edi + hexvar ] , eax mov dword ptr [ eax + num ] , hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp ] , eax pop edx push dword ptr [ esp + hexvar ] call hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp + hexvar ] , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar push ebp push eax push esi call hexvar add esp , hexvar test eax , eax mov ebp , eax jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push esi call hexvar add esp , hexvar test eax , eax mov ebp , dword ptr [ ebx - hexvar ] jne hexvar sub esp , num push hexvar push esi call hexvar add esp , hexvar test eax , eax cmove ebp , dword ptr [ ebx - hexvar ] mov dword ptr [ edi + hexvar ] , ebp add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] or eax , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] or eax , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] or eax , hexvar push eax mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , num mov rdi , rax mov rsi , rax movabs rdx , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] or ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , hexvar mov rdi , rax mov rsi , rax movabs rdx , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] or ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , rsp add rax , - hexvar mov rsp , rax movabs rcx , hexvar mov rdi , rcx mov rsi , rcx movabs rdx , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rcx ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , num mov dword ptr [ rax + hexvar ] , r8d mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] or r8d , hexvar mov dword ptr [ rax + hexvar ] , r8d mov rdi , qword ptr [ rcx ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rdx , [ rip - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] xor eax , num mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] or eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , hexvar leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s2 , hexvar ( sp ) addiu s2 , sp , hexvar sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move a0 , s2 sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) move s3 , a2 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) bal hexvar nop beqz s0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( s3 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar fstp dword ptr [ ebp - hexvar ] movss xmm0 , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rsi , rsi je hexvar mov r12 , rdi mov rbp , rsi mov rbx , rdx movsxd rax , dword ptr [ rdx ] mov rdi , qword ptr [ rsi + rax * num ] mov eax , num test rdi , rdi je hexvar mov rsi , rsp call qword ptr [ rip + hexvar ] test eax , eax je hexvar call hexvar movsxd rdx , dword ptr [ rbx ] mov rcx , qword ptr [ rbp + rdx * num ] mov edx , hexvar mov esi , dword ptr [ rax ] mov edi , num mov eax , num call hexvar mov rdi , r12 call hexvar mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbx ] , num mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov rbx , rsi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rdi , [ rsp + hexvar ] call hexvar lea rcx , [ rsp + num ] lea rdx , [ rsp + hexvar ] mov rsi , rbp mov rdi , rbx call hexvar mov ebx , eax test al , al je hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r12 call hexvar mov rbp , rax mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rbp + hexvar ] , rdx mov qword ptr [ rbp + hexvar ] , rax mov dword ptr [ rbp + hexvar ] , num mov rdi , qword ptr [ rsp + hexvar ] call hexvar movss dword ptr [ rbp + hexvar ] , xmm0 mov eax , ebx mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui v0 , hexvar addiu a2 , v0 , hexvar lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rdi mov r8 , qword ptr [ rcx ] mov qword ptr [ rsi ] , r8 mov rcx , qword ptr [ rcx ] cmp rcx , qword ptr [ rsi ] setne r9b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , r9b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx ] , rax seta dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax cmp qword ptr [ rdi ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rdi mov r8 , qword ptr [ rcx ] mov qword ptr [ rsi ] , r8 mov rcx , qword ptr [ rcx ] cmp rcx , qword ptr [ rsi ] setne r9b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , r9b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx ] , rax seta dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov edi , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax cmp qword ptr [ rdi ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov edi , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbx sub rsp , hexvar test rdi , rdi js hexvar mov rbx , rdi call hexvar test rax , rax jne hexvar test rbx , rbx je hexvar mov edi , num mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esp + hexvar ] , num jne hexvar test esi , esi js hexvar sub esp , hexvar push esi call hexvar mov edi , eax add esp , hexvar test eax , eax jne hexvar test esi , esi je hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] mov esi , dword ptr [ eax ] mov eax , dword ptr [ esi + hexvar ] lea edx , [ ebx + hexvar ] lea edx , [ edx + hexvar ] cmp eax , edx je hexvar test ebp , ebp je hexvar mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ ebp + hexvar ] test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar cmp eax , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) addiu v0 , zero , num sw v0 , hexvar ( fp ) move v1 , zero move v0 , zero sw v1 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] lea edx , [ ebx + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] lea ecx , [ edx + hexvar ] mov esi , dword ptr [ eax ] mov eax , dword ptr [ esi + hexvar ] cmp eax , ecx je hexvar test ebp , ebp je hexvar mov ecx , dword ptr [ ebp + hexvar ] test ecx , ecx je hexvar mov dword ptr [ esp + num ] , num mov dword ptr [ esp ] , edx sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call ecx add esp , hexvar cmp eax , num mov edi , eax mov edx , dword ptr [ esp ] je hexvar
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] lea edx , [ ebx + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] lea ecx , [ edx + hexvar ] mov esi , dword ptr [ eax ] mov eax , dword ptr [ esi + hexvar ] cmp eax , ecx je hexvar test ebp , ebp je hexvar mov ecx , dword ptr [ ebp + hexvar ] test ecx , ecx je hexvar mov dword ptr [ esp + num ] , num mov dword ptr [ esp ] , edx sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call ecx add esp , hexvar cmp eax , num mov edi , eax mov edx , dword ptr [ esp ] je hexvar
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , r14 add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , r14 add rsp , num pop rbx pop r14 ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax add esp , num pop ebx pop esi ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , r14 add rsp , num pop rbx pop r14 ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] and eax , hexvar cmp eax , num je hexvar cmp dword ptr [ hexvar ] , num jl hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , num pop ebp ret
push { fp , lr } add fp , sp , num ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num blt hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] mvn r2 , num str r2 , [ r3 ] mov r0 , r0 pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] and eax , hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setge cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ hexvar ] , hexvar jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ hexvar ] and al , num shr al , num movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ hexvar ] not eax shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax add esp , num pop ebp ret
mov ecx , esi push rbx lea rdx , [ rip + hexvar ] and ecx , hexvar and esi , hexvar mov rbx , rdi jne hexvar lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar mov rax , rbx pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a2 , hexvar andi v0 , a1 , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) andi a3 , a1 , hexvar lw t9 , - hexvar ( gp ) bnez v0 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a0 , zero , num jalr t9 addiu a1 , a1 , - hexvar move v0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a1 , hexvar addiu a0 , zero , num jalr t9 addiu a1 , a1 , - hexvar move v0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , eax and edx , hexvar test al , hexvar jne hexvar lea eax , [ ebx - hexvar ] push edx push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , eax and edx , hexvar test al , hexvar jne hexvar lea eax , [ ebx - hexvar ] push edx push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , num pop ebx ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
mov eax , dword ptr [ esp + num ] mov dword ptr [ eax ] , hexvar mov dword ptr [ eax + num ] , hexvar mov dword ptr [ eax + num ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] mov r0 , r0 add sp , fp , num pop { fp } bx lr ldrdgt sb , sl , [ r5 , -r8 ] ldrbtlo sp , [ ip ] , -r7 , lsl num rsbslo sp , r0 , r7 , lsl sp ldmdavs r8 , { r0 , r4 , r8 , sl , ip } ^
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num add esp , num pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar lea eax , [ edi + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + hexvar ] , eax je hexvar call hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar push esi push num push ebp call hexvar mov eax , dword ptr [ edi + hexvar ] mov edx , ebp call hexvar mov dword ptr [ esp ] , ebp mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar lea eax , [ edi + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + hexvar ] , eax je hexvar call hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar push esi push num push ebp call hexvar mov eax , dword ptr [ edi + hexvar ] mov edx , ebp call hexvar mov dword ptr [ esp ] , ebp mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push rbx test rsi , rsi je hexvar mov r14 , rsi mov rbx , rdi add rbx , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar call hexvar test rax , rax je hexvar mov r15 , rax mov rdi , r14 call hexvar mov rdi , r15 mov esi , num mov rdx , r14 call hexvar test eax , eax jle hexvar mov rdi , qword ptr [ rbx ] mov rsi , r15 call hexvar mov ebx , eax mov rdi , r15 call hexvar mov eax , ebx pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s1 , a0 addiu a0 , a0 , hexvar bal hexvar move s0 , a1 lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 addiu a1 , zero , num lw gp , hexvar ( sp ) move a2 , s0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 blez v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( s1 )
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov esi , eax mov dword ptr [ rbp - num ] , edi mov byte ptr [ rbp - num ] , num mov edi , dword ptr [ rbp - num ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num jne hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov byte ptr [ ebp - num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov byte ptr [ ebp - num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) addiu s1 , sp , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a1 , s1 lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal hexvar nop bnez v0 , hexvar lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s1 jalr t9 addiu a1 , a1 , hexvar bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s1 jalr t9 addiu a1 , a1 , hexvar lw gp , hexvar ( sp ) b hexvar sltu v0 , zero , v0 lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call rax mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne cl and cl , num movzx eax , cl movsxd rsi , eax cmp rsi , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rax , qword ptr [ rbp - hexvar ] mov cl , num mov byte ptr [ rbp - hexvar ] , cl je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] cmp eax , dword ptr [ ebp - hexvar ] mov cl , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] cmp eax , dword ptr [ ebp - hexvar ] mov cl , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push r12 mov r12 , rsi push rbp mov rbp , rdx push rbx mov rbx , rdi jmp hexvar nop mov rbx , rax mov rsi , rbx mov rdi , rbp call r12
cmp r1 , num push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } beq hexvar ldr r5 , [ r1 , num ] cmp r2 , num cmpne r5 , num bgt hexvar cmp r5 , num bgt hexvar cmp r2 , num beq hexvar ldr r3 , [ r2 , num ] cmp r3 , num bgt hexvar mov r3 , num str r3 , [ r0 ] str r3 , [ r0 , num ] str r3 , [ r0 , num ] mov r0 , r3 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ edi + num ] test eax , eax jle hexvar test esi , esi je hexvar mov edx , dword ptr [ esi + num ] test edx , edx jg hexvar test eax , eax jg hexvar test esi , esi je hexvar cmp dword ptr [ esi + num ] , num jg hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rsi , rsi push r14 push r13 push r12 push rbp push rbx je hexvar test rdx , rdx mov r12 , qword ptr [ rsi + num ] je hexvar test r12 , r12 je hexvar mov r14 , qword ptr [ rdx + num ] test r14 , r14 jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 lea rdx , [ rsi + hexvar ] add rsi , num jmp hexvar nop dword ptr [ rax ] test r12 , r12 jne hexvar test rdx , rdx je hexvar cmp qword ptr [ rdx + num ] , num jne hexvar mov qword ptr [ rdi ] , num mov qword ptr [ rdi + num ] , num xor eax , eax mov qword ptr [ rdi + hexvar ] , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test edx , edx je hexvar test edi , edi mov ebp , dword ptr [ edx + num ] je hexvar test ebp , ebp jle hexvar mov eax , dword ptr [ edi + num ] test eax , eax mov dword ptr [ esp + num ] , eax jg hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edx add esp , hexvar pop ebx pop esi pop edi pop ebp jmp hexvar test ebp , ebp jg hexvar test edi , edi je hexvar mov eax , dword ptr [ edi + num ] test eax , eax jg hexvar mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num xor eax , eax mov dword ptr [ esi + num ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r4 , [ r0 , hexvar ] mov r6 , r0 cmp r4 , num moveq r5 , r4 beq hexvar mov r7 , r1 mov r8 , r2 mov r5 , num mov r1 , r4 mov r2 , r8 mov r0 , r6 blx r7 ldr r4 , [ r4 , hexvar ] add r5 , r5 , num cmp r4 , num bne hexvar ldr r3 , [ r6 , hexvar ] cmp r3 , r5 popeq { r4 , r5 , r6 , r7 , r8 , pc } ldr r2 , [ pc , num ] ldr r1 , [ pc , num ] ldr r0 , [ pc , num ] bl hexvar andseq pc , r4 , ip , asr fp andeq r0 , r0 , r5 , asr r5 ldrsbeq pc , [ r4 ] , -r4
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] mov eax , dword ptr [ ebp + hexvar ] call eax add esp , hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp - hexvar ] , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push hexvar lea eax , [ ebx - hexvar ] push eax call hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw s0 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw s0 , hexvar ( a0 )
push r14 push r13 push r12 push rbp push rbx mov r12 , rdi mov rbx , qword ptr [ rdi + hexvar ] test rbx , rbx je hexvar mov r13 , rsi mov r14 , rdx mov ebp , num mov rdx , r14 mov rsi , rbx mov rdi , r12 call r13
push r14 push rbx push rax mov r14 , rsi mov rbx , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx mov esi , eax mov rdx , r14 call hexvar mov eax , num add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , qword ptr [ rdi + hexvar ] call hexvar mov rdi , rbx mov esi , eax mov rdx , r14 call hexvar mov eax , num add rsp , num pop rbx pop r14 ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push eax push dword ptr [ esi + hexvar ] call hexvar mov eax , num add esp , hexvar pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar mov eax , num pop ebx pop esi ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r5 , [ sp , hexvar ] ldr r1 , [ r4 ] str r5 , [ sp ] mov r7 , r3 str r1 , [ sp , hexvar ] mov r6 , r2 ldr r8 , [ sp , hexvar ] bl hexvar cmp r0 , num sbcs r3 , r1 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , edx mov edi , ecx mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx push dword ptr [ esp + hexvar ] push edi push edx push eax call hexvar add esp , hexvar test edx , edx js hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + num ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setns al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) move s2 , a2 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) lw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw v0 , hexvar ( sp ) jalr t9 nop bltz v0 , hexvar lw gp , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , ( s0 ) bne a1 , a0 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a2 , sp , hexvar move a1 , s3 bal hexvar move a0 , s2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) andi v0 , v0 , num sb v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx mov dl , cl cmp eax , num mov byte ptr [ ebp - hexvar ] , dl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx call hexvar test al , num jne hexvar jmp hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push r13 push r12 push rbp push rbx mov rbp , rsi sub rsp , num test rdi , rdi je hexvar mov r13 , rdx mov rbx , rdi call hexvar test rax , rax mov r12 , rax je hexvar mov rsi , r13 mov rdi , rbp call hexvar test rax , rax je hexvar mov rsi , r13 mov rdi , rbx call hexvar test al , al je hexvar cmp r12 , num jne hexvar add rsp , num mov rax , r13 pop rbx pop rbp pop r12 pop r13 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar xor ecx , ecx mov dl , cl cmp rax , num mov byte ptr [ rbp - hexvar ] , dl je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar test al , num jne hexvar jmp hexvar test byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r15 push r14 push r12 push rbx push rax mov r12 , rdi xor r14d , r14d nop mov r15 , r12 lea r12 , [ r12 + num ] mov bl , byte ptr [ r12 - num ] test bl , bl jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] add r12 , num movzx ebx , byte ptr [ r12 - num ] test bl , bl je hexvar cmp bl , hexvar jne hexvar mov byte ptr [ r12 - num ] , num cmp byte ptr [ r15 ] , num je hexvar mov rdi , r15 call hexvar test eax , eax jle hexvar cdqe add r14 , rax test bl , bl jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , r15 mov rsi , - num call hexvar cdqe add r14 , rax test bl , bl jne hexvar cmp r14 , hexvar jl hexvar mov byte ptr [ rip + hexvar ] , num mov rax , r14 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s3 , zero addiu s1 , zero , hexvar sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) move s2 , a0 sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lb v0 , ( s2 ) beqz v0 , hexvar nop beq v0 , s1 , hexvar nop b hexvar move v0 , s2 beq v1 , s1 , hexvar move s4 , zero addiu v0 , v0 , num lb v1 , ( v0 ) bnez v1 , hexvar addiu s4 , zero , num sb zero , ( v0 ) addiu s0 , v0 , num lb v0 , ( s2 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 blez v0 , hexvar lw gp , hexvar ( sp ) beqz s4 , hexvar addu s3 , s3 , v0 slti v0 , s3 , hexvar bnez v0 , hexvar lui v0 , hexvar addiu v1 , zero , num sw v1 , - hexvar ( v0 ) lw ra , hexvar ( sp ) move v0 , s3 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move v0 , s2 b hexvar move s4 , zero lw t9 , - hexvar ( gp ) addiu a1 , zero , - num jalr t9 move a0 , s2 lw gp , hexvar ( sp ) bnez s4 , hexvar addu s3 , s3 , v0 b hexvar move s2 , s0 move v0 , s2 b hexvar addiu s4 , zero , num
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , num movzx esi , byte ptr [ edi ] mov eax , esi test al , al je hexvar cmp al , hexvar je hexvar mov eax , edi add eax , num movzx esi , byte ptr [ eax ] mov edx , esi test dl , dl je hexvar cmp dl , hexvar jne hexvar mov byte ptr [ eax ] , num add eax , num mov dword ptr [ esp + hexvar ] , eax cmp byte ptr [ edi ] , num je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar test eax , eax jle hexvar add ebp , eax mov eax , esi test al , al jne hexvar cmp ebp , hexvar jg hexvar mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r12 push rbx push rax mov r12 , rdi xor r14d , r14d nop mov r15 , r12 lea r12 , [ r12 + num ] mov bl , byte ptr [ r12 - num ] test bl , bl jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] add r12 , num movzx ebx , byte ptr [ r12 - num ] test bl , bl je hexvar cmp bl , hexvar jne hexvar mov byte ptr [ r12 - num ] , num cmp byte ptr [ r15 ] , num je hexvar mov rdi , r15 call hexvar test eax , eax jle hexvar cdqe add r14 , rax test bl , bl jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rdi , r15 mov rsi , - num call hexvar cdqe add r14 , rax test bl , bl jne hexvar cmp r14 , hexvar jl hexvar mov byte ptr [ rip + hexvar ] , num mov rax , r14 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push rbx mov r14 , rdx mov rbx , rdi xor esi , esi call hexvar mov r15 , rax mov rdi , rbx call hexvar cmp eax , - num je hexvar mov rdi , rbx mov esi , num xor edx , edx xor ecx , ecx call hexvar test rax , rax sete al test r15 , r15 setne cl and cl , al movzx eax , cl mov dword ptr [ r14 + num ] , eax jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar xor eax , eax call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , zero sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 addiu v1 , zero , - num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a3 , zero move a2 , zero addiu a1 , zero , num jalr t9 move a0 , s0 bnez v0 , hexvar nop sltu s1 , zero , s1 lw ra , hexvar ( sp ) move v0 , zero lw s0 , hexvar ( sp ) sw s1 , num ( s2 )
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] sub esp , num push num push esi call hexvar mov edi , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar cmp eax , - num je hexvar push num push num push num push esi call hexvar add esp , hexvar test edi , edi setne dl test eax , eax sete al movzx eax , al and eax , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + num ] , eax mov eax , num pop ebx pop esi pop edi ret
push r15 push r14 push rbx mov r14 , rdx mov rbx , rdi xor esi , esi call hexvar mov r15 , rax mov rdi , rbx call hexvar cmp eax , - num je hexvar mov rdi , rbx mov esi , num xor edx , edx xor ecx , ecx call hexvar test rax , rax sete al test r15 , r15 setne cl and cl , al movzx eax , cl mov dword ptr [ r14 + num ] , eax jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov esi , hexvar xor eax , eax call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbx mov rbx , rsi call hexvar test rbx , rbx je hexvar test rax , rax jne hexvar call hexvar pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) bnez a1 , hexvar sw gp , hexvar ( sp ) bnez a0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp )
push rbx mov rbx , rsi call hexvar test rax , rax jne hexvar test rbx , rbx jne hexvar pop rbx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] lea ebp , [ eax + hexvar ] mov byte ptr [ eax + hexvar ] , num test edi , edi js hexvar sub ebp , num push num push hexvar push edi push esi call hexvar add esp , hexvar add eax , hexvar mov byte ptr [ ebp ] , al push num push hexvar push edi push esi call hexvar add esp , hexvar mov esi , eax mov edi , edx or edx , eax jne hexvar mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rdi , rdi lea rcx , [ rsi + hexvar ] mov byte ptr [ rsi + hexvar ] , num movabs rsi , hexvar js hexvar nop word ptr [ rax + rax ] mov rax , rdi sub rcx , num imul rsi mov rax , rdi sar rax , hexvar sar rdx , num sub rdx , rax lea rax , [ rdx + rdx * num ] add rax , rax sub rdi , rax add edi , hexvar test rdx , rdx mov byte ptr [ rcx ] , dil mov rdi , rdx jne hexvar mov rax , rcx ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi lea ebp , [ eax + hexvar ] mov byte ptr [ eax + hexvar ] , num js hexvar lea esi , [ esi ] push num push hexvar sub ebp , num push edi push esi call hexvar add esp , hexvar add eax , hexvar mov byte ptr [ ebp ] , al push num push hexvar push edi push esi call hexvar add esp , hexvar mov edi , edx or edx , eax mov esi , eax jne hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
test rdi , rdi lea rcx , [ rsi + hexvar ] mov byte ptr [ rsi + hexvar ] , num movabs rsi , hexvar js hexvar nop word ptr [ rax + rax ] mov rax , rdi sub rcx , num imul rsi mov rax , rdi sar rax , hexvar sar rdx , num sub rdx , rax lea rax , [ rdx + rdx * num ] add rax , rax sub rdi , rax add edi , hexvar test rdx , rdx mov byte ptr [ rcx ] , dil mov rdi , rdx jne hexvar mov rax , rcx ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov dl , byte ptr [ ebp - num ] mov byte ptr [ eax ] , dl sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] movzx esi , byte ptr [ ecx ] movzx eax , word ptr [ eax + esi * num ] and eax , hexvar cmp eax , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , byte ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov byte ptr [ esi ] , cl mov esi , dword ptr [ edx ] mov byte ptr [ esi + num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] movzx esi , byte ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] mov dword ptr [ esp ] , num mov byte ptr [ ebp - hexvar ] , al call hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] movzx ecx , byte ptr [ ebp + num ] movzx eax , word ptr [ eax + ecx * num ] and eax , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov al , byte ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov byte ptr [ ecx ] , al mov ecx , dword ptr [ ebp - num ] mov byte ptr [ ecx + num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] movzx ecx , byte ptr [ ebp + num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 sll v1 , s1 , num lw v0 , ( v0 ) addu v0 , v0 , v1 lhu v0 , ( v0 )
push { fp , lr } add fp , sp , num sub sp , sp , hexvar mov r3 , r0 strb r3 , [ fp , - hexvar ] mov r0 , num bl hexvar mov r3 , r0 str r3 , [ fp , - num ] bl hexvar mov r3 , r0 ldr r2 , [ r3 ] ldrb r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldrh r3 , [ r3 ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldrb r2 , [ fp , - hexvar ] strb r2 , [ r3 ] ldr r3 , [ fp , - num ] add r3 , r3 , num mov r2 , num strb r2 , [ r3 ] b hexvar ldrb r3 , [ fp , - hexvar ] mov r2 , r3 ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - num ] bl hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc } andeq r0 , r0 , r0 strlo sp , [ r0 , -r0 , lsl num ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar lw a2 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw a0 , hexvar ( v0 ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar move a2 , v0 move a1 , a0 move a0 , v1 jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 ) lui v0 , hexvar lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) lui v0 , hexvar lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push eax push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push ecx push edx push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar stmib sp , { r0 , r1 } mov r0 , hexvar mov r4 , r1 mov r5 , r2 bl hexvar mov r1 , num mov sb , r0 mov r0 , r4 bl hexvar subs r4 , r0 , num blt hexvar mov r2 , r5 mov r1 , r4 mov r0 , num bl hexvar cmp r0 , num blt hexvar ldr r6 , [ r5 , hexvar ] str r6 , [ sb , hexvar ] mov r0 , r6 bl hexvar subs r5 , r0 , num beq hexvar mov r2 , r6 mov r1 , r5 mov r0 , r4 bl hexvar ldr r3 , [ sb , hexvar ] cmp r0 , r3 beq hexvar mov r0 , r5 bl hexvar mov r0 , r4 bl hexvar mov r0 , sb mov sb , num bl hexvar mov r0 , sb add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax call hexvar mov esi , eax add esp , hexvar mov edi , num test eax , eax je hexvar test ebp , ebp je hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , - num jne hexvar mov edi , num mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push num push num push eax push hexvar push ebp call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push num push num push eax push hexvar push ebp call hexvar mov esi , eax add esp , hexvar test eax , eax jne hexvar jmp hexvar call hexvar mov edi , eax mov esi , num test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar sub esp , hexvar push num push num push edi push hexvar push ebp call hexvar mov esi , eax add esp , hexvar test eax , eax jne hexvar jmp hexvar mov edi , num cmp dword ptr [ esp + hexvar ] , - num setne al movzx eax , al mov esi , eax add esi , num sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , num push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push rbx sub rsp , hexvar mov r8 , rsi mov r15 , rdi mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + num ] , num lea rdi , [ rsp + num ] lea rsi , [ rsp + num ] lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] call hexvar xor ebx , ebx test eax , eax je hexvar test r15 , r15 je hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r15 call hexvar test eax , eax je hexvar xor ebx , ebx cmp dword ptr [ rsp + num ] , - num je hexvar call hexvar test rax , rax je hexvar mov r14 , rax movsxd rsi , dword ptr [ rsp + num ] mov rdi , rax call hexvar test eax , eax je hexvar xor ebx , ebx mov rdi , r15 mov esi , hexvar mov rdx , r14 xor ecx , ecx xor r8d , r8d call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rsp + hexvar ] test rdx , rdx jne hexvar jmp hexvar xor r14d , r14d jmp hexvar xor r14d , r14d xor eax , eax cmp dword ptr [ rsp + num ] , - num sete al mov ebx , num sub ebx , eax mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov rdi , r14 call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov r8 , rsi mov r15 , rdi mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + num ] , num lea rdi , [ rsp + num ] lea rsi , [ rsp + num ] lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] call hexvar xor ebx , ebx test eax , eax je hexvar test r15 , r15 je hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r15 call hexvar test eax , eax je hexvar xor ebx , ebx cmp dword ptr [ rsp + num ] , - num je hexvar call hexvar test rax , rax je hexvar mov r14 , rax movsxd rsi , dword ptr [ rsp + num ] mov rdi , rax call hexvar test eax , eax je hexvar xor ebx , ebx mov rdi , r15 mov esi , hexvar mov rdx , r14 xor ecx , ecx xor r8d , r8d call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rsp + hexvar ] test rdx , rdx jne hexvar jmp hexvar xor r14d , r14d jmp hexvar xor r14d , r14d xor eax , eax cmp dword ptr [ rsp + num ] , - num sete al mov ebx , num sub ebx , eax mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov rdi , r14 call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov r8 , rsi mov r15 , rdi mov dword ptr [ rsp + num ] , hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + num ] , num lea rdi , [ rsp + num ] lea rsi , [ rsp + num ] lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] call hexvar xor ebx , ebx test eax , eax je hexvar test r15 , r15 je hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r15 call hexvar test eax , eax je hexvar xor ebx , ebx cmp dword ptr [ rsp + num ] , - num je hexvar call hexvar test rax , rax je hexvar mov r14 , rax movsxd rsi , dword ptr [ rsp + num ] mov rdi , rax call hexvar test eax , eax je hexvar xor ebx , ebx mov rdi , r15 mov esi , hexvar mov rdx , r14 xor ecx , ecx xor r8d , r8d call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rsp + hexvar ] test rdx , rdx jne hexvar jmp hexvar xor r14d , r14d jmp hexvar xor r14d , r14d xor eax , eax cmp dword ptr [ rsp + num ] , - num sete al mov ebx , num sub ebx , eax mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov rdi , r14 call hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r14 pop r15 ret
lw v0 , hexvar ( a0 ) addiu a2 , zero , num beq v0 , a2 , hexvar lw v1 , hexvar ( a1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ edi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw s1 , ( s0 ) addiu a1 , zero , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 lw s2 , ( s2 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , esi call hexvar mov edi , eax mov eax , ebp call hexvar mov edx , eax cmp al , num je hexvar mov eax , edi test al , al jne hexvar mov eax , edi cmp al , num je hexvar mov eax , num test dl , dl je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move a0 , a1 move s2 , a2 lui a1 , hexvar addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a2 , s2 move a1 , v0 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move s1 , zero
push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov rax , rsi mov r15 , rdi mov esi , hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r12 , rax mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rsp mov rdi , rbx call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , r15 mov rax , qword ptr [ rsp ] mov rdi , rbx mov rsi , r12 mov rdx , r14 call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rbx , qword ptr [ rsp + hexvar ] jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor ebx , ebx jmp hexvar xor ebx , ebx mov rdi , r12 call hexvar mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r7 , [ r1 ] cmp r7 , num beq hexvar mov r6 , r3 mov r8 , r0 mov r4 , r2 mov r5 , r1 b hexvar ldr r7 , [ r5 , num ] ! add r4 , r4 , r6 cmp r7 , num beq hexvar mov r2 , r6 mov r1 , r4 mov r0 , r8 bl hexvar cmp r0 , num bne hexvar mov r0 , r7 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esi ] test ebp , ebp je hexvar mov edi , dword ptr [ esp + hexvar ] add esi , num jmp hexvar lea esi , [ esi ] mov ebp , dword ptr [ esi ] add edi , dword ptr [ esp + hexvar ] add esi , num test ebp , ebp je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov edi , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jmp edi mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + ecx * num ] test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , edx imul edi , esi add ecx , edi mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + ecx * num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] imul edx , dword ptr [ ebp - hexvar ] add ecx , edx mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + ecx * num ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push r14 push rbx push rax test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r14 , rax mov rax , qword ptr [ rbx ] mov qword ptr [ r14 ] , rax mov rdi , r14 call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov rax , r14 add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push r14 push rbx push rax test rdi , rdi je hexvar mov rbx , rdi mov rax , qword ptr [ rdi ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r14 , rax mov rax , qword ptr [ rbx ] mov qword ptr [ r14 ] , rax mov rdi , r14 call qword ptr [ rax + hexvar ] test eax , eax jne hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov rax , r14 add rsp , num pop rbx pop r14 ret
sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , num test edx , edx je hexvar sub esp , num push num push num mov ecx , num mov eax , dword ptr [ esp + hexvar ] call hexvar mov ecx , eax add esp , hexvar mov eax , num test ecx , ecx je hexvar mov edx , dword ptr [ esp + hexvar ] or edx , hexvar mov dword ptr [ ecx + hexvar ] , edx mov eax , num add esp , hexvar ret
push edi push esi xor eax , eax push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test esi , esi je hexvar sub esp , num push esi mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar mov eax , dword ptr [ esp + hexvar ] or eax , hexvar mov dword ptr [ edi + hexvar ] , eax mov eax , num pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar xor eax , eax xor ecx , ecx mov r8d , ecx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , eax mov ecx , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , hexvar xor edx , hexvar mov edi , ecx and edi , hexvar and eax , edx mov r8d , esi and r8d , hexvar mov r9d , edx and r9d , hexvar or edi , eax or r8d , r9d xor edi , r8d or ecx , esi xor ecx , hexvar or edx , hexvar and ecx , edx or edi , ecx mov r10 , qword ptr [ rbp - hexvar ] mov dword ptr [ r10 + hexvar ] , edi mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov eax , num test rsi , rsi je hexvar push rbx mov ebx , edx mov r8d , num mov ecx , num mov edx , num call hexvar mov rcx , rax mov eax , num test rcx , rcx je hexvar or ebx , hexvar mov dword ptr [ rcx + hexvar ] , ebx mov eax , num pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 lw v1 , - hexvar ( gp ) sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , hexvar ( v1 ) beq a0 , v0 , hexvar move s2 , a1 bltz a0 , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) move a3 , zero move a2 , s2 bal hexvar move a1 , s1 lw gp , hexvar ( sp ) bnez v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , num lw v0 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar cmp edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar cmp dword ptr [ hexvar ] , num jl hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar xor eax , eax mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , - hexvar sw s2 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a1 lw s2 , - hexvar ( gp ) sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw a1 , hexvar ( s2 ) beq a1 , v0 , hexvar move s1 , a0 bltz a1 , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a0 , zero , num sw zero , hexvar ( sp ) move a3 , s3 jalr t9 move a2 , s1 lw gp , hexvar ( sp ) bnez v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , num lw v0 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp edx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jae hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + ecx * num + num ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + ecx * num ] mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar jmp hexvar cmp dword ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] cmp rsi , qword ptr [ rdi + hexvar ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] shl rcx , num add rax , rcx mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] shl rcx , num add rax , rcx mov rdi , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ hexvar ] mov esi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ hexvar ] , num je hexvar mov rdi , qword ptr [ hexvar ] mov rsi , qword ptr [ hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar jmp hexvar cmp qword ptr [ hexvar ] , num je hexvar mov rdi , qword ptr [ hexvar ] mov rsi , qword ptr [ hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar add rsp , hexvar pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bhs hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 , num ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r0 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - num ] mov r1 , num bl hexvar b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bhs hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 , num ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r0 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - num ] mov r1 , num bl hexvar b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ecx + hexvar ] cmp esi , num sete al cmp esi , num mov ebp , eax sete al mov esi , eax mov eax , ebp or eax , esi cmp edi , num je hexvar cmp edi , num je hexvar mov esi , dword ptr [ ecx + hexvar ] and esi , hexvar test al , al je hexvar cmp esi , hexvar je hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw a1 , ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v1 , hexvar ( a1 )
push r15 push r14 push r13 push r12 push rbp push rbx mov rbp , rdi sub rsp , hexvar mov r14 , qword ptr [ rsi + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rsi + hexvar ] , r14 jle hexvar movzx r13d , byte ptr [ rdi + hexvar ] mov r15 , rdx mov rdx , qword ptr [ rsi + num ] mov rbx , rsi movzx r12d , byte ptr [ rdx + r14 ] and r13d , hexvar mov byte ptr [ rdi + hexvar ] , r13b mov eax , dword ptr [ rsi + hexvar ] mov byte ptr [ rdi ] , r12b cmp eax , num jle hexvar cmp r14 , qword ptr [ rsi + hexvar ] je hexvar mov rcx , qword ptr [ rsi + hexvar ] mov ecx , dword ptr [ rcx + r14 * num ] cmp ecx , - num je hexvar cmp r12b , hexvar je hexvar mov byte ptr [ rdi + num ] , num mov edi , ecx mov qword ptr [ rsp + num ] , rdx mov dword ptr [ rsp ] , ecx call hexvar mov ecx , dword ptr [ rsp ] test eax , eax setne al cmp ecx , hexvar sete cl or eax , ecx shl eax , num or r13d , eax mov byte ptr [ rbp + hexvar ] , r13b mov rdx , qword ptr [ rsp + num ] jmp hexvar nop word ptr cs : [ rax + rax ] mov byte ptr [ rdi + num ] , num mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ edx + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ edx + hexvar ] , ebp mov dword ptr [ esp + num ] , ecx jle hexvar mov eax , dword ptr [ edx + num ] mov esi , edx mov dword ptr [ esp + hexvar ] , eax movzx edx , byte ptr [ eax + ebp ] movzx eax , byte ptr [ edi + num ] mov byte ptr [ edi ] , dl and eax , hexvar mov byte ptr [ esp + hexvar ] , al mov byte ptr [ edi + num ] , al mov eax , dword ptr [ esi + hexvar ] cmp eax , num mov dword ptr [ esp + num ] , eax jle hexvar cmp ebp , dword ptr [ esi + hexvar ] je hexvar mov ecx , dword ptr [ esi + num ] lea ecx , [ ecx + ebp * num ] cmp dword ptr [ ecx ] , - num je hexvar cmp dl , hexvar je hexvar mov byte ptr [ edi + num ] , num mov ecx , dword ptr [ ecx ] mov byte ptr [ esp + hexvar ] , dl sub esp , hexvar push ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ esp + num ] test eax , eax setne al movzx edx , byte ptr [ esp + hexvar ] cmp ecx , hexvar sete cl or eax , ecx shl eax , num or al , byte ptr [ esp + hexvar ] mov byte ptr [ edi + num ] , al jmp hexvar lea esi , [ esi ] mov byte ptr [ edi + num ] , num mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx mov rbp , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rsi + hexvar ] cmp qword ptr [ rsi + hexvar ] , rax jbe hexvar mov r14 , rdx mov rdx , qword ptr [ rsi + num ] movzx r13d , byte ptr [ rdi + hexvar ] mov rbx , rsi movzx r12d , byte ptr [ rdx + rax ] and r13d , hexvar mov byte ptr [ rdi + hexvar ] , r13b mov byte ptr [ rdi ] , r12b mov eax , dword ptr [ rsi + hexvar ] cmp eax , num jle hexvar mov rdx , qword ptr [ rsi + hexvar ] cmp rdx , qword ptr [ rsi + hexvar ] je hexvar mov rcx , qword ptr [ rsi + hexvar ] cmp dword ptr [ rcx + rdx * num ] , - num je hexvar cmp r12b , hexvar je hexvar mov byte ptr [ rbp + num ] , num cmp dword ptr [ rbx + hexvar ] , num jle hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] mov r15d , dword ptr [ rax + rdx * num ] mov edi , r15d call hexvar test eax , eax setne dl cmp r15d , hexvar sete al or eax , edx shl eax , num or r13d , eax mov byte ptr [ rbp + hexvar ] , r13b sub r12d , hexvar cmp r12b , hexvar ja hexvar movzx r12d , r12b jmp qword ptr [ r12 * num + hexvar ] add byte ptr [ rax ] , al add byte ptr [ rax ] , al
push r12 push rbp push rbx mov rbp , rdi mov eax , dword ptr [ rip + hexvar ] cmp eax , - num je hexvar mov ebx , esi mov edx , esi and edx , hexvar and eax , hexvar or eax , esi test edx , edx cmove ebx , eax mov r12d , ebx test ebx , hexvar jne hexvar test r12d , hexvar jne hexvar test bl , num jne hexvar test bh , hexvar jne hexvar mov eax , num test ebx , hexvar je hexvar mov esi , ebx mov rdi , rbp call hexvar jmp hexvar call hexvar jmp hexvar mov esi , ebx call hexvar test rax , rax je hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ ebx + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp esi , - num je hexvar xor eax , eax test dword ptr [ esp + hexvar ] , hexvar lea edx , [ esp + hexvar ] mov ecx , hexvar mov edi , edx rep stosd dword ptr es : [ edi ] , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , eax mov dword ptr [ esp + hexvar ] , eax test esi , hexvar jne hexvar test esi , num jne hexvar test esi , hexvar jne hexvar and esi , hexvar je hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax mov edi , eax jne hexvar lea ebx , [ esp + hexvar ] mov edx , ebp mov eax , ebx call hexvar mov edi , eax mov eax , ebx call hexvar jmp hexvar lea esi , [ esi ] and esi , hexvar or esi , dword ptr [ esp + hexvar ] test esi , hexvar mov dword ptr [ esp + hexvar ] , esi je hexvar sub esp , num push esi push ebp call hexvar mov esi , dword ptr [ esp + hexvar ] add esp , hexvar mov edi , eax test esi , hexvar jne hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar test byte ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push edi call hexvar mov esi , dword ptr [ esp + hexvar ] add esp , hexvar xor edi , edi test esi , hexvar je hexvar jmp hexvar nop lea esi , [ esi ] sub esp , hexvar push ebp call hexvar add esp , hexvar mov edi , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdi mov ebx , esi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov esi , dword ptr [ rip + hexvar ] cmp esi , - num je hexvar mov rax , rsp mov qword ptr [ rsp + num ] , num mov qword ptr [ rax + hexvar ] , num lea rdi , [ rax + num ] mov ecx , hexvar mov eax , num rep stosq qword ptr [ rdi ] , rax and esi , hexvar or esi , ebx test ebx , hexvar cmovne esi , ebx mov dword ptr [ rsp ] , esi test esi , hexvar jne hexvar test byte ptr [ rsp ] , num jne hexvar mov eax , dword ptr [ rsp ] test ah , hexvar jne hexvar test eax , hexvar je hexvar mov esi , ebx mov rdi , rbp call hexvar mov r12 , rax test rax , rax jne hexvar mov rbx , rsp mov rsi , rbp mov rdi , rbx call hexvar mov r12 , rax mov rdi , rbx call hexvar jmp hexvar call hexvar mov r12 , rax mov rax , r12 mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ ebx + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp esi , - num je hexvar xor eax , eax test dword ptr [ esp + hexvar ] , hexvar lea edx , [ esp + hexvar ] mov ecx , hexvar mov edi , edx rep stosd dword ptr es : [ edi ] , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , eax mov dword ptr [ esp + hexvar ] , eax test esi , hexvar jne hexvar test esi , num jne hexvar test esi , hexvar jne hexvar and esi , hexvar je hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax mov edi , eax jne hexvar lea ebx , [ esp + hexvar ] mov edx , ebp mov eax , ebx call hexvar mov edi , eax mov eax , ebx call hexvar jmp hexvar lea esi , [ esi ] and esi , hexvar or esi , dword ptr [ esp + hexvar ] test esi , hexvar mov dword ptr [ esp + hexvar ] , esi je hexvar sub esp , num push esi push ebp call hexvar mov esi , dword ptr [ esp + hexvar ] add esp , hexvar mov edi , eax test esi , hexvar jne hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar test byte ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push edi call hexvar mov esi , dword ptr [ esp + hexvar ] add esp , hexvar xor edi , edi test esi , hexvar je hexvar jmp hexvar nop lea esi , [ esi ] sub esp , hexvar push ebp call hexvar add esp , hexvar mov edi , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx r8d , cl mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar nop word ptr [ eax + eax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar nop word ptr [ eax + eax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar nop word ptr [ eax + eax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar nop word ptr [ eax + eax ]
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rdi , qword ptr [ rbp - hexvar ] movsxd rsi , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov edx , dword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov edi , edx mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov edx , dword ptr [ rcx + hexvar ] add edx , num mov rcx , qword ptr [ rbp - num ] mov r9d , dword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] movabs rcx , hexvar mov dword ptr [ rbp - hexvar ] , edx mov rdx , rcx mov rcx , rax mov r8d , dword ptr [ rbp - hexvar ] mov al , num call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , rcx add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebx + hexvar ] add ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , ebx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ ebp - hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] add ecx , num mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ ebp - hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] add ecx , num mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push edi push esi mov esi , eax push ebx call hexvar add ebx , hexvar sub esp , hexvar push eax call hexvar mov edi , eax movsx eax , byte ptr [ esi ] add esp , hexvar sub eax , hexvar cmp eax , num ja hexvar push eax push eax lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar cmp eax , edi sete al pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , lr } mov r5 , r0 bl hexvar ldrb r3 , [ r5 ] sub r3 , r3 , hexvar cmp r3 , num bhi hexvar mov r4 , r0 ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar sub r0 , r0 , r4 clz r0 , r0 lsr r0 , r0 , num pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax ] movsx eax , al sub eax , hexvar cmp eax , num ja hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar cmp dword ptr [ ebp - hexvar ] , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ eax ] sub esp , hexvar mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax ] movsx edx , byte ptr [ edx ] sub edx , hexvar cmp edx , num setbe bl mov byte ptr [ ebp - hexvar ] , bl xor eax , eax mov cl , al mov dl , byte ptr [ ebp - hexvar ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] cmp ecx , eax sete bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax + hexvar ] and eax , num test al , al je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] jmp hexvar sub esp , num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rdi + hexvar ] mov edi , eax shr rdi , num mov eax , edi and eax , num mov edi , eax mov rdi , qword ptr [ rdi + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov esi , eax mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test byte ptr [ rdi + hexvar ] , num je hexvar mov rax , qword ptr [ rdi + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push { r4 , r5 , r6 , lr } ldr r6 , [ pc , hexvar ] ldrb r2 , [ r0 , hexvar ] ldr r3 , [ r6 ] sub sp , sp , hexvar tst r2 , hexvar mov r5 , r0 str r3 , [ sp , hexvar ] beq hexvar ldr r0 , [ r0 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , num cmp qword ptr [ rbp - hexvar ] , rax jae hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] xor eax , hexvar movzx eax , al add eax , - hexvar pop rbp ret
