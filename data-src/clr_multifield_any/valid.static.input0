push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] sub ecx , hexvar add ecx , - num add ecx , hexvar mov dword ptr [ ebp + num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] shr eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] add ecx , - num mov dword ptr [ ebp + num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] shr eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] shr eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] shr eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] shr eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw zero , num ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , - num sw v0 , hexvar ( fp ) b hexvar nop lw v0 , num ( fp ) addiu v0 , v0 , num sw v0 , num ( fp ) lw v0 , hexvar ( fp ) srl v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , num ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] add ecx , - num mov dword ptr [ ebp + num ] , ecx mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp dword ptr [ ebp + num ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] shr eax , num mov dword ptr [ ebp + num ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] add ecx , - num mov dword ptr [ ebp + num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] shr eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , num sub dword ptr [ ebp + num ] , num jmp hexvar add dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp + num ] shr eax , num mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num sub qword ptr [ rbp - hexvar ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] shr rax , num mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a0 , num ( a0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , num pop ebp ret
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , r14d movabs r15 , hexvar mov qword ptr [ r8 ] , r15 mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx ] mov r8 , qword ptr [ r8 ] mov r9 , qword ptr [ rsi ] mov r12d , dword ptr [ rdi ] sub rsp , hexvar mov rdi , rax mov rsi , rcx mov rcx , r8 mov r8d , hexvar mov dword ptr [ rsp ] , r12d call hexvar add rsp , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r14 pop r15 pop rbp ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 mov r14 , rdi push r13 push r12 lea r12d , [ r8 + num ] push rbp push rbx mov rdi , rsi and r12d , hexvar mov r15 , rdx mov ebx , r8d sub rsp , hexvar movsxd rsi , dword ptr [ rdx ] movsxd r12 , r12d add r12 , hexvar mov qword ptr [ rsp + num ] , rcx add rsi , r12 call hexvar test rax , rax mov r13 , rax je hexvar movsxd rbp , dword ptr [ r15 ] mov edi , num mov rax , rbp add rbp , r13 add r12d , eax mov rax , qword ptr [ r14 + num ] mov rsi , rbp mov dword ptr [ r15 ] , r12d call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] mov r12 , rdi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] lea rsi , [ rbp + num ] mov edi , hexvar call qword ptr [ rax + hexvar ] lea rcx , [ rbp + hexvar ] mov rsi , qword ptr [ rsp + num ] xor edx , edx mov eax , hexvar mov word ptr [ rbp + hexvar ] , dx mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rcx mov word ptr [ rbp + hexvar ] , ax mov rdx , r12 call hexvar test bl , num lea rdi , [ rax + r12 ] je hexvar add ebx , num add rdi , num mov byte ptr [ rdi - num ] , num test bl , num jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , r14d movabs r15 , hexvar mov qword ptr [ r8 ] , r15 mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx ] mov r8 , qword ptr [ r8 ] mov r9 , qword ptr [ rsi ] mov r12d , dword ptr [ rdi ] sub rsp , hexvar mov rdi , rax mov rsi , rcx mov rcx , r8 mov r8d , hexvar mov dword ptr [ rsp ] , r12d call hexvar add rsp , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ecx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , ecx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] lea edi , [ esi + num ] mov eax , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , edx and edi , hexvar add edi , hexvar add eax , edi push eax push dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar test eax , eax mov ecx , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num mov eax , dword ptr [ edx ] lea ebx , [ ecx + eax ] add edi , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ edx ] , edi push ebx push num push num call dword ptr [ eax + hexvar ] lea eax , [ ebx + num ] add esp , hexvar mov edi , dword ptr [ ebp + num ] push eax mov eax , esi cdq push edx push esi call dword ptr [ edi + hexvar ] lea edx , [ ebx + num ] add esp , hexvar mov eax , dword ptr [ ebp + num ] lea edi , [ ebx + hexvar ] push edx push num push hexvar call dword ptr [ eax + hexvar ] add esp , hexvar xor edx , edx mov eax , hexvar mov dword ptr [ ebx + hexvar ] , hexvar mov word ptr [ ebx + hexvar ] , ax mov word ptr [ ebx + hexvar ] , dx push esi push dword ptr [ esp + hexvar ] push edi mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test esi , num mov ecx , dword ptr [ esp + hexvar ] je hexvar nop mov byte ptr [ edi + esi ] , num add esi , num test esi , num jne hexvar add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
test rsi , rsi je hexvar mov r8 , qword ptr [ rsi + hexvar ] test r8 , r8 je hexvar cmp qword ptr [ rsi + hexvar ] , num je hexvar push r13 push r12 mov eax , hexvar push rbp push rbx sub rsp , num mov r12 , qword ptr [ rsi + hexvar ] test r12 , r12 je hexvar cmp rsi , qword ptr [ r12 ] je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov ebx , dword ptr [ esp + hexvar ] test ebp , ebp je hexvar mov esi , dword ptr [ ebp + hexvar ] test esi , esi je hexvar mov ecx , dword ptr [ ebp + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ ebp + hexvar ] mov eax , hexvar test edx , edx je hexvar cmp ebp , dword ptr [ edx ] je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rsi , rsi je hexvar mov r8 , qword ptr [ rsi + hexvar ] test r8 , r8 je hexvar cmp qword ptr [ rsi + hexvar ] , num je hexvar push r13 push r12 mov eax , hexvar push rbp push rbx sub rsp , num mov r12 , qword ptr [ rsi + hexvar ] test r12 , r12 je hexvar cmp rsi , qword ptr [ r12 ] je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
test rsi , rsi je hexvar mov r8 , qword ptr [ rsi + hexvar ] test r8 , r8 je hexvar cmp qword ptr [ rsi + hexvar ] , num je hexvar push r13 push r12 mov eax , hexvar push rbp push rbx sub rsp , num mov r12 , qword ptr [ rsi + hexvar ] test r12 , r12 je hexvar cmp rsi , qword ptr [ r12 ] je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
beqz a1 , hexvar nop lw t9 , hexvar ( a1 ) beqz t9 , hexvar nop lw v0 , hexvar ( a1 ) beqz v0 , hexvar nop addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s1 , hexvar ( a1 ) beqz s1 , hexvar addiu v0 , zero , - num lw v0 , ( s1 ) beq a1 , v0 , hexvar nop addiu v0 , zero , - num lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a2 , num ( s1 )
test rsi , rsi je hexvar mov r8 , qword ptr [ rsi + hexvar ] test r8 , r8 je hexvar cmp qword ptr [ rsi + hexvar ] , num je hexvar push r13 push r12 mov eax , hexvar push rbp push rbx sub rsp , num mov r12 , qword ptr [ rsi + hexvar ] test r12 , r12 je hexvar cmp rsi , qword ptr [ r12 ] je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , hexvar ( a1 )
subs r3 , r1 , num beq hexvar push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r4 , [ r3 , hexvar ] cmp r4 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar ldr r6 , [ r3 , hexvar ] cmp r6 , num beq hexvar ldr r2 , [ r6 ] cmp r3 , r2 beq hexvar mvn r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldmhi sb ! , { r1 , r2 , r5 , r8 , sb , sl , ip , sp , pc } ^ andeq r0 , r0 , r0
subs r3 , r1 , num beq hexvar push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r4 , [ r3 , hexvar ] cmp r4 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar ldr r6 , [ r3 , hexvar ] cmp r6 , num beq hexvar ldr r2 , [ r6 ] cmp r3 , r2 beq hexvar mvn r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } strbtlo r4 , [ r6 ] , -sb , asr num andeq r0 , r0 , r0
test rsi , rsi je hexvar mov r8 , qword ptr [ rsi + hexvar ] test r8 , r8 je hexvar cmp qword ptr [ rsi + hexvar ] , num je hexvar push r13 push r12 mov eax , hexvar push rbp push rbx sub rsp , num mov r12 , qword ptr [ rsi + hexvar ] test r12 , r12 je hexvar cmp rsi , qword ptr [ r12 ] je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] mov r3 , r1 strb r3 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldrb r2 , [ fp , - hexvar ] strb r2 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } str r3 , [ r2 , hexvar ] str r4 , [ r2 , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 , num ] mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] mov r3 , r1 strb r3 , [ fp , - hexvar ] mov r0 , hexvar bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldrb r2 , [ fp , - hexvar ] strb r2 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } str r3 , [ r2 , hexvar ] str r4 , [ r2 , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 , num ] mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov dl , byte ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + num ] , dl movsd xmm0 , qword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax + hexvar ] , xmm0 mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , num mov dl , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] mov byte ptr [ ecx + num ] , dl movsd xmm0 , qword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - num ] movsd qword ptr [ ecx + hexvar ] , xmm0 mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] add edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , al mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx nop leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , eax mov dword ptr [ esp + hexvar ] , edx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push hexvar call hexvar mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num movzx ecx , byte ptr [ esp + hexvar ] mov byte ptr [ eax + num ] , cl mov dword ptr [ eax + hexvar ] , esi mov dword ptr [ eax + hexvar ] , edi mov edx , dword ptr [ ebp + num ] add esp , hexvar test edx , edx je hexvar mov dword ptr [ edx + num ] , eax mov dword ptr [ ebp + num ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov dl , byte ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + num ] , dl movsd xmm0 , qword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax + hexvar ] , xmm0 mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dl , byte ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , dl mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov dl , byte ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + num ] , dl movsd xmm0 , qword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - hexvar ] movsd qword ptr [ eax + hexvar ] , xmm0 mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , sil mov qword ptr [ rbp - num ] , rdi mov byte ptr [ rbp - num ] , al mov qword ptr [ rbp - hexvar ] , rdx mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov cl , byte ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , cl mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax setne cl movzx esi , cl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + num ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + num ] , rax add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , eax mov dword ptr [ esp + hexvar ] , edx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push hexvar call hexvar mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num movzx ecx , byte ptr [ esp + hexvar ] mov byte ptr [ eax + num ] , cl mov dword ptr [ eax + hexvar ] , esi mov dword ptr [ eax + hexvar ] , edi mov edx , dword ptr [ ebp + num ] add esp , hexvar test edx , edx je hexvar mov dword ptr [ edx + num ] , eax mov dword ptr [ ebp + num ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ pc , hexvar ] mov r8 , r1 ldr r1 , [ r1 , hexvar ] ldr r2 , [ r0 , num ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r0 , r1 mov sb , r0 ldr fp , [ r2 , hexvar ] str r3 , [ sp , hexvar ] beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r0 , [ r8 , hexvar ] ldr r3 , [ r0 , hexvar ] cmp r3 , num movne r0 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ pc , hexvar ] mov r8 , r1 ldr r1 , [ r1 , hexvar ] ldr r2 , [ r0 , num ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r0 , r1 mov sb , r0 ldr fp , [ r2 , hexvar ] str r3 , [ sp , hexvar ] beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r0 , [ r8 , hexvar ] ldr r3 , [ r0 , hexvar ] cmp r3 , num movne r0 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] cmp rdi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax je hexvar lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] xor eax , eax cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , num call hexvar test eax , eax jne hexvar add rsp , num xor eax , eax pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] cmp rdi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax je hexvar lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] xor eax , eax cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] cmp rdi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax je hexvar lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] xor eax , eax cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
sub rsp , num mov r9d , edi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar cmp dword ptr [ rip + hexvar ] , edi jbe hexvar mov edx , edi mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar test esi , esi jne hexvar sub rsp , num push rax lea r8 , [ rip + hexvar ] mov ecx , hexvar mov edx , num mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar add rsp , hexvar lea rax , [ rip + hexvar ] jmp hexvar lea r8 , [ rip + hexvar ] mov ecx , hexvar mov edx , num mov esi , hexvar lea rdi , [ rip + hexvar ] mov eax , num call hexvar lea rax , [ rip + hexvar ] add rsp , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) beqz v1 , hexvar lui v0 , hexvar lw v0 , - hexvar ( v0 ) sltu v0 , a0 , v0 beqz v0 , hexvar sll v0 , a0 , num addu v1 , v1 , v0 lw v0 , ( v1 ) beqz v0 , hexvar nop bnez a1 , hexvar lw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) addiu a3 , zero , hexvar addiu a2 , zero , num addiu a1 , zero , hexvar lui s0 , hexvar addiu a0 , s0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar addiu v0 , s0 , - hexvar sw a0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) addiu a3 , zero , hexvar addiu a2 , zero , num addiu a1 , zero , hexvar lui s0 , hexvar addiu a0 , s0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , s0 , - hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov r9d , edi test rax , rax je hexvar cmp dword ptr [ rip + hexvar ] , edi jbe hexvar mov edx , edi mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar test esi , esi jne hexvar sub rsp , num lea r8 , [ rip + hexvar ] lea rdi , [ rip + hexvar ] push rax mov edx , num mov ecx , hexvar mov esi , hexvar xor eax , eax call hexvar pop rax lea rax , [ rip + hexvar ] pop rdx jmp hexvar nop lea r8 , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov ecx , hexvar mov edx , num mov esi , hexvar xor eax , eax call hexvar lea rax , [ rip + hexvar ] add rsp , num ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar cmp dword ptr [ ebx + hexvar ] , eax ja hexvar sub esp , num push eax lea eax , [ ebx - hexvar ] lea esi , [ ebx + hexvar ] push eax push hexvar push num push hexvar push esi call hexvar add esp , hexvar add esp , num mov eax , esi pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lw a3 , hexvar ( fp ) lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 beqz v0 , hexvar nop lui v0 , hexvar lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) b hexvar nop lui v0 , hexvar lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lw a3 , hexvar ( fp ) lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw t9 , - hexvar ( v0 ) beqz t9 , hexvar move s0 , a0 move s1 , a1 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop beqz s1 , hexvar addiu a3 , zero , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar sw v0 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) addiu a2 , zero , num addiu a1 , zero , hexvar lui s0 , hexvar addiu a0 , s0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar addiu v0 , s0 , - hexvar sw s0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) addiu a3 , zero , hexvar addiu a2 , zero , num addiu a1 , zero , hexvar lui s0 , hexvar addiu a0 , s0 , - hexvar lw t9 , - hexvar ( gp )
push { r4 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 , hexvar ] mov r2 , r0 cmp r3 , num beq hexvar ldr r0 , [ r4 , hexvar ] cmp r0 , r2 bls hexvar ldr r0 , [ r3 , r2 , lsl num ] cmp r0 , num beq hexvar cmp r1 , num bne hexvar mov r3 , hexvar ldr ip , [ pc , hexvar ] str r0 , [ sp , num ] str r2 , [ sp , num ] mov r1 , r3 str ip , [ sp ] mov r2 , num add r0 , r4 , num bl hexvar add r0 , r4 , num b hexvar mov r3 , hexvar ldr r0 , [ pc , hexvar ] str r2 , [ sp , num ] str r0 , [ sp ] mov r1 , r3 mov r2 , num ldr r0 , [ pc , hexvar ] bl hexvar ldr r0 , [ pc , hexvar ] add sp , sp , hexvar pop { r4 , pc }
sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov r9d , edi test rax , rax je hexvar cmp dword ptr [ rip + hexvar ] , edi jbe hexvar mov edx , edi mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar test esi , esi jne hexvar sub rsp , num lea r8 , [ rip + hexvar ] lea rdi , [ rip + hexvar ] push rax mov edx , num mov ecx , hexvar mov esi , hexvar xor eax , eax call hexvar pop rax lea rax , [ rip + hexvar ] pop rdx jmp hexvar nop lea r8 , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov ecx , hexvar mov edx , num mov esi , hexvar xor eax , eax call hexvar lea rax , [ rip + hexvar ] add rsp , num ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar cmp dword ptr [ ebx + hexvar ] , eax ja hexvar sub esp , num push eax lea eax , [ ebx - hexvar ] lea esi , [ ebx + hexvar ] push eax push hexvar push num push hexvar push esi call hexvar add esp , hexvar add esp , num mov eax , esi pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rdi + hexvar ] test eax , eax sete cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rdi + hexvar ] test eax , eax sete cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] cmp dword ptr [ rdi + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + num ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor ecx , ecx mov edi , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , rdi add rsp , hexvar pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
cmp edi , num jne hexvar push rbx mov rbx , qword ptr [ rsi ] call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax pop rbx je hexvar mov eax , num ret
push esi push ebx mov eax , num call hexvar add ebx , hexvar sub esp , num cmp dword ptr [ esp + hexvar ] , num je hexvar add esp , num pop ebx pop esi ret
cmp edi , num jne hexvar push rbx mov rbx , qword ptr [ rsi ] call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax pop rbx je hexvar mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar sw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw s0 , ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push esi push ebx mov eax , num call hexvar add ebx , hexvar sub esp , num cmp dword ptr [ esp + hexvar ] , num je hexvar add esp , num pop ebx pop esi ret
cmp edi , num jne hexvar push rbx mov rbx , qword ptr [ rsi ] call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax pop rbx je hexvar mov eax , num ret
push esi push ebx mov eax , num call hexvar add ebx , hexvar sub esp , num cmp dword ptr [ esp + hexvar ] , num je hexvar add esp , num pop ebx pop esi ret
cmp edi , num jne hexvar push rbx mov rbx , qword ptr [ rsi ] call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax pop rbx je hexvar mov eax , num ret
push rbx mov rcx , rdx mov rbx , rsi mov rdx , rsi mov esi , num call hexvar cmp rbx , rax jne hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar cmp qword ptr [ rbp - hexvar ] , rax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar nop leave ret
push rbx mov rcx , rdx mov rbx , rsi mov rdx , rsi mov esi , num call hexvar cmp rbx , rax jne hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 move a3 , a2 move a2 , a1 addiu a1 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bne s0 , v0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 jal hexvar nop
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , edx push ecx push edx push num push eax call hexvar add esp , hexvar cmp esi , eax jne hexvar add esp , num pop ebx pop esi ret
push rbx mov rcx , rdx mov rbx , rsi mov rdx , rsi mov esi , num call hexvar cmp rbx , rax jne hexvar pop rbx ret
push rbx mov rcx , rdx mov rbx , rsi mov rdx , rsi mov esi , num call hexvar cmp rbx , rax jne hexvar pop rbx ret
push rbx mov rcx , rdx mov rbx , rsi mov rdx , rsi mov esi , num call hexvar cmp rbx , rax jne hexvar pop rbx ret
push rbx mov rcx , rdx mov rbx , rsi mov rdx , rsi mov esi , num call hexvar cmp rbx , rax jne hexvar pop rbx ret
push esi push ebx mov esi , edx call hexvar add ebx , hexvar sub esp , num push ecx push edx push num push eax call hexvar add esp , hexvar cmp esi , eax jne hexvar add esp , num pop ebx pop esi ret
lea eax , [ ebx - hexvar ] sub esp , num mov esi , dword ptr [ esi ] push num push eax push num call hexvar push esi push eax push num push ebp call hexvar add esp , hexvar jmp hexvar nop
mov eax , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar jmp hexvar
mov esi , dword ptr [ edi ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push esi push eax push num push ebp call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov esi , dword ptr [ edi ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push esi push eax push num push ebp call hexvar add esp , hexvar
mov esi , dword ptr [ edi ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push esi push eax push num push ebp call hexvar add esp , hexvar
lea eax , [ ebx - hexvar ] sub esp , num mov esi , dword ptr [ esi ] push num push eax push num call hexvar push esi push eax push num push ebp call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lea eax , [ ebx - hexvar ] sub esp , num mov esi , dword ptr [ esi ] push num push eax push num call hexvar push esi push eax push num push ebp call hexvar add esp , hexvar jmp hexvar nop
mov esi , dword ptr [ edi ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push esi push eax push num push ebp call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test edi , edi jne hexvar mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov eax , dword ptr [ esp + hexvar ] mov byte ptr [ eax ] , hexvar lea eax , [ ebx - hexvar ] mov byte ptr [ esp + hexvar ] , num mov byte ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov ebp , num mov dword ptr [ esp + hexvar ] , eax jmp hexvar
mov eax , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar jmp hexvar
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov bl , byte ptr [ eax ] test bl , bl setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dl , byte ptr [ eax + ecx ] sub dl , hexvar sete dh movzx eax , dh mov eax , dword ptr [ eax * num + hexvar ] mov byte ptr [ ebp - hexvar ] , dl jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp byte ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + ecx ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 lb v0 , ( v0 ) beqz v0 , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) addu v1 , s0 , v0 lb a0 , ( v1 ) addiu v1 , zero , hexvar beq a0 , v1 , hexvar nop move a1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a1 , v0 move a0 , s1 lw t9 , - hexvar ( gp )
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] push edi call hexvar add esp , num cmp byte ptr [ eax ] , num je hexvar mov esi , eax sub esp , hexvar push eax call hexvar add esp , num cmp byte ptr [ esi + eax ] , hexvar sete dl movzx edx , dl add eax , edx push eax push esi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] test cl , cl setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + rdi ] sub cl , hexvar sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lb v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp byte ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ ecx + eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 jal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 lb v0 , ( v0 ) beqz v0 , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) addu v1 , s0 , v0 lb a0 , ( v1 ) addiu v1 , zero , hexvar beq a0 , v1 , hexvar nop move a1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move a1 , v0 move a0 , s1 lw t9 , - hexvar ( gp )
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar movzx eax , byte ptr [ edi ] mov esi , edi cmp al , hexvar jne hexvar nop lea esi , [ esi ] add esi , num movzx eax , byte ptr [ esi ] cmp al , hexvar je hexvar test al , al je hexvar mov edx , esi xor ecx , ecx jmp hexvar lea esi , [ esi ] test cl , cl je hexvar mov esi , edx xor ecx , ecx add edx , num movzx eax , byte ptr [ edx ] test al , al je hexvar cmp al , hexvar jne hexvar add edx , num movzx eax , byte ptr [ edx ] mov ecx , num test al , al jne hexvar cmp byte ptr [ esi ] , num je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar cmp eax , num jbe hexvar cmp byte ptr [ esi + eax - num ] , hexvar lea edx , [ eax - num ] je hexvar xor edx , edx cmp byte ptr [ esi + eax ] , hexvar sete dl sub esp , num add eax , edx push eax push esi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , lr } mov r5 , r0 bl hexvar ldrb r3 , [ r0 ] cmp r3 , num beq hexvar mov r4 , r0 bl hexvar ldrb r3 , [ r4 , r0 ] mov r1 , r0 cmp r3 , hexvar addeq r1 , r0 , num mov r0 , r4 pop { r4 , r5 , r6 , lr } b hexvar mov r0 , r5 bl hexvar mov r1 , r0 mov r0 , r5 pop { r4 , r5 , r6 , lr } b hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax jle hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] movsx ecx , al cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] and ecx , hexvar mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setg cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax jle hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] movsx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rbp - hexvar ] , num jle hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov ebp , dword ptr [ eax + hexvar ] mov dword ptr [ edi ] , ebp test esi , esi je hexvar mov edi , dword ptr [ eax + hexvar ] mov dword ptr [ esi ] , edi test ebx , ebx je hexvar mov esi , dword ptr [ eax + hexvar ] mov dword ptr [ ebx ] , esi test ecx , ecx je hexvar mov ebx , dword ptr [ eax + hexvar ] mov dword ptr [ ecx ] , ebx test edx , edx je hexvar mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ edx ] , eax pop ebx pop esi pop edi pop ebp ret
sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , num ] str r2 , [ r3 ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , num ] str r2 , [ r3 ] ldr r3 , [ sp ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] mov r0 , r0 add sp , sp , hexvar bx lr eoreq r2 , fp , r4 , asr num eoreq r2 , fp , r8 , asr num eoreq r2 , fp , ip , asr num eoreq r2 , fp , r0 , asr r2 eoreq r2 , fp , r4 , asr r2
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdi ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsi ] , rax test rdx , rdx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdx ] , rax test rcx , rcx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rcx ] , rax test r8 , r8 je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r8 ] , rax ret
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdi ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsi ] , rax test rdx , rdx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdx ] , rax test rcx , rcx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rcx ] , rax test r8 , r8 je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r8 ] , rax ret
beqz a0 , hexvar lw v0 , hexvar ( sp ) lui v1 , hexvar lw v1 , - hexvar ( v1 ) sw v1 , ( a0 )
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdi ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsi ] , rax test rdx , rdx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdx ] , rax test rcx , rcx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rcx ] , rax test r8 , r8 je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r8 ] , rax ret
beqz a0 , hexvar lw v0 , hexvar ( sp ) lui v1 , hexvar lw v1 , - hexvar ( v1 ) sw v1 , ( a0 )
test rdi , rdi je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdi ] , rax test rsi , rsi je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsi ] , rax test rdx , rdx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rdx ] , rax test rcx , rcx je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rcx ] , rax test r8 , r8 je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ r8 ] , rax ret
beqz a0 , hexvar lw v0 , hexvar ( sp ) lui v1 , hexvar lw v1 , - hexvar ( v1 ) sw v1 , ( a0 )
beqz a0 , hexvar lw v0 , hexvar ( sp ) lui v1 , hexvar lw v1 , - hexvar ( v1 ) sw v1 , ( a0 )
push r12 push rbp push rbx mov rbx , rdi mov r12d , esi mov rbp , rdx mov eax , dword ptr [ rdx ] cmp eax , hexvar ja hexvar movabs rdx , hexvar bt rdx , rax jae hexvar mov rdx , rbp call hexvar pop rbx pop rbp pop r12 ret
push edi push esi push ebx mov ebx , eax mov edi , edx mov esi , ecx mov eax , dword ptr [ ecx ] cmp eax , num setbe cl cmp eax , hexvar sete dl or cl , dl jne hexvar cmp eax , num jne hexvar mov ecx , esi mov edx , edi mov eax , ebx call hexvar pop ebx pop esi pop edi ret
push esi push ebx sub esp , hexvar mov ebx , dword ptr [ ecx ] cmp ebx , num jbe hexvar cmp ebx , hexvar je hexvar cmp ebx , num je hexvar mov ebx , eax mov eax , dword ptr [ eax + hexvar ] cmp eax , hexvar lea esi , [ eax + num ] jne hexvar mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + num ] , edx sub esp , num mov byte ptr [ ebx + hexvar ] , num push dword ptr [ ebx + hexvar ] mov esi , num push hexvar push ebx call dword ptr [ ebx + hexvar ] add esp , hexvar add dword ptr [ ebx + hexvar ] , num mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] xor eax , eax mov dword ptr [ ebx + hexvar ] , esi mov byte ptr [ ebx + eax ] , hexvar mov eax , ebx mov byte ptr [ ebx + hexvar ] , hexvar call hexvar mov eax , dword ptr [ ebx + hexvar ] cmp eax , hexvar lea edx , [ eax + num ] jne hexvar sub esp , num mov byte ptr [ ebx + hexvar ] , num push dword ptr [ ebx + hexvar ] push hexvar push ebx call dword ptr [ ebx + hexvar ] add dword ptr [ ebx + hexvar ] , num add esp , hexvar mov edx , num xor eax , eax mov dword ptr [ ebx + hexvar ] , edx mov byte ptr [ ebx + eax ] , hexvar mov byte ptr [ ebx + hexvar ] , hexvar add esp , hexvar pop ebx pop esi ret
push edi push esi push ebx mov ebx , eax mov edi , edx mov esi , ecx mov eax , dword ptr [ ecx ] cmp eax , num setbe cl cmp eax , hexvar sete dl or cl , dl jne hexvar cmp eax , num jne hexvar mov ecx , esi mov edx , edi mov eax , ebx call hexvar pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r0 mov r6 , r1 mov r5 , r2 ldr r2 , [ r2 ] cmp r2 , hexvar cmpne r2 , num movls r3 , num movhi r3 , num cmp r2 , num orreq r3 , r3 , num cmp r3 , num beq hexvar mov r2 , r5 bl hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar cmp dword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar nop leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 move s2 , a1 lw v0 , ( a2 )
mov eax , dword ptr [ rdx ] cmp eax , hexvar jbe hexvar push r12 push rbp mov r12d , esi push rbx mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdx mov rbx , rdi cmp rax , hexvar lea rdx , [ rax + num ] jne hexvar mov rdx , qword ptr [ rdi + hexvar ] mov byte ptr [ rdi + hexvar ] , num mov esi , hexvar call qword ptr [ rdi + hexvar ] add qword ptr [ rbx + hexvar ] , num mov edx , num xor eax , eax mov qword ptr [ rbx + hexvar ] , rdx mov esi , r12d mov byte ptr [ rbx + rax ] , hexvar mov rdx , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rbx + hexvar ] cmp rax , hexvar lea rdx , [ rax + num ] jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov byte ptr [ rbx + hexvar ] , num mov esi , hexvar mov rdi , rbx call qword ptr [ rbx + hexvar ] add qword ptr [ rbx + hexvar ] , num mov edx , num xor eax , eax mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rbx + rax ] , hexvar mov byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 ret
mov eax , dword ptr [ rdx ] cmp eax , hexvar jbe hexvar push r12 push rbp mov r12d , esi push rbx mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdx mov rbx , rdi cmp rax , hexvar lea rdx , [ rax + num ] jne hexvar mov rdx , qword ptr [ rdi + hexvar ] mov byte ptr [ rdi + hexvar ] , num mov esi , hexvar call qword ptr [ rdi + hexvar ] add qword ptr [ rbx + hexvar ] , num mov edx , num xor eax , eax mov qword ptr [ rbx + hexvar ] , rdx mov esi , r12d mov byte ptr [ rbx + rax ] , hexvar mov rdx , rbp mov byte ptr [ rbx + hexvar ] , hexvar mov rdi , rbx call hexvar mov rax , qword ptr [ rbx + hexvar ] cmp rax , hexvar lea rdx , [ rax + num ] jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov byte ptr [ rbx + hexvar ] , num mov esi , hexvar mov rdi , rbx call qword ptr [ rbx + hexvar ] add qword ptr [ rbx + hexvar ] , num mov edx , num xor eax , eax mov qword ptr [ rbx + hexvar ] , rdx mov byte ptr [ rbx + rax ] , hexvar mov byte ptr [ rbx + hexvar ] , hexvar pop rbx pop rbp pop r12 ret
push edi push esi push ebx mov ebx , eax mov edi , edx mov esi , ecx mov eax , dword ptr [ ecx ] cmp eax , num setbe cl cmp eax , hexvar sete dl or cl , dl jne hexvar cmp eax , num jne hexvar mov ecx , esi mov edx , edi mov eax , ebx call hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , hexvar sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar call hexvar cmp dword ptr [ eax ] , hexvar jne hexvar call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbx call hexvar test rax , rax mov rbx , rax je hexvar mov rax , rbx pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] cmp r3 , hexvar bne hexvar bl hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbx call hexvar mov rbx , rax test rax , rax jne hexvar call hexvar cmp dword ptr [ rax ] , hexvar jne hexvar call hexvar mov rax , rbx pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push r13 push r12 mov r13 , rdi push rbp push rbx sub rsp , num call hexvar test rax , rax jle hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , r13 call hexvar test rax , rax mov r12 , rax je hexvar mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rax call hexvar test rbp , rbp je hexvar mov rdi , rbp call hexvar cmp rbp , rbx je hexvar mov rbp , rbx xor edi , edi call hexvar mov rsi , rbp mov rdi , r12 call hexvar test rax , rax mov rbx , rax jne hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ r12 ] call hexvar mov dword ptr [ rip + hexvar ] , num test rbp , rbp je hexvar mov rdi , rbp call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , r12 call hexvar mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r13 call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi mov ebp , ecx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov edi , edx push eax call hexvar add esp , hexvar cmp edx , num jle hexvar sub esp , num push edi push esi call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar xor edx , edx call hexvar test ebp , ebp je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) blez v0 , hexvar nop lui v0 , hexvar lw a1 , - hexvar ( v0 ) move a0 , s3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 addiu a1 , zero , num move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s1 , zero move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw ra , hexvar ( sp ) move a0 , s3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , num b hexvar sw v1 , - hexvar ( v0 ) bnez v0 , hexvar lui v0 , hexvar bnez v1 , hexvar lui v0 , hexvar lui v0 , hexvar addiu v1 , zero , num sw v1 , - hexvar ( v0 ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , num b hexvar sw v1 , - hexvar ( v0 ) move s1 , s0 move a0 , zero lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] call hexvar cmp rax , num jge hexvar mov dword ptr [ hexvar ] , num jmp hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov dword ptr [ hexvar ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , num call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov dword ptr [ hexvar ] , num add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 move s2 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) blez v0 , hexvar move a1 , s0 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a1 , zero move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) beqz s2 , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) bnez v0 , hexvar lui v0 , hexvar bnez v1 , hexvar move a1 , s0 lui v0 , hexvar addiu v1 , zero , num sw v1 , - hexvar ( v0 ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rdi , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx call hexvar cmp rax , num setl sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rsi , qword ptr [ hexvar ] call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rax cmp qword ptr [ rsi ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov dword ptr [ hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov esi , num call hexvar cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar cmp eax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov dword ptr [ hexvar ] , num mov rsp , rbp pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bgtz v0 , hexvar nop bnez v0 , hexvar nop bnez v1 , hexvar nop lui v0 , hexvar addiu v1 , zero , num sw v1 , hexvar ( v0 ) b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop move a1 , zero lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r8 mov r9d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , r9d mov rdi , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi call hexvar cmp rax , num setl r10b mov byte ptr [ rbp - hexvar ] , r10b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rcx ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax cmp qword ptr [ rcx ] , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar jmp hexvar xor esi , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rsp , rbp pop rbp ret
push r13 push r12 push rbp push rbx sub rsp , num mov r13 , rdi call hexvar test rax , rax jle hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , r13 call hexvar mov r12 , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rdi , r12 call hexvar mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r13 call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi mov ebp , ecx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov edi , edx push eax call hexvar add esp , hexvar cmp edx , num jle hexvar sub esp , num push edi push esi call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar xor edx , edx call hexvar test ebp , ebp je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov edx , num je hexvar add esp , num mov eax , edx pop ebx pop esi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , num je hexvar sub esp , num push dword ptr [ esi ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , num test eax , eax je hexvar mov eax , edx add esp , num pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push rbx push rax mov r14 , r9 mov ebp , edx mov rbx , rsi mov r15 , rdi mov rdx , qword ptr [ rdi ] test rdx , rdx jne hexvar call hexvar mov rdx , rax mov qword ptr [ r15 ] , rax mov rdi , rbx mov esi , ebp call hexvar mov ebp , num test rax , rax jne hexvar mov rdi , qword ptr [ r15 ] xor ebp , ebp test rdi , rdi je hexvar test byte ptr [ r14 + hexvar ] , num jne hexvar call hexvar jmp hexvar call hexvar mov qword ptr [ r15 ] , num mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 addiu gp , gp , hexvar sw ra , hexvar ( sp ) lw v0 , ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbp push r15 push r14 push rbx push rax mov r14 , r9 mov ebp , edx mov rbx , rsi mov r15 , rdi mov rdx , qword ptr [ rdi ] test rdx , rdx jne hexvar call hexvar mov rdx , rax mov qword ptr [ r15 ] , rax mov rdi , rbx mov esi , ebp call hexvar mov ebp , num test rax , rax jne hexvar mov rdi , qword ptr [ r15 ] xor ebp , ebp test rdi , rdi je hexvar test byte ptr [ r14 + hexvar ] , num jne hexvar call hexvar jmp hexvar call hexvar mov qword ptr [ r15 ] , num mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov ecx , num je hexvar add esp , num mov eax , ecx pop ebx pop esi ret
push rbp push r15 push r14 push rbx push rax mov r14 , r9 mov ebp , edx mov rbx , rsi mov r15 , rdi mov rdx , qword ptr [ rdi ] test rdx , rdx jne hexvar call hexvar mov rdx , rax mov qword ptr [ r15 ] , rax mov rdi , rbx mov esi , ebp call hexvar mov ebp , num test rax , rax jne hexvar mov rdi , qword ptr [ r15 ] xor ebp , ebp test rdi , rdi je hexvar test byte ptr [ r14 + hexvar ] , num jne hexvar call hexvar jmp hexvar call hexvar mov qword ptr [ r15 ] , num mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , eax sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , num add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov edx , num jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push r14 push r13 mov r14 , rsi push r12 mov r12d , edx mov rdx , qword ptr [ rip + hexvar ] push rbp push rbx cmp rdx , rdi je hexvar xor r13d , r13d cmp r12d , num mov rbp , rdi setne r13b add r13d , r13d test byte ptr [ rdi + hexvar ] , num jne hexvar mov rbx , rdi jmp hexvar nop test byte ptr [ rax + hexvar ] , num jne hexvar mov rbx , rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax jne hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar cmp rdx , rbx je hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + hexvar ] test rdx , rdx mov qword ptr [ rax + hexvar ] , rcx mov rcx , qword ptr [ rbx + hexvar ] mov qword ptr [ rcx + hexvar ] , rax je hexvar mov rax , qword ptr [ rdx + hexvar ] mov qword ptr [ rbx + hexvar ] , rdx mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rax + hexvar ] , rbx mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rax + hexvar ] , rbx mov qword ptr [ rip + hexvar ] , rbx pop rbx mov edx , r12d mov rsi , r14 pop rbp pop r12 pop r13 pop r14 jmp hexvar nop word ptr [ rax + rax ] mov rdi , qword ptr [ rdx + hexvar ] test rdi , rdi jne hexvar mov eax , hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax je hexvar test r13d , r13d mov rdi , qword ptr [ rbx + hexvar ] jne hexvar mov rsi , qword ptr [ rbx + hexvar ] xor edx , edx call hexvar test eax , eax je hexvar mov edi , num call hexvar call hexvar mov edi , eax call hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov rbx , rax mov edx , num call hexvar mov rdx , rbx mov rdi , rax mov rsi , rbp xor eax , eax call hexvar mov eax , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] cmp rax , rdi je hexvar cmp edx , num mov dword ptr [ rsp + hexvar ] , edx setne sil movzx esi , sil add esi , esi call hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , rax test rdi , rdi je hexvar add rsp , hexvar mov rsi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rax + hexvar ] jmp hexvar nop add rsp , hexvar mov eax , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov edx , num jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
call hexvar add edx , hexvar push edi push esi mov edx , dword ptr [ edx + hexvar ] push ebx mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] cmp edx , eax je hexvar xor edx , edx cmp ebx , num setne dl add edx , edx call hexvar test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax pop ebx pop esi pop edi jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ edx + num ] jmp hexvar lea esi , [ esi ] pop ebx mov eax , hexvar pop esi pop edi ret
push rbx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] cmp rax , rdi je hexvar cmp edx , num mov dword ptr [ rsp + hexvar ] , edx setne sil movzx esi , sil add esi , esi call hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , rax test rdi , rdi je hexvar add rsp , hexvar mov rsi , rbx pop rbx jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rax + hexvar ] jmp hexvar nop add rsp , hexvar mov eax , hexvar pop rbx ret
call hexvar add edx , hexvar push edi push esi mov edx , dword ptr [ edx + hexvar ] push ebx mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] cmp edx , eax je hexvar xor edx , edx cmp ebx , num setne dl add edx , edx call hexvar test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax pop ebx pop esi pop edi jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ edx + num ] jmp hexvar lea esi , [ esi ] pop ebx mov eax , hexvar pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov edx , num jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov edx , num jmp hexvar mov edx , num mov rax , qword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rip + hexvar ] sub rsi , rdi sete al movzx edx , al mov edi , edx mov rdi , qword ptr [ rdi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi jmp rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] sub eax , num setne cl movzx edx , cl add edx , edx mov esi , edx mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , zero move a2 , zero sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a1 , zero , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar move s0 , v0 move a1 , s0 jal hexvar move a0 , v0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , zero move a2 , zero sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a1 , zero , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal - hexvar move s0 , v0 move a1 , s0 jal hexvar move a0 , v0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar push num push num push hexvar push edi call hexvar mov esi , eax mov dword ptr [ esp ] , edi call hexvar mov edx , esi call hexvar mov edi , eax pop eax pop edx push dword ptr [ ebx + hexvar ] push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] mov r3 , num mov r2 , num mov r1 , hexvar ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar push num push num push hexvar push edi call hexvar mov esi , eax mov dword ptr [ esp ] , edi call hexvar mov edx , esi call hexvar mov edi , eax pop eax pop edx push dword ptr [ ebx + hexvar ] push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push num push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar push num push num push hexvar push edi call hexvar mov esi , eax mov dword ptr [ esp ] , edi call hexvar mov edx , esi call hexvar mov edi , eax pop eax pop edx push dword ptr [ ebx + hexvar ] push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) move a3 , zero move a2 , zero addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r14 push rbx push rax mov rbx , rdi mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov r14 , rax mov rdi , rbx call hexvar mov rdi , rax mov rsi , r14 call hexvar mov rbx , rax mov esi , hexvar mov rdi , r14 call hexvar mov rax , rbx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov rbx , rdi mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov r14 , rax mov rdi , rbx call hexvar mov rdi , rax mov rsi , r14 call hexvar mov rbx , rax mov esi , hexvar mov rdi , r14 call hexvar mov rax , rbx add rsp , num pop rbx pop r14 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + num ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , num mov dword ptr [ ebx + hexvar ] , num push eax lea eax , [ ebx + hexvar ] push eax push num push edi call hexvar add esp , hexvar test eax , eax jne hexvar mov ebp , dword ptr [ esp + num ] mov eax , dword ptr [ ebp + hexvar ] test eax , eax cmove eax , edi sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov edi , eax jne hexvar test esi , esi je hexvar mov dword ptr [ esi ] , hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx mov edx , hexvar mov rbx , rsi xor esi , esi mov rbp , rdi sub rsp , hexvar mov dword ptr [ rip + hexvar ] , num lea rcx , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , num mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi cmove rdi , rbp call hexvar test rax , rax jne hexvar test rbx , rbx je hexvar mov dword ptr [ rbx ] , hexvar mov rdi , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lui a2 , hexvar addiu v0 , zero , num sw v0 , - hexvar ( a2 ) addiu a3 , sp , hexvar addiu a2 , a2 , - hexvar move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw s2 , hexvar ( sp ) lw a0 , hexvar ( s2 ) movz a0 , s0 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s1 , hexvar addiu v0 , zero , - hexvar b hexvar sw v0 , ( s1 ) beqz s1 , hexvar nop sw v0 , ( s1 ) b hexvar move s0 , zero b hexvar move s0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push r12 push rbp lea rdx , [ rip + hexvar ] push rbx mov rbx , rsi xor esi , esi mov rbp , rdi sub rsp , hexvar mov dword ptr [ rip + hexvar ] , num mov rcx , rsp mov qword ptr [ rsp ] , num mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test eax , eax jne hexvar mov r12 , qword ptr [ rsp ] mov rdi , qword ptr [ r12 + hexvar ] test rdi , rdi cmove rdi , rbp call hexvar test rax , rax mov rbp , rax jne hexvar test rbx , rbx je hexvar mov dword ptr [ rbx ] , hexvar mov rdi , r12 call hexvar mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num setne al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] mov r3 , num str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] mov r2 , num str r2 , [ r3 ] sub r3 , fp , hexvar ldr r2 , [ pc , hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] mvn r2 , num str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar b hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] mov r3 , num str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] mov r2 , num str r2 , [ r3 ] sub r3 , fp , hexvar ldr r2 , [ pc , hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] mvn r2 , num str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar b hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax push num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar xor edx , edx test eax , eax je hexvar mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edx jne hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , num test eax , eax je hexvar mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] mov eax , edx mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
pxor xmm0 , xmm0 sub rsp , hexvar mov qword ptr [ rsp ] , rdx mov rsi , rsp xor edx , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax movups xmmword ptr [ rsp + num ] , xmm0 mov qword ptr [ rsp + hexvar ] , num call hexvar xor edx , edx test rax , rax je hexvar mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov rax , rdx jne hexvar add rsp , hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax push num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar xor edx , edx test eax , eax je hexvar mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edx jne hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar sub esp , num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] jmp hexvar mov eax , num leave ret
pxor xmm0 , xmm0 sub rsp , hexvar mov qword ptr [ rsp ] , rdx mov rsi , rsp xor edx , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax movups xmmword ptr [ rsp + num ] , xmm0 mov qword ptr [ rsp + hexvar ] , num call hexvar xor edx , edx test rax , rax je hexvar mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rax + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov rax , rdx jne hexvar add rsp , hexvar ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a1 , sp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw a2 , hexvar ( sp ) move a2 , zero sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a1 , sp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw a2 , hexvar ( sp ) move a2 , zero sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , ( v0 )
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax push num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar xor edx , edx test eax , eax je hexvar mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edx jne hexvar add esp , hexvar pop ebx ret
beqz a0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a1 move a1 , zero lw gp , hexvar ( sp ) move a0 , zero move a3 , zero sw a1 , hexvar ( sp ) move a2 , zero sw a0 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + num ] , num mov dword ptr [ edx + num ] , num call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + num ] , num mov dword ptr [ edx + num ] , num call hexvar add esp , hexvar pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , num push dword ptr [ esp + hexvar ] push num push num push num push num push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi cmp dword ptr [ eax ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] sub esp , hexvar mov esi , esp mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi ] , eax mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + num ] , num call hexvar add esp , hexvar jmp hexvar lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , num push dword ptr [ esp + hexvar ] push num push num push num push num push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + num ] , num mov dword ptr [ edx + num ] , num call hexvar add esp , hexvar pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar pop edx pop ecx push dword ptr [ esp + hexvar ] push num push num push num push num push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi cmp dword ptr [ eax ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] sub esp , hexvar mov esi , esp mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi ] , eax mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + num ] , num call hexvar add esp , hexvar jmp hexvar lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar pop edx pop ecx push dword ptr [ esp + hexvar ] push num push num push num push num push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , num mov rdi , rax mov rsi , rax movabs rdx , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , rsp add rax , - hexvar mov rsp , rax movabs rcx , hexvar mov rdi , rcx mov rsi , rcx movabs rdx , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rcx ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , num mov dword ptr [ rax + hexvar ] , r8d mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , hexvar mov dword ptr [ rax + hexvar ] , r8d mov rdi , qword ptr [ rcx ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , num mov rdi , rax mov rsi , rax movabs rdx , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , rsp add rax , - hexvar mov rsp , rax movabs rcx , num mov rdi , rcx mov rsi , rcx movabs rdx , num mov qword ptr [ rbp - num ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rcx ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , num mov dword ptr [ rax + hexvar ] , r8d mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , hexvar mov dword ptr [ rax + hexvar ] , r8d mov rdi , qword ptr [ rcx ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , hexvar mov rdi , rax mov rsi , rax movabs rdx , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , rsp add rax , - hexvar mov rsp , rax movabs rcx , hexvar mov rdi , rcx mov rsi , rcx movabs rdx , hexvar mov qword ptr [ rbp - num ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rcx ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , num mov dword ptr [ rax + hexvar ] , r8d mov rax , qword ptr [ rcx ] mov r8d , dword ptr [ rax + hexvar ] xor r8d , hexvar mov dword ptr [ rax + hexvar ] , r8d mov rdi , qword ptr [ rcx ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , hexvar mov rdi , rax mov rsi , rax movabs rdx , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov r8d , ecx xor r8d , hexvar and r8d , hexvar mov r9d , hexvar mov r10d , r9d xor r10d , hexvar and ecx , r10d mov r11d , r9d xor r11d , num and r11d , hexvar and r10d , num or r8d , ecx or r11d , r10d xor r8d , r11d mov dword ptr [ rax + hexvar ] , r8d mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov r8d , ecx xor r8d , hexvar and r8d , hexvar mov r10d , r9d xor r10d , hexvar and ecx , r10d xor r9d , hexvar and r9d , hexvar and r10d , hexvar or r8d , ecx or r9d , r10d xor r8d , r9d mov dword ptr [ rax + hexvar ] , r8d mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , num mov rdi , rax mov rsi , rax movabs rdx , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov r8d , ecx xor r8d , hexvar and r8d , hexvar mov r9d , hexvar mov r10d , r9d xor r10d , hexvar and ecx , r10d mov r11d , r9d xor r11d , num and r11d , hexvar and r10d , num or r8d , ecx or r11d , r10d xor r8d , r11d mov dword ptr [ rax + hexvar ] , r8d mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov r8d , ecx xor r8d , hexvar and r8d , hexvar mov r10d , r9d xor r10d , hexvar and ecx , r10d xor r9d , hexvar and r9d , hexvar and r10d , hexvar or r8d , ecx or r9d , r10d xor r8d , r9d mov dword ptr [ rax + hexvar ] , r8d mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , num mov rdi , rax mov rsi , rax movabs rdx , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movabs rax , num mov rdi , rax mov rsi , rax movabs rdx , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] movabs rdx , num mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , num mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - num ] call hexvar mov edx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , rdx add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw a1 , ( v0 ) lw a0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw a0 , hexvar ( sp ) lw a1 , ( s0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero b hexvar move v0 , zero
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw a0 , hexvar ( sp ) addiu a0 , sp , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s0 , v0 lw a1 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rax ] call hexvar cmp rax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rax ] call hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw a0 , hexvar ( sp ) addiu a0 , sp , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s0 , v0 lw a1 , ( v0 ) bal hexvar lw a0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw a1 , ( s0 ) lw t9 , - hexvar ( gp ) bal hexvar lw a0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi lea rdi , [ rsp + num ] call hexvar test rax , rax je hexvar mov esi , dword ptr [ rax ] mov rdi , qword ptr [ rsp + num ] mov rbx , rax call hexvar test rax , rax je hexvar mov esi , dword ptr [ rbx ] mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , rax call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi lea rdi , [ rsp + num ] call hexvar test rax , rax je hexvar mov esi , dword ptr [ rax ] mov rdi , qword ptr [ rsp + num ] mov rbx , rax call hexvar test rax , rax je hexvar mov esi , dword ptr [ rbx ] mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , rax call hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rax ] call hexvar cmp rax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rax ] call hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw a0 , hexvar ( sp ) addiu a0 , sp , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s0 , v0 lw a1 , ( v0 )
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi lea rdi , [ rsp + num ] call hexvar test rax , rax je hexvar mov esi , dword ptr [ rax ] mov rdi , qword ptr [ rsp + num ] mov rbx , rax call hexvar test rax , rax je hexvar mov esi , dword ptr [ rbx ] mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , rax call hexvar add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi lea rdi , [ rsp + num ] call hexvar test rax , rax je hexvar mov esi , dword ptr [ rax ] mov rdi , qword ptr [ rsp + num ] mov rbx , rax call hexvar test rax , rax je hexvar mov esi , dword ptr [ rbx ] mov rdi , qword ptr [ rsp + num ] call hexvar mov rdi , rax call hexvar add rsp , hexvar pop rbx ret
sub rsp , num mov rcx , rdx mov rdx , rsi or rdx , rcx mov eax , hexvar cmp rdx , rax jbe hexvar test rcx , rcx je hexvar mov rax , rsi mul rcx jo hexvar imul rsi , rcx call hexvar add rsp , num ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , esi je hexvar mov eax , edi or eax , esi je hexvar test ecx , ecx jne hexvar test esi , esi jne hexvar imul esi , ebx mov eax , ebx mov dword ptr [ esp + hexvar ] , ebp imul ecx , edi mul edi add ecx , esi add edx , ecx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx add esp , hexvar pop ebx pop esi pop edi pop ebp jmp hexvar mov esi , esi lea edi , [ edi ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ebx mov eax , ebx mul edi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mul dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , edx xor edx , edx add eax , dword ptr [ esp + hexvar ] adc edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar sub esp , hexvar push num mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , esi je hexvar mov eax , edi or eax , esi je hexvar test ecx , ecx jne hexvar test esi , esi jne hexvar imul esi , ebx mov eax , ebx mov dword ptr [ esp + hexvar ] , ebp imul ecx , edi mul edi add ecx , esi add edx , ecx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx add esp , hexvar pop ebx pop esi pop edi pop ebp jmp hexvar mov esi , esi lea edi , [ edi ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ebx mov eax , ebx mul edi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mul dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , edx xor edx , edx add eax , dword ptr [ esp + hexvar ] adc edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar sub esp , hexvar push num mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar xor eax , eax pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov ip , r1 orr r1 , r1 , r2 cmp r1 , hexvar movlo r3 , num movhs r3 , num cmp r2 , num moveq r3 , num cmp r3 , num bne hexvar mul r1 , r2 , ip bl hexvar pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] or rdx , rsi shr rdx , hexvar test rdx , rdx setne al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor edx , edx mov rsi , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , rsi div rcx mov rcx , qword ptr [ rbp - hexvar ] sub rcx , rax seta dil movzx r8d , dil mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] imul rax , rcx mov rsi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) or a1 , a2 , v0 beqz a1 , hexvar lw v1 , hexvar ( sp ) or a1 , v0 , v1 beqz a1 , hexvar mult v0 , a3 move a1 , zero bnez a2 , hexvar move t2 , zero bnez v0 , hexvar move t4 , v0 or a1 , a1 , t2 bnez a1 , hexvar lw t9 , - hexvar ( gp ) mult v0 , a3 madd a2 , v1 mflo v0 multu a3 , v1 mflo a3 mfhi a2 addu a2 , v0 , a2 jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar move t0 , a3 multu t0 , t4 mflo t5 mfhi t4 multu a3 , v1 mfhi t0 addu t0 , t0 , t5 sltu t0 , t0 , t5 addu t0 , t0 , t4 beqz t0 , hexvar nop move a1 , zero b hexvar addiu t2 , zero , num bnez v0 , hexvar move t4 , a2 b hexvar move t0 , v1 addiu a0 , zero , num bal hexvar nop lw gp , hexvar ( sp ) b hexvar move v0 , zero
addiu sp , sp , - hexvar lui gp , hexvar lw v0 , hexvar ( sp ) addiu gp , gp , hexvar lw v1 , hexvar ( sp ) sw ra , hexvar ( sp ) or a1 , a2 , v0 beqz a1 , hexvar sw gp , hexvar ( sp ) or a1 , v0 , v1 bnez a1 , hexvar nop multu a3 , v1 mflo t1 mfhi t0 mult v0 , a3 lw ra , hexvar ( sp ) madd a2 , v1 addiu sp , sp , hexvar move a3 , t1 mflo a2 j hexvar addu a2 , a2 , t0 bnez a2 , hexvar nop beqz v0 , hexvar multu a3 , v1 move t2 , v0 move a1 , a3 multu a1 , t2 mflo t3 mfhi t2 multu a3 , v1 mfhi t0 addu a1 , t0 , t3 sltu a1 , a1 , t3 addu a1 , a1 , t2 beqz a1 , hexvar mflo t1 lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num move v0 , zero lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar bnez v0 , hexvar move t2 , a2 b hexvar move a1 , v1
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] or rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov eax , hexvar cmp rdx , rax jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
addiu sp , sp , - hexvar lui gp , hexvar lw v0 , hexvar ( sp ) addiu gp , gp , - hexvar lw v1 , hexvar ( sp ) sw ra , hexvar ( sp ) or a1 , a2 , v0 beqz a1 , hexvar sw gp , hexvar ( sp ) or a1 , v0 , v1 bnez a1 , hexvar addiu a1 , zero , num lw a0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] or rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov eax , hexvar cmp rdx , rax jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push ebp push edi mov edi , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push dword ptr [ esi ] call hexvar mov dword ptr [ esi ] , ebp add esp , hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ esp + hexvar ] , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , num add esp , hexvar pop ebx ret
push ebp push edi mov edi , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push dword ptr [ esi ] call hexvar mov dword ptr [ esi ] , ebp add esp , hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov edi , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push dword ptr [ esi ] call hexvar mov dword ptr [ esi ] , ebp add esp , hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi ] , rsi je hexvar mov rbx , rdi mov rdi , rsi call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , qword ptr [ rbx ] call hexvar mov qword ptr [ rbx ] , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d pop rbx pop r14 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ esp + hexvar ] , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , num add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi ] , rsi je hexvar mov rbx , rdi mov rdi , rsi call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , qword ptr [ rbx ] call hexvar mov qword ptr [ rbx ] , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d pop rbx pop r14 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ sp , num ] cmp r2 , r3 bne hexvar mov r3 , num b hexvar ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov qword ptr [ rsp ] , rdi mov rax , qword ptr [ rsp ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar jmp hexvar mov eax , hexvar mov ebp , num nop word ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] cmp rax , rbx mov eax , hexvar cmove eax , r15d jmp hexvar mov rdi , rbx call hexvar mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov rax , qword ptr [ rsp ] mov rdi , qword ptr [ rax ] call hexvar mov rax , qword ptr [ rsp ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rcx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move s1 , a1 move a1 , a0 addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move s1 , a1 move a1 , a0 addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
test rdi , rdi je hexvar push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , rbx test r14 , r14 je hexvar mov rdi , rsp mov rsi , r14 call hexvar add rsp , hexvar pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move s1 , a1 move a1 , a0 addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
test rdi , rdi je hexvar push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , rbx test r14 , r14 je hexvar mov rdi , rsp mov rsi , r14 call hexvar add rsp , hexvar pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu v0 , sp , hexvar lw a1 , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) addiu v0 , sp , hexvar lw a1 , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move v0 , zero lui s3 , hexvar move s1 , a0 lw v0 , hexvar ( s3 ) beqz v0 , hexvar move s2 , a1 addiu s3 , sp , hexvar lw t9 , num ( v0 ) jalr t9 move a0 , s3 lw gp , hexvar ( sp ) beqz s2 , hexvar sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , s2 bal hexvar move a0 , s3 lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop b hexvar sw v0 , hexvar ( s3 ) lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar move v0 , zero b hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar add r3 , sp , num ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar add r3 , sp , num ldr r1 , [ sp ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
test rdi , rdi je hexvar push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , rbx test r14 , r14 je hexvar mov rdi , rsp mov rsi , r14 call hexvar add rsp , hexvar pop rbx pop r14 ret
test rdi , rdi je hexvar push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rdi , rsp call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , rbx test r14 , r14 je hexvar mov rdi , rsp mov rsi , r14 call hexvar add rsp , hexvar pop rbx pop r14 ret
push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi call hexvar mov rcx , rax mov rdx , rax cmp qword ptr [ rdx ] , rbx je hexvar mov rdx , qword ptr [ rdx + num ] test rdx , rdx jne hexvar jmp hexvar mov rax , qword ptr [ rdx + num ] test rax , rax jne hexvar mov rdx , qword ptr [ rbp + num ] add rcx , hexvar cmp rdx , rcx jbe hexvar mov rax , qword ptr [ rcx ] test rax , rax je hexvar jmp hexvar mov rax , qword ptr [ rax ] jmp hexvar mov eax , num add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + hexvar ] jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r5 , r0 bl hexvar mov r3 , r0 ldm r3 , { r1 , r3 } cmp r1 , r4 mov r2 , r0 beq hexvar cmp r3 , num beq hexvar ldm r3 , { r1 , r3 } cmp r1 , r4 bne hexvar cmp r3 , num bne hexvar ldr r3 , [ r5 , num ] b hexvar ldr r0 , [ r2 ] cmp r0 , num popne { r4 , r5 , r6 , pc } ldmdahs r6 , { r1 , r2 , r3 , r8 , fp , pc } ^ ldmdahs r6 , { r1 , r2 , r3 , r8 , fp , pc } ^
push esi push ebx sub esp , num mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edx , ebx mov eax , esi call hexvar mov ecx , eax mov edx , eax cmp dword ptr [ edx ] , ebx je hexvar mov edx , dword ptr [ edx + num ] test edx , edx jne hexvar jmp hexvar mov eax , dword ptr [ edx + num ] test eax , eax jne hexvar mov edx , dword ptr [ esi + num ] add ecx , num cmp edx , ecx jbe hexvar mov eax , dword ptr [ ecx ] test eax , eax je hexvar jmp hexvar mov eax , dword ptr [ eax ] jmp hexvar mov eax , num add esp , num pop ebx pop esi ret
push r12 push rbp push rbx mov rbp , rdi mov rbx , rsi mov r12 , qword ptr [ rdi ] mov rsi , qword ptr [ rdi + hexvar ] mov rdi , rbx call qword ptr [ rbp + hexvar ] shl rax , num lea rdx , [ r12 + rax ] mov rcx , qword ptr [ rbp + num ] cmp rdx , rcx jae hexvar mov rax , rdx test rdx , rdx jne hexvar jmp hexvar call hexvar cmp rbx , qword ptr [ rax ] jne hexvar mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rax + num ] test rax , rax jne hexvar jmp hexvar mov rax , qword ptr [ rdx ] test rax , rax jne hexvar add rdx , hexvar cmp rcx , rdx ja hexvar mov eax , num pop rbx pop rbp pop r12 ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 blo hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc } ldcle p14 , c7 , [ r8 , - hexvar ] andeq r0 , r0 , r0
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + hexvar ] jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 move s0 , a1 jal hexvar nop move v1 , v0 lw a0 , ( v1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lw v1 , hexvar ( fp ) bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v0 , ( v0 ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edi ] push dword ptr [ edi + num ] push esi call dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + num ] lea edx , [ ebp + eax * num ] add esp , hexvar cmp edi , edx jbe hexvar test edx , edx mov eax , edx je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi je hexvar test eax , eax je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi jne hexvar test eax , eax je hexvar mov eax , dword ptr [ eax ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a1 , zero beqz v0 , hexvar addiu v1 , zero , num lw a0 , num ( v0 )
push ebx call hexvar add ebx , hexvar sub esp , hexvar push num push dword ptr [ esp + hexvar ] call hexvar mov ecx , eax add esp , hexvar xor eax , eax xor edx , edx test ecx , ecx je hexvar cmp dword ptr [ ecx + num ] , num je hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov esi , eax mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num mov ecx , hexvar mov edx , hexvar cmove edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] xor eax , eax mov esi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + num ] sub ecx , num sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , lr } mov r1 , num bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r0 , num ] cmp r3 , num beq hexvar mov r0 , num pop { r4 , pc }
sub rsp , num xor esi , esi call hexvar mov rdx , rax xor eax , eax test rdx , rdx je hexvar cmp dword ptr [ rdx + num ] , num je hexvar add rsp , num ret
sub rsp , num xor esi , esi call hexvar mov rdx , rax xor eax , eax test rdx , rdx je hexvar cmp dword ptr [ rdx + num ] , num je hexvar add rsp , num ret
push { r4 , lr } mov r1 , num bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r0 , num ] cmp r3 , num beq hexvar mov r0 , num pop { r4 , pc }
push { r4 , lr } mov r1 , num bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r0 , num ] cmp r3 , num beq hexvar mov r0 , num pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move v0 , a1 move s0 , a2 move a1 , a0 move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a1 , hexvar ( s0 )
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 sw ra , hexvar ( sp ) move a1 , a0 sw s0 , hexvar ( sp ) move a0 , v0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a2 lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a1 , hexvar ( s0 )
push rbx mov rbx , qword ptr [ rdx + hexvar ] mov rax , rdi mov rdi , rsi mov rsi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar test eax , eax sete al pop rbx ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push rbx mov rax , rdi mov rdi , rsi mov rbx , qword ptr [ rdx + hexvar ] mov rsi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar test eax , eax sete al pop rbx ret
push rbx mov rbx , qword ptr [ rdx + hexvar ] mov rax , rdi mov rdi , rsi mov rsi , rax call hexvar mov rsi , rbx mov rdi , rax call hexvar test eax , eax sete al pop rbx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar test eax , eax sete al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a1 move s0 , a2 move a1 , a0 move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a1 , hexvar ( s0 )
push rbx mov rbx , rsi mov rsi , qword ptr [ rsi + num ] mov rdx , rdi cmp qword ptr [ rdx + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] jle hexvar mov rcx , qword ptr [ rbx ] xor r8d , r8d mov qword ptr [ rdx + hexvar ] , rcx xor ecx , ecx call qword ptr [ rax + hexvar ] add qword ptr [ rbx ] , rax mov eax , num pop rbx ret
push ebp push edi push esi push ebx sub esp , hexvar mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebx + num ] cmp dword ptr [ ecx + hexvar ] , num mov esi , dword ptr [ edi + hexvar ] mov eax , dword ptr [ esi + num ] mov ebp , dword ptr [ eax + hexvar ] jl hexvar jle hexvar mov eax , dword ptr [ ebx ] mov edx , dword ptr [ ebx + num ] sub esp , hexvar mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx push num push num push ecx push edi push esi call dword ptr [ ebp + hexvar ] add dword ptr [ ebx ] , eax adc dword ptr [ ebx + num ] , edx add esp , hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
mov rdx , rdi mov rax , qword ptr [ rsi + num ] mov rdi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rdx + hexvar ] , num jle hexvar push rbx mov rbx , rsi mov rcx , qword ptr [ rsi ] mov qword ptr [ rdx + hexvar ] , rcx mov rsi , qword ptr [ rsi + num ] mov r8d , num mov ecx , num call qword ptr [ rax + hexvar ] add qword ptr [ rbx ] , rax mov eax , num pop rbx ret
push rbx mov rbx , rsi mov rsi , qword ptr [ rsi + num ] mov rdx , rdi cmp qword ptr [ rdx + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] jle hexvar mov rcx , qword ptr [ rbx ] xor r8d , r8d mov qword ptr [ rdx + hexvar ] , rcx xor ecx , ecx call qword ptr [ rax + hexvar ] add qword ptr [ rbx ] , rax mov eax , num pop rbx ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] test edx , edx js hexvar test edx , edx jg hexvar cmp eax , num jbe hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + num ] sub esp , hexvar push num push num push dword ptr [ ebp + num ] push edx push dword ptr [ ebp - hexvar ] call eax add esp , hexvar mov ecx , eax mov ebx , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] add eax , ecx adc edx , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push rbx mov rbx , rsi mov rsi , qword ptr [ rsi + num ] mov rdx , rdi cmp qword ptr [ rdx + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rdi + num ] mov rax , qword ptr [ rax + hexvar ] jle hexvar mov rcx , qword ptr [ rbx ] xor r8d , r8d mov qword ptr [ rdx + hexvar ] , rcx xor ecx , ecx call qword ptr [ rax + hexvar ] add qword ptr [ rbx ] , rax mov eax , num pop rbx ret
push ebp push edi push esi push ebx sub esp , hexvar mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebx + num ] cmp dword ptr [ ecx + hexvar ] , num mov esi , dword ptr [ edi + hexvar ] mov eax , dword ptr [ esi + num ] mov ebp , dword ptr [ eax + hexvar ] jl hexvar jle hexvar mov eax , dword ptr [ ebx ] mov edx , dword ptr [ ebx + num ] sub esp , hexvar mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx push num push num push ecx push edi push esi call dword ptr [ ebp + hexvar ] add dword ptr [ ebx ] , eax adc dword ptr [ ebx + num ] , edx add esp , hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] cmp qword ptr [ rsi + hexvar ] , num jle hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rsi + hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov r8 , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , r8 mov qword ptr [ rbp - hexvar ] , rcx mov r8 , qword ptr [ rbp - hexvar ] mov r9 , qword ptr [ rbp - hexvar ] call r9
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - num ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovg edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi + hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , r8 mov qword ptr [ rbp - hexvar ] , rcx mov r8 , qword ptr [ rbp - hexvar ] mov r9 , qword ptr [ rbp - hexvar ] call r9
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] test edx , edx js hexvar test edx , edx jg hexvar cmp eax , num jbe hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + num ] sub esp , hexvar push num push num push dword ptr [ ebp + num ] push edx push dword ptr [ ebp - hexvar ] call eax add esp , hexvar mov ecx , eax mov ebx , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] add eax , ecx adc edx , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a3 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] mov r3 , hexvar ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebx call hexvar add ebx , hexvar sub esp , num push hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , hexvar call hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] mov r3 , hexvar ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar push hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a3 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
lea rax , [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax ] xor esi , esi jmp hexvar nop word ptr cs : [ rax + rax ] xor edx , edx xor esi , esi jmp hexvar
lea rax , [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax ] xor esi , esi jmp hexvar nop word ptr cs : [ rax + rax ] xor edx , edx xor esi , esi jmp hexvar
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
lea rax , [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax ] xor esi , esi jmp hexvar nop word ptr cs : [ rax + rax ] xor edx , edx xor esi , esi jmp hexvar
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
lea rax , [ rip + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rax ] xor esi , esi jmp hexvar nop word ptr cs : [ rax + rax ] xor edx , edx xor esi , esi jmp hexvar
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
ldrb r3 , [ r0 ] add r2 , r0 , num cmp r3 , num beq hexvar mov r0 , num add r1 , r0 , r0 , lsl num add r0 , r0 , r1 , lsl num add r0 , r0 , r3 ldrb r3 , [ r2 ] , num sub r0 , r0 , hexvar cmp r3 , num bne hexvar bx lr mov r0 , r3 bx lr
mov eax , dword ptr [ esp + num ] movzx edx , byte ptr [ eax ] lea ecx , [ eax + num ] xor eax , eax test dl , dl je hexvar imul eax , eax , hexvar add ecx , num lea eax , [ eax + edx - hexvar ] movzx edx , byte ptr [ ecx - num ] test dl , dl jne hexvar ret lea esi , [ esi ] ret lea esi , [ esi ]
mov eax , dword ptr [ esp + num ] movzx edx , byte ptr [ eax ] lea ecx , [ eax + num ] xor eax , eax test dl , dl je hexvar imul eax , eax , hexvar add ecx , num lea eax , [ eax + edx - hexvar ] movzx edx , byte ptr [ ecx - num ] test dl , dl jne hexvar ret lea esi , [ esi ] ret lea esi , [ esi ]
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) move v0 , v1 sll v0 , v0 , num addu v0 , v0 , v1 sll v0 , v0 , num subu v1 , v0 , v1 lbu v0 , num ( fp ) addu v0 , v1 , v0 addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , num ( fp ) addiu v1 , v0 , num sw v1 , num ( fp ) lbu v0 , ( v0 ) sb v0 , num ( fp ) lbu v0 , num ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) move v0 , v1 sll v0 , v0 , num addu v0 , v0 , v1 sll v0 , v0 , num subu v1 , v0 , v1 lbu v0 , num ( fp ) addu v0 , v1 , v0 addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , num ( fp ) addiu v1 , v0 , num sw v1 , num ( fp ) lbu v0 , ( v0 ) sb v0 , num ( fp ) lbu v0 , num ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu a1 , a0 , num lbu a0 , ( a0 ) beqz a0 , hexvar nop move v0 , zero sll v1 , v0 , num addu v1 , v1 , v0 sll v1 , v1 , num subu v0 , v1 , v0 addu v0 , v0 , a0 addiu a1 , a1 , num lbu a0 , - num ( a1 ) bnez a0 , hexvar addiu v0 , v0 , - hexvar jr ra nop jr ra move v0 , zero
lea rcx , [ rdi + num ] movzx edx , byte ptr [ rdi ] test dl , dl je hexvar mov eax , num imul eax , eax , hexvar movzx edx , dl lea eax , [ rax + rdx - hexvar ] add rcx , num movzx edx , byte ptr [ rcx - num ] test dl , dl jne hexvar ret mov eax , num ret
addiu a1 , a0 , num lbu a0 , ( a0 ) beqz a0 , hexvar move v0 , zero sll v1 , v0 , num addiu a1 , a1 , num addu v1 , v1 , v0 sll v1 , v1 , num subu v0 , v1 , v0 addu v0 , v0 , a0 lbu a0 , - num ( a1 ) bnez a0 , hexvar addiu v0 , v0 , - hexvar jr ra nop
mov eax , dword ptr [ esp + num ] lea ecx , [ eax + num ] movzx edx , byte ptr [ eax ] test dl , dl je hexvar mov eax , num imul eax , eax , hexvar movzx edx , dl lea eax , [ eax + edx - hexvar ] add ecx , num movzx edx , byte ptr [ ecx - num ] test dl , dl jne hexvar ret mov eax , num ret
addiu a1 , a0 , num lbu a0 , ( a0 ) beqz a0 , hexvar move v0 , zero sll v1 , v0 , num addiu a1 , a1 , num addu v1 , v1 , v0 sll v1 , v1 , num subu v0 , v1 , v0 addu v0 , v0 , a0 lbu a0 , - num ( a1 ) bnez a0 , hexvar addiu v0 , v0 , - hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea edi , [ ebx - hexvar ] cmp dword ptr [ esp + hexvar ] , edi lea ebp , [ ebx - hexvar ] lea esi , [ ebx - hexvar ] cmovne esi , ebp test eax , eax mov dword ptr [ esp + hexvar ] , esi je hexvar mov ebp , dword ptr [ edx ] mov esi , dword ptr [ eax + ebp * num ] test esi , esi je hexvar add ebp , num mov dword ptr [ edx ] , ebp cmp byte ptr [ esi ] , num je hexvar sub esp , num push esi push dword ptr [ esp + hexvar ] push ecx call hexvar add esp , hexvar mov dword ptr [ eax + hexvar ] , num cmp dword ptr [ esp + hexvar ] , edi setne dl sete byte ptr [ eax + hexvar ] mov byte ptr [ eax + hexvar ] , dl movzx edx , byte ptr [ esi ] test dl , dl je hexvar nop lea esi , [ esi ] movsx edi , dl sub edx , hexvar cmp dl , hexvar ja hexvar movzx edx , dl mov ecx , dword ptr [ ebx + edx * num - hexvar ] add ecx , ebx jmp ecx lea esi , [ esi ]
push ebp push edi xor ebp , ebp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar test eax , eax je hexvar mov edi , eax mov eax , dword ptr [ edx ] xor ebp , ebp mov edi , dword ptr [ edi + eax * num ] test edi , edi je hexvar sub esp , hexvar add eax , num mov esi , ecx mov dword ptr [ edx ] , eax push edi call hexvar add esp , hexvar cmp eax , num jne hexvar movzx edx , byte ptr [ edi ] lea eax , [ edx - hexvar ] cmp al , hexvar ja hexvar movzx eax , al mov ecx , dword ptr [ ebx + eax * num - hexvar ] add ecx , ebx jmp ecx lea esi , [ esi ]
beqz a0 , hexvar nop lw v0 , ( a1 ) addiu sp , sp , - hexvar lui gp , hexvar sdc1 f20 , hexvar ( sp ) sll v1 , v0 , num sw s2 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) addu a0 , a0 , v1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s2 , ( a0 )
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax fld dword ptr [ ebx - hexvar ] fstp dword ptr [ ebp - hexvar ] lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test al , al je hexvar mov eax , dword ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar cmp eax , num je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push eax push num push num call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] movsx eax , al sub eax , hexvar cmp eax , hexvar ja hexvar shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax fld dword ptr [ ebx - hexvar ] fstp dword ptr [ ebp - hexvar ] lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test al , al je hexvar mov eax , dword ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar cmp eax , num je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push eax push num push num call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] movsx eax , al sub eax , hexvar cmp eax , hexvar ja hexvar shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push r12 push rbp push rbx test rdi , rdi je hexvar mov r9 , rcx movsxd rax , dword ptr [ rsi ] mov r8 , qword ptr [ rdi + rax * num ] test r8 , r8 je hexvar mov eax , num mov rcx , - num mov rdi , r8 repne scasb al , byte ptr [ rdi ] cmp rcx , - num jne hexvar movzx eax , byte ptr [ r8 ] sub eax , hexvar cmp al , hexvar ja hexvar movzx eax , al jmp qword ptr [ rax * num + hexvar ] mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar mov r12 , r9 mov rdi , rdx mov rbx , rsi mov rsi , r9 call hexvar cmp r12 , hexvar jne hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num jmp hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , ebp add dword ptr [ rbx ] , num mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbx pop rbp pop r12 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s3 , - hexvar ( gp ) beq a3 , s3 , hexvar sw gp , hexvar ( sp ) lui s0 , hexvar addiu s0 , s0 , - hexvar beqz a0 , hexvar lw ra , hexvar ( sp ) lw v1 , ( a1 )
push r12 push rbp push rbx test rdi , rdi je hexvar mov r9 , rcx movsxd rax , dword ptr [ rsi ] mov r8 , qword ptr [ rdi + rax * num ] test r8 , r8 je hexvar mov eax , num mov rcx , - num mov rdi , r8 repne scasb al , byte ptr [ rdi ] cmp rcx , - num jne hexvar movzx eax , byte ptr [ r8 ] sub eax , hexvar cmp al , hexvar ja hexvar movzx eax , al jmp qword ptr [ rax * num + hexvar ] mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar jmp hexvar mov ebp , hexvar mov r12 , r9 mov rdi , rdx mov rbx , rsi mov rsi , r9 call hexvar cmp r12 , hexvar jne hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num jmp hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , ebp add dword ptr [ rbx ] , num mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , num pop rbx pop rbp pop r12 ret
test rdi , rdi je hexvar push r12 push rbp push rbx sub rsp , hexvar movsxd r8 , dword ptr [ rsi ] mov r12 , qword ptr [ rdi + r8 * num ] mov rax , r8 test r12 , r12 je hexvar add eax , num mov rdi , r12 mov rbx , rcx mov dword ptr [ rsi ] , eax mov rbp , rdx call hexvar cmp rax , num jne hexvar movzx r12d , byte ptr [ r12 ] lea eax , [ r12 - hexvar ] cmp al , hexvar ja hexvar movzx eax , al jmp qword ptr [ rax * num + hexvar ] nop dword ptr [ rax ] mov edx , num mov esi , hexvar xor edi , edi call hexvar xor esi , esi mov rdx , rax mov edi , num xor eax , eax call hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi xor ebp , ebp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar test eax , eax je hexvar mov edi , eax mov eax , dword ptr [ edx ] xor ebp , ebp mov edi , dword ptr [ edi + eax * num ] test edi , edi je hexvar sub esp , hexvar add eax , num mov esi , ecx mov dword ptr [ edx ] , eax push edi call hexvar add esp , hexvar cmp eax , num jne hexvar movzx edx , byte ptr [ edi ] lea eax , [ edx - hexvar ] cmp al , hexvar ja hexvar movzx eax , al mov ecx , dword ptr [ ebx + eax * num - hexvar ] add ecx , ebx jmp ecx lea esi , [ esi ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] leave ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar test rdx , rdx je hexvar mov r13d , r9d mov r14 , r8 mov r15 , rcx mov rbp , rdx mov rbx , rsi mov edx , num mov esi , hexvar call hexvar mov r12 , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , r15 mov qword ptr [ rax + hexvar ] , r14 mov dword ptr [ rax + hexvar ] , r13d mov qword ptr [ r12 + hexvar ] , rax mov rax , r12 add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar test rdx , rdx je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov r12d , r9d mov r13 , r8 mov r14 , rcx mov rbp , rdx call hexvar test rax , rax mov r15 , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , r14 mov qword ptr [ rax + hexvar ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov qword ptr [ r15 + hexvar ] , rax add rsp , num mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a1 , hexvar sw gp , hexvar ( sp ) beqz a2 , hexvar move s1 , a2 move s0 , a1 move a2 , zero addiu a1 , zero , hexvar jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sb zero , hexvar ( v0 ) sb zero , hexvar ( v0 ) sb zero , hexvar ( v0 ) sb zero , hexvar ( v0 ) sw s0 , ( v0 ) sw s1 , num ( v0 ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) sw a1 , hexvar ( v0 ) sw a0 , num ( v0 ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) sw a1 , hexvar ( v0 ) sw a0 , hexvar ( v0 ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) sw v0 , hexvar ( s2 ) move v0 , s2 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s2 , a1 b hexvar move s2 , a2
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar test rdx , rdx je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov r12d , r9d mov r13 , r8 mov r14 , rcx mov rbp , rdx call hexvar test rax , rax mov r15 , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , r14 mov qword ptr [ rax + hexvar ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov qword ptr [ r15 + hexvar ] , rax add rsp , num mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) beqz a2 , hexvar move s0 , a1 addiu a0 , zero , hexvar move a1 , zero jal hexvar move s1 , a2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw a1 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop move a2 , zero addiu a1 , zero , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , hexvar ( a0 ) sw v0 , num ( a0 ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v1 , hexvar ( a0 ) sw v0 , hexvar ( a0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar test rdx , rdx je hexvar mov rbx , rsi mov edi , hexvar xor esi , esi mov r12d , r9d mov r13 , r8 mov r14 , rcx mov rbp , rdx call hexvar test rax , rax mov r15 , rax je hexvar mov edi , hexvar call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbx mov qword ptr [ rax + num ] , rbp mov qword ptr [ rax + hexvar ] , r14 mov qword ptr [ rax + hexvar ] , r13 mov dword ptr [ rax + hexvar ] , r12d mov qword ptr [ r15 + hexvar ] , rax add rsp , num mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num test rsi , rsi je hexvar test rdx , rdx je hexvar mov edi , hexvar mov r13d , r9d mov r14 , r8 mov r15 , rcx mov r12 , rdx mov rbp , rsi call hexvar pxor xmm0 , xmm0 mov rbx , rax mov dword ptr [ rax ] , hexvar mov dword ptr [ rax + num ] , num mov edi , hexvar movups xmmword ptr [ rax + num ] , xmm0 call hexvar mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax ] , rbp mov qword ptr [ rax + num ] , r12 mov qword ptr [ rax + hexvar ] , r15 mov qword ptr [ rax + hexvar ] , r14 mov dword ptr [ rax + hexvar ] , r13d mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov dword ptr [ rbp - hexvar ] , r9d mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar xor edx , edx mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov edi , hexvar call hexvar xor esi , esi mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lui v1 , hexvar lwc1 f0 , - hexvar ( v1 ) swc1 f0 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar mov edx , num test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , hexvar mov edx , num mov eax , edx add esp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - num ] movss dword ptr [ eax + hexvar ] , xmm0 mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - num ] movss dword ptr [ eax + hexvar ] , xmm0 mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , ebx call hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num add esp , num mov eax , num pop ebx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - num ] movss dword ptr [ eax + hexvar ] , xmm0 mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 mov eax , num jmp hexvar mov eax , num leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ eax ] mov dword ptr [ ecx ] , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] cmp byte ptr [ ecx ] , num setne dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] sub esp , hexvar movsx ecx , byte ptr [ ecx ] mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar movzx ecx , al sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov byte ptr [ ecx ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov esp , ebp pop ebp ret
lb v0 , ( a0 ) beqz v0 , hexvar addiu a2 , zero , hexvar b hexvar addiu a1 , zero , hexvar sb a2 , ( a0 ) addiu a0 , a0 , num lb v0 , ( a0 ) beqz v0 , hexvar nop bltz v0 , hexvar slti v1 , v0 , hexvar bnez v1 , hexvar nop bne v0 , a1 , hexvar nop b hexvar sb a2 , ( a0 ) jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
movzx eax , byte ptr [ rdi ] test al , al jne hexvar ret mov byte ptr [ rdi ] , hexvar add rdi , num movzx eax , byte ptr [ rdi ] test al , al je hexvar test al , al js hexvar cmp al , hexvar jle hexvar cmp al , hexvar jne hexvar jmp hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop ebp ret
mov edx , dword ptr [ esp + num ] movzx eax , byte ptr [ edx ] test al , al je hexvar nop lea esi , [ esi ] cmp al , num jl hexvar cmp al , hexvar jle hexvar cmp al , hexvar jne hexvar mov byte ptr [ edx ] , hexvar add edx , num movzx eax , byte ptr [ edx ] test al , al jne hexvar ret nop lea esi , [ esi ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] test cl , cl setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] movsx edi , byte ptr [ rax ] call hexvar movzx edi , al call hexvar movzx edi , al mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar movzx eax , al mov edi , eax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , hexvar add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dl , byte ptr [ ecx ] mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] cmp al , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar movsx ecx , byte ptr [ ecx ] mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] movzx ecx , al sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx jmp hexvar mov esp , ebp pop ebp ret
lb v0 , ( a0 ) beqz v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar blez v0 , hexvar slti v1 , v0 , hexvar bnez v1 , hexvar nop bne v0 , a1 , hexvar nop sb a2 , ( a0 ) addiu a0 , a0 , num lb v0 , ( a0 ) bnez v0 , hexvar nop jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , num mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar jmp hexvar push num push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar push num push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] mov dword ptr [ ebp - hexvar ] , edx test eax , eax jne hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx sub rsi , rdx mov rdi , rcx sub rdi , - num add rsi , rdi sub rcx , rsi mov qword ptr [ rbp - hexvar ] , rcx cmp rdx , num je hexvar xor eax , eax mov edx , eax xor ecx , ecx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar xor eax , eax mov edx , eax xor ecx , ecx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rsi mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx sub rsi , rdx mov rdi , rcx sub rdi , - num add rsi , rdi sub rcx , rsi mov qword ptr [ rbp - hexvar ] , rcx cmp rdx , num je hexvar xor eax , eax mov edx , eax xor ecx , ecx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar xor eax , eax mov edx , eax xor ecx , ecx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rsi mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , num mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar jmp hexvar push num push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar push num push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] test eax , eax je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax - num ] mov dword ptr [ ebp - hexvar ] , edx test eax , eax jne hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop move a3 , zero move a2 , zero lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move a3 , zero move a2 , zero lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , v0 , - num sw v1 , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , num mov edx , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop move a3 , zero move a2 , zero lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move a3 , zero move a2 , zero lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , v0 , - num sw v1 , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop move a3 , zero move a2 , zero lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move a3 , zero move a2 , zero lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , v0 , - num sw v1 , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar test edx , edx je hexvar mov edi , edx movsx edx , byte ptr [ edx ] mov esi , eax lea eax , [ ebx - hexvar ] mov ecx , eax mov dword ptr [ esp + num ] , eax movzx eax , dl test byte ptr [ ecx + eax * num ] , num je hexvar mov dword ptr [ esp + hexvar ] , esi xor ebp , ebp mov esi , ecx lea esi , [ esi ] lea eax , [ ebp + ebp * num ] add edi , num lea ebp , [ edx + eax * num - hexvar ] movsx edx , byte ptr [ edi ] movzx ecx , dl test byte ptr [ esi + ecx * num ] , num jne hexvar test ebp , ebp mov esi , dword ptr [ esp + hexvar ] js hexvar test dl , dl je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov ecx , dword ptr [ esi + num ] mov edx , dword ptr [ esi + num ] sub edx , ecx test edx , edx jle hexvar mov byte ptr [ ecx ] , hexvar mov eax , dword ptr [ esi + num ] lea ecx , [ eax + num ] mov dword ptr [ esi + num ] , ecx sub ebp , num cmp ebp , - num je hexvar test edi , edi je hexvar movzx eax , byte ptr [ edi ] test al , al je hexvar sub eax , hexvar cmp al , hexvar ja hexvar movzx eax , al mov edx , dword ptr [ ebx + eax * num - hexvar ] add edx , ebx jmp edx lea esi , [ esi ]
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar test edx , edx je hexvar mov edi , edx movsx edx , byte ptr [ edx ] mov esi , eax lea eax , [ ebx - hexvar ] mov ecx , eax mov dword ptr [ esp + num ] , eax movzx eax , dl test byte ptr [ ecx + eax * num ] , num je hexvar mov dword ptr [ esp + hexvar ] , esi xor ebp , ebp mov esi , ecx lea esi , [ esi ] lea eax , [ ebp + ebp * num ] add edi , num lea ebp , [ edx + eax * num - hexvar ] movsx edx , byte ptr [ edi ] movzx ecx , dl test byte ptr [ esi + ecx * num ] , num jne hexvar test ebp , ebp mov esi , dword ptr [ esp + hexvar ] js hexvar test dl , dl je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov ecx , dword ptr [ esi + num ] mov edx , dword ptr [ esi + num ] sub edx , ecx test edx , edx jle hexvar mov byte ptr [ ecx ] , hexvar mov eax , dword ptr [ esi + num ] lea ecx , [ eax + num ] mov dword ptr [ esi + num ] , ecx sub ebp , num cmp ebp , - num je hexvar test edi , edi je hexvar movzx eax , byte ptr [ edi ] test al , al je hexvar sub eax , hexvar cmp al , hexvar ja hexvar movzx eax , al mov edx , dword ptr [ ebx + eax * num - hexvar ] add edx , ebx jmp edx lea esi , [ esi ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a0 sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop sw zero , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lbu v0 , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar bnez v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , zero addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar lw v1 , hexvar ( fp ) addiu a0 , v1 , num lw v1 , hexvar ( fp ) addiu a1 , v1 , num lw v1 , hexvar ( fp ) addiu v1 , v1 , num move a2 , v1 move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r15d , edi movzx r13d , dil mov edi , r13d call hexvar mov rbx , rax mov r12d , num jmp hexvar mov r14d , num mov edi , r13d call hexvar mov rbp , rax test r15b , r15b jne hexvar mov rdi , rbx call hexvar mov rdi , rbp call hexvar mov rdi , r12 call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar test al , al jne hexvar lea rdi , [ rip + hexvar ] call hexvar test al , al je hexvar mov r14d , num jmp hexvar mov rdi , rbx call hexvar test al , al je hexvar mov rdi , rbp call hexvar test al , al jne hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar test r14d , r14d jne hexvar mov rdx , qword ptr [ rbx + num ] mov rax , qword ptr [ rbp + num ] lea r12 , [ rdx + rax ] cmp rdx , r12 setg dl shr rax , hexvar cmp dl , al je hexvar mov edi , hexvar call hexvar jmp hexvar mov rdx , qword ptr [ rbx + num ] mov rax , qword ptr [ rbp + num ] mov r12 , rdx sub r12 , rax cmp rdx , r12 setl dl shr rax , hexvar cmp dl , al je hexvar mov edi , hexvar call hexvar jmp hexvar mov rax , rbx add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r5 , r0 bl hexvar ldr r6 , [ pc , hexvar ] mov r7 , r0 ldr r8 , [ pc , hexvar ] ldr sl , [ pc , hexvar ] ldr sb , [ pc , hexvar ] b hexvar mov r0 , r8 bl hexvar cmp r0 , num beq hexvar mov fp , num mov r0 , r5 bl hexvar cmp r5 , num mov r4 , r0 beq hexvar mov r0 , r7 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 bl hexvar cmp r0 , num beq hexvar cmp fp , num add r1 , r7 , num moveq fp , sl movne fp , sb mov r0 , r1 add r2 , r4 , num blx fp mov r0 , r4 bl hexvar mov r0 , r6 bl hexvar cmp r0 , num beq hexvar mov fp , num b hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov byte ptr [ esp + hexvar ] , al movzx eax , al mov dword ptr [ esp + num ] , eax call hexvar mov ebp , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar mov edi , num mov eax , dword ptr [ esp + num ] call hexvar mov esi , eax cmp byte ptr [ esp + hexvar ] , num je hexvar mov eax , ebp call hexvar test al , al je hexvar mov eax , esi call hexvar test al , al je hexvar test edi , edi lea eax , [ ebx - hexvar ] lea edx , [ ebx - hexvar ] cmovne eax , edx lea edx , [ ebp + num ] sub esp , num lea ecx , [ esi + num ] push ecx push edx push edx call eax add esp , hexvar mov eax , esi call hexvar mov eax , dword ptr [ esp + num ] call hexvar test al , al jne hexvar lea eax , [ ebx - hexvar ] call hexvar test al , al je hexvar mov edi , num jmp hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov byte ptr [ esp + num ] , al movzx edi , al mov eax , edi call hexvar mov dword ptr [ esp + hexvar ] , eax lea ebp , [ ebx - hexvar ] mov dword ptr [ esp + num ] , edi jmp hexvar mov edi , num mov eax , dword ptr [ esp + num ] call hexvar mov esi , eax cmp byte ptr [ esp + num ] , num jne hexvar mov eax , esi call hexvar mov eax , ebp call hexvar test al , al jne hexvar lea eax , [ ebx - hexvar ] call hexvar test al , al je hexvar mov edi , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] call hexvar test al , al je hexvar mov eax , esi call hexvar test al , al jne hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar add esp , hexvar test edi , edi lea eax , [ ebx - hexvar ] lea edx , [ ebx - hexvar ] cmovne eax , edx mov ecx , dword ptr [ esp + hexvar ] lea edx , [ ecx + num ] sub esp , num lea ecx , [ esi + num ] push ecx push edx push edx call eax add esp , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov byte ptr [ esp + hexvar ] , al movzx eax , al lea edi , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ esp + hexvar ] , eax jmp hexvar nop lea eax , [ ebx - hexvar ] call hexvar test al , al je hexvar mov esi , num mov eax , dword ptr [ esp + num ] call hexvar cmp byte ptr [ esp + hexvar ] , num mov ebp , eax jne hexvar mov eax , ebp call hexvar mov eax , edi call hexvar test al , al je hexvar xor esi , esi jmp hexvar mov eax , dword ptr [ esp + hexvar ] call hexvar test al , al je hexvar mov eax , ebp call hexvar test al , al jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] lea ecx , [ ebx - hexvar ] lea eax , [ ebx - hexvar ] test esi , esi lea esi , [ ebp + num ] cmovne eax , ecx sub esp , num lea ecx , [ edx + num ] push esi push ecx push ecx call eax add esp , hexvar jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , dil and al , num mov byte ptr [ rbp - num ] , al movzx edi , byte ptr [ rbp - num ] and edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov edi , hexvar call hexvar movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov edi , hexvar call hexvar movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , lr } ands ip , r1 , hexvar sub sp , sp , hexvar mov r5 , r0 bne hexvar cmp r3 , r0 bls hexvar ldrb r6 , [ r0 ] add r4 , r0 , num tst r6 , hexvar subne r5 , r3 , r0 and r6 , r6 , hexvar and r6 , r6 , hexvar mov r7 , num movne lr , ip rsbne r5 , r5 , r5 , lsl num bne hexvar b hexvar ldrb r1 , [ r4 ] , num and r8 , r1 , hexvar and r8 , r8 , hexvar lsl r2 , r8 , r2 orr r2 , r2 , r8 , lsr r0 orr r2 , r2 , r7 orr r8 , r6 , r8 , lsl lr tst r1 , hexvar mov r6 , r8 mov r7 , r2 beq hexvar add lr , lr , num cmp r5 , lr sub r2 , lr , hexvar rsb r0 , lr , hexvar bne hexvar mov r5 , r6 mov ip , num str ip , [ sp ] mov r3 , r5 ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
push { r4 , r6 , r7 , r8 , sb , lr } ands ip , r1 , hexvar sub sp , sp , num mov r4 , r0 bne hexvar ldrb r6 , [ r0 ] add r4 , r0 , num tst r6 , hexvar and r6 , r6 , hexvar and r6 , r6 , hexvar mov r7 , num movne r1 , ip beq hexvar ldrb r0 , [ r4 ] , num add r1 , r1 , num and r2 , r0 , hexvar and r8 , r2 , hexvar sub r3 , r1 , hexvar lsl r3 , r8 , r3 rsb lr , r1 , hexvar orr r3 , r3 , r8 , lsr lr orr r3 , r3 , r7 orr r2 , r6 , r8 , lsl r1 tst r0 , hexvar mov r6 , r2 mov r7 , r3 bne hexvar ldrb r0 , [ r4 ] mov r1 , num tst r0 , hexvar and r0 , r0 , hexvar add r4 , r4 , num and r0 , r0 , hexvar beq hexvar ldrb r3 , [ r4 ] , num add ip , ip , num and r8 , r3 , hexvar and r8 , r8 , hexvar sub r2 , ip , hexvar lsl r2 , r8 , r2 rsb lr , ip , hexvar orr r2 , r2 , r8 , lsr lr orr r2 , r2 , r1 orr r8 , r0 , r8 , lsl ip tst r3 , hexvar mov r0 , r8 mov r1 , r2 bne hexvar str r0 , [ sp ] mov r3 , r6 ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r0 , r4 add sp , sp , num pop { r4 , r6 , r7 , r8 , sb , pc }
push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rbp , rcx test sil , hexvar je hexvar mov ebx , esi mov eax , esi and eax , num je hexvar cmp eax , num je hexvar cmp eax , num jbe hexvar cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar lea rbx , [ rsp + num ] mov rsi , rcx mov rdi , rbx call hexvar mov r12 , rax mov rsi , rbp mov rdi , rbx call hexvar mov r8 , rax mov rcx , r12 lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) andi v0 , a1 , hexvar beqz v0 , hexvar move s1 , a3 andi v0 , a1 , num beqz v0 , hexvar move s0 , a1 addiu v1 , zero , num beq v0 , v1 , hexvar sltiu v1 , v0 , num bnez v1 , hexvar addiu v1 , zero , num beq v0 , v1 , hexvar addiu v1 , zero , num bne v0 , v1 , hexvar lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) move a1 , a3 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) move s0 , v1 move a1 , s1 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) sw v1 , hexvar ( sp ) move a3 , s0 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a1 , a3 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) andi s0 , s0 , num beqz s0 , hexvar move a3 , v1 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp )
push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rbp , rcx test sil , hexvar je hexvar mov ebx , esi mov eax , esi and eax , num je hexvar cmp eax , num je hexvar cmp eax , num jbe hexvar cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar lea rbx , [ rsp + num ] mov rsi , rcx mov rdi , rbx call hexvar mov r12 , rax mov rsi , rbp mov rdi , rbx call hexvar mov r8 , rax mov rcx , r12 lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) andi v0 , a1 , hexvar beqz v0 , hexvar move s1 , a3 andi v0 , a1 , num beqz v0 , hexvar move s0 , a1 addiu v1 , zero , num beq v0 , v1 , hexvar sltiu v1 , v0 , num bnez v1 , hexvar addiu v1 , zero , num beq v0 , v1 , hexvar addiu v1 , zero , num bne v0 , v1 , hexvar lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) move a1 , a3 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) move s0 , v1 move a1 , s1 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) sw v1 , hexvar ( sp ) move a3 , s0 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a1 , a3 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) andi s0 , s0 , num beqz s0 , hexvar move a3 , v1 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp )
push { r4 , r5 , r6 , r7 , r8 , sb , lr } ands ip , r1 , hexvar sub sp , sp , hexvar mov r5 , r0 bne hexvar cmp r3 , r0 bls hexvar ldrb r6 , [ r0 ] add r4 , r0 , num tst r6 , hexvar subne r5 , r3 , r0 and r6 , r6 , hexvar and r6 , r6 , hexvar mov r7 , num movne lr , ip rsbne r5 , r5 , r5 , lsl num bne hexvar b hexvar ldrb r1 , [ r4 ] , num and r8 , r1 , hexvar and r8 , r8 , hexvar lsl r2 , r8 , r2 orr r2 , r2 , r8 , lsr r0 orr r2 , r2 , r7 orr r8 , r6 , r8 , lsl lr tst r1 , hexvar mov r6 , r8 mov r7 , r2 beq hexvar add lr , lr , num cmp r5 , lr sub r2 , lr , hexvar rsb r0 , lr , hexvar bne hexvar mov r5 , r6 mov ip , num str ip , [ sp ] mov r3 , r5 ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
push rbp push rbx mov rbp , rdi mov edi , esi sub rsp , num and edi , hexvar jne hexvar movzx eax , byte ptr [ rbp ] xor ecx , ecx lea rdx , [ rbp + num ] mov r9 , rax and r9d , hexvar test al , al jns hexvar nop dword ptr [ rax ] add rdx , num movzx esi , byte ptr [ rdx - num ] add ecx , num mov rax , rsi and eax , hexvar shl rax , cl or r9 , rax test sil , sil js hexvar movzx eax , byte ptr [ rdx ] lea rbx , [ rdx + num ] mov r8 , rax and r8d , hexvar test al , al jns hexvar nop add rbx , num movzx edx , byte ptr [ rbx - num ] add edi , num mov ecx , edi mov rax , rdx and eax , hexvar shl rax , cl or r8 , rax test dl , dl js hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rcx , r9 mov edi , num xor eax , eax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) andi v0 , a1 , hexvar beqz v0 , hexvar sw a0 , hexvar ( sp ) andi v0 , a1 , num beqz v0 , hexvar move s0 , a1 addiu v1 , zero , num beq v0 , v1 , hexvar sltiu v1 , v0 , num bnez v1 , hexvar addiu v1 , zero , num beq v0 , v1 , hexvar addiu v1 , zero , num bne v0 , v1 , hexvar lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) move s0 , v1 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) sw v1 , hexvar ( sp ) move a3 , s0 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) andi s0 , s0 , num beqz s0 , hexvar move a3 , v1 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp )
push rbp push rbx mov rbp , rdi mov edi , esi sub rsp , num and edi , hexvar jne hexvar movzx eax , byte ptr [ rbp ] xor ecx , ecx lea rdx , [ rbp + num ] mov r9 , rax and r9d , hexvar test al , al jns hexvar nop dword ptr [ rax ] add rdx , num movzx esi , byte ptr [ rdx - num ] add ecx , num mov rax , rsi and eax , hexvar shl rax , cl or r9 , rax test sil , sil js hexvar movzx eax , byte ptr [ rdx ] lea rbx , [ rdx + num ] mov r8 , rax and r8d , hexvar test al , al jns hexvar nop add rbx , num movzx edx , byte ptr [ rbx - num ] add edi , num mov ecx , edi mov rax , rdx and eax , hexvar shl rax , cl or r8 , rax test dl , dl js hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov rcx , r9 mov edi , num xor eax , eax call hexvar add rsp , num mov rax , rbx pop rbx pop rbp ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar lea rax , [ rcx + num ] mov rdi , rsi mov rsi , rdx mov rdx , rax jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar lea rax , [ rcx + num ] mov rdi , rsi mov rsi , rdx mov rdx , rax jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar lea rax , [ rcx + num ] mov rdi , rsi mov rsi , rdx mov rdx , rax jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] add r2 , r3 , num ldr r3 , [ sp , hexvar ] ldr r1 , [ r3 , hexvar ] ldr r3 , [ sp , num ] str r3 , [ sp ] mov r3 , r1 ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar lea rax , [ rcx + num ] mov rdi , rsi mov rsi , rdx mov rdx , rax jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push eax add eax , num push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] add ecx , num sub esp , hexvar push dword ptr [ esp + hexvar ] push edx push ecx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar lea rax , [ rcx + num ] mov rdi , rsi mov rsi , rdx mov rdx , rax jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar lea rax , [ rcx + num ] mov rdi , rsi mov rsi , rdx mov rdx , rax jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar lea rax , [ rcx + num ] mov rdi , rsi mov rsi , rdx mov rdx , rax jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rax + hexvar ] jne hexvar xor ecx , ecx jmp hexvar lea edx , [ rcx + num ] mov esi , edx sar esi , hexvar shr esi , hexvar lea ecx , [ rcx + rsi ] add ecx , num and ecx , hexvar sub edx , ecx movsxd rdx , edx mov rcx , qword ptr [ rax + rdx * num + hexvar ] test rbx , rbx je hexvar test r14 , r14 je hexvar mov rsi , qword ptr [ rax + rdx * num + hexvar ] test rsi , rsi je hexvar mov qword ptr [ rbx ] , rsi mov eax , dword ptr [ rax + rdx * num + hexvar ] mov dword ptr [ r14 ] , eax jmp hexvar mov qword ptr [ rbx ] , hexvar mov dword ptr [ r14 ] , num mov rax , rcx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rax + hexvar ] jne hexvar xor ecx , ecx jmp hexvar lea edx , [ rcx + num ] mov esi , edx sar esi , hexvar shr esi , hexvar lea ecx , [ rcx + rsi ] add ecx , num and ecx , hexvar sub edx , ecx movsxd rdx , edx mov rcx , qword ptr [ rax + rdx * num + hexvar ] test rbx , rbx je hexvar test r14 , r14 je hexvar mov rsi , qword ptr [ rax + rdx * num + hexvar ] test rsi , rsi je hexvar mov qword ptr [ rbx ] , rsi mov eax , dword ptr [ rax + rdx * num + hexvar ] mov dword ptr [ r14 ] , eax jmp hexvar mov qword ptr [ rbx ] , hexvar mov dword ptr [ r14 ] , num mov rax , rcx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rax + hexvar ] jne hexvar xor ecx , ecx jmp hexvar lea edx , [ rcx + num ] mov esi , edx sar esi , hexvar shr esi , hexvar lea ecx , [ rcx + rsi ] add ecx , num and ecx , hexvar sub edx , ecx movsxd rdx , edx mov rcx , qword ptr [ rax + rdx * num + hexvar ] test rbx , rbx je hexvar test r14 , r14 je hexvar mov rsi , qword ptr [ rax + rdx * num + hexvar ] test rsi , rsi je hexvar mov qword ptr [ rbx ] , rsi mov eax , dword ptr [ rax + rdx * num + hexvar ] mov dword ptr [ r14 ] , eax jmp hexvar mov qword ptr [ rbx ] , hexvar mov dword ptr [ r14 ] , num mov rax , rcx add rsp , num pop rbx pop r14 ret
sub esp , hexvar call hexvar add eax , hexvar sub esp , num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num push num call hexvar add esp , hexvar add esp , hexvar ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rax + hexvar ] jne hexvar xor ecx , ecx jmp hexvar lea edx , [ rcx + num ] mov esi , edx sar esi , hexvar shr esi , hexvar lea ecx , [ rcx + rsi ] add ecx , num and ecx , hexvar sub edx , ecx movsxd rdx , edx mov rcx , qword ptr [ rax + rdx * num + hexvar ] test rbx , rbx je hexvar test r14 , r14 je hexvar mov rsi , qword ptr [ rax + rdx * num + hexvar ] test rsi , rsi je hexvar mov qword ptr [ rbx ] , rsi mov eax , dword ptr [ rax + rdx * num + hexvar ] mov dword ptr [ r14 ] , eax jmp hexvar mov qword ptr [ rbx ] , hexvar mov dword ptr [ r14 ] , num mov rax , rcx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rax + hexvar ] jne hexvar xor ecx , ecx jmp hexvar lea edx , [ rcx + num ] mov esi , edx sar esi , hexvar shr esi , hexvar lea ecx , [ rcx + rsi ] add ecx , num and ecx , hexvar sub edx , ecx movsxd rdx , edx mov rcx , qword ptr [ rax + rdx * num + hexvar ] test rbx , rbx je hexvar test r14 , r14 je hexvar mov rsi , qword ptr [ rax + rdx * num + hexvar ] test rsi , rsi je hexvar mov qword ptr [ rbx ] , rsi mov eax , dword ptr [ rax + rdx * num + hexvar ] mov dword ptr [ r14 ] , eax jmp hexvar mov qword ptr [ rbx ] , hexvar mov dword ptr [ r14 ] , num mov rax , rcx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rax + hexvar ] jne hexvar xor ecx , ecx jmp hexvar lea edx , [ rcx + num ] mov esi , edx sar esi , hexvar shr esi , hexvar lea ecx , [ rcx + rsi ] add ecx , num and ecx , hexvar sub edx , ecx movsxd rdx , edx mov rcx , qword ptr [ rax + rdx * num + hexvar ] test rbx , rbx je hexvar test r14 , r14 je hexvar mov rsi , qword ptr [ rax + rdx * num + hexvar ] test rsi , rsi je hexvar mov qword ptr [ rbx ] , rsi mov eax , dword ptr [ rax + rdx * num + hexvar ] mov dword ptr [ r14 ] , eax jmp hexvar mov qword ptr [ rbx ] , hexvar mov dword ptr [ r14 ] , num mov rax , rcx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rax + hexvar ] jne hexvar xor ecx , ecx jmp hexvar lea edx , [ rcx + num ] mov esi , edx sar esi , hexvar shr esi , hexvar lea ecx , [ rcx + rsi ] add ecx , num and ecx , hexvar sub edx , ecx movsxd rdx , edx mov rcx , qword ptr [ rax + rdx * num + hexvar ] test rbx , rbx je hexvar test r14 , r14 je hexvar mov rsi , qword ptr [ rax + rdx * num + hexvar ] test rsi , rsi je hexvar mov qword ptr [ rbx ] , rsi mov eax , dword ptr [ rax + rdx * num + hexvar ] mov dword ptr [ r14 ] , eax jmp hexvar mov qword ptr [ rbx ] , hexvar mov dword ptr [ r14 ] , num mov rax , rcx add rsp , num pop rbx pop r14 ret
push ebx call hexvar add ebx , hexvar sub esp , num call hexvar mov ecx , eax mov edx , dword ptr [ eax + hexvar ] xor eax , eax cmp edx , dword ptr [ ecx + hexvar ] je hexvar add edx , num mov eax , edx sar eax , hexvar shr eax , hexvar add edx , eax and edx , hexvar sub edx , eax lea edx , [ ecx + edx * num ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edx + hexvar ] test ecx , ecx je hexvar mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar mov ecx , dword ptr [ edx + hexvar ] test ecx , ecx je hexvar mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ ebx ] , ecx mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebx ] , edx add esp , num pop ebx ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi call hexvar mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rax + hexvar ] jne hexvar xor ecx , ecx jmp hexvar lea edx , [ rcx + num ] mov esi , edx sar esi , hexvar shr esi , hexvar lea ecx , [ rcx + rsi ] add ecx , num and ecx , hexvar sub edx , ecx movsxd rdx , edx mov rcx , qword ptr [ rax + rdx * num + hexvar ] test rbx , rbx je hexvar test r14 , r14 je hexvar mov rsi , qword ptr [ rax + rdx * num + hexvar ] test rsi , rsi je hexvar mov qword ptr [ rbx ] , rsi mov eax , dword ptr [ rax + rdx * num + hexvar ] mov dword ptr [ r14 ] , eax jmp hexvar mov qword ptr [ rbx ] , hexvar mov dword ptr [ r14 ] , num mov rax , rcx add rsp , num pop rbx pop r14 ret
push { r4 , lr } cmp r0 , num sub sp , sp , num mov r4 , r1 beq hexvar mov r1 , r4 bl hexvar cmp r0 , num movne r3 , num strne r3 , [ r0 , hexvar ] strne r3 , [ r0 , hexvar ] strne r3 , [ r0 , hexvar ] strne r3 , [ r0 , hexvar ] add sp , sp , num pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 beqz a0 , hexvar move s1 , a2 move a2 , s1 move a1 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw ra , hexvar ( sp ) sw zero , hexvar ( v0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar sub esp , num push hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp - num ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , s0 beqz v0 , hexvar lw ra , hexvar ( sp ) sw zero , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , s0 beqz v0 , hexvar lw ra , hexvar ( sp ) sw zero , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , s0 beqz v0 , hexvar lw ra , hexvar ( sp ) sw zero , hexvar ( v0 ) sw zero , hexvar ( v0 ) sw zero , hexvar ( v0 ) sw zero , hexvar ( v0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , hexvar sw a2 , hexvar ( sp ) jalr t9 move a0 , s0 lw gp , hexvar ( sp ) move a0 , v0 bnez v0 , hexvar lw a2 , hexvar ( sp ) b hexvar move v0 , zero
push { r4 , lr } cmp r0 , num sub sp , sp , num mov r4 , r1 beq hexvar mov r1 , r4 bl hexvar cmp r0 , num movne r3 , num strne r3 , [ r0 , hexvar ] strne r3 , [ r0 , hexvar ] strne r3 , [ r0 , hexvar ] strne r3 , [ r0 , hexvar ] add sp , sp , num pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a1 beqz a0 , hexvar move s1 , a2 move a2 , s1 move a1 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw ra , hexvar ( sp ) sw zero , hexvar ( v0 ) sw zero , hexvar ( v0 ) sw zero , hexvar ( v0 ) sw zero , hexvar ( v0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a1 , zero , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a0 , v0 b hexvar lw ra , hexvar ( sp )
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi push edx call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num add esp , num pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) bnez a0 , hexvar move s1 , a0 lw v1 , hexvar ( sp ) lw v0 , ( s3 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar lw a0 , hexvar ( a0 ) jal hexvar lw a0 , hexvar ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) bnez a0 , hexvar move s1 , a0 lw v1 , hexvar ( sp ) lw v0 , ( s3 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar lw a0 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx cmp dword ptr [ eax ] , num setne dl mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ecx ] mov dword ptr [ edx + hexvar ] , eax mov esp , ebp pop ebp ret
push ebp push edi push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test esi , esi jne hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , num pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov r13 , rdi mov rdi , qword ptr [ rdi + hexvar ] mov r14d , num call hexvar mov rdi , qword ptr [ r13 + hexvar ] call hexvar cmp byte ptr [ r13 + hexvar ] , num je hexvar mov rax , qword ptr [ r13 ] cmp rax , hexvar je hexvar cmp rax , hexvar je hexvar cmp rax , hexvar je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar mov qword ptr [ rsp ] , rax xor r12d , r12d mov r15d , hexvar nop word ptr cs : [ rax + rax ] lea rbx , [ r12 + r15 ] mov rdi , rsp shr rbx , num mov rbp , rbx shl rbp , num add rbp , hexvar mov rsi , rbp call hexvar test eax , eax js hexvar je hexvar lea r12 , [ rbx + num ] cmp r12 , r15 jb hexvar mov rbx , qword ptr [ r13 + num ] mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi xor eax , eax xor edi , edi call hexvar mov eax , hexvar jmp hexvar nop word ptr [ rax + rax ] cmp byte ptr [ r13 + hexvar ] , num sbb eax , eax not eax add eax , num mov r14d , eax mov dword ptr [ r13 + hexvar ] , r14d mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov r13 , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ r13 + hexvar ] call hexvar cmp byte ptr [ r13 + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num je hexvar mov r12 , qword ptr [ r13 ] cmp r12 , hexvar je hexvar cmp r12 , hexvar je hexvar cmp r12 , hexvar je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rax , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax mov r14d , hexvar xor r15d , r15d jmp hexvar nop dword ptr [ rax + rax ] je hexvar lea r15 , [ rbx + num ] cmp r14 , r15 jbe hexvar lea rcx , [ r15 + r14 ] mov rdi , qword ptr [ rsp + num ] mov rsi , rbp mov qword ptr [ rsp + hexvar ] , r12 shr rcx , num mov rax , rcx mov rbx , rcx shl rax , num lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov edx , num mov qword ptr [ rsp + hexvar ] , rax call hexvar test eax , eax jns hexvar mov r14 , rbx cmp r14 , r15 ja hexvar mov rbx , qword ptr [ r13 + num ] mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi xor eax , eax xor edi , edi call hexvar mov eax , hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsp + hexvar ] mov eax , dword ptr [ rax + num ] mov r15d , dword ptr [ rsp + hexvar ] cmp r15d , eax jb hexvar mov dword ptr [ r13 + hexvar ] , r15d mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx nop leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) bnez a0 , hexvar move s1 , a0 lw v1 , hexvar ( sp ) lw v0 , ( s3 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar lw a0 , hexvar ( a0 ) jal hexvar lw a0 , hexvar ( s1 )
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r12 , rdi call hexvar mov r14 , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , num mov rdx , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar test eax , eax js hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov r15d , eax xor ebx , ebx nop dword ptr [ rax + rax ] lea esi , [ r15 + rbx ] mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] call hexvar mov r13 , qword ptr [ rax + num ] lea rdi , [ r13 + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , r14 mov rsi , r13 call hexvar test eax , eax je hexvar add ebx , num cmp ebx , dword ptr [ rsp + hexvar ] jl hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar xor r14d , r14d mov rax , r14 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r12 , rdi call hexvar mov r14 , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , num mov rdx , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar test eax , eax js hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov r15d , eax xor ebx , ebx nop word ptr cs : [ rax + rax ] nop lea esi , [ r15 + rbx ] mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] call hexvar mov r13 , qword ptr [ rax + num ] lea rdi , [ r13 + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , r14 mov rsi , r13 call hexvar test eax , eax je hexvar add ebx , num cmp ebx , dword ptr [ rsp + hexvar ] jl hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar xor r14d , r14d mov rax , r14 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r12 , rdi call hexvar mov r14 , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , num mov rdx , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar test eax , eax js hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov r15d , eax xor ebx , ebx nop word ptr cs : [ rax + rax ] nop lea esi , [ r15 + rbx ] mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] call hexvar mov r13 , qword ptr [ rax + num ] lea rdi , [ r13 + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , r14 mov rsi , r13 call hexvar test eax , eax je hexvar add ebx , num cmp ebx , dword ptr [ rsp + hexvar ] jl hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar xor r14d , r14d mov rax , r14 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax call hexvar mov dword ptr [ esp + num ] , eax push hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax push eax mov edi , eax push hexvar push num call hexvar push hexvar push edi push hexvar push hexvar call hexvar add esp , hexvar lea edi , [ esp + hexvar ] push edi push esi push num push ebp call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push edi call hexvar push hexvar push dword ptr [ esp + hexvar ] push hexvar push num call hexvar mov eax , dword ptr [ ebp ] add esp , hexvar mov ecx , esi lea edx , [ esp + hexvar ] mov eax , dword ptr [ eax + num ] push edx mov edx , num call hexvar add esp , hexvar test eax , eax js hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , eax mov eax , num sub eax , edi mov dword ptr [ esp + hexvar ] , eax test esi , esi jg hexvar jmp hexvar nop mov eax , dword ptr [ esp + hexvar ] add eax , edi add edi , num cmp dword ptr [ esp + hexvar ] , eax jle hexvar mov eax , dword ptr [ ebp ] sub esp , num push edi push dword ptr [ eax + num ] call hexvar mov esi , dword ptr [ eax + num ] mov dword ptr [ esp ] , hexvar push dword ptr [ esp + hexvar ] push num push num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar push hexvar push dword ptr [ esp + hexvar ] push hexvar push hexvar call hexvar mov dword ptr [ esp ] , esi call hexvar pop eax pop edx push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , dword ptr [ esp + num ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s6 , hexvar ( sp ) lw s6 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) lui s5 , hexvar sw s3 , hexvar ( sp ) addiu s3 , sp , hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s4 , hexvar ( sp ) lw v0 , ( s6 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a3 , zero , hexvar lw gp , hexvar ( sp ) addiu a2 , s5 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move s2 , v0 addiu a1 , zero , num lw v0 , ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s6 , hexvar ( sp ) lw s6 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) lui s5 , hexvar sw s4 , hexvar ( sp ) addiu s4 , sp , hexvar sw s3 , hexvar ( sp ) addiu s3 , sp , hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw v0 , ( s6 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a3 , zero , hexvar lw gp , hexvar ( sp ) addiu a2 , s5 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move s2 , v0 addiu a1 , zero , num lw v0 , ( s1 ) move a3 , s3 move a2 , s0 jal hexvar lw a0 , num ( v0 )
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r12 , rdi call hexvar mov r14 , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , num mov rdx , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar test eax , eax js hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov r15d , eax xor ebx , ebx nop word ptr cs : [ rax + rax ] nop lea esi , [ r15 + rbx ] mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] call hexvar mov r13 , qword ptr [ rax + num ] lea rdi , [ r13 + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , r14 mov rsi , r13 call hexvar test eax , eax je hexvar add ebx , num cmp ebx , dword ptr [ rsp + hexvar ] jl hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar xor r14d , r14d mov rax , r14 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s1 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s2 , v0 addiu a3 , zero , hexvar lui s0 , hexvar addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a3 , zero , hexvar addiu a2 , s0 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a3 , sp , hexvar move a2 , s1 addiu a1 , zero , num move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) addiu a3 , zero , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , ( s3 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s6 , hexvar ( sp ) lw s6 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) lui s5 , hexvar sw s4 , hexvar ( sp ) addiu s4 , sp , hexvar sw s3 , hexvar ( sp ) addiu s3 , sp , hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw v0 , ( s6 ) sw v0 , hexvar ( sp ) jalr t9 nop addiu a3 , zero , hexvar lw gp , hexvar ( sp ) addiu a2 , s5 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move s2 , v0 addiu a1 , zero , num lw v0 , ( s1 ) move a3 , s3 move a2 , s0 jal hexvar lw a0 , num ( v0 )
push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rsi mov r12 , rdi call hexvar mov r14 , rax mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar lea rcx , [ rsp + hexvar ] mov rdi , r12 mov esi , num mov rdx , r15 call hexvar test eax , eax je hexvar mov eax , dword ptr [ rsp + hexvar ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] lea rcx , [ rsp + hexvar ] mov esi , num mov rdx , r15 call hexvar test eax , eax js hexvar cmp dword ptr [ rsp + hexvar ] , num jle hexvar mov r15d , eax xor ebx , ebx nop word ptr cs : [ rax + rax ] nop lea esi , [ r15 + rbx ] mov rax , qword ptr [ r12 ] mov rdi , qword ptr [ rax + num ] call hexvar mov r13 , qword ptr [ rax + num ] lea rdi , [ r13 + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , r14 mov rsi , r13 call hexvar test eax , eax je hexvar add ebx , num cmp ebx , dword ptr [ rsp + hexvar ] jl hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar xor r14d , r14d mov rax , r14 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 ret
cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rdx , rdi mov edi , hexvar mov esi , hexvar mov ecx , hexvar mov r8d , num mov r9d , num jmp hexvar mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar sub esp , num push num push num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar jmp hexvar mov eax , num add esp , num pop ebx ret
lw v0 , hexvar ( a0 ) beqz v0 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a2 , a0 lui a3 , hexvar sw ra , hexvar ( sp ) lui a1 , hexvar sw gp , hexvar ( sp ) lui a0 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , num addiu a3 , a3 , - hexvar addiu a1 , a1 , - hexvar sw v0 , hexvar ( sp ) addiu a0 , a0 , - hexvar jalr t9 sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra addiu v0 , zero , num
cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rdx , rdi mov edi , hexvar mov esi , hexvar mov ecx , hexvar mov r8d , num mov r9d , num jmp hexvar mov eax , num ret
cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rdx , rdi mov edi , hexvar mov esi , hexvar mov ecx , hexvar mov r8d , num mov r9d , num jmp hexvar mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 ) beqz v0 , hexvar move a2 , a0 addiu v0 , zero , num sw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar lui a1 , hexvar addiu a1 , a1 , hexvar lui a0 , hexvar addiu a0 , a0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , num
cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rdx , rdi mov edi , hexvar mov esi , hexvar mov ecx , hexvar mov r8d , num mov r9d , num jmp hexvar mov eax , num ret
cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rdx , rdi mov edi , hexvar mov esi , hexvar mov ecx , hexvar mov r8d , num mov r9d , num jmp hexvar mov eax , num ret
push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , num cmp dword ptr [ edx + hexvar ] , num je hexvar sub esp , num push num push num lea eax , [ ebx - hexvar ] push eax push edx lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx + hexvar ] push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] or eax , num mov dword ptr [ ebp + num ] , eax xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor al , hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] or eax , num mov dword ptr [ ebp + num ] , eax xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor al , hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] sub eax , hexvar add eax , num add eax , hexvar mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , hexvar setb al mov byte ptr [ rbp - num ] , al mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar mov qword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] or rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , - num mov rcx , qword ptr [ rbp - hexvar ] cmp rax , rcx setne dl mov byte ptr [ rbp - hexvar ] , dl xor eax , eax mov cl , al mov dl , byte ptr [ rbp - hexvar ] test dl , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar xor al , hexvar mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] or eax , num mov dword ptr [ ebp + num ] , eax xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor al , hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
cmp eax , hexvar mov ecx , hexvar cmovae ecx , eax or ecx , num cmp ecx , - num je hexvar push ebp push edi mov ebp , hexvar push esi push ebx lea esi , [ esi ] mov eax , ecx mov edi , ecx mul ebp mov eax , edx shr eax , num lea eax , [ eax + eax * num ] sub edi , eax cmp ecx , num mov eax , edi jbe hexvar test edi , edi je hexvar mov edi , hexvar mov esi , num mov ebx , num jmp hexvar nop lea esi , [ esi ] add edi , num test edx , edx je hexvar add ebx , num xor edx , edx mov eax , ecx div ebx add esi , edi cmp esi , ecx mov eax , edx jb hexvar test eax , eax jne hexvar add ecx , num cmp ecx , - num jne hexvar pop ebx mov eax , ecx pop esi pop edi pop ebp ret
cmp r0 , hexvar movlo r0 , hexvar push { r4 , r5 , r6 , r7 , r8 , lr } orr r6 , r0 , num cmn r6 , num beq hexvar ldr r8 , [ pc , hexvar ] umull r2 , r3 , r6 , r8 lsr r3 , r3 , num add r3 , r3 , r3 , lsl num cmp r6 , num sub r3 , r6 , r3 bls hexvar cmp r3 , num beq hexvar mov r7 , hexvar mov r5 , num mov r4 , num b hexvar cmp r1 , num add r7 , r7 , num beq hexvar add r4 , r4 , num mov r1 , r4 mov r0 , r6 bl hexvar add r5 , r5 , r7 cmp r5 , r6 mov r3 , r1 blo hexvar cmp r3 , num bne hexvar add r6 , r6 , num cmn r6 , num bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , hexvar jae hexvar mov qword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rbp - num ] or rax , num mov qword ptr [ rbp - num ] , rax xor eax , eax mov cl , al mov rdx , - num cmp rdx , qword ptr [ rbp - num ] mov byte ptr [ rbp - num ] , cl je hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov cl , al xor cl , hexvar and cl , num mov dl , num xor dl , num and al , dl or cl , al mov byte ptr [ rbp - num ] , cl mov al , byte ptr [ rbp - num ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movabs rcx , hexvar add rax , rcx add rax , num sub rax , rcx mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] sub ecx , hexvar setb dl movzx esi , dl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp esi mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp + num ] or al , num mov byte ptr [ ebp + num ] , al mov ecx , dword ptr [ hexvar ] jmp ecx mov eax , dword ptr [ ebp + num ] sub eax , - num setne cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] xor ebx , ebx mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar xor al , num mov ecx , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp ecx mov al , byte ptr [ ebp - hexvar ] movzx ecx , al and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] or eax , num mov dword ptr [ ebp + num ] , eax xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor al , hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jae hexvar mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , eax xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , num xor edx , hexvar mov edi , ecx and edi , hexvar and eax , edx mov ebx , esi and ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edx and eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] or edi , eax mov eax , dword ptr [ ebp - hexvar ] or ebx , eax xor edi , ebx or ecx , esi xor ecx , hexvar or edx , hexvar and ecx , edx or edi , ecx mov dword ptr [ ebp + num ] , edi xor eax , eax mov cl , al mov eax , hexvar cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov cl , al xor cl , hexvar and cl , num mov dl , num xor dl , num and al , dl or cl , al mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar add eax , num sub eax , hexvar mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] lea eax , [ ebx + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar add esi , hexvar mov edx , dword ptr [ esi ] test edx , edx je hexvar mov ecx , hexvar mov edi , edx mov eax , num repne scasb al , byte ptr es : [ edi ] not ecx lea edi , [ ecx - num ] sub esp , num push edi push edx push ebp call hexvar add esp , hexvar test eax , eax jne hexvar add edi , ebp movzx eax , byte ptr [ edi ] cmp al , hexvar je hexvar test al , al jne hexvar mov eax , dword ptr [ esi + num ] mov edx , dword ptr [ esi + num ] or dword ptr [ eax ] , edx mov eax , dword ptr [ esp + num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num cmp dword ptr [ esi ] , num je hexvar mov ebp , edi cmp byte ptr [ ebp ] , hexvar sete al movzx eax , al add ebp , eax cmp byte ptr [ ebp ] , num je hexvar lea esi , [ ebx - hexvar ] lea edx , [ ebx - hexvar ] jmp hexvar mov ebp , edi sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push ebp push eax call hexvar add esp , num push hexvar push ebp call hexvar add esp , hexvar mov ebp , eax test eax , eax jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] lea edx , [ ebx + hexvar ] movzx eax , byte ptr [ edi ] mov dword ptr [ esp + num ] , edx lea edx , [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , edx lea esi , [ esi ] test al , al je hexvar mov ecx , num lea esi , [ ebx - hexvar ] lea ebp , [ ebx - hexvar ] jmp hexvar nop lea esi , [ esi ] sub esp , hexvar push ebp call hexvar add esp , hexvar mov ecx , eax sub esp , num push ecx mov dword ptr [ esp + hexvar ] , ecx push ebp push edi call hexvar add esp , hexvar test eax , eax jne hexvar mov ecx , dword ptr [ esp + num ] add ecx , edi movzx eax , byte ptr [ ecx ] cmp al , hexvar je hexvar test al , al je hexvar add esi , hexvar mov ebp , dword ptr [ esi ] test ebp , ebp jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar pop edx pop ecx push edi push eax call hexvar pop esi pop ebp push hexvar push edi call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar movzx eax , byte ptr [ edi ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ edi + num ] add edi , num test al , al jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r12 , rdi lea r15 , [ rip + hexvar ] mov r14 , - num mov r13d , num jmp hexvar add rbp , hexvar mov rsi , qword ptr [ rbp ] test rsi , rsi je hexvar mov rcx , r14 mov rdi , rsi mov eax , r13d repne scasb al , byte ptr [ rdi ] not rcx lea rbx , [ rcx - num ] mov rdx , rbx mov rdi , r12 call hexvar test eax , eax jne hexvar add rbx , r12 movzx eax , byte ptr [ rbx ] cmp al , hexvar je hexvar test al , al jne hexvar mov rax , qword ptr [ rbp + num ] mov edx , dword ptr [ rbp + hexvar ] or dword ptr [ rax ] , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp ] , num je hexvar mov r12 , rbx cmp byte ptr [ r12 ] , hexvar sete al movzx eax , al add r12 , rax cmp byte ptr [ r12 ] , num je hexvar lea rbp , [ rip + hexvar ] mov rsi , r15 jmp hexvar mov r12 , rbx mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , r12 mov rdi , rax mov eax , r13d call hexvar mov esi , hexvar mov rdi , r12 call hexvar mov r12 , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s7 , hexvar ( sp ) lui s7 , hexvar sw s6 , hexvar ( sp ) lui s6 , hexvar sw s5 , hexvar ( sp ) lui s5 , hexvar sw s3 , hexvar ( sp ) addiu s7 , s7 , - hexvar sw ra , hexvar ( sp ) addiu s5 , s5 , - hexvar sw s4 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lb v0 , ( a0 ) beqz v0 , hexvar lw ra , hexvar ( sp ) addiu s0 , zero , num addiu s2 , s6 , hexvar addiu s4 , zero , hexvar b hexvar move s1 , s5 jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , s0 move a1 , s1 jalr t9 move a0 , s3 addu s0 , s3 , s0 lw gp , hexvar ( sp ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) lb v0 , ( s0 ) beq v0 , s4 , hexvar nop beqz v0 , hexvar nop addiu s2 , s2 , hexvar lw s1 , ( s2 ) bnez s1 , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) addiu a2 , zero , num move a0 , zero jalr t9 move a1 , s7 move a1 , s3 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 addiu a1 , zero , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s3 lw gp , hexvar ( sp ) beqz v0 , hexvar move s3 , v0 lb v0 , ( s3 ) addiu v1 , zero , hexvar bne v0 , v1 , hexvar nop lb v0 , num ( s3 ) bnez v0 , hexvar addiu s3 , s3 , num lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v1 , num ( s2 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s7 , hexvar ( sp ) lui s7 , hexvar sw s6 , hexvar ( sp ) lui s6 , hexvar sw s5 , hexvar ( sp ) lui s5 , hexvar sw s3 , hexvar ( sp ) addiu s7 , s7 , hexvar sw ra , hexvar ( sp ) addiu s5 , s5 , hexvar sw s4 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lb v0 , ( a0 ) beqz v0 , hexvar lw ra , hexvar ( sp ) addiu s0 , zero , num addiu s2 , s6 , - hexvar addiu s4 , zero , hexvar b hexvar move s1 , s5 jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , s0 move a1 , s1 jalr t9 move a0 , s3 addu s0 , s3 , s0 lw gp , hexvar ( sp ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) lb v0 , ( s0 ) beq v0 , s4 , hexvar nop beqz v0 , hexvar nop addiu s2 , s2 , hexvar lw s1 , ( s2 ) bnez s1 , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) addiu a2 , zero , num move a0 , zero jalr t9 move a1 , s7 move a1 , s3 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 addiu a1 , zero , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s3 lw gp , hexvar ( sp ) beqz v0 , hexvar move s3 , v0 lb v0 , ( s3 ) addiu v1 , zero , hexvar bne v0 , v1 , hexvar nop lb v0 , num ( s3 ) bnez v0 , hexvar addiu s3 , s3 , num lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v1 , num ( s2 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r12 , rdi lea r15 , [ rip + hexvar ] mov r14 , - num mov r13d , num jmp hexvar add rbp , hexvar mov rsi , qword ptr [ rbp ] test rsi , rsi je hexvar mov rcx , r14 mov rdi , rsi mov eax , r13d repne scasb al , byte ptr [ rdi ] not rcx lea rbx , [ rcx - num ] mov rdx , rbx mov rdi , r12 call hexvar test eax , eax jne hexvar add rbx , r12 movzx eax , byte ptr [ rbx ] cmp al , hexvar je hexvar test al , al jne hexvar mov rax , qword ptr [ rbp + num ] mov edx , dword ptr [ rbp + hexvar ] or dword ptr [ rax ] , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp ] , num je hexvar mov r12 , rbx cmp byte ptr [ r12 ] , hexvar sete al movzx eax , al add r12 , rax cmp byte ptr [ r12 ] , num je hexvar lea rbp , [ rip + hexvar ] mov rsi , r15 jmp hexvar mov r12 , rbx mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , r12 mov rdi , rax mov eax , r13d call hexvar mov esi , hexvar mov rdi , r12 call hexvar mov r12 , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r12 , rdi lea r15 , [ rip + hexvar ] mov r14 , - num mov r13d , num jmp hexvar add rbp , hexvar mov rsi , qword ptr [ rbp ] test rsi , rsi je hexvar mov rcx , r14 mov rdi , rsi mov eax , r13d repne scasb al , byte ptr [ rdi ] not rcx lea rbx , [ rcx - num ] mov rdx , rbx mov rdi , r12 call hexvar test eax , eax jne hexvar add rbx , r12 movzx eax , byte ptr [ rbx ] cmp al , hexvar je hexvar test al , al jne hexvar mov rax , qword ptr [ rbp + num ] mov edx , dword ptr [ rbp + hexvar ] or dword ptr [ rax ] , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp ] , num je hexvar mov r12 , rbx cmp byte ptr [ r12 ] , hexvar sete al movzx eax , al add r12 , rax cmp byte ptr [ r12 ] , num je hexvar lea rbp , [ rip + hexvar ] mov rsi , r15 jmp hexvar mov r12 , rbx mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , r12 mov rdi , rax mov eax , r13d call hexvar mov esi , hexvar mov rdi , r12 call hexvar mov r12 , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] lea edx , [ ebx + hexvar ] movzx eax , byte ptr [ edi ] mov dword ptr [ esp + num ] , edx lea edx , [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , edx lea esi , [ esi ] test al , al je hexvar mov ecx , num lea esi , [ ebx - hexvar ] lea ebp , [ ebx - hexvar ] jmp hexvar nop lea esi , [ esi ] sub esp , hexvar push ebp call hexvar add esp , hexvar mov ecx , eax sub esp , num push ecx mov dword ptr [ esp + hexvar ] , ecx push ebp push edi call hexvar add esp , hexvar test eax , eax jne hexvar mov ecx , dword ptr [ esp + num ] add ecx , edi movzx eax , byte ptr [ ecx ] cmp al , hexvar je hexvar test al , al je hexvar add esi , hexvar mov ebp , dword ptr [ esi ] test ebp , ebp jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar pop edx pop ecx push edi push eax call hexvar pop esi pop ebp push hexvar push edi call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar movzx eax , byte ptr [ edi ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ edi + num ] add edi , num test al , al jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r12 , rdi lea r15 , [ rip + hexvar ] mov r14 , - num mov r13d , num jmp hexvar add rbp , hexvar mov rsi , qword ptr [ rbp ] test rsi , rsi je hexvar mov rcx , r14 mov rdi , rsi mov eax , r13d repne scasb al , byte ptr [ rdi ] not rcx lea rbx , [ rcx - num ] mov rdx , rbx mov rdi , r12 call hexvar test eax , eax jne hexvar add rbx , r12 movzx eax , byte ptr [ rbx ] cmp al , hexvar je hexvar test al , al jne hexvar mov rax , qword ptr [ rbp + num ] mov edx , dword ptr [ rbp + hexvar ] or dword ptr [ rax ] , edx cmp dword ptr [ rip + hexvar ] , num je hexvar mov dword ptr [ rip + hexvar ] , num cmp qword ptr [ rbp ] , num je hexvar mov r12 , rbx cmp byte ptr [ r12 ] , hexvar sete al movzx eax , al add r12 , rax cmp byte ptr [ r12 ] , num je hexvar lea rbp , [ rip + hexvar ] mov rsi , r15 jmp hexvar mov r12 , rbx mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , r12 mov rdi , rax mov eax , r13d call hexvar mov esi , hexvar mov rdi , r12 call hexvar mov r12 , rax test rax , rax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] lea edx , [ ebx + hexvar ] movzx eax , byte ptr [ edi ] mov dword ptr [ esp + num ] , edx lea edx , [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , edx lea esi , [ esi ] test al , al je hexvar mov ecx , num lea esi , [ ebx - hexvar ] lea ebp , [ ebx - hexvar ] jmp hexvar nop lea esi , [ esi ] sub esp , hexvar push ebp call hexvar add esp , hexvar mov ecx , eax sub esp , num push ecx mov dword ptr [ esp + hexvar ] , ecx push ebp push edi call hexvar add esp , hexvar test eax , eax jne hexvar mov ecx , dword ptr [ esp + num ] add ecx , edi movzx eax , byte ptr [ ecx ] cmp al , hexvar je hexvar test al , al je hexvar add esi , hexvar mov ebp , dword ptr [ esi ] test ebp , ebp jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar pop edx pop ecx push edi push eax call hexvar pop esi pop ebp push hexvar push edi call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar movzx eax , byte ptr [ edi ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ edi + num ] add edi , num test al , al jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] xor edx , hexvar and ecx , edx cmp ecx , num setne bl xor bl , hexvar xor bl , hexvar and bl , num movzx ecx , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , num pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] not eax and eax , dword ptr [ ebp + num ] test eax , eax setne al leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ eax ] , hexvar mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] xor ecx , hexvar mov edx , dword ptr [ ebp - hexvar ] and edx , ecx cmp edx , num setne bl xor bl , hexvar xor bl , hexvar and bl , num movzx eax , bl lea esp , [ ebp - num ] pop ebx pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] mvn r2 , r3 ldr r3 , [ fp , - hexvar ] and r3 , r3 , r2 cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , hexvar mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ eax ] xor edx , hexvar and ecx , edx cmp ecx , num setne bl xor bl , hexvar xor bl , hexvar and bl , num movzx eax , bl lea esp , [ ebp - num ] pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov esi , edx xor esi , hexvar and esi , hexvar mov edi , hexvar mov ebx , edi xor ebx , hexvar and edx , ebx or esi , edx xor ecx , hexvar xor esi , hexvar xor edi , hexvar or ecx , esi or edi , hexvar xor ecx , hexvar and ecx , edi cmp ecx , num setne cl mov ch , cl xor ch , hexvar and ch , num mov dl , num mov dh , dl xor dh , num and cl , dh or ch , cl mov cl , ch xor cl , hexvar and cl , num xor dl , num and ch , dl or cl , ch and cl , num movzx esi , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi add esp , num pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] xor edx , hexvar and ecx , edx cmp ecx , num setne bl xor bl , hexvar xor bl , hexvar and bl , num movzx ecx , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , num pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] not eax and eax , dword ptr [ ebp + num ] test eax , eax setne al leave ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] mvn r2 , r3 ldr r3 , [ fp , - hexvar ] and r3 , r3 , r2 cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push ebx sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] xor edx , hexvar and ecx , edx cmp ecx , num setne bl xor bl , hexvar xor bl , hexvar and bl , num movzx ecx , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , num pop ebx pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r4 , r0 mov r6 , r1 mov r1 , num bl hexvar subs r5 , r0 , num moveq r4 , num beq hexvar mov r3 , r6 mov r2 , hexvar mla r1 , r2 , r4 , r6 mov r8 , r5 cmp r3 , r1 bne hexvar sub r6 , r8 , r5 asr r6 , r6 , num ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , r6 mov r0 , r5 bl hexvar cmp r8 , r5 movhi r3 , r5 movhi r7 , num subhi r2 , r8 , num bhi hexvar mov r7 , num b hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num strne r3 , [ r8 ] addne r8 , r8 , num add r3 , r3 , hexvar b hexvar ldr r0 , [ r1 ] ldr r1 , [ r3 , num ] ! ldr r0 , [ r0 , hexvar ] ldr r1 , [ r1 , hexvar ] cmp r0 , r1 addne r7 , r7 , num mov r1 , r3 cmp r3 , r2 blo hexvar mov r3 , hexvar mla sb , r7 , r3 , r3 add r6 , sb , r6 , lsl num mov r0 , r6 bl hexvar subs r4 , r0 , num bne hexvar mov r0 , r5 bl hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldmpl r0 ! , { r0 , r3 , r5 , r6 , r7 , r8 , fp , ip , lr } ^ andeq r0 , r0 , r0
addiu sp , sp , - hexvar lui gp , hexvar lui t9 , hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) addiu a3 , zero , num sw s0 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) move a2 , zero sw ra , hexvar ( sp ) move a0 , zero sw s5 , hexvar ( sp ) addiu t9 , t9 , - hexvar sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s0 , a1 sw s2 , hexvar ( sp ) bal hexvar move a1 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) move s2 , v0 move s4 , v0 move v0 , zero move a1 , s0 beq v0 , s1 , hexvar subu s0 , s4 , s2 lw v1 , hexvar ( a1 )
addiu sp , sp , - hexvar lui gp , hexvar lui t9 , hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) addiu a3 , zero , num sw s0 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) move a2 , zero sw ra , hexvar ( sp ) move a0 , zero sw s5 , hexvar ( sp ) addiu t9 , t9 , hexvar sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s0 , a1 sw s2 , hexvar ( sp ) jalr t9 move a1 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) move s2 , v0 move s4 , v0 move v0 , zero move a1 , s0 beq v0 , s1 , hexvar subu s0 , s4 , s2 lw v1 , hexvar ( a1 )
addiu sp , sp , - hexvar lui gp , hexvar lui t9 , hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) addiu a3 , zero , num sw s0 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) move a2 , zero sw ra , hexvar ( sp ) move a0 , zero sw s5 , hexvar ( sp ) addiu t9 , t9 , - hexvar sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s0 , a1 sw s2 , hexvar ( sp ) jalr t9 move a1 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) move s2 , v0 move s4 , v0 move v0 , zero move a1 , s0 beq v0 , s1 , hexvar subu s0 , s4 , s2 lw v1 , hexvar ( a1 ) beqz v1 , hexvar addiu v0 , v0 , num sw a1 , ( s4 )
addiu sp , sp , - hexvar lui gp , hexvar lui t9 , hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) addiu a3 , zero , num sw s0 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) move a2 , zero sw ra , hexvar ( sp ) move a0 , zero sw s5 , hexvar ( sp ) addiu t9 , t9 , - hexvar sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s0 , a1 sw s2 , hexvar ( sp ) bal hexvar move a1 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) move s2 , v0 move s4 , v0 move v0 , zero move a1 , s0 beq v0 , s1 , hexvar subu s0 , s4 , s2 lw v1 , hexvar ( a1 ) beqz v1 , hexvar addiu v0 , v0 , num sw a1 , ( s4 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov esi , edx push num push num mov edx , num push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar mov ebp , eax mov eax , esi imul edi , edi , hexvar add esi , edi mov dword ptr [ esp + num ] , ebp mov edx , ebp cmp eax , esi jne hexvar mov dword ptr [ esp + num ] , edx mov edi , edx sub edi , ebp sar edi , num lea eax , [ ebx - hexvar ] push eax push num push edi push ebp call hexvar add esp , hexvar cmp dword ptr [ esp + num ] , ebp ja hexvar mov dword ptr [ esp + num ] , num mov eax , dword ptr [ esp + num ] lea esi , [ eax + num ] imul esi , esi , hexvar lea eax , [ esi + edi * num ] mov dword ptr [ esp + hexvar ] , eax sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , num push edx push eax call hexvar mov edi , eax add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar lui t9 , hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) addiu a3 , zero , num sw s0 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) move a2 , zero sw ra , hexvar ( sp ) move a0 , zero sw s5 , hexvar ( sp ) addiu t9 , t9 , - hexvar sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s0 , a1 sw s2 , hexvar ( sp ) bal hexvar move a1 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) move s2 , v0 move s4 , v0 move v0 , zero move a1 , s0 beq v0 , s1 , hexvar subu s0 , s4 , s2 lw v1 , hexvar ( a1 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r4 , r0 mov r6 , r1 mov r1 , num bl hexvar subs r5 , r0 , num moveq r4 , num beq hexvar mov r3 , r6 mov r2 , hexvar mla r1 , r2 , r4 , r6 mov r8 , r5 cmp r3 , r1 bne hexvar sub r6 , r8 , r5 asr r6 , r6 , num ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , r6 mov r0 , r5 bl hexvar cmp r8 , r5 movhi r3 , r5 movhi r7 , num subhi r2 , r8 , num bhi hexvar mov r7 , num b hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num strne r3 , [ r8 ] addne r8 , r8 , num add r3 , r3 , hexvar b hexvar ldr r0 , [ r1 ] ldr r1 , [ r3 , num ] ! ldr r0 , [ r0 , hexvar ] ldr r1 , [ r1 , hexvar ] cmp r0 , r1 addne r7 , r7 , num mov r1 , r3 cmp r3 , r2 blo hexvar mov r3 , hexvar mla sb , r7 , r3 , r3 add r6 , sb , r6 , lsl num mov r0 , r6 bl hexvar subs r4 , r0 , num bne hexvar mov r0 , r5 bl hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } sbcsne lr , ip , r4 , lsl r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov esi , edx push num push num mov edx , num push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar mov ebp , eax mov eax , esi imul edi , edi , hexvar add esi , edi mov dword ptr [ esp + num ] , ebp mov edx , ebp cmp eax , esi jne hexvar mov dword ptr [ esp + num ] , edx mov edi , edx sub edi , ebp sar edi , num lea eax , [ ebx - hexvar ] push eax push num push edi push ebp call hexvar add esp , hexvar cmp dword ptr [ esp + num ] , ebp ja hexvar mov dword ptr [ esp + num ] , num mov eax , dword ptr [ esp + num ] lea esi , [ eax + num ] imul esi , esi , hexvar lea eax , [ esi + edi * num ] mov dword ptr [ esp + hexvar ] , eax sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , num push edx push eax call hexvar mov edi , eax add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) move v1 , a0 move v0 , zero addiu a3 , zero , num move a2 , zero move a1 , v1 move a0 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx lea edx , [ hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov dword ptr [ esp ] , num lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov dword ptr [ esp ] , num lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar addiu v0 , v0 , num move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lui v0 , hexvar sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , zero move a1 , v0 addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , zero move a1 , v0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , zero move a1 , v0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , zero move a1 , v0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , zero move a1 , v0 addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , zero move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop lw v0 , - hexvar ( gp ) lw v1 , hexvar ( fp ) lw v0 , ( v0 ) beq v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx lea edx , [ hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx lea edx , [ hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar add r3 , r3 , num mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - hexvar ] mov r3 , hexvar str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r2 , num mov r1 , r3 mov r0 , hexvar bl hexvar sub r3 , fp , hexvar mov r2 , num mov r1 , r3 mov r0 , num bl hexvar sub r3 , fp , hexvar mov r2 , num mov r1 , r3 mov r0 , num bl hexvar sub r3 , fp , hexvar mov r2 , num mov r1 , r3 mov r0 , num bl hexvar sub r3 , fp , hexvar mov r2 , num mov r1 , r3 mov r0 , hexvar bl hexvar sub r3 , fp , hexvar mov r2 , num mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx lea edx , [ hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx lea edx , [ hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx lea edx , [ hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx lea edx , [ hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ esp ] , hexvar lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , hexvar lea eax , [ ebp - hexvar ] add eax , num push eax call hexvar add esp , hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar sub esp , num push num lea eax , [ ebp - hexvar ] push eax push hexvar call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebp - hexvar ] push eax push num call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebp - hexvar ] push eax push num call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebp - hexvar ] push eax push num call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebp - hexvar ] push eax push hexvar call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop mov eax , dword ptr [ ebp - hexvar ] xor eax , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push rax mov qword ptr [ rsp ] , rdi mov rdi , qword ptr [ rip ] jmp rdi mov rax , qword ptr [ rsp ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp ] add rax , hexvar mov rdi , rax mov esi , hexvar call hexvar mov rax , qword ptr [ rsp ] mov rdi , rax mov esi , hexvar call hexvar mov rax , qword ptr [ rsp ] add rax , hexvar mov rdi , rax mov esi , hexvar call hexvar xor eax , eax mov rsi , qword ptr [ rsp ] mov qword ptr [ rsi + hexvar ] , num pop rcx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar mov rdi , rbx call hexvar lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar mov rdi , rbx call hexvar lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar mov rdi , rbx call hexvar lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar mov rdi , rbx call hexvar lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar mov rdi , rbx call hexvar lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar mov rdi , rbx call hexvar lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] cmp rax , num setne cl mov byte ptr [ rsp + hexvar ] , cl mov al , byte ptr [ rsp + hexvar ] test al , num jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] add rax , hexvar mov rdi , rax mov esi , hexvar call hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] mov rdi , rax mov esi , hexvar call hexvar mov rax , qword ptr [ rsp + hexvar ] add rax , hexvar mov rdi , rax mov esi , hexvar call hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx + hexvar ] , num add rsp , hexvar ret
push rbx mov rbx , rdi mov eax , dword ptr [ rip ] test eax , eax jne hexvar mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al popfq add eax , num
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov esi , hexvar call hexvar mov esi , hexvar mov rdi , rbx call hexvar lea rdi , [ rbx + hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num xor eax , eax pop rbx ret
push { fp , lr } umull fp , ip , r0 , r1 adds r3 , ip , num movne r3 , num cmp fp , num blt hexvar cmp r3 , num bne hexvar bl hexvar cmp r0 , num popne { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
mov rax , rdi sub rsp , num mul rsi seto dl test rax , rax js hexvar movzx edx , dl test rdx , rdx jne hexvar call hexvar test rax , rax je hexvar add rsp , num ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ecx , num mov eax , dword ptr [ ebp + num ] mul dword ptr [ ebp + hexvar ] jno hexvar mov ecx , num test eax , eax jns hexvar mov ecx , num mov eax , ecx and eax , num test al , al jne hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] xor esi , esi mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , edx mov edx , esi mov esi , dword ptr [ ebp - hexvar ] div esi
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) move a0 , zero lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) multu v1 , v0 mflo v1 mfhi v0 srl a3 , v0 , num move a2 , zero beqz a3 , hexvar nop addiu a0 , zero , num bgez v1 , hexvar nop addiu a0 , zero , num move v0 , a0 andi v0 , v0 , num andi v0 , v0 , hexvar bnez v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar xor ecx , ecx mov edx , ecx div qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - num ] jb hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
cmp qword ptr [ rdi + num ] , num mov ecx , dword ptr [ rdi ] jne hexvar xor eax , eax cmp ecx , num mov ecx , num jne hexvar mov eax , ecx ret
call hexvar add eax , hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] test eax , eax jne hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] cmp eax , num jne hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] ret
sub sp , sp , num str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] b hexvar mov r3 , num mov r0 , r3 add sp , sp , num bx lr
cmp qword ptr [ rdi + num ] , num mov ecx , dword ptr [ rdi ] jne hexvar xor eax , eax cmp ecx , num mov ecx , num jne hexvar mov eax , ecx ret
cmp qword ptr [ rdi + num ] , num mov ecx , dword ptr [ rdi ] jne hexvar xor eax , eax cmp ecx , num mov ecx , num jne hexvar mov eax , ecx ret
lw v1 , num ( a0 ) beqz v1 , hexvar lw v0 , ( a0 ) jr ra nop addiu v1 , zero , num beq v0 , v1 , hexvar nop jr ra move v0 , zero
cmp qword ptr [ rdi + num ] , num mov ecx , dword ptr [ rdi ] jne hexvar xor eax , eax cmp ecx , num mov ecx , num jne hexvar mov eax , ecx ret
cmp qword ptr [ rdi + num ] , num mov ecx , dword ptr [ rdi ] jne hexvar xor eax , eax cmp ecx , num mov ecx , num jne hexvar mov eax , ecx ret
sub sp , sp , num str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] b hexvar mov r3 , num mov r0 , r3 add sp , sp , num bx lr
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] test edx , edx je hexvar ret nop cmp eax , num mov edx , num cmovne eax , edx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s1 , hexvar ( a0 )
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ]
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov dword ptr [ rax + hexvar ] , num mov cl , byte ptr [ rax + hexvar ] mov byte ptr [ rsp + hexvar ] , cl mov al , byte ptr [ rax + hexvar ] mov byte ptr [ rsp + hexvar ] , al lea rdx , [ rsp + hexvar ] mov esi , hexvar mov ecx , num xor r8d , r8d call hexvar mov ebp , eax mov rax , qword ptr [ rbx + hexvar ] test ebp , ebp jle hexvar cmp byte ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov esi , dword ptr [ rbx ] mov ecx , hexvar add rcx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp ] , rdx mov r8d , num mov edi , num mov edx , hexvar mov r9 , rbx call rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] movzx esi , byte ptr [ rcx + hexvar ] shl esi , num movzx edx , byte ptr [ rcx + hexvar ] or edx , esi mov rdi , rbx mov esi , hexvar call rax jmp hexvar mov dword ptr [ rax + hexvar ] , num mov eax , ebp add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov dword ptr [ rax + hexvar ] , num mov cl , byte ptr [ rax + hexvar ] mov byte ptr [ rsp + hexvar ] , cl mov al , byte ptr [ rax + hexvar ] mov byte ptr [ rsp + hexvar ] , al lea rdx , [ rsp + hexvar ] mov esi , hexvar mov ecx , num xor r8d , r8d call hexvar mov ebp , eax mov rax , qword ptr [ rbx + hexvar ] test ebp , ebp jle hexvar cmp byte ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov esi , dword ptr [ rbx ] mov ecx , hexvar add rcx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp ] , rdx mov r8d , num mov edi , num mov edx , hexvar mov r9 , rbx call rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] movzx esi , byte ptr [ rcx + hexvar ] shl esi , num movzx edx , byte ptr [ rcx + hexvar ] or edx , esi mov rdi , rbx mov esi , hexvar call rax jmp hexvar mov dword ptr [ rax + hexvar ] , num mov eax , ebp add rsp , hexvar pop rbx pop rbp ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esi + hexvar ] movzx edx , byte ptr [ eax + hexvar ] mov byte ptr [ esp + hexvar ] , dl movzx eax , byte ptr [ eax + hexvar ] mov byte ptr [ esp + hexvar ] , al push num push num lea eax , [ esp + hexvar ] push eax push hexvar push esi call hexvar mov edi , eax add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esi + hexvar ] cmp byte ptr [ eax + hexvar ] , num je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ esi + hexvar ] push esi push num mov eax , dword ptr [ esi + hexvar ] add eax , hexvar push eax push hexvar push dword ptr [ esi ] push num call edx add esp , hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ esi + hexvar ] sub esp , num movzx eax , byte ptr [ ecx + hexvar ] shl eax , num movzx ecx , byte ptr [ ecx + hexvar ] or eax , ecx push eax push hexvar push esi call edx add esp , hexvar mov eax , edi mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] movzx edx , byte ptr [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num mov byte ptr [ esp + hexvar ] , dl movzx edx , byte ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax mov byte ptr [ esp + hexvar ] , dl jne hexvar lea ecx , [ esp + hexvar ] sub esp , num mov edx , hexvar push num push num mov eax , esi call hexvar add esp , hexvar mov edi , eax test edi , edi mov eax , dword ptr [ esi + hexvar ] jle hexvar cmp byte ptr [ eax + hexvar ] , num je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ esi + hexvar ] mov eax , dword ptr [ esi + hexvar ] push esi push num add eax , hexvar push eax push hexvar push dword ptr [ esi ] push num call edx add esp , hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] sub esp , num movzx eax , word ptr [ eax + hexvar ] rol ax , num movzx eax , ax push eax push hexvar push esi call edx add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esi + hexvar ] movzx edx , byte ptr [ eax + hexvar ] mov byte ptr [ esp + hexvar ] , dl movzx eax , byte ptr [ eax + hexvar ] mov byte ptr [ esp + hexvar ] , al push num push num lea eax , [ esp + hexvar ] push eax push hexvar push esi call hexvar mov edi , eax add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esi + hexvar ] cmp byte ptr [ eax + hexvar ] , num je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ esi + hexvar ] push esi push num mov eax , dword ptr [ esi + hexvar ] add eax , hexvar push eax push hexvar push dword ptr [ esi ] push num call edx add esp , hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ esi + hexvar ] sub esp , num movzx eax , byte ptr [ ecx + hexvar ] shl eax , num movzx ecx , byte ptr [ ecx + hexvar ] or eax , ecx push eax push hexvar push esi call edx add esp , hexvar mov eax , edi mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov dword ptr [ rax + hexvar ] , num mov cl , byte ptr [ rax + hexvar ] mov byte ptr [ rsp + hexvar ] , cl mov al , byte ptr [ rax + hexvar ] mov byte ptr [ rsp + hexvar ] , al lea rdx , [ rsp + hexvar ] mov esi , hexvar mov ecx , num xor r8d , r8d call hexvar mov ebp , eax mov rax , qword ptr [ rbx + hexvar ] test ebp , ebp jle hexvar cmp byte ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov esi , dword ptr [ rbx ] mov ecx , hexvar add rcx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp ] , rdx mov r8d , num mov edi , num mov edx , hexvar mov r9 , rbx call rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] movzx esi , byte ptr [ rcx + hexvar ] shl esi , num movzx edx , byte ptr [ rcx + hexvar ] or edx , esi mov rdi , rbx mov esi , hexvar call rax jmp hexvar mov dword ptr [ rax + hexvar ] , num mov eax , ebp add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov dword ptr [ rax + hexvar ] , num mov cl , byte ptr [ rax + hexvar ] mov byte ptr [ rsp + hexvar ] , cl mov al , byte ptr [ rax + hexvar ] mov byte ptr [ rsp + hexvar ] , al lea rdx , [ rsp + hexvar ] mov esi , hexvar mov ecx , num xor r8d , r8d call hexvar mov ebp , eax mov rax , qword ptr [ rbx + hexvar ] test ebp , ebp jle hexvar cmp byte ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbx + hexvar ] mov esi , hexvar xor edx , edx xor ecx , ecx call hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov esi , dword ptr [ rbx ] mov ecx , hexvar add rcx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp ] , rdx mov r8d , num mov edi , num mov edx , hexvar mov r9 , rbx call rax mov rax , qword ptr [ rbx + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] movzx esi , byte ptr [ rcx + hexvar ] shl esi , num movzx edx , byte ptr [ rcx + hexvar ] or edx , esi mov rdi , rbx mov esi , hexvar call rax jmp hexvar mov dword ptr [ rax + hexvar ] , num mov eax , ebp add rsp , hexvar pop rbx pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] movzx edx , byte ptr [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num movzx eax , byte ptr [ eax + hexvar ] mov byte ptr [ esp + hexvar ] , dl mov byte ptr [ esp + hexvar ] , al push num push num lea eax , [ esp + hexvar ] push eax push hexvar push esi call hexvar add esp , hexvar test eax , eax mov edi , eax mov eax , dword ptr [ esi + hexvar ] jle hexvar cmp byte ptr [ eax + hexvar ] , num je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ esi + hexvar ] mov eax , dword ptr [ esi + hexvar ] push esi push num add eax , hexvar push eax push hexvar push dword ptr [ esi ] push num call edx add esp , hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] sub esp , num movzx eax , word ptr [ eax + hexvar ] rol ax , num movzx eax , ax push eax push hexvar push esi call edx add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , eax sub eax , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] test eax , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar jmp hexvar jmp hexvar jmp hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop ori v1 , zero , hexvar beq v0 , v1 , hexvar ori v1 , zero , hexvar slt v1 , v0 , v1 bnez v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar beq v0 , v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar beq v0 , v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar beq v0 , v1 , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num jr ra addiu sp , sp , hexvar beqz v0 , hexvar addiu v1 , zero , hexvar beq v0 , v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar bne v0 , v1 , hexvar lw ra , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , zero jr ra addiu sp , sp , hexvar
sub rsp , num call hexvar cmp rax , hexvar je hexvar jle hexvar cmp rax , hexvar je hexvar mov edx , hexvar cmp rax , rdx je hexvar cmp rax , hexvar je hexvar mov eax , num add rsp , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop ori v1 , zero , hexvar beq v0 , v1 , hexvar ori v1 , zero , hexvar slt v1 , v0 , v1 bnez v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar beq v0 , v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar beq v0 , v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar beq v0 , v1 , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num jr ra addiu sp , sp , hexvar beqz v0 , hexvar addiu v1 , zero , hexvar beq v0 , v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar bne v0 , v1 , hexvar lw ra , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , zero jr ra addiu sp , sp , hexvar
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test byte ptr [ rbx + hexvar ] , num je hexvar mov r12 , qword ptr [ rbx + hexvar ] mov rbp , rdi mov r13d , esi test r12 , r12 je hexvar mov rax , qword ptr [ rbp + hexvar ] mov rsi , rsp mov rdi , r12 mov qword ptr [ rsp ] , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + num ] cmp rax , hexvar je hexvar jle hexvar cmp rax , hexvar jne hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test byte ptr [ rbx + hexvar ] , num je hexvar mov r12 , qword ptr [ rbx + hexvar ] mov rbp , rdi mov r13d , esi test r12 , r12 je hexvar mov rax , qword ptr [ rbp + hexvar ] mov rsi , rsp mov rdi , r12 mov qword ptr [ rsp ] , rax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + num ] cmp rax , hexvar je hexvar jle hexvar cmp rax , hexvar jne hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push { r4 , lr } bl hexvar ldr r3 , [ pc , hexvar ] cmp r0 , r3 beq hexvar ble hexvar ldr r3 , [ pc , hexvar ] cmp r0 , r3 beq hexvar add r3 , r3 , hexvar add r3 , r3 , hexvar add r3 , r3 , hexvar cmp r0 , r3 beq hexvar ldr r3 , [ pc , hexvar ] cmp r0 , r3 beq hexvar mov r0 , num pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop ori v1 , zero , hexvar beq v0 , v1 , hexvar ori v1 , zero , hexvar slt v1 , v0 , v1 bnez v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar beq v0 , v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar beq v0 , v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar beq v0 , v1 , hexvar nop b hexvar addiu v0 , zero , num beqz v0 , hexvar addiu v1 , zero , hexvar beq v0 , v1 , hexvar lui v1 , hexvar addiu v1 , v1 , hexvar bne v0 , v1 , hexvar addiu v0 , zero , num move v0 , zero lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] test eax , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar jmp hexvar jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bgt hexvar cmp r3 , num beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar b hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar mov r3 , num b hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
lb v0 , ( a1 ) beqz v0 , hexvar nop addiu a0 , a0 , num lb v1 , - num ( a0 ) beq v1 , v0 , hexvar addiu a1 , a1 , num move v0 , zero jr ra nop lb v0 , ( a0 ) beqz v0 , hexvar nop xori v0 , v0 , hexvar jr ra sltiu v0 , v0 , num jr ra addiu v0 , zero , num
movzx eax , byte ptr [ rsi ] test al , al je hexvar add rdi , num add rsi , num cmp byte ptr [ rdi - num ] , al je hexvar mov eax , num ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
movzx ecx , byte ptr [ edx ] test cl , cl je hexvar add eax , num add edx , num cmp byte ptr [ eax - num ] , cl je hexvar mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) addiu a2 , zero , hexvar lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) addiu a2 , zero , hexvar lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rdi , qword ptr [ rip ] jmp rdi mov rax , qword ptr [ rsp + num ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + num ] mov ecx , dword ptr [ rax ] sub ecx , hexvar setg dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num ] mov dword ptr [ rsp + num ] , ecx jmp rax mov rax , qword ptr [ rsp + num ] mov dword ptr [ rax ] , hexvar mov dword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rip ] jmp rax mov dword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rip ] jmp rax mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar ret
test rdi , rdi je hexvar mov eax , num cmp dword ptr [ rdi ] , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar xor eax , eax ret
mov eax , dword ptr [ rip ] test eax , eax jne hexvar movaps xmm0 , xmmword ptr [ rip ] xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 add byte ptr [ rsi ] , bh add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rcx ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al jg hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al leave add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov esp , num add byte ptr [ rax + rcx * num ] , dh mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov esp , num add byte ptr [ rsi + rcx * num ] , dh mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov esp , num add byte ptr [ rcx ] , al add byte ptr [ rax ] , al add byte ptr [ rax - hexvar ] , cl push qword ptr [ rbx + rdx - hexvar ] add eax , dword ptr [ rax ] add byte ptr [ rax ] , al cmp dword ptr [ rdi ] , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar mov eax , num cmp dword ptr [ rdi ] , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar xor eax , eax ret
mov eax , dword ptr [ rip ] test eax , eax jne hexvar movaps xmm0 , xmmword ptr [ rip ] xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 add byte ptr [ rsi ] , bh add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rcx ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al jg hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al leave add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov esp , num add byte ptr [ rax + rcx * num ] , dh mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov esp , num add byte ptr [ rsi + rcx * num ] , dh mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov esp , num add byte ptr [ rcx ] , al add byte ptr [ rax ] , al add byte ptr [ rax - hexvar ] , cl push qword ptr [ rbx + rdx - hexvar ] add eax , dword ptr [ rax ] add byte ptr [ rax ] , al cmp dword ptr [ rdi ] , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar xor eax , eax ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov dword ptr [ rcx ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
test rdi , rdi je hexvar mov eax , num cmp dword ptr [ rdi ] , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar xor eax , eax ret
test rdi , rdi je hexvar mov eax , num cmp dword ptr [ rdi ] , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar xor eax , eax ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , hexvar jl hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov dword ptr [ rcx ] , hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
mov eax , dword ptr [ rip ] test eax , eax jne hexvar movaps xmm0 , xmmword ptr [ rip ] xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 add byte ptr [ rsi ] , bh add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rcx ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al jg hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al mov al , byte ptr [ rip ] xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al leave add eax , num xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov esp , num add byte ptr [ rax + rcx * num ] , dh mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov esp , num add byte ptr [ rsi + rcx * num ] , dh mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al mov esp , num add byte ptr [ rcx ] , al add byte ptr [ rax ] , al add byte ptr [ rax - hexvar ] , cl push qword ptr [ rbx + rdx - hexvar ] add eax , dword ptr [ rax ] add byte ptr [ rax ] , al cmp dword ptr [ rdi ] , hexvar jl hexvar mov dword ptr [ rdi ] , hexvar xor eax , eax ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx call eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw a1 , hexvar ( fp ) move a0 , v0 jal hexvar nop lw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw a1 , hexvar ( fp ) move a0 , v0 jal hexvar nop nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] test edx , edx setne bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx call eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 lw a0 , hexvar ( a0 ) bnez a0 , hexvar move s1 , a1 move a0 , s0 move t9 , s1 jalr t9 nop lw a0 , hexvar ( s0 ) bnez a0 , hexvar move a1 , s1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop b hexvar move a0 , s0 jal hexvar nop b hexvar lw ra , hexvar ( sp )
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] test edx , edx setne bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx call eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx call eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx call eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw s1 , hexvar ( fp ) bnez s1 , hexvar move t9 , s0 jalr t9 move a0 , fp lw fp , hexvar ( fp ) bnez fp , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw s2 , hexvar ( s1 ) bnez s2 , hexvar nop move t9 , s0 jalr t9 move a0 , s1 lw s1 , hexvar ( s1 ) beqz s1 , hexvar move t9 , s0 lw s2 , hexvar ( s1 ) beqz s2 , hexvar nop lw s3 , hexvar ( s2 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ eax ] cmp dword ptr [ edi + hexvar ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , esi call ecx add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] cmp dword ptr [ ecx + hexvar ] , num setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , hexvar lea esi , [ esi ] sub esp , num push eax push edi call hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] add esp , hexvar cmp dword ptr [ ecx + hexvar ] , edx je hexvar test edx , edx mov ecx , dword ptr [ esi + hexvar ] mov ebx , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + num ] mov ebp , dword ptr [ esi + num ] je hexvar add ecx , edi adc ebx , ebp mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , ebx mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r4 , [ r0 ] b hexvar cmp r0 , hexvar popeq { r4 , r5 , r6 , pc } cmp r0 , hexvar beq hexvar cmn r0 , num beq hexvar ldr r3 , [ r4 , num ] ldr r2 , [ r4 , num ] add r1 , r3 , num cmp r3 , r2 strlo r1 , [ r4 , num ] ldrblo r0 , [ r3 ] blo hexvar mov r0 , r4 bl hexvar cmp r0 , hexvar bne hexvar pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar cmp dword ptr [ ebp - num ] , hexvar jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax test byte ptr [ hexvar ] , num je hexvar mov byte ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp - num ] , - num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar cmp dword ptr [ ebp - num ] , hexvar jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax test byte ptr [ hexvar ] , num je hexvar mov byte ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp - num ] , - num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push edi mov edi , eax push esi push ebx mov esi , dword ptr [ eax ] call hexvar add ebx , hexvar jmp hexvar lea esi , [ esi ] lea ecx , [ edx + num ] mov dword ptr [ esi + num ] , ecx movzx eax , byte ptr [ edx ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , - num je hexvar mov edx , dword ptr [ esi + num ] cmp edx , dword ptr [ esi + num ] jb hexvar sub esp , hexvar push esi call hexvar add esp , hexvar cmp eax , hexvar jne hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar cmp dword ptr [ ebp - num ] , hexvar jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax test byte ptr [ hexvar ] , num je hexvar mov byte ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp - num ] , - num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar je hexvar mov rdx , qword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar movzx eax , byte ptr [ rip + hexvar ] test al , al je hexvar mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , - num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , hexvar jne hexvar nop leave ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , eax mov esi , dword ptr [ eax ] mov eax , dword ptr [ esi + num ] cmp eax , dword ptr [ esi + num ] jae hexvar lea edx , [ eax + num ] mov dword ptr [ esi + num ] , edx movzx eax , byte ptr [ eax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , - num jne hexvar mov eax , edi call hexvar jmp hexvar mov eax , dword ptr [ esi + num ] cmp eax , dword ptr [ esi + num ] jae hexvar lea edx , [ eax + num ] mov dword ptr [ esi + num ] , edx movzx eax , byte ptr [ eax ] cmp eax , hexvar jne hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar mov byte ptr [ ebx + hexvar ] , num mov eax , edi call hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar cmp dword ptr [ ebp - num ] , hexvar jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax test byte ptr [ hexvar ] , num je hexvar mov byte ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp - num ] , - num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar cmp dword ptr [ ebp - num ] , hexvar jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp eax , hexvar je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax test byte ptr [ hexvar ] , num je hexvar mov byte ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar cmp dword ptr [ ebp - num ] , - num jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax sub eax , hexvar setne cl movzx edx , cl mov edi , edx mov rdi , qword ptr [ rdi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rdi mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax sub eax , hexvar setne cl movzx edx , cl mov edi , edx mov rdi , qword ptr [ rdi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rdi mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi movzx eax , byte ptr [ rip + hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - num ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov eax , dword ptr [ rbp - hexvar ] sub eax , - num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rdi , qword ptr [ rbp - num ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] add edx , num sub esp , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar mov byte ptr [ ebp - num ] , al mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx movzx eax , byte ptr [ ebp - num ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] add ebx , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar and al , num mov byte ptr [ ebp - hexvar ] , al mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , ecx mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , lr } sub sp , sp , num ldr ip , [ sp , hexvar ] mov r4 , r0 str ip , [ sp ] add r0 , r0 , num bl hexvar ldr r3 , [ r4 , num ] str r3 , [ r4 ] add sp , sp , num pop { r4 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + num ] add ebx , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar and al , num mov byte ptr [ ebp - hexvar ] , al mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , ecx mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , lr } sub sp , sp , num ldr ip , [ sp , hexvar ] mov r4 , r0 str ip , [ sp ] add r0 , r0 , num bl hexvar ldr r3 , [ r4 , num ] str r3 , [ r4 ] add sp , sp , num pop { r4 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 addiu a0 , a0 , num sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) lw v1 , num ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rcx , qword ptr [ rbp - num ] add rcx , num mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rcx mov rcx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rcx , qword ptr [ rbp - num ] mov r9d , dword ptr [ rcx + num ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx ] , r9d mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , v0 , num lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push rbx mov rbx , rdi lea rdi , [ rdi + num ] call hexvar mov edx , dword ptr [ rbx + num ] mov dword ptr [ rbx ] , edx pop rbx ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ esi + num ] push eax call hexvar mov edx , dword ptr [ esi + num ] mov dword ptr [ esi ] , edx add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + hexvar ] , ebx lea edi , [ hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar cmp eax , num je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] mov r3 , r2 mov r2 , hexvar mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) move a3 , v1 addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move a3 , v0 move a2 , s0 move a1 , zero addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + hexvar ] , ebx lea edi , [ hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar cmp eax , num je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) move a3 , v1 addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move a3 , v0 move a2 , s0 move a1 , zero addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] mov r3 , r2 mov r2 , hexvar mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , r0 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r2 , r4 mov r1 , num mov r0 , num bl hexvar mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov r8d , hexvar xor eax , eax mov esi , eax mov edx , hexvar call hexvar test eax , eax setne r9b movzx eax , r9b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movabs rdi , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar xor esi , esi mov edi , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rax mov al , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov r8d , hexvar xor eax , eax mov esi , eax mov edx , hexvar call hexvar test eax , eax setne r9b movzx eax , r9b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movabs rdi , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar xor esi , esi mov edi , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , rax mov al , num call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , esp mov dword ptr [ ebx + hexvar ] , edi mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , hexvar mov dword ptr [ ebx + num ] , hexvar mov dword ptr [ ebx + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test eax , eax setne al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] sub esp , hexvar lea edx , [ ebx - hexvar ] push edx push eax push hexvar push num push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar push dword ptr [ ebp + hexvar ] push eax push num push num call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
mov rax , qword ptr [ rsi ] test rax , rax je hexvar cmp edi , num jne hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar push rax mov esi , hexvar call hexvar add rsp , num mov eax , num ret
push rbp push rbx sub rsp , hexvar mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + num ] , rax cmp edi , num mov eax , hexvar mov ebx , hexvar cmove ebx , eax mov eax , hexvar mov ebp , hexvar jmp hexvar mov eax , hexvar nop cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp + hexvar ] mov esi , hexvar call hexvar mov eax , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , ebp jmp hexvar mov eax , ebx jmp hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , ebp jmp hexvar mov eax , num add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw v1 , hexvar ( sp ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( v0 ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar add esp , num mov eax , num pop ebx ret
mov rax , qword ptr [ rsi ] test rax , rax je hexvar cmp edi , num jne hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar push rax mov esi , hexvar call hexvar add rsp , num mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
mov rax , qword ptr [ rsi ] test rax , rax je hexvar cmp edi , num jne hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar push rax mov esi , hexvar call hexvar add rsp , num mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a1 )
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar add esp , num mov eax , num pop ebx ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , num add esp , num pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v1 , zero , hexvar lw v0 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a0 sw s1 , hexvar ( sp ) move s1 , a1 sw v0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw v0 , num ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 sw a1 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s7 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw fp , num ( a0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r4 , r0 str r1 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr fp , [ sp , hexvar ] ldr r8 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r5 , [ r0 , num ] add r7 , r2 , num ldm r7 , { r6 , r7 } ldr r3 , [ r2 , num ] cmp r3 , hexvar beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar orrs r3 , r6 , r7 beq hexvar ldr sb , [ r0 , hexvar ] ldr sl , [ r0 , hexvar ] sub r2 , sl , sb mov r3 , num cmp r3 , r7 cmpeq r2 , r6 addhi sb , sb , r6 bls hexvar str sl , [ sp ] mov r3 , num add r2 , sp , hexvar mov r1 , sb mov r0 , r5 bl hexvar subs r5 , r0 , num moveq r7 , num bne hexvar ldr r3 , [ sp , hexvar ] str r7 , [ r3 ] mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r10 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rsi + num ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edx , hexvar je hexvar mov eax , dword ptr [ rsi + num ] mov rbx , rdi mov r12 , rsi mov r14d , edx cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov r12 , qword ptr [ rbx + hexvar ] mov rax , rbp sub rax , r12 cmp r13 , rax jae hexvar test r13 , r13 lea r15 , [ r12 + r13 ] sete al test al , al jne hexvar lea rdx , [ rsp + hexvar ] xor ecx , ecx mov r8 , rbp mov rsi , r15 mov rdi , r10 call hexvar test eax , eax mov r12 , rax mov ecx , eax je hexvar mov edx , hexvar mul edx mov eax , r12d sub eax , edx shr eax , num add edx , eax mov eax , r12d shr edx , num imul edx , edx , hexvar sub eax , edx mov rdx , rax mov rax , qword ptr [ rbx + hexvar ] mov r13 , qword ptr [ rax + rdx * num ] test r13 , r13 je hexvar cmp r12d , dword ptr [ r13 ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp ecx , dword ptr [ r13 ] je hexvar mov r13 , qword ptr [ r13 + hexvar ] test r13 , r13 jne hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num call hexvar mov esi , r12d mov rdi , rax xor eax , eax call hexvar mov edi , hexvar call hexvar xor eax , eax jmp hexvar nop mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r10 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rsi + num ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edx , hexvar je hexvar mov eax , dword ptr [ rsi + num ] mov rbx , rdi mov r12 , rsi mov r14d , edx cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov r12 , qword ptr [ rbx + hexvar ] mov rax , rbp sub rax , r12 cmp r13 , rax jae hexvar test r13 , r13 lea r15 , [ r12 + r13 ] sete al test al , al jne hexvar lea rdx , [ rsp + hexvar ] xor ecx , ecx mov r8 , rbp mov rsi , r15 mov rdi , r10 call hexvar test eax , eax mov r12 , rax mov ecx , eax je hexvar mov edx , hexvar mul edx mov eax , r12d sub eax , edx shr eax , num add edx , eax mov eax , r12d shr edx , num imul edx , edx , hexvar sub eax , edx mov rdx , rax mov rax , qword ptr [ rbx + hexvar ] mov r13 , qword ptr [ rax + rdx * num ] test r13 , r13 je hexvar cmp r12d , dword ptr [ r13 ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp ecx , dword ptr [ r13 ] je hexvar mov r13 , qword ptr [ r13 + hexvar ] test r13 , r13 jne hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num call hexvar mov esi , r12d mov rdi , rax xor eax , eax call hexvar mov edi , hexvar call hexvar xor eax , eax jmp hexvar nop mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v1 , zero , hexvar lw v0 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a0 sw s2 , hexvar ( sp ) move s2 , a1 sw v0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw v0 , num ( a2 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp + num ] , rax mov r13 , qword ptr [ rsi + num ] mov qword ptr [ rsp + hexvar ] , num cmp edx , hexvar je hexvar mov rbx , rdi mov r12 , rsi mov eax , dword ptr [ rsi + num ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov r15 , qword ptr [ rbx + hexvar ] mov rax , r15 sub rax , rbp cmp r13 , rax jae hexvar test r13 , r13 sete al add rbp , r13 test al , al jne hexvar lea rdx , [ rsp + hexvar ] mov r8 , r15 mov ecx , num mov rsi , rbp mov rdi , qword ptr [ rsp + num ] call hexvar mov r12 , rax test eax , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rcx ] , rax mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r4 , r0 str r1 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr fp , [ sp , hexvar ] ldr r8 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r5 , [ r0 , num ] add r7 , r2 , num ldm r7 , { r6 , r7 } mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ r2 , num ] cmp r3 , hexvar beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 beq hexvar orrs r3 , r6 , r7 beq hexvar ldr sb , [ r0 , hexvar ] ldr sl , [ r0 , hexvar ] sub r2 , sl , sb mov r3 , num cmp r3 , r7 cmpeq r2 , r6 addhi sb , sb , r6 bls hexvar str sl , [ sp ] mov r3 , num add r2 , sp , hexvar mov r1 , sb mov r0 , r5 bl hexvar subs r5 , r0 , num bne hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r3 , [ r2 ] mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a0 , hexvar ( fp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) sw a0 , hexvar ( fp ) lw a0 , - hexvar ( gp ) lw a0 , ( a0 ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw a0 , num ( a0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r10 , qword ptr [ rdi + hexvar ] mov r13 , qword ptr [ rsi + num ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rcx mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + hexvar ] , r9 mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edx , hexvar je hexvar mov eax , dword ptr [ rsi + num ] mov rbx , rdi mov r12 , rsi mov r14d , edx cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov r12 , qword ptr [ rbx + hexvar ] mov rax , rbp sub rax , r12 cmp r13 , rax jae hexvar test r13 , r13 lea r15 , [ r12 + r13 ] sete al test al , al jne hexvar lea rdx , [ rsp + hexvar ] xor ecx , ecx mov r8 , rbp mov rsi , r15 mov rdi , r10 call hexvar test eax , eax mov r12 , rax mov ecx , eax je hexvar mov edx , hexvar mul edx mov eax , r12d sub eax , edx shr eax , num add edx , eax mov eax , r12d shr edx , num imul edx , edx , hexvar sub eax , edx mov rdx , rax mov rax , qword ptr [ rbx + hexvar ] mov r13 , qword ptr [ rax + rdx * num ] test r13 , r13 je hexvar cmp r12d , dword ptr [ r13 ] jne hexvar jmp hexvar nop dword ptr [ rax ] cmp ecx , dword ptr [ r13 ] je hexvar mov r13 , qword ptr [ r13 + hexvar ] test r13 , r13 jne hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num call hexvar mov esi , r12d mov rdi , rax xor eax , eax call hexvar mov edi , hexvar call hexvar xor eax , eax jmp hexvar nop mov rax , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] cmp byte ptr [ rax + hexvar ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dl , byte ptr [ eax + hexvar ] mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] cmp al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ ebp - num ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] ldrb r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] cmp byte ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lw a0 , num ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dl , byte ptr [ eax + hexvar ] mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] cmp al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ ebp - num ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] cmp byte ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw a0 , num ( a0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - num ] , num jge hexvar xor eax , eax mov cl , al mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - num ] shl edx , num add eax , edx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp - num ] mov edx , dword ptr [ edx + esi * num ] mov dword ptr [ ebp - hexvar ] , edx test cl , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar shr eax , hexvar mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar shr ecx , num or eax , ecx mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar shl ecx , num or eax , ecx mov ecx , dword ptr [ ebp - hexvar ] and ecx , hexvar shl ecx , hexvar or eax , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] bswap eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar pop esi pop ebp ret
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ edx ] bswap ecx mov dword ptr [ eax ] , ecx mov ecx , dword ptr [ edx + num ] bswap ecx mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ edx + num ] bswap ecx mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ edx + hexvar ] bswap ecx mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] bswap ecx mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] bswap ecx mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] bswap ecx mov dword ptr [ eax + hexvar ] , ecx mov edx , dword ptr [ edx + hexvar ] bswap edx mov dword ptr [ eax + hexvar ] , edx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - hexvar ] sub eax , num setl cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , dword ptr [ rbp - hexvar ] lea rdi , [ rax + rcx * num ] mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + rcx * num ] mov dword ptr [ rbp - hexvar ] , edx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi jmp rax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr ecx , hexvar mov edx , eax and edx , hexvar shr edx , num or ecx , edx mov edx , eax and edx , hexvar shl edx , num or ecx , edx shl eax , hexvar or ecx , eax mov dword ptr [ rbp - hexvar ] , ecx mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - hexvar ] bswap eax mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov esi , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
mov rax , rsi xor edx , edx nop dword ptr [ rax ] mov ecx , dword ptr [ rdi + rdx ] bswap ecx mov dword ptr [ rax + rdx ] , ecx add rdx , num cmp rdx , hexvar jne hexvar ret nop dword ptr [ rax ]
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] shl eax , hexvar mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] shl eax , num and eax , hexvar or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] shr eax , num and eax , hexvar or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] movsxd rdx , edx mov eax , dword ptr [ rax + rdx * num ] shr eax , hexvar mov edx , eax mov eax , dword ptr [ rbp - num ] cdqe lea rsi , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rsi or edx , ecx mov dword ptr [ rax ] , edx add dword ptr [ rbp - num ] , num cmp dword ptr [ rbp - num ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a1 lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) sw v1 , hexvar ( sp ) move a3 , a0 move v1 , a1 addiu a0 , a0 , hexvar lw a2 , ( a3 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - num ] , num mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp - num ] sub eax , num setl cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] lea eax , [ eax + ecx * num ] mov edx , dword ptr [ ebp + num ] mov ecx , dword ptr [ edx + ecx * num ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax shr ecx , hexvar mov edx , eax and edx , hexvar shr edx , num or ecx , edx mov edx , eax and edx , hexvar shl edx , num or ecx , edx shl eax , hexvar or ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] bswap eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 move v1 , a1 sw ra , hexvar ( sp ) lw t1 , - hexvar ( gp ) addiu t0 , a0 , hexvar sw gp , hexvar ( sp ) lw a1 , ( t1 ) sw a1 , hexvar ( sp ) lw a3 , ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu a0 , v1 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - num ] , num mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp - num ] sub eax , num setl cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] lea eax , [ eax + ecx * num ] mov edx , dword ptr [ ebp + num ] mov ecx , dword ptr [ edx + ecx * num ] mov edx , ecx shl edx , hexvar mov esi , ecx and esi , hexvar shl esi , num or edx , esi mov esi , ecx shr esi , num and esi , hexvar or edx , esi shr ecx , hexvar or edx , ecx mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] leave ret
push { r4 , r5 , r6 , lr } mov r4 , r0 bl hexvar subs r6 , r0 , num beq hexvar mov r0 , r6 pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) move a0 , v0 jal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax mov edi , eax jne hexvar mov esi , dword ptr [ esi + hexvar ] sub esp , num mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] add eax , eax mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esi + hexvar ] add eax , hexvar lea ecx , [ eax + eax ] mov word ptr [ edx + eax * num ] , num push ecx push num push edx call hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num lea eax , [ eax + eax * num ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num shl eax , num lea edx , [ ebx + eax - hexvar ] movzx eax , word ptr [ ebx + eax - hexvar ] movzx ecx , word ptr [ edx + num ] mov dword ptr [ esi + hexvar ] , eax movzx eax , word ptr [ edx + num ] mov dword ptr [ esi + hexvar ] , ecx mov dword ptr [ esi + hexvar ] , eax movzx eax , word ptr [ edx + num ] mov dword ptr [ esi + hexvar ] , eax mov eax , edi pop ebx pop esi pop edi ret
push rbp push rbx sub rsp , num mov rbx , rdi call hexvar mov ebp , eax test eax , eax je hexvar mov eax , ebp add rsp , num pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar move s0 , a0 lw gp , hexvar ( sp ) bnez v0 , hexvar move s1 , v0 lw s0 , hexvar ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push { r4 , r5 , r6 , lr } subs r4 , r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r6 , [ r4 , hexvar ] cmp r6 , num beq hexvar ldr r3 , [ r6 ] cmp r4 , r3 beq hexvar mvn r0 , num pop { r4 , r5 , r6 , pc } strbtls sl , [ r4 ] , -sb , ror num andeq r0 , r0 , r0
push { r4 , r5 , r6 , lr } subs r4 , r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r6 , [ r4 , hexvar ] cmp r6 , num beq hexvar ldr r3 , [ r6 ] cmp r4 , r3 beq hexvar mvn r0 , num pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0
push rbp push rbx mov rbx , rdi sub rsp , num call hexvar test eax , eax mov ebp , eax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] xor ecx , ecx xor esi , esi mov eax , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + hexvar ] add rax , rax mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rbx + hexvar ] sub eax , num lea rdx , [ rax + rax ] mov word ptr [ rdi + rax * num ] , cx call hexvar movsxd rax , dword ptr [ rbx + hexvar ] mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num shl rax , num mov rdx , rax lea rax , [ rip + hexvar ] add rax , rdx movzx edx , word ptr [ rax + num ] mov dword ptr [ rbx + hexvar ] , edx movzx edx , word ptr [ rax ] mov dword ptr [ rbx + hexvar ] , edx movzx edx , word ptr [ rax + num ] movzx eax , word ptr [ rax + num ] mov dword ptr [ rbx + hexvar ] , edx mov dword ptr [ rbx + hexvar ] , eax movabs rax , hexvar mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov eax , ebp pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sdc1 f20 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a1 , hexvar nop lw fp , ( a2 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rsi , rsi je hexvar mov r12 , rdi mov rbp , rdx movsxd rax , dword ptr [ rdx ] mov rdi , qword ptr [ rsi + rax * num ] mov ebx , num test rdi , rdi je hexvar lea rdx , [ rsp + hexvar ] lea rsi , [ rsp + hexvar ] call hexvar mov ebx , eax test al , al je hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdx , rax shl rdx , num mov rcx , qword ptr [ rip + hexvar ] lea r13 , [ rcx + rax * num + hexvar ] sub r13 , rdx mov rdi , r12 call hexvar mov edx , dword ptr [ rsp + hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rdx , r13 shr rdx , hexvar mov byte ptr [ rax + hexvar ] , dl mov qword ptr [ rax + hexvar ] , r13 add dword ptr [ rbp ] , num jmp hexvar mov ebx , num mov eax , ebx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , num call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a1 , hexvar move s1 , a0 lw v0 , ( a2 ) sll v0 , v0 , num addu a1 , a1 , v0 lw a0 , ( a1 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , num call hexvar and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a3 , zero , num lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num jbe hexvar mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num test byte ptr [ ebp - num ] , num je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar xor ecx , ecx mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw s0 , ( s1 ) bal hexvar move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) b hexvar addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar lw a0 , ( s1 )
push edi push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov esi , eax mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov edi , eax call hexvar mov dword ptr [ esp ] , esi push edi lea edx , [ ebx - hexvar ] push edx push dword ptr [ eax ] push num call hexvar add esp , hexvar call hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar push num push num push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar mov edi , dword ptr [ ebx + hexvar ] push dword ptr [ edi ] call hexvar mov esi , eax add esp , num push dword ptr [ edi ] call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi jne hexvar call hexvar pop ebx pop esi pop edi ret
push rbp push rbx sub rsp , num mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax jne hexvar xor ebx , ebx mov rdi , qword ptr [ rip + hexvar ] call hexvar test eax , eax jne hexvar test bl , bl jne hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] xor esi , esi mov edx , num call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar test eax , eax setne bl jmp hexvar xor edi , edi mov edx , num mov esi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbx , rax test rdi , rdi je hexvar call hexvar mov rbp , rax call hexvar mov esi , dword ptr [ rax ] mov r8 , rbx mov rcx , rbp mov edx , hexvar xor edi , edi xor eax , eax call hexvar call hexvar mov edi , dword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax ] call hexvar mov esi , dword ptr [ rax ] mov rcx , rbx mov edx , hexvar xor edi , edi xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ]
push rbp push rbx xor ebp , ebp sub rsp , num mov rbx , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar test rax , rax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar test bpl , bpl jne hexvar add rsp , num pop rbx pop rbp jmp hexvar nop dword ptr [ rax + rax ] xor esi , esi mov edx , num mov rdi , rbx call hexvar test eax , eax je hexvar mov rbx , qword ptr [ rip + hexvar ] jmp hexvar xor edi , edi mov edx , num mov esi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rbx , rax test rdi , rdi je hexvar call hexvar mov rbp , rax call hexvar mov esi , dword ptr [ rax ] mov r8 , rbx mov rcx , rbp mov edx , hexvar xor edi , edi xor eax , eax call hexvar call hexvar mov edi , dword ptr [ rip + hexvar ] call hexvar nop mov rdi , qword ptr [ rip + hexvar ] call hexvar test eax , eax setne bpl jmp hexvar nop dword ptr [ rax ] call hexvar mov esi , dword ptr [ rax ] mov rcx , rbx mov edx , hexvar xor edi , edi xor eax , eax call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ]
push ebp mov ebp , esp push esi sub esp , hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num jbe hexvar mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num test byte ptr [ ebp - num ] , num je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar xor ecx , ecx mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar call hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ ebx + hexvar ] push dword ptr [ esi ] call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push dword ptr [ esi ] call hexvar add esp , hexvar test eax , eax jne hexvar call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , lr } ldr r5 , [ pc , hexvar ] sub sp , sp , hexvar ldr r4 , [ r5 ] mov r0 , r4 bl hexvar cmp r0 , num bne hexvar mov r0 , r4 bl hexvar cmp r0 , num bne hexvar add sp , sp , hexvar pop { r4 , r5 , lr } b hexvar bl hexvar cmp r0 , num ldr r0 , [ r5 ] beq hexvar bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] mov r5 , r0 ldr r4 , [ r3 ] bl hexvar cmp r4 , num mov r2 , r0 beq hexvar mov r0 , r4 ldr r4 , [ r2 ] bl hexvar mov r1 , r4 mov r3 , r0 str r5 , [ sp ] ldr r2 , [ pc , hexvar ] mov r0 , num bl hexvar bl hexvar ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 ] bl hexvar mov r3 , num mov r0 , r4 str r3 , [ sp ] mov r2 , num mov r3 , num bl hexvar cmp r0 , num ldr r0 , [ r5 ] beq hexvar bl hexvar cmp r0 , num bne hexvar add sp , sp , hexvar pop { r4 , r5 , lr } b hexvar ldr r1 , [ r0 ] mov r3 , r5 mov r0 , r4 ldr r2 , [ pc , hexvar ] bl hexvar b hexvar andeq r8 , r3 , r8 , ror num andeq r6 , r2 , r8 , asr num andeq r8 , r3 , r0 , lsr num andeq r6 , r2 , ip , asr ip andeq r8 , r3 , r4 , lsl num andeq r6 , r2 , r4 , ror num
push r12 push rbp push rbx mov rbx , qword ptr [ rip + hexvar ] mov rdi , rbx call hexvar test rax , rax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] call hexvar test eax , eax mov rdi , qword ptr [ rip + hexvar ] je hexvar call hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov r12 , rax call hexvar mov rbp , rax test rbx , rbx je hexvar mov rdi , rbx call hexvar mov esi , dword ptr [ rbp ] lea rdx , [ rip + hexvar ] mov rcx , rax mov r8 , r12 xor edi , edi xor eax , eax call hexvar call hexvar mov edi , dword ptr [ rip + hexvar ] call hexvar nop dword ptr [ rax + rax ] xor esi , esi mov rdi , rbx mov edx , num call hexvar test eax , eax mov rdi , qword ptr [ rip + hexvar ] je hexvar call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov esi , dword ptr [ rax ] lea rdx , [ rip + hexvar ] mov rcx , r12 xor edi , edi xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ]
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push num push num push num push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov byte ptr [ ebp - hexvar ] , num cmp byte ptr [ ebp - hexvar ] , num je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , hexvar push dword ptr [ ebp - hexvar ] push esi lea edx , [ ebx - hexvar ] push edx push eax push num call hexvar add esp , hexvar jmp hexvar call hexvar mov eax , dword ptr [ eax ] push dword ptr [ ebp - hexvar ] lea edx , [ ebx - hexvar ] push edx push eax push num call hexvar add esp , hexvar call hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] cmp qword ptr [ rbp + num ] , num je hexvar call hexvar test rax , rax je hexvar mov r15 , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar lea r12 , [ rsp + num ] mov rdi , r12 mov rsi , rbx call hexvar jmp hexvar call hexvar mov qword ptr [ rbp + num ] , rax xor r12d , r12d test rax , rax je hexvar mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar jmp hexvar xor r12d , r12d jmp hexvar xor r12d , r12d mov esi , dword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , r15 mov rcx , r12 call hexvar mov r12d , eax test eax , eax jle hexvar mov rdi , r14 mov esi , num mov rdx , r15 call hexvar jmp hexvar mov rdi , r15 call hexvar mov eax , r12d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s0 , hexvar ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s0 , hexvar ( a0 )
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] cmp qword ptr [ rbp + num ] , num je hexvar call hexvar test rax , rax je hexvar mov r15 , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar lea r12 , [ rsp + num ] mov rdi , r12 mov rsi , rbx call hexvar jmp hexvar call hexvar mov qword ptr [ rbp + num ] , rax xor r12d , r12d test rax , rax je hexvar mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar jmp hexvar xor r12d , r12d jmp hexvar xor r12d , r12d mov esi , dword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , r15 mov rcx , r12 call hexvar mov r12d , eax test eax , eax jle hexvar mov rdi , r14 mov esi , num mov rdx , r15 call hexvar jmp hexvar mov rdi , r15 call hexvar mov eax , r12d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s0 , hexvar ( a0 )
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] cmp qword ptr [ rbp + num ] , num je hexvar call hexvar test rax , rax je hexvar mov r15 , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar lea r12 , [ rsp + num ] mov rdi , r12 mov rsi , rbx call hexvar jmp hexvar call hexvar mov qword ptr [ rbp + num ] , rax xor r12d , r12d test rax , rax je hexvar mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar jmp hexvar xor r12d , r12d jmp hexvar xor r12d , r12d mov esi , dword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , r15 mov rcx , r12 call hexvar mov r12d , eax test eax , eax jle hexvar mov rdi , r14 mov esi , num mov rdx , r15 call hexvar jmp hexvar mov rdi , r15 call hexvar mov eax , r12d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] cmp qword ptr [ rbp + num ] , num je hexvar call hexvar test rax , rax je hexvar mov r15 , rax cmp qword ptr [ rbx + hexvar ] , num je hexvar lea r12 , [ rsp + num ] mov rdi , r12 mov rsi , rbx call hexvar jmp hexvar call hexvar mov qword ptr [ rbp + num ] , rax xor r12d , r12d test rax , rax je hexvar mov esi , hexvar mov rdi , rax call hexvar test eax , eax jne hexvar jmp hexvar xor r12d , r12d jmp hexvar xor r12d , r12d mov esi , dword ptr [ rbp ] mov rdx , qword ptr [ rbp + num ] mov rdi , r15 mov rcx , r12 call hexvar mov r12d , eax test eax , eax jle hexvar mov rdi , r14 mov esi , num mov rdx , r15 call hexvar jmp hexvar mov rdi , r15 call hexvar mov eax , r12d add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , dword ptr [ edi + hexvar ] cmp dword ptr [ esi + num ] , num je hexvar call hexvar mov ebp , eax mov dword ptr [ esp + num ] , num test eax , eax je hexvar mov eax , num cmp dword ptr [ edi + hexvar ] , num je hexvar sub esp , num push edi lea edi , [ esp + hexvar ] push edi call hexvar add esp , hexvar mov eax , edi push eax push dword ptr [ esi + num ] push dword ptr [ esi ] push ebp call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax jle hexvar sub esp , num push ebp push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , dword ptr [ edi + hexvar ] cmp dword ptr [ esi + num ] , num je hexvar call hexvar mov ebp , eax mov dword ptr [ esp + num ] , num test eax , eax je hexvar mov eax , num cmp dword ptr [ edi + hexvar ] , num je hexvar sub esp , num push edi lea edi , [ esp + hexvar ] push edi call hexvar add esp , hexvar mov eax , edi push eax push dword ptr [ esi + num ] push dword ptr [ esi ] push ebp call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax jle hexvar sub esp , num push ebp push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar add r3 , sp , hexvar str r3 , [ sp , num ] ldr r1 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar b hexvar mov r3 , num str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r1 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num ble hexvar ldr r2 , [ sp , hexvar ] mov r1 , num ldr r0 , [ sp ] bl hexvar b hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar lea esi , [ ebx - hexvar ] sub esp , num push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar push esi push hexvar push hexvar push num call hexvar add esp , hexvar xor eax , eax add esp , num pop ebx pop esi ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , r8 mov r15d , ecx mov r12d , edx mov r13d , esi mov ebx , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar jmp hexvar mov rax , qword ptr [ rsp ] mov dword ptr [ rax ] , ebx mov rax , qword ptr [ rsp ] mov dword ptr [ rax + num ] , r13d mov rax , qword ptr [ rsp ] mov dword ptr [ rax + num ] , r12d mov rax , qword ptr [ rsp ] mov dword ptr [ rax + hexvar ] , r15d mov rax , qword ptr [ rsp ] mov qword ptr [ rax + hexvar ] , r14 mov rdi , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar mov ebp , num cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov eax , hexvar jmp hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rsp ] , rax cmp qword ptr [ rsp ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) addiu v0 , zero , num b hexvar nop nop b hexvar nop nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) move v0 , zero lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar lea esi , [ ebx - hexvar ] sub esp , num push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] sub esp , num mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx pop esi ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , r8 mov r15d , ecx mov r12d , edx mov r13d , esi mov ebx , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar jmp hexvar mov ecx , hexvar cmove eax , ecx nop word ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp ] mov dword ptr [ rax ] , ebx mov rax , qword ptr [ rsp ] mov dword ptr [ rax + num ] , r13d mov rax , qword ptr [ rsp ] mov dword ptr [ rax + num ] , r12d mov rax , qword ptr [ rsp ] mov dword ptr [ rax + hexvar ] , r15d mov rax , qword ptr [ rsp ] mov qword ptr [ rax + hexvar ] , r14 mov rdi , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar mov ebp , num jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax mov eax , hexvar jmp hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rsp ] , rax cmp qword ptr [ rsp ] , num mov eax , hexvar jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar lea esi , [ ebx - hexvar ] sub esp , num push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar push esi push hexvar push hexvar push num call hexvar add esp , hexvar xor eax , eax add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar lea esi , [ ebx - hexvar ] sub esp , num push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] sub esp , num mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar lea esi , [ ebx - hexvar ] sub esp , num push hexvar push esi push hexvar call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar push esi push hexvar push hexvar push num call hexvar add esp , hexvar xor eax , eax add esp , num pop ebx pop esi ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov sb , r1 mov sl , r0 bl hexvar mov r6 , r0 mov r7 , r1 orrs r3 , r6 , r7 bne hexvar mov r2 , num ldr r3 , [ pc , hexvar ] str r2 , [ r3 , num ] pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move s2 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw a2 , hexvar ( sp ) or v0 , v0 , v1 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , num lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra sw v1 , - hexvar ( v0 ) lw t9 , - hexvar ( gp ) addiu a0 , v1 , num jalr t9 move s0 , v1 lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , s3 addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx push eax call hexvar mov edi , eax add esp , hexvar or edx , edi jne hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move s2 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw a2 , hexvar ( sp ) or v0 , v0 , v1 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , num lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra sw v1 , - hexvar ( v0 ) lw t9 , - hexvar ( gp ) addiu a0 , v1 , num jalr t9 move s0 , v1 lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , s3 addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax mov ebx , edi mov dword ptr [ esp + hexvar ] , edx push eax call hexvar mov esi , eax add esp , hexvar or edx , esi jne hexvar mov dword ptr [ edi + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax mov ebx , edi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx push eax call hexvar mov esi , eax add esp , hexvar or edx , esi jne hexvar mov dword ptr [ edi + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) move s7 , a1 move fp , a2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) or v0 , v0 , v1 bnez v0 , hexvar lui v0 , hexvar addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s0 , v1 addiu a0 , v1 , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s6 , v0 lui a1 , hexvar addiu a1 , a1 , hexvar lw a0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx push eax call hexvar mov esi , eax add esp , hexvar or edx , esi jne hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov sl , r1 stm sp , { r0 , r2 } bl hexvar mov r4 , r0 mov r5 , r1 orrs r3 , r4 , r5 bne hexvar mov r2 , num ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax mov ebx , edi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx push eax call hexvar mov esi , eax add esp , hexvar or edx , esi jne hexvar mov dword ptr [ edi + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov byte ptr [ hexvar ] , num mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar call hexvar nop dword ptr [ eax ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a2 , a1 sw s0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) move a0 , zero sw gp , hexvar ( sp ) sb zero , hexvar ( s0 ) bal hexvar lw a1 , hexvar ( v0 ) lui a2 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num addiu a2 , a2 , hexvar move a3 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a1 , s1 lw v0 , hexvar ( s0 ) bgtz v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 nop nop
sub rsp , num mov rcx , rsi xor edx , edx mov esi , edi mov edi , num mov byte ptr [ rip + hexvar ] , num call hexvar call hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov byte ptr [ hexvar ] , num mov edi , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar call hexvar nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov byte ptr [ hexvar ] , num mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar call hexvar nop dword ptr [ eax ]
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx + hexvar ] mov byte ptr [ eax + hexvar ] , num push dword ptr [ esp + hexvar ] mov ecx , num mov edx , dword ptr [ esp + hexvar ] mov eax , num call hexvar call hexvar
push ebx xor ecx , ecx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov byte ptr [ eax + hexvar ] , num push dword ptr [ esp + hexvar ] mov eax , num mov edx , dword ptr [ esp + hexvar ] call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rip + hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov esi , eax mov edi , num call hexvar call hexvar
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r2 , num ldr r1 , [ fp , - num ] mov r0 , num bl hexvar bl hexvar strdeq r8 , sb , [ r7 ] , -r0
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov byte ptr [ hexvar ] , num mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar call hexvar nop word ptr [ eax + eax ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] test rdx , rdx setne al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num ] jmp rdx mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , num mov edx , num mov r8d , num xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - num ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx + hexvar ] , rax sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] test rdx , rdx setne al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num ] jmp rdx mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , num mov edx , num mov r8d , num xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - num ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rcx + hexvar ] , rax sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] cmp eax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ esi + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ esi + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] mov r4 , num ldr r2 , [ pc , hexvar ] mov r0 , r3 mov r1 , r4 bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ esi + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ esi + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ esi + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ esi + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] xor edx , edx mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi ] , ecx mov dword ptr [ esi + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) move t1 , v0 move t0 , zero lui v0 , hexvar addiu a2 , v0 , - hexvar move a1 , t1 move a0 , t0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx cmp qword ptr [ rbp - num ] , num setne sil mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rsi cmp qword ptr [ rax ] , num setne dil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , dil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , hexvar cmp qword ptr [ rcx + hexvar ] , rdx sete sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] cmp dword ptr [ rcx + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , num mov edi , hexvar movabs rsi , num movabs rdx , num mov r8d , hexvar mov qword ptr [ rbp - hexvar ] , rcx mov rcx , r8 movabs r8 , num mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] mov rsi , qword ptr [ rdx + hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov rbp , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + num ] , rcx lea r14 , [ rax + num ] movabs r15 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ rbp + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , r14 mov r8 , qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + num ] call hexvar add rbx , r15 add r12 , r15 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ rbp + hexvar ] lea r8 , [ rbp + hexvar ] add rbp , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r9 , rbp call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov rbp , rsi mov r12 , rdi lea r14 , [ rdi + hexvar ] lea r15 , [ rdi + hexvar ] jmp hexvar nop word ptr cs : [ rax + rax ] nop mov rcx , qword ptr [ r12 + hexvar ] mov rdi , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] movabs rax , hexvar lea rdx , [ rax + num ] mov r8 , r14 mov r9 , r15 call hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar add r13 , rax mov rbx , qword ptr [ rsp + num ] movabs rax , hexvar add rbx , rax mov rbp , qword ptr [ rsp + hexvar ] add rbp , rax mov eax , hexvar jmp hexvar mov qword ptr [ rsp ] , r13 mov qword ptr [ rsp + num ] , rbx mov qword ptr [ rsp + hexvar ] , rbp mov rax , qword ptr [ rsp ] movabs rcx , hexvar cmp rax , rcx mov eax , hexvar mov ecx , hexvar cmova eax , ecx nop word ptr cs : [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov rcx , qword ptr [ r12 + hexvar ] mov rdx , qword ptr [ rsp ] mov rdi , qword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] mov r8 , r14 mov r9 , r15 call hexvar mov eax , hexvar jmp hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov rbp , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + num ] , rcx lea r14 , [ rax + num ] movabs r15 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ rbp + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , r14 mov r8 , qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + num ] call hexvar add rbx , r15 add r12 , r15 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ rbp + hexvar ] lea r8 , [ rbp + hexvar ] add rbp , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r9 , rbp call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov rbp , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + num ] , rcx lea r14 , [ rax + num ] movabs r15 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ rbp + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , r14 mov r8 , qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + num ] call hexvar add rbx , r15 add r12 , r15 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ rbp + hexvar ] lea r8 , [ rbp + hexvar ] add rbp , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r9 , rbp call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov rbp , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + num ] , rcx lea r14 , [ rax + num ] movabs r15 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ rbp + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , r14 mov r8 , qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + num ] call hexvar add rbx , r15 add r12 , r15 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ rbp + hexvar ] lea r9 , [ rbp + hexvar ] add rbp , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r8 , rbp call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar lui v0 , hexvar addiu gp , gp , hexvar sltu v0 , a3 , v0 sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s4 , a3 sw s2 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) move s2 , a0 sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) bnez v0 , hexvar sw a2 , hexvar ( sp ) addiu s7 , a0 , hexvar addiu s6 , a0 , hexvar lui s5 , hexvar move fp , a3 move s1 , a2 move s0 , a1 lw a3 , hexvar ( s2 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov rbp , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + num ] , rcx lea r14 , [ rax + num ] movabs r15 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ rbp + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , r14 mov r8 , qword ptr [ rsp + num ] mov r9 , qword ptr [ rsp + hexvar ] call hexvar add rbx , r15 add r12 , r15 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ rbp + hexvar ] lea r8 , [ rbp + hexvar ] add rbp , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r9 , rbp call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov rbx , rdx mov r12 , rsi mov rbp , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rcx , [ rbp + hexvar ] mov qword ptr [ rsp + num ] , rcx lea r14 , [ rax + num ] movabs r15 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ rbp + hexvar ] mov rdi , rbx mov rsi , r12 mov rdx , r14 mov r8 , qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + num ] call hexvar add rbx , r15 add r12 , r15 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ rbp + hexvar ] lea r8 , [ rbp + hexvar ] add rbp , hexvar mov rdi , rbx mov rsi , r12 mov rdx , r13 mov r9 , rbp call hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar lui v0 , hexvar addiu gp , gp , hexvar sltu v0 , a3 , v0 sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s4 , a3 sw s2 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) move s2 , a0 sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) bnez v0 , hexvar sw a2 , hexvar ( sp ) addiu s7 , a0 , hexvar addiu s6 , a0 , hexvar lui s5 , hexvar move fp , a3 move s1 , a2 move s0 , a1 lw a3 , hexvar ( s2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edi mov eax , hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edx mov eax , hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , edi call hexvar mov ebp , eax mov eax , esi call hexvar cmp al , num je hexvar mov edx , ebp test dl , dl jne hexvar mov ecx , ebp cmp cl , num je hexvar mov edx , num test al , al je hexvar mov eax , edx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw a2 , - hexvar ( gp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lw v0 , hexvar ( a0 ) addiu a2 , zero , num move v1 , a1 beq v0 , a2 , hexvar lw a1 , hexvar ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw a2 , - hexvar ( gp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , edi call hexvar mov ebp , eax mov eax , esi call hexvar cmp al , num je hexvar mov edx , ebp test dl , dl jne hexvar mov ecx , ebp cmp cl , num je hexvar mov edx , num test al , al je hexvar mov eax , edx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov eax , dword ptr [ edi + hexvar ] mov edx , dword ptr [ esi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , edi call hexvar mov ebp , eax mov eax , esi call hexvar cmp al , num je hexvar mov edx , ebp test dl , dl jne hexvar mov ecx , ebp cmp cl , num je hexvar mov edx , num test al , al je hexvar mov eax , edx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , - num je hexvar mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , edx mov edi , eax call hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , edx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , esi mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , - num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , esi mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , - num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , - num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num beq v1 , v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] sub esi , - num setne bl movzx edi , bl mov edi , dword ptr [ edi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jmp edi mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , - num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , - num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num beq v1 , v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , - num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] sub edx , esi setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar ldr r0 , [ fp , - num ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] sub edx , esi setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , edx nop leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov edx , dword ptr [ ebp - num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esi + hexvar ] , edx add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ eax ] mov esi , dword ptr [ esi + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ ecx ] , esi mov esi , dword ptr [ eax ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ eax ] mov edi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov ecx , dword ptr [ ecx ] mov eax , dword ptr [ eax ] mov dword ptr [ eax + hexvar ] , ecx lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r2 , [ r2 , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - num ] str r2 , [ r3 , hexvar ] mov r0 , r0 add sp , fp , num pop { fp } bx lr
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r2 , [ r2 , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - num ] str r2 , [ r3 , hexvar ] mov r0 , r0 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , ecx mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push { r4 , r5 } mov r4 , num mov r5 , num ldr r3 , [ pc , hexvar ] str r4 , [ r0 , hexvar ] str r5 , [ r0 , hexvar ] pop { r4 , r5 } str r3 , [ r0 , hexvar ] bx lr addseq pc , r5 , r6 , lsl r6
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , hexvar nop pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , hexvar nop pop rbp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lui s2 , hexvar lw t9 , - hexvar ( gp ) move s1 , a0 addiu a3 , zero , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num lw s0 , hexvar ( s1 )
push r14 push rbx push rax test rdi , rdi je hexvar mov r14 , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rbx , qword ptr [ r14 + hexvar ] test rbx , rbx je hexvar add dword ptr [ rbx + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a0 , hexvar move s1 , a0 addiu a3 , zero , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw s0 , hexvar ( s1 ) beqz s0 , hexvar addiu a3 , zero , hexvar lw v0 , hexvar ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lui s2 , hexvar lw t9 , - hexvar ( gp ) move s1 , a0 addiu a3 , zero , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num lw s0 , hexvar ( s1 )
push r14 push rbx push rax test rdi , rdi je hexvar mov r14 , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rbx , qword ptr [ r14 + hexvar ] test rbx , rbx je hexvar add dword ptr [ rbx + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push rbp push r15 push r14 push rbx push rax mov r14 , rdi test rdi , rdi mov eax , hexvar mov ebp , hexvar cmove ebp , eax mov eax , hexvar mov r15d , hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar mov rbx , qword ptr [ rsp ] mov eax , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebx , ebx jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ r14 + hexvar ] mov qword ptr [ rsp ] , rax cmp qword ptr [ rsp ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov rax , qword ptr [ rsp ] add dword ptr [ rax + hexvar ] , num mov eax , hexvar jmp hexvar mov eax , ebp jmp hexvar mov rax , rbx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar mov esi , dword ptr [ edi + hexvar ] add esp , hexvar test esi , esi je hexvar add dword ptr [ esi + hexvar ] , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lui s2 , hexvar lw t9 , - hexvar ( gp ) move s1 , a0 addiu a3 , zero , hexvar addiu a2 , s2 , - hexvar addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num lw s0 , hexvar ( s1 )
push r14 push rbx push rax test rdi , rdi je hexvar mov r14 , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rbx , qword ptr [ r14 + hexvar ] test rbx , rbx je hexvar add dword ptr [ rbx + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , num cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
ldr r3 , [ r0 ] push { r4 , lr } mov r4 , r0 cmp r3 , num ldrls pc , [ pc , r3 , lsl num ] b hexvar strdeq r4 , r5 , [ r1 ] , -r4 andeq r4 , r1 , ip , ror num andeq r4 , r1 , ip , ror num andeq r4 , r1 , r0 , lsl num strdeq r4 , r5 , [ r1 ] , -r4 ldr r0 , [ r0 , num ] bl hexvar mov r3 , num str r3 , [ r4 ] pop { r4 , pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , num ja hexvar mov eax , dword ptr [ esi ] mov edx , dword ptr [ ebx + eax * num - hexvar ] add edx , ebx jmp edx lea esi , [ esi ] lea edi , [ edi ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 ) sltiu v0 , v0 , num beqz v0 , hexvar lui a3 , hexvar lw v0 , ( a0 ) sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v0 , v1 lw v0 , ( v0 ) jr v0 move s0 , a0 lw a0 , num ( a0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , zero , num sw v0 , ( s0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , num ( a0 ) bltz v0 , hexvar addiu v0 , zero , num lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar lui a0 , hexvar addiu a0 , a0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar lui a0 , hexvar addiu a0 , a0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] cmp edx , num ja hexvar shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] cmp eax , num ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] mov edi , eax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax js hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + num ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] cmp dword ptr [ ecx + num ] , num setl dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov dword ptr [ ecx ] , num mov esp , ebp pop ebp ret
push rbx cmp dword ptr [ rdi ] , num ja hexvar mov eax , dword ptr [ rdi ] lea rdx , [ rip + hexvar ] mov rbx , rdi movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax nop dword ptr [ rax + rax ] mov edi , dword ptr [ rdi + num ] call hexvar mov dword ptr [ rbx ] , num pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov edx , ecx sub edx , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jge hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , ecx sub edx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx ja hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num jge hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) move a1 , zero sw ra , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , a0 , hexvar lui v0 , hexvar lui v1 , hexvar lw ra , hexvar ( sp ) addiu v0 , v0 , hexvar addiu v1 , v1 , hexvar sw v0 , ( s0 )
push edi mov edx , dword ptr [ esp + num ] lea ecx , [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num lea edi , [ edx + hexvar ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar mov eax , num pop edi ret
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov eax , num ret
push edi mov edx , dword ptr [ esp + num ] lea ecx , [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num lea edi , [ edx + hexvar ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar mov eax , num pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] mov r2 , hexvar mov r1 , num ldr r0 , [ sp , num ] bl hexvar ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov eax , num ret
push edi mov edx , dword ptr [ esp + num ] xor eax , eax lea edi , [ edx + hexvar ] lea ecx , [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx ] , hexvar mov dword ptr [ edx + num ] , hexvar mov eax , num mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 addiu a2 , zero , hexvar move a1 , zero addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , ( s0 )
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov eax , num ret
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov eax , num ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] asr r4 , r3 , hexvar ldr r2 , [ fp , - hexvar ] mov r0 , r3 mov r1 , r4 bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , edx sar esi , hexvar mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sar ecx , hexvar mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , eax call hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) move t1 , v0 sra v0 , v0 , hexvar move t0 , v0 lw a2 , hexvar ( fp ) move a1 , t1 move a0 , t0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + num ] cdq sub esp , num push dword ptr [ ebp + hexvar ] push edx push eax mov ebx , ecx call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , edx sar esi , hexvar mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , edx sar esi , hexvar mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] asr r4 , r3 , hexvar ldr r2 , [ fp , - hexvar ] mov r0 , r3 mov r1 , r4 bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar leave ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] cmp r2 , r3 beq hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop move v0 , zero lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( s0 ) beqz v0 , hexvar move v0 , zero addiu a0 , s0 , hexvar addiu a0 , a0 , num lw v1 , - num ( a0 ) bnez v1 , hexvar addiu v0 , v0 , num addiu v1 , zero , num beq v0 , v1 , hexvar addiu v1 , zero , hexvar lw ra , hexvar ( sp ) xori v0 , v0 , num lw s0 , hexvar ( sp ) movn v1 , zero , v0 addiu sp , sp , hexvar jr ra move v0 , v1 b hexvar addiu v0 , zero , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop move v0 , zero lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( s0 ) beqz v0 , hexvar move v0 , zero addiu a0 , s0 , hexvar addiu a0 , a0 , num lw v1 , - num ( a0 ) bnez v1 , hexvar addiu v0 , v0 , num addiu v1 , zero , num beq v0 , v1 , hexvar addiu v1 , zero , hexvar lw ra , hexvar ( sp ) xori v0 , v0 , num lw s0 , hexvar ( sp ) movn v1 , zero , v0 addiu sp , sp , hexvar jr ra move v0 , v1 b hexvar addiu v0 , zero , hexvar
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar mov ecx , num cmp eax , hexvar je hexvar mov eax , ecx add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar xor ecx , ecx cmp eax , hexvar je hexvar add esp , num mov eax , ecx pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] cmp r2 , r3 beq hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbx sub rsp , hexvar mov rbx , rdi call hexvar mov rdi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax mov edx , hexvar jmp hexvar mov edx , hexvar xor eax , eax nop word ptr [ rax + rax ] cmp edx , hexvar jg hexvar cmp edx , hexvar jle hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , hexvar cmp ecx , hexvar je hexvar mov edx , hexvar xor ecx , ecx jmp hexvar nop word ptr [ rax + rax ] cmp edx , hexvar jle hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar jmp hexvar nop dword ptr [ rax ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar jmp hexvar nop dword ptr [ rax ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar jmp hexvar mov esi , dword ptr [ rsp + num ] mov edx , hexvar cmp esi , num je hexvar mov edx , hexvar jmp hexvar mov ecx , dword ptr [ rsp + num ] add ecx , num mov edx , hexvar jmp hexvar mov edx , hexvar mov eax , hexvar jmp hexvar mov dword ptr [ rsp + num ] , ecx movsxd rdx , dword ptr [ rsp + num ] cmp dword ptr [ rbx + rdx * num + hexvar ] , num mov edx , hexvar je hexvar mov edx , hexvar jmp hexvar mov esi , dword ptr [ rsp + num ] mov edx , hexvar cmp esi , num je hexvar mov edx , hexvar jmp hexvar mov edx , hexvar mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop move v0 , zero lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( s0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar xor ecx , ecx cmp eax , hexvar je hexvar add esp , num mov eax , ecx pop ebx pop esi ret
push rbx mov rbx , rdi call hexvar mov rdi , rax call hexvar mov ecx , eax xor eax , eax cmp ecx , hexvar jne hexvar xor eax , eax nop cmp dword ptr [ rbx + rax * num + hexvar ] , num lea rax , [ rax + num ] jne hexvar xor ecx , ecx cmp eax , num mov edx , hexvar cmovne edx , ecx cmp eax , num mov eax , hexvar cmovne eax , edx pop rbx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a0 , ( a0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax jl hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , eax mov eax , ecx shl eax , num add eax , ecx shl eax , num add eax , edx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - num ] leave ret
mov eax , dword ptr [ rdi + hexvar ] cmp eax , dword ptr [ rdi + hexvar ] jge hexvar cdqe lea rdx , [ rax + rax * num ] mov rax , qword ptr [ rdi + hexvar ] lea rax , [ rax + rdx * num ] mov dword ptr [ rax + num ] , num add dword ptr [ rdi + hexvar ] , num ret
mov eax , dword ptr [ rdi + hexvar ] cmp eax , dword ptr [ rdi + hexvar ] jge hexvar cdqe lea rdx , [ rax + rax * num ] mov rax , qword ptr [ rdi + hexvar ] lea rax , [ rax + rdx * num ] mov dword ptr [ rax + num ] , num add dword ptr [ rdi + hexvar ] , num ret
lw v1 , hexvar ( a0 ) lw a1 , hexvar ( a0 ) slt a1 , v1 , a1 beqz a1 , hexvar nop sll v0 , v1 , num addu v0 , v0 , v1 sll v1 , v0 , num lw v0 , hexvar ( a0 ) addu v0 , v0 , v1 sw zero , num ( v0 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax jl hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , eax mov eax , ecx shl eax , num add eax , ecx shl eax , num add eax , edx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rdi + hexvar ] jl hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movsxd rcx , dword ptr [ rcx + hexvar ] shl rcx , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] add edx , num mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
mov r3 , r0 ldr r2 , [ r0 , hexvar ] ldr r1 , [ r0 , hexvar ] cmp r2 , r1 ldrlt r0 , [ r0 , hexvar ] addlt r0 , r0 , r2 , lsl num movlt r2 , num strlt r2 , [ r0 , num ] ldrlt r2 , [ r3 , hexvar ] addlt r2 , r2 , num strlt r2 , [ r3 , hexvar ] movge r0 , num bx lr
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rdi + hexvar ] jl hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movsxd rcx , dword ptr [ rcx + hexvar ] shl rcx , num add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , num mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] add edx , num mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
mov edx , dword ptr [ eax + hexvar ] cmp edx , dword ptr [ eax + hexvar ] jge hexvar shl edx , num add edx , dword ptr [ eax + hexvar ] mov dword ptr [ edx + num ] , num add dword ptr [ eax + hexvar ] , num mov eax , edx ret
push rbx mov ebx , esi call hexvar test ebx , ebx setne dl test eax , eax sete al and eax , edx xor eax , num movzx eax , al pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov eax , dword ptr [ rbp - hexvar ] test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar cmp dword ptr [ rbp - hexvar ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbx mov ebx , esi call hexvar test ebx , ebx setne dl test eax , eax sete al and eax , edx xor eax , num movzx eax , al pop rbx ret
push rbx mov ebx , esi call hexvar test ebx , ebx setne dl test eax , eax sete al and eax , edx xor eax , num movzx eax , al pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] call hexvar test esi , esi setne dl test eax , eax sete al add esp , hexvar and eax , edx xor eax , num movzx eax , al pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar cmp dword ptr [ rbp - hexvar ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , ecx mov rdi , rax call hexvar test eax , eax jne hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] call hexvar test esi , esi setne dl test eax , eax sete al add esp , hexvar and eax , edx xor eax , num movzx eax , al pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar cmp dword ptr [ rbp - hexvar ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp push r14 push rbx mov ebp , edx mov r14 , rsi mov rbx , rdi mov esi , hexvar call hexvar test rax , rax lea rsi , [ rax + num ] cmove rsi , rbx movsxd rdx , ebp mov rdi , r14 pop rbx pop r14 pop rbp jmp hexvar
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar add dword ptr [ esp + hexvar ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar nop add esp , hexvar pop ebx ret
push rbp push r14 push rbx mov ebp , edx mov r14 , rsi mov rbx , rdi mov esi , hexvar call hexvar test rax , rax lea rsi , [ rax + num ] cmove rsi , rbx movsxd rdx , ebp mov rdi , r14 pop rbx pop r14 pop rbp jmp hexvar
push rbp push r14 push rbx mov ebp , edx mov r14 , rsi mov rbx , rdi mov esi , hexvar call hexvar test rax , rax lea rsi , [ rax + num ] cmove rsi , rbx movsxd rdx , ebp mov rdi , r14 pop rbx pop r14 pop rbp jmp hexvar
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push hexvar push esi call hexvar lea edx , [ eax + num ] add esp , hexvar test eax , eax push dword ptr [ esp + hexvar ] cmovne esi , edx push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) addiu v0 , v0 , num sw v0 , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) move a2 , v0 lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar add dword ptr [ esp + hexvar ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar nop add esp , hexvar pop ebx ret
push rbp push r14 push rbx mov ebp , edx mov r14 , rsi mov rbx , rdi mov esi , hexvar call hexvar test rax , rax lea rsi , [ rax + num ] cmove rsi , rbx movsxd rdx , ebp mov rdi , r14 pop rbx pop r14 pop rbp jmp hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) addiu a1 , zero , hexvar sw gp , hexvar ( sp ) sw a2 , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar lw a2 , hexvar ( sp ) addiu s0 , v0 , num lw ra , hexvar ( sp ) move a1 , s0 move a0 , s1 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar
push rbp push r14 push rbx mov ebp , edx mov r14 , rsi mov rbx , rdi mov esi , hexvar call hexvar test rax , rax lea rsi , [ rax + num ] cmove rsi , rbx movsxd rdx , ebp mov rdi , r14 pop rbx pop r14 pop rbp jmp hexvar
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp eax , dword ptr [ ecx ] jne hexvar add esp , num pop ebx jmp edx lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar xor eax , eax add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push rax mov rcx , qword ptr [ rdi ] mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar cmp rcx , qword ptr [ rsi ] je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] cmp ecx , edx je hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar add esp , num pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] blx r3 mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] cmp ecx , edx je hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push rax mov rcx , qword ptr [ rdi ] mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar cmp rcx , qword ptr [ rsi ] je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] blx r3 mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] cmp ecx , edx je hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] sub rax , rdi setne cl movzx esi , cl mov edi , esi mov rdi , qword ptr [ rdi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar test eax , eax sete cl movzx eax , cl mov esi , eax mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] sub cl , hexvar mov eax , hexvar mov edx , hexvar cmove rdx , rax mov qword ptr [ rbp - num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar test eax , eax sete cl movzx eax , cl mov esi , eax mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] sub cl , hexvar mov eax , hexvar mov edx , hexvar cmove rdx , rax mov qword ptr [ rbp - num ] , rdx mov rax , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov ecx , hexvar mov edx , hexvar cmove rdx , rcx mov qword ptr [ rbp - num ] , rdx mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , esp mov dword ptr [ esi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx setne bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] sub cl , hexvar mov eax , hexvar mov edx , hexvar cmove edx , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , cl jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] sub cl , hexvar mov eax , hexvar mov edx , hexvar cmove edx , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , cl jmp eax mov eax , dword ptr [ ebp + hexvar ] sub eax , num mov ecx , hexvar mov edx , hexvar cmove edx , ecx mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar lea eax , [ hexvar ] lea ecx , [ hexvar ] cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar lea eax , [ hexvar ] lea ecx , [ hexvar ] cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , num lea eax , [ hexvar ] lea ecx , [ hexvar ] cmove ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } mov r2 , num mov r6 , r0 mov r5 , r1 mov r1 , r0 mov r0 , num bl hexvar cmp r6 , r0 mov r4 , r0 beq hexvar mov r0 , r4 pop { r4 , r5 , r6 , pc }
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , eax mov edi , edx sub esp , num push num push eax push num call hexvar add esp , hexvar cmp esi , eax je hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , eax mov edi , edx sub esp , num push num push eax push num call hexvar add esp , hexvar cmp esi , eax je hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar lea eax , [ hexvar ] lea ecx , [ hexvar ] cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] cmp eax , hexvar lea eax , [ hexvar ] lea ecx , [ hexvar ] cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , num lea eax , [ hexvar ] lea ecx , [ hexvar ] cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , esp mov dword ptr [ esi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx setne bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] sub cl , hexvar mov eax , hexvar mov edx , hexvar cmove edx , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , cl jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov cl , byte ptr [ eax ] sub cl , hexvar mov eax , hexvar mov edx , hexvar cmove edx , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , cl jmp eax mov eax , dword ptr [ ebp + hexvar ] sub eax , num mov ecx , hexvar mov edx , hexvar cmove edx , ecx mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
beqz a0 , hexvar move v0 , zero beqz a1 , hexvar nop addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( a0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi je hexvar cmp dword ptr [ edi ] , esi je hexvar lea ebp , [ ebx - hexvar ] sub esp , num push esi push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push ebp push dword ptr [ edi ] call hexvar mov dword ptr [ edi ] , esi add esp , hexvar xor eax , eax test esi , esi setne al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r2 , [ sp ] cmp r2 , r3 beq hexvar ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi je hexvar cmp dword ptr [ edi ] , esi je hexvar lea ebp , [ ebx - hexvar ] sub esp , num push esi push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push ebp push dword ptr [ edi ] call hexvar mov dword ptr [ edi ] , esi add esp , hexvar xor eax , eax test esi , esi setne al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push rbx push rax xor eax , eax test rdi , rdi je hexvar mov rbx , rsi test rsi , rsi je hexvar mov r14 , rdi cmp qword ptr [ rdi ] , rbx je hexvar mov edi , hexvar mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov esi , hexvar call hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov rbx , qword ptr [ r14 ] xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax xor eax , eax test rdi , rdi je hexvar mov rbx , rsi test rsi , rsi je hexvar mov r14 , rdi cmp qword ptr [ rdi ] , rbx je hexvar mov edi , hexvar mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov esi , hexvar call hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov rbx , qword ptr [ r14 ] xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r14 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r2 , [ sp ] cmp r2 , r3 beq hexvar ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi je hexvar cmp dword ptr [ edi ] , esi je hexvar lea ebp , [ ebx - hexvar ] sub esp , num push esi push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push ebp push dword ptr [ edi ] call hexvar mov dword ptr [ edi ] , esi add esp , hexvar xor eax , eax test esi , esi setne al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push rbx push rax xor eax , eax test rdi , rdi je hexvar mov rbx , rsi test rsi , rsi je hexvar mov r14 , rdi cmp qword ptr [ rdi ] , rbx je hexvar mov edi , hexvar mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov esi , hexvar call hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov rbx , qword ptr [ r14 ] xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax xor eax , eax test rdi , rdi je hexvar mov rbx , rsi test rsi , rsi je hexvar mov r14 , rdi cmp qword ptr [ rdi ] , rbx je hexvar mov edi , hexvar mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov esi , hexvar call hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov rbx , qword ptr [ r14 ] xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push r13 push r12 mov r13 , rdx push rbp push rbx mov ebp , edi mov r12 , rsi sub rsp , num call hexvar mov ebx , eax xor eax , eax test ebx , ebx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push ebp push edi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax jne hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , a0 lw gp , hexvar ( sp ) bnez v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , num lw v0 , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push ebp push edi push esi call hexvar add esp , hexvar test eax , eax mov edx , eax jne hexvar add esp , hexvar mov eax , edx pop ebx pop esi pop edi pop ebp ret
push r13 push r12 mov r13 , rdx push rbp push rbx mov ebp , edi mov r12 , rsi sub rsp , num call hexvar mov ebx , eax xor eax , eax test ebx , ebx jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jne hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov ecx , dword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jne hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , lr } mov r1 , r0 mov r4 , r0 sub sp , sp , num mov r2 , num mov r0 , num bl hexvar cmp r4 , r0 mov r5 , r0 beq hexvar mov r1 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r5 add sp , sp , num pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar add eax , num mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax add ecx , num add ecx , num mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 addiu a2 , zero , num move a1 , a0 move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beq s1 , v0 , hexvar move s0 , v0 move a1 , s1 move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a0 , s0 move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s2 , v0 move a0 , s1 lw t9 , - hexvar ( gp )
push r12 push rbp mov rsi , rdi push rbx mov rbp , rdi mov edx , num xor edi , edi mov rbx , rbp call hexvar cmp rbp , rax je hexvar mov rsi , rbp mov rdi , rax mov r12 , rax call hexvar test al , al mov rbx , r12 je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push r12 push rbp mov rsi , rdi push rbx mov rbp , rdi mov edx , num xor edi , edi call hexvar cmp rbp , rax mov rbx , rax je hexvar mov rsi , rbp mov rdi , rax call hexvar test al , al je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] b hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r4 , r0 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 add r3 , r4 , r3 add r3 , r3 , num mov r0 , r3 bl hexvar mov r3 , r0 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a2 , zero , num sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , zero sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , s1 beq s1 , v0 , hexvar move s0 , v0 move a1 , s1 jal hexvar move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov edx , num mov rsi , rdi mov edi , num call hexvar mov rbx , rax cmp rbp , rax je hexvar mov rsi , rbp mov rdi , rax call hexvar test al , al je hexvar mov rax , rbx add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rbx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push { r4 , r5 , r6 , lr } mov r1 , r0 mov r4 , r0 sub sp , sp , num mov r2 , num mov r0 , num bl hexvar cmp r4 , r0 mov r5 , r0 beq hexvar mov r1 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r5 add sp , sp , num pop { r4 , r5 , r6 , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r3 mov r6 , r2 mov r7 , r0 add r0 , r3 , num mov r8 , r1 bl hexvar mov r1 , r6 mov r2 , r4 mov r5 , r0 bl hexvar mov r3 , num mov r1 , r5 mov r2 , r3 mov r0 , r7 strb r3 , [ r5 , r4 ] bl hexvar subs r6 , r0 , num bne hexvar ldr r4 , [ r8 ] cmp r4 , num beq hexvar ldrb r6 , [ r5 ] b hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar ldr r0 , [ r4 , num ] ldrb r3 , [ r0 ] cmp r3 , r6 bne hexvar mov r1 , r5 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ r4 , num ] mov r0 , r5 cmp r3 , num ldreq r3 , [ sp , hexvar ] streq r3 , [ r4 , num ] bl hexvar ldr r6 , [ r4 , hexvar ] mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw ra , hexvar ( sp ) addiu a0 , a3 , num sw s4 , hexvar ( sp ) move s4 , a1 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a3 move a2 , s0 lw gp , hexvar ( sp ) move a1 , s2 move a0 , v0 move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 addu s0 , s1 , s0 move a2 , zero lw gp , hexvar ( sp ) move a1 , s1 sb zero , ( s0 ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , s3 lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , hexvar ( sp ) lw s0 , ( s4 )
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r3 mov r6 , r2 mov r7 , r0 add r0 , r3 , num mov r8 , r1 bl hexvar mov r1 , r6 mov r2 , r4 mov r5 , r0 bl hexvar mov r3 , num mov r1 , r5 mov r2 , r3 mov r0 , r7 strb r3 , [ r5 , r4 ] bl hexvar subs r6 , r0 , num bne hexvar ldr r4 , [ r8 ] cmp r4 , num beq hexvar ldrb r6 , [ r5 ] b hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar ldr r0 , [ r4 , num ] ldrb r3 , [ r0 ] cmp r3 , r6 bne hexvar mov r1 , r5 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ r4 , num ] mov r0 , r5 cmp r3 , num ldreq r3 , [ sp , hexvar ] streq r3 , [ r4 , num ] bl hexvar ldr r6 , [ r4 , hexvar ] mov r0 , r6 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp push edi mov ebp , edx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx lea eax , [ edi + num ] push eax call hexvar add esp , hexvar mov esi , eax push edi mov ecx , dword ptr [ esp + hexvar ] push ecx push eax call hexvar add esp , hexvar mov byte ptr [ esi + edi ] , num push num push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + num ] , eax jne hexvar mov edi , dword ptr [ ebp ] test edi , edi je hexvar movzx ecx , byte ptr [ esi ] jmp hexvar nop lea esi , [ esi ] mov edi , dword ptr [ edi ] test edi , edi je hexvar mov eax , dword ptr [ edi + num ] cmp byte ptr [ eax ] , cl jne hexvar mov byte ptr [ esp + num ] , cl sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax movzx ecx , byte ptr [ esp + num ] jne hexvar mov eax , dword ptr [ edi + num ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + num ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , dword ptr [ edi + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw ra , hexvar ( sp ) addiu a0 , a3 , num sw s4 , hexvar ( sp ) move s4 , a1 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a3 move a2 , s0 lw gp , hexvar ( sp ) move a1 , s2 move a0 , v0 move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 addu s0 , s1 , s0 move a2 , zero lw gp , hexvar ( sp ) move a1 , s1 sb zero , ( s0 ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , s3 lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , hexvar ( sp ) lw s0 , ( s4 )
push ebp push edi mov ebp , edx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx lea eax , [ edi + num ] push eax call hexvar add esp , hexvar mov esi , eax push edi mov ecx , dword ptr [ esp + hexvar ] push ecx push eax call hexvar add esp , hexvar mov byte ptr [ esi + edi ] , num push num push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + num ] , eax jne hexvar mov edi , dword ptr [ ebp ] test edi , edi je hexvar movzx ecx , byte ptr [ esi ] jmp hexvar nop lea esi , [ esi ] mov edi , dword ptr [ edi ] test edi , edi je hexvar mov eax , dword ptr [ edi + num ] cmp byte ptr [ eax ] , cl jne hexvar mov byte ptr [ esp + num ] , cl sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax movzx ecx , byte ptr [ esp + num ] jne hexvar mov eax , dword ptr [ edi + num ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + num ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , dword ptr [ edi + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov ebp , edx push esi push ebx mov edi , eax call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , ecx call hexvar sub esp , num mov esi , eax push num push eax push edi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + num ] , eax jne hexvar mov edi , dword ptr [ ebp ] test edi , edi je hexvar movzx ecx , byte ptr [ esi ] jmp hexvar nop mov edi , dword ptr [ edi ] test edi , edi je hexvar mov eax , dword ptr [ edi + num ] cmp byte ptr [ eax ] , cl jne hexvar mov byte ptr [ esp + num ] , cl sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax movzx ecx , byte ptr [ esp + num ] jne hexvar mov eax , dword ptr [ edi + num ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + num ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , dword ptr [ edi + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov ebp , edx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx lea eax , [ edi + num ] push eax call hexvar add esp , hexvar mov esi , eax push edi mov ecx , dword ptr [ esp + hexvar ] push ecx push eax call hexvar add esp , hexvar mov byte ptr [ esi + edi ] , num push num push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ esp + num ] , eax jne hexvar mov edi , dword ptr [ ebp ] test edi , edi je hexvar movzx ecx , byte ptr [ esi ] jmp hexvar nop lea esi , [ esi ] mov edi , dword ptr [ edi ] test edi , edi je hexvar mov eax , dword ptr [ edi + num ] cmp byte ptr [ eax ] , cl jne hexvar mov byte ptr [ esp + num ] , cl sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax movzx ecx , byte ptr [ esp + num ] jne hexvar mov eax , dword ptr [ edi + num ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edi + num ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , dword ptr [ edi + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s4 , a1 move s3 , a0 sw ra , hexvar ( sp ) move a0 , a2 sw s1 , hexvar ( sp ) move a1 , a3 sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) jal hexvar sw s0 , hexvar ( sp ) move a2 , zero lw gp , hexvar ( sp ) move a1 , v0 move a0 , s3 lw t9 , - hexvar ( gp ) bal hexvar move s1 , v0 lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , hexvar ( sp ) lw s0 , ( s4 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 sw ra , hexvar ( sp ) addiu a0 , a3 , num sw s4 , hexvar ( sp ) move s4 , a1 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a3 move a2 , s0 lw gp , hexvar ( sp ) move a1 , s2 move a0 , v0 move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 addu s0 , s1 , s0 move a2 , zero lw gp , hexvar ( sp ) move a1 , s1 sb zero , ( s0 ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , s3 lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , hexvar ( sp ) lw s0 , ( s4 )
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov rbx , rsi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax cmp ecx , num je hexvar cmp ecx , num jb hexvar cmp ecx , num je hexvar mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
cmp r3 , num push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r3 mov r7 , r0 mov r5 , r2 mov r4 , r1 beq hexvar blo hexvar cmp r3 , num popne { r4 , r5 , r6 , r7 , r8 , pc }
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov rbx , rsi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax cmp ecx , num je hexvar cmp ecx , num jb hexvar cmp ecx , num je hexvar mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 push r12 push rbp mov r12 , rdi push rbx mov rbp , rdx mov rbx , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax cmp ecx , num je hexvar jb hexvar cmp ecx , num je hexvar mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx cmp eax , num je hexvar cmp eax , num jb hexvar cmp eax , num je hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
cmp r3 , num push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r3 mov r7 , r0 mov r5 , r2 mov r4 , r1 beq hexvar blo hexvar cmp r3 , num popne { r4 , r5 , r6 , r7 , r8 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 move s1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , num beq a3 , v0 , hexvar lw t9 , - hexvar ( gp ) beqz a3 , hexvar addiu v0 , zero , num beq a3 , v0 , hexvar nop lw v1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , num ( a2 )
cmp r3 , num push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r3 mov r7 , r0 mov r5 , r2 mov r4 , r1 beq hexvar blo hexvar cmp r3 , num popne { r4 , r5 , r6 , r7 , r8 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , num sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) beq a3 , v0 , hexvar sw gp , hexvar ( sp ) beqz a3 , hexvar addiu v0 , zero , num bne a3 , v0 , hexvar nop lw v0 , hexvar ( a2 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , num sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) beq a3 , v0 , hexvar sw gp , hexvar ( sp ) beqz a3 , hexvar addiu v0 , zero , num bne a3 , v0 , hexvar nop lw v0 , hexvar ( a2 )
push ebp mov ebp , esp call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num nop pop ebp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num nop pop ebp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num nop pop ebp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num nop pop ebp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , num nop pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a3 sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move a0 , a2 sw s2 , hexvar ( sp ) move s2 , a2 sw s0 , hexvar ( sp ) lui s3 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) addiu a2 , zero , hexvar lw gp , hexvar ( sp ) addiu s0 , v0 , num addiu a1 , s3 , hexvar lw t9 , - hexvar ( gp ) jalr t9 sll a0 , s0 , num beqz v0 , hexvar move a0 , s2 move a2 , s0 move a1 , v0 jal hexvar move s1 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 slt s0 , s0 , v0 beqz s0 , hexvar move a3 , s6 lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , s3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 move v0 , s2 lw ra , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move s2 , zero lw s6 , hexvar ( sp ) move v0 , s2 lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a2 , s1 move a1 , s5 jal hexvar move a0 , s4 lw gp , hexvar ( sp ) b hexvar move s2 , v0
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , rcx mov rbp , rdx mov r15 , rsi mov r12 , rdi mov rdi , rdx call hexvar mov r14d , eax lea edi , [ r14 * num + num ] mov esi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r13 , rax mov eax , dword ptr [ rbp + num ] test eax , eax je hexvar mov ecx , eax add ecx , - num js hexvar mov r9 , qword ptr [ rbp ] movsxd r10 , ecx shl eax , num xor ebp , ebp movabs r8 , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r9 + r10 * num ] test rdi , rdi je hexvar mov esi , hexvar mov rcx , r8 nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] test rcx , rdi je hexvar cmp ebp , r14d jg hexvar lea edx , [ rax + rsi ] movsxd rbx , ebp mov dword ptr [ r13 + rbx * num ] , edx add ebp , num shr rcx , num add esi , - num cmp esi , - hexvar jne hexvar add r10 , - num add eax , - hexvar test r10d , r10d jns hexvar cmp ebp , r14d jg hexvar movsxd rax , ebp mov dword ptr [ r13 + rax * num ] , hexvar add ebp , num test ebp , ebp je hexvar add r14d , num cmp ebp , r14d jg hexvar mov rdi , r12 mov rsi , r15 mov rdx , r13 mov rcx , qword ptr [ rsp ] call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , r13 call hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rcx mov rbx , rdx mov r15 , rsi mov r12 , rdi mov rdi , rdx call hexvar add eax , num mov dword ptr [ rsp + num ] , eax mov edi , dword ptr [ rsp + num ] shl edi , num mov esi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r13d , hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar nop word ptr [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdx , qword ptr [ rsp + hexvar ] mov rdi , r12 mov rsi , r15 mov rcx , r14 call hexvar mov ebp , eax mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov dword ptr [ rsp + hexvar ] , ebp cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx xor ebp , ebp jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov eax , dword ptr [ rsp + num ] mov ecx , dword ptr [ rsp + hexvar ] cmp ecx , eax mov eax , hexvar cmovg eax , r13d jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar mov ebp , dword ptr [ rsp + hexvar ] jmp hexvar mov edx , dword ptr [ rsp + num ] mov rsi , qword ptr [ rsp + hexvar ] mov rdi , rbx call hexvar mov dword ptr [ rsp + hexvar ] , eax cmp dword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r13d jmp hexvar mov eax , dword ptr [ rsp + hexvar ] add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s2 , a2 move s5 , a3 move a0 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu s0 , v0 , num addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar sll a0 , s0 , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 move a2 , s0 move a1 , v0 move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 slt s0 , s0 , v0 beqz s0 , hexvar move a3 , s5 addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s2 lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a2 , s1 move a1 , s4 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) b hexvar move s2 , v0 b hexvar move s2 , zero
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 add r3 , r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 ble hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar b hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) lui s6 , hexvar sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , a2 sw gp , hexvar ( sp ) move s0 , a2 lw t9 , - hexvar ( gp ) jalr t9 sw s5 , hexvar ( sp ) addiu a2 , zero , hexvar lw gp , hexvar ( sp ) addiu s4 , v0 , num addiu a1 , s6 , hexvar lw t9 , - hexvar ( gp ) jalr t9 sll a0 , s4 , num beqz v0 , hexvar lw gp , hexvar ( sp ) move s5 , v0 lw v0 , num ( s0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 add r3 , r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 ble hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar b hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s2 , a2 move s5 , a3 move a0 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu s0 , v0 , num addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar sll a0 , s0 , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 move a2 , s0 move a1 , v0 move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 slt s0 , s0 , v0 beqz s0 , hexvar move a3 , s5 addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s2 lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a2 , s1 move a1 , s4 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) b hexvar move s2 , v0 b hexvar move s2 , zero
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , rcx mov rbp , rdx mov r15 , rsi mov r12 , rdi mov rdi , rdx call hexvar mov r14d , eax lea edi , [ r14 * num + num ] mov esi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r13 , rax movsxd r10 , dword ptr [ rbp + num ] test r10 , r10 je hexvar test r10d , r10d jle hexvar mov r9 , qword ptr [ rbp ] mov edx , r10d shl edx , num xor ebp , ebp movabs r8 , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r9 + r10 * num - num ] add r10 , - num test rdi , rdi je hexvar mov esi , hexvar mov rcx , r8 nop word ptr cs : [ rax + rax ] test rcx , rdi je hexvar cmp ebp , r14d jg hexvar lea eax , [ rdx + rsi ] movsxd rbx , ebp mov dword ptr [ r13 + rbx * num ] , eax add ebp , num shr rcx , num add esi , - num cmp esi , - hexvar jne hexvar add edx , - hexvar test r10 , r10 jg hexvar cmp ebp , r14d jg hexvar movsxd rax , ebp mov dword ptr [ r13 + rax * num ] , hexvar add ebp , num test ebp , ebp je hexvar add r14d , num cmp ebp , r14d jg hexvar mov rdi , r12 mov rsi , r15 mov rdx , r13 mov rcx , qword ptr [ rsp ] call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , r13 call hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov qword ptr [ rsp ] , rcx mov rbp , rdx mov r15 , rsi mov r12 , rdi mov rdi , rdx call hexvar mov r14d , eax lea edi , [ r14 * num + num ] mov esi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov r13 , rax movsxd r10 , dword ptr [ rbp + num ] test r10 , r10 je hexvar test r10d , r10d jle hexvar mov r9 , qword ptr [ rbp ] mov edx , r10d shl edx , num xor ebp , ebp movabs r8 , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r9 + r10 * num - num ] add r10 , - num test rdi , rdi je hexvar mov esi , hexvar mov rcx , r8 nop word ptr cs : [ rax + rax ] test rcx , rdi je hexvar cmp ebp , r14d jg hexvar lea eax , [ rdx + rsi ] movsxd rbx , ebp mov dword ptr [ r13 + rbx * num ] , eax add ebp , num shr rcx , num add esi , - num cmp esi , - hexvar jne hexvar add edx , - hexvar test r10 , r10 jg hexvar cmp ebp , r14d jg hexvar movsxd rax , ebp mov dword ptr [ r13 + rax * num ] , hexvar add ebp , num test ebp , ebp je hexvar add r14d , num cmp ebp , r14d jg hexvar mov rdi , r12 mov rsi , r15 mov rdx , r13 mov rcx , qword ptr [ rsp ] call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , r13 call hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , zero , v0 andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar mov ebx , eax mov edi , edx mov esi , ecx mov ebp , num jmp hexvar mov edx , dword ptr [ ebx ] mov ecx , ebx test edx , edx je hexvar mov ebx , edx mov edx , dword ptr [ ebx + num ] cmp edx , ecx je hexvar test edx , edx je hexvar mov ebx , edx sub esp , num push ebx push esi call edi add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ ebx + num ] mov ecx , ebp test edx , edx jne hexvar jmp hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar mov ebx , eax mov edi , edx mov esi , ecx mov ebp , num jmp hexvar mov edx , dword ptr [ ebx ] mov ecx , ebx test edx , edx je hexvar mov ebx , edx mov edx , dword ptr [ ebx + num ] cmp edx , ecx je hexvar test edx , edx je hexvar mov ebx , edx sub esp , num push ebx push esi call edi add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ ebx + num ] mov ecx , ebp test edx , edx jne hexvar jmp hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) move a1 , s0 move t9 , s2 jalr t9 move a0 , s1 bnez v0 , hexvar lw ra , hexvar ( sp ) lw v1 , num ( s0 ) beqz v1 , hexvar move a0 , zero move s0 , v1 move a1 , v1 move t9 , s2 jalr t9 move a0 , s1 beqz v0 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s0 , v1 lw v1 , num ( s0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] cmp eax , dword ptr [ ebp - hexvar ] mov cl , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx call eax mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] cmp eax , dword ptr [ ebp - hexvar ] mov cl , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num setne al movzx eax , al test rax , rax je hexvar mov eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - num ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar leave ret
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r6 , r1 mov r5 , r2 b hexvar mov r4 , r3 mov r1 , r4 mov r0 , r5 blx r6 cmp r0 , num popne { r4 , r5 , r6 , pc }
push edi push esi mov esi , ecx push ebx mov ebx , eax mov edi , edx sub esp , num push ebx push esi call edi add esp , hexvar test eax , eax jne hexvar mov esi , esi lea edi , [ edi ] mov edx , dword ptr [ ebx + num ] xor ecx , ecx test edx , edx je hexvar sub esp , num mov ebx , edx push ebx push esi call edi add esp , hexvar test eax , eax je hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 move s2 , a1 move s1 , a2 b hexvar move s3 , zero lw v1 , ( s0 )
push rbp push rbx mov rbp , rdi mov edi , hexvar sub rsp , num call hexvar pxor xmm0 , xmm0 lea rdi , [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , num movups xmmword ptr [ rax ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbp + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx ] , rax add rsp , num mov eax , num pop rbx pop rbp ret
push rbp push rbx mov rbp , rdi mov edi , hexvar sub rsp , num call hexvar pxor xmm0 , xmm0 lea rdi , [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , num movups xmmword ptr [ rax ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbp + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx ] , rax add rsp , num mov eax , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx sub esp , num lea eax , [ eax - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx sub esp , num lea eax , [ eax - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar leave ret
push { r4 , r5 , r6 , lr } mov r5 , r0 mov r0 , hexvar bl hexvar mov r2 , hexvar mov r1 , num mov r4 , r0 bl hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r1 , num mov r2 , num ldr r3 , [ r5 , num ] stmib r4 , { r0 , r1 , r2 } str r3 , [ r4 ] str r4 , [ r5 , num ] mov r0 , num pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
push rbp push rbx mov rbp , rdi mov edi , hexvar sub rsp , num call hexvar pxor xmm0 , xmm0 lea rdi , [ rip + hexvar ] mov rbx , rax mov qword ptr [ rax + hexvar ] , num movups xmmword ptr [ rax ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbp + hexvar ] , rbx mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx ] , rax add rsp , num mov eax , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx sub esp , num lea eax , [ eax - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp push edi push esi push ebx xor edi , edi call hexvar add ebx , hexvar sub esp , hexvar push hexvar call hexvar lea edx , [ eax + num ] mov esi , eax mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num xor ecx , ecx and edx , hexvar sub eax , edx add eax , hexvar and eax , hexvar mov dword ptr [ edx + edi ] , ecx add edi , num cmp edi , eax jb hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ ebp + num ] add esp , hexvar mov dword ptr [ esi + num ] , num mov dword ptr [ esi + hexvar ] , num mov eax , dword ptr [ eax + num ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , esi lea esp , [ ebp - hexvar ] mov eax , num pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r12 push rbp mov rsi , rdi push rbx mov rbp , rdi mov edx , num xor edi , edi call hexvar cmp rbp , rax mov rbx , rax je hexvar mov rsi , rbp mov rdi , rax call hexvar test al , al je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , lr } mov r1 , r0 mov r4 , r0 sub sp , sp , num mov r2 , num mov r0 , num bl hexvar cmp r4 , r0 mov r5 , r0 beq hexvar mov r1 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r5 add sp , sp , num pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rbx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a2 , zero , num sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move a0 , zero sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a1 , s1 beq s1 , v0 , hexvar move s0 , v0 move a1 , s1 jal hexvar move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] sub rax , rdi setne cl movzx edx , cl mov edi , edx mov rdi , qword ptr [ rdi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rdi , [ rdi + rax + num ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , hexvar xor r8d , r8d mov r9b , r8b mov al , r9b call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rbx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] push num push ebp push num call hexvar mov esi , eax add esp , hexvar cmp ebp , eax je hexvar mov edx , ebp call hexvar test al , al je hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx setne bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] lea eax , [ ecx + eax + num ] mov edx , esp mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , esp mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax mov dword ptr [ esi + num ] , hexvar call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] push num push ebp push num call hexvar mov esi , eax add esp , hexvar cmp ebp , eax je hexvar mov edx , ebp call hexvar test al , al je hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , rbx add rax , num mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp eax , hexvar jg hexvar cmp eax , hexvar jge hexvar cmp eax , num je hexvar cmp eax , num jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ ebx + hexvar ] , eax mov eax , num jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebx + hexvar ] jmp hexvar mov eax , num add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) slti v1 , v0 , hexvar beqz v1 , hexvar nop slti v1 , v0 , hexvar beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop lw a0 , hexvar ( sp ) jal hexvar nop lw v0 , hexvar ( sp ) lw v1 , ( v0 )
push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp eax , hexvar jg hexvar cmp eax , hexvar jge hexvar cmp eax , num je hexvar cmp eax , num jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ ebx + hexvar ] , eax mov eax , num jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebx + hexvar ] jmp hexvar mov eax , num add esp , num pop ebx ret
push r15 push r14 push r12 push rbx push rax mov r15 , rdx mov rbx , rdi mov r14d , num cmp esi , hexvar jle hexvar lea eax , [ rsi - hexvar ] cmp eax , num jb hexvar mov r12 , rcx cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar test rbx , rbx je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edi , dword ptr [ rbx + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , dword ptr [ r12 ] mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , r15d mov dword ptr [ rbx + hexvar ] , num jmp hexvar cmp esi , num je hexvar cmp esi , num jne hexvar mov dword ptr [ rbx + hexvar ] , r15d jmp hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar test r12 , r12 je hexvar mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar xor r14d , r14d jmp hexvar mov r14 , - num mov rax , r14 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov r15 , rdx mov rbx , rdi mov r14d , num cmp esi , hexvar jle hexvar lea eax , [ rsi - hexvar ] cmp eax , num jb hexvar mov r12 , rcx cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar test rbx , rbx je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edi , dword ptr [ rbx + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , dword ptr [ r12 ] mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , r15d mov dword ptr [ rbx + hexvar ] , num jmp hexvar cmp esi , num je hexvar cmp esi , num jne hexvar mov dword ptr [ rbx + hexvar ] , r15d jmp hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar test r12 , r12 je hexvar mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar xor r14d , r14d jmp hexvar mov r14 , - num mov rax , r14 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] cmp eax , hexvar jg hexvar cmp eax , hexvar jge hexvar cmp eax , num je hexvar cmp eax , num jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , num add esp , num pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , hexvar bgt hexvar cmp r3 , hexvar bge hexvar cmp r3 , num beq hexvar cmp r3 , num beq hexvar b hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar beq hexvar b hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp ] ldr r2 , [ r3 ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , num ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] b hexvar mvn r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , num ] str r2 , [ r3 , hexvar ] b hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar mov r3 , num str r3 , [ sp , hexvar ] mov r0 , r0 ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
slti v0 , a1 , hexvar beqz v0 , hexvar slti v0 , a1 , hexvar beqz v0 , hexvar addiu v0 , zero , num addiu v0 , zero , num beq a1 , v0 , hexvar nop addiu v0 , zero , num bne a1 , v0 , hexvar nop sw a2 , hexvar ( a0 ) jr ra addiu v0 , zero , num addiu v0 , zero , hexvar beq a1 , v0 , hexvar addiu v0 , zero , hexvar bne a1 , v0 , hexvar move v0 , zero lw v0 , hexvar ( a0 ) beqz v0 , hexvar nop beqz a3 , hexvar nop lw v0 , hexvar ( a0 ) sw v0 , ( a3 ) jr ra lw v0 , hexvar ( a0 ) move v0 , zero jr ra nop addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a3 move s2 , a2 move s0 , a0 jal hexvar nop lw v0 , ( s1 ) sw v0 , hexvar ( s0 ) sw s2 , hexvar ( s0 ) addiu v0 , zero , num sw v0 , hexvar ( s0 ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra lw v0 , hexvar ( a0 ) jr ra addiu v0 , zero , - num
sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + num ] , num mov eax , dword ptr [ esp + hexvar ] cmp eax , hexvar jg hexvar cmp eax , hexvar jge hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar mov dword ptr [ esp + num ] , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx jmp hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov dword ptr [ esp + num ] , num nop mov eax , dword ptr [ esp + num ] add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) slti v1 , v0 , hexvar beqz v1 , hexvar nop slti v1 , v0 , hexvar beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop lw a0 , hexvar ( sp ) jal hexvar nop lw v0 , hexvar ( sp ) lw v1 , ( v0 )
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov edx , dword ptr [ esi + num ] test edx , edx je hexvar sub esp , hexvar lea edx , [ esp + hexvar ] push edx lea edi , [ esp + hexvar ] push edi push dword ptr [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + num ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] xor eax , eax mov ecx , dword ptr [ edx ] cmp ecx , dword ptr [ esp + hexvar ] je hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , num ( a0 )
push rbx sub rsp , hexvar cmp qword ptr [ rdi + num ] , num je hexvar mov rbx , rdi lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] call hexvar test eax , eax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rax + num ] xor eax , eax cmp edx , dword ptr [ rcx ] jne hexvar mov rsi , qword ptr [ rcx + num ] lea rdi , [ rsp + hexvar ] call hexvar mov ecx , eax xor eax , eax test ecx , ecx sete al add rsp , hexvar pop rbx ret
lui gp , hexvar lw v0 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar move s0 , a0 lw v0 , num ( a0 ) lw t9 , - hexvar ( gp ) move s2 , a1 move s3 , a2 jalr t9 lw a0 , hexvar ( v0 ) addiu v1 , zero , hexvar bne v0 , v1 , hexvar lw gp , hexvar ( sp ) lw v0 , num ( s0 ) lw v1 , num ( v0 )
push rbx sub rsp , hexvar cmp qword ptr [ rdi + num ] , num je hexvar mov rbx , rdi lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] call hexvar test eax , eax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rax + num ] xor eax , eax cmp edx , dword ptr [ rcx ] jne hexvar mov rsi , qword ptr [ rcx + num ] lea rdi , [ rsp + hexvar ] call hexvar mov ecx , eax xor eax , eax test ecx , ecx sete al add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar cmp qword ptr [ rdi + num ] , num je hexvar mov rbx , rdi lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] call hexvar test eax , eax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rax + num ] xor eax , eax cmp edx , dword ptr [ rcx ] jne hexvar mov rsi , qword ptr [ rcx + num ] lea rdi , [ rsp + hexvar ] call hexvar mov ecx , eax xor eax , eax test ecx , ecx sete al add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar cmp qword ptr [ rdi + num ] , num je hexvar mov rbx , rdi lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] call hexvar test eax , eax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rax + num ] xor eax , eax cmp edx , dword ptr [ rcx ] jne hexvar mov rsi , qword ptr [ rcx + num ] lea rdi , [ rsp + hexvar ] call hexvar mov ecx , eax xor eax , eax test ecx , ecx sete al add rsp , hexvar pop rbx ret
lui gp , hexvar lw v0 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar move s0 , a0 lw v0 , num ( a0 ) lw t9 , - hexvar ( gp ) move s2 , a1 move s3 , a2 jalr t9 lw a0 , hexvar ( v0 ) addiu v1 , zero , hexvar bne v0 , v1 , hexvar lw gp , hexvar ( sp ) lw v0 , num ( s0 ) lw v1 , num ( v0 )
push rbx sub rsp , hexvar cmp qword ptr [ rdi + num ] , num je hexvar mov rbx , rdi lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] call hexvar test eax , eax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rax + num ] xor eax , eax cmp edx , dword ptr [ rcx ] jne hexvar mov rsi , qword ptr [ rcx + num ] lea rdi , [ rsp + hexvar ] call hexvar mov ecx , eax xor eax , eax test ecx , ecx sete al add rsp , hexvar pop rbx ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r6 , [ pc , hexvar ] ldrb r3 , [ r6 , hexvar ] ldr r4 , [ r6 , hexvar ] cmp r3 , num bne hexvar mov r5 , r0 mov r8 , hexvar ldr r7 , [ pc , hexvar ] add r4 , r4 , num cmp r4 , r5 bgt hexvar ldr r0 , [ r7 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] add r1 , r3 , num cmp r3 , r2 strlo r1 , [ r0 , hexvar ] strblo r8 , [ r3 ] blo hexvar mov r1 , hexvar add r4 , r4 , num bl hexvar cmp r4 , r5 ble hexvar str r5 , [ r6 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp byte ptr [ ebx + hexvar ] , num mov esi , dword ptr [ ebx + hexvar ] jne hexvar mov ebp , dword ptr [ ebx + hexvar ] mov edi , eax add esi , num cmp esi , edi jg hexvar mov edx , dword ptr [ ebp ] mov ecx , dword ptr [ edx + hexvar ] cmp ecx , dword ptr [ edx + hexvar ] jae hexvar lea eax , [ ecx + num ] add esi , num cmp esi , edi mov dword ptr [ edx + hexvar ] , eax mov byte ptr [ ecx ] , hexvar jle hexvar mov dword ptr [ ebx + hexvar ] , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx sub rsp , num mov ebp , edi mov ebx , dword ptr [ rip + hexvar ] cmp byte ptr [ rip + hexvar ] , num je hexvar sub ebp , ebx mov dword ptr [ rip + hexvar ] , ebp jmp hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jb hexvar mov esi , hexvar call hexvar jmp hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , hexvar add ebx , num cmp ebp , ebx jge hexvar mov dword ptr [ rip + hexvar ] , ebp add rsp , num pop rbx pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r6 , [ pc , hexvar ] ldrb r3 , [ r6 , hexvar ] ldr r4 , [ r6 , hexvar ] cmp r3 , num bne hexvar mov r5 , r0 mov r8 , hexvar ldr r7 , [ pc , hexvar ] add r4 , r4 , num cmp r4 , r5 bgt hexvar ldr r0 , [ r7 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] add r1 , r3 , num cmp r3 , r2 strlo r1 , [ r0 , hexvar ] strblo r8 , [ r3 ] blo hexvar mov r1 , hexvar add r4 , r4 , num bl hexvar cmp r4 , r5 ble hexvar str r5 , [ r6 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , edi movzx edi , byte ptr [ rip + hexvar ] mov eax , edi mov edi , eax and edi , num mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rip + hexvar ] sub eax , ecx mov dword ptr [ rip + hexvar ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] sub eax , ecx setle dl movzx ecx , dl mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov edi , hexvar call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx mov dl , byte ptr [ hexvar ] mov byte ptr [ ebp - num ] , dl mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] test al , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] sub eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax cmp eax , dword ptr [ ebp + num ] mov eax , hexvar mov ecx , hexvar cmovle ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx test byte ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] sub eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax cmp eax , dword ptr [ ebp + num ] setle cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , edi movzx edi , byte ptr [ rip + hexvar ] mov eax , edi mov edi , eax and edi , num mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rip + hexvar ] sub eax , ecx mov dword ptr [ rip + hexvar ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add eax , num mov dword ptr [ rbp - num ] , eax mov ecx , dword ptr [ rbp - num ] sub eax , ecx setle dl movzx ecx , dl mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov edi , hexvar call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov eax , dword ptr [ rbp - num ] mov dword ptr [ rip + hexvar ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r6 , [ pc , hexvar ] ldrb r3 , [ r6 , hexvar ] ldr r4 , [ r6 , hexvar ] cmp r3 , num bne hexvar mov r5 , r0 mov r8 , hexvar ldr r7 , [ pc , hexvar ] add r4 , r4 , num cmp r4 , r5 bgt hexvar ldr r0 , [ r7 ] ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 , hexvar ] add r1 , r3 , num cmp r3 , r2 strlo r1 , [ r0 , hexvar ] strblo r8 , [ r3 ] blo hexvar mov r1 , hexvar add r4 , r4 , num bl hexvar cmp r4 , r5 ble hexvar str r5 , [ r6 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx test byte ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] sub eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax cmp eax , dword ptr [ ebp + num ] setle cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push rbx mov rbx , rdi mov rdi , rsi mov rsi , qword ptr [ rbx + hexvar ] call qword ptr [ rbx + hexvar ] cmp qword ptr [ rbx + hexvar ] , rax jbe hexvar shl rax , num add rax , qword ptr [ rbx ] pop rbx ret
push { r4 , lr } mov r4 , r0 ldr r3 , [ r0 , hexvar ] mov r0 , r1 ldr r1 , [ r4 , num ] blx r3 ldr r3 , [ r4 , num ] cmp r3 , r0 bls hexvar ldr r3 , [ r4 ] add r0 , r3 , r0 , lsl num pop { r4 , pc }
push rbx mov rbx , rdi mov rdi , rsi mov rsi , qword ptr [ rbx + hexvar ] call qword ptr [ rbx + hexvar ] cmp rax , qword ptr [ rbx + hexvar ] jae hexvar shl rax , num add rax , qword ptr [ rbx ] pop rbx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub eax , ecx setb cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move a0 , a1 lw t9 , hexvar ( s0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar movsd xmm2 , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] movaps xmm0 , xmm2 addsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rsi , xmm0 addsd xmm2 , qword ptr [ rbp - hexvar ] cvttsd2si rdx , xmm2 mov r9 , qword ptr [ rbp - hexvar ] mov eax , num mov rcx , rax mov r8 , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movsd xmm2 , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] movaps xmm0 , xmm2 addsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rsi , xmm0 addsd xmm2 , qword ptr [ rbp - hexvar ] cvttsd2si rdx , xmm2 mov r9 , qword ptr [ rbp - hexvar ] mov eax , num mov rcx , rax mov r8 , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] mulsd xmm2 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm2 movsd xmm2 , qword ptr [ rbp - hexvar ] divsd xmm2 , xmm1 subsd xmm0 , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] mulsd xmm2 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm2 movsd xmm2 , qword ptr [ rbp - hexvar ] divsd xmm2 , xmm1 subsd xmm0 , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdi movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rcx ] , xmm0 movsd xmm1 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rdx ] , xmm1 movsd xmm2 , qword ptr [ rcx ] movsd xmm3 , qword ptr [ rdx ] mov rdi , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm3 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] mulsd xmm2 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm2 mov rax , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rax ] divsd xmm2 , xmm1 subsd xmm0 , xmm2 mov rcx , qword ptr [ rbp - hexvar ] movsd qword ptr [ rcx ] , xmm0 movsd xmm0 , qword ptr [ rcx ] call hexvar movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 mov qword ptr [ rbp - hexvar ] , rdx movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvttsd2si rdx , xmm0 movsd xmm1 , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvttsd2si rsi , xmm0 mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rcx mov r8d , num mov ecx , num mov rdi , rax call hexvar mov rbx , rax test rbx , rbx jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movq xmm2 , rax mulsd xmm2 , xmm0 movapd xmm0 , xmm2 movsd xmm1 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movq xmm3 , rax mulsd xmm3 , xmm0 movapd xmm0 , xmm3 movsd xmm1 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov rsi , rbx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar movq rax , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movq xmm4 , rax mulsd xmm4 , xmm0 movapd xmm0 , xmm4 movsd xmm1 , qword ptr [ rip + hexvar ] addsd xmm0 , xmm1 cvtsd2ss xmm0 , xmm0 mov rax , qword ptr [ rbp - hexvar ] mov rsi , rbx mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdi movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rcx ] , xmm0 movsd xmm1 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rdx ] , xmm1 movsd xmm2 , qword ptr [ rcx ] movsd xmm3 , qword ptr [ rdx ] mov rdi , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm3 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] mulsd xmm2 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm2 mov rax , qword ptr [ rbp - hexvar ] movsd xmm2 , qword ptr [ rax ] divsd xmm2 , xmm1 subsd xmm0 , xmm2 mov rcx , qword ptr [ rbp - hexvar ] movsd qword ptr [ rcx ] , xmm0 movsd xmm0 , qword ptr [ rcx ] call hexvar movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movsd xmm2 , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] movaps xmm0 , xmm2 addsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rsi , xmm0 addsd xmm2 , qword ptr [ rbp - hexvar ] cvttsd2si rdx , xmm2 mov r9 , qword ptr [ rbp - hexvar ] mov eax , num mov rcx , rax mov r8 , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movsd xmm2 , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] movaps xmm0 , xmm2 addsd xmm0 , qword ptr [ rbp - hexvar ] cvttsd2si rsi , xmm0 addsd xmm2 , qword ptr [ rbp - hexvar ] cvttsd2si rdx , xmm2 mov r9 , qword ptr [ rbp - hexvar ] mov eax , num mov rcx , rax mov r8 , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar movsd xmm1 , qword ptr [ rip ] movsd xmm2 , qword ptr [ rip ] mulsd xmm2 , xmm0 addsd xmm2 , xmm1 cvtsd2ss xmm0 , xmm2 mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd qword ptr [ rbp - hexvar ] , xmm1 call hexvar movsd xmm1 , qword ptr [ rip + hexvar ] movsd xmm2 , qword ptr [ rbp - hexvar ] mulsd xmm2 , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] addsd xmm0 , xmm2 movsd xmm2 , qword ptr [ rbp - hexvar ] divsd xmm2 , xmm1 subsd xmm0 , xmm2 movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar sub ecx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) addiu v0 , v0 , - hexvar sltiu v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) addiu v0 , v0 , - hexvar sltiu v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar sub ecx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , - hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmovbe ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar sub ecx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar sub ecx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , - hexvar sub ecx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , - hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmovbe ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] sub eax , hexvar cmp eax , num ja hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edx , edx je hexvar test esi , esi je hexvar mov ecx , eax and ecx , hexvar add ecx , - hexvar je hexvar cmp eax , hexvar jne hexvar sub esp , num push esi push edx push eax call hexvar add esp , hexvar mov dword ptr [ esi + hexvar ] , eax xor eax , eax add esp , num pop ebx pop esi ret
push rbx mov eax , hexvar test rdi , rdi je hexvar mov rbx , rdx test rdx , rdx je hexvar mov rcx , rdi cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar mov eax , hexvar cmp esi , hexvar jne hexvar mov edi , esi mov rsi , rcx mov rdx , rbx call hexvar mov dword ptr [ rbx + hexvar ] , eax xor eax , eax pop rbx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edx , edx je hexvar test esi , esi je hexvar mov ecx , eax and ecx , hexvar cmp ecx , hexvar je hexvar cmp eax , hexvar jne hexvar sub esp , num push esi push edx push eax call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , num add esp , num pop ebx pop esi ret
beqz a0 , hexvar addiu v1 , zero , - num beqz a2 , hexvar nop addiu v0 , zero , - hexvar addiu v1 , zero , hexvar and v0 , a1 , v0 beq v0 , v1 , hexvar addiu v0 , zero , hexvar bne a1 , v0 , hexvar addiu v1 , zero , - num lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 sw s0 , hexvar ( sp ) move a1 , a0 sw ra , hexvar ( sp ) move a0 , v0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a2 move v1 , zero lw ra , hexvar ( sp ) sw v0 , hexvar ( s0 ) move v0 , v1 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra move v0 , v1
push rbx mov eax , hexvar test rdi , rdi je hexvar mov rbx , rdx test rdx , rdx je hexvar mov rcx , rdi cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar mov eax , hexvar cmp esi , hexvar jne hexvar mov edi , esi mov rsi , rcx mov rdx , rbx call hexvar mov dword ptr [ rbx + hexvar ] , eax xor eax , eax pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mvn r3 , num b hexvar ldr r3 , [ sp , num ] cmp r3 , hexvar beq hexvar ldr r3 , [ sp , num ] cmp r3 , hexvar beq hexvar ldr r3 , [ sp , num ] cmp r3 , hexvar beq hexvar mvn r3 , num b hexvar ldr r3 , [ sp , num ] mov r2 , r3 ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbx mov eax , hexvar test rdi , rdi je hexvar mov rbx , rdx test rdx , rdx je hexvar mov rcx , rdi cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar mov eax , hexvar cmp esi , hexvar jne hexvar mov edi , esi mov rsi , rcx mov rdx , rbx call hexvar mov dword ptr [ rbx + hexvar ] , eax xor eax , eax pop rbx ret
push rbx mov eax , hexvar test rdi , rdi je hexvar mov rbx , rdx test rdx , rdx je hexvar mov rcx , rdi cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar mov eax , hexvar cmp esi , hexvar jne hexvar mov edi , esi mov rsi , rcx mov rdx , rbx call hexvar mov dword ptr [ rbx + hexvar ] , eax xor eax , eax pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v1 , hexvar ( sp ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v1 , hexvar ( sp ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v1 , hexvar ( sp ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( sp ) move a2 , v0 lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , hexvar ( v0 )
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edx , edx je hexvar test esi , esi je hexvar mov ecx , eax and ecx , hexvar cmp ecx , hexvar je hexvar cmp eax , hexvar jne hexvar sub esp , num push esi push edx push eax call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , num add esp , num pop ebx pop esi ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ eax + hexvar ] xor eax , eax test esi , esi je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov edi , eax pop eax push dword ptr [ esp + hexvar ] call hexvar push edi push eax push dword ptr [ esp + hexvar ] push ebp call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , num test esi , esi je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax add esp , num push dword ptr [ esp + hexvar ] call hexvar push ebp push eax push dword ptr [ esp + hexvar ] push edi call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ eax + hexvar ] xor eax , eax test esi , esi je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov edi , eax pop eax push dword ptr [ esp + hexvar ] call hexvar push edi push eax push dword ptr [ esp + hexvar ] push ebp call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar push r15 push r14 push r13 push r12 push rbx mov r15 , rdx mov r14 , rsi mov rbx , rdi mov rdi , rdx mov r13 , rax call hexvar mov r12 , rax mov rdi , r15 call hexvar mov rdi , rbx mov rsi , r14 mov rdx , r12 mov rcx , rax mov rax , r13 pop rbx pop r12 pop r13 pop r14 pop r15 jmp rax xor eax , eax ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ eax + hexvar ] xor eax , eax test esi , esi je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov edi , eax pop eax push dword ptr [ esp + hexvar ] call hexvar push edi push eax push dword ptr [ esp + hexvar ] push ebp call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar push r15 push r14 push r13 push r12 push rbx mov r15 , rdx mov r14 , rsi mov rbx , rdi mov rdi , rdx mov r13 , rax call hexvar mov r12 , rax mov rdi , r15 call hexvar mov rdi , rbx mov rsi , r14 mov rdx , r12 mov rcx , rax mov rax , r13 pop rbx pop r12 pop r13 pop r14 pop r15 jmp rax xor eax , eax ret
mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar push r15 push r14 push r13 push r12 push rbx mov r15 , rdx mov r14 , rsi mov rbx , rdi mov rdi , rdx mov r13 , rax call hexvar mov r12 , rax mov rdi , r15 call hexvar mov rdi , rbx mov rsi , r14 mov rdx , r12 mov rcx , rax mov rax , r13 pop rbx pop r12 pop r13 pop r14 pop r15 jmp rax xor eax , eax ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edi + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , num test esi , esi je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax add esp , num push dword ptr [ esp + hexvar ] call hexvar push ebp push eax push dword ptr [ esp + hexvar ] push edi call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar push r15 push r14 push r13 push r12 push rbx mov r15 , rdx mov r14 , rsi mov rbx , rdi mov rdi , rdx mov r13 , rax call hexvar mov r12 , rax mov rdi , r15 call hexvar mov rdi , rbx mov rsi , r14 mov rdx , r12 mov rcx , rax mov rax , r13 pop rbx pop r12 pop r13 pop r14 pop r15 jmp rax xor eax , eax ret
push edi push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edi , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push edi push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call esi add esp , hexvar jmp hexvar mov eax , num pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num xor eax , eax test cl , cl jne hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move v0 , zero lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sltu v0 , zero , v0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) addiu v0 , zero , num sb v0 , hexvar ( fp ) move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop sb zero , hexvar ( fp ) lbu v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
sub rsp , num xor esi , esi call hexvar test rax , rax je hexvar cmp byte ptr [ rax ] , hexvar jne hexvar cmp byte ptr [ rax + num ] , num jne hexvar xor eax , eax add rsp , num ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbx mov edx , hexvar sub rsp , hexvar mov rbx , rsp mov rsi , rbx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar xor edx , edx test eax , eax jne hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , edx jne hexvar add rsp , hexvar pop rbx ret
sub rsp , num mov esi , num call hexvar test rax , rax je hexvar cmp byte ptr [ rax ] , hexvar jne hexvar cmp byte ptr [ rax + num ] , num je hexvar mov edi , hexvar mov ecx , num mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl setb al cmp dl , al setne al jmp hexvar mov eax , num jmp hexvar mov eax , num add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , ecx mov edi , dword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov esi , hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num mov cl , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar jmp hexvar mov esi , hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov al , byte ptr [ rbp - hexvar ] xor al , hexvar and al , num mov byte ptr [ rbp - num ] , al mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al mov rsp , rbp pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mov r3 , num strb r3 , [ fp , - num ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } clz r5 , r2 cmp r1 , num lsr r5 , r5 , num moveq r5 , num cmp r5 , num bne hexvar mov sb , r0 mov r0 , r1 mov r8 , r2 mov r7 , r1 bl hexvar mov r6 , r0 mov r0 , r8 bl hexvar ldr r4 , [ sb ] mov sl , r0 cmp r4 , num bne hexvar b hexvar ldr r0 , [ r4 ] mov r5 , r4 cmp r0 , num popeq { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } mov r4 , r0 ldr r3 , [ r4 , num ] cmp r3 , r6 bne hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , sl bne hexvar ldr fp , [ r4 , num ] mov r2 , r6 mov r1 , fp mov r0 , r7 bl hexvar cmp r0 , num bne hexvar mov r2 , sl ldr r1 , [ r4 , hexvar ] mov r0 , r8 bl hexvar cmp r0 , num bne hexvar mov r0 , fp bl hexvar ldr r0 , [ r4 , hexvar ] bl hexvar ldr r3 , [ r4 ] cmp r5 , num mov r0 , r4 streq r3 , [ sb ] strne r3 , [ r5 ] bl hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
test rsi , rsi je hexvar test rdx , rdx je hexvar push r15 push r14 mov r15 , rdx push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rdi , r15 mov rbp , rax call hexvar mov rbx , qword ptr [ rbx ] mov r13 , rax test rbx , rbx je hexvar xor r14d , r14d jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx ] mov r14 , rbx test rax , rax je hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , rbp jne hexvar cmp qword ptr [ rbx + hexvar ] , r13 jne hexvar mov r15 , qword ptr [ rbx + num ] mov rdx , rbp mov rdi , r12 mov rsi , r15 call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rsp ] mov rdx , r13 call hexvar test eax , eax jne hexvar mov rdi , r15 call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar test r14 , r14 mov rax , qword ptr [ rbx ] je hexvar mov qword ptr [ r14 ] , rax mov rdi , rbx call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar pop edx push dword ptr [ esp + hexvar ] mov edi , eax call hexvar add esp , hexvar mov ecx , eax mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] test esi , esi je hexvar xor ebp , ebp jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ esi ] mov ebp , esi test eax , eax je hexvar mov esi , eax cmp dword ptr [ esi + num ] , edi jne hexvar cmp dword ptr [ esi + hexvar ] , ecx jne hexvar mov eax , dword ptr [ esi + num ] mov dword ptr [ esp + num ] , ecx sub esp , num mov dword ptr [ esp + hexvar ] , eax push edi push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov ecx , dword ptr [ esp + num ] jne hexvar sub esp , num push ecx mov dword ptr [ esp + hexvar ] , ecx push dword ptr [ esi + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov ecx , dword ptr [ esp + num ] jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test ebp , ebp mov eax , dword ptr [ esi ] je hexvar mov dword ptr [ ebp ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar pop edx push dword ptr [ esp + hexvar ] mov edi , eax call hexvar add esp , hexvar mov ecx , eax mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] test esi , esi je hexvar xor ebp , ebp jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ esi ] mov ebp , esi test eax , eax je hexvar mov esi , eax cmp dword ptr [ esi + num ] , edi jne hexvar cmp dword ptr [ esi + hexvar ] , ecx jne hexvar mov eax , dword ptr [ esi + num ] mov dword ptr [ esp + num ] , ecx sub esp , num mov dword ptr [ esp + hexvar ] , eax push edi push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov ecx , dword ptr [ esp + num ] jne hexvar sub esp , num push ecx mov dword ptr [ esp + hexvar ] , ecx push dword ptr [ esi + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov ecx , dword ptr [ esp + num ] jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test ebp , ebp mov eax , dword ptr [ esi ] je hexvar mov dword ptr [ ebp ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rsi , rsi je hexvar test rdx , rdx je hexvar push r15 push r14 mov r15 , rdx push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rdi , r15 mov rbp , rax call hexvar mov rbx , qword ptr [ rbx ] mov r13 , rax test rbx , rbx je hexvar xor r14d , r14d jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx ] mov r14 , rbx test rax , rax je hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , rbp jne hexvar cmp qword ptr [ rbx + hexvar ] , r13 jne hexvar mov r15 , qword ptr [ rbx + num ] mov rdx , rbp mov rdi , r12 mov rsi , r15 call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rsp ] mov rdx , r13 call hexvar test eax , eax jne hexvar mov rdi , r15 call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar test r14 , r14 mov rax , qword ptr [ rbx ] je hexvar mov qword ptr [ r14 ] , rax mov rdi , rbx call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , num cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov edx , hexvar mov eax , num mov ecx , edx mov edi , dword ptr [ esp + hexvar ] repne scasb al , byte ptr es : [ edi ] not ecx lea ebp , [ ecx - num ] mov ecx , edx mov edi , dword ptr [ esp + hexvar ] repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub eax , num mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] test esi , esi je hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esi ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx ] , eax jmp hexvar mov eax , dword ptr [ esi ] mov dword ptr [ esp + num ] , esi test eax , eax je hexvar mov esi , eax mov eax , dword ptr [ esi + num ] cmp eax , ebp jne hexvar mov edi , dword ptr [ esi + hexvar ] cmp edi , dword ptr [ esp + num ] jne hexvar mov ecx , dword ptr [ esi + num ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num push eax push ecx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push edi push dword ptr [ esi + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , num push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp dword ptr [ esp + num ] , num je hexvar mov eax , dword ptr [ esi ] mov edx , dword ptr [ esp + num ] mov dword ptr [ edx ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rsi , rsi je hexvar test rdx , rdx je hexvar push r15 push r14 mov r15 , rdx push r13 push r12 mov r12 , rsi push rbp push rbx mov rbx , rdi sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rdi , rsi mov qword ptr [ rsp ] , rdx call hexvar mov rdi , r15 mov rbp , rax call hexvar mov rbx , qword ptr [ rbx ] mov r13 , rax test rbx , rbx je hexvar xor r14d , r14d jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx ] mov r14 , rbx test rax , rax je hexvar mov rbx , rax cmp qword ptr [ rbx + hexvar ] , rbp jne hexvar cmp qword ptr [ rbx + hexvar ] , r13 jne hexvar mov r15 , qword ptr [ rbx + num ] mov rdx , rbp mov rdi , r12 mov rsi , r15 call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rsp ] mov rdx , r13 call hexvar test eax , eax jne hexvar mov rdi , r15 call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar test r14 , r14 mov rax , qword ptr [ rbx ] je hexvar mov qword ptr [ r14 ] , rax mov rdi , rbx call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
beqz a1 , hexvar nop beqz a2 , hexvar lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a0 sw s4 , hexvar ( sp ) move a0 , a1 sw s3 , hexvar ( sp ) move s4 , a2 sw s1 , hexvar ( sp ) move s3 , a1 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw t9 , ( gp ) jalr t9 sw s2 , hexvar ( sp ) move a0 , s4 lw gp , hexvar ( sp ) lw t9 , ( gp ) jalr t9 move s1 , v0 lw s0 , ( s5 )
push ebp push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar pop edx push dword ptr [ esp + hexvar ] mov edi , eax call hexvar add esp , hexvar mov ecx , eax mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] test esi , esi je hexvar xor ebp , ebp jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ esi ] mov ebp , esi test eax , eax je hexvar mov esi , eax cmp dword ptr [ esi + num ] , edi jne hexvar cmp dword ptr [ esi + hexvar ] , ecx jne hexvar mov eax , dword ptr [ esi + num ] mov dword ptr [ esp + num ] , ecx sub esp , num mov dword ptr [ esp + hexvar ] , eax push edi push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov ecx , dword ptr [ esp + num ] jne hexvar sub esp , num push ecx mov dword ptr [ esp + hexvar ] , ecx push dword ptr [ esi + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov ecx , dword ptr [ esp + num ] jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test ebp , ebp mov eax , dword ptr [ esi ] je hexvar mov dword ptr [ ebp ] , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
beqz a1 , hexvar nop beqz a2 , hexvar lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a0 sw s4 , hexvar ( sp ) move a0 , a1 sw s3 , hexvar ( sp ) move s4 , a2 sw s1 , hexvar ( sp ) move s3 , a1 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw t9 , ( gp ) jalr t9 sw s2 , hexvar ( sp ) move a0 , s4 lw gp , hexvar ( sp ) lw t9 , ( gp ) jalr t9 move s1 , v0 lw s0 , ( s5 )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push r14 push rbx push rax mov r14 , rdi movsxd rdx , edx xor ebx , ebx xor edi , edi call hexvar test rax , rax je hexvar mov rdi , r14 mov esi , hexvar mov rdx , rax call hexvar mov ebx , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , ebx add rsp , num pop rbx pop r14 ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push eax push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push eax push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx ret
push r14 push rbx push rax mov r14 , rdi movsxd rdx , edx xor ebx , ebx xor edi , edi call hexvar test rax , rax je hexvar mov rdi , r14 mov esi , hexvar mov rdx , rax call hexvar mov ebx , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , ebx add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a2 , v0 addiu a1 , zero , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , zero
push rbp push rbx push rax mov rbx , rdi movsxd rdx , edx xor edi , edi call hexvar mov qword ptr [ rsp ] , rax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov rdx , qword ptr [ rsp ] mov rdi , rbx mov esi , hexvar call hexvar mov ecx , hexvar mov eax , num nop dword ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar add rsp , num pop rbx pop rbp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push eax push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a2 , hexvar ( sp ) addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a2 , v0 addiu a1 , zero , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , zero
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) move s5 , a0 sw gp , hexvar ( sp ) move a0 , a1 sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) move s4 , v0 lw v0 , ( s5 ) beqz v0 , hexvar move s2 , zero lw ra , hexvar ( sp ) move v0 , zero lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui s6 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s4 slt v0 , s2 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a0 sw gp , hexvar ( sp ) move a0 , a1 sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) move s3 , v0 lw v0 , ( s4 )
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax push edx call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax mov eax , num je hexvar mov esi , dword ptr [ edi ] test esi , esi je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a0 sw gp , hexvar ( sp ) move a0 , a1 sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) move s3 , v0 lw v0 , ( s4 ) beqz v0 , hexvar lui s5 , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s2 , zero addiu s5 , s5 , hexvar lui s6 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s3 slt v0 , s2 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s5 , a0 move a0 , a1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s4 , v0 lw v0 , ( s5 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s5 , a0 move a0 , a1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s4 , v0 lw v0 , ( s5 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , rdi mov rdi , rsi call hexvar xor ebx , ebx test rax , rax je hexvar cmp qword ptr [ r14 ] , num jne hexvar mov r15 , rax mov rdi , rax call hexvar test eax , eax jle hexvar xor ebp , ebp mov rdi , r15 mov esi , ebp call hexvar mov rbx , qword ptr [ rax + num ] mov r12 , qword ptr [ r14 ] test r12 , r12 jne hexvar call hexvar mov r12 , rax mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax je hexvar mov edi , hexvar mov rsi , rbx call hexvar test eax , eax jne hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop mov eax , hexvar mov r13d , hexvar jmp hexvar nop dword ptr [ rax ] mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar mov r13d , hexvar nop dword ptr [ rax ] mov esi , dword ptr [ rax ] mov rdi , r12 mov edx , num call hexvar xor ebx , ebx test eax , eax je hexvar cmp qword ptr [ r13 ] , num je hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar mov ebx , num mov esi , hexvar mov rdi , r15 call hexvar mov eax , ebx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebp push edi mov edi , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax push edx call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax mov eax , num je hexvar mov esi , dword ptr [ edi ] test esi , esi je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbx test rdi , rdi je hexvar mov rbx , rsi mov edx , num mov rsi , rdi mov edi , num call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rbx , qword ptr [ rip + hexvar ] mov edx , num mov esi , hexvar mov edi , num call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar call hexvar
test rdi , rdi push rbx je hexvar mov rbx , rsi mov edx , num mov rsi , rdi xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi xor edi , edi xor eax , eax call hexvar mov rbx , qword ptr [ rip + hexvar ] mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi mov edi , num xor eax , eax call hexvar call hexvar nop word ptr [ rax + rax ]
push esi push ebx call hexvar add ebx , hexvar sub esp , num test eax , eax je hexvar mov esi , edx push edx push num push eax push num call hexvar push esi push eax push num push num call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] sub esp , num mov esi , dword ptr [ eax ] lea eax , [ ebx - hexvar ] push num push eax push num call hexvar push esi push eax push num push num call hexvar lea esi , [ esi ] lea edi , [ edi ]
test rdi , rdi push rbx je hexvar mov rbx , rsi mov edx , num mov rsi , rdi xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi xor edi , edi xor eax , eax call hexvar mov rbx , qword ptr [ rip + hexvar ] mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rcx , rbx mov rdx , rax xor esi , esi mov edi , num xor eax , eax call hexvar call hexvar nop word ptr [ rax + rax ]
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num je hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar push dword ptr [ ebp + hexvar ] push eax push num push num call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar push esi push eax push num push num call hexvar add esp , hexvar
push esi push ebx call hexvar add ebx , hexvar sub esp , num test eax , eax je hexvar mov esi , edx push edx push num push eax push num call hexvar push esi push eax push num push num call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] sub esp , num mov esi , dword ptr [ eax ] lea eax , [ ebx - hexvar ] push num push eax push num call hexvar push esi push eax push num push num call hexvar lea esi , [ esi ] lea edi , [ edi ]
push esi push ebx call hexvar add ebx , hexvar sub esp , num test eax , eax je hexvar mov esi , edx push edx push num push eax push num call hexvar push esi push eax push num push num call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] sub esp , num mov esi , dword ptr [ eax ] lea eax , [ ebx - hexvar ] push num push eax push num call hexvar push esi push eax push num push num call hexvar lea esi , [ esi ] lea edi , [ edi ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) move s0 , a1 addiu a2 , zero , num move a1 , a0 move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a3 , s0 move a2 , v0 move a1 , zero move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw a3 , ( v1 ) move a2 , v0 move a1 , zero addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop
push esi push ebx call hexvar add ebx , hexvar sub esp , num test eax , eax je hexvar mov esi , edx push edx push num push eax push num call hexvar push esi push eax push num push num call hexvar add esp , hexvar lea eax , [ ebx + hexvar ] sub esp , num mov esi , dword ptr [ eax ] lea eax , [ ebx - hexvar ] push num push eax push num call hexvar push esi push eax push num push num call hexvar lea esi , [ esi ] lea edi , [ edi ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move v0 , a0 addiu a2 , zero , num move a0 , zero move s0 , a1 jalr t9 move a1 , v0 move a1 , zero lw gp , hexvar ( sp ) move a0 , zero move a3 , s0 lw t9 , - hexvar ( gp ) jalr t9 move a2 , v0 lw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero move a1 , zero lw gp , hexvar ( sp ) move a2 , v0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 lw a3 , ( v0 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num mov rsi , qword ptr [ rdi + hexvar ] mov rdi , rbx call qword ptr [ rbp + hexvar ] cmp rax , qword ptr [ rbp + hexvar ] jae hexvar shl rax , num add rax , qword ptr [ rbp ] mov rcx , qword ptr [ rax ] mov rdx , rax mov rax , qword ptr [ rax + num ] cmp rcx , rbx je hexvar nop dword ptr [ rax + rax ] test rax , rax je hexvar mov rcx , qword ptr [ rax ] mov rax , qword ptr [ rax + num ] cmp rcx , rbx jne hexvar test rax , rax jne hexvar mov rcx , qword ptr [ rbp + num ] jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rdx ] test rax , rax jne hexvar add rdx , hexvar cmp rcx , rdx ja hexvar xor eax , eax add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + hexvar ] jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + num ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar lw t9 , hexvar ( a0 ) lui gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move a0 , a1 sw ra , hexvar ( sp ) move s0 , a1 sw gp , hexvar ( sp ) jalr t9 lw a1 , num ( s1 ) lw v1 , num ( s1 ) sltu v1 , v0 , v1 beqz v1 , hexvar lw gp , hexvar ( sp ) lw v1 , ( s1 ) sll v0 , v0 , num addu v1 , v1 , v0 move v0 , v1 lw a0 , ( v0 ) beq a0 , s0 , hexvar lw v0 , num ( v0 ) bnez v0 , hexvar nop b hexvar lw a0 , num ( s1 ) lw v0 , ( v1 ) bnez v0 , hexvar lw ra , hexvar ( sp ) addiu v1 , v1 , num sltu v0 , v1 , a0 bnez v0 , hexvar move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz v0 , hexvar lw ra , hexvar ( sp ) lw v0 , ( v0 ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + hexvar ] jne hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax + num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edi ] push dword ptr [ edi + num ] push esi call dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + num ] lea edx , [ ebp + eax * num ] add esp , hexvar cmp edi , edx jbe hexvar test edx , edx mov eax , edx je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi je hexvar test eax , eax je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi jne hexvar test eax , eax je hexvar mov eax , dword ptr [ eax ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edi ] push dword ptr [ edi + num ] push esi call dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + num ] lea edx , [ ebp + eax * num ] add esp , hexvar cmp edi , edx jbe hexvar test edx , edx mov eax , edx je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi je hexvar test eax , eax je hexvar mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] cmp ecx , esi jne hexvar test eax , eax je hexvar mov eax , dword ptr [ eax ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] cmp rax , qword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx + num ] jae hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp qword ptr [ rbp - hexvar ] , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] jmp hexvar add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp qword ptr [ rbp - hexvar ] , rax jb hexvar mov eax , num leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] b hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 blo hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc } rsbsmi r8 , sb , hexvar andeq r0 , r0 , r0
str lr , [ sp , - num ] ! ldr r2 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] str r2 , [ sp ] mov r1 , num ldr r2 , [ pc , hexvar ] mov r0 , hexvar bl hexvar ldr r3 , [ pc , hexvar ] cmp r0 , num str r0 , [ r3 ] beq hexvar add sp , sp , hexvar pop { pc }
lui gp , hexvar lui v0 , hexvar addiu gp , gp , hexvar addiu sp , sp , - hexvar lui a3 , hexvar lui a2 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , v0 , - hexvar sw gp , hexvar ( sp ) addiu a3 , a3 , - hexvar sw ra , hexvar ( sp ) addiu a2 , a2 , - hexvar sw v0 , hexvar ( sp ) move a1 , zero bal hexvar addiu a0 , zero , hexvar lui v1 , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , - hexvar ( v1 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar move a1 , zero addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lui v1 , hexvar beqz v0 , hexvar sw v0 , hexvar ( v1 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop
push rbp mov rbp , rsp lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] lea rdx , [ rip - hexvar ] mov esi , num mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar call hexvar nop pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , esp mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + num ] , hexvar mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , hexvar call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] test eax , eax sete cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , num lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ hexvar ] , eax cmp dword ptr [ hexvar ] , num jne hexvar call hexvar add esp , hexvar pop ebp ret
str lr , [ sp , - num ] ! ldr r2 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] str r2 , [ sp ] mov r1 , num ldr r2 , [ pc , hexvar ] mov r0 , hexvar bl hexvar ldr r3 , [ pc , hexvar ] cmp r0 , num str r0 , [ r3 ] beq hexvar add sp , sp , hexvar pop { pc }
push { fp , lr } add fp , sp , num sub sp , sp , num ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , num mov r0 , hexvar bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , num lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ hexvar ] , eax cmp dword ptr [ hexvar ] , num jne hexvar call hexvar add esp , hexvar pop ebp ret
sub rsp , num mov r8d , hexvar mov ecx , hexvar mov edx , hexvar mov esi , num mov edi , hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax jne hexvar call hexvar add rsp , num ret
push ebp mov ebp , esp sub esp , hexvar fld xword ptr [ ebp + num ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) jbe hexvar jmp hexvar fld xword ptr [ ebp - hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar fld xword ptr [ ebp - hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar fld xword ptr [ ebp + num ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) seta al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar fld xword ptr [ ebp - hexvar ] fstp xword ptr [ ebp - hexvar ] mov eax , esp fld xword ptr [ ebp - hexvar ] fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar fld xword ptr [ ebp - hexvar ] fstp xword ptr [ ebp - hexvar ] mov eax , esp fld xword ptr [ ebp - hexvar ] fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] mov r2 , num mov r3 , num sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 cmp r3 , num beq hexvar sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 mov r4 , r1 b hexvar sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 mov r4 , r1 mov r0 , r3 mov r1 , r4 sub sp , fp , num pop { r4 , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar fld xword ptr [ rbp + hexvar ] fstp xword ptr [ rbp - hexvar ] fld xword ptr [ rbp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) seta al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx fld xword ptr [ rbp - hexvar ] mov rax , rsp fstp xword ptr [ rax ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx fld xword ptr [ rbp - hexvar ] mov rax , rsp fstp xword ptr [ rax ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar fld xword ptr [ ebp + num ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) seta al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar fld xword ptr [ ebp - hexvar ] fstp xword ptr [ ebp - hexvar ] mov eax , esp fld xword ptr [ ebp - hexvar ] fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar fld xword ptr [ ebp - hexvar ] fstp xword ptr [ ebp - hexvar ] mov eax , esp fld xword ptr [ ebp - hexvar ] fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar fld xword ptr [ ebp + num ] fldz fucomip st ( num ) fstp st ( num ) jbe hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar fld xword ptr [ ebp + num ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) jbe hexvar jmp hexvar fld xword ptr [ ebp - hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar fld xword ptr [ ebp - hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar fld xword ptr [ ebp + num ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) jbe hexvar jmp hexvar fld xword ptr [ ebp - hexvar ] fstp xword ptr [ ebp - hexvar ] mov eax , esp fld xword ptr [ ebp - hexvar ] fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar fld xword ptr [ ebp - hexvar ] fstp xword ptr [ ebp - hexvar ] mov eax , esp fld xword ptr [ ebp - hexvar ] fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar fld xword ptr [ ebp + num ] fldz fucomip st ( num ) fstp st ( num ) jbe hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar fld xword ptr [ ebp + num ] fstp xword ptr [ ebp - hexvar ] fld xword ptr [ ebp - hexvar ] fldz fucomip st ( num ) fstp st ( num ) jbe hexvar jmp hexvar fld xword ptr [ ebp - hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar fld xword ptr [ ebp - hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
mov eax , dword ptr [ rsi + hexvar ] cmp dword ptr [ rdi + hexvar ] , eax je hexvar setb al movzx eax , al ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] cmp edx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] add ecx , dword ptr [ edx + hexvar ] cmp eax , ecx setb bl and bl , num movzx eax , bl mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx + hexvar ] setb dl and dl , num movzx eax , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax jne hexvar mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] lea ecx , [ edx + eax ] mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] add eax , edx cmp ecx , eax setb al movzx eax , al jmp hexvar mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax setb al movzx eax , al leave ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) lw v0 , ( fp ) lw v1 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] cmp edx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] add ecx , dword ptr [ edx + hexvar ] cmp eax , ecx setb bl and bl , num movzx eax , bl mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx + hexvar ] setb dl and dl , num movzx eax , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rsi + hexvar ] sub eax , ecx sete dl movzx ecx , dl mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] add rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] add rdx , rax sub rcx , rdx setb sil movzx edi , sil mov dword ptr [ rbp - num ] , edi mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] sub ecx , edx setb sil movzx edx , sil mov dword ptr [ rbp - num ] , edx mov rax , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov eax , dword ptr [ rbp - num ] pop rbp ret
mov eax , dword ptr [ rsi + hexvar ] cmp dword ptr [ rdi + hexvar ] , eax je hexvar setb al movzx eax , al ret
push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esi + hexvar ] mov edx , dword ptr [ ebx + hexvar ] cmp ecx , edx setb al movzx eax , al cmp ecx , edx je hexvar pop ebx pop esi ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] cmp edx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] add ecx , dword ptr [ edx + hexvar ] cmp eax , ecx setb bl and bl , num movzx eax , bl mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx + hexvar ] setb dl and dl , num movzx eax , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ esi + hexvar ] sub edx , esi sete bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] add ecx , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] add edx , eax sub ecx , edx setb bl movzx eax , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx jmp eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx + hexvar ] sub eax , ecx setb dl movzx ecx , dl mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
ldr r3 , [ pc , hexvar ] ldrb r2 , [ r3 , hexvar ] cmp r2 , num bne hexvar ldrb r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar cmp r0 , num bne hexvar ldr r2 , [ r3 , hexvar ] str r2 , [ r3 , num ] bx lr ldrb r1 , [ r3 , hexvar ] ldr r2 , [ r3 , hexvar ] cmp r1 , num beq hexvar cmp r0 , num beq hexvar ldr r1 , [ r3 , hexvar ] cmp r1 , r2 beq hexvar str r1 , [ r3 , num ] bx lr ldr r2 , [ r3 , hexvar ] str r2 , [ r3 , num ] bx lr ldr r1 , [ r3 , num ] cmp r1 , r2 bxne lr cmp r2 , num movne r2 , num moveq r2 , num str r2 , [ r3 , num ] bx lr andeq sb , r2 , r4 , ror num
lui v0 , hexvar lbu v0 , hexvar ( v0 ) bnez v0 , hexvar lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar lui v0 , hexvar beqz a0 , hexvar lui v0 , hexvar lui v0 , hexvar lw v1 , hexvar ( v0 ) lui v0 , hexvar sw v1 , - hexvar ( v0 ) jr ra nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar jr ra sw v1 , - hexvar ( v0 ) lbu v1 , hexvar ( v0 ) lui v0 , hexvar beqz v1 , hexvar lw v0 , - hexvar ( v0 ) beqz a0 , hexvar lui v1 , hexvar lui v1 , hexvar lw v1 , hexvar ( v1 ) bne v1 , v0 , hexvar nop lui v1 , hexvar lw a0 , - hexvar ( v1 ) bne a0 , v0 , hexvar addiu a0 , zero , num movn a0 , zero , v0 jr ra sw a0 , - hexvar ( v1 ) lui v1 , hexvar jr ra sw v0 , - hexvar ( v1 )
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] jne hexvar xor eax , eax mov ecx , dword ptr [ hexvar ] cmp ecx , num mov ecx , num cmove eax , ecx mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar add esp , num pop ebp ret
cmp byte ptr [ rip + hexvar ] , num jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar test dil , dil mov eax , dword ptr [ rip + hexvar ] cmove eax , dword ptr [ rip + hexvar ] mov dword ptr [ rip + hexvar ] , eax ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov al , byte ptr [ hexvar ] mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov al , byte ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] jne hexvar xor eax , eax mov ecx , dword ptr [ hexvar ] cmp ecx , num mov ecx , num cmove eax , ecx mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
ldr r3 , [ pc , hexvar ] ldrb r2 , [ r3 , hexvar ] cmp r2 , num bne hexvar ldrb r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar cmp r0 , num bne hexvar ldr r2 , [ r3 , hexvar ] str r2 , [ r3 , num ] bx lr ldrb r1 , [ r3 , hexvar ] ldr r2 , [ r3 , hexvar ] cmp r1 , num beq hexvar cmp r0 , num beq hexvar ldr r1 , [ r3 , hexvar ] cmp r1 , r2 beq hexvar str r1 , [ r3 , num ] bx lr ldr r2 , [ r3 , hexvar ] str r2 , [ r3 , num ] bx lr ldr r1 , [ r3 , num ] cmp r1 , r2 bxne lr cmp r2 , num movne r2 , num moveq r2 , num str r2 , [ r3 , num ] bx lr andeq sb , r2 , r4 , ror num
lui v0 , hexvar lbu v0 , hexvar ( v0 ) bnez v0 , hexvar lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar lui v0 , hexvar beqz a0 , hexvar lui v0 , hexvar lui v0 , hexvar lw v1 , hexvar ( v0 ) lui v0 , hexvar jr ra sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar sw v1 , - hexvar ( v0 ) jr ra nop b hexvar lw v1 , - hexvar ( v0 ) lbu v0 , hexvar ( v0 ) beqz v0 , hexvar lui v0 , hexvar beqz a0 , hexvar lui v0 , hexvar lui v0 , hexvar lw v0 , hexvar ( v0 ) lui v1 , hexvar lw v1 , - hexvar ( v1 ) beq v0 , v1 , hexvar lui v1 , hexvar jr ra sw v0 , - hexvar ( v1 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lui v1 , hexvar lw v1 , - hexvar ( v1 ) bne v0 , v1 , hexvar addiu v1 , zero , num movn v1 , zero , v0 move v0 , v1 lui v1 , hexvar jr ra sw v0 , - hexvar ( v1 ) lw v1 , - hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al mov eax , esp add eax , - hexvar mov esp , eax mov cl , byte ptr [ ebp - num ] and cl , num mov byte ptr [ eax ] , cl mov cl , byte ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov al , byte ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] test byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ hexvar ] cmp ecx , num mov ecx , num cmove eax , ecx mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al mov eax , esp add eax , - hexvar mov esp , eax mov cl , byte ptr [ ebp - num ] and cl , num mov byte ptr [ eax ] , cl mov cl , byte ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov cl , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov al , byte ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] test byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ hexvar ] cmp ecx , num mov ecx , num cmove eax , ecx mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] jne hexvar xor eax , eax mov ecx , dword ptr [ hexvar ] cmp ecx , num mov ecx , num cmove eax , ecx mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar add esp , num pop ebp ret
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax push dword ptr [ esp + hexvar ] push num push hexvar push eax call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] call hexvar mov edi , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax push dword ptr [ esp + hexvar ] push num push hexvar push eax call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] call hexvar mov edi , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a2 sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a0 , v0 move a3 , s4 jalr t9 move s2 , v0 lw gp , hexvar ( sp ) addiu a1 , sp , hexvar move a0 , s0 sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a2 , s1 lw a0 , hexvar ( sp ) move s0 , v0 beqz a0 , hexvar lw gp , hexvar ( sp ) b hexvar move s1 , zero blez v0 , hexvar nop addu s1 , s1 , v0 subu s0 , s0 , v0 lw t9 , - hexvar ( gp ) addu a1 , a0 , s1 move a2 , s0 jalr t9 move a0 , s2 lw gp , hexvar ( sp ) bne s0 , v0 , hexvar lw a0 , hexvar ( sp ) addiu s0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s3 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s0 , zero lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar bal - hexvar move s0 , zero b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a3 , hexvar ( sp ) move a2 , zero addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a2 sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a0 , v0 move a3 , s4 jalr t9 move s2 , v0 lw gp , hexvar ( sp ) addiu a1 , sp , hexvar move a0 , s0 sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a2 , s1 lw a0 , hexvar ( sp ) move s0 , v0 beqz a0 , hexvar lw gp , hexvar ( sp ) b hexvar move s1 , zero blez v0 , hexvar nop addu s1 , s1 , v0 subu s0 , s0 , v0 lw t9 , - hexvar ( gp ) addu a1 , a0 , s1 move a2 , s0 jalr t9 move a0 , s2 lw gp , hexvar ( sp ) bne s0 , v0 , hexvar lw a0 , hexvar ( sp ) addiu s0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s3 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s0 , zero lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar bal - hexvar move s0 , zero b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push ebp push num mov esi , eax push hexvar push eax xor ebp , ebp call hexvar mov dword ptr [ esp + hexvar ] , num add esp , hexvar push edi lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov edi , eax test edx , edx jne hexvar jmp hexvar lea esi , [ esi ] test eax , eax jle hexvar add ebp , eax sub edi , eax sub esp , num add edx , ebp push edi push edx push esi call hexvar add esp , hexvar cmp edi , eax mov edx , dword ptr [ esp + hexvar ] jne hexvar mov edi , num sub esp , hexvar push edx call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov r14 , rdx mov r12 , rsi mov r15 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar mov rdi , r15 mov rsi , rbx mov rdx , r14 call hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push num mov esi , eax push hexvar push eax call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp ] , esi mov edi , eax call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push ebp push num mov esi , eax push hexvar push eax xor ebp , ebp call hexvar mov dword ptr [ esp + hexvar ] , num add esp , hexvar push edi lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar mov edi , eax test edx , edx jne hexvar jmp hexvar lea esi , [ esi ] test eax , eax jle hexvar add ebp , eax sub edi , eax sub esp , num add edx , ebp push edi push edx push esi call hexvar add esp , hexvar cmp edi , eax mov edx , dword ptr [ esp + hexvar ] jne hexvar mov edi , num sub esp , hexvar push edx call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov r14 , rdx mov r12 , rsi mov r15 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar mov rdi , r15 mov rsi , rbx mov rdx , r14 call hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
push { r4 , lr } ldr r2 , [ r1 , hexvar ] cmp r2 , num ldrne r3 , [ r1 ] strne r3 , [ r1 , num ] ldr r3 , [ r1 , num ] ldr lr , [ r1 , num ] cmp r3 , lr movhs r2 , num bhs hexvar add r3 , r3 , hexvar sub r4 , r3 , hexvar cmp r2 , num bne hexvar ldr ip , [ r3 , - hexvar ] cmp ip , r0 bhi hexvar ldr ip , [ r3 , - hexvar ] cmp ip , r0 bne hexvar ldr r3 , [ r4 , num ] ldr r2 , [ r1 , hexvar ] lsrs r3 , r3 , r2 moveq r2 , num beq hexvar ldr r2 , [ r1 , hexvar ] cmp r2 , r3 bls hexvar add r2 , r3 , r3 , lsl num ldr r0 , [ r1 , hexvar ] add r2 , r0 , r2 , lsl num ldrb r0 , [ r2 , hexvar ] lsrs r0 , r0 , num beq hexvar ldr r2 , [ r1 , hexvar ] sub r3 , r3 , r2 ldr r2 , [ r1 , hexvar ] ldr r3 , [ r2 , r3 , lsl num ] ldrb r2 , [ r3 , hexvar ] sub r0 , r2 , num cmp r0 , num bhi hexvar ldr r3 , [ r3 , hexvar ] ldrb r2 , [ r3 , hexvar ] sub r0 , r2 , num cmp r0 , num bls hexvar sub r2 , r2 , num cmp r2 , num movhi r2 , num bls hexvar mov r0 , r2 pop { r4 , pc } svc hexvar
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edx + hexvar ] test ebp , ebp je hexvar mov eax , dword ptr [ edx ] mov ebp , dword ptr [ edx + num ] cmp eax , ebp mov dword ptr [ edx + num ] , eax jae hexvar mov ecx , dword ptr [ eax ] mov ebx , dword ptr [ eax + num ] xor ecx , edi xor ebx , esi or ebx , ecx jne hexvar mov ecx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + num ] shrd esi , edi , cl shr edi , cl test cl , hexvar cmovne esi , edi test esi , esi je hexvar cmp dword ptr [ edx + hexvar ] , esi jbe hexvar imul eax , esi , hexvar add eax , dword ptr [ edx + hexvar ] movzx ecx , byte ptr [ eax + hexvar ] shr cl , num test cl , cl je hexvar sub esi , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + hexvar ] mov eax , dword ptr [ eax + esi * num ] movzx ecx , byte ptr [ eax + hexvar ] lea ebx , [ ecx - num ] cmp bl , num ja hexvar mov eax , dword ptr [ eax + hexvar ] movzx ecx , byte ptr [ eax + hexvar ] lea ebx , [ ecx - num ] cmp bl , num jbe hexvar sub ecx , num cmp cl , num jbe hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edx + hexvar ] test ebp , ebp je hexvar mov eax , dword ptr [ edx ] mov ebp , dword ptr [ edx + num ] cmp eax , ebp mov dword ptr [ edx + num ] , eax jae hexvar mov ecx , dword ptr [ eax ] mov ebx , dword ptr [ eax + num ] xor ecx , edi xor ebx , esi or ebx , ecx jne hexvar mov ecx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + num ] shrd esi , edi , cl shr edi , cl test cl , hexvar cmovne esi , edi test esi , esi je hexvar cmp dword ptr [ edx + hexvar ] , esi jbe hexvar imul eax , esi , hexvar add eax , dword ptr [ edx + hexvar ] movzx ecx , byte ptr [ eax + hexvar ] shr cl , num test cl , cl je hexvar sub esi , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + hexvar ] mov eax , dword ptr [ eax + esi * num ] movzx ecx , byte ptr [ eax + hexvar ] lea ebx , [ ecx - num ] cmp bl , num ja hexvar mov eax , dword ptr [ eax + hexvar ] movzx ecx , byte ptr [ eax + hexvar ] lea ebx , [ ecx - num ] cmp bl , num jbe hexvar sub ecx , num cmp cl , num jbe hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov ecx , dword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rsi ] mov rax , qword ptr [ rsi + num ] test ecx , ecx je hexvar mov qword ptr [ rsi + num ] , rdx mov rax , rdx mov r8 , qword ptr [ rsi + hexvar ] cmp r8 , rax jbe hexvar test ecx , ecx mov rdx , qword ptr [ rax ] jne hexvar cmp rdi , rdx jb hexvar cmp rdi , rdx je hexvar add rax , hexvar cmp rax , r8 mov qword ptr [ rsi + num ] , rax jb hexvar jmp hexvar nop word ptr [ rax + rax ] mov ecx , dword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + num ] shr rax , cl test rax , rax je hexvar cmp qword ptr [ rsi + hexvar ] , rax jbe hexvar mov rdx , rax shl rdx , num add rdx , qword ptr [ rsi + hexvar ] movzx ecx , byte ptr [ rdx + hexvar ] shr cl , num test cl , cl je hexvar sub rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rdx + rax * num ] movzx edx , byte ptr [ rax + hexvar ] lea ecx , [ rdx - num ] cmp cl , num ja hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] movzx edx , byte ptr [ rax + hexvar ] lea ecx , [ rdx - num ] cmp cl , num jbe hexvar sub edx , num cmp dl , num jbe hexvar xor eax , eax ret
mov ecx , dword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rsi ] mov rax , qword ptr [ rsi + num ] test ecx , ecx je hexvar mov qword ptr [ rsi + num ] , rdx mov rax , rdx mov r8 , qword ptr [ rsi + hexvar ] cmp rax , r8 jae hexvar test ecx , ecx mov rdx , qword ptr [ rax ] jne hexvar cmp rdi , rdx jb hexvar cmp rdi , rdx je hexvar add rax , hexvar cmp rax , r8 mov qword ptr [ rsi + num ] , rax jb hexvar jmp hexvar nop word ptr [ rax + rax ] mov ecx , dword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + num ] shr rax , cl test rax , rax je hexvar cmp qword ptr [ rsi + hexvar ] , rax jbe hexvar mov rdx , rax shl rdx , num add rdx , qword ptr [ rsi + hexvar ] movzx ecx , byte ptr [ rdx + hexvar ] shr cl , num test cl , cl je hexvar sub rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rdx + rax * num ] movzx edx , byte ptr [ rax + hexvar ] lea ecx , [ rdx - num ] cmp cl , num ja hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rax + hexvar ] movzx edx , byte ptr [ rax + hexvar ] lea ecx , [ rdx - num ] cmp cl , num jbe hexvar sub edx , num cmp dl , num jbe hexvar xor eax , eax ret
mov eax , dword ptr [ rsi + hexvar ] test eax , eax je hexvar mov rdx , qword ptr [ rsi ] mov qword ptr [ rsi + num ] , rdx mov rdx , qword ptr [ rsi + num ] mov rcx , qword ptr [ rsi + hexvar ] cmp rdx , rcx jae hexvar test eax , eax jne hexvar cmp qword ptr [ rdx ] , rdi ja hexvar cmp qword ptr [ rdx ] , rdi jne hexvar mov ecx , dword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rdx + num ] shr rdx , cl mov eax , num test rdx , rdx je hexvar cmp qword ptr [ rsi + hexvar ] , rdx jbe hexvar mov rax , rdx shl rax , num add rax , qword ptr [ rsi + hexvar ] movzx ecx , byte ptr [ rax + hexvar ] shr cl , num test cl , cl je hexvar sub rdx , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax + rdx * num ] movzx eax , byte ptr [ rdx + hexvar ] lea ecx , [ rax - num ] cmp cl , num ja hexvar mov rdx , qword ptr [ rdx + hexvar ] movzx eax , byte ptr [ rdx + hexvar ] lea ecx , [ rax - num ] cmp cl , num jbe hexvar lea ecx , [ rax - num ] mov eax , num cmp cl , num jbe hexvar ret add rdx , hexvar mov qword ptr [ rsi + num ] , rdx cmp rdx , rcx jb hexvar mov eax , num ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx + hexvar ] mov ecx , dword ptr [ edx ] mov eax , dword ptr [ edx + num ] test esi , esi je hexvar mov dword ptr [ edx + num ] , ecx mov eax , ecx mov ebx , dword ptr [ edx + num ] cmp eax , ebx mov dword ptr [ esp + num ] , ebx jae hexvar test esi , esi mov ebx , dword ptr [ eax ] mov ecx , dword ptr [ eax + num ] jne hexvar cmp edi , ecx jbe hexvar xor ebx , ebp xor ecx , edi or ecx , ebx je hexvar add eax , hexvar cmp eax , dword ptr [ esp + num ] mov dword ptr [ edx + num ] , eax jb hexvar lea esi , [ esi ] xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edx + hexvar ] test ebp , ebp je hexvar mov eax , dword ptr [ edx ] mov ebp , dword ptr [ edx + num ] cmp eax , ebp mov dword ptr [ edx + num ] , eax jae hexvar mov ecx , dword ptr [ eax ] mov ebx , dword ptr [ eax + num ] xor ecx , edi xor ebx , esi or ebx , ecx jne hexvar mov ecx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + num ] shrd esi , edi , cl shr edi , cl test cl , hexvar cmovne esi , edi test esi , esi je hexvar cmp dword ptr [ edx + hexvar ] , esi jbe hexvar imul eax , esi , hexvar add eax , dword ptr [ edx + hexvar ] movzx ecx , byte ptr [ eax + hexvar ] shr cl , num test cl , cl je hexvar sub esi , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + hexvar ] mov eax , dword ptr [ eax + esi * num ] movzx ecx , byte ptr [ eax + hexvar ] lea ebx , [ ecx - num ] cmp bl , num ja hexvar mov eax , dword ptr [ eax + hexvar ] movzx ecx , byte ptr [ eax + hexvar ] lea ebx , [ ecx - num ] cmp bl , num jbe hexvar sub ecx , num cmp cl , num jbe hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov eax , dword ptr [ rsi + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rsi ] mov rdx , qword ptr [ rsi + hexvar ] cmp rax , rdx mov qword ptr [ rsi + num ] , rax jae hexvar cmp rdi , qword ptr [ rax ] jne hexvar mov ecx , dword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + num ] shr rax , cl test rax , rax je hexvar cmp qword ptr [ rsi + hexvar ] , rax jbe hexvar mov rdx , rax shl rdx , num add rdx , qword ptr [ rsi + hexvar ] movzx ecx , byte ptr [ rdx + hexvar ] shr cl , num test cl , cl je hexvar sub rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rdx + rax * num ] movzx edx , byte ptr [ rax + hexvar ] lea ecx , [ rdx - num ] cmp cl , num ja hexvar nop mov rax , qword ptr [ rax + hexvar ] movzx edx , byte ptr [ rax + hexvar ] lea ecx , [ rdx - num ] cmp cl , num jbe hexvar sub edx , num cmp dl , num jbe hexvar xor eax , eax ret
mov eax , dword ptr [ rsi + hexvar ] test eax , eax je hexvar mov rdx , qword ptr [ rsi ] mov qword ptr [ rsi + num ] , rdx mov rdx , qword ptr [ rsi + num ] mov rcx , qword ptr [ rsi + hexvar ] cmp rdx , rcx jae hexvar test eax , eax jne hexvar cmp qword ptr [ rdx ] , rdi ja hexvar cmp qword ptr [ rdx ] , rdi jne hexvar mov ecx , dword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rdx + num ] shr rdx , cl mov eax , num test rdx , rdx je hexvar cmp qword ptr [ rsi + hexvar ] , rdx jbe hexvar mov rax , rdx shl rax , num add rax , qword ptr [ rsi + hexvar ] movzx ecx , byte ptr [ rax + hexvar ] shr cl , num test cl , cl je hexvar sub rdx , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rax + rdx * num ] movzx eax , byte ptr [ rdx + hexvar ] lea ecx , [ rax - num ] cmp cl , num ja hexvar mov rdx , qword ptr [ rdx + hexvar ] movzx eax , byte ptr [ rdx + hexvar ] lea ecx , [ rax - num ] cmp cl , num jbe hexvar lea ecx , [ rax - num ] mov eax , num cmp cl , num jbe hexvar ret add rdx , hexvar mov qword ptr [ rsi + num ] , rdx cmp rdx , rcx jb hexvar mov eax , num ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar mov dword ptr [ esp ] , eax call hexvar mov ebp , eax mov eax , esi call hexvar mov edi , eax mov dword ptr [ esp + hexvar ] , num xor eax , eax add esp , hexvar test edi , edi je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] jmp hexvar nop lea esi , [ esi ] xor eax , eax sub esp , num push num push eax call hexvar mov esi , eax pop eax pop edx lea eax , [ esp + hexvar ] push eax push esi call hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] push edi push hexvar push num push ebp push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar mov dword ptr [ esp ] , eax call hexvar mov ebp , eax mov eax , esi call hexvar mov edx , eax mov dword ptr [ esp + hexvar ] , num xor eax , eax add esp , hexvar test edx , edx mov dword ptr [ esp + num ] , edx je hexvar sub esp , hexvar push esi call hexvar pop edx pop ecx push num push eax call hexvar mov esi , eax pop eax pop edx lea eax , [ esp + hexvar ] push eax push esi call hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] push edx push hexvar push num push ebp push edi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) move a1 , zero move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar move a1 , v0 lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu a3 , zero , hexvar move a2 , zero lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov rdi , rsi call hexvar mov edi , eax call hexvar mov r15 , rax mov rdi , rbx call hexvar mov qword ptr [ rsp + num ] , num test rax , rax je hexvar mov r12 , rax mov rdi , rbx call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , qword ptr [ rax + hexvar ] jmp hexvar xor eax , eax jmp hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , rax jmp hexvar xor edi , edi xor esi , esi call hexvar mov rbx , rax lea rsi , [ rsp + num ] mov rdi , rax call hexvar mov ebp , eax mov rdi , rbx call hexvar mov r9 , qword ptr [ rsp + num ] mov dword ptr [ rsp ] , ebp mov rdi , r14 mov rsi , r15 xor edx , edx mov ecx , hexvar mov r8 , r12 call hexvar add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s0 , hexvar ( sp ) move a0 , a1 sw gp , hexvar ( sp ) move s0 , a1 sw s2 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 move a0 , s0 jal hexvar move s4 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 move s2 , v0 addiu v1 , zero , hexvar beq v0 , v1 , hexvar lw gp , hexvar ( sp ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar lw t9 , - hexvar ( gp ) move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 move a1 , zero addiu a1 , sp , hexvar lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 addiu a3 , zero , hexvar lw gp , hexvar ( sp ) move a2 , zero lw v0 , hexvar ( sp ) move a1 , s4 sw s0 , hexvar ( sp ) move a0 , s3 sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) b hexvar lw a0 , hexvar ( v0 ) lw t9 , - hexvar ( gp )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , num push num push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] push hexvar push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov rdi , rsi call hexvar mov edi , eax call hexvar mov r15 , rax mov rdi , rbx call hexvar mov qword ptr [ rsp + num ] , num test rax , rax je hexvar mov r12 , rax mov rdi , rbx call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , qword ptr [ rax + hexvar ] jmp hexvar xor eax , eax jmp hexvar mov rdi , rbx call hexvar test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , rax jmp hexvar xor edi , edi xor esi , esi call hexvar mov rbx , rax lea rsi , [ rsp + num ] mov rdi , rax call hexvar mov ebp , eax mov rdi , rbx call hexvar mov r9 , qword ptr [ rsp + num ] mov dword ptr [ rsp ] , ebp mov rdi , r14 mov rsi , r15 xor edx , edx mov ecx , hexvar mov r8 , r12 call hexvar add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s0 , hexvar ( sp ) move a0 , a1 sw gp , hexvar ( sp ) move s0 , a1 sw s2 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 move a0 , s0 jal hexvar move s4 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 move s2 , v0 addiu v1 , zero , hexvar beq v0 , v1 , hexvar lw gp , hexvar ( sp ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar lw t9 , - hexvar ( gp ) move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 move a1 , zero addiu a1 , sp , hexvar lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 addiu a3 , zero , hexvar lw gp , hexvar ( sp ) move a2 , zero lw v0 , hexvar ( sp ) move a1 , s4 sw s0 , hexvar ( sp ) move a0 , s3 sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) b hexvar lw a0 , hexvar ( v0 ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s3 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw zero , hexvar ( sp ) move s1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a1 , zero move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 addiu a1 , sp , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s4 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw s4 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw s1 , hexvar ( sp ) addiu a3 , zero , hexvar move a2 , zero move a1 , s3 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r1 , num mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] add r3 , sp , hexvar mov r1 , r3 ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] mov r3 , hexvar mov r2 , num ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax ] , num je hexvar test r8d , r8d mov rbx , rdi mov r12 , rsi mov ebp , edx mov r13 , r9 jne hexvar test ecx , ecx jne hexvar mov esi , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + hexvar ] test esi , esi mov rax , qword ptr [ rax ] jne hexvar mov rsi , qword ptr [ rax + hexvar ] mov rdi , rbx call hexvar test eax , eax jne hexvar xor eax , eax mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax ] , num je hexvar test r8d , r8d mov rbx , rdi mov r12 , rsi mov ebp , edx mov r13 , r9 jne hexvar test ecx , ecx jne hexvar mov esi , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + hexvar ] test esi , esi mov rax , qword ptr [ rax ] jne hexvar mov rsi , qword ptr [ rax + hexvar ] mov rdi , rbx call hexvar test eax , eax jne hexvar xor eax , eax mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , rdi mov r12 , rsi mov ebp , edx mov r14d , ecx mov r13 , r9 cmp qword ptr [ rax ] , num je hexvar test r8d , r8d jne hexvar test r14d , r14d jne hexvar cmp dword ptr [ rsp + hexvar ] , num je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov rsi , qword ptr [ rax + hexvar ] mov rdi , rbx call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) bnez v0 , hexvar nop lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v0 , ( v0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax ] , num je hexvar test r8d , r8d mov rbx , rdi mov r12 , rsi mov ebp , edx mov r13 , r9 jne hexvar test ecx , ecx jne hexvar mov esi , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + hexvar ] test esi , esi mov rax , qword ptr [ rax ] jne hexvar mov rsi , qword ptr [ rax + hexvar ] mov rdi , rbx call hexvar test eax , eax jne hexvar xor eax , eax mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rbx , rdi mov r12 , rsi mov ebp , edx mov r14d , ecx mov r13 , r9 cmp qword ptr [ rax ] , num je hexvar test r8d , r8d jne hexvar test r14d , r14d jne hexvar cmp dword ptr [ rsp + hexvar ] , num je hexvar mov rax , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax ] mov rsi , qword ptr [ rax + hexvar ] mov rdi , rbx call hexvar test eax , eax jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax ] , num je hexvar test r8d , r8d mov rbx , rdi mov r12 , rsi mov ebp , edx mov r13 , r9 jne hexvar test ecx , ecx jne hexvar mov esi , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx + hexvar ] test esi , esi mov rax , qword ptr [ rax ] jne hexvar mov rsi , qword ptr [ rax + hexvar ] mov rdi , rbx call hexvar test eax , eax jne hexvar xor eax , eax mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + num ] test eax , eax je hexvar cmp dword ptr [ eax ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esi + num ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] mov eax , esi call hexvar test eax , eax jne hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rbx , rbx je hexvar cmp qword ptr [ rbx ] , num je hexvar test r8d , r8d mov rbp , rdi mov r14 , rsi mov r13d , edx mov r15 , r9 jne hexvar test ecx , ecx jne hexvar mov r8d , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rbx ] test r8d , r8d jne hexvar mov rsi , qword ptr [ rax + hexvar ] mov rdi , rbp call hexvar test eax , eax jne hexvar xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r6 , [ pc , hexvar ] ldr r4 , [ r0 , num ] mov r5 , r0 ldr r0 , [ r6 ] sub sp , sp , hexvar cmp r4 , num str r0 , [ sp , hexvar ] beq hexvar mov r7 , r3 ldr r3 , [ r4 ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] mov sb , r1 cmp r3 , num mov r8 , r2 bne hexvar cmp r7 , num bne hexvar ldr r3 , [ sp , hexvar ] mov r0 , r5 cmp r3 , num ldr r3 , [ r4 ] ldrne r3 , [ r3 ] ldr r1 , [ r3 , hexvar ] bl hexvar cmp r0 , num bne hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] lea ecx , [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] push dword ptr [ esp + hexvar ] push ecx push edx push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , num add esp , hexvar pop ebx ret
push rax mov rcx , rsi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rdi + hexvar ] lea rdx , [ rdi + hexvar ] mov rdi , rax call hexvar mov rdi , rax xor eax , eax test rdi , rdi je hexvar call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar pop rcx ret
push rax mov rcx , rsi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rdi + hexvar ] lea rdx , [ rdi + hexvar ] mov rdi , rax call hexvar mov rdi , rax xor eax , eax test rdi , rdi je hexvar call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar pop rcx ret
push rax mov rcx , rsi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rdi + hexvar ] lea rdx , [ rdi + hexvar ] mov rdi , rax call hexvar mov rdi , rax xor eax , eax test rdi , rdi je hexvar call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar pop rcx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] push edx lea edx , [ eax + hexvar ] push edx mov eax , dword ptr [ eax + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar mov esi , num test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov esi , num mov eax , esi add esp , num pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r0 , [ r3 ] ldr r3 , [ sp , hexvar ] add r1 , r3 , hexvar ldr r3 , [ sp , hexvar ] add r2 , r3 , hexvar ldr r3 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , hexvar bl hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] push edx lea edx , [ eax + hexvar ] push edx mov eax , dword ptr [ eax + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar mov esi , num test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov esi , num mov eax , esi add esp , num pop ebx pop esi ret
push rax mov rcx , rsi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rdi + hexvar ] lea rdx , [ rdi + hexvar ] mov rdi , rax call hexvar mov rdi , rax xor eax , eax test rdi , rdi je hexvar call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar pop rcx ret
push rax mov rcx , rsi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rdi + hexvar ] lea rdx , [ rdi + hexvar ] mov rdi , rax call hexvar mov rdi , rax xor eax , eax test rdi , rdi je hexvar call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar pop rcx ret
push rax mov rcx , rsi mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rdi + hexvar ] lea rdx , [ rdi + hexvar ] mov rdi , rax call hexvar mov rdi , rax xor eax , eax test rdi , rdi je hexvar call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar pop rcx ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sp , sp , num mov r7 , r0 mov r4 , r1 mov sb , r2 mov r0 , r1 bl hexvar mov r5 , r0 add r0 , r0 , num bl hexvar subs r6 , r0 , num beq hexvar mov r2 , r5 mov r1 , r4 mov r0 , r6 bl hexvar cmp sb , num beq hexvar ldr r3 , [ sb ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bgt hexvar ldr r8 , [ pc , hexvar ] add r5 , r6 , r5 ldr sl , [ pc , hexvar ] b hexvar mov r3 , r4 cmp r4 , sl bgt hexvar add r4 , r3 , num str r3 , [ sp ] mov r3 , r8 mvn r2 , num mov r1 , num mov r0 , r5 bl hexvar mov r3 , num mov r2 , r3 mov r1 , r6 add r0 , r7 , hexvar bl hexvar cmp r0 , num bne hexvar cmp sb , num strne r4 , [ sb ] mov r0 , r6 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov ecx , hexvar mov eax , num mov edi , ebp repne scasb al , byte ptr es : [ edi ] mov edx , ecx not edx mov ecx , edx lea esi , [ edx - num ] add ecx , num mov edx , num push edx push ecx call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar sub esp , num push esi push ebp push eax call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , hexvar jg hexvar lea ebp , [ ebx - hexvar ] lea edx , [ edi + esi ] mov dword ptr [ esp + hexvar ] , edx jmp hexvar mov eax , esi cmp esi , hexvar jg hexvar lea esi , [ eax + num ] sub esp , hexvar push eax push ebp push - num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push num push num push edi mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , esi mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a2 sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move a0 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 sw s5 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s4 , hexvar ( sp ) lui t9 , hexvar move a0 , zero addiu a1 , v0 , num addiu t9 , t9 , - hexvar bal hexvar move s2 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) move a2 , s2 move a1 , s0 jalr t9 move a0 , v0 beqz s6 , hexvar lw gp , hexvar ( sp ) lui v0 , hexvar lw v1 , ( s6 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov ecx , eax mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] add ecx , num mov ecx , ecx mov edi , ecx call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edx , eax call hexvar mov dword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jle hexvar movabs rdi , hexvar mov esi , hexvar movabs rdx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx add rax , rdx mov ecx , dword ptr [ rbp - hexvar ] mov esi , ecx add esi , num mov dword ptr [ rbp - hexvar ] , esi mov rdi , rax movabs rsi , hexvar mov edx , ecx mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax xor eax , eax mov rcx , qword ptr [ rbp - hexvar ] add rcx , hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rcx mov edx , eax mov ecx , eax call hexvar cmp rax , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r7 , r0 sub sp , sp , num mov r0 , r1 mov r4 , r1 mov sl , r2 bl hexvar mov r5 , r0 add r0 , r0 , num bl hexvar subs r6 , r0 , num beq hexvar mov r1 , r4 mov r2 , r5 bl hexvar cmp sl , num beq hexvar ldr ip , [ sl ] ldr r3 , [ pc , hexvar ] cmp ip , r3 bgt hexvar ldr r8 , [ pc , hexvar ] ldr sb , [ pc , hexvar ] add r5 , r6 , r5 add r7 , r7 , hexvar b hexvar cmp r4 , sb mov ip , r4 beq hexvar mov r1 , num str ip , [ sp ] mov r3 , r8 mvn r2 , num mov r0 , r5 add r4 , ip , r1 bl hexvar mov r3 , num mov r1 , r6 mov r2 , r3 mov r0 , r7 bl hexvar cmp r0 , num bne hexvar cmp sl , num strne r4 , [ sl ] mov r0 , r6 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r7 , r0 sub sp , sp , num mov r0 , r1 mov r4 , r1 mov sl , r2 bl hexvar mov r5 , r0 add r0 , r0 , num bl hexvar subs r6 , r0 , num beq hexvar mov r1 , r4 mov r2 , r5 bl hexvar cmp sl , num beq hexvar ldr ip , [ sl ] ldr r3 , [ pc , hexvar ] cmp ip , r3 bgt hexvar ldr r8 , [ pc , hexvar ] ldr sb , [ pc , hexvar ] add r5 , r6 , r5 add r7 , r7 , hexvar b hexvar cmp r4 , sb mov ip , r4 beq hexvar mov r1 , num str ip , [ sp ] mov r3 , r8 mvn r2 , num mov r0 , r5 add r4 , ip , r1 bl hexvar mov r3 , num mov r1 , r6 mov r2 , r3 mov r0 , r7 bl hexvar cmp r0 , num bne hexvar cmp sl , num strne r4 , [ sl ] mov r0 , r6 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push r14 push r13 push r12 push rbp push rbx mov r13 , rdi mov rbx , rsi mov r14 , rdx mov rcx , - num mov eax , num mov rdi , rsi repne scasb al , byte ptr [ rdi ] mov rdx , rcx not rdx lea rbp , [ rdx - num ] lea edi , [ rbp + num ] call hexvar mov r12 , rax test rax , rax je hexvar mov ebp , ebp mov rdx , rbp mov rsi , rbx mov rdi , rax call hexvar test r14 , r14 je hexvar mov r8d , dword ptr [ r14 ] cmp r8d , hexvar jg hexvar add rbp , r12 jmp hexvar mov r8d , ebx cmp ebx , hexvar jg hexvar lea ebx , [ r8 + num ] lea rcx , [ rip + hexvar ] mov rdx , - num mov esi , num mov rdi , rbp mov eax , num call hexvar lea rdi , [ r13 + hexvar ] mov ecx , num mov edx , num mov rsi , r12 call hexvar test rax , rax jne hexvar test r14 , r14 je hexvar mov dword ptr [ r14 ] , ebx mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r15 push r14 mov r15 , rdx push r13 push r12 mov r13 , rdi push rbp push rbx mov rdi , rsi mov rbx , rsi sub rsp , num call hexvar lea edi , [ rax + num ] mov rbp , rax call hexvar test rax , rax mov r12 , rax je hexvar mov ebp , ebp mov rsi , rbx mov rdi , rax mov rdx , rbp call hexvar test r15 , r15 je hexvar mov r8d , dword ptr [ r15 ] cmp r8d , hexvar jg hexvar add rbp , r12 add r13 , hexvar lea r14 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] cmp ebx , hexvar mov r8d , ebx je hexvar mov rcx , r14 mov rdx , - num mov esi , num mov rdi , rbp xor eax , eax lea ebx , [ r8 + num ] call hexvar xor ecx , ecx xor edx , edx mov rsi , r12 mov rdi , r13 call hexvar test rax , rax jne hexvar test r15 , r15 je hexvar mov dword ptr [ r15 ] , ebx add rsp , num mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a2 sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move a0 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 sw s5 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s4 , hexvar ( sp ) lui t9 , hexvar move a0 , zero addiu a1 , v0 , num addiu t9 , t9 , hexvar bal hexvar move s2 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) move a2 , s2 move a1 , s0 jalr t9 move a0 , v0 beqz s6 , hexvar lw gp , hexvar ( sp ) lui v0 , hexvar lw v1 , ( s6 )
push r15 push r14 mov r15 , rdx push r13 push r12 mov r13 , rdi push rbp push rbx mov rdi , rsi mov rbx , rsi sub rsp , num call hexvar lea edi , [ rax + num ] mov rbp , rax call hexvar test rax , rax mov r12 , rax je hexvar mov ebp , ebp mov rsi , rbx mov rdi , rax mov rdx , rbp call hexvar test r15 , r15 je hexvar mov r8d , dword ptr [ r15 ] cmp r8d , hexvar jg hexvar add rbp , r12 add r13 , hexvar lea r14 , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] cmp ebx , hexvar mov r8d , ebx je hexvar mov rcx , r14 mov rdx , - num mov esi , num mov rdi , rbp xor eax , eax lea ebx , [ r8 + num ] call hexvar xor ecx , ecx xor edx , edx mov rsi , r12 mov rdi , r13 call hexvar test rax , rax jne hexvar test r15 , r15 je hexvar mov dword ptr [ r15 ] , ebx add rsp , num mov rax , r12 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r0 mov r7 , r1 mov r5 , r3 subs r6 , r2 , num beq hexvar ldr r8 , [ r0 ] sub r8 , r1 , r8 cmp r6 , r3 bhi hexvar ldr r2 , [ r0 , num ] add r3 , r6 , num add r3 , r3 , r8 bic r3 , r3 , num cmp r2 , r3 beq hexvar add r3 , r5 , num bics r3 , r3 , num moveq r2 , num movne r2 , num cmp r5 , num movne r5 , r2 moveq r5 , num cmp r5 , num bne hexvar ldr r2 , [ r4 , num ] ldr r1 , [ r4 , hexvar ] sub r1 , r1 , r2 cmp r1 , r3 blo hexvar ldr r5 , [ r4 ] add r5 , r5 , r2 add r3 , r2 , r3 str r3 , [ r4 , num ] cmp r6 , num bne hexvar mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r0 mov r7 , r1 mov r5 , r3 subs r6 , r2 , num beq hexvar ldr r8 , [ r0 ] sub r8 , r1 , r8 cmp r6 , r3 bhi hexvar ldr r2 , [ r0 , num ] add r3 , r6 , num add r3 , r3 , r8 bic r3 , r3 , num cmp r2 , r3 beq hexvar add r3 , r5 , num bics r3 , r3 , num moveq r2 , num movne r2 , num cmp r5 , num movne r5 , r2 moveq r5 , num cmp r5 , num bne hexvar ldr r2 , [ r4 , num ] ldr r1 , [ r4 , hexvar ] sub r1 , r1 , r2 cmp r1 , r3 blo hexvar ldr r5 , [ r4 ] add r5 , r5 , r2 add r3 , r2 , r3 str r3 , [ r4 , num ] cmp r6 , num bne hexvar mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc }
push r14 push r13 push r12 push rbp mov r12 , rsi push rbx mov rbp , rdx mov rbx , rdi sub rsp , hexvar test rdx , rdx je hexvar mov r14 , rsi sub r14 , qword ptr [ rdi ] lea r13 , [ r14 + rdx + hexvar ] and r13 , hexvar cmp rdx , rcx ja hexvar cmp qword ptr [ rdi + hexvar ] , r13 je hexvar lea rax , [ rcx + hexvar ] and rax , hexvar jne hexvar test rcx , rcx jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] sub rcx , rdx cmp rcx , rax jb hexvar mov r13 , qword ptr [ rbx ] add rax , rdx mov qword ptr [ rbx + hexvar ] , rax add r13 , rdx test rbp , rbp jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 push r12 push rbp mov r12 , rsi push rbx mov rbp , rdx mov rbx , rdi sub rsp , hexvar test rdx , rdx je hexvar mov r14 , rsi sub r14 , qword ptr [ rdi ] lea r13 , [ r14 + rdx + hexvar ] and r13 , hexvar cmp rdx , rcx ja hexvar cmp qword ptr [ rdi + hexvar ] , r13 je hexvar lea rax , [ rcx + hexvar ] and rax , hexvar jne hexvar test rcx , rcx jne hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rcx , qword ptr [ rbx + hexvar ] sub rcx , rdx cmp rcx , rax jb hexvar mov r13 , qword ptr [ rbx ] add rax , rdx mov qword ptr [ rbx + hexvar ] , rax add r13 , rdx test rbp , rbp jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r0 mov r7 , r1 mov r5 , r3 subs r6 , r2 , num beq hexvar ldr r8 , [ r0 ] sub r8 , r1 , r8 cmp r6 , r3 bhi hexvar ldr r2 , [ r0 , num ] add r3 , r6 , num add r3 , r3 , r8 bic r3 , r3 , num cmp r2 , r3 beq hexvar add r3 , r5 , num bics r3 , r3 , num moveq r2 , num movne r2 , num cmp r5 , num movne r5 , r2 moveq r5 , num cmp r5 , num bne hexvar ldr r2 , [ r4 , num ] ldr r1 , [ r4 , hexvar ] sub r1 , r1 , r2 cmp r1 , r3 blo hexvar ldr r5 , [ r4 ] add r5 , r5 , r2 add r3 , r2 , r3 str r3 , [ r4 , num ] cmp r6 , num bne hexvar mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc }
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num sw s3 , hexvar ( sp ) move s3 , a1 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz a2 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push ebp push edi push esi push ebx call hexvar add ebx , num sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov ecx , dword ptr [ esp + hexvar ] sub ecx , dword ptr [ esi ] lea edx , [ ecx + edi + num ] and edx , hexvar cmp edi , ebp ja hexvar cmp dword ptr [ esi + num ] , edx je hexvar lea eax , [ ebp + num ] and eax , hexvar jne hexvar test ebp , ebp jne hexvar mov edx , dword ptr [ esi + num ] mov ecx , dword ptr [ esi + hexvar ] sub ecx , edx cmp ecx , eax jb hexvar mov ebp , dword ptr [ esi ] add eax , edx mov dword ptr [ esi + num ] , eax add ebp , edx test edi , edi jne hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r0 mov r7 , r1 mov r5 , r3 subs r6 , r2 , num beq hexvar ldr r8 , [ r0 ] sub r8 , r1 , r8 cmp r6 , r3 bhi hexvar ldr r2 , [ r0 , num ] add r3 , r6 , num add r3 , r3 , r8 bic r3 , r3 , num cmp r2 , r3 beq hexvar add r3 , r5 , num bics r3 , r3 , num moveq r2 , num movne r2 , num cmp r5 , num movne r5 , r2 moveq r5 , num cmp r5 , num bne hexvar ldr r2 , [ r4 , num ] ldr r1 , [ r4 , hexvar ] sub r1 , r1 , r2 cmp r1 , r3 blo hexvar ldr r5 , [ r4 ] add r5 , r5 , r2 add r3 , r2 , r3 str r3 , [ r4 , num ] cmp r6 , num bne hexvar mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc }
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num sw s3 , hexvar ( sp ) move s3 , a1 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz a2 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , num mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov ebp , dword ptr [ esp + hexvar ] sub ebp , dword ptr [ esi ] cmp edi , dword ptr [ esp + hexvar ] ja hexvar mov edx , dword ptr [ esi + num ] lea eax , [ ebp + edi + num ] and eax , hexvar cmp edx , eax je hexvar mov eax , dword ptr [ esp + hexvar ] add eax , num and eax , hexvar jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov edx , dword ptr [ esi + num ] mov ecx , dword ptr [ esi + hexvar ] sub ecx , edx cmp ecx , eax jb hexvar mov ebp , edx add ebp , dword ptr [ esi ] add eax , edx mov dword ptr [ esi + num ] , eax test edi , edi jne hexvar mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + edx ] cmp eax , hexvar mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , num setne dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , hexvar setne dl mov byte ptr [ ebp - num ] , dl xor eax , eax mov cl , al mov dl , byte ptr [ ebp - num ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + edx ] cmp eax , hexvar mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , num setne dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + edx ] cmp eax , hexvar mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , num setne dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + edx ] cmp eax , hexvar mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , num setne dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , num mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] movsx edx , byte ptr [ eax + ecx ] cmp edx , hexvar setne bl mov byte ptr [ ebp - hexvar ] , bl xor eax , eax mov cl , al mov dl , byte ptr [ ebp - hexvar ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] movsx ecx , byte ptr [ edx + ecx ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop ebx pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , num jmp hexvar add qword ptr [ rbp - num ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] add rax , rdx movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + edx ] cmp eax , hexvar mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , num setne dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax xor eax , eax mov cl , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + edx ] cmp eax , hexvar mov byte ptr [ ebp - num ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] movsx eax , byte ptr [ eax + ecx ] cmp eax , num setne dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a1 , v0 move a0 , zero jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a3 , v0 lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v0 , ( v1 ) addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bltz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) move s4 , a2 sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar addiu v0 , zero , hexvar move s1 , a0 addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) jal hexvar move a0 , zero lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 addiu s6 , sp , hexvar lw t9 , - hexvar ( gp ) move a1 , s5 move a3 , s6 lw s2 , hexvar ( sp ) move a2 , s0 jalr t9 move a0 , s1 bltz v0 , hexvar lw a1 , hexvar ( sp ) jal hexvar move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop move a0 , s0 lw gp , hexvar ( sp ) move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw s1 , ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , lr } ldr r8 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r8 ] subs r7 , r0 , num mov r6 , r1 mov sb , r2 str r3 , [ sp , num ] beq hexvar mov r3 , hexvar mov r0 , num mov r1 , r3 str r3 , [ sp ] bl hexvar subs r4 , r0 , num beq hexvar mov r1 , r6 mov r3 , sp mov r2 , r4 mov r0 , r7 ldr r5 , [ sp ] bl hexvar cmp r0 , num ldr r1 , [ sp ] blt hexvar mov r0 , r4 bl hexvar cmp r0 , num bne hexvar bl hexvar ldr r6 , [ r0 ] mov r5 , r0 mov r0 , r4 bl hexvar mvn r0 , num str r6 , [ r5 ] ldr r2 , [ sp , num ] ldr r3 , [ r8 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc } andeq r0 , r0 , r0
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edi , edi je hexvar mov dword ptr [ esp + hexvar ] , hexvar sub esp , num push hexvar push num call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , eax jmp hexvar lea esi , [ esi ] cmp eax , hexvar ja hexvar sub esp , num shl eax , num push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar test edi , edi mov esi , eax jns hexvar mov ebp , dword ptr [ esp + hexvar ] push dword ptr [ esp + num ] push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov edi , eax add esp , hexvar mov eax , dword ptr [ esp + hexvar ] test edi , edi jns hexvar cmp eax , ebp jne hexvar add eax , eax cmp eax , hexvar mov dword ptr [ esp + hexvar ] , eax jbe hexvar lea esi , [ esi ] call hexvar mov dword ptr [ eax ] , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 mov r13d , esi push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi mov qword ptr [ rsp + num ] , rdx je hexvar mov rbp , rdi mov esi , hexvar xor edi , edi mov dword ptr [ rsp + hexvar ] , hexvar call hexvar test rax , rax mov rbx , rax je hexvar lea r15 , [ rsp + hexvar ] jmp hexvar nop dword ptr [ rax ] movsxd rsi , esi movabs rax , hexvar cmp rsi , rax ja hexvar shl rsi , num mov rdi , rbx call hexvar test rax , rax je hexvar test r14d , r14d mov rbx , rax jns hexvar mov esi , r13d mov rcx , r15 mov rdx , rbx mov rdi , rbp mov r12d , dword ptr [ rsp + hexvar ] call hexvar test eax , eax mov r14d , eax mov esi , dword ptr [ rsp + hexvar ] jns hexvar cmp esi , r12d jne hexvar add esi , esi mov dword ptr [ rsp + hexvar ] , esi jmp hexvar nop dword ptr [ rax ] call hexvar mov dword ptr [ rax ] , hexvar mov rdi , rbx call hexvar mov eax , hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a1 move s5 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move s1 , a0 addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar move a0 , zero jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 b hexvar addiu s4 , sp , hexvar lw v0 , hexvar ( sp ) beq v0 , s3 , hexvar sll v0 , v0 , num lw a1 , hexvar ( sp ) move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) move s0 , v0 lw s3 , hexvar ( sp ) move a3 , s4 move a2 , s0 move a1 , s2 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar lw a1 , hexvar ( sp ) move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , v0 lw s2 , ( v0 ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw s2 , ( s1 ) addiu v0 , zero , - num lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar sw v0 , hexvar ( sp ) sw v0 , ( s5 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a1 move s5 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move s1 , a0 addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar move a0 , zero jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 b hexvar addiu s4 , sp , hexvar lw v0 , hexvar ( sp ) beq v0 , s3 , hexvar sll v0 , v0 , num lw a1 , hexvar ( sp ) move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) move s0 , v0 lw s3 , hexvar ( sp ) move a3 , s4 move a2 , s0 move a1 , s2 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar lw a1 , hexvar ( sp ) move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , v0 lw s2 , ( v0 ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw s2 , ( s1 ) addiu v0 , zero , - num lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar sw v0 , hexvar ( sp ) sw v0 , ( s5 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a1 , v0 move a0 , zero jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a3 , v0 lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v0 , ( v1 ) addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bltz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) lw s3 , - hexvar ( gp ) sw s4 , hexvar ( sp ) move s4 , a2 sw s2 , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s3 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar move s1 , a0 addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) jalr t9 move a0 , zero lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 b hexvar addiu s7 , sp , hexvar srl v0 , a1 , hexvar sll a1 , a1 , num bltz a1 , hexvar sltu v0 , zero , v0 bnez v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) bgez s5 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a1 , s2 move a3 , s7 lw s6 , hexvar ( sp ) move a2 , s0 jalr t9 move a0 , s1 lw gp , hexvar ( sp ) move s5 , v0 bgez v0 , hexvar lw a1 , hexvar ( sp ) bne a1 , s6 , hexvar nop sll a1 , a1 , num b hexvar sw a1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , hexvar lw gp , hexvar ( sp ) sw v1 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 addiu v1 , zero , - num lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , v1 lw v1 , ( s3 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v1 , hexvar ( sp ) b hexvar sw v0 , ( s4 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a1 , v0 move a0 , zero jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a3 , v0 lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v0 , ( v1 ) addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bltz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] mov esi , dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + hexvar ] , eax je hexvar mov ecx , dword ptr [ esi + hexvar ] mov edx , eax test ecx , ecx je hexvar lea ebp , [ ebx - hexvar ] mov dword ptr [ esp + num ] , edx call hexvar sub esp , num mov dword ptr [ eax ] , num mov edi , eax push ebp mov edx , dword ptr [ esp + hexvar ] push edx call hexvar add esp , hexvar test eax , eax je hexvar cmp dword ptr [ edi ] , hexvar je hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax je hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar call hexvar mov edi , eax mov dword ptr [ eax ] , num sub esp , num lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar cmp dword ptr [ edi ] , hexvar je hexvar mov eax , num pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movabs rdi , hexvar movabs rsi , hexvar movabs rdx , hexvar movabs rcx , hexvar call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar xor eax , eax mov ecx , eax movabs rdi , hexvar movabs rsi , hexvar mov rdx , rcx call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , num mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rax ] , hexvar jne hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar addiu a3 , v0 , hexvar lw a2 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop addiu v0 , zero , - hexvar b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop move a3 , zero move a2 , zero lw a1 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw zero , ( v0 ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop move v0 , zero b hexvar nop nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) b hexvar nop nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 ) addiu v0 , zero , - hexvar move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a3 , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) addiu a3 , a3 , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a2 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) bal hexvar sw s1 , hexvar ( sp ) lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , hexvar ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rcx , [ rip - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov ecx , num mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call hexvar mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar mov eax , num jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov eax , hexvar leave ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax je hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar call hexvar mov edi , eax mov dword ptr [ eax ] , num sub esp , num lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar cmp dword ptr [ edi ] , hexvar je hexvar mov eax , num pop ebx pop esi pop edi ret
push rbp push rbx mov rbx , rdi lea rcx , [ rip - hexvar ] sub rsp , num mov rdx , qword ptr [ rip + hexvar ] lea rsi , [ rip - hexvar ] lea rdi , [ rip - hexvar ] call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar call hexvar lea rsi , [ rip + hexvar ] mov rbp , rax xor r8d , r8d xor edx , edx mov dword ptr [ rax ] , num mov ecx , num mov rdi , rbx call hexvar cmp dword ptr [ rbp ] , hexvar je hexvar xor eax , eax add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi movabs rdi , hexvar movabs rsi , hexvar movabs rdx , hexvar movabs rcx , hexvar call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar xor eax , eax mov ecx , eax movabs rdi , hexvar movabs rsi , hexvar mov rdx , rcx call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar jmp hexvar call hexvar mov dword ptr [ rax ] , num mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar cmp dword ptr [ rax ] , hexvar jne hexvar jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - num ] , hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea rcx , [ rip - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdx , rax lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov ecx , num mov edx , num lea rax , [ rip + hexvar ] mov rsi , rax lea rax , [ rip + hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar call hexvar mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , hexvar je hexvar mov eax , num jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num jmp hexvar nop mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov eax , hexvar leave ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 b hexvar ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbx mov rbx , rsi mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov edi , dword ptr [ rdi + hexvar ] mov rsi , rbx pop rbx jmp hexvar mov rdi , rbx mov esi , hexvar xor edx , edx call hexvar xor eax , eax test byte ptr [ rbx + hexvar ] , hexvar sete al lea eax , [ rax + rax ] add eax , num pop rbx ret
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edi + hexvar ] test esi , esi je hexvar mov edx , dword ptr [ esi ] mov eax , dword ptr [ esi + num ] test edx , edx jne hexvar test eax , eax je hexvar mov ecx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ ecx + hexvar ] xor edi , edi jmp hexvar lea esi , [ esi ] sub esp , num push edi push dword ptr [ esi + num ] call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar cmp eax , ebp je hexvar mov eax , dword ptr [ esi + num ] add edi , num sub esp , hexvar push eax call hexvar add esp , hexvar cmp edi , eax jl hexvar mov edx , dword ptr [ esi ] test edx , edx je hexvar xor edi , edi jmp hexvar mov esi , esi lea edi , [ edi ] sub esp , num push edi push dword ptr [ esi ] call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar cmp eax , ebp je hexvar mov edx , dword ptr [ esi ] add edi , num sub esp , hexvar push edx call hexvar add esp , hexvar cmp edi , eax jl hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbx mov rbx , rsi mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov edi , dword ptr [ rdi + hexvar ] mov rsi , rbx pop rbx jmp hexvar mov rdi , rbx mov esi , hexvar xor edx , edx call hexvar xor eax , eax test byte ptr [ rbx + hexvar ] , hexvar sete al lea eax , [ rax + rax ] add eax , num pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , eax add esp , num pop ebx pop esi jmp hexvar nop lea esi , [ esi ] sub esp , num push num push - num push esi call hexvar mov eax , dword ptr [ esi + hexvar ] and eax , hexvar cmp eax , num sbb eax , eax add esp , hexvar and eax , num add eax , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , eax add esp , num pop ebx pop esi jmp hexvar nop lea esi , [ esi ] sub esp , num push num push - num push esi call hexvar mov eax , dword ptr [ esi + hexvar ] and eax , hexvar cmp eax , num sbb eax , eax add esp , hexvar and eax , num add eax , num pop ebx pop esi ret
push rbx mov rbx , rsi mov rax , qword ptr [ rsi + hexvar ] test rax , rax je hexvar cmp qword ptr [ rax ] , num jne hexvar cmp qword ptr [ rax + num ] , num je hexvar mov edi , dword ptr [ rdi + hexvar ] mov rsi , rbx pop rbx jmp hexvar mov rdi , rbx mov esi , hexvar xor edx , edx call hexvar xor eax , eax test byte ptr [ rbx + hexvar ] , hexvar sete al lea eax , [ rax + rax ] add eax , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) addiu v1 , fp , hexvar move a2 , v1 addiu a1 , fp , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) addiu a0 , fp , hexvar lw v1 , hexvar ( fp ) sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a3 , a0 lui v0 , hexvar addiu a2 , v0 , - hexvar addiu a1 , zero , hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) addiu v1 , fp , hexvar move a1 , v1 move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) lw a3 , hexvar ( fp ) move a2 , v0 lui v0 , hexvar addiu a1 , v0 , - hexvar lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar lui a0 , hexvar lw s0 , hexvar ( sp ) addiu a2 , sp , hexvar addiu a1 , sp , hexvar lui v0 , hexvar lw a0 , hexvar ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a3 , sp , hexvar sw s0 , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) sw v0 , hexvar ( sp ) lui a2 , hexvar addiu a2 , a2 , hexvar addiu a1 , zero , hexvar lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - num ] , rsi cmp qword ptr [ hexvar ] , num jne hexvar movabs rdi , hexvar call hexvar mov rdi , rax call hexvar mov qword ptr [ hexvar ] , rax lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov ecx , eax mov dword ptr [ rbp - hexvar ] , ecx mov rdi , qword ptr [ hexvar ] lea rdx , [ rbp - hexvar ] call hexvar cmp rax , num je hexvar mov r8 , qword ptr [ hexvar ] mov r9d , dword ptr [ rbp - hexvar ] movabs rdi , hexvar mov esi , hexvar movabs rdx , hexvar lea rcx , [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar lea rsi , [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov ecx , dword ptr [ rbp - hexvar ] movabs rdi , hexvar movabs rsi , hexvar mov rdx , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax movabs rax , hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ hexvar ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax lea eax , [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ hexvar ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax lea eax , [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , eax cmp dword ptr [ hexvar ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax lea eax , [ ebp - num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , hexvar lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } ldr r6 , [ pc , hexvar ] ldr r5 , [ pc , hexvar ] ldr r3 , [ r6 , hexvar ] sub sp , sp , hexvar ldr r2 , [ r5 ] add r4 , sp , num cmp r3 , num str r2 , [ sp , hexvar ] stm r4 , { r0 , r1 } beq hexvar mov r1 , r4 mov r0 , r3 add r2 , sp , hexvar ldr r4 , [ sp , hexvar ] bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r6 , hexvar ] ldr r2 , [ pc , hexvar ] stm sp , { r3 , r4 } mov r1 , hexvar add r3 , sp , hexvar ldr r0 , [ pc , hexvar ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] ldr r0 , [ pc , hexvar ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , esp lea edx , [ ebp - hexvar ] mov dword ptr [ ecx + num ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ ecx + num ] , edx mov dword ptr [ ecx ] , eax call hexvar test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ edx + hexvar ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ edx + hexvar ] , eax mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp lea edx , [ ebp - hexvar ] mov dword ptr [ ecx + num ] , edx mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ edx + num ] , eax mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx lea eax , [ hexvar ] add esp , hexvar pop ebx pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea esi , [ ebx + hexvar ] push dword ptr [ esp + hexvar ] push num push eax lea eax , [ ebx - hexvar ] push eax push hexvar push esi call hexvar add esp , hexvar mov eax , esi add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , rdi mov rcx , rsi mov rdx , rcx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - num ] mov r9d , edx mov r8d , num mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar lea rax , [ rip + hexvar ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( a0 )
push esi push ebx xor edx , edx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] lea ecx , [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ ecx + eax ] , edx add eax , num cmp eax , hexvar jb hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push edx call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax setne al movzx eax , al neg eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx xor edx , edx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] lea ecx , [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ ecx + eax ] , edx add eax , num cmp eax , hexvar jb hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push edx call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax setne al movzx eax , al neg eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( a0 )
push esi push ebx xor edx , edx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] lea ecx , [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ ecx + eax ] , edx add eax , num cmp eax , hexvar jb hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push edx call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax setne al movzx eax , al neg eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rdi , [ rbp - hexvar ] mov esi , eax mov edx , hexvar call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rdx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdx + hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar movabs rdi , hexvar movabs rsi , hexvar movabs rdx , hexvar movabs rcx , hexvar call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov esi , eax mov dword ptr [ rbp - num ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] lea rax , [ rbp - hexvar ] movabs rsi , hexvar mov rdx , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push esi push ebx xor edx , edx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] lea ecx , [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ ecx + eax ] , edx add eax , num cmp eax , hexvar jb hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push edx call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax setne al movzx eax , al neg eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rbp push rbx mov rbx , rdi pxor xmm0 , xmm0 sub rsp , hexvar mov qword ptr [ rsp ] , rdi mov rdi , qword ptr [ rdi + hexvar ] mov rbp , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax xor eax , eax test rdi , rdi movups xmmword ptr [ rsp + num ] , xmm0 mov qword ptr [ rbp + hexvar ] , num movups xmmword ptr [ rbp + hexvar ] , xmm0 movups xmmword ptr [ rbp + hexvar ] , xmm0 mov dword ptr [ rsp + hexvar ] , esi je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar lea rsi , [ rip - hexvar ] mov rdx , rbp call hexvar mov rdi , rbx call hexvar test eax , eax setne al movzx eax , al neg eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp + num ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp ] , rdi mov dword ptr [ rsp + hexvar ] , esi mov eax , num cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rbx , rdi cmp qword ptr [ rdi + hexvar ] , num je hexvar mov rdx , rsp mov rdi , qword ptr [ rbx + hexvar ] lea rsi , [ rip - hexvar ] call hexvar mov rdi , rbx call hexvar test eax , eax setne al movzx eax , al neg eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi lea rdi , [ rbp - hexvar ] mov esi , eax mov edx , hexvar call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rdx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdx + hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar movabs rdi , hexvar movabs rsi , hexvar movabs rdx , hexvar movabs rcx , hexvar call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov esi , eax mov dword ptr [ rbp - num ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] lea rax , [ rbp - hexvar ] movabs rsi , hexvar mov rdx , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] not eax shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] sub eax , - num sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp lea ecx , [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax ] , num call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and eax , ecx sub eax , - num sete dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jl hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ esp ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ esp ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar xor ecx , ecx cmp ecx , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and eax , ecx sub eax , - num mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 move s4 , zero addiu s0 , zero , - num addiu s2 , zero , hexvar b hexvar addiu s3 , zero , num addiu a0 , v0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) slt v1 , s0 , v0 movn s0 , v0 , v1 move s4 , s3 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a0 , s1 lb v1 , hexvar ( v0 ) bne v1 , s2 , hexvar move a1 , zero lb v1 , hexvar ( v0 ) beqz v1 , hexvar lw t9 , - hexvar ( gp ) bne v1 , s2 , hexvar nop b hexvar nop lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s4 , hexvar addiu a0 , zero , num bltz s0 , hexvar lw t9 , - hexvar ( gp ) move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 addiu v0 , zero , - num beq s0 , v0 , hexvar nop addiu a1 , sp , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp )
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov edi , hexvar call hexvar test rax , rax jne hexvar jmp hexvar cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar movzx edx , byte ptr [ rax + hexvar ] cmp dl , hexvar je hexvar test dl , dl je hexvar lea rdi , [ rax + hexvar ] mov esi , num call hexvar cmp ebx , eax cmovl ebx , eax mov r12d , num jmp hexvar mov rbp , rax mov r12d , num mov ebx , hexvar mov rdi , rbp call hexvar test rax , rax jne hexvar mov rdi , rbp call hexvar test r12d , r12d je hexvar mov eax , ebx test ebx , ebx jns hexvar mov edi , num call hexvar mov rbx , rax cmp rax , - num mov eax , hexvar cmove rbx , rax mov rsi , rsp mov edi , num call hexvar mov edx , eax mov eax , ebx test edx , edx jne hexvar mov rax , qword ptr [ rsp ] cmp rax , - num cmove eax , ebx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num js hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar mov dword ptr [ ebp - hexvar ] , hexvar sub esp , num lea eax , [ ebp - hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov ecx , eax xor ecx , hexvar mov esi , ecx mov eax , edx xor eax , hexvar mov edi , eax mov eax , edi or eax , esi test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jl hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ esp ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ esp ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar xor ecx , ecx cmp ecx , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and eax , ecx sub eax , - num mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s2 , v0 move s4 , zero addiu s0 , zero , - num addiu s3 , zero , hexvar addiu s5 , zero , num lui s7 , hexvar b hexvar lui s6 , hexvar lw s2 , ( s2 )
push ebp mov ebp , esp sub esp , hexvar call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jl hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ esp ] , num call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , - num jne hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ esp ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar xor ecx , ecx cmp ecx , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and eax , ecx sub eax , - num mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] not eax shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] sub eax , - num sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , esp lea ecx , [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax ] , num call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and eax , ecx sub eax , - num sete dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num js hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar mov dword ptr [ ebp - hexvar ] , hexvar sub esp , num lea eax , [ ebp - hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov ecx , eax xor ecx , hexvar mov esi , ecx mov eax , edx xor eax , hexvar mov edi , eax mov eax , edi or eax , esi test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ r0 ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r2 , num str r3 , [ sp , hexvar ] beq hexvar mov r2 , num ldrb r3 , [ r1 , num ] mov sb , r1 cmp r3 , r2 movne r1 , hexvar moveq r1 , hexvar bl hexvar mov r5 , num mov r8 , r0 mov r6 , r5 ldr sl , [ pc , hexvar ] ldr fp , [ pc , hexvar ] mov r0 , r8 bl hexvar subs r7 , r0 , num beq hexvar ldrh r2 , [ r7 , hexvar ] sub r3 , r2 , num cmp r3 , hexvar ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq r2 , r1 , r4 , ror num andeq r2 , r1 , r8 , lsr r4 andeq r2 , r1 , r0 , lsr num andeq r2 , r1 , r0 , lsr num andeq r2 , r1 , ip , asr num andeq r2 , r1 , r0 , lsr num strdeq r2 , r3 , [ r1 ] , -r4 andeq r2 , r1 , r0 , lsr num andeq r2 , r1 , ip , asr num andeq r2 , r1 , r0 , lsr num andeq r2 , r1 , r0 , lsr num andeq r2 , r1 , r0 , lsr num andeq r2 , r1 , r0 , lsr num mov r2 , num mov r1 , sl mov r0 , num ldr r4 , [ r7 , hexvar ] bl hexvar mov r5 , r0 ldr r0 , [ r7 , hexvar ] bl hexvar mov r2 , r5 mov r3 , r0 mov r1 , r4 mov r0 , num bl hexvar mov r1 , r7 mov r2 , num mov r0 , r8 bl hexvar mov r0 , r8 bl hexvar mov r0 , r8 bl hexvar subs r7 , r0 , num mov r6 , num bne hexvar bl hexvar mov r5 , r6 ldr r6 , [ r0 ] mov r4 , r7 cmp r6 , num mov r7 , r0 bne hexvar mov r0 , r8 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r0 , r5 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ r0 ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r2 , num str r3 , [ sp , hexvar ] beq hexvar mov r2 , num ldrb r3 , [ r1 , num ] mov sb , r1 cmp r3 , r2 movne r1 , hexvar moveq r1 , hexvar bl hexvar mov r5 , num mov r8 , r0 mov r6 , r5 ldr sl , [ pc , hexvar ] mov r0 , r8 bl hexvar subs r7 , r0 , num beq hexvar ldrh r2 , [ r7 , hexvar ] sub r3 , r2 , num cmp r3 , hexvar ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq r3 , r1 , ip , ror num andeq r3 , r1 , r8 , lsr r5 muleq r1 , r8 , r4 muleq r1 , r8 , r4 andeq r3 , r1 , ip , asr num muleq r1 , r8 , r4 andeq r3 , r1 , r4 , ror num muleq r1 , r8 , r4 andeq r3 , r1 , ip , asr num muleq r1 , r8 , r4 muleq r1 , r8 , r4 muleq r1 , r8 , r4 muleq r1 , r8 , r4 mov r2 , num mov r1 , sl mov r0 , num ldr r4 , [ r7 , hexvar ] bl hexvar ldr r2 , [ r7 , hexvar ] mov r5 , r0 mov r1 , num mov r0 , num bl hexvar mov r2 , r5 mov r3 , r0 mov r1 , r4 mov r0 , num bl hexvar mov r1 , r7 mov r2 , num mov r0 , r8 bl hexvar mov r0 , r8 bl hexvar mov r0 , r8 bl hexvar subs r7 , r0 , num mov r6 , num bne hexvar bl hexvar mov r5 , r6 ldr r6 , [ r0 ] mov r4 , r7 cmp r6 , num mov r7 , r0 bne hexvar mov r0 , r8 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r0 , r5 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx cmp dword ptr [ edx ] , num je hexvar cmp byte ptr [ eax + num ] , num sbb eax , eax and eax , hexvar add eax , hexvar sub esp , num push num push eax push edx call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar mov dword ptr [ esp + hexvar ] , num lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar mov dword ptr [ esp + hexvar ] , esi jmp hexvar call hexvar mov esi , eax cmp dword ptr [ eax ] , num jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbx sub rsp , hexvar mov qword ptr [ rsp ] , rdi mov edi , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , num mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar mov r8d , hexvar mov rbx , rax mov ecx , hexvar xor edx , edx xor esi , esi mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar lea rdi , [ rbx + hexvar ] mov r8d , hexvar mov ecx , hexvar xor edx , edx xor esi , esi call hexvar lea rdi , [ rbx + hexvar ] mov ecx , hexvar xor edx , edx mov r8d , hexvar xor esi , esi call hexvar lea rcx , [ rbx + hexvar ] lea rdx , [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , num xor eax , eax mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , rdx cmp qword ptr [ rsp ] , rax ja hexvar mov rax , qword ptr [ rsp + hexvar ] cmp byte ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rax ] test edx , edx jne hexvar mov rbx , qword ptr [ rsp + num ] xor esi , esi mov rdi , rbx call hexvar lea rdi , [ rbx + hexvar ] xor esi , esi call hexvar lea rdi , [ rbx + hexvar ] xor esi , esi call hexvar mov rdi , rbx call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rdi ] test eax , eax je hexvar call hexvar mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] mov eax , dword ptr [ rip + hexvar ] jne hexvar add rsp , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) addiu v0 , zero , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) addiu v0 , zero , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rdi ] , num je hexvar cmp byte ptr [ rsi + num ] , num mov r13 , rsi lea r12 , [ rip + hexvar ] mov ebp , num sbb esi , esi xor edx , edx and esi , hexvar add esi , hexvar call hexvar mov rbx , rax lea rax , [ rsp + hexvar ] mov qword ptr [ rsp ] , rax nop dword ptr [ rax ] mov rdi , rbx call hexvar test rax , rax mov r14 , rax je hexvar movzx edx , word ptr [ rax + hexvar ] cmp dx , hexvar ja hexvar movzx eax , dx movsxd rax , dword ptr [ r12 + rax * num ] add rax , r12 jmp rax nop word ptr [ rax + rax ] mov rdi , qword ptr [ r14 + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi mov rbp , rax call hexvar mov esi , dword ptr [ r14 + hexvar ] mov rcx , rbp mov rdx , rax xor edi , edi xor eax , eax call hexvar mov rsi , r14 mov edx , num mov rdi , rbx call hexvar mov rdi , rbx mov ebp , num call hexvar mov rdi , rbx call hexvar test rax , rax mov r14 , rax jne hexvar call hexvar mov r12 , rax mov eax , dword ptr [ rax ] test eax , eax jne hexvar mov rdi , rbx call hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] mov eax , ebp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ esp + hexvar ] mov ebx , eax push hexvar mov esi , eax call hexvar mov edx , dword ptr [ esi + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov edi , eax mov dword ptr [ esp ] , edx mov dword ptr [ esp + hexvar ] , edx push esi push num push num push eax mov dword ptr [ esp + hexvar ] , ebx call hexvar lea ecx , [ edi + hexvar ] mov dword ptr [ esp + hexvar ] , ecx add esp , hexvar mov edx , dword ptr [ esp + hexvar ] push edx mov dword ptr [ esp + hexvar ] , edx push esi push num push num push ecx mov ebx , dword ptr [ esp + hexvar ] call hexvar lea ecx , [ edi + hexvar ] mov dword ptr [ esp + hexvar ] , ecx add esp , hexvar mov edx , dword ptr [ esp + hexvar ] push edx push esi push num push num push ecx mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar xor ebx , ebx mov esi , num jmp hexvar nop lea esi , [ esi ] cmp eax , num jne hexvar cmp esi , num cmove esi , eax add ebx , num cmp dword ptr [ esp + hexvar ] , ebx je hexvar mov edx , dword ptr [ ebp + ebx * num ] mov ecx , dword ptr [ esp + hexvar ] mov eax , edi call hexvar lea edx , [ eax - num ] cmp edx , num ja hexvar cmp eax , num jne hexvar add ebx , num cmp dword ptr [ esp + hexvar ] , ebx mov esi , num jne hexvar sub esp , num push num push edi mov ebp , dword ptr [ esp + hexvar ] mov ebx , ebp call hexvar pop eax pop edx push num push dword ptr [ esp + hexvar ] call hexvar pop ecx pop ebp push num push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp ] , edi call hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ pc , hexvar ] ldr r2 , [ r0 ] ldr r3 , [ r3 ] sub sp , sp , hexvar cmp r2 , num str r3 , [ sp , hexvar ] beq hexvar mov r2 , num ldrb r3 , [ r1 , num ] mov sb , r1 cmp r3 , r2 movne r1 , hexvar moveq r1 , hexvar bl hexvar mov r5 , num mov r8 , r0 mov r6 , r5 ldr sl , [ pc , hexvar ] ldr fp , [ pc , hexvar ] mov r0 , r8 bl hexvar subs r7 , r0 , num beq hexvar ldrh r2 , [ r7 , hexvar ] sub r3 , r2 , num cmp r3 , hexvar ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq r2 , r1 , r0 , asr num muleq r1 , r4 , pc strdeq r2 , r3 , [ r1 ] , -ip strdeq r2 , r3 , [ r1 ] , -ip andeq r3 , r1 , r8 , lsr num strdeq r2 , r3 , [ r1 ] , -ip andeq r2 , r1 , r0 , asr lr strdeq r2 , r3 , [ r1 ] , -ip andeq r3 , r1 , r8 , lsr num strdeq r2 , r3 , [ r1 ] , -ip strdeq r2 , r3 , [ r1 ] , -ip strdeq r2 , r3 , [ r1 ] , -ip strdeq r2 , r3 , [ r1 ] , -ip mov r2 , num mov r1 , sl mov r0 , num ldr r4 , [ r7 , hexvar ] bl hexvar mov r5 , r0 ldr r0 , [ r7 , hexvar ] bl hexvar mov r2 , r5 mov r3 , r0 mov r1 , r4 mov r0 , num bl hexvar mov r1 , r7 mov r2 , num mov r0 , r8 bl hexvar mov r0 , r8 bl hexvar mov r0 , r8 bl hexvar subs r7 , r0 , num mov r6 , num bne hexvar bl hexvar mov r5 , r6 ldr r6 , [ r0 ] mov r4 , r7 cmp r6 , num mov r7 , r0 bne hexvar mov r0 , r8 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r0 , r5 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push rbx sub rsp , hexvar mov qword ptr [ rsp ] , rdi mov edi , hexvar mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdx mov qword ptr [ rsp + hexvar ] , num mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar mov r8d , hexvar mov rbx , rax mov ecx , hexvar xor edx , edx xor esi , esi mov rdi , rax mov qword ptr [ rsp + num ] , rax call hexvar lea rdi , [ rbx + hexvar ] mov r8d , hexvar mov ecx , hexvar xor edx , edx xor esi , esi call hexvar lea rdi , [ rbx + hexvar ] mov ecx , hexvar xor edx , edx mov r8d , hexvar xor esi , esi call hexvar lea rcx , [ rbx + hexvar ] lea rdx , [ rbx + hexvar ] mov qword ptr [ rip + hexvar ] , num xor eax , eax mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , rdx cmp qword ptr [ rsp ] , rax ja hexvar mov rax , qword ptr [ rsp + hexvar ] cmp byte ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rax ] test edx , edx jne hexvar mov rbx , qword ptr [ rsp + num ] xor esi , esi mov rdi , rbx call hexvar lea rdi , [ rbx + hexvar ] xor esi , esi call hexvar lea rdi , [ rbx + hexvar ] xor esi , esi call hexvar mov rdi , rbx call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ rdi ] test eax , eax je hexvar call hexvar mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] mov eax , dword ptr [ rip + hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov byte ptr [ ebp - num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbx mov edx , hexvar sub rsp , hexvar mov rbx , rsp mov rsi , rbx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar xor edx , edx test eax , eax jne hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , edx jne hexvar add rsp , hexvar pop rbx ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mov r3 , num strb r3 , [ fp , - num ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num xor eax , eax test cl , cl jne hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ edx + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push { r4 , lr } mov r1 , num bl hexvar subs r4 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num popeq { r4 , pc } mov r0 , r4 ldr r1 , [ pc , hexvar ] bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , pc }
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num xor eax , eax test cl , cl jne hexvar pop ebx pop esi pop edi ret
push rbx mov edx , hexvar sub rsp , hexvar mov rbx , rsp mov rsi , rbx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar xor edx , edx test eax , eax jne hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , edx jne hexvar add rsp , hexvar pop rbx ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar ldr r2 , [ pc , hexvar ] mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar sub r3 , fp , hexvar ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar sub r3 , fp , hexvar ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num and r3 , r3 , num and r3 , r3 , hexvar mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , zero jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , zero jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - num ] mov r0 , num bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov esi , eax mov edi , num call hexvar leave ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] push num call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ edx + hexvar ] cmp dword ptr [ edx + hexvar ] , eax jbe hexvar mov edx , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + eax * num ] mov eax , dword ptr [ eax + hexvar ] ret
mov rax , qword ptr [ rdi + hexvar ] cmp dword ptr [ rax + hexvar ] , esi jbe hexvar mov rax , qword ptr [ rax + hexvar ] mov esi , esi mov rax , qword ptr [ rax + rsi * num ] mov rax , qword ptr [ rax + hexvar ] ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) lw v0 , num ( fp ) lw v0 , hexvar ( v0 ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp + hexvar ] , eax jb hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] pop ebp ret
mov edx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ edx + hexvar ] cmp dword ptr [ edx + hexvar ] , eax jbe hexvar mov edx , dword ptr [ edx + hexvar ] mov eax , dword ptr [ edx + eax * num ] mov eax , dword ptr [ eax + hexvar ] ret
mov rax , qword ptr [ rdi + hexvar ] cmp dword ptr [ rax + hexvar ] , esi jbe hexvar mov rax , qword ptr [ rax + hexvar ] mov esi , esi mov rax , qword ptr [ rax + rsi * num ] mov rax , qword ptr [ rax + hexvar ] ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov esi , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , esi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rdi + hexvar ] mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovae ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx mov rax , qword ptr [ rax + rdx * num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov esi , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , esi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rdi + hexvar ] mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovae ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx mov rax , qword ptr [ rax + rdx * num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
mov rax , qword ptr [ rdi + hexvar ] cmp dword ptr [ rax + hexvar ] , esi jbe hexvar mov rax , qword ptr [ rax + hexvar ] mov esi , esi mov rax , qword ptr [ rax + rsi * num ] mov rax , qword ptr [ rax + hexvar ] ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov esi , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov eax , dword ptr [ rdi + hexvar ] sub esi , eax setae cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , esi jmp rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx mov rax , qword ptr [ rax + rdx * num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , zero sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s4 , a2 sw s2 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( s2 ) move a1 , s0 lw gp , hexvar ( sp ) slt v0 , s0 , v0 beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw a0 , num ( s2 ) jalr t9 addiu s0 , s0 , num move s1 , v0 lw v0 , num ( v0 )
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , zero sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s4 , a2 sw s2 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( s2 ) move a1 , s0 lw gp , hexvar ( sp ) slt v0 , s0 , v0 beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw a0 , num ( s2 ) jalr t9 addiu s0 , s0 , num move s1 , v0 lw v0 , num ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , rdx mov r12 , rsi mov r13 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar xor r14d , r14d test eax , eax jle hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ r13 + num ] mov esi , ebp call hexvar cmp qword ptr [ rax + num ] , r12 jne hexvar mov rbx , rax mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + num ] mov rsi , r15 call hexvar test eax , eax je hexvar add ebp , num mov rdi , qword ptr [ r13 + num ] call hexvar cmp ebp , eax jl hexvar jmp hexvar mov r14 , rbx mov rax , r14 add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] jmp hexvar nop add esi , num sub esp , hexvar push dword ptr [ edi + num ] call hexvar add esp , hexvar cmp eax , esi jle hexvar sub esp , num push esi push dword ptr [ edi + num ] call hexvar add esp , hexvar cmp dword ptr [ eax + num ] , ebp mov edx , eax jne hexvar sub esp , num mov eax , dword ptr [ eax ] push dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx push dword ptr [ eax + num ] call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ esp + hexvar ] jne hexvar add esp , hexvar mov eax , edx pop ebx pop esi pop edi pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ esp + hexvar ] , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar add dword ptr [ esp + num ] , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar cmp dword ptr [ esp + num ] , eax jl hexvar mov eax , num add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , rdx mov r12 , rsi mov r13 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar xor r14d , r14d test eax , eax jle hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ r13 + num ] mov esi , ebp call hexvar cmp qword ptr [ rax + num ] , r12 jne hexvar mov rbx , rax mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + num ] mov rsi , r15 call hexvar test eax , eax je hexvar add ebp , num mov rdi , qword ptr [ r13 + num ] call hexvar cmp ebp , eax jl hexvar jmp hexvar mov r14 , rbx mov rax , r14 add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , rdx mov r12 , rsi mov r13 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar xor r14d , r14d test eax , eax jle hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] mov rdi , qword ptr [ r13 + num ] mov esi , ebp call hexvar cmp qword ptr [ rax + num ] , r12 jne hexvar mov rbx , rax mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + num ] mov rsi , r15 call hexvar test eax , eax je hexvar add ebp , num mov rdi , qword ptr [ r13 + num ] call hexvar cmp ebp , eax jl hexvar jmp hexvar mov r14 , rbx mov rax , r14 add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , zero sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s4 , a2 sw s2 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( s2 ) move a1 , s0 lw gp , hexvar ( sp ) slt v0 , s0 , v0 beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw a0 , num ( s2 ) jalr t9 addiu s0 , s0 , num move s1 , v0 lw v0 , num ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi add rbx , num mov eax , hexvar xor ebp , ebp mov r13d , hexvar jmp hexvar mov ebp , dword ptr [ rsp + num ] add ebp , num mov eax , hexvar nop word ptr cs : [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov r12 , qword ptr [ rsp + num ] jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rax ] mov esi , dword ptr [ rsp + num ] call hexvar mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] cmp qword ptr [ rax + num ] , r15 mov eax , hexvar cmove eax , r13d jmp hexvar mov eax , hexvar xor r12d , r12d jmp hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov rdi , qword ptr [ rax + num ] mov rsi , r14 call hexvar test eax , eax mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar mov dword ptr [ rsp + num ] , ebp mov qword ptr [ rsp + hexvar ] , rbx mov rax , qword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rax ] call hexvar mov ecx , dword ptr [ rsp + num ] cmp ecx , eax mov eax , hexvar mov ecx , hexvar cmovl eax , ecx jmp hexvar mov rax , r12 add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , zero sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s4 , a2 sw s2 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( s2 ) move a1 , s0 lw gp , hexvar ( sp ) slt v0 , s0 , v0 beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw a0 , num ( s2 ) jalr t9 addiu s0 , s0 , num move s1 , v0 lw v0 , num ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rcx , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , hexvar jmp hexvar mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] xor rdi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , num ldr ip , [ r4 ] mov r5 , r2 mov r6 , r3 ldr r2 , [ sp , hexvar ] mov r3 , sp str ip , [ sp , num ] bl hexvar cmp r0 , num bne hexvar mov r1 , r5 mov r2 , r6 mov r0 , sp bl hexvar mov r5 , r0 mov r0 , sp bl hexvar ldr r2 , [ sp , num ] ldr r3 , [ r4 ] mov r0 , r5 cmp r2 , r3 bne hexvar add sp , sp , num pop { r4 , r5 , r6 , pc }
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + num ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi lea esi , [ esp + hexvar ] push esi call hexvar mov edi , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov eax , edi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdx mov r12d , ecx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax lea rcx , [ rsp + num ] mov edx , r8d call hexvar test eax , eax jne hexvar lea rbx , [ rsp + num ] mov edx , r12d mov rsi , rbp mov rdi , rbx call hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp mov rbx , qword ptr [ rsp + num ] xor rbx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdx mov r12d , ecx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax lea rcx , [ rsp + num ] mov edx , r8d call hexvar test eax , eax jne hexvar lea rbx , [ rsp + num ] mov edx , r12d mov rsi , rbp mov rdi , rbx call hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp mov rbx , qword ptr [ rsp + num ] xor rbx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax setne r9b movzx eax , r9b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rsi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rdi , rax mov qword ptr [ rbp - hexvar ] , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , r8d mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , ecx mov rdi , rax call hexvar leave ret
push rbp push rbx mov ebp , ecx mov rbx , rdx mov edx , r8d sub rsp , hexvar mov rcx , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar test eax , eax mov edx , hexvar jne hexvar mov edx , ebp mov rsi , rbx mov rdi , rsp call hexvar mov rdi , rsp mov ebx , eax call hexvar mov edx , ebx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] mov eax , edx jne hexvar add rsp , hexvar pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s2 , hexvar ( sp ) move s2 , a2 sw s0 , hexvar ( sp ) addiu s0 , sp , hexvar sw s3 , hexvar ( sp ) move s3 , a3 sw gp , hexvar ( sp ) move a3 , s0 sw ra , hexvar ( sp ) lw v0 , ( s1 ) lw a2 , hexvar ( sp ) sw v0 , hexvar ( sp ) bal hexvar nop bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , s0 move a2 , s3 bal hexvar move a1 , s2 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , - num lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push rbx test edi , edi je hexvar mov ebx , edi test dil , num jne hexvar test dil , num jne hexvar lea rdx , [ rip + hexvar ] mov eax , num test dil , num je hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar test bl , num jne hexvar test bl , hexvar je hexvar lea rdx , [ rip + hexvar ] jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] test bl , num je hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar lea rdx , [ rip + hexvar ] test bl , num jne hexvar mov eax , ebx and eax , num jne hexvar test bl , hexvar je hexvar test eax , eax lea rdx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rdx , rax jmp hexvar lea rdx , [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] jmp hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar jmp hexvar mov eax , ebx and eax , num jne hexvar test bl , num je hexvar test eax , eax lea rdx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar lea rdx , [ rip + hexvar ] test bl , hexvar je hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar pop rbx ret
test edi , edi je hexvar push r13 push r12 mov r13d , edi push rbp push rbx mov r12d , edi mov ebp , edi mov ebx , edi and r12d , num sub rsp , num and ebp , num and ebx , num and r13d , hexvar and edi , num jne hexvar test r12d , r12d je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov edi , num call hexvar test ebp , ebp je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar test ebx , ebx je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov edi , num call hexvar test r13d , r13d je hexvar lea rdx , [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] mov edi , num pop rbx pop rbp pop r12 pop r13 xor eax , eax jmp hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num mov esi , num call hexvar test r12d , r12d je hexvar lea rdx , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] test ebx , ebx jne hexvar test r13d , r13d jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push rbx test edi , edi je hexvar mov ebx , edi test dil , num jne hexvar test dil , num jne hexvar lea rdx , [ rip + hexvar ] mov eax , num test dil , num je hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar test bl , num jne hexvar test bl , hexvar je hexvar lea rdx , [ rip + hexvar ] jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar lea rdx , [ rip + hexvar ] test bl , num je hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar lea rdx , [ rip + hexvar ] test bl , num jne hexvar mov eax , ebx and eax , num jne hexvar test bl , hexvar je hexvar test eax , eax lea rdx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rdx , rax jmp hexvar lea rdx , [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] jmp hexvar lea rdx , [ rip + hexvar ] jmp hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , hexvar call hexvar jmp hexvar mov eax , ebx and eax , num jne hexvar test bl , num je hexvar test eax , eax lea rdx , [ rip + hexvar ] lea rax , [ rip + hexvar ] cmove rdx , rax lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar lea rdx , [ rip + hexvar ] test bl , hexvar je hexvar lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar pop rbx ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push eax push num push num lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , hexvar test eax , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push eax push hexvar call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) andi v0 , a0 , num andi s3 , a0 , num andi s2 , a0 , num andi s1 , a0 , num bnez v0 , hexvar andi s0 , a0 , hexvar beqz s3 , hexvar lui a2 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar addiu a2 , a2 , - hexvar addiu a0 , zero , num jalr t9 addiu a1 , a1 , hexvar beqz s2 , hexvar lw gp , hexvar ( sp ) lui a2 , hexvar addiu a2 , a2 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a0 , zero , num jalr t9 addiu a1 , a1 , hexvar lw gp , hexvar ( sp ) beqz s1 , hexvar lui a2 , hexvar addiu a2 , a2 , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a0 , zero , num jalr t9 addiu a1 , a1 , hexvar beqz s0 , hexvar lw gp , hexvar ( sp ) lui a2 , hexvar addiu a2 , a2 , hexvar lui a1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) addiu a0 , zero , num lw s2 , hexvar ( sp ) addiu a1 , a1 , hexvar lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a0 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , zero , num addiu a0 , a0 , hexvar jalr t9 lw a3 , ( v0 ) beqz s3 , hexvar lw gp , hexvar ( sp ) lui a2 , hexvar lw t9 , - hexvar ( gp )
test edi , edi je hexvar push r13 push r12 mov r13d , edi push rbp push rbx mov r12d , edi mov ebp , edi mov ebx , edi and r12d , num sub rsp , num and ebp , num and ebx , num and r13d , hexvar and edi , num jne hexvar test r12d , r12d je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov edi , num call hexvar test ebp , ebp je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar test ebx , ebx je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov edi , num call hexvar test r13d , r13d je hexvar lea rdx , [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] mov edi , num pop rbx pop rbp pop r12 pop r13 xor eax , eax jmp hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num mov esi , num call hexvar test r12d , r12d je hexvar lea rdx , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] test ebx , ebx jne hexvar test r13d , r13d jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
test edi , edi je hexvar push r13 push r12 mov r13d , edi push rbp push rbx mov r12d , edi mov ebp , edi mov ebx , edi and r12d , num sub rsp , num and ebp , num and ebx , num and r13d , hexvar and edi , num jne hexvar test r12d , r12d je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov edi , num call hexvar test ebp , ebp je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar test ebx , ebx je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov edi , num call hexvar test r13d , r13d je hexvar lea rdx , [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] mov edi , num pop rbx pop rbp pop r12 pop r13 xor eax , eax jmp hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num mov esi , num call hexvar test r12d , r12d je hexvar lea rdx , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] test ebx , ebx jne hexvar test r13d , r13d jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push eax push num push num lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , num test eax , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] and eax , hexvar test eax , eax je hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push eax push hexvar call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
test edi , edi je hexvar push r13 push r12 mov r13d , edi push rbp push rbx mov r12d , edi mov ebp , edi mov ebx , edi and r12d , num sub rsp , num and ebp , num and ebx , num and r13d , hexvar and edi , num jne hexvar test r12d , r12d je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov edi , num call hexvar test ebp , ebp je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax call hexvar test ebx , ebx je hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor eax , eax mov edi , num call hexvar test r13d , r13d je hexvar lea rdx , [ rip + hexvar ] add rsp , num lea rsi , [ rip + hexvar ] mov edi , num pop rbx pop rbp pop r12 pop r13 xor eax , eax jmp hexvar nop dword ptr [ rax + rax ] mov rcx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num mov esi , num call hexvar test r12d , r12d je hexvar lea rdx , [ rip + hexvar ] jmp hexvar nop word ptr [ rax + rax ] test ebx , ebx jne hexvar test r13d , r13d jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , num test eax , eax je hexvar cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar cmp dword ptr [ rbp - num ] , num je hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , rax mov edi , hexvar call hexvar nop leave ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push esi push ebx xor eax , eax call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop edx push dword ptr [ esi + hexvar ] call hexvar pop ecx push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , hexvar mov dword ptr [ esi + hexvar ] , num add esp , num pop ebx pop esi ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push esi push ebx xor eax , eax call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop edx push dword ptr [ esi + hexvar ] call hexvar pop ecx push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , hexvar mov dword ptr [ esi + hexvar ] , num add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
push rbp push r14 push rbx mov rbx , rdi lea r14 , [ rdi + hexvar ] test rdi , rdi mov eax , hexvar mov ebp , hexvar cmove ebp , eax mov ecx , hexvar jmp hexvar mov ecx , ebp nop word ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar xor eax , eax jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ r14 + hexvar ] , xmm0 movups xmmword ptr [ r14 + hexvar ] , xmm0 movups xmmword ptr [ r14 + hexvar ] , xmm0 movups xmmword ptr [ r14 + hexvar ] , xmm0 movups xmmword ptr [ r14 + hexvar ] , xmm0 movups xmmword ptr [ r14 + hexvar ] , xmm0 movups xmmword ptr [ r14 ] , xmm0 mov dword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , num mov ecx , hexvar mov eax , num jmp hexvar pop rbx pop r14 pop rbp ret
push esi push ebx xor eax , eax call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop edx push dword ptr [ esi + hexvar ] call hexvar pop ecx push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar pop eax push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , hexvar mov dword ptr [ esi + hexvar ] , num add esp , num pop ebx pop esi ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov dword ptr [ rbx + hexvar ] , hexvar mov qword ptr [ rbx + hexvar ] , num mov eax , num pop rbx ret
sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ esp + hexvar ] , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax setne al movzx eax , al add esp , hexvar ret
push r14 push rbx push rax xor eax , eax test rdi , rdi je hexvar mov rbx , rsi test rsi , rsi je hexvar mov r14 , rdi cmp qword ptr [ rdi ] , rbx je hexvar mov edi , hexvar mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov esi , hexvar call hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov rbx , qword ptr [ r14 ] xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r14 ret
beqz a0 , hexvar nop beqz a1 , hexvar move v0 , a1 lui gp , hexvar lw v1 , ( a0 )
push r14 push rbx push rax xor eax , eax test rdi , rdi je hexvar mov rbx , rsi test rsi , rsi je hexvar mov r14 , rdi cmp qword ptr [ rdi ] , rbx je hexvar mov edi , hexvar mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov esi , hexvar call hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov rbx , qword ptr [ r14 ] xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi je hexvar cmp dword ptr [ edi ] , esi je hexvar lea ebp , [ ebx - hexvar ] sub esp , num push esi push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push ebp push dword ptr [ edi ] call hexvar mov dword ptr [ edi ] , esi add esp , hexvar xor eax , eax test esi , esi setne al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi test rdi , rdi setne byte ptr [ rsp + hexvar ] test rsi , rsi setne byte ptr [ rsp + hexvar ] mov eax , hexvar mov r15d , hexvar mov r12d , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar xor ebp , ebp cmp qword ptr [ rbx ] , num setne bpl mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar movzx ecx , byte ptr [ rsp + hexvar ] cmp byte ptr [ rsp + hexvar ] , num mov eax , hexvar cmovne eax , r12d test cl , cl cmove eax , r13d jmp hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx ] , rax mov eax , hexvar jmp hexvar mov edi , hexvar mov rsi , r14 call hexvar mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r15d jmp hexvar cmp qword ptr [ rbx ] , r14 mov eax , hexvar cmove eax , r15d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r2 , [ sp ] cmp r2 , r3 beq hexvar ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi je hexvar cmp dword ptr [ edi ] , esi je hexvar lea ebp , [ ebx - hexvar ] sub esp , num push esi push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push ebp push dword ptr [ edi ] call hexvar mov dword ptr [ edi ] , esi add esp , hexvar xor eax , eax test esi , esi setne al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push rbx push rax xor eax , eax test rdi , rdi je hexvar mov rbx , rsi test rsi , rsi je hexvar mov r14 , rdi cmp qword ptr [ rdi ] , rbx je hexvar mov edi , hexvar mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ r14 ] mov esi , hexvar call hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov rbx , qword ptr [ r14 ] xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r14 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar lea ecx , [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num lea edi , [ eax + hexvar ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ esi ] , ebp mov dword ptr [ esi + num ] , ebp mov eax , dword ptr [ esp + hexvar ] or eax , num mov dword ptr [ esi + num ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 lui a1 , hexvar sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s2 , a0 sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar sw ra , hexvar ( sp ) addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 move s3 , a3 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s0 , v0 addiu a2 , zero , hexvar move a1 , zero addiu a0 , v0 , hexvar jalr t9 ori s1 , s1 , num lw gp , hexvar ( sp ) sw s2 , ( s0 )
push rbp push r15 push r14 push r12 push rbx mov r15 , rcx mov r14 , rdx mov ebp , esi mov r12d , edi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax ] , r12d mov dword ptr [ rax + num ] , r12d or ebp , num movsxd rax , ebp mov qword ptr [ rbx + num ] , rax test r15 , r15 je hexvar mov rdi , r15 call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar test r14 , r14 je hexvar mov rdi , r14 call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar test byte ptr [ rbx + num ] , num je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx jmp hexvar mov qword ptr [ rbx + hexvar ] , num test r14 , r14 jne hexvar mov qword ptr [ rbx + hexvar ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx + hexvar ] , num movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar lea ecx , [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num lea edi , [ eax + hexvar ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ esi ] , ebp mov dword ptr [ esi + num ] , ebp mov eax , dword ptr [ esp + hexvar ] or eax , num mov dword ptr [ esi + num ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 lui a1 , hexvar sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s2 , a0 sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar sw ra , hexvar ( sp ) addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 move s3 , a3 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s0 , v0 addiu a2 , zero , hexvar move a1 , zero addiu a0 , v0 , hexvar jalr t9 ori s1 , s1 , num lw gp , hexvar ( sp ) sw s2 , ( s0 )
push rbp push r15 push r14 push r12 push rbx mov r15 , rcx mov r14 , rdx mov ebp , esi mov r12d , edi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax ] , r12d mov dword ptr [ rax + num ] , r12d or ebp , num movsxd rax , ebp mov qword ptr [ rbx + num ] , rax test r15 , r15 je hexvar mov rdi , r15 call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar test r14 , r14 je hexvar mov rdi , r14 call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar test byte ptr [ rbx + num ] , num je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx jmp hexvar mov qword ptr [ rbx + hexvar ] , num test r14 , r14 jne hexvar mov qword ptr [ rbx + hexvar ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx + hexvar ] , num movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] mov ebp , dword ptr [ esp + hexvar ] push hexvar push eax push hexvar call hexvar add esp , hexvar test eax , eax je hexvar lea edi , [ eax + hexvar ] lea ecx , [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov esi , eax xor eax , eax and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ esi ] , ebp mov dword ptr [ esi + num ] , ebp mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] or eax , num test edx , edx mov dword ptr [ esi + num ] , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + hexvar ] , eax je hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + hexvar ] , eax je hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , esi mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] mov ebp , dword ptr [ esp + hexvar ] push hexvar push eax push hexvar call hexvar add esp , hexvar test eax , eax je hexvar lea edi , [ eax + hexvar ] lea ecx , [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov esi , eax xor eax , eax and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ esi ] , ebp mov dword ptr [ esi + num ] , ebp mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] or eax , num test edx , edx mov dword ptr [ esi + num ] , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + hexvar ] , eax je hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + hexvar ] , eax je hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , esi mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar lea ecx , [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num lea edi , [ eax + hexvar ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ esi ] , ebp mov dword ptr [ esi + num ] , ebp mov eax , dword ptr [ esp + hexvar ] or eax , num mov dword ptr [ esi + num ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov r15 , rcx mov r14 , rdx mov ebp , esi mov r12d , edi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax ] , r12d mov dword ptr [ rax + num ] , r12d or ebp , num movsxd rax , ebp mov qword ptr [ rbx + num ] , rax test r15 , r15 je hexvar mov rdi , r15 call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar test r14 , r14 je hexvar mov rdi , r14 call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar test byte ptr [ rbx + num ] , num je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx jmp hexvar mov qword ptr [ rbx + hexvar ] , num test r14 , r14 jne hexvar mov qword ptr [ rbx + hexvar ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov qword ptr [ rbx + hexvar ] , num movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s2 , a2 lw s1 , - hexvar ( gp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s0 move a1 , s4 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s2 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push esi push ebx sub esp , hexvar lea ebx , [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num push ebx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov eax , ebx call hexvar pop eax pop edx push esi push ebx call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s2 , a2 lw s1 , - hexvar ( gp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s0 move a1 , s4 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s2 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar mov r0 , r3 bl hexvar sub r3 , fp , hexvar mov r2 , r3 ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar sub r3 , fp , hexvar ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s2 , a2 lw s1 , - hexvar ( gp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s0 move a1 , s4 move a0 , s3 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s2 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar mov r0 , r3 bl hexvar sub r3 , fp , hexvar mov r2 , r3 ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar sub r3 , fp , hexvar ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , num lea eax , [ ebp - hexvar ] push eax call hexvar add esp , num sub esp , num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp - hexvar ] lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar lw a1 , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar lw a1 , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push rbx mov rbp , rdx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax movabs rax , hexvar mov rbx , rsp mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp ] , rax movabs rax , hexvar mov rdx , rbx mov qword ptr [ rsp + num ] , rax movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , rax movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax call hexvar mov rdi , rbx call hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num mov eax , num add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + num ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , eax mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rdi + hexvar ] , num add rsp , hexvar pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num add rsp , num xor eax , eax pop rbx pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) move s0 , a0 lw s1 , num ( a0 )
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esi + num ] mov eax , dword ptr [ edi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push edi call hexvar add esp , hexvar mov dword ptr [ esi + num ] , num xor eax , eax pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + num ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + num ] call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar xor eax , eax mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rdi + hexvar ] , num add rsp , hexvar pop rbp ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num mov eax , num add rsp , num pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num add rsp , num xor eax , eax pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lbu v0 , hexvar ( s0 ) bnez v0 , hexvar lw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) move a2 , a1 lw t9 , - hexvar ( gp ) move s1 , a0 move a0 , zero bal hexvar lw a1 , hexvar ( v0 ) lui a2 , hexvar lw gp , hexvar ( sp ) move a0 , zero addiu a2 , a2 , - hexvar move a3 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a1 , s1 lw v0 , hexvar ( s0 ) blez v0 , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s1 , hexvar ( sp ) sb v0 , hexvar ( s0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , num lw s1 , hexvar ( sp ) sw v0 , hexvar ( s0 ) addiu v0 , zero , num sb v0 , hexvar ( s0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) move a3 , a1 addiu a2 , zero , num move a1 , a0 move a0 , zero jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lbu v0 , hexvar ( s0 ) bnez v0 , hexvar lw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) move a2 , a1 lw t9 , - hexvar ( gp ) move s1 , a0 move a0 , zero bal hexvar lw a1 , hexvar ( v0 ) lui a2 , hexvar lw gp , hexvar ( sp ) move a0 , zero addiu a2 , a2 , - hexvar move a3 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a1 , s1 lw v0 , hexvar ( s0 ) blez v0 , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s1 , hexvar ( sp ) sb v0 , hexvar ( s0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , num lw s1 , hexvar ( sp ) sw v0 , hexvar ( s0 ) addiu v0 , zero , num sb v0 , hexvar ( s0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lbu v0 , hexvar ( s0 ) bnez v0 , hexvar lw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) move a2 , a1 lw t9 , - hexvar ( gp ) move s1 , a0 move a0 , zero bal hexvar lw a1 , hexvar ( v0 ) lui a2 , hexvar lw gp , hexvar ( sp ) move a0 , zero addiu a2 , a2 , hexvar move a3 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a1 , s1 lw v0 , hexvar ( s0 ) blez v0 , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s1 , hexvar ( sp ) sb v0 , hexvar ( s0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , num lw s1 , hexvar ( sp ) sw v0 , hexvar ( s0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea esi , [ ebx + hexvar ] cmp byte ptr [ esi + hexvar ] , num jne hexvar lea eax , [ ebx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push num call hexvar push eax lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push num call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax jle hexvar mov byte ptr [ esi + hexvar ] , num add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a3 , hexvar ( fp ) addiu a2 , zero , num lw a1 , hexvar ( fp ) move a0 , zero jal hexvar nop nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] b hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp , num ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov edi , dword ptr [ rbp - num ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov esi , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne r9b movzx edi , r9b mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , r8 jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov eax , hexvar mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] movabs rdi , hexvar mov esi , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] jmp hexvar lea rax , [ rip + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov r9 , rax mov r8 , rdi lea rdi , [ rip + hexvar ] mov eax , num call hexvar nop leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rsi + num ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] add rcx , qword ptr [ rbx + hexvar ] cmp rax , rcx jle hexvar mov rdi , qword ptr [ r14 + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ r14 ] mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rax , [ rbx + hexvar ] lea rsi , [ rdi + hexvar ] add rdi , hexvar cmp rcx , rsi je hexvar cmp rdx , rdi je hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rdx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx jmp hexvar add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rsi + num ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] add rcx , qword ptr [ rbx + hexvar ] cmp rax , rcx jle hexvar mov rdi , qword ptr [ r14 + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ r14 ] mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rax , [ rbx + hexvar ] lea rsi , [ rdi + hexvar ] add rdi , hexvar cmp rcx , rsi je hexvar cmp rdx , rdi je hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rdx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx jmp hexvar add rsp , num pop rbx pop r14 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ sp ] str r3 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rsi + num ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] add rcx , qword ptr [ rbx + hexvar ] cmp rax , rcx jle hexvar mov rdi , qword ptr [ r14 + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ r14 ] mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rax , [ rbx + hexvar ] lea rsi , [ rdi + hexvar ] add rdi , hexvar cmp rcx , rsi je hexvar cmp rdx , rdi je hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rdx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx jmp hexvar add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rsi + num ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] add rcx , qword ptr [ rbx + hexvar ] cmp rax , rcx jle hexvar mov rdi , qword ptr [ r14 + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ r14 ] mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rax , [ rbx + hexvar ] lea rsi , [ rdi + hexvar ] add rdi , hexvar cmp rcx , rsi je hexvar cmp rdx , rdi je hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rdx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx jmp hexvar add rsp , num pop rbx pop r14 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edi + num ] test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] add eax , dword ptr [ esi + hexvar ] cmp edx , eax jle hexvar sub esp , num push esi push dword ptr [ edi + num ] call hexvar mov edx , dword ptr [ esi + hexvar ] add esp , hexvar mov eax , dword ptr [ edi ] test edx , edx je hexvar mov ecx , dword ptr [ esi + hexvar ] test ecx , ecx je hexvar lea edi , [ eax + hexvar ] lea ebp , [ eax + hexvar ] cmp edx , edi je hexvar cmp ecx , ebp je hexvar mov dword ptr [ edx + hexvar ] , ecx mov ecx , dword ptr [ esi + hexvar ] mov dword ptr [ ecx + hexvar ] , edx mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esi + hexvar ] , num test edx , edx je hexvar sub esp , num push esi push eax call edx add esp , hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax lea eax , [ esi + hexvar ] push hexvar push - num push eax call hexvar add esp , hexvar test eax , eax jle hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , num ( a1 )
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rsi + num ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] add rcx , qword ptr [ rbx + hexvar ] cmp rax , rcx jle hexvar mov rdi , qword ptr [ r14 + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ r14 ] mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rax , [ rbx + hexvar ] lea rsi , [ rdi + hexvar ] add rdi , hexvar cmp rcx , rsi je hexvar cmp rdx , rdi je hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rdx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx jmp hexvar add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rsi + num ] test rax , rax je hexvar mov rcx , qword ptr [ rbx + hexvar ] add rcx , qword ptr [ rbx + hexvar ] cmp rax , rcx jle hexvar mov rdi , qword ptr [ r14 + hexvar ] mov rsi , rbx call hexvar mov rdi , qword ptr [ r14 ] mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar lea rax , [ rbx + hexvar ] lea rsi , [ rdi + hexvar ] add rdi , hexvar cmp rcx , rsi je hexvar cmp rdx , rdi je hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rdx , qword ptr [ rax ] mov qword ptr [ rdx + hexvar ] , rcx jmp hexvar add rsp , num pop rbx pop r14 ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edi + num ] test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] add eax , dword ptr [ esi + hexvar ] cmp edx , eax jle hexvar sub esp , num push esi push dword ptr [ edi + num ] call hexvar mov eax , dword ptr [ edi ] lea edx , [ esi + hexvar ] lea ecx , [ esi + hexvar ] call hexvar mov edx , dword ptr [ edi ] add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar sub esp , num push esi push edx call eax add esp , hexvar mov dword ptr [ esp + hexvar ] , esi pop ebx pop esi pop edi jmp hexvar nop lea esi , [ esi ] pop ebx pop esi pop edi ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] movsx eax , al movzx eax , al cdqe lea rdx , [ rax + rax ] lea rax , [ rip + hexvar ] movzx eax , word ptr [ rdx + rax ] movzx eax , ax and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - num ] , rax add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebx mov ecx , dword ptr [ esp + num ] call hexvar add eax , hexvar movzx ebx , byte ptr [ ecx ] lea eax , [ eax - hexvar ] test byte ptr [ eax + ebx * num ] , hexvar mov edx , ebx je hexvar cmp byte ptr [ ecx + num ] , hexvar je hexvar test dl , dl mov eax , ecx jne hexvar jmp hexvar nop cmp dl , hexvar je hexvar movzx edx , byte ptr [ ecx ] test dl , dl je hexvar add ecx , num cmp dl , hexvar jne hexvar movzx edx , byte ptr [ ecx ] mov eax , ecx test dl , dl jne hexvar pop ebx ret
lui gp , hexvar lb v1 , ( a0 ) addiu gp , gp , - hexvar andi v0 , v1 , hexvar sll a1 , v0 , num lw v0 , - hexvar ( gp ) addu v0 , v0 , a1 lhu v0 , ( v0 ) andi v0 , v0 , hexvar beqz v0 , hexvar addiu v0 , zero , hexvar lb a1 , num ( a0 ) beq a1 , v0 , hexvar nop beqz v1 , hexvar nop addiu a2 , zero , hexvar b hexvar move v0 , a0 lb v1 , ( a0 ) beqz v1 , hexvar movz v0 , a0 , a1 xori a1 , v1 , hexvar bne v1 , a2 , hexvar addiu a0 , a0 , num lb v1 , ( a0 ) bnez v1 , hexvar move v0 , a0 jr ra nop lb v1 , num ( a0 ) bnez v1 , hexvar addiu a0 , a0 , num jr ra move v0 , a0
lui gp , hexvar lb v1 , ( a0 ) addiu gp , gp , hexvar andi v0 , v1 , hexvar sll a1 , v0 , num lw v0 , - hexvar ( gp ) addu v0 , v0 , a1 lhu v0 , ( v0 ) andi v0 , v0 , hexvar beqz v0 , hexvar addiu v0 , zero , hexvar lb a1 , num ( a0 ) beq a1 , v0 , hexvar nop beqz v1 , hexvar nop addiu a2 , zero , hexvar b hexvar move v0 , a0 lb v1 , ( a0 ) beqz v1 , hexvar movz v0 , a0 , a1 xori a1 , v1 , hexvar bne v1 , a2 , hexvar addiu a0 , a0 , num lb v1 , ( a0 ) bnez v1 , hexvar move v0 , a0 jr ra nop lb v1 , num ( a0 ) bnez v1 , hexvar addiu a0 , a0 , num jr ra move v0 , a0
movzx edx , byte ptr [ rdi ] lea rax , [ rip + hexvar ] test byte ptr [ rax + rdx * num ] , hexvar je hexvar cmp byte ptr [ rdi + num ] , hexvar je hexvar movzx edx , byte ptr [ rdi ] test dl , dl je hexvar lea rcx , [ rdi + num ] mov rax , rdi jmp hexvar add rdi , num jmp hexvar mov rax , rcx add rcx , num movzx edx , byte ptr [ rcx - num ] test dl , dl je hexvar cmp dl , hexvar je hexvar cmp dl , hexvar jne hexvar jmp hexvar ret mov rax , rdi ret
push ebx mov ecx , dword ptr [ esp + num ] call hexvar add eax , hexvar movzx ebx , byte ptr [ ecx ] lea eax , [ eax - hexvar ] test byte ptr [ eax + ebx * num ] , hexvar mov edx , ebx je hexvar cmp byte ptr [ ecx + num ] , hexvar je hexvar test dl , dl mov eax , ecx jne hexvar jmp hexvar nop cmp dl , hexvar je hexvar movzx edx , byte ptr [ ecx ] test dl , dl je hexvar add ecx , num cmp dl , hexvar jne hexvar movzx edx , byte ptr [ ecx ] mov eax , ecx test dl , dl jne hexvar pop ebx ret
movzx ecx , byte ptr [ rdi ] lea rax , [ rip + hexvar ] test byte ptr [ rax + rcx * num ] , hexvar mov rdx , rcx je hexvar cmp byte ptr [ rdi + num ] , hexvar je hexvar test dl , dl mov rax , rdi jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp dl , hexvar je hexvar movzx edx , byte ptr [ rdi ] test dl , dl je hexvar add rdi , num cmp dl , hexvar jne hexvar movzx edx , byte ptr [ rdi ] mov rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax ] movzx edx , byte ptr [ rdi + num ] add rdi , num mov rax , rdi test dl , dl jne hexvar ret nop dword ptr [ rax + rax ] nop word ptr cs : [ rax + rax ]
lui gp , hexvar addiu gp , gp , - hexvar lbu v0 , ( a0 ) sll v1 , v0 , num lw v0 , - hexvar ( gp ) addu v0 , v0 , v1 lhu v0 , ( v0 ) andi v0 , v0 , hexvar beqz v0 , hexvar addiu v0 , zero , hexvar lb v1 , num ( a0 ) beq v1 , v0 , hexvar nop lb v1 , ( a0 ) beqz v1 , hexvar addiu a1 , a0 , num move v0 , a0 addiu a0 , zero , hexvar b hexvar addiu a2 , zero , hexvar b hexvar addiu a0 , a0 , num move v0 , a1 addiu a1 , a1 , num lb v1 , - num ( a1 ) beqz v1 , hexvar nop beq v1 , a0 , hexvar nop bne v1 , a2 , hexvar nop b hexvar move v0 , a1 move v0 , a0 jr ra nop
ldrb r3 , [ r0 ] mov r2 , r0 ldr r0 , [ pc , hexvar ] lsl r1 , r3 , num ldrh r1 , [ r0 , r1 ] tst r1 , hexvar beq hexvar ldrb r1 , [ r2 , num ] cmp r1 , hexvar ldrbeq r3 , [ r2 , num ] addeq r2 , r2 , num cmp r3 , num mov r0 , r2 bxeq lr add r2 , r2 , num cmp r3 , hexvar cmpne r3 , hexvar moveq r0 , r2 ldrb r3 , [ r2 ] , num cmp r3 , num bne hexvar bx lr muleq sp , r0 , r2
push ebx mov ecx , dword ptr [ esp + num ] call hexvar add eax , hexvar movzx ebx , byte ptr [ ecx ] lea eax , [ eax - hexvar ] test byte ptr [ eax + ebx * num ] , hexvar mov edx , ebx je hexvar cmp byte ptr [ ecx + num ] , hexvar je hexvar test dl , dl mov eax , ecx jne hexvar jmp hexvar nop cmp dl , hexvar je hexvar movzx edx , byte ptr [ ecx ] test dl , dl je hexvar add ecx , num cmp dl , hexvar jne hexvar movzx edx , byte ptr [ ecx ] mov eax , ecx test dl , dl jne hexvar pop ebx ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s3 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s3 , - hexvar ( s0 ) beqz s3 , hexvar lw v0 , - hexvar ( gp ) lui s1 , hexvar lw s2 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu v1 , zero , num addiu a2 , zero , num lw v0 , ( v0 ) addiu a1 , a1 , - hexvar move a0 , zero sw v1 , ( s2 ) jalr t9 sw v0 , - hexvar ( s1 ) addiu a0 , zero , num lw gp , hexvar ( sp ) move a1 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a2 , ( s3 ) lw v0 , - hexvar ( s0 ) lw s0 , hexvar ( v0 ) beqz s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a3 , zero lw a2 , ( s2 ) move a1 , s0 bal hexvar lw a0 , - hexvar ( s1 ) lw s0 , hexvar ( s0 ) bnez s0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar move a0 , zero jalr t9 lw s0 , ( v0 ) addiu a1 , zero , num lw gp , hexvar ( sp ) move a2 , v0 move a0 , s0 lw v0 , - hexvar ( gp )
push edi push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] lea eax , [ ebx - hexvar ] sub esp , num lea edi , [ ebx + hexvar ] mov edx , dword ptr [ edx ] push num push eax push num mov dword ptr [ edi ] , num mov dword ptr [ ebx + hexvar ] , edx call hexvar add esp , hexvar push esi push eax push num call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar mov esi , dword ptr [ eax + hexvar ] test esi , esi je hexvar lea esi , [ esi ] sub esp , num push dword ptr [ edi ] push esi push dword ptr [ ebx + hexvar ] call hexvar mov esi , dword ptr [ esi + hexvar ] add esp , hexvar test esi , esi jne hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push esi push edx push eax call hexvar add esp , hexvar call hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebx + hexvar ] , eax lea eax , [ ebx + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar sub esp , num push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
mov rax , qword ptr [ rip + hexvar ] push rbx test rax , rax je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov dword ptr [ rip + hexvar ] , num mov qword ptr [ rip + hexvar ] , rdx mov edx , num call hexvar mov rdx , rbx mov rsi , rax mov edi , num xor eax , eax call hexvar mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov edx , dword ptr [ rip + hexvar ] mov rdi , qword ptr [ rip + hexvar ] xor ecx , ecx mov rsi , rbx call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar pop rbx ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r5 , [ pc , hexvar ] ldr r4 , [ r5 , num ] cmp r4 , num beq hexvar mov r7 , num ldr r3 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num str r3 , [ r5 ] str r7 , [ r6 ] bl hexvar ldr r2 , [ r4 ] mov r1 , r0 mov r0 , r7 bl hexvar ldr r3 , [ r5 , num ] ldr r4 , [ r3 , hexvar ] cmp r4 , num popeq { r4 , r5 , r6 , r7 , r8 , pc } smlaldvc r3 , r8 , lr , r3 andeq r0 , r0 , r0
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rax ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s3 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s3 , - hexvar ( s0 ) beqz s3 , hexvar lw v0 , - hexvar ( gp ) lui s1 , hexvar lw s2 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu v1 , zero , num addiu a2 , zero , num lw v0 , ( v0 ) addiu a1 , a1 , hexvar move a0 , zero sw v1 , ( s2 ) jalr t9 sw v0 , - hexvar ( s1 ) addiu a0 , zero , num lw gp , hexvar ( sp ) move a1 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a2 , ( s3 ) lw v0 , - hexvar ( s0 ) lw s0 , hexvar ( v0 ) beqz s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a3 , zero lw a2 , ( s2 ) move a1 , s0 bal hexvar lw a0 , - hexvar ( s1 ) lw s0 , hexvar ( s0 ) bnez s0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , hexvar move a0 , zero jalr t9 lw s0 , ( v0 ) addiu a1 , zero , num lw gp , hexvar ( sp ) move a2 , v0 move a0 , s0 lw v0 , - hexvar ( gp )
push edi push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] lea eax , [ ebx - hexvar ] sub esp , num lea edi , [ ebx + hexvar ] mov edx , dword ptr [ edx ] push num push eax push num mov dword ptr [ edi ] , num mov dword ptr [ ebx + hexvar ] , edx call hexvar add esp , hexvar push esi push eax push num call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar mov esi , dword ptr [ eax + hexvar ] test esi , esi je hexvar lea esi , [ esi ] sub esp , num push dword ptr [ edi ] push esi push dword ptr [ ebx + hexvar ] call hexvar mov esi , dword ptr [ esi + hexvar ] add esp , hexvar test esi , esi jne hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar cmp qword ptr [ hexvar ] , num jne hexvar mov rdi , qword ptr [ hexvar ] movabs rax , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar jmp hexvar mov rax , qword ptr [ hexvar ] mov qword ptr [ hexvar ] , rax mov dword ptr [ hexvar ] , num movabs rdi , hexvar call hexvar mov rdi , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar mov rsi , qword ptr [ hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - num ] , rsi mov dword ptr [ rbp - hexvar ] , eax cmp qword ptr [ rbp - num ] , num je hexvar xor eax , eax mov esi , eax mov rdi , qword ptr [ rbp - num ] call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , esp lea edi , [ ebp - hexvar ] mov dword ptr [ esi + num ] , edi mov dword ptr [ esi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push num call hexvar add esp , hexvar cmp eax , num sbb eax , eax and eax , hexvar add eax , num mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , esp lea edi , [ ebp - hexvar ] mov dword ptr [ esi + num ] , edi mov dword ptr [ esi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push num call hexvar add esp , hexvar cmp eax , num sbb eax , eax and eax , hexvar add eax , num mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , num mov r6 , r0 mov r5 , r1 mov r8 , r2 mov r7 , r3 ldr r4 , [ r0 , hexvar ] ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] ldrb r1 , [ r3 , num ] ldr r0 , [ r4 , hexvar ] bl hexvar ldrb r3 , [ r4 , hexvar ] tst r3 , hexvar ldreq r3 , [ r4 , hexvar ] subeq r0 , r0 , r3 ldr r3 , [ r4 , hexvar ] add r0 , r3 , r0 , lsl num cmp r3 , r0 bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , num str r7 , [ sp ] str r4 , [ sp , num ] mov r2 , r5 mov r1 , r6 bl hexvar mov r0 , num bl hexvar mov r0 , r4 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r0 mov r5 , r1 mov r8 , r2 mov r7 , r3 ldr r4 , [ r0 , hexvar ] ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] ldrb r1 , [ r3 , num ] ldr r0 , [ r4 , hexvar ] bl hexvar ldrb r3 , [ r4 , hexvar ] tst r3 , hexvar ldreq r3 , [ r4 , hexvar ] subeq r0 , r0 , r3 ldr r3 , [ r4 , hexvar ] add r0 , r3 , r0 , lsl num cmp r3 , r0 bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r7 mov r2 , r5 mov r1 , r6 bl hexvar mov r0 , num bl hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push r14 push r13 mov r13 , rdx push r12 push rbp mov rbp , rsi push rbx mov rax , qword ptr [ rdi + num ] mov r12 , rdi mov rsi , qword ptr [ rdi + hexvar ] xor edx , edx mov r14 , rcx mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] movzx edi , byte ptr [ rax + num ] mov rax , qword ptr [ rsi + hexvar ] div rdi test byte ptr [ rsi + hexvar ] , hexvar jne hexvar mov edx , dword ptr [ rsi + hexvar ] sub rax , rdx mov rsi , qword ptr [ rsi + hexvar ] lea rdx , [ rsi + rax * num ] cmp rsi , rdx jne hexvar jmp hexvar nop dword ptr [ rax ] add rsi , num cmp rdx , rsi je hexvar mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbx + hexvar ] sub eax , num cmp al , num ja hexvar cmp qword ptr [ rbx + hexvar ] , rbp jne hexvar cmp qword ptr [ rbx + hexvar ] , r14 jne hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar test r13 , r13 je hexvar mov qword ptr [ rdx + hexvar ] , r13 mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num call hexvar mov rcx , r14 mov rdi , rax mov rdx , rbp xor eax , eax mov rsi , r12 call hexvar mov edi , num call hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 move s5 , a2 lw s3 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s0 , hexvar ( a0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ edi + num ] mov esi , dword ptr [ edi + hexvar ] mov dword ptr [ esp + num ] , edx xor edx , edx mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] movzx eax , byte ptr [ eax + num ] push edx push eax push dword ptr [ esi + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test byte ptr [ esi + hexvar ] , hexvar jne hexvar sub eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] lea eax , [ edx + eax * num ] cmp edx , eax jne hexvar jmp hexvar lea esi , [ esi ] add edx , num cmp eax , edx je hexvar mov esi , dword ptr [ edx ] test esi , esi je hexvar movzx ecx , byte ptr [ esi + hexvar ] sub ecx , num cmp cl , num ja hexvar cmp dword ptr [ esi + hexvar ] , ebp jne hexvar mov ecx , dword ptr [ esp ] xor ecx , dword ptr [ esi + hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov ecx , dword ptr [ esp + num ] xor ecx , dword ptr [ esi + hexvar ] or ecx , dword ptr [ esp + hexvar ] jne hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx + num ] , eax mov eax , num jmp hexvar lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , num push num push eax lea eax , [ ebx - hexvar ] push eax call hexvar pop edx push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ebp push edi push eax call hexvar add esp , hexvar push num call hexvar add esp , hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , num mov r6 , r0 mov r5 , r1 mov r8 , r2 mov r7 , r3 ldr r4 , [ r0 , hexvar ] ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] ldrb r1 , [ r3 , num ] ldr r0 , [ r4 , hexvar ] bl hexvar ldrb r3 , [ r4 , hexvar ] tst r3 , hexvar ldreq r3 , [ r4 , hexvar ] subeq r0 , r0 , r3 ldr r3 , [ r4 , hexvar ] add r0 , r3 , r0 , lsl num cmp r3 , r0 bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , num str r7 , [ sp ] str r4 , [ sp , num ] mov r2 , r5 mov r1 , r6 bl hexvar mov r0 , num bl hexvar mov r0 , r4 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 move s5 , a2 lw s3 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s0 , hexvar ( a0 )
push r14 push r13 mov r13 , rdx push r12 push rbp mov rbp , rsi push rbx mov rax , qword ptr [ rdi + num ] mov r12 , rdi mov rsi , qword ptr [ rdi + hexvar ] xor edx , edx mov r14 , rcx mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] movzx edi , byte ptr [ rax + num ] mov rax , qword ptr [ rsi + hexvar ] div rdi test byte ptr [ rsi + hexvar ] , hexvar jne hexvar mov edx , dword ptr [ rsi + hexvar ] sub rax , rdx mov rsi , qword ptr [ rsi + hexvar ] lea rdx , [ rsi + rax * num ] cmp rsi , rdx jne hexvar jmp hexvar nop dword ptr [ rax ] add rsi , num cmp rdx , rsi je hexvar mov rbx , qword ptr [ rsi ] test rbx , rbx je hexvar movzx eax , byte ptr [ rbx + hexvar ] sub eax , num cmp al , num ja hexvar cmp qword ptr [ rbx + hexvar ] , rbp jne hexvar cmp qword ptr [ rbx + hexvar ] , r14 jne hexvar mov rdx , qword ptr [ rbx + hexvar ] test rdx , rdx je hexvar test r13 , r13 je hexvar mov qword ptr [ rdx + hexvar ] , r13 mov eax , num jmp hexvar nop dword ptr [ rax ] lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num call hexvar mov rcx , r14 mov rdi , rax mov rdx , rbp xor eax , eax mov rsi , r12 call hexvar mov edi , num call hexvar xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , num mov r6 , r0 mov r5 , r1 mov r8 , r2 mov r7 , r3 ldr r4 , [ r0 , hexvar ] ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] ldrb r1 , [ r3 , num ] ldr r0 , [ r4 , hexvar ] bl hexvar ldrb r3 , [ r4 , hexvar ] tst r3 , hexvar ldreq r3 , [ r4 , hexvar ] subeq r0 , r0 , r3 ldr r3 , [ r4 , hexvar ] add r0 , r3 , r0 , lsl num cmp r3 , r0 bne hexvar mov r2 , num ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , num str r7 , [ sp ] str r4 , [ sp , num ] mov r2 , r5 mov r1 , r6 bl hexvar mov r0 , num bl hexvar mov r0 , r4 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ esp + hexvar ] , hexvar ja hexvar lea eax , [ esp + hexvar ] test edi , edi cmove edi , eax call hexvar mov dword ptr [ eax ] , num movzx edx , byte ptr [ esi ] mov dword ptr [ esp + hexvar ] , eax mov byte ptr [ esp ] , dl call hexvar movzx edx , byte ptr [ esp ] mov ebp , dword ptr [ eax ] mov eax , esi jmp hexvar lea esi , [ esi ] add eax , num movzx edx , byte ptr [ eax ] movzx ecx , dl test byte ptr [ ebp + ecx * num + num ] , hexvar jne hexvar cmp dl , hexvar je hexvar push num push dword ptr [ esp + hexvar ] push edi push esi call hexvar mov ebp , dword ptr [ edi ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx add esp , hexvar cmp ebp , esi je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar cmp eax , hexvar mov esi , num jne hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar movzx edx , byte ptr [ ebp ] test dl , dl jne hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp ] mov edx , dword ptr [ esp + num ] mov dword ptr [ edi ] , eax mov dword ptr [ edi + num ] , edx jmp hexvar lea esi , [ esi ] mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx jne hexvar mov esi , num mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edx , hexvar ja hexvar lea rax , [ rsp + hexvar ] mov r12 , rdi mov rbp , rsi test rsi , rsi mov r14 , rcx mov r15d , edx mov r13 , r8 cmove rbp , rax movzx ebx , byte ptr [ rdi ] call hexvar mov rcx , qword ptr [ rax ] mov rax , r12 jmp hexvar nop word ptr [ rax + rax ] add rax , num movzx ebx , byte ptr [ rax ] movzx edx , bl test byte ptr [ rcx + rdx * num + num ] , hexvar jne hexvar cmp bl , hexvar je hexvar call hexvar xor ecx , ecx mov dword ptr [ rax ] , num mov edx , r15d mov rsi , rbp mov rdi , r12 mov qword ptr [ rsp + num ] , rax call hexvar mov rcx , qword ptr [ rbp ] mov rbx , rax mov r8 , qword ptr [ rsp + num ] cmp rcx , r12 je hexvar mov eax , dword ptr [ r8 ] test eax , eax je hexvar cmp eax , hexvar mov r12d , num jne hexvar test r13 , r13 je hexvar movzx r15d , byte ptr [ rcx ] test r15b , r15b jne hexvar mov qword ptr [ r14 ] , rbx jmp hexvar nop dword ptr [ rax ] test r13 , r13 mov qword ptr [ rsp + num ] , rcx jne hexvar nop word ptr [ rax + rax ] mov r12d , num mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] mov eax , r12d jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edx , hexvar ja hexvar lea rax , [ rsp + hexvar ] mov r15 , rsi test rsi , rsi mov rbp , rdi mov dword ptr [ rsp ] , edx mov r14 , rcx mov r13 , r8 cmove r15 , rax call hexvar mov dword ptr [ rax ] , num mov r12 , rax movzx ebx , byte ptr [ rbp ] call hexvar mov edx , dword ptr [ rsp ] mov rsi , qword ptr [ rax ] mov rax , rbp jmp hexvar nop dword ptr [ rax ] add rax , num movzx ebx , byte ptr [ rax ] movzx ecx , bl test byte ptr [ rsi + rcx * num + num ] , hexvar jne hexvar cmp bl , hexvar jne hexvar mov eax , num mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ esp + hexvar ] , hexvar ja hexvar lea eax , [ esp + hexvar ] test edi , edi cmove edi , eax call hexvar mov dword ptr [ eax ] , num movzx edx , byte ptr [ esi ] mov dword ptr [ esp + hexvar ] , eax mov byte ptr [ esp ] , dl call hexvar movzx edx , byte ptr [ esp ] mov ebp , dword ptr [ eax ] mov eax , esi jmp hexvar lea esi , [ esi ] add eax , num movzx edx , byte ptr [ eax ] movzx ecx , dl test byte ptr [ ebp + ecx * num + num ] , hexvar jne hexvar cmp dl , hexvar je hexvar push num push dword ptr [ esp + hexvar ] push edi push esi call hexvar mov ebp , dword ptr [ edi ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx add esp , hexvar cmp ebp , esi je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar cmp eax , hexvar mov esi , num jne hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar movzx edx , byte ptr [ ebp ] test dl , dl jne hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp ] mov edx , dword ptr [ esp + num ] mov dword ptr [ edi ] , eax mov dword ptr [ edi + num ] , edx jmp hexvar lea esi , [ esi ] mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx jne hexvar mov esi , num mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sltiu v0 , a2 , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw s3 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) lw s3 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz v0 , hexvar move s6 , a2 move s5 , a0 move s0 , a1 beqz a1 , hexvar move s4 , a3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s2 , v0 lw t9 , - hexvar ( gp ) jalr t9 sw zero , ( v0 ) move v1 , s5 lw gp , hexvar ( sp ) lbu a0 , ( s5 ) b hexvar lw a1 , ( v0 ) lbu a0 , ( v1 ) sll v0 , a0 , num addu v0 , a1 , v0 lhu v0 , ( v0 ) andi v0 , v0 , hexvar bnez v0 , hexvar addiu v1 , v1 , num addiu v0 , zero , hexvar beq a0 , v0 , hexvar lw t9 , - hexvar ( gp ) move a3 , zero move a2 , s6 move a1 , s0 jalr t9 move a0 , s5 lw s7 , ( s0 ) move fp , v0 lw gp , hexvar ( sp ) beq s7 , s5 , hexvar move s6 , v1 lw v0 , ( s2 ) beqz v0 , hexvar addiu v1 , zero , hexvar bne v0 , v1 , hexvar nop bnez s3 , hexvar addiu s2 , zero , num sw fp , ( s4 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edx , hexvar ja hexvar lea rax , [ rsp + hexvar ] mov rbp , rdi mov r15 , rsi test rsi , rsi mov r14d , edx mov r13 , rcx mov r12 , r8 cmove r15 , rax movzx ebx , byte ptr [ rdi ] call hexvar mov rdx , qword ptr [ rax ] mov rax , rbp jmp hexvar nop word ptr [ rax + rax ] add rax , num movzx ebx , byte ptr [ rax ] movzx ecx , bl test byte ptr [ rdx + rcx * num + num ] , hexvar jne hexvar cmp bl , hexvar jne hexvar mov eax , num mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r5 , [ pc , hexvar ] mov sb , r2 cmp r2 , hexvar ldr r2 , [ r5 ] sub sp , sp , hexvar str r2 , [ sp , hexvar ] ldr r7 , [ sp , hexvar ] bhi hexvar cmp r1 , num mov r4 , r1 mov r6 , r0 mov sl , r3 addeq r4 , sp , hexvar bl hexvar mov r3 , num str r3 , [ r0 ] mov fp , r0 bl hexvar ldrb r3 , [ r6 ] ldr r0 , [ r0 ] mov r1 , r6 b hexvar ldrb r3 , [ r1 , num ] ! lsl r2 , r3 , num ldrh r8 , [ r0 , r2 ] ands r8 , r8 , hexvar bne hexvar cmp r3 , hexvar beq hexvar mov r2 , sb mov r3 , r8 mov r1 , r4 mov r0 , r6 bl hexvar ldr sb , [ r4 ] stm sp , { r0 , r1 } cmp sb , r6 beq hexvar ldr r8 , [ fp ] cmp r8 , num beq hexvar cmp r8 , hexvar bne hexvar mov r8 , num cmp r7 , num beq hexvar ldrb r6 , [ sb ] cmp r6 , num bne hexvar ldm sp , { r3 , r4 } stm sl , { r3 , r4 } b hexvar cmp r7 , num bne hexvar mov r8 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] mov r0 , r8 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } strdeq r3 , r4 , [ r0 ] , -r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sltiu v0 , a2 , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw s3 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) lw s3 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz v0 , hexvar move s6 , a2 move s5 , a0 move s0 , a1 beqz a1 , hexvar move s4 , a3 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s2 , v0 lw t9 , - hexvar ( gp ) jalr t9 sw zero , ( v0 ) move v1 , s5 lw gp , hexvar ( sp ) lbu a0 , ( s5 ) b hexvar lw a1 , ( v0 ) lbu a0 , ( v1 ) sll v0 , a0 , num addu v0 , a1 , v0 lhu v0 , ( v0 ) andi v0 , v0 , hexvar bnez v0 , hexvar addiu v1 , v1 , num addiu v0 , zero , hexvar beq a0 , v0 , hexvar lw t9 , - hexvar ( gp ) move a3 , zero move a2 , s6 move a1 , s0 jalr t9 move a0 , s5 lw s7 , ( s0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp edx , hexvar ja hexvar lea rax , [ rsp + hexvar ] mov r12 , rdi mov rbp , rsi test rsi , rsi mov r14 , rcx mov r15d , edx mov r13 , r8 cmove rbp , rax movzx ebx , byte ptr [ rdi ] call hexvar mov rcx , qword ptr [ rax ] mov rax , r12 jmp hexvar nop word ptr [ rax + rax ] add rax , num movzx ebx , byte ptr [ rax ] movzx edx , bl test byte ptr [ rcx + rdx * num + num ] , hexvar jne hexvar cmp bl , hexvar je hexvar call hexvar xor ecx , ecx mov dword ptr [ rax ] , num mov edx , r15d mov rsi , rbp mov rdi , r12 mov qword ptr [ rsp + num ] , rax call hexvar mov rcx , qword ptr [ rbp ] mov rbx , rax mov r8 , qword ptr [ rsp + num ] cmp rcx , r12 je hexvar mov eax , dword ptr [ r8 ] test eax , eax je hexvar cmp eax , hexvar mov r12d , num jne hexvar test r13 , r13 je hexvar movzx r15d , byte ptr [ rcx ] test r15b , r15b jne hexvar mov qword ptr [ r14 ] , rbx jmp hexvar nop dword ptr [ rax ] test r13 , r13 mov qword ptr [ rsp + num ] , rcx jne hexvar nop word ptr [ rax + rax ] mov r12d , num mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] mov eax , r12d jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r5 , [ pc , hexvar ] mov sb , r2 cmp r2 , hexvar ldr r2 , [ r5 ] sub sp , sp , hexvar str r2 , [ sp , hexvar ] ldr r7 , [ sp , hexvar ] bhi hexvar cmp r1 , num mov r6 , r0 mov r4 , r1 mov sl , r3 addeq r4 , sp , hexvar bl hexvar ldrb r3 , [ r6 ] ldr r0 , [ r0 ] mov r1 , r6 b hexvar ldrb r3 , [ r1 , num ] ! lsl r2 , r3 , num ldrh r8 , [ r0 , r2 ] ands r8 , r8 , hexvar bne hexvar cmp r3 , hexvar beq hexvar bl hexvar mov r2 , sb str r8 , [ r0 ] mov fp , r0 mov r3 , r8 mov r1 , r4 mov r0 , r6 bl hexvar ldr sb , [ r4 ] stm sp , { r0 , r1 } cmp sb , r6 beq hexvar ldr r8 , [ fp ] cmp r8 , num beq hexvar cmp r8 , hexvar bne hexvar mov r8 , num cmp r7 , num beq hexvar ldrb r6 , [ sb ] cmp r6 , num bne hexvar ldm sp , { r3 , r4 } stm sl , { r3 , r4 } b hexvar cmp r7 , num bne hexvar mov r8 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] mov r0 , r8 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea esi , [ esi ] mov edx , dword ptr [ esp + hexvar ] or dword ptr [ edi + hexvar ] , num sub esp , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , edx push edx push eax push edi call hexvar add esp , hexvar test eax , eax mov eax , hexvar cmove esi , eax lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ edi + hexvar ] call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax cmovne esi , eax sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call ebp add esp , hexvar test eax , eax jne hexvar mov eax , esi neg eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , num lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar mov dword ptr [ esp + hexvar ] , eax mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , num or dword ptr [ edi + hexvar ] , num sub esp , num push edx push eax push edi call hexvar add esp , hexvar test eax , eax mov eax , hexvar cmove esi , eax lea eax , [ esp + hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push dword ptr [ edi + hexvar ] call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax cmovne esi , eax sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call ebp add esp , hexvar test eax , eax jne hexvar mov eax , esi neg eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] call rax mov qword ptr [ rbp - hexvar ] , rax cmp rax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov edx , ecx xor edx , hexvar mov esi , hexvar mov edi , esi xor edi , num xor esi , hexvar mov r8d , edx and r8d , hexvar and ecx , esi mov r9d , edi and r9d , hexvar mov r10d , esi and r10d , num or r8d , ecx or r9d , r10d xor r8d , r9d or edx , edi xor edx , hexvar or esi , hexvar and edx , esi or r8d , edx mov dword ptr [ rax + hexvar ] , r8d mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov rdi , qword ptr [ rax + hexvar ] lea rax , [ rbp - hexvar ] movabs rsi , hexvar mov rdx , rax call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp hexvar xor eax , eax sub eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push r15 push r14 mov r14 , rsi push r13 push r12 mov r13 , rdx push rbp push rbx mov rbp , rdi xor ebx , ebx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea r12 , [ rsp + hexvar ] lea r15 , [ rsp + hexvar ] jmp hexvar nop dword ptr [ rax ] or dword ptr [ rbp + hexvar ] , num mov edx , dword ptr [ rsp + hexvar ] mov rsi , rax mov rdi , rbp mov qword ptr [ rsp + hexvar ] , rax mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , edx call hexvar mov rdi , qword ptr [ rbp + hexvar ] lea rsi , [ rip - hexvar ] test eax , eax mov rdx , r15 mov eax , hexvar cmove ebx , eax call hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax cmovne ebx , eax mov rsi , r13 mov rdi , r12 call r14
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s5 , a1 move s4 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) move s0 , zero addiu s3 , sp , hexvar addiu s7 , zero , hexvar addiu s6 , sp , hexvar lui s2 , hexvar b hexvar addiu s2 , s2 , - hexvar sw v0 , hexvar ( sp ) lw a2 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v1 , hexvar ( s1 ) ori v1 , v1 , num sw v1 , hexvar ( s1 ) move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) movz s0 , s7 , v0 move a2 , s6 move a1 , s2 lw a0 , hexvar ( s1 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) movn s0 , v0 , v0 move a1 , s4 move a0 , s3 move t9 , s5 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a1 , v0 negu v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp push edi push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea esi , [ esi ] mov edx , dword ptr [ esp + hexvar ] or dword ptr [ edi + hexvar ] , num sub esp , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , edx push edx push eax push edi call hexvar add esp , hexvar test eax , eax mov eax , hexvar cmove esi , eax lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ edi + hexvar ] call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax cmovne esi , eax sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call ebp add esp , hexvar test eax , eax jne hexvar mov eax , esi neg eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdi mov r14 , rsi mov r13 , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov ebx , num lea r12 , [ rsp + hexvar ] lea r15 , [ rsp + hexvar ] jmp hexvar mov qword ptr [ rsp + hexvar ] , rax mov edx , dword ptr [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , edx mov dword ptr [ rsp + hexvar ] , num or dword ptr [ rbp + hexvar ] , num mov rsi , rax mov rdi , rbp call hexvar test eax , eax mov eax , hexvar cmove ebx , eax mov rdi , qword ptr [ rbp + hexvar ] mov rdx , r15 lea rsi , [ rip - hexvar ] call hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax cmovne ebx , eax mov rsi , r13 mov rdi , r12 call r14
push ebp push edi push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea esi , [ esi ] mov edx , dword ptr [ esp + hexvar ] or dword ptr [ edi + hexvar ] , num sub esp , num mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , edx push edx push eax push edi call hexvar add esp , hexvar test eax , eax mov eax , hexvar cmove esi , eax lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ edi + hexvar ] call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax cmovne esi , eax sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call ebp add esp , hexvar test eax , eax jne hexvar mov eax , esi neg eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s6 , hexvar ( sp ) lw s6 , - hexvar ( gp ) sw s2 , hexvar ( sp ) lui s2 , hexvar sw fp , hexvar ( sp ) addiu fp , sp , hexvar sw s7 , hexvar ( sp ) addiu s2 , s2 , hexvar sw s5 , hexvar ( sp ) addiu s7 , sp , hexvar sw s4 , hexvar ( sp ) addiu s5 , zero , hexvar sw s3 , hexvar ( sp ) move s4 , a1 sw s1 , hexvar ( sp ) move s3 , a2 sw s0 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) move s0 , zero sw gp , hexvar ( sp ) lw v0 , ( s6 ) sw v0 , hexvar ( sp ) b hexvar move a1 , s3 lw v1 , hexvar ( s1 ) move a1 , v0 lw a3 , hexvar ( sp ) move a0 , s1 lw t9 , - hexvar ( gp ) ori v1 , v1 , num sw v0 , hexvar ( sp ) move a2 , a3 sw v1 , hexvar ( s1 ) sw a3 , hexvar ( sp ) bal hexvar sw zero , hexvar ( sp ) move a2 , fp lw gp , hexvar ( sp ) move a1 , s2 lw a0 , hexvar ( s1 ) lw t9 , - hexvar ( gp ) bal hexvar movz s0 , s5 , v0 lw v0 , hexvar ( sp ) movn s0 , v0 , v0 move a1 , s3 move t9 , s4 jalr t9 move a0 , s7 bnez v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) negu v0 , s0 lw v1 , ( s6 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdi mov r14 , rsi mov r13 , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov ebx , num lea r12 , [ rsp + hexvar ] lea r15 , [ rsp + hexvar ] jmp hexvar mov qword ptr [ rsp + hexvar ] , rax mov edx , dword ptr [ rsp + hexvar ] mov dword ptr [ rsp + hexvar ] , edx mov dword ptr [ rsp + hexvar ] , num or dword ptr [ rbp + hexvar ] , num mov rsi , rax mov rdi , rbp call hexvar test eax , eax mov eax , hexvar cmove ebx , eax mov rdi , qword ptr [ rbp + hexvar ] mov rdx , r15 lea rsi , [ rip - hexvar ] call hexvar mov eax , dword ptr [ rsp + hexvar ] test eax , eax cmovne ebx , eax mov rsi , r13 mov rdi , r12 call r14
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rax , rdi sub rax , num mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num ja hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num ja hexvar mov edx , dword ptr [ ebp + num ] shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num ja hexvar mov edx , dword ptr [ ebp + num ] shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
cmp rdi , num ja hexvar lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rdi * num ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num ja hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num ja hexvar mov edx , dword ptr [ ebp + num ] shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num ja hexvar mov edx , dword ptr [ ebp + num ] shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
sltiu v0 , a0 , num beqz v0 , hexvar move v0 , zero sll v0 , a0 , num lui a0 , hexvar addiu a0 , a0 , - hexvar addu a0 , a0 , v0 lw v0 , ( a0 )
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num ja hexvar mov rax , qword ptr [ rbp - num ] lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] jmp hexvar mov eax , num pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r0 , [ sp , num ] blx r3 ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] add r3 , r3 , hexvar mov r2 , r3 ldr r1 , [ sp , num ] mov r0 , num bl hexvar ldr r3 , [ sp , num ] add r3 , r3 , hexvar mov r2 , num mov r1 , num mov r0 , r3 bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
lui gp , hexvar lw t9 , hexvar ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz t9 , hexvar sw gp , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , hexvar ( s0 ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar nop lw v0 , hexvar ( s0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) sw zero , hexvar ( s0 ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sw zero , hexvar ( s0 ) lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) lw a1 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , hexvar ( s0 ) addiu s1 , s0 , hexvar lw t9 , - hexvar ( gp ) addiu a0 , zero , num move a2 , s1 jalr t9 move a1 , s0 sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) sb zero , hexvar ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bal hexvar nop b hexvar lw gp , hexvar ( sp )
push rbx mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num lea rdx , [ rbx + hexvar ] mov edi , num mov rsi , rbx call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbx mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num lea rdx , [ rbx + hexvar ] mov edi , num mov rsi , rbx call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 pop rbx ret
push rbx mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num lea rdx , [ rbx + hexvar ] mov edi , num mov rsi , rbx call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 pop rbx ret
push rbx mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] test rax , rax je hexvar mov rdi , rbx call rax mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar cmp qword ptr [ rbx + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov esi , hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num lea rdx , [ rbx + hexvar ] mov edi , num mov rsi , rbx call hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rbx + hexvar ] , xmm0 pop rbx ret
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] sub eax , - hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] sub eax , - hexvar sub esp , num push num push num push eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbp ret
mov edx , dword ptr [ rdi ] mov eax , num test dl , num jne hexvar test dl , num je hexvar mov eax , num cmp dword ptr [ rdi + num ] , num jne hexvar test dl , num je hexvar mov rcx , qword ptr [ rdi + num ] test rcx , rcx je hexvar mov eax , num cmp byte ptr [ rcx ] , num jne hexvar test dl , num sete al movzx eax , al ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rdi ] mov edi , eax mov eax , edi and eax , num mov edi , eax mov rdi , qword ptr [ rdi + hexvar ] jmp rdi mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov eax , ecx mov ecx , eax and ecx , num mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + num ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] and cl , num shr cl , num movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov cl , byte ptr [ rax ] test cl , cl setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax ] and cl , num shr cl , num movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rdi ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , num xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] and ecx , num cmp ecx , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] and ecx , num cmp ecx , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] movsx ecx , byte ptr [ rax ] cmp ecx , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov edx , hexvar xor edx , num mov esi , ecx xor esi , edx and esi , ecx cmp esi , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) lw v0 , ( v0 ) andi v0 , v0 , num beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , num ( fp ) lw v0 , ( v0 ) andi v0 , v0 , num beqz v0 , hexvar nop lw v0 , num ( fp ) lw v0 , num ( v0 ) beqz v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , num ( fp ) lw v0 , ( v0 ) andi v0 , v0 , num beqz v0 , hexvar nop lw v0 , num ( fp ) lw v0 , num ( v0 ) beqz v0 , hexvar nop lw v0 , num ( fp ) lw v0 , num ( v0 ) lb v0 , ( v0 ) beqz v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , num ( fp ) lw v0 , ( v0 ) andi v0 , v0 , num beqz v0 , hexvar nop move v0 , zero b hexvar nop addiu v0 , zero , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
mov ecx , eax mov edx , dword ptr [ eax ] test dl , num jne hexvar test dl , num je hexvar mov eax , num cmp dword ptr [ ecx + num ] , num jne hexvar test dl , num je hexvar mov ecx , dword ptr [ ecx + num ] test ecx , ecx je hexvar mov eax , num cmp byte ptr [ ecx ] , num jne hexvar test dl , num sete al movzx eax , al ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , num test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , num test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] movzx eax , byte ptr [ rax ] test al , al je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , num test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
mov ecx , eax mov edx , dword ptr [ eax ] test dl , num je hexvar mov eax , num cmp dword ptr [ ecx + num ] , num jne hexvar test dl , num je hexvar mov ecx , dword ptr [ ecx + num ] test ecx , ecx je hexvar mov eax , num cmp byte ptr [ ecx ] , num jne hexvar test dl , num sete al movzx eax , al ret
mov edx , dword ptr [ rdi ] mov eax , num test dl , num jne hexvar test dl , num je hexvar mov eax , num cmp dword ptr [ rdi + num ] , num jne hexvar test dl , num je hexvar mov rcx , qword ptr [ rdi + num ] test rcx , rcx je hexvar mov eax , num cmp byte ptr [ rcx ] , num jne hexvar test dl , num sete al movzx eax , al ret
mov ecx , eax mov edx , dword ptr [ eax ] test dl , num jne hexvar test dl , num je hexvar mov eax , num cmp dword ptr [ ecx + num ] , num jne hexvar test dl , num je hexvar mov ecx , dword ptr [ ecx + num ] test ecx , ecx je hexvar mov eax , num cmp byte ptr [ ecx ] , num jne hexvar test dl , num sete al movzx eax , al ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] movzx eax , byte ptr [ eax ] test al , al je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] and eax , num test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ edi ] , eax mov eax , dword ptr [ esp + num ] mov dword ptr [ esi ] , eax mov eax , num mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar move a1 , zero move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , num lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v1 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v1 , ( v0 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax sub esp , num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp ] mov dword ptr [ eax ] , edx mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ edi ] , eax mov eax , dword ptr [ esp + num ] mov dword ptr [ esi ] , eax mov eax , num mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a2 move s0 , a3 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) move a1 , zero addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar addiu v0 , zero , hexvar lw v0 , hexvar ( sp ) sw v0 , ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , zero sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a0 addiu a0 , sp , hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s2 , a2 sw gp , hexvar ( sp ) move s1 , a3 sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop bnez v0 , hexvar lw gp , hexvar ( sp ) lw v1 , hexvar ( sp ) addiu v0 , zero , num sw v1 , ( s2 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax sub esp , num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov dword ptr [ eax ] , edx mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp ] mov dword ptr [ eax ] , edx mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov r14 , rcx mov r15 , rdx mov rbx , rdi lea rdi , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdi mov rax , qword ptr [ rsp + hexvar ] xor esi , esi call hexvar mov dword ptr [ rsp + hexvar ] , eax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r15 ] , rax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r14 ] , rax mov ecx , hexvar mov eax , num nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp dword ptr [ rsp + hexvar ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov edx , hexvar mov rdi , rbx mov esi , num call hexvar mov rdi , rbx mov esi , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar mov rcx , qword ptr [ rsp + hexvar ] add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ edi ] , eax mov eax , dword ptr [ esp + num ] mov dword ptr [ esi ] , eax mov eax , num mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] add r3 , sp , hexvar mov r1 , num mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar ldr r2 , [ pc , hexvar ] mov r1 , num ldr r0 , [ sp , hexvar ] bl hexvar mov r1 , hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num b hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , num ] str r2 , [ r3 ] mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] shl ecx , num mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) sll v0 , v0 , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] shl eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ eax ] shl eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov esp , ebp pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] shl ecx , num mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] shl eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] shl ecx , num mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] shl ecx , num mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] shl ecx , num mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] shl ecx , num mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push r15 push r14 push r12 push rbx push rax mov r15 , rdx mov rbx , rdi mov r14d , num cmp esi , hexvar jle hexvar lea eax , [ rsi - hexvar ] cmp eax , num jb hexvar mov r12 , rcx cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar test rbx , rbx je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edi , dword ptr [ rbx + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , dword ptr [ r12 ] mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , r15d mov dword ptr [ rbx + hexvar ] , num jmp hexvar cmp esi , num je hexvar cmp esi , num jne hexvar mov dword ptr [ rbx + hexvar ] , r15d jmp hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar test r12 , r12 je hexvar mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar xor r14d , r14d jmp hexvar mov r14 , - num mov rax , r14 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov r15 , rdx mov rbx , rdi mov r14d , num cmp esi , hexvar jle hexvar lea eax , [ rsi - hexvar ] cmp eax , num jb hexvar mov r12 , rcx cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar test rbx , rbx je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edi , dword ptr [ rbx + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , dword ptr [ r12 ] mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , r15d mov dword ptr [ rbx + hexvar ] , num jmp hexvar cmp esi , num je hexvar cmp esi , num jne hexvar mov dword ptr [ rbx + hexvar ] , r15d jmp hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar test r12 , r12 je hexvar mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar xor r14d , r14d jmp hexvar mov r14 , - num mov rax , r14 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov r15 , rdx mov rbx , rdi mov r14d , num cmp esi , hexvar jle hexvar lea eax , [ rsi - hexvar ] cmp eax , num jb hexvar mov r12 , rcx cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar test rbx , rbx je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edi , dword ptr [ rbx + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , dword ptr [ r12 ] mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , r15d mov dword ptr [ rbx + hexvar ] , num jmp hexvar cmp esi , num je hexvar cmp esi , num jne hexvar mov dword ptr [ rbx + hexvar ] , r15d jmp hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar test r12 , r12 je hexvar mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar xor r14d , r14d jmp hexvar mov r14 , - num mov rax , r14 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
slti v0 , a1 , hexvar beqz v0 , hexvar slti v0 , a1 , hexvar beqz v0 , hexvar addiu v0 , zero , num addiu v0 , zero , num beq a1 , v0 , hexvar nop addiu v0 , zero , num bne a1 , v0 , hexvar nop sw a2 , hexvar ( a0 ) jr ra addiu v0 , zero , num addiu v0 , zero , hexvar beq a1 , v0 , hexvar addiu v0 , zero , hexvar bne a1 , v0 , hexvar move v0 , zero lw v0 , hexvar ( a0 ) beqz v0 , hexvar nop beqz a3 , hexvar nop lw v0 , hexvar ( a0 ) sw v0 , ( a3 ) jr ra lw v0 , hexvar ( a0 ) move v0 , zero jr ra nop addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a3 move s2 , a2 move s0 , a0 jal hexvar nop lw v0 , ( s1 ) sw v0 , hexvar ( s0 ) sw s2 , hexvar ( s0 ) addiu v0 , zero , num sw v0 , hexvar ( s0 ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra lw v0 , hexvar ( a0 ) jr ra addiu v0 , zero , - num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) slti v1 , v0 , hexvar beqz v1 , hexvar nop slti v1 , v0 , hexvar beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop lw a0 , hexvar ( sp ) jal hexvar nop lw v0 , hexvar ( sp ) lw v1 , ( v0 )
push r15 push r14 push r12 push rbx push rax mov r15 , rdx mov rbx , rdi mov r14d , num cmp esi , hexvar jle hexvar lea eax , [ rsi - hexvar ] cmp eax , num jb hexvar mov r12 , rcx cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar test rbx , rbx je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edi , dword ptr [ rbx + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , dword ptr [ r12 ] mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , r15d mov dword ptr [ rbx + hexvar ] , num jmp hexvar cmp esi , num je hexvar cmp esi , num jne hexvar mov dword ptr [ rbx + hexvar ] , r15d jmp hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar test r12 , r12 je hexvar mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar xor r14d , r14d jmp hexvar mov r14 , - num mov rax , r14 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + num ] , num mov eax , dword ptr [ esp + hexvar ] cmp eax , hexvar jg hexvar cmp eax , hexvar jge hexvar cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar mov dword ptr [ esp + num ] , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx jmp hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov dword ptr [ esp + num ] , num nop mov eax , dword ptr [ esp + num ] add esp , hexvar ret
push r15 push r14 push r12 push rbx push rax mov r15 , rdx mov rbx , rdi mov r14d , num cmp esi , hexvar jle hexvar lea eax , [ rsi - hexvar ] cmp eax , num jb hexvar mov r12 , rcx cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar test rbx , rbx je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edi , dword ptr [ rbx + hexvar ] mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , dword ptr [ r12 ] mov dword ptr [ rbx + hexvar ] , eax mov dword ptr [ rbx + hexvar ] , r15d mov dword ptr [ rbx + hexvar ] , num jmp hexvar cmp esi , num je hexvar cmp esi , num jne hexvar mov dword ptr [ rbx + hexvar ] , r15d jmp hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar test r12 , r12 je hexvar mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar movsxd r14 , dword ptr [ rbx + hexvar ] jmp hexvar xor r14d , r14d jmp hexvar mov r14 , - num mov rax , r14 add rsp , num pop rbx pop r12 pop r14 pop r15 ret
slti v0 , a1 , hexvar beqz v0 , hexvar slti v0 , a1 , hexvar beqz v0 , hexvar addiu v0 , zero , num addiu v0 , zero , num beq a1 , v0 , hexvar nop addiu v0 , zero , num bne a1 , v0 , hexvar nop sw a2 , hexvar ( a0 )
slti v0 , a1 , hexvar beqz v0 , hexvar slti v0 , a1 , hexvar beqz v0 , hexvar addiu v0 , zero , num addiu v0 , zero , num beq a1 , v0 , hexvar nop addiu v0 , zero , num bne a1 , v0 , hexvar nop sw a2 , hexvar ( a0 )
push rbp push r15 push r14 push r12 push rbx mov r14 , r8 mov r15 , rcx mov rbx , rdx mov rbp , rsi call hexvar mov r12 , rax mov rdi , rbp mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax test r12 , r12 je hexvar mov rdi , r12 call hexvar mov rdi , r15 mov esi , r14d mov rdx , rbx mov rcx , rax call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov rdi , rbx call hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov r14 , r8 mov r15 , rcx mov rbx , rdx mov rbp , rsi call hexvar mov r12 , rax mov rdi , rbp mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax test r12 , r12 je hexvar mov rdi , r12 call hexvar mov rdi , r15 mov esi , r14d mov rdx , rbx mov rcx , rax call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov rdi , rbx call hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov r14 , r8 mov r15 , rcx mov rbx , rdx mov rbp , rsi call hexvar mov r12 , rax mov rdi , rbp mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax test r12 , r12 je hexvar mov rdi , r12 call hexvar mov rdi , r15 mov esi , r14d mov rdx , rbx mov rcx , rax call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov rdi , rbx call hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a1 move a1 , s1 lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar move s1 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s1 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 move a2 , s0 lw gp , hexvar ( sp ) move a3 , v0 lw a1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , zero lw ra , hexvar ( sp ) move s1 , zero lw s2 , hexvar ( sp ) move v0 , s1 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push r12 push rbx mov r14 , r8 mov r15 , rcx mov rbx , rdx mov rbp , rsi call hexvar mov r12 , rax mov rdi , rbp mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax test r12 , r12 je hexvar mov rdi , r12 call hexvar mov rdi , r15 mov esi , r14d mov rdx , rbx mov rcx , rax call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov rdi , rbx call hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r4 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 ldr r2 , [ sp , hexvar ] mov r1 , r4 ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { r4 , pc }
push rbp push r15 push r14 push r12 push rbx mov r14 , r8 mov r15 , rcx mov rbx , rdx mov rbp , rsi call hexvar mov r12 , rax mov rdi , rbp mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax test r12 , r12 je hexvar mov rdi , r12 call hexvar mov rdi , r15 mov esi , r14d mov rdx , rbx mov rcx , rax call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov rdi , rbx call hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov r14 , r8 mov r15 , rcx mov rbx , rdx mov rbp , rsi call hexvar mov r12 , rax mov rdi , rbp mov rsi , rbx call hexvar test rax , rax je hexvar mov rbx , rax test r12 , r12 je hexvar mov rdi , r12 call hexvar mov rdi , r15 mov esi , r14d mov rdx , rbx mov rcx , rax call hexvar mov ebp , eax jmp hexvar xor ebp , ebp jmp hexvar xor ebp , ebp mov rdi , rbx call hexvar mov eax , ebp pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a1 move a1 , s1 lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar move s1 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s1 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 move a2 , s0 lw gp , hexvar ( sp ) move a3 , v0 lw a1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , zero lw ra , hexvar ( sp ) move s1 , zero lw s2 , hexvar ( sp ) move v0 , s1 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a1 move a1 , s1 lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar move s1 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s1 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 move a2 , s0 lw gp , hexvar ( sp ) move a3 , v0 lw a1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , zero lw ra , hexvar ( sp ) move s1 , zero lw s2 , hexvar ( sp ) move v0 , s1 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
ldr r3 , [ r0 , hexvar ] push { r4 , r5 , r6 , lr } ands r5 , r3 , num mov r4 , r0 movne r5 , num bne hexvar tst r3 , hexvar bne hexvar ldr r0 , [ r0 , hexvar ] bl hexvar adds r5 , r0 , num movne r5 , num add r0 , r4 , hexvar bl hexvar mov r0 , r5 pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar lw v0 , hexvar ( a0 ) lui gp , hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) andi s0 , v0 , num sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) move s1 , a0 bnez s0 , hexvar sw gp , hexvar ( sp ) andi v0 , v0 , hexvar bnez v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( a0 ) sltu s0 , zero , v0 jal hexvar addiu a0 , s1 , hexvar move v0 , s0 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a2 , zero , num jal hexvar addiu a1 , zero , - hexvar b hexvar nop b hexvar move s0 , zero
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , eax mov eax , dword ptr [ eax + hexvar ] mov edi , eax and edi , num jne hexvar test ah , num jne hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax setne al movzx eax , al mov edi , eax jmp hexvar mov ecx , num mov edx , hexvar mov eax , esi call hexvar jmp hexvar mov edi , num lea eax , [ esi + hexvar ] call hexvar mov eax , edi pop ebx pop esi pop edi ret
push r12 push rbp xor r12d , r12d push rbx mov eax , dword ptr [ rdi + hexvar ] mov rbp , rdi lea rbx , [ rdi + hexvar ] test al , num jne hexvar test ah , num je hexvar mov esi , dword ptr [ rdi + hexvar ] lea rbx , [ rdi + hexvar ] mov rdi , rbx call hexvar test eax , eax js hexvar mov edi , eax call hexvar mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rbx xor r12d , r12d call hexvar test al , al jne hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jns hexvar mov rdi , rbx call hexvar test al , al je hexvar mov eax , r12d pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov dl , cl mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , num cmp ecx , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov dl , cl mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , num cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , dl jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , hexvar xor edx , hexvar mov esi , ecx xor esi , edx and esi , ecx cmp esi , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx ecx , al mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov dl , cl mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , num cmp ecx , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
ldr r3 , [ r0 , hexvar ] push { r4 , r5 , r6 , lr } ands r5 , r3 , num mov r4 , r0 movne r5 , num bne hexvar tst r3 , hexvar bne hexvar ldr r0 , [ r0 , hexvar ] bl hexvar adds r5 , r0 , num movne r5 , num add r0 , r4 , hexvar bl hexvar mov r0 , r5 pop { r4 , r5 , r6 , pc }
push r12 push rbp xor r12d , r12d push rbx mov eax , dword ptr [ rdi + hexvar ] mov rbp , rdi lea rbx , [ rdi + hexvar ] test al , num jne hexvar test ah , num je hexvar mov esi , dword ptr [ rdi + hexvar ] lea rbx , [ rdi + hexvar ] mov rdi , rbx call hexvar test eax , eax js hexvar mov edi , eax call hexvar mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rbx xor r12d , r12d call hexvar test al , al jne hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar test eax , eax jns hexvar mov rdi , rbx call hexvar test al , al je hexvar mov eax , r12d pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add edx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , num test eax , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] jmp hexvar mov eax , hexvar sub esp , num push num push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] jmp hexvar mov eax , hexvar sub esp , hexvar push eax mov ebx , edx call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push rbp push r15 push r14 push rbx push rax mov r14 , rdi test rsi , rsi je hexvar mov r15 , rsi mov rdi , rsi call hexvar test eax , eax jle hexvar xor ebp , ebp test r14 , r14 je hexvar nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebp call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ rax ] mov rsi , r14 call hexvar test eax , eax je hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 mov esi , ebp call hexvar test rax , rax jne hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar mov rdi , r14 add rsp , num pop rbx pop r14 pop r15 pop rbp jmp hexvar mov rbx , rax mov rax , rbx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp ] cmp r3 , num beq hexvar mov r3 , num str r3 , [ sp , num ] b hexvar ldr r1 , [ sp , num ] ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , num ] add r3 , r3 , num str r3 , [ sp , num ] ldr r0 , [ sp ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] cmp r3 , r2 blt hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov dword ptr [ esp + num ] , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar add dword ptr [ esp + num ] , num sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp dword ptr [ esp + num ] , eax jl hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar pop ebx ret
push ebp push edi mov ebp , eax push esi push ebx xor esi , esi call hexvar add ebx , hexvar sub esp , hexvar test edx , edx mov edi , edx jne hexvar jmp hexvar nop sub esp , num push esi push edi call hexvar add esp , hexvar test eax , eax mov edx , eax je hexvar test ebp , ebp je hexvar sub esp , num push ebp push dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ esp + hexvar ] je hexvar add esi , num sub esp , hexvar push edi call hexvar add esp , hexvar cmp eax , esi jg hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov edx , eax add esp , hexvar mov eax , edx pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push rbx push rax mov r14 , rdi test rsi , rsi je hexvar mov r15 , rsi mov rdi , rsi call hexvar test eax , eax jle hexvar xor ebp , ebp test r14 , r14 je hexvar nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebp call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ rax ] mov rsi , r14 call hexvar test eax , eax je hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 mov esi , ebp call hexvar test rax , rax jne hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar mov rdi , r14 add rsp , num pop rbx pop r14 pop r15 pop rbp jmp hexvar mov rbx , rax mov rax , rbx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax mov r14 , rdi test rsi , rsi je hexvar mov r15 , rsi mov rdi , rsi call hexvar test eax , eax jle hexvar xor ebp , ebp test r14 , r14 je hexvar nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebp call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ rax ] mov rsi , r14 call hexvar test eax , eax je hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 mov esi , ebp call hexvar test rax , rax jne hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar mov rdi , r14 add rsp , num pop rbx pop r14 pop r15 pop rbp jmp hexvar mov rbx , rax mov rax , rbx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov ebp , edx mov esi , num test edx , edx jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov edi , eax add esp , hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a1 , hexvar move s3 , a0 move s2 , a1 b hexvar move s0 , zero addiu s0 , s0 , num move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) slt v0 , s0 , v0 beqz v0 , hexvar move a1 , s0 move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 beqz s3 , hexvar move a1 , s3 lw a0 , ( v0 )
push rbp push r15 push r14 push rbx push rax mov r14 , rdi test rsi , rsi je hexvar mov r15 , rsi mov rdi , rsi call hexvar test eax , eax jle hexvar xor ebp , ebp test r14 , r14 je hexvar nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebp call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , qword ptr [ rax ] mov rsi , r14 call hexvar test eax , eax je hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 mov esi , ebp call hexvar test rax , rax jne hexvar add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar mov rdi , r14 add rsp , num pop rbx pop r14 pop r15 pop rbp jmp hexvar mov rbx , rax mov rax , rbx add rsp , num pop rbx pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp ] cmp r3 , num beq hexvar mov r3 , num str r3 , [ sp , num ] b hexvar ldr r1 , [ sp , num ] ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , num ] add r3 , r3 , num str r3 , [ sp , num ] ldr r0 , [ sp ] bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] cmp r3 , r2 blt hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
ldr ip , [ r2 ] ldr r3 , [ r2 , num ] push { r4 , r5 , r6 , lr } ldm r1 , { r4 , r5 } cmp r5 , hexvar and r1 , ip , r3 cmpeq r4 , num moveq r2 , num movne r2 , num cmn r1 , num movne r1 , num moveq r1 , num tst r2 , r1 bne hexvar mov r6 , r0 mov r2 , ip mov r0 , r4 mov r1 , r5 bl hexvar stm r6 , { r0 , r1 } pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax movabs rax , hexvar cmp qword ptr [ rbp - hexvar ] , rax jne hexvar cmp qword ptr [ rbp - num ] , - num jne hexvar mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cqo idiv qword ptr [ rbp - num ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx nop leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw a0 , ( a1 )
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldm r3 , { r3 , r4 } str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldm r3 , { r3 , r4 } str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } cmp r4 , hexvar cmpeq r3 , num bne hexvar sub r4 , fp , hexvar ldm r4 , { r3 , r4 } mvn r1 , num mvn r2 , num cmp r4 , r2 cmpeq r3 , r1 bne hexvar mov r0 , hexvar bl hexvar sub r3 , fp , hexvar ldm r3 , { r2 , r3 } sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 mov r4 , r1 ldr r2 , [ fp , - hexvar ] stm r2 , { r3 , r4 } mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ esi ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ esi ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] xor edi , hexvar or esi , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and eax , ecx sub eax , - num mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov dword ptr [ esp ] , hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , esp mov dword ptr [ edi + hexvar ] , esi mov dword ptr [ edi + num ] , edx mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , edx mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop edi pop ebp ret
mov rax , qword ptr [ rsi ] mov rcx , qword ptr [ rdx ] movabs rdx , hexvar cmp rax , rdx jne hexvar cmp rcx , - num je hexvar cqo idiv rcx mov qword ptr [ rdi ] , rax ret
push ebp push edi push esi push ebx call hexvar add ebp , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov ebx , dword ptr [ ecx + num ] mov ecx , dword ptr [ ecx ] lea esi , [ edx - hexvar ] mov edi , eax or edi , esi jne hexvar mov esi , ecx and esi , ebx cmp esi , - num je hexvar push ebx push ecx mov ebx , ebp push edx push eax call hexvar mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , edx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldm r3 , { r3 , r4 } str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldm r3 , { r3 , r4 } str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } cmp r4 , hexvar cmpeq r3 , num bne hexvar sub r4 , fp , hexvar ldm r4 , { r3 , r4 } mvn r1 , num mvn r2 , num cmp r4 , r2 cmpeq r3 , r1 bne hexvar mov r0 , hexvar bl hexvar sub r3 , fp , hexvar ldm r3 , { r2 , r3 } sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 mov r4 , r1 ldr r2 , [ fp , - hexvar ] stm r2 , { r3 , r4 } mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ esi ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ esi ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] xor edi , hexvar or esi , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and eax , ecx sub eax , - num mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov dword ptr [ esp ] , hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , esp mov dword ptr [ edi + hexvar ] , esi mov dword ptr [ edi + num ] , edx mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , edx mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ esi ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ esi ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] xor edi , hexvar or esi , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] and eax , ecx sub eax , - num mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov dword ptr [ esp ] , hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , esp mov dword ptr [ edi + hexvar ] , esi mov dword ptr [ edi + num ] , edx mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , edx mov dword ptr [ ecx ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ r0 , hexvar ] ldr r2 , [ r0 ] cmp r2 , r3 beq hexvar cmp r3 , num ldrne r6 , [ r3 , num ] ldreq r6 , [ r0 , num ] mov r7 , r0 cmp r6 , num beq hexvar ldr fp , [ pc , hexvar ] b hexvar ldr r1 , [ pc , hexvar ] mov r0 , fp bl hexvar b hexvar ldr r1 , [ pc , hexvar ] mov r0 , fp bl hexvar b hexvar mov r4 , r5 ldr r5 , [ r4 ] str r3 , [ r4 ] mov r3 , r4 cmp r5 , num bne hexvar str r4 , [ r6 , hexvar ] cmp r4 , num beq hexvar mov r0 , num mov sl , num b hexvar ldr r4 , [ r4 ] cmp r4 , num cmpne r0 , num beq hexvar ldr r1 , [ r4 , hexvar ] cmp r1 , num beq hexvar mov r3 , sl mov r2 , r4 mov r0 , sb bl hexvar b hexvar ldr r4 , [ r6 , hexvar ] cmp r4 , num bne hexvar b hexvar mov r4 , r3 ldr r3 , [ r4 ] str r5 , [ r4 ] mov r5 , r4 cmp r3 , num bne hexvar str r4 , [ r6 , hexvar ] cmp r0 , num bne hexvar mov r3 , num str r3 , [ r7 , hexvar ] mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } mrc p3 , num , ip , c12 , c11 , num
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] push edx push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) bne v1 , v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v0 , num ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) move a3 , v0 move a2 , v1 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop bnez v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw v1 , hexvar ( v0 ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lw v0 , hexvar ( a0 ) lw v1 , ( a0 ) beq v1 , v0 , hexvar nop addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz v0 , hexvar sw s0 , hexvar ( sp ) lw s2 , num ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbp - hexvar ] cmp rdi , qword ptr [ rax + hexvar ] jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov rdx , qword ptr [ rdi + hexvar ] mov eax , num cmp qword ptr [ rdi + hexvar ] , rdx je hexvar push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num test rdx , rdx je hexvar mov r12 , qword ptr [ rdx + num ] mov r13 , rdi test r12 , r12 jne hexvar mov rax , qword ptr [ r13 + hexvar ] mov qword ptr [ r13 + hexvar ] , rax mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , num mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num leave ret
mov rdx , qword ptr [ rdi + hexvar ] mov eax , num cmp qword ptr [ rdi ] , rdx je hexvar push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num test rdx , rdx je hexvar mov r12 , qword ptr [ rdx + num ] mov r13 , rdi test r12 , r12 jne hexvar mov rax , qword ptr [ r13 ] mov qword ptr [ r13 + hexvar ] , rax mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp edx , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] push edx push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , num mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , num leave ret
push { r4 , r5 , r6 , r7 , r8 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar ldr r5 , [ pc , hexvar ] cmn r2 , hexvar ldr ip , [ r5 ] str ip , [ fp , - hexvar ] bhi hexvar ldr ip , [ pc , hexvar ] mov r4 , r0 lsl r0 , r2 , num cmp r0 , ip bhi hexvar add r0 , r0 , hexvar bic r0 , r0 , num sub sp , sp , r0 add r0 , sp , num cmp r0 , num beq hexvar mov ip , num cmp r2 , num str ip , [ r0 , num ] bls hexvar mov r8 , r1 mov ip , num mov r7 , num ldrb r6 , [ r8 , num ] ! ldrb lr , [ r1 , ip ] cmp lr , r6 bne hexvar b hexvar ldr lr , [ r0 , ip , lsl num ] sub ip , ip , lr ldrb lr , [ r1 , ip ] cmp lr , r6 beq hexvar cmp ip , num bne hexvar mov ip , num str r7 , [ r0 , r7 , lsl num ] add r7 , r7 , num cmp r2 , r7 bne hexvar mov ip , num mov r6 , r4 str ip , [ r3 ] ldrb lr , [ r4 ] cmp lr , num beq hexvar ldrb r7 , [ r1 , ip ] cmp r7 , lr beq hexvar cmp ip , num ldrne r7 , [ r0 , ip , lsl num ] ldrbeq lr , [ r6 , num ] addne r4 , r4 , r7 subne ip , ip , r7 addeq r4 , r4 , num addeq r6 , r6 , num cmp lr , num bne hexvar bl hexvar mov r0 , num b hexvar mov r0 , num ldr r2 , [ fp , - hexvar ] ldr r3 , [ r5 ] cmp r2 , r3 bne hexvar sub sp , fp , hexvar pop { r4 , r5 , r6 , r7 , r8 , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) srl s4 , a2 , hexvar sltu v0 , zero , s4 ext s4 , a2 , hexvar , num addiu v1 , zero , num movz v1 , v0 , s4 bnez v1 , hexvar move s1 , a0 move s0 , a1 move s2 , a2 move s3 , a3 sll a0 , a2 , num sltiu v0 , a0 , hexvar beqz v0 , hexvar move s4 , v1 addiu v0 , a0 , hexvar srl v0 , v0 , num sll v0 , v0 , num subu sp , sp , v0 addiu a0 , sp , hexvar addiu v0 , zero , - hexvar and a0 , a0 , v0 beqz a0 , hexvar addiu v0 , zero , num sw v0 , num ( a0 ) sltiu v0 , s2 , num bnez v0 , hexvar addiu a3 , a0 , num addiu v0 , s0 , num addiu t2 , s0 , - num addu t2 , t2 , s2 move v1 , zero addiu t1 , zero , num b hexvar subu t1 , t1 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( fp ) b hexvar move a0 , v0 addiu v1 , v1 , num subu t0 , t0 , v1 sw t0 , ( a3 ) addiu v0 , v0 , num beq v0 , t2 , hexvar addiu a3 , a3 , num lbu a2 , ( v0 ) addu a1 , s0 , v1 lbu a1 , ( a1 ) beq a1 , a2 , hexvar addu t0 , t1 , v0 beqz v1 , hexvar sll a1 , v1 , num addu a1 , a0 , a1 lw a1 , ( a1 ) subu v1 , v1 , a1 addu a1 , s0 , v1 lbu a1 , ( a1 ) beq a1 , a2 , hexvar nop bnez v1 , hexvar sll a1 , v1 , num sw t0 , ( a3 ) b hexvar move v1 , zero sw zero , ( s3 )
push ebp mov ebp , esp push edi push esi call hexvar add edi , hexvar push ebx sub esp , hexvar mov dword ptr [ ebp - hexvar ] , edi mov edi , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax cmp ecx , hexvar ja hexvar mov eax , ecx shl eax , num cmp eax , hexvar ja hexvar add eax , hexvar and eax , hexvar sub esp , eax lea eax , [ esp + hexvar ] and eax , hexvar add eax , num test eax , eax je hexvar mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num cmp ebx , num jbe hexvar mov dword ptr [ ebp - hexvar ] , edi xor ecx , ecx mov esi , num mov edi , ebx nop movzx ebx , byte ptr [ edx + esi - num ] cmp bl , byte ptr [ edx + ecx ] jne hexvar jmp hexvar nop sub ecx , dword ptr [ eax + ecx * num ] cmp byte ptr [ edx + ecx ] , bl je hexvar test ecx , ecx jne hexvar mov dword ptr [ eax + esi * num ] , esi xor ecx , ecx add esi , num cmp edi , esi jne hexvar mov edi , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] xor ecx , ecx mov dword ptr [ esi ] , num movzx ebx , byte ptr [ edi ] mov esi , edi nop test bl , bl je hexvar cmp byte ptr [ edx + ecx ] , bl je hexvar test ecx , ecx je hexvar add edi , dword ptr [ eax + ecx * num ] sub ecx , dword ptr [ eax + ecx * num ] test bl , bl jne hexvar sub esp , hexvar mov ebx , dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov eax , num jmp hexvar lea esi , [ esi ] xor eax , eax mov edi , dword ptr [ ebp - hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sll v0 , a2 , num sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 lw s1 , - hexvar ( gp ) sw fp , hexvar ( sp ) move fp , sp sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , ( s1 ) sw a0 , hexvar ( fp ) bltz v0 , hexvar srl v1 , a2 , hexvar sltu v1 , zero , v1 bnez v1 , hexvar sltiu v1 , v0 , hexvar beqz v1 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , v0 , hexvar srl v0 , v0 , num sll v0 , v0 , num subu sp , sp , v0 addiu v0 , zero , - hexvar addiu a0 , sp , hexvar and a0 , a0 , v0 beqz a0 , hexvar addiu t5 , zero , num sltiu v0 , a2 , num bnez v0 , hexvar sw t5 , num ( a0 ) addiu t4 , a1 , - num addiu v0 , a1 , num addiu t2 , a0 , num addu t4 , t4 , a2 move v1 , zero subu t5 , t5 , a1 addu t0 , a1 , v1 lbu t1 , ( v0 ) lbu t0 , ( t0 ) bne t0 , t1 , hexvar addu t3 , t5 , v0 b hexvar addiu v1 , v1 , num addu t0 , a0 , t0 lw t0 , ( t0 ) subu v1 , v1 , t0 addu t0 , a1 , v1 lbu t0 , ( t0 ) beq t0 , t1 , hexvar nop bnez v1 , hexvar sll t0 , v1 , num move v1 , zero sw t3 , ( t2 ) addiu v0 , v0 , num bne t4 , v0 , hexvar addiu t2 , t2 , num sw zero , ( a3 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sltu v0 , a2 , v0 sw fp , hexvar ( sp ) move fp , sp sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) sw v1 , hexvar ( fp ) beqz v0 , hexvar move s0 , a0 sll a0 , a2 , num sltiu v0 , a0 , hexvar beqz v0 , hexvar addiu v0 , a0 , hexvar srl v0 , v0 , num sll v0 , v0 , num subu sp , sp , v0 addiu a0 , sp , hexvar beqz a0 , hexvar addiu t5 , zero , num sltiu v0 , a2 , num bnez v0 , hexvar sw t5 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) srl s4 , a2 , hexvar sltu v0 , zero , s4 ext s4 , a2 , hexvar , num addiu v1 , zero , num movz v1 , v0 , s4 bnez v1 , hexvar move s1 , a0 move s0 , a1 move s2 , a2 move s3 , a3 sll a0 , a2 , num sltiu v0 , a0 , hexvar beqz v0 , hexvar move s4 , v1 addiu v0 , a0 , hexvar srl v0 , v0 , num sll v0 , v0 , num subu sp , sp , v0 addiu a0 , sp , hexvar addiu v0 , zero , - hexvar and a0 , a0 , v0 beqz a0 , hexvar addiu v0 , zero , num sw v0 , num ( a0 )
push { r4 , r5 , r6 , r7 , r8 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar ldr r5 , [ pc , hexvar ] cmn r2 , hexvar ldr ip , [ r5 ] str ip , [ fp , - hexvar ] bhi hexvar ldr ip , [ pc , hexvar ] mov r4 , r0 lsl r0 , r2 , num cmp r0 , ip bhi hexvar add r0 , r0 , hexvar bic r0 , r0 , num sub sp , sp , r0 add r0 , sp , num cmp r0 , num beq hexvar mov ip , num cmp r2 , num str ip , [ r0 , num ] bls hexvar mov r8 , r1 mov ip , num mov r7 , num ldrb r6 , [ r8 , num ] ! ldrb lr , [ r1 , ip ] cmp lr , r6 bne hexvar b hexvar ldr lr , [ r0 , ip , lsl num ] sub ip , ip , lr ldrb lr , [ r1 , ip ] cmp lr , r6 beq hexvar cmp ip , num bne hexvar mov ip , num str r7 , [ r0 , r7 , lsl num ] add r7 , r7 , num cmp r2 , r7 bne hexvar mov ip , num mov r6 , r4 str ip , [ r3 ] ldrb lr , [ r4 ] cmp lr , num beq hexvar ldrb r7 , [ r1 , ip ] cmp r7 , lr beq hexvar cmp ip , num ldrne r7 , [ r0 , ip , lsl num ] ldrbeq lr , [ r6 , num ] addne r4 , r4 , r7 subne ip , ip , r7 addeq r4 , r4 , num addeq r6 , r6 , num cmp lr , num bne hexvar bl hexvar mov r0 , num b hexvar mov r0 , num ldr r2 , [ fp , - hexvar ] ldr r3 , [ r5 ] cmp r2 , r3 bne hexvar sub sp , fp , hexvar pop { r4 , r5 , r6 , r7 , r8 , fp , pc }
push rbp mov rbp , rsp push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movabs rdx , hexvar cmp r12 , rdx ja hexvar mov r13 , rdi mov rbx , rsi mov r14 , rcx lea rdi , [ r12 * num ] cmp rdi , hexvar ja hexvar add rdi , hexvar and rdi , hexvar sub rsp , rdi lea rdi , [ rsp + hexvar ] and rdi , hexvar add rdi , hexvar mov eax , num test rdi , rdi je hexvar mov qword ptr [ rdi + num ] , num cmp r12 , num jbe hexvar mov edx , num mov ecx , num jmp hexvar call hexvar mov rdi , rax jmp hexvar add rdx , num mov rax , rcx sub rax , rdx mov qword ptr [ rdi + rcx * num ] , rax add rcx , num cmp r12 , rcx je hexvar movzx eax , byte ptr [ rbx + rcx - num ] cmp al , byte ptr [ rbx + rdx ] je hexvar test rdx , rdx je hexvar sub rdx , qword ptr [ rdi + rdx * num ] cmp byte ptr [ rbx + rdx ] , al je hexvar test rdx , rdx jne hexvar mov qword ptr [ rdi + rcx * num ] , rcx mov edx , num jmp hexvar mov qword ptr [ r14 ] , num mov rcx , r13 mov eax , num jmp hexvar add rax , num add rcx , num cmp r12 , rax jne hexvar mov qword ptr [ r14 ] , r13 call hexvar mov eax , num mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r13 pop r14 pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar ldr r5 , [ pc , hexvar ] lsrs ip , r2 , hexvar ldr r6 , [ r5 ] movne lr , num moveq lr , num lsls ip , r2 , num str r6 , [ fp , - hexvar ] bmi hexvar cmp lr , num bne hexvar cmp ip , hexvar mov r4 , r0 bhi hexvar add ip , ip , hexvar bic ip , ip , num sub sp , sp , ip add r0 , sp , hexvar bic r0 , r0 , hexvar cmp r0 , num beq hexvar mov ip , num cmp r2 , num str ip , [ r0 , num ] bls hexvar mov r8 , r1 mov ip , num mov r7 , num ldrb r6 , [ r8 , num ] ! ldrb lr , [ r1 , ip ] cmp lr , r6 bne hexvar b hexvar ldr lr , [ r0 , ip , lsl num ] sub ip , ip , lr ldrb lr , [ r1 , ip ] cmp lr , r6 beq hexvar cmp ip , num bne hexvar mov ip , num str r7 , [ r0 , r7 , lsl num ] add r7 , r7 , num cmp r2 , r7 bne hexvar mov ip , num mov r6 , r4 str ip , [ r3 ] ldrb lr , [ r4 ] cmp lr , num beq hexvar ldrb r7 , [ r1 , ip ] cmp r7 , lr beq hexvar cmp ip , num ldrne r7 , [ r0 , ip , lsl num ] ldrbeq lr , [ r6 , num ] addne r4 , r4 , r7 subne ip , ip , r7 addeq r4 , r4 , num addeq r6 , r6 , num cmp lr , num bne hexvar bl hexvar mov r0 , num b hexvar mov r0 , num ldr r2 , [ fp , - hexvar ] ldr r3 , [ r5 ] cmp r2 , r3 bne hexvar sub sp , fp , hexvar pop { r4 , r5 , r6 , r7 , r8 , fp , pc }
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax movabs rax , hexvar cmp rdx , rax ja hexvar mov rbx , rdi lea rdi , [ rdx * num ] cmp rdi , hexvar ja hexvar add rdi , hexvar and rdi , hexvar sub rsp , rdi lea rdi , [ rsp + hexvar ] and rdi , hexvar add rdi , hexvar test rdi , rdi je hexvar cmp rdx , num mov qword ptr [ rdi + num ] , num jbe hexvar xor r8d , r8d mov r9d , num nop dword ptr [ rax + rax ] movzx eax , byte ptr [ rsi + r9 - num ] cmp al , byte ptr [ rsi + r8 ] jne hexvar jmp hexvar nop dword ptr [ rax ] sub r8 , qword ptr [ rdi + r8 * num ] cmp byte ptr [ rsi + r8 ] , al je hexvar test r8 , r8 jne hexvar mov qword ptr [ rdi + r9 * num ] , r9 xor r8d , r8d add r9 , num cmp rdx , r9 jne hexvar mov qword ptr [ rcx ] , num movzx r8d , byte ptr [ rbx ] mov r9 , rbx xor eax , eax nop dword ptr [ rax + rax ] test r8b , r8b je hexvar cmp byte ptr [ rsi + rax ] , r8b je hexvar test rax , rax je hexvar mov r10 , qword ptr [ rdi + rax * num ] add rbx , r10 sub rax , r10 test r8b , r8b jne hexvar call hexvar mov eax , num jmp hexvar nop dword ptr [ rax + rax ] xor eax , eax mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar mov rbx , qword ptr [ rbp - num ] leave ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax lea eax , [ esi + hexvar ] push hexvar push - num push eax call hexvar add esp , hexvar test eax , eax jle hexvar add esp , num pop ebx pop esi ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push - num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jle hexvar add esp , num pop ebx pop esi ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push - num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jle hexvar add esp , num pop ebx pop esi ret
push rbx test rdi , rdi je hexvar mov rbx , rdi lea rdi , [ rdi + hexvar ] mov ecx , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar test eax , eax jle hexvar pop rbx ret
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , edi mov eax , dword ptr [ edx + num ] cmp dword ptr [ ecx + hexvar ] , edx mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , ecx mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax je hexvar lea eax , [ edi - hexvar ] sub esp , num push hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + hexvar ] xor eax , eax cmp dword ptr [ edx + hexvar ] , num je hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] cmp qword ptr [ rsi + hexvar ] , rdi mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax je hexvar lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] xor eax , eax cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s6 , a0 move s5 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , num ( a0 ) lw s7 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a0 lw v0 , - hexvar ( gp ) lw a0 , num ( a0 ) sw s5 , hexvar ( sp ) move v1 , v0 sw v0 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( v1 ) lw v0 , hexvar ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov r14 , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] mov r15 , qword ptr [ rax + hexvar ] cmp qword ptr [ rsi + hexvar ] , rdi je hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , qword ptr [ r14 + hexvar ] mov eax , num cmp dword ptr [ rdx + hexvar ] , num je hexvar mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add edx , hexvar mov dword ptr [ esp + hexvar ] , edx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ecx + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , ecx je hexvar sub esp , num push hexvar lea eax , [ edx - hexvar ] push eax call hexvar add esp , hexvar mov edx , dword ptr [ ebp + hexvar ] mov eax , num cmp dword ptr [ edx + hexvar ] , num je hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] cmp qword ptr [ rsi + hexvar ] , rdi mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + num ] , rax je hexvar lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] xor eax , eax cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) move s3 , a0 lw v0 , - hexvar ( gp ) lw a0 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) move s1 , a1 sw ra , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , a0 , num addiu v1 , zero , num lw gp , hexvar ( sp ) addiu v0 , zero , num sw v1 , hexvar ( s0 )
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r5 , r1 mov r6 , r2 mov r1 , num mov r2 , hexvar add r0 , r0 , num bl hexvar mov r2 , num mov r3 , num ldr lr , [ pc , hexvar ] ldr ip , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] str r2 , [ r4 , hexvar ] ldr r2 , [ pc , hexvar ] str r6 , [ r4 ] str r5 , [ r4 , num ] str lr , [ r4 , hexvar ] str ip , [ r4 , hexvar ] str r0 , [ r4 , hexvar ] str r1 , [ r4 , hexvar ] str r2 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] str r3 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc }
push edi push ebx xor eax , eax mov edx , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar lea edi , [ edx + hexvar ] lea ecx , [ edx + num ] mov dword ptr [ edx + num ] , num mov dword ptr [ edx + hexvar ] , num and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx + num ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ edx + hexvar ] , eax pop ebx pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 )
mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov r8 , rdi lea rdi , [ rdi + hexvar ] mov eax , r8d and rdi , hexvar sub eax , edi lea ecx , [ rax + hexvar ] xor eax , eax shr ecx , num rep stosq qword ptr [ rdi ] , rax lea rax , [ rip + hexvar ] mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 ] , rdx mov qword ptr [ r8 + num ] , rsi mov dword ptr [ r8 + hexvar ] , num mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , hexvar ( v0 )
mov r8 , rdi mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num lea rdi , [ rdi + hexvar ] and rdi , hexvar mov eax , r8d sub eax , edi lea ecx , [ rax + hexvar ] shr ecx , num mov ecx , ecx mov eax , num rep stosq qword ptr [ rdi ] , rax mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov qword ptr [ r8 ] , rdx mov qword ptr [ r8 + num ] , rsi lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax mov dword ptr [ r8 + hexvar ] , num ret
mov qword ptr [ rdi + hexvar ] , num mov qword ptr [ rdi + hexvar ] , num mov r8 , rdi lea rdi , [ rdi + hexvar ] mov eax , r8d and rdi , hexvar sub eax , edi lea ecx , [ rax + hexvar ] xor eax , eax shr ecx , num rep stosq qword ptr [ rdi ] , rax lea rax , [ rip + hexvar ] mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov dword ptr [ r8 + hexvar ] , num mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 ] , rdx mov qword ptr [ r8 + num ] , rsi mov dword ptr [ r8 + hexvar ] , num mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ r8 + hexvar ] , rax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 move s2 , a2 addiu a2 , zero , hexvar move a1 , zero addiu a0 , a0 , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , hexvar ( s0 )
add edi , num mov edx , hexvar mov eax , edi sar edi , hexvar imul edx sar edx , num sub edx , edi lea eax , [ rdx * num ] ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar add ecx , num sub ecx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , ecx cdq mov ecx , num idiv ecx shl eax , num add esp , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ eax + num ] mov edx , hexvar mov eax , ecx imul edx sar edx , num mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx shl eax , num pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) addiu v0 , v0 , num lui v1 , hexvar ori v1 , v1 , hexvar mult v0 , v1 mfhi v1 sra v1 , v1 , num sra v0 , v0 , hexvar subu v0 , v1 , v0 sll v0 , v0 , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) addiu v0 , v0 , num lui v1 , hexvar ori v1 , v1 , hexvar mult v0 , v1 mfhi v1 sra v1 , v1 , num sra v0 , v0 , hexvar subu v0 , v1 , v0 sll v0 , v0 , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ eax + num ] mov edx , hexvar mov eax , ecx imul edx sar edx , num mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx shl eax , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ eax + num ] mov edx , hexvar mov eax , ecx imul edx sar edx , num mov eax , ecx sar eax , hexvar sub edx , eax mov eax , edx shl eax , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar add ecx , num sub ecx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , ecx cdq mov ecx , num idiv ecx shl eax , num add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ ebp - num ] , eax mov eax , ecx cdq mov ecx , num idiv ecx shl eax , num add esp , num pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) addiu v0 , v0 , num lui v1 , hexvar ori v1 , v1 , hexvar mult v0 , v1 mfhi v1 sra v1 , v1 , num sra v0 , v0 , hexvar subu v0 , v1 , v0 sll v0 , v0 , num move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
mov r3 , num push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num ldr r1 , [ r3 ] mov r3 , num str r1 , [ sp , hexvar ] mov sl , r0 bl hexvar subs fp , r0 , num bne hexvar mov r3 , num mov r8 , fp ldr sb , [ pc , hexvar ] str fp , [ sp , hexvar ] str fp , [ sp , hexvar ] str r3 , [ sp , hexvar ] mov r2 , sl mov r1 , num add r0 , sp , hexvar bl hexvar cmp r0 , num beq hexvar bl hexvar cmp r0 , hexvar beq hexvar ldr r0 , [ sp , hexvar ] cmp r0 , num beq hexvar bl hexvar mov r0 , num ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp mov ebp , esp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ ebp - hexvar ] , eax push num push num push num push eax mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , edi xor edi , edi call hexvar add esp , hexvar test eax , eax jne hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax push dword ptr [ ebp - hexvar ] push num push num push dword ptr [ ebp - hexvar ] call hexvar xor eax , num add esp , hexvar or edx , eax mov dword ptr [ ebp - hexvar ] , edx je hexvar call hexvar cmp eax , hexvar je hexvar lea esi , [ esi ] mov eax , dword ptr [ ebp - hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar xor eax , eax mov edi , dword ptr [ ebp - hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add edi , hexvar mov dword ptr [ esp + hexvar ] , edi mov ebp , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num push num push num push num push ebp mov ebx , edi call hexvar add esp , hexvar mov edx , num test eax , eax jne hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num lea eax , [ edi - hexvar ] mov dword ptr [ esp + hexvar ] , eax lea edx , [ esp + hexvar ] mov eax , ebp call hexvar cmp eax , - num je hexvar cmp eax , hexvar setne cl cmp eax , hexvar setne dl test cl , dl je hexvar cmp eax , hexvar mov edx , num cmove edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] mov ecx , eax mov edx , dword ptr [ esp + hexvar ] mov eax , ebp call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , num mov eax , edx mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r15 , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov dword ptr [ rsp + hexvar ] , num mov edx , num mov esi , num call hexvar mov edx , num test eax , eax jne hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + hexvar ] , num lea rsi , [ rsp + hexvar ] mov rdi , r15 call hexvar cmp eax , - num je hexvar cmp eax , hexvar setne cl cmp eax , hexvar setne dl test cl , dl je hexvar cmp eax , hexvar setne dl test dl , dl mov edx , num cmove rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx lea r12 , [ rsp + hexvar ] cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov ecx , dword ptr [ rsp + hexvar ] mov edx , eax mov esi , dword ptr [ rsp + hexvar ] mov rdi , r15 call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar call hexvar mov edx , num mov eax , edx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ ebp - hexvar ] , eax push num push num push num push eax mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , edi xor edi , edi call hexvar add esp , hexvar test eax , eax jne hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax push dword ptr [ ebp - hexvar ] push num push num push dword ptr [ ebp - hexvar ] call hexvar xor eax , num add esp , hexvar or edx , eax mov dword ptr [ ebp - hexvar ] , edx je hexvar call hexvar cmp eax , hexvar je hexvar nop mov eax , dword ptr [ ebp - hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar xor eax , eax mov edi , dword ptr [ ebp - hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num push num push num push num push eax mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , edi xor edi , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar add esp , hexvar test eax , eax jne hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] call hexvar cmp eax , - num je hexvar cmp eax , hexvar setne cl cmp eax , hexvar setne dl test cl , dl je hexvar cmp eax , hexvar mov edx , num cmove edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx cmp eax , hexvar je hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov ecx , eax mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar jmp hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] call hexvar cmp eax , - num mov ecx , eax jne hexvar nop mov eax , dword ptr [ ebp - hexvar ] call hexvar mov eax , dword ptr [ ebp - hexvar ] test eax , eax je hexvar sub esp , hexvar mov ebx , dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar xor eax , eax mov edi , dword ptr [ ebp - hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
mov r3 , num push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num ldr r1 , [ r3 ] mov r3 , num str r1 , [ sp , hexvar ] mov sl , r0 bl hexvar subs fp , r0 , num bne hexvar mov r3 , num mov r8 , fp ldr sb , [ pc , hexvar ] str fp , [ sp , hexvar ] str fp , [ sp , hexvar ] str r3 , [ sp , hexvar ] mov r2 , sl mov r1 , num add r0 , sp , hexvar bl hexvar cmp r0 , num beq hexvar bl hexvar cmp r0 , hexvar beq hexvar ldr r0 , [ sp , hexvar ] cmp r0 , num beq hexvar bl hexvar mov r0 , num ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] str r3 , [ sp ] mov r2 , num mov r3 , num bl hexvar cmp r0 , num movne r0 , num bne hexvar mov sb , num str sb , [ sp , hexvar ] str sb , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr sl , [ pc , hexvar ] ldr fp , [ pc , hexvar ] add r1 , sp , hexvar ldr r0 , [ sp , hexvar ] bl hexvar cmn r0 , num beq hexvar cmp r0 , hexvar cmpne r0 , hexvar movne r3 , num moveq r3 , num cmp r0 , hexvar moveq r3 , num andne r3 , r3 , num cmp r3 , num movne sb , num cmp r0 , hexvar beq hexvar bgt hexvar cmp r0 , hexvar beq hexvar cmp r0 , hexvar beq hexvar ldr r3 , [ sp , hexvar ] mov r2 , r0 ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r0 , [ sp , hexvar ] cmp r0 , num moveq r0 , num beq hexvar bl hexvar mov r0 , num ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add edi , hexvar mov dword ptr [ esp + hexvar ] , edi mov ebp , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num push num push num push num push ebp mov ebx , edi call hexvar add esp , hexvar mov edx , num test eax , eax jne hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num lea eax , [ edi - hexvar ] mov dword ptr [ esp + hexvar ] , eax lea edx , [ esp + hexvar ] mov eax , ebp call hexvar cmp eax , - num je hexvar cmp eax , hexvar setne cl cmp eax , hexvar setne dl test cl , dl je hexvar cmp eax , hexvar mov edx , num cmove edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] mov ecx , eax mov edx , dword ptr [ esp + hexvar ] mov eax , ebp call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , num mov eax , edx mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ ebp - hexvar ] , eax push num push num push num push eax mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , edi xor edi , edi call hexvar add esp , hexvar test eax , eax jne hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax push dword ptr [ ebp - hexvar ] push num push num push dword ptr [ ebp - hexvar ] call hexvar xor eax , num add esp , hexvar or edx , eax mov dword ptr [ ebp - hexvar ] , edx je hexvar call hexvar cmp eax , hexvar je hexvar lea esi , [ esi ] mov eax , dword ptr [ ebp - hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar xor eax , eax mov edi , dword ptr [ ebp - hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , esp mov edi , esi add edi , - hexvar mov esp , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , ebx mov eax , dword ptr [ eax - hexvar ] mov dword ptr [ edx - hexvar ] , eax mov eax , dword ptr [ ecx - hexvar ] mov dword ptr [ esi - hexvar ] , eax mov eax , dword ptr [ edx - hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esi - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] xor eax , edx xor ecx , esi or ecx , eax sete al mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] xor edx , dword ptr [ ecx ] xor eax , dword ptr [ ecx + num ] or edx , eax sete al ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , esp mov edi , esi add edi , - hexvar mov esp , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , ebx mov eax , dword ptr [ eax - hexvar ] mov dword ptr [ edx - hexvar ] , eax mov eax , dword ptr [ ecx - hexvar ] mov dword ptr [ esi - hexvar ] , eax mov eax , dword ptr [ edx - hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esi - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] xor eax , edx xor ecx , esi or ecx , eax sete al mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ecx , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ecx ] mov edi , dword ptr [ ecx + num ] mov ecx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ecx + num ] mov ecx , dword ptr [ ecx ] mov eax , esi xor eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , edi xor eax , ebx mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , edx or eax , ecx test eax , eax sete al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ecx , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ecx ] mov edi , dword ptr [ ecx + num ] mov ecx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ecx + num ] mov ecx , dword ptr [ ecx ] mov eax , esi xor eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , edi xor eax , ebx mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , edx or eax , ecx test eax , eax sete al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , esp mov edi , esi add edi , - hexvar mov esp , edi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , ebx mov eax , dword ptr [ eax - hexvar ] mov dword ptr [ edx - hexvar ] , eax mov eax , dword ptr [ ecx - hexvar ] mov dword ptr [ esi - hexvar ] , eax mov eax , dword ptr [ edx - hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esi - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] xor eax , edx xor ecx , esi or ecx , eax sete al mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] mov edi , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edi ] mov edi , dword ptr [ edi + num ] xor edx , edi xor esi , ebx or esi , edx sete dl and dl , num movzx edi , dl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] xor edx , dword ptr [ ecx ] xor eax , dword ptr [ ecx + num ] or edx , eax sete al ret
mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] xor edx , dword ptr [ ecx ] xor eax , dword ptr [ ecx + num ] or edx , eax sete al ret
mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] xor edx , dword ptr [ ecx ] xor eax , dword ptr [ ecx + num ] or edx , eax sete al ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] test edx , edx setne al movzx edx , al mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov eax , dword ptr [ rbp - hexvar ] sub eax , num setne cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov eax , dword ptr [ rbp - hexvar ] sub eax , num setne cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov eax , dword ptr [ rbp - hexvar ] sub eax , num setne cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov eax , dword ptr [ rbp - hexvar ] sub eax , num setne cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi call hexvar mov dword ptr [ rax ] , hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov ax , word ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov word ptr [ rcx + hexvar ] , ax mov dword ptr [ rbp - num ] , num mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov cx , ax mov eax , dword ptr [ ebp + hexvar ] mov word ptr [ eax + hexvar ] , cx mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
cmp edx , num ja hexvar mov word ptr [ rsi + hexvar ] , dx xor eax , eax ret
cmp edx , num ja hexvar mov word ptr [ rsi + hexvar ] , dx mov eax , num ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] test esi , esi setne bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp + hexvar ] sub eax , num setne cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp + hexvar ] sub eax , num setne cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp + hexvar ] sub eax , num setne cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp + hexvar ] sub eax , num setne cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov ax , word ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov word ptr [ ecx + hexvar ] , ax mov dword ptr [ ebp - hexvar ] , num mov ecx , dword ptr [ hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov cx , ax mov eax , dword ptr [ ebp + hexvar ] mov word ptr [ eax + hexvar ] , cx mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov ebx , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov word ptr [ eax + hexvar ] , dx mov eax , num add esp , num pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov cx , ax mov eax , dword ptr [ ebp + hexvar ] mov word ptr [ eax + hexvar ] , cx mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov cx , ax mov eax , dword ptr [ ebp + hexvar ] mov word ptr [ eax + hexvar ] , cx mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov cx , ax mov eax , dword ptr [ ebp + hexvar ] mov word ptr [ eax + hexvar ] , cx mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebx + hexvar ] add ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , ebx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] lea edi , [ eax + num ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num lea edx , [ ebp - hexvar ] push edx push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + hexvar ] sub esp , num push esi push edi push edx lea edx , [ ebx - hexvar ] push edx push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ ebp - hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] add ecx , num mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebx + hexvar ] add ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , ebx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw s0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + num ] add esi , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] add ecx , num mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi lea ebx , [ hexvar ] mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ ebp - hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] add ecx , num mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] lea edi , [ eax + num ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num lea edx , [ ebp - hexvar ] push edx push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + hexvar ] sub esp , num push esi push edi push edx lea edx , [ ebx - hexvar ] push edx push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r4 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] sub r2 , fp , hexvar mov r1 , r2 mov r0 , r3 bl hexvar mov r1 , r0 ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] add r3 , r3 , num ldr r2 , [ fp , - hexvar ] ldr r2 , [ r2 , hexvar ] str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , r1 ldr r2 , [ pc , hexvar ] mov r1 , r4 ldr r0 , [ fp , - hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov rdi , qword ptr [ rbp - hexvar ] movsxd rsi , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov edx , dword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov edi , edx mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov edx , dword ptr [ rcx + hexvar ] add edx , num mov rcx , qword ptr [ rbp - num ] mov r9d , dword ptr [ rcx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] movabs rcx , hexvar mov dword ptr [ rbp - hexvar ] , edx mov rdx , rcx mov rcx , rax mov r8d , dword ptr [ rbp - hexvar ] mov al , num call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movsx eax , byte ptr [ rdi + num ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num jmp hexvar call hexvar mov byte ptr [ rbp - num ] , num mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
sub rsp , num cmp byte ptr [ rdi + num ] , num jne hexvar mov edi , hexvar call hexvar xor edx , edx test eax , eax jne hexvar call hexvar mov edx , num mov eax , edx add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov eax , num mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movsx eax , byte ptr [ rdi + num ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num jmp hexvar call hexvar mov byte ptr [ rbp - num ] , num mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , num ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num b hexvar nop move v0 , zero move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dl , byte ptr [ ecx + num ] test dl , dl setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx xor eax , eax mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax call hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldrb r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num b hexvar mov r3 , num mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar bl hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + num ] test al , al je hexvar mov rax , qword ptr [ rbp - num ] add rax , num jmp hexvar mov eax , num mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar call hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] movsx eax , byte ptr [ rdi + num ] cmp eax , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num jmp hexvar call hexvar mov byte ptr [ rbp - num ] , num mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , num ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num b hexvar nop move v0 , zero move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp ] ldr r3 , [ r3 ] str r3 , [ sp , num ] ldr r3 , [ sp ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] add r2 , r3 , num str r2 , [ sp , num ] ldr r2 , [ sp ] add r3 , r2 , r3 mvn r2 , hexvar strb r2 , [ r3 , num ] ldr r2 , [ sp ] ldr r3 , [ sp , num ] add r3 , r2 , r3 add r0 , r3 , num ldr r3 , [ sp , num ] rsb r3 , r3 , num mov r2 , r3 mov r1 , num bl hexvar ldr r3 , [ sp ] add r3 , r3 , num mov r2 , num mov r1 , r3 ldr r0 , [ sp ] bl hexvar ldr r3 , [ sp ] add r3 , r3 , hexvar mov r2 , num mov r1 , r3 ldr r0 , [ sp , num ] bl hexvar ldr r3 , [ sp , num ] add r0 , r3 , num ldr r3 , [ sp ] add r3 , r3 , hexvar mov r2 , num mov r1 , r3 bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] mov edx , dword ptr [ esi + hexvar ] test eax , eax jne hexvar cmp edx , num je hexvar mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ edi ] , eax mov dword ptr [ edi + num ] , edx mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ edi + num ] , eax mov dword ptr [ edi + hexvar ] , edx mov eax , num pop ebx pop esi pop edi ret
push r15 push r14 push rbx mov rbx , rsi mov r14 , rdi mov eax , dword ptr [ rsi ] mov ecx , dword ptr [ rsi + hexvar ] test rax , rax jne hexvar cmp ecx , num jne hexvar cmp ecx , num jne hexvar mov byte ptr [ rbx + rax + num ] , hexvar lea eax , [ rax + num ] mov ecx , eax lea rdi , [ rbx + rcx ] add rdi , num lea r15 , [ rbx + num ] mov edx , num sub edx , eax xor esi , esi call hexvar mov edx , num mov rdi , rbx mov rsi , r15 call hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 + num ] , rax mov eax , num pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov rbx , rsi mov r14 , rdi mov eax , dword ptr [ rsi ] mov ecx , dword ptr [ rsi + hexvar ] test rax , rax jne hexvar cmp ecx , num jne hexvar cmp ecx , num jne hexvar mov byte ptr [ rbx + rax + num ] , hexvar lea eax , [ rax + num ] mov ecx , eax lea rdi , [ rbx + rcx ] add rdi , num lea r15 , [ rbx + num ] mov edx , num sub edx , eax xor esi , esi call hexvar mov edx , num mov rdi , rbx mov rsi , r15 call hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 + num ] , rax mov eax , num pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov rbx , rsi mov r14 , rdi mov eax , dword ptr [ rsi ] mov ecx , dword ptr [ rsi + hexvar ] test rax , rax jne hexvar cmp ecx , num jne hexvar cmp ecx , num jne hexvar mov byte ptr [ rbx + rax + num ] , hexvar lea eax , [ rax + num ] mov ecx , eax lea rdi , [ rbx + rcx ] add rdi , num lea r15 , [ rbx + num ] mov edx , num sub edx , eax xor esi , esi call hexvar mov edx , num mov rdi , rbx mov rsi , r15 call hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 + num ] , rax mov eax , num pop rbx pop r14 pop r15 ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] mov edx , dword ptr [ esi + hexvar ] test eax , eax jne hexvar cmp edx , num je hexvar mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ edi ] , eax mov dword ptr [ edi + num ] , edx mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ edi + num ] , eax mov dword ptr [ edi + hexvar ] , edx mov eax , num pop ebx pop esi pop edi ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r13 , rsi mov eax , dword ptr [ rsi ] mov dword ptr [ rsp + num ] , eax mov eax , dword ptr [ rsi + hexvar ] cmp dword ptr [ rsp + num ] , num mov r14 , rdi setne byte ptr [ rsp + num ] cmp eax , num sete byte ptr [ rsp + num ] lea r15 , [ rsi + num ] mov eax , hexvar mov ebp , hexvar jmp hexvar nop dword ptr [ rax ] mov ecx , dword ptr [ rsp + num ] add ecx , num mov eax , dword ptr [ rsp + num ] mov byte ptr [ r13 + rax + num ] , hexvar mov eax , hexvar mov edx , ecx lea r12 , [ rdx + r13 ] add r12 , num mov ebx , num sub ebx , ecx jmp hexvar movzx ecx , byte ptr [ rsp + num ] cmp byte ptr [ rsp + num ] , num mov eax , hexvar cmovne eax , ebp test cl , cl cmovne eax , ebp cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , r12 xor esi , esi mov rdx , rbx call hexvar mov edx , num mov rdi , r13 mov rsi , r15 call hexvar mov eax , hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp byte ptr [ rsp + num ] , num mov eax , hexvar mov ecx , hexvar cmovne eax , ecx mov ecx , dword ptr [ rsp + num ] jmp hexvar mov rax , qword ptr [ r13 + hexvar ] mov qword ptr [ r14 ] , rax mov rax , qword ptr [ r13 + hexvar ] mov qword ptr [ r14 + num ] , rax mov eax , num add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push r15 push r14 push rbx mov rbx , rsi mov r14 , rdi mov eax , dword ptr [ rsi ] mov ecx , dword ptr [ rsi + hexvar ] test rax , rax jne hexvar cmp ecx , num jne hexvar cmp ecx , num jne hexvar mov byte ptr [ rbx + rax + num ] , hexvar lea eax , [ rax + num ] mov ecx , eax lea rdi , [ rbx + rcx ] add rdi , num lea r15 , [ rbx + num ] mov edx , num sub edx , eax xor esi , esi call hexvar mov edx , num mov rdi , rbx mov rsi , r15 call hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 + num ] , rax mov eax , num pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov rbx , rsi mov r14 , rdi mov eax , dword ptr [ rsi ] mov ecx , dword ptr [ rsi + hexvar ] test rax , rax jne hexvar cmp ecx , num jne hexvar cmp ecx , num jne hexvar mov byte ptr [ rbx + rax + num ] , hexvar lea eax , [ rax + num ] mov ecx , eax lea rdi , [ rbx + rcx ] add rdi , num lea r15 , [ rbx + num ] mov edx , num sub edx , eax xor esi , esi call hexvar mov edx , num mov rdi , rbx mov rsi , r15 call hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 ] , rax mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ r14 + num ] , rax mov eax , num pop rbx pop r14 pop r15 ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] mov edx , dword ptr [ esi + hexvar ] test eax , eax jne hexvar cmp edx , num jne hexvar cmp edx , num je hexvar mov edx , num sub edx , eax lea eax , [ esi + eax + num ] sub esp , num push edx push num push eax call hexvar lea edx , [ esi + num ] mov ecx , num mov eax , esi call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ edi ] , eax mov dword ptr [ edi + num ] , edx mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] mov dword ptr [ edi + num ] , eax mov dword ptr [ edi + hexvar ] , edx mov eax , num pop ebx pop esi pop edi ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] mov r0 , r0 add sp , fp , num pop { fp } bx lr strbvs r2 , [ r5 , -r1 , lsl num ] svc hexvar
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] mov r0 , r0 add sp , fp , num pop { fp } bx lr strbvs r2 , [ r5 , -r1 , lsl num ] svc hexvar
lui v0 , hexvar sw zero , hexvar ( a0 ) sw zero , hexvar ( a0 ) addiu v0 , v0 , hexvar sw zero , hexvar ( a0 ) sw v0 , ( a0 ) lui v0 , hexvar ori v0 , v0 , hexvar sw v0 , num ( a0 ) lui v0 , hexvar ori v0 , v0 , hexvar sw v0 , num ( a0 ) lui v0 , hexvar addiu v0 , v0 , hexvar jr ra sw v0 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , hexvar mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num add esp , hexvar pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , hexvar ] mov r0 , r0 add sp , fp , num pop { fp } bx lr strbvs r2 , [ r5 , -r1 , lsl num ] svc hexvar
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
lui v0 , hexvar sw zero , hexvar ( a0 ) sw zero , hexvar ( a0 ) addiu v0 , v0 , hexvar sw zero , hexvar ( a0 ) sw v0 , ( a0 ) lui v0 , hexvar ori v0 , v0 , hexvar sw v0 , num ( a0 ) lui v0 , hexvar ori v0 , v0 , hexvar sw v0 , num ( a0 ) lui v0 , hexvar addiu v0 , v0 , hexvar jr ra sw v0 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] mov dword ptr [ edx ] , hexvar mov edx , dword ptr [ eax ] mov dword ptr [ edx + num ] , hexvar mov edx , dword ptr [ eax ] mov dword ptr [ edx + num ] , hexvar mov edx , dword ptr [ eax ] mov dword ptr [ edx + hexvar ] , hexvar mov edx , dword ptr [ eax ] mov dword ptr [ edx + hexvar ] , num mov edx , dword ptr [ eax ] mov dword ptr [ edx + hexvar ] , num mov eax , dword ptr [ eax ] mov dword ptr [ eax + hexvar ] , num mov esp , ebp pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - num ] , eax add esp , num pop ebp ret
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] stm sp , { r2 , r3 } bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , hexvar ] ldm sp , { r2 , r3 } ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] blx r4 mov r0 , r0 add sp , sp , hexvar pop { r4 , pc }
push rbp push r14 push rbx sub rsp , hexvar mov r14d , esi mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , r14d add rsp , hexvar pop rbx pop r14 pop rbp jmp rax movsd qword ptr [ rsp + num ] , xmm0 call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbp movsd xmm0 , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar jmp hexvar mov rdi , rbp call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax movsd xmm0 , qword ptr [ rsp + num ] jne hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov r14d , esi mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , r14d add rsp , hexvar pop rbx pop r14 pop rbp jmp rax movsd qword ptr [ rsp + num ] , xmm0 call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbp movsd xmm0 , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar jmp hexvar mov rdi , rbp call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax movsd xmm0 , qword ptr [ rsp + num ] jne hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov r14d , esi mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , r14d add rsp , hexvar pop rbx pop r14 pop rbp jmp rax movsd qword ptr [ rsp + num ] , xmm0 call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbp movsd xmm0 , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar jmp hexvar mov rdi , rbp call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax movsd xmm0 , qword ptr [ rsp + num ] jne hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar movsd qword ptr [ rsp + hexvar ] , xmm0 mov ebp , esi mov rbx , rdi call hexvar mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov r14d , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r14d nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdi , rbx mov esi , ebp movsd xmm0 , qword ptr [ rsp + hexvar ] call rax mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) jal hexvar nop sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push r14 push rbx sub rsp , hexvar mov r14d , esi mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , r14d add rsp , hexvar pop rbx pop r14 pop rbp jmp rax movsd qword ptr [ rsp + num ] , xmm0 call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbp movsd xmm0 , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar jmp hexvar mov rdi , rbp call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax movsd xmm0 , qword ptr [ rsp + num ] jne hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar movsd qword ptr [ rsp + hexvar ] , xmm0 mov ebp , esi mov rbx , rdi call hexvar mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov r14d , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r14d nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r14d jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdi , rbx mov esi , ebp movsd xmm0 , qword ptr [ rsp + hexvar ] call rax mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , - hexvar ( s0 ) beqz v0 , hexvar move s1 , a0 lw t9 , hexvar ( v0 ) beqz t9 , hexvar lw ra , hexvar ( sp ) move a0 , s1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal - hexvar move a0 , s2 lw gp , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp push r14 push rbx sub rsp , hexvar mov r14d , esi mov rbx , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rdi , rbx mov esi , r14d add rsp , hexvar pop rbx pop r14 pop rbp jmp rax movsd qword ptr [ rsp + num ] , xmm0 call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov qword ptr [ rip + hexvar ] , rbp movsd xmm0 , qword ptr [ rsp + num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar jmp hexvar mov rdi , rbp call hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax movsd xmm0 , qword ptr [ rsp + num ] jne hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r14 , rdi mov r15 , rsi mov rbp , rdx mov r12 , rcx mov r13 , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov rax , rdx shr rax , num lea rdi , [ rax + rax * num + num ] mov qword ptr [ rsp ] , rdi call hexvar mov qword ptr [ r12 ] , rax mov ebx , num test rax , rax je hexvar mov r8 , rsp mov rcx , rax mov rdx , rbp mov rsi , r15 mov rdi , r14 call hexvar mov ebx , eax test al , al je hexvar test r13 , r13 je hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ r13 ] , rax mov eax , ebx mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] shr eax , num lea eax , [ eax + eax * num + num ] mov dword ptr [ esp + hexvar ] , eax push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax je hexvar sub esp , hexvar lea edx , [ esp + hexvar ] push edx push eax push dword ptr [ esp + hexvar ] push ebp push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test al , al je hexvar test edi , edi je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edi ] , edx jmp hexvar lea esi , [ esi ] mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar srl v0 , a2 , num sw s0 , hexvar ( sp ) sw s3 , hexvar ( sp ) addiu v1 , v0 , num lw s0 , - hexvar ( gp ) move s3 , a0 sll v0 , v1 , num lw t9 , - hexvar ( gp ) sw s5 , hexvar ( sp ) move s5 , a1 addu v0 , v0 , v1 sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s4 , a2 sw s1 , hexvar ( sp ) move s1 , a3 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , ( s0 ) lw s2 , hexvar ( sp ) sw a0 , hexvar ( sp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , ( s1 ) move a3 , v0 addiu v0 , sp , hexvar move a2 , s4 sw v0 , hexvar ( sp ) move a1 , s5 jal hexvar move a0 , s3 beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s2 , hexvar lw v1 , hexvar ( sp ) b hexvar sw v1 , ( s2 ) addiu v0 , zero , num lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) lw a0 , ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s0 , a2 move s1 , a3 lw s2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) srl a0 , a2 , num addiu v0 , a0 , num sll a0 , v0 , num addu a0 , a0 , v0 sw a0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , ( s1 )
push r14 push r13 mov r14 , rdx push r12 push rbp mov r12 , rdi push rbx mov r13 , rsi mov rbx , rcx mov rbp , r8 sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , rdx shr rax , num lea rdi , [ rax + rax * num + num ] mov qword ptr [ rsp + hexvar ] , rdi call hexvar test rax , rax mov qword ptr [ rbx ] , rax je hexvar lea r8 , [ rsp + hexvar ] mov rcx , rax mov rdx , r14 mov rsi , r13 mov rdi , r12 call hexvar test al , al je hexvar test rbp , rbp je hexvar mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rbp ] , rdx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] shr ebx , num imul ebx , ebx , num add ebx , num mov dword ptr [ ebp - hexvar ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax ] , num jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s4 , a1 move s0 , a2 move s1 , a3 lw s2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) srl a0 , a2 , num addiu v0 , a0 , num sll a0 , v0 , num addu a0 , a0 , v0 sw a0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , ( s1 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] shr ebx , num imul ebx , ebx , num add ebx , num mov dword ptr [ ebp - hexvar ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax ] , num jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] lsr r3 , r3 , num add r2 , r3 , num mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 mov r2 , r3 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 ] sub r3 , fp , hexvar str r3 , [ sp ] mov r3 , r2 ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 ] mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc } ldrbeq r0 , [ r5 , hexvar ] andeq r0 , r0 , r0
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] shr ebx , num imul ebx , ebx , num add ebx , num mov dword ptr [ ebp - hexvar ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax ] , num jne hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi lea eax , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , hexvar mov eax , dword ptr [ edi + num ] push ebx add ebx , num call dword ptr [ eax + hexvar ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , edx mov dword ptr [ esp ] , ebx call dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s2 , a0 move s1 , a1 move s0 , a2 lw v0 , num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , hexvar mov eax , dword ptr [ edi + num ] push ebx add ebx , num call dword ptr [ eax + hexvar ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , edx mov dword ptr [ esp ] , ebx call dword ptr [ eax + hexvar ] add esp , hexvar mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push r12 push rbp push rbx mov r12 , rdi mov rbx , rsi mov rbp , rdx mov rax , qword ptr [ rdi + num ] mov rdi , rsi call qword ptr [ rax + hexvar ] mov qword ptr [ rbp ] , rax lea rdi , [ rbx + num ] mov rax , qword ptr [ r12 + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + num ] , rax mov qword ptr [ rbp + hexvar ] , num pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
xor eax , eax movabs rcx , hexvar add rdi , num movzx edx , byte ptr [ rdi - num ] test dl , dl je hexvar shl rax , num add rax , rdx mov rdx , rax and edx , hexvar je hexvar shr rdx , hexvar and rax , rcx add rdi , num xor rax , rdx movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar mov eax , eax ret
xor eax , eax movabs rcx , hexvar add rdi , num movzx edx , byte ptr [ rdi - num ] test dl , dl je hexvar shl rax , num add rax , rdx mov rdx , rax and edx , hexvar je hexvar shr rdx , hexvar and rax , rcx add rdi , num xor rax , rdx movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar mov eax , eax ret
xor eax , eax movabs rcx , hexvar add rdi , num movzx edx , byte ptr [ rdi - num ] test dl , dl je hexvar shl rax , num add rax , rdx mov rdx , rax and edx , hexvar je hexvar shr rdx , hexvar and rax , rcx add rdi , num xor rax , rdx movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar mov eax , eax ret
mov ecx , dword ptr [ esp + num ] xor eax , eax add ecx , num movzx edx , byte ptr [ ecx - num ] test dl , dl je hexvar shl eax , num add eax , edx mov edx , eax and edx , hexvar je hexvar shr edx , hexvar and eax , hexvar add ecx , num xor eax , edx movzx edx , byte ptr [ ecx - num ] test dl , dl jne hexvar ret mov esi , esi lea edi , [ edi ]
move v0 , zero lui a3 , hexvar addiu a0 , a0 , num lbu v1 , - num ( a0 ) beqz v1 , hexvar sll a1 , v0 , num addu v0 , v1 , a1 and v1 , v0 , a3 ext a1 , v0 , num , hexvar beqz v1 , hexvar srl a2 , v1 , hexvar addiu a0 , a0 , num lbu v1 , - num ( a0 ) xor v0 , a2 , a1 bnez v1 , hexvar sll a1 , v0 , num jr ra nop
mov ecx , dword ptr [ esp + num ] xor eax , eax add ecx , num movzx edx , byte ptr [ ecx - num ] test dl , dl je hexvar shl eax , num add eax , edx mov edx , eax and edx , hexvar je hexvar shr edx , hexvar and eax , hexvar add ecx , num xor eax , edx movzx edx , byte ptr [ ecx - num ] test dl , dl jne hexvar ret mov esi , esi lea edi , [ edi ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , qword ptr [ rbp - num ] mov qword ptr [ rax ] , r8 mov rax , qword ptr [ rax ] mov qword ptr [ rcx ] , rax mov qword ptr [ rdx ] , num mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , rcx add rdx , num mov qword ptr [ rax ] , rdx movzx esi , byte ptr [ rcx ] mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , esi cmp esi , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] shl rcx , num mov rdx , qword ptr [ rbp - hexvar ] movsxd rsi , dword ptr [ rdx ] add rcx , rsi mov qword ptr [ rax ] , rcx mov ecx , hexvar and rcx , qword ptr [ rax ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rcx cmp rcx , num setne dil mov byte ptr [ rbp - hexvar ] , dil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] shr rcx , hexvar mov rdx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr [ rdx ] mov qword ptr [ rdx ] , rcx mov rcx , qword ptr [ rax ] xor rcx , qword ptr [ rdx ] mov qword ptr [ rdx ] , rcx jmp hexvar jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] and rax , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rax ] test edx , edx setne sil mov dword ptr [ rbp - hexvar ] , edx movzx edx , sil mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] shl rax , num movsxd rcx , dword ptr [ rbp - hexvar ] add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar and rax , rcx mov qword ptr [ rbp - hexvar ] , rax setne dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] xor rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , hexvar and rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rbp - hexvar ] , rcx movzx edx , byte ptr [ rax ] mov dword ptr [ rbp - hexvar ] , edx cmp edx , num mov edx , hexvar mov esi , hexvar cmovne esi , edx mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shl rax , num movsxd rcx , dword ptr [ rbp - hexvar ] add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov eax , hexvar and rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp rax , num mov edx , hexvar mov esi , hexvar cmovne esi , edx mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar xor rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , hexvar and rax , qword ptr [ rbp - hexvar ] pop rbp ret
xor eax , eax movabs rcx , hexvar add rdi , num movzx edx , byte ptr [ rdi - num ] test dl , dl je hexvar shl rax , num add rax , rdx mov rdx , rax and edx , hexvar je hexvar shr rdx , hexvar and rax , rcx add rdi , num xor rax , rdx movzx edx , byte ptr [ rdi - num ] test dl , dl jne hexvar mov eax , eax ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sp , sp , hexvar mov r4 , r0 mov r6 , r1 mov r7 , r2 mov sb , r3 ldr r8 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] ldr r5 , [ r3 , hexvar ] cmp r5 , num beq hexvar str r8 , [ sp , num ] str sb , [ sp ] mov r3 , num blx r5 cmp r0 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov r12 , rsi mov r13 , rdx mov r15 , rcx mov r14 , r8 mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rdi + num ] mov rbp , qword ptr [ rax + hexvar ] mov r10 , qword ptr [ rbp + hexvar ] test r10 , r10 je hexvar mov r9 , r8 mov r8 , rcx mov ecx , num mov eax , num call r10
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , edx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ecx mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edi mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov ebp , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ebp xor ebp , ebp mov eax , dword ptr [ esi + num ] mov ebp , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] test eax , eax je hexvar sub esp , num push dword ptr [ esp + num ] push edi push num push ecx push edx push esi call eax add esp , hexvar test eax , eax je hexvar mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar lw v0 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar lw v0 , hexvar ( v0 ) sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw s5 , hexvar ( sp ) move s5 , a2 sw s4 , hexvar ( sp ) move s4 , a1 sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) lw t9 , hexvar ( v0 ) lw s3 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz t9 , hexvar addiu a3 , zero , num sw s3 , hexvar ( sp ) jalr t9 sw s2 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu s6 , sp , hexvar addiu a2 , zero , hexvar move a1 , zero jalr t9 move a0 , s6 addiu a2 , zero , hexvar lw gp , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , edx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ecx mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edi mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov ebp , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ebp xor ebp , ebp mov eax , dword ptr [ esi + num ] mov ebp , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] test eax , eax je hexvar sub esp , num push dword ptr [ esp + num ] push edi push num push ecx push edx push esi call eax add esp , hexvar test eax , eax je hexvar mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + num ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] test rcx , rcx setne al movzx r9d , al mov ecx , r9d mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov r9 , qword ptr [ rbp - hexvar ] xor ecx , ecx mov r10b , cl mov ecx , num mov qword ptr [ rbp - hexvar ] , rax mov al , r10b mov r11 , qword ptr [ rbp - hexvar ] call r11
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sp , sp , hexvar mov r4 , r0 mov r6 , r1 mov r7 , r2 mov sb , r3 ldr r8 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] ldr r5 , [ r3 , hexvar ] cmp r5 , num beq hexvar str r8 , [ sp , num ] str sb , [ sp ] mov r3 , num blx r5 cmp r0 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
ldr ip , [ r0 , num ] push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr lr , [ ip , hexvar ] ldr r6 , [ pc , hexvar ] ldr r4 , [ lr , hexvar ] ldr ip , [ r6 ] sub sp , sp , hexvar cmp r4 , num mov r5 , r0 mov r8 , r3 str ip , [ sp , hexvar ] mov fp , r1 mov sl , r2 ldr sb , [ sp , hexvar ] beq hexvar stm sp , { r8 , sb } mov r3 , num blx r4 subs r7 , r0 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] mov r0 , r7 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
lui gp , hexvar lw v0 , num ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] add ecx , hexvar mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] add r3 , r3 , hexvar mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] add edx , hexvar sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , num mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi cmp dword ptr [ eax ] , num sete bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov ecx , num mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar sub esp , num push num push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu a1 , zero , num lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov eax , num mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar mov eax , num mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push rbp push rbx sub rsp , num mov ebx , edi mov ebp , esi test edi , edi jne hexvar mov esi , num mov edi , ebp call hexvar mov esi , ebp mov edi , ebx call hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , num mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , num mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rbp - num ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , num mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] cmp esi , edx je hexvar add eax , hexvar cmp esi , eax je hexvar test byte ptr [ esi + hexvar ] , hexvar je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp esi , eax je hexvar lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp esi , eax je hexvar test byte ptr [ esi + hexvar ] , hexvar je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] cmp esi , edx je hexvar add eax , hexvar cmp esi , eax je hexvar test byte ptr [ esi + hexvar ] , hexvar je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar lea rax , [ rax + hexvar ] cmp rsi , rax je hexvar test byte ptr [ rsi + hexvar ] , hexvar je hexvar ret push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rsi mov rbp , rdi mov rdi , rsi call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp esi , eax je hexvar lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp esi , eax je hexvar test byte ptr [ esi + hexvar ] , hexvar je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar sub rax , hexvar cmp rsi , rax je hexvar test byte ptr [ rsi + hexvar ] , hexvar je hexvar ret nop push r13 push r12 push rbp push rbx mov rbp , rdi mov rdi , rsi mov rbx , rsi sub rsp , num call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp esi , eax je hexvar lea eax , [ ebx + hexvar ] lea eax , [ eax + hexvar ] cmp esi , eax je hexvar test byte ptr [ esi + hexvar ] , hexvar je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar lea rax , [ rax + hexvar ] cmp rsi , rax je hexvar test byte ptr [ rsi + hexvar ] , hexvar je hexvar ret push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rsi mov rbp , rdi mov rdi , rsi call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
lea rax , [ rip + hexvar ] cmp rsi , rax je hexvar add rax , hexvar cmp rsi , rax je hexvar test byte ptr [ rsi + hexvar ] , hexvar je hexvar ret nop push r13 push r12 push rbp push rbx mov rbp , rdi mov rdi , rsi mov rbx , rsi sub rsp , num call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) addiu v0 , v0 , hexvar beq v1 , v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) addiu v0 , v0 , hexvar beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebx + hexvar ] cmp esi , num je hexvar cmp esi , num je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax lea eax , [ ebx - hexvar ] push eax call hexvar pop edx pop ecx push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax mov dword ptr [ ebx + hexvar ] , edi mov byte ptr [ edi ] , num cmp dword ptr [ ebx + hexvar ] , num jne hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar mov edx , dword ptr [ ebx + hexvar ] add dword ptr [ ebx + hexvar ] , num test dl , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar lea eax , [ edx * num ] mov ecx , dword ptr [ ebx + hexvar ] and eax , num add eax , dword ptr [ ebx + hexvar ] cmp esi , num je hexvar and edx , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar mov edx , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ edx + eax * num ] push ecx call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov ebx , edi mov r12d , esi mov rbp , qword ptr [ rip + hexvar ] cmp edi , num je hexvar cmp edi , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rbp mov byte ptr [ rbp ] , num cmp dword ptr [ rip + hexvar ] , num jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar add qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rip + hexvar ] test dl , num je hexvar or dword ptr [ rip + hexvar ] , hexvar lea eax , [ rdx * num ] and eax , num cmp ebx , num je hexvar test dl , num je hexvar or dword ptr [ rip + hexvar ] , hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov byte ptr [ rbp ] , hexvar lea rbp , [ rbp + num ] jmp hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar test byte ptr [ rip + hexvar ] , num je hexvar or dword ptr [ rip + hexvar ] , hexvar mov byte ptr [ rbp ] , hexvar lea rbp , [ rbp + num ] jmp hexvar mov byte ptr [ rbp ] , hexvar lea rbp , [ rbp + num ] mov eax , dword ptr [ rip + hexvar ] and eax , hexvar or dword ptr [ rip + hexvar ] , eax jmp hexvar call hexvar or dword ptr [ rip + hexvar ] , hexvar test edx , edx je hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar mov esi , r12d mov edi , ebx call hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebx + hexvar ] cmp esi , num je hexvar cmp esi , num je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax lea eax , [ ebx - hexvar ] push eax call hexvar pop edx pop ecx push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax mov dword ptr [ ebx + hexvar ] , edi mov byte ptr [ edi ] , num cmp dword ptr [ ebx + hexvar ] , num movzx eax , byte ptr [ ebx + hexvar ] jne hexvar test al , al je hexvar mov edx , dword ptr [ ebx + hexvar ] add dword ptr [ ebx + hexvar ] , num test dl , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar lea eax , [ edx * num ] mov ecx , dword ptr [ ebx + hexvar ] and eax , num add eax , dword ptr [ ebx + hexvar ] cmp esi , num je hexvar and edx , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar mov edx , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ edx + eax * num ] push ecx call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebx + hexvar ] cmp esi , num je hexvar cmp esi , num je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax lea eax , [ ebx - hexvar ] push eax call hexvar pop edx pop ecx push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax mov dword ptr [ ebx + hexvar ] , edi mov byte ptr [ edi ] , num cmp dword ptr [ ebx + hexvar ] , num jne hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar mov edx , dword ptr [ ebx + hexvar ] add dword ptr [ ebx + hexvar ] , num test dl , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar lea eax , [ edx * num ] mov ecx , dword ptr [ ebx + hexvar ] and eax , num add eax , dword ptr [ ebx + hexvar ] cmp esi , num je hexvar and edx , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar mov edx , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ edx + eax * num ] push ecx call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov ebx , edi mov r12d , esi mov rbp , qword ptr [ rip + hexvar ] cmp edi , num je hexvar cmp edi , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rbp mov byte ptr [ rbp ] , num cmp dword ptr [ rip + hexvar ] , num jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar add qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rip + hexvar ] test dl , num je hexvar or dword ptr [ rip + hexvar ] , hexvar lea eax , [ rdx * num ] and eax , num cmp ebx , num je hexvar test dl , num je hexvar or dword ptr [ rip + hexvar ] , hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov byte ptr [ rbp ] , hexvar lea rbp , [ rbp + num ] jmp hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar test byte ptr [ rip + hexvar ] , num je hexvar or dword ptr [ rip + hexvar ] , hexvar mov byte ptr [ rbp ] , hexvar lea rbp , [ rbp + num ] jmp hexvar mov byte ptr [ rbp ] , hexvar lea rbp , [ rbp + num ] mov eax , dword ptr [ rip + hexvar ] and eax , hexvar or dword ptr [ rip + hexvar ] , eax jmp hexvar call hexvar or dword ptr [ rip + hexvar ] , hexvar test edx , edx je hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar mov esi , r12d mov edi , ebx call hexvar pop rbx pop rbp pop r12 ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebx + hexvar ] cmp esi , num je hexvar cmp esi , num je hexvar sub esp , num push num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax call hexvar call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , edi mov byte ptr [ edi ] , num cmp dword ptr [ ebx + hexvar ] , num jne hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar add dword ptr [ ebx + hexvar ] , num mov edx , dword ptr [ ebx + hexvar ] test dl , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar lea eax , [ edx * num ] and eax , num cmp esi , num je hexvar test dl , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar add eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ edx + eax * num ] call hexvar jmp hexvar cmp byte ptr [ ebx + hexvar ] , num jne hexvar mov byte ptr [ edi ] , hexvar lea edi , [ edi + num ] jmp hexvar cmp byte ptr [ ebx + hexvar ] , num jne hexvar test byte ptr [ ebx + hexvar ] , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar mov byte ptr [ edi ] , hexvar lea edi , [ edi + num ] jmp hexvar mov byte ptr [ edi ] , hexvar lea edi , [ edi + num ] mov eax , dword ptr [ ebx + hexvar ] and eax , hexvar or dword ptr [ ebx + hexvar ] , eax jmp hexvar call hexvar or dword ptr [ ebx + hexvar ] , hexvar test edx , edx je hexvar add eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ edx + eax * num ] call hexvar jmp hexvar add eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ edx + eax * num ] call hexvar jmp hexvar add eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ edx + eax * num ] call hexvar jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar pop ebx pop esi pop edi ret
cmp edi , num push r12 mov r12d , esi push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx mov ebx , edi je hexvar cmp edi , num je hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rbp mov byte ptr [ rbp ] , num cmp dword ptr [ rip + hexvar ] , num jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar mov edx , dword ptr [ rip + hexvar ] add qword ptr [ rip + hexvar ] , num test dl , num je hexvar or dword ptr [ rip + hexvar ] , hexvar lea eax , [ rdx * num ] mov rdi , qword ptr [ rip + hexvar ] and eax , num add eax , dword ptr [ rip + hexvar ] cmp ebx , num cdqe je hexvar and edx , num je hexvar mov rdx , qword ptr [ rip + hexvar ] or dword ptr [ rip + hexvar ] , hexvar mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov qword ptr [ rip + hexvar ] , rax pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx mov ebx , edi mov r12d , esi mov rbp , qword ptr [ rip + hexvar ] cmp edi , num je hexvar cmp edi , num je hexvar mov edx , num lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax call hexvar mov qword ptr [ rip + hexvar ] , rbp mov byte ptr [ rbp ] , num cmp dword ptr [ rip + hexvar ] , num jne hexvar cmp byte ptr [ rip + hexvar ] , num je hexvar add qword ptr [ rip + hexvar ] , num mov edx , dword ptr [ rip + hexvar ] test dl , num je hexvar or dword ptr [ rip + hexvar ] , hexvar lea eax , [ rdx * num ] and eax , num cmp ebx , num je hexvar test dl , num je hexvar or dword ptr [ rip + hexvar ] , hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar mov byte ptr [ rbp ] , hexvar lea rbp , [ rbp + num ] jmp hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar test byte ptr [ rip + hexvar ] , num je hexvar or dword ptr [ rip + hexvar ] , hexvar mov byte ptr [ rbp ] , hexvar lea rbp , [ rbp + num ] jmp hexvar mov byte ptr [ rbp ] , hexvar lea rbp , [ rbp + num ] mov eax , dword ptr [ rip + hexvar ] and eax , hexvar or dword ptr [ rip + hexvar ] , eax jmp hexvar call hexvar or dword ptr [ rip + hexvar ] , hexvar test edx , edx je hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar add eax , dword ptr [ rip + hexvar ] cdqe mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx + rax * num ] call hexvar jmp hexvar mov esi , r12d mov edi , ebx call hexvar pop rbx pop rbp pop r12 ret
cmp edi , num push r12 mov r12d , esi push rbp mov rbp , qword ptr [ rip + hexvar ] push rbx mov ebx , edi je hexvar cmp edi , num je hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rsi , rax call hexvar mov qword ptr [ rip + hexvar ] , rax mov qword ptr [ rip + hexvar ] , rbp mov byte ptr [ rbp ] , num cmp dword ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] jne hexvar test al , al je hexvar mov edx , dword ptr [ rip + hexvar ] add qword ptr [ rip + hexvar ] , num test dl , num je hexvar or dword ptr [ rip + hexvar ] , hexvar lea eax , [ rdx * num ] mov rdi , qword ptr [ rip + hexvar ] and eax , num add eax , dword ptr [ rip + hexvar ] cmp ebx , num cdqe je hexvar and edx , num je hexvar mov rdx , qword ptr [ rip + hexvar ] or dword ptr [ rip + hexvar ] , hexvar mov rsi , qword ptr [ rdx + rax * num ] call hexvar mov qword ptr [ rip + hexvar ] , rax pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebx + hexvar ] cmp esi , num je hexvar cmp esi , num je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax lea eax , [ ebx - hexvar ] push eax call hexvar pop edx pop ecx push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax mov dword ptr [ ebx + hexvar ] , edi mov byte ptr [ edi ] , num cmp dword ptr [ ebx + hexvar ] , num movzx eax , byte ptr [ ebx + hexvar ] jne hexvar test al , al je hexvar mov edx , dword ptr [ ebx + hexvar ] add dword ptr [ ebx + hexvar ] , num test dl , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar lea eax , [ edx * num ] mov ecx , dword ptr [ ebx + hexvar ] and eax , num add eax , dword ptr [ ebx + hexvar ] cmp esi , num je hexvar and edx , num je hexvar or dword ptr [ ebx + hexvar ] , hexvar mov edx , dword ptr [ ebx + hexvar ] sub esp , num push dword ptr [ edx + eax * num ] push ecx call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] mov esi , edx sub esi , hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] test eax , eax js hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num blt hexvar cmp r3 , hexvar ble hexvar cmp r3 , hexvar bne hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] test eax , eax js hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] bic r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] cmp r3 , hexvar bne hexvar mov r3 , num b hexvar mov r3 , num and r3 , r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] test eax , eax js hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovbe ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push rbx sub rsp , hexvar mov rbx , rsi movzx eax , byte ptr [ rdi ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp ] , rsi movzx eax , byte ptr [ rdi + num ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp + num ] , rsi mov rdi , rsp mov rsi , rdx test ecx , ecx je hexvar call hexvar jmp hexvar call hexvar mov rax , qword ptr [ rsp ] mov byte ptr [ rbx ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al mov rax , qword ptr [ rsp + num ] mov byte ptr [ rbx + num ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov rbx , rsi movzx eax , byte ptr [ rdi ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp ] , rsi movzx eax , byte ptr [ rdi + num ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp + num ] , rsi mov rdi , rsp mov rsi , rdx test ecx , ecx je hexvar call hexvar jmp hexvar call hexvar mov rax , qword ptr [ rsp ] mov byte ptr [ rbx ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al mov rax , qword ptr [ rsp + num ] mov byte ptr [ rbx + num ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al add rsp , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 move a1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lbu a2 , ( a0 ) lbu v0 , num ( a0 ) sll v0 , v0 , num lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v0 , v1 or v0 , v0 , a2 lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v1 , v0 sw v0 , hexvar ( sp ) lbu a2 , num ( a0 ) lbu v0 , num ( a0 ) sll v0 , v0 , num lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v0 , v1 or v0 , v0 , a2 lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v1 , v0 bnez a3 , hexvar sw v0 , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sb v0 , ( s0 ) srl v1 , v0 , num sb v1 , num ( s0 ) srl v1 , v0 , hexvar sb v1 , num ( s0 ) srl v0 , v0 , hexvar sb v0 , num ( s0 ) lw v0 , hexvar ( sp ) sb v0 , num ( s0 ) srl v1 , v0 , num sb v1 , num ( s0 ) srl v1 , v0 , hexvar sb v1 , num ( s0 ) srl v0 , v0 , hexvar sb v0 , num ( s0 ) lw v1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbx sub rsp , hexvar mov rbx , rsi movzx eax , byte ptr [ rdi ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp ] , rsi movzx eax , byte ptr [ rdi + num ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp + num ] , rsi mov rdi , rsp mov rsi , rdx test ecx , ecx je hexvar call hexvar jmp hexvar call hexvar mov rax , qword ptr [ rsp ] mov byte ptr [ rbx ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al mov rax , qword ptr [ rsp + num ] mov byte ptr [ rbx + num ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al add rsp , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 move a1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lbu a2 , ( a0 ) lbu v0 , num ( a0 ) sll v0 , v0 , num lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v0 , v1 or v0 , v0 , a2 lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v1 , v0 sw v0 , hexvar ( sp ) lbu a2 , num ( a0 ) lbu v0 , num ( a0 ) sll v0 , v0 , num lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v0 , v1 or v0 , v0 , a2 lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v1 , v0 bnez a3 , hexvar sw v0 , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sb v0 , ( s0 ) srl v1 , v0 , num sb v1 , num ( s0 ) srl v1 , v0 , hexvar sb v1 , num ( s0 ) srl v0 , v0 , hexvar sb v0 , num ( s0 ) lw v0 , hexvar ( sp ) sb v0 , num ( s0 ) srl v1 , v0 , num sb v1 , num ( s0 ) srl v1 , v0 , hexvar sb v1 , num ( s0 ) srl v0 , v0 , hexvar sb v0 , num ( s0 ) lw v1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ecx test eax , eax jne hexvar sub esp , num push edx lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov edx , eax mov byte ptr [ esi ] , al mov byte ptr [ esi + num ] , ah shr eax , hexvar shr edx , hexvar mov byte ptr [ esi + num ] , al mov eax , dword ptr [ esp + num ] mov byte ptr [ esi + num ] , dl mov byte ptr [ esi + num ] , al mov edx , eax mov byte ptr [ esi + num ] , ah shr eax , hexvar shr edx , hexvar mov byte ptr [ esi + num ] , al mov byte ptr [ esi + num ] , dl mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 move a1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lbu a2 , ( a0 ) lbu v0 , num ( a0 ) sll v0 , v0 , num lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v0 , v1 or v0 , v0 , a2 lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v1 , v0 sw v0 , hexvar ( sp ) lbu a2 , num ( a0 ) lbu v0 , num ( a0 ) sll v0 , v0 , num lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v0 , v1 or v0 , v0 , a2 lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v1 , v0 bnez a3 , hexvar sw v0 , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sb v0 , ( s0 ) srl v1 , v0 , num sb v1 , num ( s0 ) srl v1 , v0 , hexvar sb v1 , num ( s0 ) srl v0 , v0 , hexvar sb v0 , num ( s0 ) lw v0 , hexvar ( sp ) sb v0 , num ( s0 ) srl v1 , v0 , num sb v1 , num ( s0 ) srl v1 , v0 , hexvar sb v1 , num ( s0 ) srl v0 , v0 , hexvar sb v0 , num ( s0 ) lw v1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 move a1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lbu a2 , ( a0 ) lbu v0 , num ( a0 ) sll v0 , v0 , num lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v0 , v1 or v0 , v0 , a2 lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v1 , v0 sw v0 , hexvar ( sp ) lbu a2 , num ( a0 ) lbu v0 , num ( a0 ) sll v0 , v0 , num lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v0 , v1 or v0 , v0 , a2 lbu v1 , num ( a0 ) sll v1 , v1 , hexvar or v0 , v1 , v0 bnez a3 , hexvar sw v0 , hexvar ( sp ) addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sb v0 , ( s0 ) srl v1 , v0 , num sb v1 , num ( s0 ) srl v1 , v0 , hexvar sb v1 , num ( s0 ) srl v0 , v0 , hexvar sb v0 , num ( s0 ) lw v0 , hexvar ( sp ) sb v0 , num ( s0 ) srl v1 , v0 , num sb v1 , num ( s0 ) srl v1 , v0 , hexvar sb v1 , num ( s0 ) srl v0 , v0 , hexvar sb v0 , num ( s0 ) lw v1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbx sub rsp , hexvar mov rbx , rsi movzx eax , byte ptr [ rdi ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp ] , rsi movzx eax , byte ptr [ rdi + num ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp + num ] , rsi mov rdi , rsp mov rsi , rdx test ecx , ecx je hexvar call hexvar jmp hexvar call hexvar mov rax , qword ptr [ rsp ] mov byte ptr [ rbx ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al mov rax , qword ptr [ rsp + num ] mov byte ptr [ rbx + num ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al add rsp , hexvar pop rbx ret
push rbx sub rsp , hexvar mov rbx , rsi movzx eax , byte ptr [ rdi ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp ] , rsi movzx eax , byte ptr [ rdi + num ] movzx esi , byte ptr [ rdi + num ] shl rsi , num or rsi , rax movzx eax , byte ptr [ rdi + num ] shl rax , hexvar or rax , rsi movzx esi , byte ptr [ rdi + num ] shl rsi , hexvar or rsi , rax mov qword ptr [ rsp + num ] , rsi mov rdi , rsp mov rsi , rdx test ecx , ecx je hexvar call hexvar jmp hexvar call hexvar mov rax , qword ptr [ rsp ] mov byte ptr [ rbx ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al mov rax , qword ptr [ rsp + num ] mov byte ptr [ rbx + num ] , al mov byte ptr [ rbx + num ] , ah mov rcx , rax shr rcx , hexvar mov byte ptr [ rbx + num ] , cl shr rax , hexvar mov byte ptr [ rbx + num ] , al add rsp , hexvar pop rbx ret
test rsi , rsi je hexvar mov eax , hexvar and rdi , rax je hexvar xor eax , eax mov rcx , rdi nop word ptr cs : [ rax + rax ] nop add rax , num shr rcx , num jne hexvar jmp hexvar mov eax , num mov ecx , eax shl cl , num add cl , hexvar movzx ecx , cl bt rdi , rcx adc rax , num add rax , num mov qword ptr [ rsi ] , rax xor eax , eax ret
test rsi , rsi je hexvar mov eax , hexvar and rdi , rax je hexvar xor eax , eax mov rcx , rdi nop word ptr cs : [ rax + rax ] nop add rax , num shr rcx , num jne hexvar jmp hexvar mov eax , num mov ecx , eax shl cl , num add cl , hexvar movzx ecx , cl bt rdi , rcx adc rax , num add rax , num mov qword ptr [ rsi ] , rax xor eax , eax ret
test rsi , rsi je hexvar mov eax , hexvar and rdi , rax je hexvar xor eax , eax mov rcx , rdi nop word ptr cs : [ rax + rax ] nop add rax , num shr rcx , num jne hexvar jmp hexvar mov eax , num mov ecx , eax shl cl , num add cl , hexvar movzx ecx , cl bt rdi , rcx adc rax , num add rax , num mov qword ptr [ rsi ] , rax xor eax , eax ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov rsi , qword ptr [ rip ] jmp rsi mov rax , qword ptr [ rsp + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rsp + hexvar ] add rax , num mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] shr rax , num mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rip ] jmp rax xor eax , eax mov qword ptr [ rsp + hexvar ] , num mov rcx , qword ptr [ rsp + hexvar ] add rcx , num mov qword ptr [ rsp + hexvar ] , rcx mov rcx , qword ptr [ rsp + hexvar ] add rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] shl rdx , num sub rdx , num mov qword ptr [ rsp + num ] , rcx mov rcx , rdx mov edx , num shl rdx , cl mov rsi , qword ptr [ rsp + num ] and rsi , rdx cmp rsi , num mov edi , num mov r8d , eax cmovne r8d , edi movsxd rdx , r8d add rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi ] , rdx add rsp , hexvar ret
mov eax , dword ptr [ rip ] test eax , eax jne hexvar movaps xmm0 , xmmword ptr [ rip ] xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 add byte ptr [ rsi ] , bh add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rcx ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al jg hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al movaps xmm0 , xmmword ptr [ rip ] xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 add byte ptr [ rsi ] , bh add byte ptr [ rax ] , al add byte ptr [ rax ] , al test dword ptr [ rax + hexvar ] , ebp mov dh , hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al adc al , num add byte ptr [ rax ] , al add byte ptr [ rax ] , al xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al
test rsi , rsi je hexvar mov eax , hexvar and rdi , rax je hexvar xor eax , eax mov rcx , rdi nop word ptr cs : [ rax + rax ] nop add rax , num shr rcx , num jne hexvar jmp hexvar mov eax , num mov ecx , eax shl cl , num add cl , hexvar movzx ecx , cl bt rdi , rcx adc rax , num add rax , num mov qword ptr [ rsi ] , rax xor eax , eax ret
test rsi , rsi je hexvar mov eax , hexvar and rdi , rax je hexvar xor eax , eax mov rcx , rdi nop word ptr cs : [ rax + rax ] nop add rax , num shr rcx , num jne hexvar jmp hexvar mov eax , num mov ecx , eax shl cl , num add cl , hexvar movzx ecx , cl bt rdi , rcx adc rax , num add rax , num mov qword ptr [ rsi ] , rax xor eax , eax ret
mov eax , dword ptr [ rip ] test eax , eax jne hexvar movaps xmm0 , xmmword ptr [ rip ] xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 add byte ptr [ rsi ] , bh add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rcx ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al add byte ptr [ rax ] , al jg hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al movaps xmm0 , xmmword ptr [ rip ] xorps xmm0 , xmmword ptr [ rip ] movaps xmmword ptr [ rip ] , xmm0 movaps xmmword ptr [ rip ] , xmm0 add byte ptr [ rsi ] , bh add byte ptr [ rax ] , al add byte ptr [ rax ] , al test dword ptr [ rax + hexvar ] , ebp mov dh , hexvar add byte ptr [ rax ] , al add byte ptr [ rax ] , al xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al adc al , num add byte ptr [ rax ] , al add byte ptr [ rax ] , al xor al , hexvar mov byte ptr [ rip ] , al mov byte ptr [ rip ] , al
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi mov rsi , qword ptr [ rip ] jmp rsi mov rax , qword ptr [ rsp + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax mov dword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rsp + hexvar ] add rax , num mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] shr rax , num mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rsp + hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rip ] jmp rax xor eax , eax mov qword ptr [ rsp + hexvar ] , num mov rcx , qword ptr [ rsp + hexvar ] add rcx , num mov qword ptr [ rsp + hexvar ] , rcx mov rcx , qword ptr [ rsp + hexvar ] add rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] shl rdx , num sub rdx , num mov qword ptr [ rsp + num ] , rcx mov rcx , rdx mov edx , num shl rdx , cl mov rsi , qword ptr [ rsp + num ] and rsi , rdx cmp rsi , num mov edi , num mov r8d , eax cmovne r8d , edi movsxd rdx , r8d add rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi ] , rdx add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + hexvar ] , rsi cmp qword ptr [ rsp + hexvar ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar mov eax , hexvar and rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov qword ptr [ rsp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num je hexvar mov rax , qword ptr [ rsp + hexvar ] add rax , num mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] shr rax , num mov qword ptr [ rsp + hexvar ] , rax jmp hexvar cmp qword ptr [ rsp + hexvar ] , num jne hexvar mov qword ptr [ rsp + hexvar ] , num xor eax , eax mov qword ptr [ rsp + hexvar ] , num mov rcx , qword ptr [ rsp + hexvar ] add rcx , num mov qword ptr [ rsp + hexvar ] , rcx mov rcx , qword ptr [ rsp + hexvar ] add rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx mov rcx , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] shl rdx , num sub rdx , num mov qword ptr [ rsp + num ] , rcx mov rcx , rdx mov edx , num shl rdx , cl mov rsi , qword ptr [ rsp + num ] and rsi , rdx cmp rsi , num mov edi , num mov r8d , eax cmovne r8d , edi movsxd rdx , r8d add rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rdx mov rdx , qword ptr [ rsp + hexvar ] mov rsi , qword ptr [ rsp + hexvar ] mov qword ptr [ rsi ] , rdx add rsp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
sub rsp , num movzx eax , byte ptr [ rdi + hexvar ] and eax , num cmp al , num jne hexvar mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] add rsp , num ret
push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ edx + hexvar ] and eax , num cmp al , num jne hexvar mov eax , dword ptr [ edx + num ] mov eax , dword ptr [ eax + hexvar ] add esp , num pop ebx jmp eax lea esi , [ esi ] sub esp , hexvar push num call hexvar add esp , hexvar xor eax , eax pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ edx + hexvar ] and eax , num cmp al , num jne hexvar mov eax , dword ptr [ edx + num ] mov eax , dword ptr [ eax + hexvar ] add esp , num pop ebx jmp eax lea esi , [ esi ] sub esp , hexvar push num call hexvar add esp , hexvar xor eax , eax pop ebx ret
sub rsp , num movzx eax , byte ptr [ rdi + hexvar ] and eax , num cmp al , num jne hexvar mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] add rsp , num ret
push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ edx + hexvar ] and eax , num cmp al , num jne hexvar sub esp , hexvar mov eax , dword ptr [ edx + num ] push edx call dword ptr [ eax + hexvar ] add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ edx + hexvar ] and eax , num cmp al , num jne hexvar mov eax , dword ptr [ edx + num ] mov eax , dword ptr [ eax + hexvar ] add esp , num pop ebx jmp eax lea esi , [ esi ] sub esp , hexvar push num call hexvar add esp , hexvar xor eax , eax pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov al , byte ptr [ rdi + hexvar ] xor al , hexvar mov cl , hexvar mov dl , cl xor dl , num xor cl , hexvar or al , dl or cl , hexvar xor al , hexvar and al , cl movzx esi , al cmp esi , num je hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov al , byte ptr [ rdi + hexvar ] xor al , hexvar mov cl , hexvar mov dl , cl xor dl , num xor cl , hexvar or al , dl or cl , hexvar xor al , hexvar and al , cl movzx esi , al cmp esi , num je hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea ecx , [ esp + num ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar mov esi , eax test al , al jne hexvar mov eax , esi mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test al , al je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
test rsi , rsi je hexvar push rbp push rbx sub rsp , num movsxd rcx , dword ptr [ rdx ] mov rbp , qword ptr [ rsi + rcx * num ] mov rax , rcx test rbp , rbp je hexvar add eax , num mov dword ptr [ rdx ] , eax call hexvar lea rsi , [ rax + hexvar ] mov rbx , rax mov rdi , rbp call hexvar mov byte ptr [ rbx + hexvar ] , num mov byte ptr [ rbx + hexvar ] , num mov eax , num mov dword ptr [ rbx + hexvar ] , hexvar add rsp , num pop rbx pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ esi ] mov edx , dword ptr [ eax + ecx * num ] test edx , edx mov dword ptr [ esp + hexvar ] , edx je hexvar sub esp , hexvar add ecx , num lea edi , [ ebx - hexvar ] mov dword ptr [ esi ] , ecx push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ eax + hexvar ] , num mov ebp , eax mov dword ptr [ esp ] , num call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov ecx , hexvar mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num add esp , hexvar test al , al je hexvar lea edi , [ ebx - hexvar ] mov ecx , hexvar mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al je hexvar sub esp , num lea eax , [ ebx + hexvar ] push edx mov dword ptr [ esp + hexvar ] , edx push dword ptr [ eax + hexvar ] call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax mov dword ptr [ ebp + hexvar ] , eax mov dword ptr [ ebp + hexvar ] , edx je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar xor edx , edx cmp eax , - num je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax setne dl mov byte ptr [ ebp + hexvar ] , dl mov byte ptr [ ebp + hexvar ] , num mov eax , num mov byte ptr [ ebp + hexvar ] , num mov dword ptr [ ebp + hexvar ] , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ esi ] mov edx , dword ptr [ eax + ecx * num ] test edx , edx mov dword ptr [ esp + hexvar ] , edx je hexvar sub esp , hexvar add ecx , num lea edi , [ ebx - hexvar ] mov dword ptr [ esi ] , ecx push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ eax + hexvar ] , num mov ebp , eax mov dword ptr [ esp ] , num call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov ecx , hexvar mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num add esp , hexvar test al , al je hexvar lea edi , [ ebx - hexvar ] mov ecx , hexvar mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al je hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push edx mov dword ptr [ esp + hexvar ] , edx call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax mov dword ptr [ ebp + hexvar ] , eax mov dword ptr [ ebp + hexvar ] , edx je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar xor edx , edx cmp eax , - num je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax setne dl mov byte ptr [ ebp + hexvar ] , dl mov byte ptr [ ebp + hexvar ] , num mov eax , num mov byte ptr [ ebp + hexvar ] , num mov dword ptr [ ebp + hexvar ] , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] lea edx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 move a0 , a1 move a1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu a2 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move v0 , zero lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw s1 , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar move s0 , v0 addiu a1 , v0 , hexvar move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) addiu v0 , zero , num sb v0 , hexvar ( s0 ) sb v0 , hexvar ( s0 ) lui v0 , hexvar lwc1 f0 , - hexvar ( v0 ) swc1 f0 , hexvar ( s0 ) b hexvar addiu v0 , zero , num addiu a1 , v0 , hexvar lui a0 , hexvar addiu a0 , a0 , - hexvar jal hexvar nop lw gp , hexvar ( sp ) b hexvar addiu v0 , zero , num lw t9 , - hexvar ( gp )
push r12 push rbp push rbx sub rsp , hexvar mov rbp , rdi mov rdi , rsi mov rsi , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov rdx , rsp call hexvar mov ebx , eax test al , al je hexvar mov r12 , qword ptr [ rsp ] mov rdi , rbp call hexvar mov rbp , rax test r12 , r12 je hexvar lea rsi , [ rax + hexvar ] mov rdi , r12 call hexvar jmp hexvar lea rsi , [ rax + hexvar ] mov edi , hexvar call hexvar mov byte ptr [ rbp + hexvar ] , num mov byte ptr [ rbp + hexvar ] , num mov dword ptr [ rbp + hexvar ] , hexvar mov eax , ebx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ esi ] mov edx , dword ptr [ eax + ecx * num ] test edx , edx mov dword ptr [ esp + hexvar ] , edx je hexvar sub esp , hexvar add ecx , num lea edi , [ ebx - hexvar ] mov dword ptr [ esi ] , ecx push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ eax + hexvar ] , num mov ebp , eax mov dword ptr [ esp ] , num call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov ecx , hexvar mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num add esp , hexvar test al , al je hexvar lea edi , [ ebx - hexvar ] mov ecx , hexvar mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al je hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push edx mov dword ptr [ esp + hexvar ] , edx call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax mov dword ptr [ ebp + hexvar ] , eax mov dword ptr [ ebp + hexvar ] , edx je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar xor edx , edx cmp eax , - num je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax setne dl mov byte ptr [ ebp + hexvar ] , dl mov byte ptr [ ebp + hexvar ] , num mov eax , num mov byte ptr [ ebp + hexvar ] , num mov dword ptr [ ebp + hexvar ] , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test al , al je hexvar mov eax , dword ptr [ ebp - hexvar ] sub esp , num push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rsi mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , edi mov r8d , dword ptr [ rcx ] mov ecx , r8d mov rdi , rcx mov rsi , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov esi , num call hexvar cmp rax , num sete r9b and r9b , num movzx eax , r9b mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp + hexvar ] mov edx , num sub esp , num lea ecx , [ ebp - hexvar ] push ecx push edx push eax call hexvar add esp , hexvar push dword ptr [ ebp - hexvar ] push num push num lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov ecx , eax xor ecx , num mov esi , ecx mov eax , edx xor ah , num mov edi , eax mov eax , esi or eax , edi test eax , eax sete al movzx eax , al mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rsi mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , edi mov r8d , dword ptr [ rcx ] mov ecx , r8d mov rdi , rcx mov rsi , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rdi , qword ptr [ rbp - hexvar ] mov esi , num call hexvar cmp rax , num sete r9b and r9b , num movzx eax , r9b mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar srl v0 , a1 , num sw s0 , hexvar ( sp ) srl t0 , a1 , hexvar sw a0 , hexvar ( sp ) srl v1 , a1 , hexvar sb v0 , hexvar ( sp ) addiu a0 , sp , hexvar lw s0 , - hexvar ( gp ) addiu a3 , zero , num lw t9 , - hexvar ( gp ) move a2 , zero sw gp , hexvar ( sp ) sb a1 , hexvar ( sp ) sw ra , hexvar ( sp ) sb t0 , hexvar ( sp ) sb v1 , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal hexvar nop lw a1 , hexvar ( sp ) xori v1 , v1 , num lw a0 , ( s0 ) or v0 , v0 , v1 bne a1 , a0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) sltiu v0 , v0 , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp push edi xor ecx , ecx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , ebp mov edx , ebp shrd esi , ecx , hexvar shrd edx , ecx , hexvar mov eax , esi mov byte ptr [ esp + num ] , al mov eax , ebp mov byte ptr [ esp + num ] , dl mov byte ptr [ esp + hexvar ] , ah mov byte ptr [ esp + hexvar ] , al push dword ptr [ esp + hexvar ] push num push num lea eax , [ esp + hexvar ] push eax call hexvar xor eax , num add esp , hexvar or eax , edx sete al mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar movzx eax , al pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move t1 , v0 move t0 , zero addiu v0 , fp , hexvar move a2 , v0 move a1 , t1 move a0 , t0 jal hexvar nop lw gp , hexvar ( fp ) addiu v1 , fp , hexvar lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu a3 , zero , num move a2 , zero move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) xori s0 , v0 , num xori s1 , v1 , num or v0 , s0 , s1 sltiu v0 , v0 , num andi v0 , v0 , hexvar lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move t1 , v0 move t0 , zero addiu v0 , fp , hexvar move a2 , v0 move a1 , t1 move a0 , t0 jal hexvar nop lw gp , hexvar ( fp ) addiu v1 , fp , hexvar lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu a3 , zero , num move a2 , zero move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) xori s0 , v0 , num xori s1 , v1 , num or v0 , s0 , s1 sltiu v0 , v0 , num andi v0 , v0 , hexvar lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar srl v0 , a1 , num sw s0 , hexvar ( sp ) srl t0 , a1 , hexvar sw a0 , hexvar ( sp ) srl v1 , a1 , hexvar sb v0 , hexvar ( sp ) addiu a0 , sp , hexvar lw s0 , - hexvar ( gp ) addiu a3 , zero , num lw t9 , - hexvar ( gp ) move a2 , zero sw gp , hexvar ( sp ) sb a1 , hexvar ( sp ) sw ra , hexvar ( sp ) sb t0 , hexvar ( sp ) sb v1 , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal hexvar nop lw a1 , hexvar ( sp ) xori v1 , v1 , num lw a0 , ( s0 ) or v0 , v0 , v1 bne a1 , a0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) sltiu v0 , v0 , num lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp push rbx sub rsp , hexvar mov rbp , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax lea rbx , [ rsp + num ] mov edi , esi mov rsi , rbx call hexvar mov rdx , rbp mov esi , num mov rdi , rbx call hexvar cmp rax , num sete al mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar movzx eax , al add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp + hexvar ] mov edx , num sub esp , num lea ecx , [ ebp - hexvar ] push ecx push edx push eax call hexvar add esp , hexvar push dword ptr [ ebp - hexvar ] push num push num lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov ecx , eax xor ecx , num mov esi , ecx mov eax , edx xor ah , num mov edi , eax mov eax , esi or eax , edi test eax , eax sete al movzx eax , al mov edx , dword ptr [ ebp - hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov eax , hexvar cmp rdx , rax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num ] jmp rdi mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rcx + num ] mov qword ptr [ rax + hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
push esi push ebx sub esp , num call hexvar add ebx , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar mov dword ptr [ esp ] , num call hexvar
push esi push ebx sub esp , num call hexvar add ebx , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar mov dword ptr [ esp ] , num call hexvar
push esi push ebx sub esp , num call hexvar add ebx , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push num push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar mov dword ptr [ esp ] , num call hexvar
push ebp mov ebp , esp sub esp , hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , v0 move a1 , s0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp )
push rbx mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rbx , rax call hexvar mov esi , dword ptr [ rax ] xor edi , edi mov rdx , rbx xor eax , eax call hexvar mov edi , num call hexvar nop dword ptr [ rax ] nop word ptr cs : [ rax + rax ]
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar sub esp , hexvar push num call hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , v0 move a1 , s0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] movsx ecx , byte ptr [ ecx + num ] cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar call hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + num ] test al , al je hexvar mov eax , dword ptr [ ebp + num ] add eax , num jmp hexvar mov eax , num sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar call hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dl , byte ptr [ ecx + num ] test dl , dl setne dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx xor eax , eax mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax call hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] movsx ecx , byte ptr [ ecx + num ] cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar call hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + num ] test al , al je hexvar mov eax , dword ptr [ ebp + num ] add eax , num jmp hexvar mov eax , num sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar call hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] movsx ecx , byte ptr [ ecx + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar call hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldrb r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] add r3 , r3 , num b hexvar mov r3 , num mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar bl hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
sub rsp , num cmp byte ptr [ rdi + num ] , num jne hexvar mov edi , hexvar call hexvar xor edx , edx test eax , eax jne hexvar call hexvar mov edx , num mov eax , edx add rsp , num ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] movsx ecx , byte ptr [ ecx + num ] cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar call hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] movsx ecx , byte ptr [ ecx + num ] cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov byte ptr [ ebp - num ] , num jmp hexvar call hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] and ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] and eax , dword ptr [ ecx ] mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] and ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) addiu v0 , zero , - num sw v0 , num ( fp ) lw v1 , hexvar ( fp ) lw v0 , num ( fp ) and v0 , v1 , v0 move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] and ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp + num ] and eax , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) addiu v0 , zero , - num sw v0 , num ( fp ) lw v1 , hexvar ( fp ) lw v0 , num ( fp ) and v0 , v1 , v0 move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] and ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push esi sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - num ] xor ecx , hexvar xor edx , hexvar mov esi , hexvar xor esi , hexvar or ecx , edx or esi , hexvar xor ecx , hexvar and ecx , esi mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , num pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov ecx , dword ptr [ ebp + num ] and ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push rbp push rbx mov rbp , rsi sub rsp , num mov rbx , qword ptr [ rdi + hexvar ] mov rdi , rbx call hexvar mov rsi , rbx mov rdi , rbp xor r9d , r9d mov r8 , rax xor ecx , ecx mov rdx , rax call hexvar sar eax , hexvar add rsp , num and eax , num add eax , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 lw s0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a1 lw s0 , hexvar ( a0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , esp mov dword ptr [ esi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , esp mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a1 sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move a3 , zero lw gp , hexvar ( sp ) move a1 , s0 move a0 , s1 sw zero , hexvar ( sp ) move a2 , v0 lw t9 , - hexvar ( gp ) bal hexvar sw v0 , hexvar ( sp ) addiu a0 , zero , num addiu v1 , zero , num lw ra , hexvar ( sp ) slti v0 , v0 , num lw s1 , hexvar ( sp ) movn v1 , a0 , v0 lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra move v0 , v1
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov r9d , num mov r8 , rcx mov ecx , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , num leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov r9d , num mov r8 , rcx mov ecx , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , num leave ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] add rax , hexvar mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rax + hexvar ] , num mov eax , hexvar mov ebp , num nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov edi , hexvar call hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax mov eax , hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rsi , rbx call hexvar test eax , eax mov eax , hexvar cmove eax , r15d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] add rax , hexvar mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rax + hexvar ] , num mov eax , hexvar mov ebp , num nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov edi , hexvar call hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r14d jmp hexvar nop word ptr cs : [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rsi , rbx call hexvar test eax , eax mov eax , hexvar cmove eax , r15d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , num mov eax , num jmp hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num add esp , num pop ebx pop esi ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] add rax , hexvar mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rax + hexvar ] , num mov eax , hexvar mov ebp , num nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov edi , hexvar call hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r14d jmp hexvar nop word ptr cs : [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rsi , rbx call hexvar test eax , eax mov eax , hexvar cmove eax , r15d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov rax , qword ptr [ rdi ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] add rax , hexvar mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov dword ptr [ rax + hexvar ] , num mov eax , hexvar mov ebp , num nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov edi , hexvar call hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r14d jmp hexvar nop word ptr cs : [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rsi , rbx call hexvar test eax , eax mov eax , hexvar cmove eax , r15d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , num add esp , hexvar pop ebx ret
push r14 push rbx push rax mov r14 , rsi mov rbx , qword ptr [ rdi ] mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar mov edi , hexvar call hexvar mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , r14 call hexvar test eax , eax je hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , num add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rsi mov rbx , qword ptr [ rdi ] mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar mov edi , hexvar call hexvar mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , r14 call hexvar test eax , eax je hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , num add rsp , num pop rbx pop r14 ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , num add esp , num mov eax , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rax mov qword ptr [ rsp ] , rdi cmp qword ptr [ rsp ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar xor eax , eax mov rcx , qword ptr [ rsp ] mov qword ptr [ rcx + hexvar ] , num mov rcx , qword ptr [ rsp ] mov qword ptr [ rcx ] , num mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + num ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx pop rcx ret
push rax mov qword ptr [ rsp ] , rdi cmp qword ptr [ rsp ] , num jne hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar xor eax , eax mov rcx , qword ptr [ rsp ] mov qword ptr [ rcx + hexvar ] , num mov rcx , qword ptr [ rsp ] mov qword ptr [ rcx ] , num mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + num ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx pop rcx ret
test rdi , rdi je hexvar movabs rax , hexvar movq xmm0 , rax pslldq xmm0 , num movdqu xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movabs rax , hexvar movq xmm0 , rax movdqu xmmword ptr [ rdi + hexvar ] , xmm0 xor eax , eax ret
test rdi , rdi je hexvar movabs rax , hexvar movq xmm0 , rax pslldq xmm0 , num movdqu xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movabs rax , hexvar movq xmm0 , rax movdqu xmmword ptr [ rdi + hexvar ] , xmm0 xor eax , eax ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] cmp rax , num setne cl mov byte ptr [ rsp + hexvar ] , cl mov al , byte ptr [ rsp + hexvar ] test al , num jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rsp + hexvar ] movabs rcx , hexvar mov qword ptr [ rax + num ] , rcx mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax movabs rax , hexvar mov rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rsp + hexvar ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rsp + hexvar ] movabs rdx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rsp + hexvar ] add rax , num mov qword ptr [ rsp + num ] , rax xor eax , eax movabs rcx , hexvar mov rdx , qword ptr [ rsp + num ] mov qword ptr [ rdx + hexvar ] , rcx mov rcx , qword ptr [ rsp + hexvar ] movabs rsi , hexvar mov qword ptr [ rcx + hexvar ] , rsi mov rcx , qword ptr [ rsp + hexvar ] movabs rsi , hexvar mov qword ptr [ rcx + hexvar ] , rsi add rsp , hexvar ret
test rdi , rdi je hexvar movabs rax , hexvar movq xmm0 , rax pslldq xmm0 , num movdqu xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movabs rax , hexvar movq xmm0 , rax movdqu xmmword ptr [ rdi + hexvar ] , xmm0 xor eax , eax ret
push rax mov qword ptr [ rsp ] , rdi mov rdi , qword ptr [ rip ] jmp rdi mov rax , qword ptr [ rsp ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax xor eax , eax mov rcx , qword ptr [ rsp ] mov qword ptr [ rcx + hexvar ] , num mov rcx , qword ptr [ rsp ] mov qword ptr [ rcx ] , num mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + num ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx pop rcx ret
push rax mov qword ptr [ rsp ] , rdi mov rdi , qword ptr [ rip ] jmp rdi mov rax , qword ptr [ rsp ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar call hexvar mov rax , qword ptr [ rip ] jmp rax xor eax , eax mov rcx , qword ptr [ rsp ] mov qword ptr [ rcx + hexvar ] , num mov rcx , qword ptr [ rsp ] mov qword ptr [ rcx ] , num mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + num ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx mov rcx , qword ptr [ rsp ] movabs rdx , hexvar mov qword ptr [ rcx + hexvar ] , rdx pop rcx ret
test rdi , rdi je hexvar movabs rax , hexvar movq xmm0 , rax pslldq xmm0 , num movdqu xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movabs rax , hexvar movq xmm0 , rax movdqu xmmword ptr [ rdi + hexvar ] , xmm0 xor eax , eax ret
test rdi , rdi je hexvar movabs rax , hexvar movq xmm0 , rax pslldq xmm0 , num movdqu xmmword ptr [ rdi ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip ] movups xmmword ptr [ rdi + hexvar ] , xmm0 movabs rax , hexvar movq xmm0 , rax movdqu xmmword ptr [ rdi + hexvar ] , xmm0 xor eax , eax ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push { r4 , lr } mov r4 , r0 ldr r0 , [ r0 ] bl hexvar ldr r0 , [ r4 , num ] bl hexvar ldr r0 , [ r4 , num ] bl hexvar ldr r0 , [ r4 , hexvar ] bl hexvar mov r0 , r4 pop { r4 , lr } b hexvar
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov rdi , rbx pop rbx jmp hexvar nop
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r0 , [ fp , - num ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar add esp , num pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax push dword ptr [ eax ] call hexvar add esp , num push dword ptr [ esi + num ] call hexvar add esp , num push dword ptr [ esi + num ] call hexvar add esp , num push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esp ] , esi call hexvar add esp , hexvar pop ebx pop esi ret
lui gp , hexvar lw v0 , ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sltiu v1 , v0 , num sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz v1 , hexvar sw gp , hexvar ( sp ) sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v0 , v1 lw v0 , ( v0 ) jr v0 move s0 , a0 lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( a0 ) lw ra , hexvar ( sp ) addiu v0 , zero , num sw v0 , ( s0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , num ( a0 ) bltz v0 , hexvar lw ra , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , a0 , - hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , a0 , - hexvar
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , num ja hexvar mov eax , dword ptr [ esi ] mov edx , dword ptr [ ebx + eax * num - hexvar ] add edx , ebx jmp edx lea esi , [ esi ] lea edi , [ edi ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov edx , ecx sub edx , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jge hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num add esp , hexvar pop ebp ret
lui gp , hexvar lw v0 , ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar sltiu v1 , v0 , num sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz v1 , hexvar sw gp , hexvar ( sp ) sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v0 , v1 lw v0 , ( v0 ) jr v0 move s0 , a0 lw t9 , - hexvar ( gp ) jalr t9 lw a0 , num ( a0 ) lw ra , hexvar ( sp ) addiu v0 , zero , num sw v0 , ( s0 ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , num ( a0 ) bltz v0 , hexvar lw ra , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , a0 , - hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar lui a0 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , a1 , - hexvar jalr t9 addiu a0 , a0 , - hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , ecx sub edx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx ja hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num jge hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + num ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] cmp dword ptr [ ecx + num ] , num setl dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov dword ptr [ ecx ] , num mov esp , ebp pop ebp ret
push rbx cmp dword ptr [ rdi ] , num ja hexvar mov eax , dword ptr [ rdi ] mov rbx , rdi jmp qword ptr [ rax * num + hexvar ] nop word ptr [ rax + rax ] mov edi , dword ptr [ rdi + num ] call hexvar mov dword ptr [ rbx ] , num pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , ecx sub edx , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx ja hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax * num + hexvar ] jmp ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax + num ] , num jge hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , hexvar pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ esi ] , num ja hexvar mov eax , dword ptr [ esi ] mov edx , ebx add edx , dword ptr [ ebx + eax * num - hexvar ] jmp edx
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
ldr r2 , [ r0 ] ldrb r3 , [ r2 ] cmp r3 , num beq hexvar mov r1 , num str lr , [ sp , - num ] ! mov ip , r1 b hexvar cmp r3 , hexvar blo hexvar cmp r3 , hexvar bls hexvar sub r1 , r3 , hexvar cmp r1 , hexvar bls hexvar cmp r3 , hexvar movne ip , num movne r1 , ip beq hexvar add r2 , r2 , num str r2 , [ r0 ] ldrb r3 , [ r2 ] cmp r3 , num beq hexvar cmp r1 , num bne hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar bhi hexvar cmp r3 , hexvar bhs hexvar sub lr , r3 , hexvar cmp lr , num bls hexvar cmp r3 , hexvar movne ip , num b hexvar mov r1 , num b hexvar cmp ip , num moveq ip , r2 moveq r1 , num movne r1 , num b hexvar mov r0 , ip pop { pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , num jmp hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] movsx eax , al sub esp , hexvar push eax call hexvar add esp , hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] cmp al , hexvar je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov byte ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] movsx eax , al sub esp , hexvar push eax call hexvar add esp , hexvar xor eax , num test al , al je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] cmp al , hexvar je hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] test al , al jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , num mov ecx , dword ptr [ eax ] movzx ebx , byte ptr [ ecx ] test bl , bl je hexvar xor edx , edx xor esi , esi mov dword ptr [ esp ] , eax jmp hexvar lea esi , [ esi ] movsx edx , bl and edx , hexvar sub edx , hexvar cmp edx , hexvar seta dl cmp bl , hexvar mov edi , edx setne dl mov ebx , edi and dl , bl jne hexvar mov eax , dword ptr [ esp ] add ecx , num mov dword ptr [ eax ] , ecx movzx ebx , byte ptr [ ecx ] test bl , bl je hexvar test dl , dl jne hexvar cmp bl , hexvar je hexvar movsx edi , bl lea ebp , [ edi - hexvar ] cmp ebp , num jbe hexvar and edi , hexvar sub edi , hexvar cmp edi , hexvar seta al cmp bl , hexvar setne bl test al , bl mov eax , num cmovne esi , eax mov eax , dword ptr [ esp ] add ecx , num mov dword ptr [ eax ] , ecx movzx ebx , byte ptr [ ecx ] test bl , bl jne hexvar add esp , num mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] cmp byte ptr [ eax ] , num je hexvar test byte ptr [ ebp - num ] , num je hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov ecx , hexvar cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov ecx , hexvar cmp ecx , eax jne hexvar mov byte ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov ecx , hexvar cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] cmp byte ptr [ eax ] , num je hexvar test byte ptr [ ebp - num ] , num je hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov ecx , hexvar cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov ecx , hexvar cmp ecx , eax jne hexvar mov byte ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov ecx , hexvar cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
ldr r2 , [ r0 ] ldrb r3 , [ r2 ] cmp r3 , num beq hexvar mov r1 , num str lr , [ sp , - num ] ! mov ip , r1 b hexvar cmp r3 , hexvar blo hexvar cmp r3 , hexvar bls hexvar sub r1 , r3 , hexvar cmp r1 , hexvar bls hexvar cmp r3 , hexvar movne ip , num movne r1 , ip beq hexvar add r2 , r2 , num str r2 , [ r0 ] ldrb r3 , [ r2 ] cmp r3 , num beq hexvar cmp r1 , num bne hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar bhi hexvar cmp r3 , hexvar bhs hexvar sub lr , r3 , hexvar cmp lr , num bls hexvar cmp r3 , hexvar movne ip , num b hexvar mov r1 , num b hexvar cmp ip , num moveq ip , r2 moveq r1 , num movne r1 , num b hexvar mov r0 , ip pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw zero , hexvar ( fp ) sb zero , hexvar ( fp ) b hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop sb zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lb v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lb v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lb v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop addiu v0 , zero , num sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lb v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lb v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) addiu v1 , v0 , num lw v0 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lb v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - num ] mov r3 , num strb r3 , [ fp , - num ] b hexvar ldrb r3 , [ fp , - num ] cmp r3 , num beq hexvar mov r3 , num strb r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldrb r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldrb r3 , [ r3 ] cmp r3 , hexvar beq hexvar mov r3 , num str r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldrb r3 , [ r3 ] cmp r3 , hexvar bne hexvar mov r3 , num strb r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldrb r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldrb r3 , [ r3 ] cmp r3 , hexvar beq hexvar mov r3 , num str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] add r2 , r3 , num ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldrb r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp push edi push esi push ebx sub esp , num mov ecx , dword ptr [ eax ] movzx edx , byte ptr [ ecx ] test dl , dl je hexvar mov ebx , num mov esi , num mov edi , num mov dword ptr [ esp ] , eax jmp hexvar cmp dl , hexvar mov ebx , num cmovne esi , edi add ecx , num mov eax , dword ptr [ esp ] mov dword ptr [ eax ] , ecx movzx edx , byte ptr [ ecx ] test dl , dl je hexvar test bl , bl je hexvar cmp dl , hexvar jl hexvar cmp dl , hexvar jle hexvar lea ebx , [ edx - hexvar ] cmp bl , hexvar ja hexvar mov ebx , num jmp hexvar cmp dl , hexvar je hexvar cmp dl , hexvar jg hexvar cmp dl , hexvar jge hexvar lea ebp , [ edx - hexvar ] mov eax , ebp cmp al , num jbe hexvar cmp dl , hexvar cmovne esi , edi jmp hexvar mov ebx , num test esi , esi jne hexvar mov esi , ecx jmp hexvar lea ebp , [ edx - hexvar ] mov eax , ebp cmp al , hexvar ja hexvar jmp hexvar mov esi , num mov eax , esi add esp , num pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] cmp byte ptr [ eax ] , num je hexvar test byte ptr [ ebp - num ] , num je hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov ecx , hexvar cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov ecx , hexvar cmp ecx , eax jne hexvar mov byte ptr [ ebp - num ] , num cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] mov ecx , hexvar cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r0 , r1 , r2 , r3 } str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , num ] add r1 , sp , hexvar str r1 , [ sp ] ldr r0 , [ sp , hexvar ] bl hexvar mov r0 , num bl hexvar andeq r2 , sp , r0 , lsl num
push { r0 , r1 , r2 , r3 } push { fp , lr } add fp , sp , num sub sp , sp , hexvar ldr r3 , [ fp , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] add r3 , fp , num str r3 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r0 , num bl hexvar andseq r3 , r5 , r0 , lsl num
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , sp , hexvar sw a1 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a1 , v0 sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ esp + hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp ] , num call hexvar lea esi , [ esi ]
mov rsi , rdi sub rsp , num mov edx , num xor edi , edi call hexvar mov edx , hexvar mov rcx , rax xor esi , esi xor edi , edi xor eax , eax call hexvar call hexvar nop dword ptr [ rax + rax ]
push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ esp + hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp ] , num call hexvar lea esi , [ esi ]
push ebx call hexvar add ebx , hexvar sub esp , num call hexvar sub esp , num push num push dword ptr [ esp + hexvar ] push num call hexvar push eax lea eax , [ ebx - hexvar ] push eax push num push num call hexvar lea esi , [ esi ] lea edi , [ edi ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a1 , a0 addiu a2 , zero , num sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) move a1 , zero addiu a2 , a2 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 move a3 , v0 jal hexvar nop
sub rsp , num mov rsi , rdi mov edx , num mov edi , num call hexvar mov rcx , rax lea rdx , [ rip + hexvar ] mov esi , num mov edi , num mov eax , num call hexvar call hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a1 , hexvar ( fp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw t0 , - hexvar ( gp ) lui a3 , hexvar ori a3 , a3 , hexvar move a2 , zero move a1 , v1 move a0 , v0 move t9 , t0 bal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar ori v0 , v0 , hexvar addu v0 , v1 , v0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jbe hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] push num push hexvar push edx push eax mov ebx , ecx call hexvar add esp , hexvar add eax , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } mvn r1 , num mov r2 , num cmp r4 , r2 cmpeq r3 , r1 bls hexvar sub r1 , fp , hexvar ldm r1 , { r0 , r1 } ldr r2 , [ pc , hexvar ] mov r3 , num bl hexvar mov r4 , r3 mov r3 , r2 add r3 , r3 , hexvar add r3 , r3 , hexvar b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] test edx , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + num ] , hexvar call hexvar add eax , hexvar adc edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] test edx , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + num ] , hexvar call hexvar add eax , hexvar adc edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp + hexvar ] test eax , eax sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , hexvar call hexvar add eax , hexvar adc edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] test edx , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + num ] , hexvar call hexvar add eax , hexvar adc edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } mvn r1 , num mov r2 , num cmp r4 , r2 cmpeq r3 , r1 bls hexvar sub r1 , fp , hexvar ldm r1 , { r0 , r1 } ldr r2 , [ pc , hexvar ] mov r3 , num bl hexvar mov r4 , r3 mov r3 , r2 add r3 , r3 , hexvar add r3 , r3 , hexvar b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a1 , hexvar ( fp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw t0 , - hexvar ( gp ) lui a3 , hexvar ori a3 , a3 , hexvar move a2 , zero move a1 , v1 move a0 , v0 move t9 , t0 bal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar ori v0 , v0 , hexvar addu v0 , v1 , v0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] test edx , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + num ] , hexvar call hexvar add eax , hexvar adc edx , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , ecx add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , a1 lui a1 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) move a2 , a0 sw zero , hexvar ( sp ) addiu a1 , a1 , hexvar sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) bal hexvar sw zero , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num call hexvar test eax , eax mov esi , eax je hexvar sub esp , hexvar push hexvar call hexvar mov dword ptr [ esi ] , eax mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov dword ptr [ esi + num ] , eax add esp , num mov eax , esi pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar sw v0 , ( s0 )
push r14 push rbx push rax mov r14 , rdi call hexvar mov rbx , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , r14 jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rax , rbx add rsp , num pop rbx pop r14 ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar call hexvar mov esi , eax test eax , eax je hexvar sub esp , hexvar push hexvar call hexvar mov dword ptr [ esi ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax add esp , hexvar mov eax , esi add esp , num pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar sw v0 , ( s0 )
push rbp push rbx push rax mov rbx , rdi call hexvar mov qword ptr [ rsp ] , rax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov edi , hexvar call hexvar mov rcx , qword ptr [ rsp ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rax + num ] , rbx mov ecx , hexvar mov rax , qword ptr [ rsp ] nop dword ptr [ rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , ( v0 ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar sw v0 , ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar sw v0 , ( s0 )
push r14 push rbx push rax mov r14 , rdi call hexvar mov rbx , rax test rax , rax je hexvar mov edi , hexvar call hexvar mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + num ] , r14 jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rax , rbx add rsp , num pop rbx pop r14 ret
push r15 push r14 push r13 push r12 push rbp push rbx mov rbp , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov rax , qword ptr [ rdi + hexvar ] mov ebx , dword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] sub eax , ebx shr eax , num test eax , eax je hexvar add rbx , qword ptr [ rdi + hexvar ] sub eax , num mov r12 , rsi mov r13 , rdx mov r14 , rsp lea r15 , [ rbx + rax * num + num ] nop dword ptr [ rax ] mov esi , dword ptr [ rbx ] mov rdi , rbp call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rbx + num ] mov rdx , r13 mov rsi , r14 mov rdi , rax mov qword ptr [ rsp ] , rcx call r12
lui gp , hexvar lw v0 , hexvar ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar lw v1 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] call hexvar cmp eax , num jge hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov esi , eax mov dword ptr [ rbp - num ] , esi jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cmp eax , dword ptr [ rbp - hexvar ] jae hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rax ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] movabs rdi , hexvar mov al , num call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov edx , eax mov dword ptr [ rbp - num ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + num ] mov eax , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call rax mov dword ptr [ rbp - hexvar ] , eax cmp eax , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , hexvar add eax , num sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rcx , qword ptr [ rbp - hexvar ] add rcx , num mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub eax , edx shr eax , num test eax , eax je hexvar add edx , dword ptr [ esi + hexvar ] lea eax , [ edx + eax * num ] mov edi , edx mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov esi , esi lea edi , [ edi ] sub esp , num push dword ptr [ edi ] push esi call hexvar add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ edi + num ] sub esp , num mov dword ptr [ esp + hexvar ] , ecx push ebp push dword ptr [ esp + hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar add edi , num cmp edi , dword ptr [ esp + hexvar ] jne hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub eax , edx shr eax , num test eax , eax je hexvar add edx , dword ptr [ esi + hexvar ] lea eax , [ edx + eax * num ] mov edi , edx mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov esi , esi lea edi , [ edi ] sub esp , num push dword ptr [ edi ] push esi call hexvar add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ edi + num ] sub esp , num mov dword ptr [ esp + hexvar ] , ecx push ebp push dword ptr [ esp + hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar add edi , num cmp edi , dword ptr [ esp + hexvar ] jne hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub eax , edx shr eax , num test eax , eax je hexvar add edx , dword ptr [ esi + hexvar ] lea eax , [ edx + eax * num ] mov edi , edx mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov esi , esi lea edi , [ edi ] sub esp , num push dword ptr [ edi ] push esi call hexvar add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ edi + num ] sub esp , num mov dword ptr [ esp + hexvar ] , ecx push ebp push dword ptr [ esp + hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar add edi , num cmp edi , dword ptr [ esp + hexvar ] jne hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub eax , esi shr eax , num mov dword ptr [ esp + num ] , eax test eax , eax je hexvar add esi , dword ptr [ ebp + hexvar ] mov edi , num lea eax , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax sub esp , num push dword ptr [ esi ] push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esi + num ] mov dword ptr [ esp + hexvar ] , edx sub esp , num push dword ptr [ esp + num ] push dword ptr [ esp + hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar add edi , num add esi , num cmp edi , dword ptr [ esp + num ] jne hexvar jmp hexvar sub esp , num push hexvar push ebp call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar lw v0 , hexvar ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar lw v1 , hexvar ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub eax , edx shr eax , num test eax , eax je hexvar add edx , dword ptr [ esi + hexvar ] lea eax , [ edx + eax * num ] mov edi , edx mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov esi , esi lea edi , [ edi ] sub esp , num push dword ptr [ edi ] push esi call hexvar add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ edi + num ] sub esp , num mov dword ptr [ esp + hexvar ] , ecx push ebp push dword ptr [ esp + hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar add edi , num cmp edi , dword ptr [ esp + hexvar ] jne hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub eax , edx shr eax , num test eax , eax je hexvar add edx , dword ptr [ esi + hexvar ] lea eax , [ edx + eax * num ] mov edi , edx mov dword ptr [ esp + hexvar ] , eax lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov esi , esi lea edi , [ edi ] sub esp , num push dword ptr [ edi ] push esi call hexvar add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ edi + num ] sub esp , num mov dword ptr [ esp + hexvar ] , ecx push ebp push dword ptr [ esp + hexvar ] push eax mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax jne hexvar add edi , num cmp edi , dword ptr [ esp + hexvar ] jne hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , num sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beq a0 , v0 , hexvar sw gp , hexvar ( sp ) addiu s0 , zero , num beq a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar beq v0 , s0 , hexvar addiu a0 , zero , num slt v1 , zero , v0 movz v0 , a0 , v1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , a0 , - hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) jal hexvar move a0 , v0 lui a0 , hexvar lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ ebp + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
cmp r0 , num push { r4 , r5 , r6 , lr } beq hexvar cmp r0 , num beq hexvar mov r0 , hexvar bl hexvar sub r3 , r0 , num cmp r3 , num mov r5 , r0 mov r4 , r0 bls hexvar cmp r5 , num movge r4 , r5 movlt r4 , num mov r0 , r4 pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ ebp - hexvar ] , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - hexvar ] , hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ ebp - hexvar ] , eax cmovbe eax , dword ptr [ ebp - hexvar ] jmp hexvar mov dword ptr [ ebp + num ] , num sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ ebp - hexvar ] , eax cmovbe eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ ebp + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) addiu v0 , zero , - num sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , - num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sltu a0 , v0 , a0 movz v0 , v1 , a0 b hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sltu a0 , v0 , a0 movz v0 , v1 , a0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx mov eax , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar cmp eax , num je hexvar cmp eax , num je hexvar sub esp , hexvar push hexvar call hexvar mov esi , eax mov ebx , eax lea eax , [ eax - num ] add esp , hexvar cmp eax , num jbe hexvar test esi , esi mov ebx , num cmovg ebx , esi mov eax , ebx pop ebx pop esi pop edi ret
push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax cmp edi , num je hexvar cmp edi , num jne hexvar call hexvar test rax , rax je hexvar mov rsi , qword ptr [ rsp + num ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) addiu v0 , zero , - num sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , - num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sltu a0 , v0 , a0 movz v0 , v1 , a0 b hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sltu a0 , v0 , a0 movz v0 , v1 , a0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , num sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beq a0 , v0 , hexvar sw gp , hexvar ( sp ) addiu s0 , zero , num beq a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar beq v0 , s0 , hexvar addiu a0 , zero , num slt v1 , zero , v0 movz v0 , a0 , v1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , a0 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) jal hexvar move a0 , v0 lui a0 , hexvar lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov ebx , esi lea eax , [ rbx - hexvar ] cmp eax , ecx jge hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar cmp ebx , hexvar jg hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , a1 , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) slt v0 , a3 , v0 sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) lw s2 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) addiu s5 , a1 , - num slti v0 , s5 , hexvar bnez v0 , hexvar move s1 , a1 lw t9 , - hexvar ( gp ) addiu s6 , a0 , hexvar sb zero , ( a0 ) move s4 , a3 move s3 , a0 jalr t9 move s7 , a2 lw gp , hexvar ( sp ) move a3 , zero lw a1 , hexvar ( sp ) move a2 , s6 sw zero , hexvar ( sp ) move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar sw v0 , hexvar ( sp ) bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) bal hexvar addiu a0 , zero , num b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar subu fp , s5 , s4 lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov ebx , esi lea eax , [ rbx - hexvar ] cmp eax , ecx jge hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar cmp ebx , hexvar jg hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , a1 , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) slt v0 , a3 , v0 sw s6 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) lw s6 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) addiu s4 , a1 , - num slti v0 , s4 , hexvar bnez v0 , hexvar move s1 , a1 lw t9 , - hexvar ( gp ) addiu s5 , a0 , hexvar sb zero , ( a0 ) move s2 , a3 move s3 , a0 jalr t9 move s7 , a2 lw gp , hexvar ( sp ) move a3 , zero lw a1 , hexvar ( sp ) move a2 , s5 sw zero , hexvar ( sp ) move a0 , s6 lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) jalr t9 addiu a0 , zero , num b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar subu fp , s4 , s2 lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov ebx , esi lea eax , [ rbx - hexvar ] cmp eax , ecx jge hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar cmp ebx , hexvar jg hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov ebx , esi lea eax , [ rbx - hexvar ] cmp eax , ecx jge hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar cmp ebx , hexvar jg hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] sub eax , hexvar cmp eax , dword ptr [ esp + hexvar ] jle hexvar mov eax , dword ptr [ esp + hexvar ] lea edi , [ eax - num ] cmp edi , hexvar jle hexvar lea eax , [ esi + hexvar ] mov byte ptr [ esi ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp ] , eax call hexvar sub esp , num push num push eax push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ esp + num ] jne hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] sub eax , hexvar cmp eax , dword ptr [ esp + hexvar ] jle hexvar mov eax , dword ptr [ esp + hexvar ] lea edi , [ eax - num ] cmp edi , hexvar jle hexvar lea eax , [ esi + hexvar ] mov byte ptr [ esi ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp ] , eax call hexvar sub esp , num push num push eax push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax mov edx , dword ptr [ esp + num ] jne hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , a1 , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) slt v0 , a3 , v0 sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) lw s2 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) addiu s5 , a1 , - num slti v0 , s5 , hexvar bnez v0 , hexvar move s1 , a1 lw t9 , - hexvar ( gp ) addiu s6 , a0 , hexvar sb zero , ( a0 ) move s4 , a3 move s3 , a0 jalr t9 move s7 , a2 lw gp , hexvar ( sp ) move a3 , zero lw a1 , hexvar ( sp ) move a2 , s6 sw zero , hexvar ( sp ) move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar sw v0 , hexvar ( sp ) bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) bal hexvar addiu a0 , zero , num b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar subu fp , s5 , s4 lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , a1 , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) slt v0 , a3 , v0 sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) lw s2 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) addiu s5 , a1 , - num slti v0 , s5 , hexvar bnez v0 , hexvar move s1 , a1 lw t9 , - hexvar ( gp ) addiu s6 , a0 , hexvar sb zero , ( a0 ) move s4 , a3 move s3 , a0 jalr t9 move s7 , a2 lw gp , hexvar ( sp ) move a3 , zero lw a1 , hexvar ( sp ) move a2 , s6 sw zero , hexvar ( sp ) move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar sw v0 , hexvar ( sp ) bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) bal hexvar addiu a0 , zero , num b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar subu fp , s5 , s4 lw t9 , - hexvar ( gp )
mov ip , num ldr r3 , [ r0 , hexvar ] ldr r0 , [ r0 , hexvar ] ldr r3 , [ r3 , num ] add r2 , r1 , r0 , lsl num cmp r3 , ip str ip , [ r1 , r0 , lsl num ] bxeq lr str r3 , [ r2 , - num ] ! ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar bx lr
mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rdi + hexvar ] mov ecx , edx mov qword ptr [ rsi + rcx * num ] , num test rax , rax je hexvar sub edx , num mov ecx , edx mov qword ptr [ rsi + rcx * num ] , rax mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , dword ptr [ rdi + hexvar ] ret
str lr , [ sp , - num ] ! ldr r3 , [ r0 , hexvar ] ldr r3 , [ r3 , num ] ldr ip , [ r0 , hexvar ] add r2 , r1 , ip , lsl num mov lr , num str lr , [ r1 , ip , lsl num ] cmp r3 , lr beq hexvar str r3 , [ r2 , - num ] ! ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r0 , [ r0 , hexvar ] pop { pc }
push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ecx + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebx + edx * num ] , num test eax , eax je hexvar lea esi , [ edx * num ] lea edx , [ ebx + esi - num ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ eax + hexvar ] sub edx , num test eax , eax jne hexvar mov eax , dword ptr [ ecx + hexvar ] pop ebx pop esi ret
mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov edx , dword ptr [ rdi + hexvar ] mov ecx , edx mov qword ptr [ rsi + rcx * num ] , num test rax , rax je hexvar sub edx , num mov ecx , edx mov qword ptr [ rsi + rcx * num ] , rax mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar mov eax , dword ptr [ rdi + hexvar ] ret
lw v0 , hexvar ( a0 ) lw v1 , hexvar ( a0 ) sll a0 , v0 , num lw v1 , num ( v1 ) addu a1 , a1 , a0 beqz v1 , hexvar sw zero , ( a1 ) sw v1 , - num ( a1 ) lw v1 , hexvar ( v1 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax push dword ptr [ ebp + num ] call hexvar add esp , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp + hexvar ] add eax , edx mov dword ptr [ eax ] , num jmp hexvar sub dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar push dword ptr [ ebp + num ] call hexvar add esp , num leave ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp + hexvar ] add eax , edx mov dword ptr [ eax ] , num jmp hexvar sub dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] lea edx , [ eax * num ] mov eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov qword ptr [ rsi + rdi * num ] , num mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] add edx , - num mov dword ptr [ rbp - hexvar ] , edx mov edx , edx mov esi , edx mov qword ptr [ rcx + rsi * num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov eax , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov edi , eax mov qword ptr [ rsi + rdi * num ] , num cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] add edx , - num mov dword ptr [ rbp - hexvar ] , edx mov edx , edx mov esi , edx mov qword ptr [ rcx + rsi * num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rdi , qword ptr [ rbp - num ] call hexvar mov eax , eax add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) move a3 , a2 move a2 , zero jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r9 mov r15d , r8d mov r12 , rcx mov r13d , edx mov rbx , rsi xor esi , esi call hexvar mov qword ptr [ rsp ] , rax mov eax , hexvar jmp hexvar mov rdi , qword ptr [ rsp ] sub rsp , num mov rsi , rbx xor edx , edx mov ecx , r13d xor r8d , r8d mov r9 , r12 push qword ptr [ rsp + hexvar ] push r14 push r15 call hexvar add rsp , hexvar mov ebp , eax mov rdi , qword ptr [ rsp ] call hexvar mov eax , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebx mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ecx xor ecx , ecx mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx pop ebx jmp hexvar jmp hexvar nop nop nop nop nop nop nop nop nop nop nop nop nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw a3 , hexvar ( sp ) move a2 , zero lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , r9 mov r14d , r8d mov r12 , rcx mov r13d , edx mov rbp , rsi xor esi , esi call hexvar test rax , rax je hexvar mov rbx , rax sub rsp , num mov rdi , rax mov rsi , rbp xor edx , edx mov ecx , r13d xor r8d , r8d mov r9 , r12 push qword ptr [ rsp + hexvar ] push r15 push r14 call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s3 , hexvar ( sp ) move a1 , zero sw s2 , hexvar ( sp ) move s3 , a2 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s2 , a3 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw v0 , hexvar ( sp ) move a2 , zero move a3 , s3 sw s2 , hexvar ( sp ) move a1 , s1 sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) move a0 , s0 lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , r9 mov r14d , r8d mov r12 , rcx mov r13d , edx mov rbp , rsi xor esi , esi call hexvar test rax , rax je hexvar mov rbx , rax sub rsp , num mov rdi , rax mov rsi , rbp xor edx , edx mov ecx , r13d xor r8d , r8d mov r9 , r12 push qword ptr [ rsp + hexvar ] push r15 push r14 call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num push dword ptr [ esp + hexvar ] mov ecx , num mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) move a3 , a2 move a2 , zero jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , r9 mov r14d , r8d mov r12 , rcx mov r13d , edx mov rbp , rsi xor esi , esi call hexvar test rax , rax je hexvar mov rbx , rax sub rsp , num mov rdi , rax mov rsi , rbp xor edx , edx mov ecx , r13d xor r8d , r8d mov r9 , r12 push qword ptr [ rsp + hexvar ] push r15 push r14 call hexvar add rsp , hexvar mov ebp , eax mov rdi , rbx call hexvar mov eax , ebp jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov al , byte ptr [ rsi + hexvar ] and al , num movzx ecx , al mov dword ptr [ rbp - num ] , ecx mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] and cl , num movzx edx , cl cmp edx , num mov edx , hexvar mov esi , hexvar cmovne esi , edx mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov edi , num call hexvar mov dword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call rax mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov al , byte ptr [ rsi + hexvar ] and al , num sub al , num setne cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] and cl , num sub cl , num setne dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov edi , num call hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rcx , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call rcx mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] movzx edx , byte ptr [ edx + hexvar ] and edx , num cmp dl , num jne hexvar mov edx , dword ptr [ ebp + hexvar ] movzx edx , byte ptr [ edx + hexvar ] and edx , num cmp dl , num je hexvar sub esp , hexvar push num mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call eax add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
sub rsp , num movzx eax , byte ptr [ rdi + hexvar ] and eax , num cmp al , num jne hexvar movzx eax , byte ptr [ rsi + hexvar ] and eax , num cmp al , num jne hexvar mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] jmp hexvar mov edi , num call hexvar mov eax , num add rsp , num ret
movzx eax , byte ptr [ rdi + hexvar ] and eax , num cmp al , num jne hexvar movzx eax , byte ptr [ rsi + hexvar ] and eax , num cmp al , num jne hexvar mov rax , qword ptr [ rdi + num ] jmp qword ptr [ rax + hexvar ] sub rsp , num mov edi , num call hexvar xor eax , eax add rsp , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , - hexvar and v0 , v1 , v0 andi v1 , v0 , hexvar addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) addiu v0 , zero , - hexvar and v0 , v1 , v0 andi v1 , v0 , hexvar addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v0 , hexvar ( v0 ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rsi + hexvar ] and eax , num sub eax , num setne cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] and ecx , num sub ecx , num setne dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov edi , num call hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rcx , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax call rcx mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ edx + hexvar ] and eax , num cmp al , num jne hexvar movzx eax , byte ptr [ ecx + hexvar ] and eax , num cmp al , num jne hexvar sub esp , num mov eax , dword ptr [ edx + num ] push ecx push edx call dword ptr [ eax + hexvar ] add esp , hexvar jmp hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rsi cmp qword ptr [ rax ] , num setne dil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , dil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , hexvar cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] cmp dword ptr [ rcx + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , num mov edi , hexvar movabs rsi , num movabs rdx , num mov r8d , hexvar mov qword ptr [ rbp - hexvar ] , rcx mov rcx , r8 movabs r8 , num mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rcx ] mov rsi , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rdx + rsi * num ] add rdx , hexvar mov rsi , rdx call hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rsi cmp qword ptr [ rax ] , num setne dil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , dil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , hexvar cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] cmp dword ptr [ rcx + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , num mov edi , hexvar movabs rsi , num movabs rdx , num mov r8d , hexvar mov qword ptr [ rbp - hexvar ] , rcx mov rcx , r8 movabs r8 , num mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rcx ] mov rsi , qword ptr [ rsi + hexvar ] mov rdx , qword ptr [ rdx + rsi * num ] add rdx , hexvar mov rsi , rdx call hexvar mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] test rsi , rsi setne al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov rax , qword ptr [ rax + rcx * num ] add rax , hexvar mov rsi , rax call hexvar add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , num lea eax , [ esp + num ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax js hexvar sub esp , num mov esi , eax push eax push dword ptr [ esp + hexvar ] push edi call hexvar mov edi , eax pop eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp esi , edi jne hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v0 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw v0 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 addiu a0 , sp , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jal hexvar nop bltz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , s2 lw a1 , hexvar ( sp ) move a2 , v0 jalr t9 move s0 , v0 lw gp , hexvar ( sp ) move s2 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( sp ) bne s0 , s2 , hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu s0 , zero , - num lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r8 mov r13 , rcx mov ebp , edx mov r14 , rsi mov rbx , rdi lea rdi , [ rsp + hexvar ] call hexvar xor edi , edi mov rsi , r14 xor edx , edx call hexvar test eax , eax js hexvar mov qword ptr [ rsp + hexvar ] , rbx xor ecx , ecx test ebp , ebp setne cl shl ecx , num lea r15d , [ rax + rcx ] add r15d , hexvar mov esi , hexvar mov edi , r15d mov edx , hexvar mov rbx , rax call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar test ebp , ebp setne r8b mov ecx , hexvar mov qword ptr [ rax ] , rcx cmp dword ptr [ r14 ] , hexvar sete cl add cl , num shl r8b , num mov edx , ebx shr edx , hexvar mov esi , ebx shr esi , hexvar mov rdi , rax add rdi , hexvar mov byte ptr [ rax + num ] , cl mov word ptr [ rax + num ] , num mov byte ptr [ rax + hexvar ] , num test ebp , ebp setne byte ptr [ rax + hexvar ] mov word ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , r8b mov word ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , bl mov byte ptr [ rax + hexvar ] , bh mov byte ptr [ rax + hexvar ] , dl mov qword ptr [ rsp + hexvar ] , rax mov byte ptr [ rax + hexvar ] , sil mov qword ptr [ rsp ] , rdi je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov esi , hexvar call hexvar test eax , eax jle hexvar mov rbx , qword ptr [ rsp ] lea rax , [ rbx + hexvar ] mov qword ptr [ rsp ] , rax mov rdi , rsp mov rsi , r14 xor edx , edx call hexvar lea rdi , [ rsp + hexvar ] mov esi , hexvar mov edx , num mov rcx , r12 test r13 , r13 je hexvar call r13
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r8 mov r13 , rcx mov ebp , edx mov r14 , rsi mov rbx , rdi lea rdi , [ rsp + hexvar ] call hexvar xor edi , edi mov rsi , r14 xor edx , edx call hexvar test eax , eax js hexvar mov qword ptr [ rsp + hexvar ] , rbx xor ecx , ecx test ebp , ebp setne cl shl ecx , num lea r15d , [ rax + rcx ] add r15d , hexvar mov esi , hexvar mov edi , r15d mov edx , hexvar mov rbx , rax call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar test ebp , ebp setne r8b mov ecx , hexvar mov qword ptr [ rax ] , rcx cmp dword ptr [ r14 ] , hexvar sete cl add cl , num shl r8b , num mov edx , ebx shr edx , hexvar mov esi , ebx shr esi , hexvar mov rdi , rax add rdi , hexvar mov byte ptr [ rax + num ] , cl mov word ptr [ rax + num ] , num mov byte ptr [ rax + hexvar ] , num test ebp , ebp setne byte ptr [ rax + hexvar ] mov word ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , r8b mov word ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , bl mov byte ptr [ rax + hexvar ] , bh mov byte ptr [ rax + hexvar ] , dl mov qword ptr [ rsp + hexvar ] , rax mov byte ptr [ rax + hexvar ] , sil mov qword ptr [ rsp ] , rdi je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov esi , hexvar call hexvar test eax , eax jle hexvar mov rbx , qword ptr [ rsp ] lea rax , [ rbx + hexvar ] mov qword ptr [ rsp ] , rax mov rdi , rsp mov rsi , r14 xor edx , edx call hexvar lea rdi , [ rsp + hexvar ] mov esi , hexvar mov edx , num mov rcx , r12 test r13 , r13 je hexvar call r13
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] add r0 , sp , hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bge hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] mov r1 , r3 ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar ldr r3 , [ sp , hexvar ] b hexvar mvn r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v0 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw v0 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 addiu a0 , sp , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jal hexvar nop bltz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , s2 lw a1 , hexvar ( sp ) move a2 , v0 jalr t9 move s0 , v0 lw gp , hexvar ( sp ) move s2 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( sp ) bne s0 , s2 , hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , num lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu s0 , zero , - num lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r8 mov r13 , rcx mov ebp , edx mov r14 , rsi mov rbx , rdi lea rdi , [ rsp + hexvar ] call hexvar xor edi , edi mov rsi , r14 xor edx , edx call hexvar test eax , eax js hexvar mov qword ptr [ rsp + hexvar ] , rbx xor ecx , ecx test ebp , ebp setne cl shl ecx , num lea r15d , [ rax + rcx ] add r15d , hexvar mov esi , hexvar mov edi , r15d mov edx , hexvar mov rbx , rax call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar test ebp , ebp setne r8b mov ecx , hexvar mov qword ptr [ rax ] , rcx cmp dword ptr [ r14 ] , hexvar sete cl add cl , num shl r8b , num mov edx , ebx shr edx , hexvar mov esi , ebx shr esi , hexvar mov rdi , rax add rdi , hexvar mov byte ptr [ rax + num ] , cl mov word ptr [ rax + num ] , num mov byte ptr [ rax + hexvar ] , num test ebp , ebp setne byte ptr [ rax + hexvar ] mov word ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , r8b mov word ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , bl mov byte ptr [ rax + hexvar ] , bh mov byte ptr [ rax + hexvar ] , dl mov qword ptr [ rsp + hexvar ] , rax mov byte ptr [ rax + hexvar ] , sil mov qword ptr [ rsp ] , rdi je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov esi , hexvar call hexvar test eax , eax jle hexvar mov rbx , qword ptr [ rsp ] lea rax , [ rbx + hexvar ] mov qword ptr [ rsp ] , rax mov rdi , rsp mov rsi , r14 xor edx , edx call hexvar lea rdi , [ rsp + hexvar ] mov esi , hexvar mov edx , num mov rcx , r12 test r13 , r13 je hexvar call r13
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , num lea eax , [ esp + num ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax js hexvar mov esi , eax sub esp , num push eax push dword ptr [ esp + hexvar ] push edi call hexvar mov edi , eax add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp esi , edi jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] add r0 , sp , hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bge hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] mov r1 , r3 ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , num bl hexvar ldr r3 , [ sp , hexvar ] b hexvar mvn r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , num lea eax , [ esp + num ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax js hexvar sub esp , num mov esi , eax push eax push dword ptr [ esp + hexvar ] push edi call hexvar mov edi , eax pop eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp esi , edi jne hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push num call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar add esp , num pop ebx jmp eax lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar xor eax , eax pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r15 , rcx mov r12 , rdx mov r13 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp ] , rax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov rax , qword ptr [ rsp ] mov rdi , rbx mov rsi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 call rax mov ecx , hexvar nop dword ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar add esp , num pop ebx jmp eax lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar xor eax , eax pop ebx ret
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r4 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] blx r4 mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { r4 , pc }
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar add esp , num pop ebx ret
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 sw v0 , num ( fp ) lw v1 , num ( fp ) lw v0 , hexvar ( fp ) slt v0 , v1 , v0 xori v0 , v0 , num andi v1 , v0 , hexvar lw v0 , hexvar ( fp ) srl v0 , v0 , hexvar andi v0 , v0 , hexvar xor v0 , v1 , v0 andi v0 , v0 , hexvar move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] setge dl mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar xor eax , edx movzx eax , al pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , hexvar cmp eax , dword ptr [ ecx ] setle bl mov byte ptr [ ebp - hexvar ] , bl xor eax , eax mov cl , al mov dl , byte ptr [ ebp - hexvar ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , hexvar setle cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebp + hexvar ] add eax , edx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] setge dl mov eax , dword ptr [ ebp + hexvar ] shr eax , hexvar xor eax , edx movzx eax , al leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] cmp rax , qword ptr [ rbp - hexvar ] setge dl mov rax , qword ptr [ rbp - hexvar ] shr rax , hexvar xor eax , edx movzx eax , al pop rbp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - num ] ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 movge r3 , num movlt r3 , num and r2 , r3 , hexvar ldr r3 , [ fp , - hexvar ] lsr r3 , r3 , hexvar and r3 , r3 , hexvar eor r3 , r3 , r2 and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov bl , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar cmp eax , dword ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , bl jg hexvar cmp dword ptr [ ebp - hexvar ] , hexvar setle al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov bl , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar cmp eax , dword ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , bl jg hexvar cmp dword ptr [ ebp - hexvar ] , hexvar setle al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar setg bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] xor edx , edx mov bl , dl mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , bl jmp ecx mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar setl cl mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl jmp edx mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov bl , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar cmp eax , dword ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , bl jg hexvar cmp dword ptr [ ebp - hexvar ] , hexvar setle al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r0 ] ldr r1 , [ r0 , num ] cmp r3 , r1 bhs hexvar ldr r0 , [ r3 ] cmp r0 , num bxne lr ssatpl fp , hexvar , r7 , lsl hexvar andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) b hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] cmp dword ptr [ ebp - hexvar ] , edx jb hexvar mov ebx , eax call hexvar mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] test edx , edx je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] jmp hexvar add dword ptr [ ebp - hexvar ] , num jmp hexvar add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx ] setb dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , rcx jb hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx ] setb dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar sub eax , num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] and cl , num shr cl , num movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movzx ecx , byte ptr [ rax + num ] mov eax , ecx mov ecx , eax and ecx , num mov eax , ecx mov rax , qword ptr [ rax + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov cl , byte ptr [ rax + hexvar ] sub cl , num sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar sub eax , num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] and cl , num shr cl , num movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movzx ecx , byte ptr [ rax + num ] mov eax , ecx mov ecx , eax and ecx , num mov eax , ecx mov rax , qword ptr [ rax + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov cl , byte ptr [ rax + hexvar ] sub cl , num sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] and ecx , hexvar cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + num ] and rax , hexvar cmp rax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] movzx ecx , byte ptr [ rax + hexvar ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , hexvar jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov ecx , dword ptr [ esp + num ] mov edx , dword ptr [ ecx + num ] mov eax , num cmp dword ptr [ edx + num ] , num je hexvar ret cmp dword ptr [ esp + num ] , num je hexvar mov eax , dword ptr [ esp + num ] mov ecx , dword ptr [ eax + hexvar ] mov eax , num test byte ptr [ ecx + num ] , num je hexvar mov eax , dword ptr [ edx + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp byte ptr [ eax + hexvar ] , num mov eax , hexvar mov edx , hexvar cmovne eax , edx jmp hexvar test byte ptr [ ecx + hexvar ] , num jne hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar sub eax , num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] and cl , num shr cl , num movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movzx ecx , byte ptr [ rax + num ] mov eax , ecx mov ecx , eax and ecx , num mov eax , ecx mov rax , qword ptr [ rax + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov cl , byte ptr [ rax + hexvar ] sub cl , num sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov ecx , dword ptr [ esp + num ] xor eax , eax mov edx , dword ptr [ ecx + num ] cmp dword ptr [ edx + num ] , num je hexvar ret lea esi , [ esi ] cmp dword ptr [ esp + num ] , num je hexvar mov ecx , dword ptr [ esp + num ] mov ecx , dword ptr [ ecx + hexvar ] test byte ptr [ ecx + num ] , num je hexvar mov eax , dword ptr [ edx + hexvar ] mov edx , hexvar mov eax , dword ptr [ eax + hexvar ] cmp byte ptr [ eax + hexvar ] , num mov eax , hexvar cmovne eax , edx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar sub eax , num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] and cl , num shr cl , num movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] movzx ecx , byte ptr [ rax + num ] mov eax , ecx mov ecx , eax and ecx , num mov eax , ecx mov rax , qword ptr [ rax + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov cl , byte ptr [ rax + hexvar ] sub cl , num sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add esi , hexvar mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov esi , dword ptr [ esi + num ] cmp esi , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] shr eax , num and eax , hexvar and eax , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ esi + hexvar ] mov esi , dword ptr [ esi + num ] mov eax , esi and eax , hexvar mov ecx , eax mov eax , edi and eax , num mov ebx , eax mov eax , ecx xor ah , num mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx xor ah , num mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov eax , edx or eax , ecx test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] movzx eax , byte ptr [ eax + hexvar ] cmp al , num jne hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lw v0 , num ( a0 ) addiu v1 , zero , num lw a2 , num ( v0 )
ldr r3 , [ r0 , num ] ldr r2 , [ r3 , num ] cmp r2 , num beq hexvar mov r0 , num bx lr cmp r1 , num beq hexvar ldr r2 , [ r1 , hexvar ] ldr r0 , [ r2 , num ] ands r0 , r0 , hexvar bxeq lr ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] ldrb r3 , [ r3 , hexvar ] cmp r3 , num moveq r0 , hexvar movne r0 , hexvar bx lr ldr r0 , [ r0 , hexvar ] lsr r0 , r0 , num ands r0 , r0 , hexvar bne hexvar bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] add r0 , r3 , hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , num bl hexvar ldr r3 , [ fp , - num ] add r0 , r3 , hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , num bl hexvar ldr r3 , [ fp , - num ] add r0 , r3 , hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , num bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 sw zero , ( a0 )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] add eax , hexvar sub esp , hexvar mov edx , dword ptr [ ebx + hexvar ] push edx mov edx , dword ptr [ ebx + hexvar ] push edx push num push num push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar sub esp , hexvar mov edx , dword ptr [ ebx + hexvar ] push edx mov edx , dword ptr [ ebx + hexvar ] push edx push num push num push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar sub esp , hexvar mov edx , dword ptr [ ebx + hexvar ] push edx mov edx , dword ptr [ ebx + hexvar ] push edx push num push num push eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + num ] , num mov ebp , dword ptr [ ebx + hexvar ] push ebp mov edi , dword ptr [ ebx + hexvar ] push edi push num push num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar push ebp push edi push num push num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar push ebp push edi push num push num add esi , hexvar push esi call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , lr } mov r4 , num mov r5 , r0 ldr r6 , [ pc , hexvar ] ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar str r4 , [ r0 ] str r4 , [ r0 , num ] str r4 , [ r0 , num ] mov r2 , r4 mov r1 , r4 mov r3 , r6 str r7 , [ sp ] add r0 , r0 , hexvar bl hexvar mov r3 , r6 mov r2 , r4 mov r1 , r4 str r7 , [ sp ] add r0 , r5 , hexvar bl hexvar str r7 , [ sp ] mov r3 , r6 add r0 , r5 , hexvar mov r2 , r4 mov r1 , r4 bl hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , edx mov esi , dword ptr [ ecx ] mov dword ptr [ esi ] , num mov esi , dword ptr [ ecx ] mov dword ptr [ esi + num ] , num mov esi , dword ptr [ ecx ] mov dword ptr [ esi + num ] , num mov esi , dword ptr [ ecx ] add esi , hexvar sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] add esi , hexvar sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] add esi , hexvar sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + num ] , num mov ebp , dword ptr [ ebx + hexvar ] push ebp mov edi , dword ptr [ ebx + hexvar ] push edi push num push num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar push ebp push edi push num push num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar push ebp push edi push num push num add esi , hexvar push esi call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 sw zero , ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw s1 , hexvar ( fp ) lw s0 , hexvar ( fp ) bne s1 , s0 , hexvar nop move v0 , zero b hexvar nop lbu v0 , ( s1 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , ( s0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu s1 , s1 , num addiu s0 , s0 , num lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beq v1 , v0 , hexvar nop b hexvar nop nop lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) subu v0 , v1 , v0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
bne a0 , a1 , hexvar move v0 , zero b hexvar nop bne a3 , a2 , hexvar andi v1 , v1 , hexvar lbu v0 , ( a0 ) addiu v1 , v0 , - hexvar sltiu v1 , v1 , hexvar beqz v1 , hexvar addiu a0 , a0 , num addiu v0 , v0 , hexvar lbu v1 , ( a1 ) andi a3 , v0 , hexvar addiu a2 , v1 , - hexvar sltiu a2 , a2 , hexvar beqz a2 , hexvar addiu a1 , a1 , num addiu v1 , v1 , hexvar bnez a3 , hexvar andi a2 , v1 , hexvar andi v1 , v1 , hexvar andi v0 , v0 , hexvar jr ra subu v0 , v0 , v1 jr ra nop nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw s1 , hexvar ( fp ) lw s0 , hexvar ( fp ) bne s1 , s0 , hexvar nop move v0 , zero b hexvar nop lbu v0 , ( s1 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , ( s0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu s1 , s1 , num addiu s0 , s0 , num lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beq v1 , v0 , hexvar nop b hexvar nop nop lbu v1 , hexvar ( fp ) lbu v0 , hexvar ( fp ) subu v0 , v1 , v0 move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] cmp rsi , qword ptr [ rbp - hexvar ] jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx edi , byte ptr [ rax ] call hexvar mov cl , al mov byte ptr [ rbp - hexvar ] , cl mov rdx , qword ptr [ rbp - hexvar ] movzx edi , byte ptr [ rdx ] call hexvar mov cl , al mov byte ptr [ rbp - hexvar ] , cl movzx eax , byte ptr [ rbp - hexvar ] cmp eax , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax movzx eax , byte ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rbp - hexvar ] cmp eax , ecx je hexvar movzx eax , byte ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rbp - hexvar ] add eax , hexvar sub eax , ecx sub eax , hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - num ] cmp edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] movzx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar mov cl , al mov byte ptr [ ebp - hexvar ] , cl mov eax , dword ptr [ ebp - hexvar ] movzx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar mov cl , al mov byte ptr [ ebp - hexvar ] , cl movzx eax , byte ptr [ ebp - hexvar ] cmp eax , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] movzx ecx , byte ptr [ ebp - hexvar ] cmp eax , ecx je hexvar movzx eax , byte ptr [ ebp - hexvar ] movzx ecx , byte ptr [ ebp - hexvar ] sub eax , ecx mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { r4 , r5 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r5 , [ fp , - hexvar ] ldr r4 , [ fp , - hexvar ] cmp r5 , r4 bne hexvar mov r3 , num b hexvar ldrb r3 , [ r5 ] mov r0 , r3 bl hexvar mov r3 , r0 strb r3 , [ fp , - hexvar ] ldrb r3 , [ r4 ] mov r0 , r3 bl hexvar mov r3 , r0 strb r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar add r5 , r5 , num add r4 , r4 , num ldrb r2 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar b hexvar mov r0 , r0 ldrb r2 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] sub r3 , r2 , r3 mov r0 , r3 sub sp , fp , hexvar pop { r4 , r5 , fp , pc }
mov eax , num cmp rdi , rsi je hexvar movzx edx , byte ptr [ rdi ] movzx eax , dl sub edx , hexvar lea ecx , [ rax + hexvar ] cmp dl , hexvar cmovb eax , ecx movzx ecx , byte ptr [ rsi ] movzx edx , cl sub ecx , hexvar lea r9d , [ rdx + hexvar ] cmp cl , hexvar cmovb edx , r9d test al , al je hexvar add rdi , num add rsi , num cmp al , dl je hexvar movzx eax , al movzx edx , dl sub eax , edx ret
beq a0 , a1 , hexvar addiu t0 , zero , hexvar b hexvar lbu v0 , ( a0 ) bne a3 , a2 , hexvar andi v1 , v1 , hexvar lbu v0 , ( a0 ) addiu v1 , v0 , - hexvar sltu v1 , t0 , v1 bnez v1 , hexvar addiu a0 , a0 , num addiu v0 , v0 , hexvar lbu v1 , ( a1 ) andi a3 , v0 , hexvar addiu a2 , v1 , - hexvar sltu a2 , t0 , a2 bnez a2 , hexvar addiu a1 , a1 , num addiu v1 , v1 , hexvar bnez a3 , hexvar andi a2 , v1 , hexvar andi v1 , v1 , hexvar andi v0 , v0 , hexvar jr ra subu v0 , v0 , v1 jr ra move v0 , zero nop
push { r4 , r5 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r5 , [ fp , - hexvar ] ldr r4 , [ fp , - hexvar ] cmp r5 , r4 bne hexvar mov r3 , num b hexvar ldrb r3 , [ r5 ] mov r0 , r3 bl hexvar mov r3 , r0 strb r3 , [ fp , - hexvar ] ldrb r3 , [ r4 ] mov r0 , r3 bl hexvar mov r3 , r0 strb r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar add r5 , r5 , num add r4 , r4 , num ldrb r2 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar b hexvar mov r0 , r0 ldrb r2 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] sub r3 , r2 , r3 mov r0 , r3 sub sp , fp , hexvar pop { r4 , r5 , fp , pc }
beq a0 , a1 , hexvar addiu t0 , zero , hexvar b hexvar lbu v0 , ( a0 ) bne a3 , a2 , hexvar andi v1 , v1 , hexvar lbu v0 , ( a0 ) addiu v1 , v0 , - hexvar sltu v1 , t0 , v1 bnez v1 , hexvar addiu a0 , a0 , num addiu v0 , v0 , hexvar lbu v1 , ( a1 ) andi a3 , v0 , hexvar addiu a2 , v1 , - hexvar sltu a2 , t0 , a2 bnez a2 , hexvar addiu a1 , a1 , num addiu v1 , v1 , hexvar bnez a3 , hexvar andi a2 , v1 , hexvar andi v1 , v1 , hexvar andi v0 , v0 , hexvar jr ra subu v0 , v0 , v1 jr ra move v0 , zero nop
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add esi , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov ebx , num push ebx push ecx push edx push eax mov ebx , esi call hexvar add esp , hexvar lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add esi , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov ebx , num push ebx push ecx push edx push eax mov ebx , esi call hexvar add esp , hexvar lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx xor edx , edx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] push edx push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push dword ptr [ eax + num ] call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , edi mov eax , dword ptr [ eax - hexvar ] mov dword ptr [ edx - hexvar ] , eax mov eax , dword ptr [ edx - hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ecx - hexvar ] sub esp , hexvar mov ebx , esp mov dword ptr [ ebx + num ] , ecx mov dword ptr [ ebx + num ] , eax mov dword ptr [ ebx ] , edx mov dword ptr [ ebx + hexvar ] , num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r1 , r3 , num ldm r1 , { r0 , r1 } ldr r3 , [ fp , - hexvar ] mov r4 , num mov r2 , r3 mov r3 , r4 bl hexvar mov r4 , r3 mov r3 , r2 mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov edx , num div qword ptr [ rbp - hexvar ] mov rax , rdx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx ] , esi mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sll v0 , a0 , num addu v0 , v0 , a0 sll v0 , v0 , num lw v1 , - hexvar ( gp ) addu v0 , v1 , v0 lw v0 , hexvar ( v0 ) beqz v0 , hexvar move s0 , a0 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sll v0 , s0 , num addu v0 , v0 , s0 sll v1 , v0 , num lw v0 , - hexvar ( gp ) addu v0 , v0 , v1 sw zero , hexvar ( v0 ) move a1 , zero move a0 , zero sw a1 , hexvar ( v0 ) sw a0 , hexvar ( v0 ) sw a1 , hexvar ( v0 ) sw a0 , hexvar ( v0 ) lw a0 , hexvar ( v0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp ) sll a0 , s0 , num addu v0 , a0 , s0 sll v0 , v0 , num addu v0 , v1 , v0 sw zero , hexvar ( v0 ) sw zero , hexvar ( v0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
mov edi , edi push rbx lea rbx , [ rip + hexvar ] lea rax , [ rdi * num ] sub rax , rdi shl rax , num add rbx , rax mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num pop rbx ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar lea esi , [ ebx + hexvar ] mov eax , edi shl eax , num add eax , esi mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp edx , dword ptr [ eax + hexvar ] je hexvar sub esp , hexvar shl edi , num push edx add esi , edi call hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sll v0 , a0 , num addu v0 , v0 , a0 sll v0 , v0 , num lw v1 , - hexvar ( gp ) addu v0 , v1 , v0 lw a1 , hexvar ( v0 ) beqz a1 , hexvar sll v0 , a0 , num addu v0 , v0 , a0 sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , hexvar ( v0 ) beqz v0 , hexvar lw s3 , - hexvar ( gp ) lw v1 , hexvar ( v0 ) beq a1 , v1 , hexvar addiu a1 , zero , - hexvar lw s3 , - hexvar ( gp ) sll s2 , a0 , num addu s1 , s2 , a0 sll s1 , s1 , num addu s1 , s3 , s1 lw a0 , hexvar ( s1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , hexvar ( s1 ) move v1 , zero move v0 , zero sw v1 , hexvar ( s1 ) sw v0 , hexvar ( s1 ) sw v1 , hexvar ( s1 ) sw v0 , hexvar ( s1 ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar sw zero , hexvar ( v0 ) lw v1 , hexvar ( v0 ) and v1 , v1 , a1 sw v1 , hexvar ( v0 ) lw v1 , hexvar ( v0 ) ins v1 , zero , hexvar , num b hexvar sw v1 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sll v0 , a0 , num sw s0 , hexvar ( sp ) addu a0 , v0 , a0 lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sll a0 , a0 , num sw gp , hexvar ( sp ) addu s0 , s0 , a0 lw a0 , hexvar ( s0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop move v1 , zero move v0 , zero sw zero , hexvar ( s0 ) sw v1 , hexvar ( s0 ) sw v0 , hexvar ( s0 ) sw v1 , hexvar ( s0 ) sw v0 , hexvar ( s0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sll v0 , a0 , num addu v0 , v0 , a0 sll v0 , v0 , num lw v1 , - hexvar ( gp ) addu v0 , v1 , v0 lw v0 , hexvar ( v0 ) beqz v0 , hexvar move s0 , a0 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp ) sll a0 , s0 , num addu v0 , a0 , s0 sll v0 , v0 , num addu v0 , v1 , v0 sw zero , hexvar ( v0 ) move a3 , zero move a2 , zero sw a3 , hexvar ( v0 ) sw a2 , hexvar ( v0 ) sw a3 , hexvar ( v0 ) sw a2 , hexvar ( v0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar shl esi , num add esi , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num pop ebx pop esi pop edi ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar lea esi , [ ebx + hexvar ] mov eax , edi shl eax , num add eax , esi mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp edx , dword ptr [ eax + hexvar ] je hexvar sub esp , hexvar shl edi , num push edx add esi , edi call hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edx , dword ptr [ rbp - hexvar ] mov rax , rdx shl rax , num sub rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jne hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] and ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num jmp hexvar nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov edx , dword ptr [ rbp - hexvar ] mov rax , rdx shl rax , num sub rax , rdx shl rax , num lea rdx , [ rip + hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , num jmp hexvar nop leave ret
push ebx xor eax , eax call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ edx ] test edx , edx je hexvar sub esp , num add edx , hexvar push dword ptr [ esp + hexvar ] push edx call hexvar add esp , hexvar add esp , num pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] add r3 , r3 , hexvar ldr r1 , [ sp ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
test rdi , rdi je hexvar mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar add rdi , hexvar jmp hexvar xor eax , eax ret
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov rbx , rdi test rdi , rdi mov r15d , hexvar mov ebp , hexvar cmove ebp , r15d mov ecx , hexvar jmp hexvar mov rdi , qword ptr [ rsp ] add rdi , hexvar mov rsi , r14 call hexvar mov ecx , hexvar nop dword ptr [ rax + rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , ebp jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar xor eax , eax jmp hexvar mov rcx , qword ptr [ rbx ] mov qword ptr [ rsp ] , rcx cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , r15d jmp hexvar add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebx xor eax , eax call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ edx ] test edx , edx je hexvar sub esp , num add edx , hexvar push dword ptr [ esp + hexvar ] push edx call hexvar add esp , hexvar add esp , num pop ebx ret
test rdi , rdi je hexvar mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar add rdi , hexvar jmp hexvar xor eax , eax ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] add r3 , r3 , hexvar ldr r1 , [ sp ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) addiu v0 , v0 , hexvar lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
test rdi , rdi je hexvar mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar add rdi , hexvar jmp hexvar xor eax , eax ret
test rdi , rdi je hexvar mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar add rdi , hexvar jmp hexvar xor eax , eax ret
push { fp , lr } add fp , sp , num ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num blt hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] mvn r2 , num str r2 , [ r3 ] mov r0 , r0 pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) andi v0 , v0 , hexvar beqz v0 , hexvar lui v0 , hexvar lw a0 , hexvar ( v0 ) bltz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , - num sw v1 , hexvar ( v0 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] and eax , hexvar cmp eax , num je hexvar cmp dword ptr [ hexvar ] , num jl hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] and eax , hexvar cmp eax , num je hexvar cmp dword ptr [ hexvar ] , num jl hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , num pop ebp ret
push rbp mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax js hexvar mov eax , dword ptr [ rip + hexvar ] mov edi , eax call hexvar mov dword ptr [ rip + hexvar ] , hexvar nop pop rbp ret
test byte ptr [ rip + hexvar ] , num je hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi js hexvar sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] and eax , hexvar cmp eax , num je hexvar cmp dword ptr [ hexvar ] , num setge al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] and eax , hexvar cmp eax , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar cmp dword ptr [ hexvar ] , num jl hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] and eax , hexvar cmp eax , num je hexvar cmp dword ptr [ hexvar ] , num jl hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , num pop ebp ret
test byte ptr [ rip + hexvar ] , num je hexvar mov edi , dword ptr [ rip + hexvar ] test edi , edi js hexvar sub rsp , num call hexvar mov dword ptr [ rip + hexvar ] , hexvar add rsp , num ret
push r14 push rbx sub rsp , hexvar mov r8 , rdx mov rbx , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + num ] , rax lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] call hexvar test al , al js hexvar mov edx , hexvar cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rdx , qword ptr [ rsp + hexvar ] lea rsi , [ rsp + num ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rbx ] , rcx add rsp , hexvar pop rbx pop r14 ret
push r14 push rbx sub rsp , hexvar mov r8 , rdx mov rbx , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + num ] , rax lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] call hexvar test al , al js hexvar mov edx , hexvar cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rdx , qword ptr [ rsp + hexvar ] lea rsi , [ rsp + num ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rbx ] , rcx add rsp , hexvar pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , ( a1 )
push r14 push rbx sub rsp , hexvar mov r8 , rdx mov rbx , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + num ] , rax lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] call hexvar test al , al js hexvar mov edx , hexvar cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rdx , qword ptr [ rsp + hexvar ] lea rsi , [ rsp + num ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rbx ] , rcx add rsp , hexvar pop rbx pop r14 ret
push r14 push rbx sub rsp , hexvar mov r8 , rdx mov rbx , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + num ] , rax lea rdi , [ rsp + num ] lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] lea rcx , [ rsp + hexvar ] call hexvar test al , al js hexvar mov edx , hexvar cmp dword ptr [ rsp + hexvar ] , num jne hexvar mov rdx , qword ptr [ rsp + hexvar ] lea rsi , [ rsp + num ] mov rdi , r14 call hexvar test rax , rax je hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rbx ] , rcx add rsp , hexvar pop rbx pop r14 ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test al , hexvar jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push edi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , edx mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test al , hexvar jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx jle hexvar mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar cmp byte ptr [ edi + edx - num ] , num jns hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar xor ebp , ebp mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , ebp jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rbp , rsp mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov rdx , rbp call hexvar mov ebx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar sub eax , num mov dword ptr [ rip + hexvar ] , eax xor edx , edx mov rsi , rbp mov edi , num call hexvar test ebx , ebx jne hexvar call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) lui s3 , hexvar lw s5 , - hexvar ( gp ) sw s6 , hexvar ( sp ) addiu s3 , s3 , hexvar sw s4 , hexvar ( sp ) addiu s6 , sp , hexvar sw s2 , hexvar ( sp ) lui s4 , hexvar sw s0 , hexvar ( sp ) lui s2 , hexvar sw ra , hexvar ( sp ) lui s0 , hexvar sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s5 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( s2 ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar nop addiu a0 , zero , num move a2 , s6 jalr t9 move a1 , s3 lw s1 , hexvar ( s2 ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , v0 , - num sw v0 , hexvar ( s0 ) lw t9 , - hexvar ( gp ) move a2 , zero addiu a0 , zero , num jalr t9 move a1 , s6 bnez s1 , hexvar lw gp , hexvar ( sp ) lw v1 , hexvar ( s4 ) addiu v0 , zero , num beq v1 , v0 , hexvar nop jal hexvar nop b hexvar lw gp , hexvar ( sp ) jal hexvar nop addiu v0 , zero , num lw v1 , hexvar ( s4 ) beq v1 , v0 , hexvar lw gp , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 b hexvar lw gp , hexvar ( sp ) lw v1 , hexvar ( sp ) lw v0 , ( s5 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push { fp , lr } add fp , sp , num sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] b hexvar ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 ] cmp r3 , num beq hexvar bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar sub r3 , fp , hexvar mov r2 , r3 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] sub r3 , r3 , num ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] mov r3 , hexvar str r3 , [ fp , - hexvar ] b hexvar mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar ldr r0 , [ fp , - hexvar ] bl hexvar sub r3 , fp , hexvar mov r2 , num mov r1 , r3 mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , fp , hexvar move a2 , v0 lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v1 , v0 , - num lui v0 , hexvar sw v1 , - hexvar ( v0 ) addiu v0 , fp , hexvar move a2 , zero move a1 , v0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop jal hexvar nop lw gp , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop nop lw v0 , - hexvar ( gp ) lw v1 , hexvar ( fp ) lw v0 , ( v0 ) beq v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r14 push r13 lea r13 , [ rip + hexvar ] push r12 push rbp lea r12 , [ rip + hexvar ] push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] mov rbp , rsp or edx , eax je hexvar nop word ptr [ rax + rax ] mov r14 , qword ptr [ r13 ] mov rbx , qword ptr [ rip + hexvar ] test r14 , r14 je hexvar add r14 , rbx nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] add rbx , num movzx esi , byte ptr [ rbx - num ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , sil cmp rbx , r14 jne hexvar mov r14 , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] test r14 , r14 je hexvar add r14 , rbx nop dword ptr [ rax + rax ] mov rdi , qword ptr [ rip + hexvar ] add rbx , num movzx esi , byte ptr [ rbx - num ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , sil cmp rbx , r14 jne hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar xor edi , edi mov rdx , rbp mov rsi , r12 call hexvar mov ebx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar sub eax , num mov edi , hexvar mov dword ptr [ rip + hexvar ] , eax call hexvar xor edx , edx mov rsi , rbp mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov edx , dword ptr [ rip + hexvar ] or edx , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rip + hexvar ] test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] mov cl , num mov byte ptr [ rbp - hexvar ] , cl jmp rdx mov eax , dword ptr [ rip + hexvar ] test eax , eax setne cl mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rdx mov al , byte ptr [ rbp - hexvar ] movzx ecx , al mov edx , ecx mov ecx , edx and ecx , num mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx movzx eax , byte ptr [ rip + hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx call hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rip + hexvar ] call hexvar mov esi , hexvar xor edi , edi lea rdx , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - num ] , edi mov edi , dword ptr [ rbp - num ] test edi , edi setne cl movzx edi , cl mov edx , edi mov rdx , qword ptr [ rdx * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rdx mov eax , dword ptr [ rbp - num ] add eax , - num mov dword ptr [ rip + hexvar ] , eax mov dword ptr [ rbp - num ] , hexvar mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov edi , dword ptr [ rbp - num ] xor eax , eax mov esi , eax call hexvar mov rsi , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rsi mov edi , dword ptr [ rbp - num ] call hexvar xor edi , edi mov edx , edi mov edi , num lea rsi , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rdx add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ebp , dword ptr [ ebx + hexvar ] lea edi , [ esp + hexvar ] jmp hexvar cmp byte ptr [ ebx + hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ ebp ] call hexvar add esp , hexvar push edi lea eax , [ ebx + hexvar ] push eax push num call hexvar mov esi , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax je hexvar sub eax , num mov dword ptr [ ebx + hexvar ] , eax mov esi , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar push num push edi push num call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] cmp eax , num mov cl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar mov eax , dword ptr [ hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar xor eax , eax mov dword ptr [ esp ] , num lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp - num ] sub eax , num mov dword ptr [ hexvar ] , eax xor eax , eax mov dword ptr [ esp ] , num lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar call hexvar call hexvar cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] b hexvar sub r3 , fp , hexvar mov r2 , r3 ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] sub r3 , r3 , num ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] sub r3 , fp , hexvar mov r2 , num mov r1 , r3 mov r0 , num bl hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar bl hexvar bl hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r0 , [ fp , - hexvar ] bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax jmp hexvar lea rax , [ rbp - hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , num mov dword ptr [ rip + hexvar ] , eax lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar call hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] or eax , edx test eax , eax jne hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp push rbx sub rsp , num mov rbp , rsi mov rsi , rdx mov rbx , rcx cmp rbp , rcx mov rdx , rcx cmovbe rdx , rbp call hexvar test eax , eax jne hexvar cmp rbp , rbx jb hexvar seta al movzx eax , al add rsp , num pop rbx pop rbp ret
push rbp push rbx mov rbp , rsi mov rsi , rdx mov rdx , rcx mov rbx , rcx sub rsp , num cmp rbp , rcx cmovbe rdx , rbp call hexvar test eax , eax jne hexvar xor eax , eax cmp rbp , rbx mov edx , hexvar seta al cmovb eax , edx add rsp , num pop rbx pop rbp ret
push rbp push rbx mov rbp , rsi mov rsi , rdx mov rdx , rcx mov rbx , rcx sub rsp , num cmp rbp , rcx cmovbe rdx , rbp call hexvar test eax , eax jne hexvar xor eax , eax cmp rbp , rbx mov edx , hexvar seta al cmovb eax , edx add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx ja hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jae hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jbe hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 move a1 , a2 move s0 , a3 sltu a2 , a3 , s1 move v0 , a3 movz v0 , s1 , a2 move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw ra , hexvar ( sp ) sltu v0 , s1 , s0 bnez v0 , hexvar addiu v0 , zero , - num sltu v0 , s0 , s1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sltu s2 , a3 , a1 move s0 , a1 sw s1 , hexvar ( sp ) move a1 , a2 sw ra , hexvar ( sp ) move a2 , a3 sw gp , hexvar ( sp ) movz a2 , s0 , s2 lw t9 , - hexvar ( gp ) jalr t9 move s1 , a3 bnez v0 , hexvar sltu s0 , s0 , s1 addiu v0 , zero , - num movz v0 , s2 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sltu a0 , v0 , a0 movz v0 , v1 , a0 move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v1 , v0 beqz v0 , hexvar nop addiu v0 , zero , - num sw v0 , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v0 , v1 beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop nop
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , num mov eax , esi cmp edi , esi cmovbe eax , edi push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar cmp edi , esi jb hexvar seta al movzx eax , al pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , lr } mov r5 , r1 cmp r1 , r3 mov r1 , r2 movlo r2 , r5 movhs r2 , r3 mov r4 , r3 bl hexvar cmp r0 , num popne { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 move a1 , a2 move s0 , a3 sltu a2 , a3 , s1 move v0 , a3 movz v0 , s1 , a2 move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw ra , hexvar ( sp ) sltu v0 , s1 , s0 bnez v0 , hexvar addiu v0 , zero , - num sltu v0 , s0 , s1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , num ( v0 )
push { r4 , r5 , r6 , r7 , r8 , lr } subs r5 , r0 , num mov r7 , r1 beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar cmp r0 , num beq hexvar cmp r7 , num ldrbne r3 , [ r7 , hexvar ] bicne r3 , r3 , num strbne r3 , [ r7 , hexvar ] ldr r3 , [ pc , hexvar ] ldr r6 , [ r3 , num ] ldr r4 , [ r6 ] cmp r4 , num bne hexvar b hexvar ldr r4 , [ r6 , num ] ! cmp r4 , num beq hexvar ldr r1 , [ r4 ] mov r0 , r5 bl hexvar cmp r0 , num bne hexvar cmp r7 , num strne r4 , [ r7 , num ] mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num jne hexvar cmp qword ptr [ hexvar ] , num je hexvar mov rax , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dx , word ptr [ rax + hexvar ] and dx , hexvar or dx , num mov word ptr [ rax + hexvar ] , dx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov cx , word ptr [ rax + hexvar ] xor cx , hexvar mov dx , hexvar mov si , dx xor si , hexvar xor dx , hexvar or cx , si or dx , hexvar xor cx , hexvar and cx , dx mov word ptr [ rax + hexvar ] , cx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r13 push r12 mov r13 , rsi push rbp push rbx mov r12 , rdi sub rsp , num test rdi , rdi je hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar test r13 , r13 je hexvar and byte ptr [ r13 + hexvar ] , hexvar mov rbp , qword ptr [ rip + hexvar ] mov rbx , qword ptr [ rbp ] test rbx , rbx jne hexvar jmp hexvar nop add rbp , num mov rbx , qword ptr [ rbp ] test rbx , rbx je hexvar mov rsi , qword ptr [ rbx ] mov rdi , r12 call hexvar test eax , eax jne hexvar test r13 , r13 je hexvar mov qword ptr [ r13 + num ] , rbx add rsp , num mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) move s1 , a0 lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s1 jalr t9 addiu a1 , a1 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s0 , hexvar move a0 , s1 lw v0 , hexvar ( s0 ) ins v0 , zero , num , num jal hexvar sw v0 , hexvar ( s0 ) beqz v0 , hexvar lw ra , hexvar ( sp ) sw v0 , num ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , a0 , hexvar lw gp , hexvar ( sp ) bnez v0 , hexvar move s1 , v0 lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop beqz s0 , hexvar lw ra , hexvar ( sp ) lw v1 , hexvar ( s0 ) addiu a0 , zero , num sw v0 , num ( s0 ) ins v1 , a0 , num , num sw v1 , hexvar ( s0 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez s0 , hexvar lw v0 , ( v0 ) b hexvar lw ra , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) move s2 , a0 lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s2 jalr t9 addiu a1 , a1 , - hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s3 , hexvar lui v0 , hexvar lw v0 , hexvar ( s3 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar cmp eax , num jne hexvar cmp qword ptr [ hexvar ] , num je hexvar mov rax , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] and edx , hexvar or edx , hexvar mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] and ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] test ebp , ebp je hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , ebp repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta al sbb al , num test al , al je hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esp + hexvar ] and byte ptr [ eax + hexvar ] , hexvar mov edi , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ edi ] test esi , esi jne hexvar jmp hexvar nop lea esi , [ esi ] add edi , num mov esi , dword ptr [ edi ] test esi , esi je hexvar sub esp , num push dword ptr [ esi ] push ebp call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , esi add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov ecx , num lea edi , [ ebx - hexvar ] mov esi , eax repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta dl sbb dl , num test dl , dl jne hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar test ebp , ebp je hexvar mov dword ptr [ ebp + num ] , eax or byte ptr [ ebp + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 subs r5 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , r5 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r0 , [ r3 , num ] cmp r0 , num ldreq r3 , [ r3 ] ldreq r0 , [ r3 ] cmp r4 , num strne r0 , [ r4 , num ] ldrbne r3 , [ r4 , hexvar ] orrne r3 , r3 , num strbne r3 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc } strbvs sp , [ r4 , hexvar ] ! andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , zero sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal - hexvar nop lw gp , hexvar ( sp ) lw s2 , hexvar ( s1 ) lw t9 , - hexvar ( gp ) jalr t9 lw s1 , hexvar ( s1 ) move a3 , zero lw gp , hexvar ( sp ) addiu a2 , sp , hexvar sw zero , hexvar ( sp ) move a1 , s1 sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) wsbh v0 , v0 rotr v0 , v0 , hexvar lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
push { r4 , r5 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r1 , num ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r5 , r3 bl hexvar mov r1 , r0 add r2 , sp , hexvar mov r3 , num str r3 , [ sp , num ] str r1 , [ sp ] mov r3 , num mov r1 , r5 mov r0 , r4 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar ldrb r3 , [ sp , hexvar ] mov r2 , r3 ldrb r3 , [ sp , hexvar ] lsl r3 , r3 , num orr r2 , r2 , r3 ldrb r3 , [ sp , hexvar ] lsl r3 , r3 , hexvar orr r2 , r2 , r3 ldrb r3 , [ sp , hexvar ] lsl r3 , r3 , hexvar orr r3 , r2 , r3 str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push num push esi call hexvar call hexvar pop edx pop ecx push num push eax push num lea eax , [ esp + hexvar ] push eax push dword ptr [ esi + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax mov eax , num cmovne eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push num push esi call hexvar call hexvar pop edx pop ecx push num push eax push num lea eax , [ esp + hexvar ] push eax push dword ptr [ esi + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax mov eax , num cmovne eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rdi xor r14d , r14d xor esi , esi call hexvar mov r15 , qword ptr [ rbx + hexvar ] movsxd rbx , dword ptr [ rbx + hexvar ] call hexvar mov rdx , rsp mov rdi , r15 mov rsi , rbx xor ecx , ecx mov r8 , rax xor r9d , r9d call hexvar test eax , eax je hexvar movzx r14d , byte ptr [ rsp + num ] movzx eax , byte ptr [ rsp + num ] shl rax , num movzx ecx , byte ptr [ rsp ] movzx edx , byte ptr [ rsp + num ] shl rdx , hexvar shl r14 , hexvar or r14 , rcx or r14 , rax or r14 , rdx mov rax , r14 add rsp , hexvar pop rbx pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) move a1 , zero lw t9 , - hexvar ( gp ) bal - hexvar nop lw gp , hexvar ( sp ) lw s1 , hexvar ( s0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push num push esi call hexvar call hexvar pop edx pop ecx push num push eax push num lea eax , [ esp + hexvar ] push eax push dword ptr [ esi + hexvar ] push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax mov eax , num cmovne eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rdi xor r14d , r14d xor esi , esi call hexvar mov r15 , qword ptr [ rbx + hexvar ] movsxd rbx , dword ptr [ rbx + hexvar ] call hexvar mov rdx , rsp mov rdi , r15 mov rsi , rbx xor ecx , ecx mov r8 , rax xor r9d , r9d call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rsp ] movzx ecx , byte ptr [ rsp + num ] shl rcx , num or rcx , rax movzx eax , byte ptr [ rsp + num ] shl rax , hexvar or rax , rcx movzx r14d , byte ptr [ rsp + num ] shl r14 , hexvar or r14 , rax mov rax , r14 add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rdi xor r14d , r14d xor esi , esi call hexvar mov r15 , qword ptr [ rbx + hexvar ] movsxd rbx , dword ptr [ rbx + hexvar ] call hexvar mov rdx , rsp mov rdi , r15 mov rsi , rbx xor ecx , ecx mov r8 , rax xor r9d , r9d call hexvar test eax , eax je hexvar movzx eax , byte ptr [ rsp ] movzx ecx , byte ptr [ rsp + num ] shl rcx , num or rcx , rax movzx eax , byte ptr [ rsp + num ] shl rax , hexvar or rax , rcx movzx r14d , byte ptr [ rsp + num ] shl r14 , hexvar or r14 , rax mov rax , r14 add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rdi lea r14 , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , r14 mov rax , qword ptr [ rsp + num ] xor esi , esi call hexvar mov r15 , qword ptr [ rbx + hexvar ] movsxd rbx , dword ptr [ rbx + hexvar ] call hexvar mov rdi , r15 mov rsi , rbx mov rdx , r14 xor ecx , ecx mov r8 , rax xor r9d , r9d call hexvar mov dword ptr [ rsp + num ] , eax movzx eax , byte ptr [ rsp + hexvar ] movzx ecx , byte ptr [ rsp + hexvar ] shl rcx , num or rcx , rax movzx eax , byte ptr [ rsp + hexvar ] shl rax , hexvar or rax , rcx movzx ecx , byte ptr [ rsp + hexvar ] shl rcx , hexvar or rcx , rax mov esi , hexvar mov edx , hexvar jmp hexvar mov esi , hexvar mov rax , rcx nop word ptr cs : [ rax + rax ] cmp esi , hexvar jg hexvar cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar cmp dword ptr [ rsp + num ] , num mov esi , hexvar cmove esi , edx jmp hexvar nop word ptr [ rax + rax ] cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar mov esi , hexvar xor eax , eax jmp hexvar mov rcx , qword ptr [ rsp + num ] add rsp , hexvar pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push esi call hexvar mov edi , eax lea eax , [ ebp + ebp ] add esp , hexvar cmp eax , edi jl hexvar sub esp , num push ebp push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test edi , edi je hexvar movzx edx , byte ptr [ esi ] mov byte ptr [ esi ] , num test dl , dl je hexvar xor eax , eax jmp hexvar lea esi , [ esi ] add eax , num or byte ptr [ ebp ] , cl cmp edi , eax je hexvar movzx edx , byte ptr [ esi + eax ] mov byte ptr [ esi + eax ] , num test dl , dl je hexvar lea ecx , [ edx - hexvar ] cmp cl , num jbe hexvar lea ecx , [ edx - hexvar ] cmp cl , num ja hexvar lea ecx , [ edx - hexvar ] mov ebp , eax sar ebp , num add ebp , dword ptr [ esp + hexvar ] test al , num jne hexvar add eax , num shl ecx , num cmp edi , eax mov byte ptr [ ebp ] , cl jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov ebx , edx mov r15 , rsi mov rbp , rdi call hexvar mov r12 , rax lea eax , [ rbx + rbx ] cmp eax , r12d jge hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar movsxd rdx , ebx mov rdi , r15 xor esi , esi call hexvar mov r14d , num test r12d , r12d jle hexvar xor eax , eax nop dword ptr [ rax ] movzx ecx , byte ptr [ rbp + rax ] mov byte ptr [ rbp + rax ] , num test cl , cl je hexvar lea edx , [ rcx - hexvar ] cmp dl , hexvar jb hexvar lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar mov edx , ecx test al , num jne hexvar shl dl , num mov ecx , eax shr rcx , num mov byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar jmp hexvar nop dword ptr [ rax + rax ] mov ecx , eax shr rcx , num or byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov ebx , edx mov r15 , rsi mov rbp , rdi call hexvar mov r12 , rax lea eax , [ rbx + rbx ] cmp eax , r12d jge hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar movsxd rdx , ebx mov rdi , r15 xor esi , esi call hexvar mov r14d , num test r12d , r12d jle hexvar xor eax , eax nop dword ptr [ rax ] movzx ecx , byte ptr [ rbp + rax ] mov byte ptr [ rbp + rax ] , num test cl , cl je hexvar lea edx , [ rcx - hexvar ] cmp dl , hexvar jb hexvar lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar mov edx , ecx test al , num jne hexvar shl dl , num mov ecx , eax shr rcx , num mov byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar jmp hexvar nop dword ptr [ rax + rax ] mov ecx , eax shr rcx , num or byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov ebx , edx mov r15 , rsi mov rbp , rdi call hexvar mov r12 , rax lea eax , [ rbx + rbx ] cmp eax , r12d jge hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar movsxd rdx , ebx mov rdi , r15 xor esi , esi call hexvar mov r14d , num test r12d , r12d jle hexvar xor eax , eax nop dword ptr [ rax ] movzx ecx , byte ptr [ rbp + rax ] mov byte ptr [ rbp + rax ] , num test cl , cl je hexvar lea edx , [ rcx - hexvar ] cmp dl , hexvar jb hexvar lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar mov edx , ecx test al , num jne hexvar shl dl , num mov ecx , eax shr rcx , num mov byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar jmp hexvar nop dword ptr [ rax + rax ] mov ecx , eax shr rcx , num or byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push esi call hexvar mov edi , eax lea eax , [ ebp + ebp ] add esp , hexvar cmp eax , edi jl hexvar sub esp , num push ebp push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test edi , edi je hexvar movzx edx , byte ptr [ esi ] mov byte ptr [ esi ] , num test dl , dl je hexvar xor eax , eax jmp hexvar lea esi , [ esi ] add eax , num or byte ptr [ ebp ] , cl cmp edi , eax je hexvar movzx edx , byte ptr [ esi + eax ] mov byte ptr [ esi + eax ] , num test dl , dl je hexvar lea ecx , [ edx - hexvar ] cmp cl , num jbe hexvar lea ecx , [ edx - hexvar ] cmp cl , num ja hexvar lea ecx , [ edx - hexvar ] mov ebp , eax sar ebp , num add ebp , dword ptr [ esp + hexvar ] test al , num jne hexvar add eax , num shl ecx , num cmp edi , eax mov byte ptr [ ebp ] , cl jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov ebx , edx mov r15 , rsi mov rbp , rdi call hexvar mov r12 , rax lea eax , [ rbx + rbx ] cmp eax , r12d jge hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar movsxd rdx , ebx mov rdi , r15 xor esi , esi call hexvar mov r14d , num test r12d , r12d jle hexvar xor eax , eax nop dword ptr [ rax ] movzx ecx , byte ptr [ rbp + rax ] mov byte ptr [ rbp + rax ] , num test cl , cl je hexvar lea edx , [ rcx - hexvar ] cmp dl , hexvar jb hexvar lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar mov edx , ecx test al , num jne hexvar shl dl , num mov ecx , eax shr rcx , num mov byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar jmp hexvar nop dword ptr [ rax + rax ] mov ecx , eax shr rcx , num or byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov ebx , edx mov r15 , rsi mov rbp , rdi call hexvar mov r12 , rax lea eax , [ rbx + rbx ] cmp eax , r12d jge hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar movsxd rdx , ebx mov rdi , r15 xor esi , esi call hexvar mov r14d , num test r12d , r12d jle hexvar xor eax , eax nop dword ptr [ rax ] movzx ecx , byte ptr [ rbp + rax ] mov byte ptr [ rbp + rax ] , num test cl , cl je hexvar lea edx , [ rcx - hexvar ] cmp dl , hexvar jb hexvar lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar mov edx , ecx test al , num jne hexvar shl dl , num mov ecx , eax shr rcx , num mov byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar jmp hexvar nop dword ptr [ rax + rax ] mov ecx , eax shr rcx , num or byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push esi call hexvar mov edi , eax lea eax , [ ebp + ebp ] add esp , hexvar cmp eax , edi jl hexvar sub esp , num push ebp push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test edi , edi je hexvar movzx edx , byte ptr [ esi ] mov byte ptr [ esi ] , num test dl , dl je hexvar xor eax , eax jmp hexvar lea esi , [ esi ] add eax , num or byte ptr [ ebp ] , cl cmp edi , eax je hexvar movzx edx , byte ptr [ esi + eax ] mov byte ptr [ esi + eax ] , num test dl , dl je hexvar lea ecx , [ edx - hexvar ] cmp cl , num jbe hexvar lea ecx , [ edx - hexvar ] cmp cl , num ja hexvar lea ecx , [ edx - hexvar ] mov ebp , eax sar ebp , num add ebp , dword ptr [ esp + hexvar ] test al , num jne hexvar add eax , num shl ecx , num cmp edi , eax mov byte ptr [ ebp ] , cl jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] push esi call hexvar mov edi , eax lea eax , [ ebp + ebp ] add esp , hexvar cmp eax , edi jl hexvar sub esp , num push ebp push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test edi , edi je hexvar movzx edx , byte ptr [ esi ] mov byte ptr [ esi ] , num test dl , dl je hexvar xor eax , eax jmp hexvar lea esi , [ esi ] add eax , num or byte ptr [ ebp ] , cl cmp edi , eax je hexvar movzx edx , byte ptr [ esi + eax ] mov byte ptr [ esi + eax ] , num test dl , dl je hexvar lea ecx , [ edx - hexvar ] cmp cl , num jbe hexvar lea ecx , [ edx - hexvar ] cmp cl , num ja hexvar lea ecx , [ edx - hexvar ] mov ebp , eax sar ebp , num add ebp , dword ptr [ esp + hexvar ] test al , num jne hexvar add eax , num shl ecx , num cmp edi , eax mov byte ptr [ ebp ] , cl jne hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov ebx , edx mov r15 , rsi mov rbp , rdi call hexvar mov r12 , rax lea eax , [ rbx + rbx ] cmp eax , r12d jge hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar movsxd rdx , ebx mov rdi , r15 xor esi , esi call hexvar mov r14d , num test r12d , r12d jle hexvar xor eax , eax nop dword ptr [ rax ] movzx ecx , byte ptr [ rbp + rax ] mov byte ptr [ rbp + rax ] , num test cl , cl je hexvar lea edx , [ rcx - hexvar ] cmp dl , hexvar jb hexvar lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] lea edx , [ rcx - hexvar ] cmp dl , num ja hexvar add cl , hexvar mov edx , ecx test al , num jne hexvar shl dl , num mov ecx , eax shr rcx , num mov byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar jmp hexvar nop dword ptr [ rax + rax ] mov ecx , eax shr rcx , num or byte ptr [ r15 + rcx ] , dl add rax , num cmp eax , r12d jl hexvar mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi mov rsi , qword ptr [ rdi ] cmp rsi , qword ptr [ rdi + num ] je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rbx + num ] lea rcx , [ rax + num ] mov qword ptr [ rbx + num ] , rcx mov qword ptr [ rdx + rax * num ] , rbp mov eax , num add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi ] mov rdi , qword ptr [ rbp - hexvar ] cmp rsi , qword ptr [ rdi + num ] jne hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] sub rcx , num sub rdx , rcx shl rdx , num mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] shl rdx , num mov rdi , rcx mov rsi , rdx call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num sete r8b and r8b , num movzx r9d , r8b movsxd rax , r9d cmp rax , num je hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx + num ] mov rdi , rsi add rdi , num mov qword ptr [ rdx + num ] , rdi mov qword ptr [ rcx + rsi * num ] , rax mov byte ptr [ rbp - num ] , num mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] add eax , num shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] shl ecx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ edx + num ] mov edi , esi add edi , num mov dword ptr [ edx + num ] , edi mov dword ptr [ ecx + esi * num ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov ecx , dword ptr [ edx ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] cmp ecx , edx jne hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] add edx , num lea ecx , [ edx + edx ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] lea ecx , [ edx * num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] sub esp , num push ecx push edx mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num sete al movzx eax , al test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp + num ] mov ebx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] lea ecx , [ eax + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , ecx shl eax , num lea edx , [ ebx + eax ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
ldm r0 , { r2 , r3 } cmp r2 , r3 push { r4 , r5 , r6 , lr } ldr r2 , [ r0 , num ] mov r4 , r0 mov r5 , r1 beq hexvar add r1 , r3 , num str r1 , [ r4 , num ] mov r0 , num str r5 , [ r2 , r3 , lsl num ] pop { r4 , r5 , r6 , pc } ldcllo p0 , c0 , [ pc ] , - hexvar andeq r0 , r0 , r0
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] add eax , num shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] shl ecx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ edx + num ] mov edi , esi add edi , num mov dword ptr [ edx + num ] , edi mov dword ptr [ ecx + esi * num ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov ecx , dword ptr [ edx ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] cmp ecx , edx jne hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] add edx , num lea ecx , [ edx + edx ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , ecx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] lea ecx , [ edx * num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] sub esp , num push ecx push edx mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num sete al movzx eax , al test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp + num ] mov ebx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] lea ecx , [ eax + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , ecx shl eax , num lea edx , [ ebx + eax ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + num ] cmp edx , dword ptr [ esi + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] add eax , num shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] shl ecx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ edx + num ] mov edi , esi add edi , num mov dword ptr [ edx + num ] , edi mov dword ptr [ ecx + esi * num ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] cmp eax , dword ptr [ esi + num ] je hexvar mov edx , dword ptr [ esi + num ] mov eax , dword ptr [ esi + num ] lea ecx , [ eax + num ] mov dword ptr [ esi + num ] , ecx mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + eax * num ] , ecx mov eax , num add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov bl , dl cmp dword ptr [ ebp + num ] , num setne bh mov dl , bh xor dl , hexvar and dl , num mov dh , num mov dword ptr [ ebp - hexvar ] , eax mov al , dh xor al , num and bh , al or dl , bh and dl , num movzx esi , dl cmp dword ptr [ ebp + hexvar ] , num setne al mov dl , al xor dl , hexvar and dl , num mov bh , dh xor bh , num and al , bh xor dh , num and dh , num and bh , num or dl , al or dh , bh xor dl , dh and dl , num movzx edi , dl cmp esi , edi mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl je hexvar xor eax , eax mov cl , al xor eax , eax cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , cl jg hexvar xor eax , eax cmp eax , dword ptr [ ebp + hexvar ] setle cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] cmp r3 , num moveq r3 , num movne r3 , num and r2 , r3 , hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num moveq r3 , num movne r3 , num and r3 , r3 , hexvar eor r3 , r3 , r2 and r3 , r3 , hexvar mov r2 , r3 ldr r3 , [ fp , - num ] mvn r3 , r3 lsr r3 , r3 , hexvar and r3 , r3 , hexvar and r3 , r3 , r2 ldr r2 , [ fp , - hexvar ] mvn r2 , r2 lsr r2 , r2 , hexvar and r2 , r2 , hexvar and r3 , r3 , r2 mov r0 , r3 add sp , fp , num pop { fp } bx lr
push rbp mov rbp , rsp xor eax , eax mov cl , al mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num setne dl xor dl , hexvar and dl , num movzx eax , dl cmp dword ptr [ rbp - num ] , num setne dl mov r8b , dl xor r8b , hexvar and r8b , num mov r9b , num xor r9b , num and dl , r9b or r8b , dl and r8b , num movzx esi , r8b cmp eax , esi mov byte ptr [ rbp - num ] , cl je hexvar xor eax , eax mov cl , al xor eax , eax cmp eax , dword ptr [ rbp - num ] mov byte ptr [ rbp - num ] , cl jg hexvar xor eax , eax cmp eax , dword ptr [ rbp - num ] setle cl mov byte ptr [ rbp - num ] , cl mov al , byte ptr [ rbp - num ] and al , num movzx eax , al pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl xor cl , hexvar and cl , num movzx edx , cl mov dword ptr [ ebp - hexvar ] , edx xor eax , eax mov cl , al cmp dword ptr [ ebp + hexvar ] , num setne dl xor dl , hexvar and dl , num movzx eax , dl mov esi , dword ptr [ ebp - hexvar ] cmp esi , eax mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx setle dl mov byte ptr [ ebp - hexvar ] , dl xor eax , eax mov cl , al mov dl , byte ptr [ ebp - hexvar ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx setle dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov bl , dl cmp dword ptr [ ebp + num ] , num setne bh xor bh , hexvar and bh , num movzx edx , bh cmp dword ptr [ ebp + hexvar ] , num setne bh xor bh , hexvar and bh , num movzx esi , bh cmp edx , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl je hexvar xor eax , eax mov cl , al xor eax , eax cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , cl jg hexvar xor eax , eax cmp eax , dword ptr [ ebp + hexvar ] setle cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov bl , dl cmp dword ptr [ ebp + num ] , num setne bh xor bh , hexvar and bh , num movzx edx , bh cmp dword ptr [ ebp + hexvar ] , num setne bh xor bh , hexvar and bh , num movzx esi , bh cmp edx , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl je hexvar xor eax , eax mov cl , al xor eax , eax cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , cl jg hexvar xor eax , eax cmp eax , dword ptr [ ebp + hexvar ] setle cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov bl , dl cmp dword ptr [ ebp + num ] , num setne bh xor bh , hexvar and bh , num movzx edx , bh cmp dword ptr [ ebp + hexvar ] , num setne bh xor bh , hexvar and bh , num movzx esi , bh cmp edx , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl je hexvar xor eax , eax mov cl , al xor eax , eax cmp eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , cl jg hexvar xor eax , eax cmp eax , dword ptr [ ebp + hexvar ] setle cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num sete dl cmp dword ptr [ ebp + hexvar ] , num sete al xor eax , edx test al , al je hexvar cmp dword ptr [ ebp + num ] , num js hexvar cmp dword ptr [ ebp + hexvar ] , num js hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop ebp ret
push rbp mov rbp , rsp mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi cmp dword ptr [ rbp - num ] , num sete dl cmp dword ptr [ rbp - num ] , num sete al xor eax , edx test al , al je hexvar cmp dword ptr [ rbp - num ] , num js hexvar cmp dword ptr [ rbp - num ] , num js hexvar mov eax , num jmp hexvar mov eax , num and eax , num pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov bl , dl cmp dword ptr [ ebp + num ] , num setne bh xor bh , hexvar and bh , num movzx edx , bh cmp dword ptr [ ebp + hexvar ] , num setne bh xor bh , hexvar and bh , num movzx esi , bh cmp edx , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl je hexvar xor eax , eax cmp eax , dword ptr [ ebp + num ] setle cl mov byte ptr [ ebp - hexvar ] , cl xor eax , eax mov cl , al mov dl , byte ptr [ ebp - hexvar ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar xor eax , eax cmp eax , dword ptr [ ebp + hexvar ] setle cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , ecx mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx + hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx + hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx + hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx + hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdx mov esi , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , esi cmp qword ptr [ rax ] , num setne dil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , dil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , hexvar cmp qword ptr [ rcx + hexvar ] , rdx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx ] mov dword ptr [ rsi + hexvar ] , ecx mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx + hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx + hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx + hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx + hexvar ] , eax add rsp , hexvar pop rbp ret
lui gp , hexvar move v0 , a0 addiu gp , gp , hexvar addiu sp , sp , - hexvar lw v1 , num ( v0 )
push rax mov r9 , rsi mov r8 , qword ptr [ rdi ] mov rsi , qword ptr [ rdi + num ] mov rcx , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp ] , rdx mov edi , hexvar xor edx , edx call hexvar pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r1 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r0 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ sp , hexvar ] str r2 , [ sp , num ] ldr r2 , [ sp , hexvar ] str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , r0 mov r2 , num ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ eax ] push dword ptr [ eax + num ] push num push dword ptr [ eax + num ] push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push rax mov r9 , rsi mov r8 , qword ptr [ rdi ] mov rsi , qword ptr [ rdi + num ] mov rcx , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp ] , rdx mov edi , hexvar xor edx , edx call hexvar pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ eax ] push dword ptr [ eax + num ] push num push dword ptr [ eax + num ] push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push rax mov r9 , rsi mov r8 , qword ptr [ rdi ] mov rsi , qword ptr [ rdi + num ] mov rcx , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp ] , rdx mov edi , hexvar xor edx , edx call hexvar pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r1 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r0 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ sp , hexvar ] str r2 , [ sp , num ] ldr r2 , [ sp , hexvar ] str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , r0 mov r2 , num ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push rax mov r9 , rsi mov r8 , qword ptr [ rdi ] mov rsi , qword ptr [ rdi + num ] mov rcx , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp ] , rdx mov edi , hexvar xor edx , edx call hexvar pop rcx ret
push rax mov r9 , rsi mov r8 , qword ptr [ rdi ] mov rsi , qword ptr [ rdi + num ] mov rcx , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp ] , rdx mov edi , hexvar xor edx , edx call hexvar pop rcx ret
push r12 push rbp mov r12d , edx push rbx mov rbp , rsi mov rbx , rdi call hexvar test rax , rax jle hexvar mov rsi , rbp mov rdi , rbx call hexvar test rax , rax mov rbp , rax je hexvar xor esi , esi mov rdi , rax call hexvar test r12d , r12d mov rdi , rbp je hexvar pop rbx pop rbp pop r12 jmp hexvar nop dword ptr [ rax ] mov rdi , rbx call hexvar pop rbx mov dword ptr [ rip + hexvar ] , num pop rbp pop r12 ret
push r12 push rbp push rbx mov rbx , rdi mov rbp , rsi mov r12d , edx call hexvar test rax , rax jle hexvar mov rsi , rbp mov rdi , rbx call hexvar mov rbp , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar test r12d , r12d je hexvar mov rdi , rbp call hexvar jmp hexvar mov dword ptr [ rip + hexvar ] , num pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax push eax call hexvar add esp , hexvar test edx , edx jle hexvar sub esp , num push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar sub esp , num push num push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , ebp call hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar jmp hexvar test edx , edx js hexvar cmp eax , num ja hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r13 push r12 mov r13 , rdi push rbp push rbx sub rsp , num call hexvar test rax , rax jle hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , r13 call hexvar test rax , rax mov r12 , rax je hexvar mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rax call hexvar test rbp , rbp je hexvar mov rdi , rbp call hexvar cmp rbp , rbx je hexvar mov rbp , rbx xor edi , edi call hexvar mov rsi , rbp mov rdi , r12 call hexvar test rax , rax mov rbx , rax jne hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ r12 ] call hexvar mov dword ptr [ rip + hexvar ] , num test rbp , rbp je hexvar mov rdi , rbp call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , r12 call hexvar mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r13 call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 mov r13 , rdi push rbp push rbx sub rsp , num call hexvar test rax , rax jle hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , r13 call hexvar test rax , rax mov r12 , rax je hexvar mov esi , num mov rdi , rax call hexvar test eax , eax je hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax + rax ] mov rdi , rax call hexvar test rbp , rbp je hexvar mov rdi , rbp call hexvar cmp rbp , rbx je hexvar mov rbp , rbx xor edi , edi call hexvar mov rsi , rbp mov rdi , r12 call hexvar test rax , rax mov rbx , rax jne hexvar call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ r12 ] call hexvar mov dword ptr [ rip + hexvar ] , num test rbp , rbp je hexvar mov rdi , rbp call hexvar jmp hexvar nop dword ptr [ rax + rax ] mov rdi , r12 call hexvar mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r13 call hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) blez v0 , hexvar nop lui v0 , hexvar lw a1 , hexvar ( v0 ) move a0 , s3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 addiu a1 , zero , num move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s1 , zero move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw ra , hexvar ( sp ) move a0 , s3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , num b hexvar sw v1 , hexvar ( v0 ) bnez v0 , hexvar lui v0 , hexvar bnez v1 , hexvar lui v0 , hexvar lui v0 , hexvar addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lui v0 , hexvar addiu v1 , zero , num b hexvar sw v1 , hexvar ( v0 ) move s1 , s0 move a0 , zero lw t9 , - hexvar ( gp )
push r13 push r12 push rbp push rbx sub rsp , num mov r13 , rdi call hexvar test rax , rax jle hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , r13 call hexvar mov r12 , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rdi , r12 call hexvar mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r13 call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) bgtz v0 , hexvar nop bnez v0 , hexvar nop bnez v1 , hexvar nop lui v0 , hexvar addiu v1 , zero , num sw v1 , - hexvar ( v0 ) b hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu v1 , zero , num sw v1 , - hexvar ( v0 ) b hexvar nop addiu a1 , zero , num lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu v1 , zero , num sw v1 , - hexvar ( v0 ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax mov edi , edx mov ebp , ecx push eax call hexvar add esp , hexvar test edx , edx jle hexvar sub esp , num push edi push esi call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar mov edx , num call hexvar test ebp , ebp je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar jmp hexvar test edx , edx js hexvar cmp eax , num ja hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r13 push r12 push rbp push rbx sub rsp , num mov r13 , rdi call hexvar test rax , rax jle hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdi , r13 call hexvar mov r12 , rax test rax , rax je hexvar mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rdi , r12 call hexvar mov rdi , r12 call hexvar test eax , eax jne hexvar mov rdi , r13 call hexvar mov dword ptr [ rip + hexvar ] , num jmp hexvar mov dword ptr [ rip + hexvar ] , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar imul eax , dword ptr [ ebp + num ] , hexvar lea ecx , [ hexvar ] add ecx , eax mov eax , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , hexvar bhi hexvar ldr r1 , [ pc , hexvar ] ldr r2 , [ fp , - num ] mov r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 lsl r3 , r3 , num add r3 , r1 , r3 add r3 , r3 , num ldr r3 , [ r3 ] b hexvar mov r3 , num mov r0 , r3 add sp , fp , num pop { fp } bx lr ldrdeq r3 , r4 , [ r5 ] , -r8
sltiu v0 , a0 , hexvar beqz v0 , hexvar nop sll v0 , a0 , num addu v0 , v0 , a0 lui a0 , hexvar sll v0 , v0 , num addiu a0 , a0 , - hexvar addu a0 , a0 , v0 jr ra lw v0 , num ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar imul eax , dword ptr [ ebp + num ] , hexvar lea ecx , [ hexvar ] add ecx , eax mov eax , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
sltiu v0 , a0 , hexvar beqz v0 , hexvar sll v1 , a0 , num lui v0 , hexvar addu a0 , v1 , a0 sll v1 , a0 , num addiu a0 , v0 , hexvar addu a0 , a0 , v1 lw v0 , num ( a0 ) jr ra nop jr ra move v0 , zero
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar imul eax , dword ptr [ ebp + num ] , hexvar lea ecx , [ hexvar ] add ecx , eax mov eax , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , hexvar setb al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] imul ecx , eax , hexvar lea edx , [ hexvar ] add edx , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , ecx jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
sltiu v0 , a0 , hexvar beqz v0 , hexvar nop sll v0 , a0 , num addu v0 , v0 , a0 lui a0 , hexvar sll v0 , v0 , num addiu a0 , a0 , - hexvar addu a0 , a0 , v0 jr ra lw v0 , num ( a0 )
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , hexvar ja hexvar mov edx , dword ptr [ ebp + num ] lea ecx , [ eax + hexvar ] mov eax , edx add eax , eax add eax , edx shl eax , num add eax , ecx mov eax , dword ptr [ eax ] jmp hexvar mov eax , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , hexvar mov dword ptr [ ebp - num ] , eax jae hexvar imul eax , dword ptr [ ebp + num ] , hexvar lea ecx , [ hexvar ] add ecx , eax mov eax , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , num pop ebp ret
push r12 lea r12 , [ rip + hexvar ] push rbp push rbx lea rbx , [ rip + hexvar ] mov rbp , rdi nop dword ptr [ rax ] mov rsi , rbp mov rdi , rbx call qword ptr [ rbx + hexvar ] test eax , eax jne hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add r12 , num mov rax , qword ptr [ r12 ] test rax , rax je hexvar mov rbx , rax mov rsi , rbp mov rdi , rbx call qword ptr [ rbx + hexvar ] test eax , eax je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop beqz v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) bnez v0 , hexvar nop move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx call hexvar add eax , hexvar mov esi , dword ptr [ esp + hexvar ] lea edi , [ eax - hexvar ] lea ebx , [ eax - hexvar ] test ebx , ebx je hexvar sub esp , num push esi push ebx call dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar mov ebx , dword ptr [ ebx + hexvar ] test ebx , ebx jne hexvar add edi , num mov ebx , dword ptr [ edi ] test ebx , ebx jne hexvar mov ebx , num mov eax , ebx pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r6 , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] cmp r4 , num beq hexvar ldr r3 , [ r4 , hexvar ] mov r1 , r5 mov r0 , r4 blx r3 cmp r0 , num bne hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num bne hexvar ldr r4 , [ r6 , num ] ! cmp r4 , num bne hexvar mov r4 , num mov r0 , r4 pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push dword ptr [ ebp + num ] push dword ptr [ ebp - hexvar ] call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , num leave ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r6 , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] cmp r4 , num beq hexvar ldr r3 , [ r4 , hexvar ] mov r1 , r5 mov r0 , r4 blx r3 cmp r0 , num bne hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num bne hexvar ldr r4 , [ r6 , num ] ! cmp r4 , num bne hexvar mov r4 , num mov r0 , r4 pop { r4 , r5 , r6 , pc }
push edi push esi push ebx call hexvar add eax , hexvar mov esi , dword ptr [ esp + hexvar ] lea edi , [ eax - hexvar ] lea ebx , [ eax - hexvar ] test ebx , ebx je hexvar sub esp , num push esi push ebx call dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar mov ebx , dword ptr [ ebx + hexvar ] test ebx , ebx jne hexvar add edi , num mov ebx , dword ptr [ edi ] test ebx , ebx jne hexvar mov ebx , num mov eax , ebx pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , lr } mov r5 , r0 ldr r6 , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] cmp r4 , num beq hexvar ldr r3 , [ r4 , hexvar ] mov r1 , r5 mov r0 , r4 blx r3 cmp r0 , num bne hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num bne hexvar ldr r4 , [ r6 , num ] ! cmp r4 , num bne hexvar mov r4 , num mov r0 , r4 pop { r4 , r5 , r6 , pc }
call hexvar add eax , hexvar push edi push esi push ebx lea ebx , [ eax - hexvar ] lea edi , [ eax - hexvar ] mov esi , dword ptr [ esp + hexvar ] lea esi , [ esi ] sub esp , num push esi push ebx call dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar mov ebx , dword ptr [ ebx + hexvar ] test ebx , ebx jne hexvar add edi , num mov eax , dword ptr [ edi ] test eax , eax je hexvar sub esp , num mov ebx , eax push esi push ebx call dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax je hexvar mov eax , ebx pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) lui s2 , hexvar sw s0 , hexvar ( sp ) sw s1 , hexvar ( sp ) addiu s2 , s2 , hexvar sw ra , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , hexvar ( s0 ) move a0 , s0 jalr t9 move a1 , s1 bnez v0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( s0 ) bnez s0 , hexvar nop addiu s2 , s2 , num lw v0 , ( s2 ) beqz v0 , hexvar move a0 , v0 move s0 , v0 lw t9 , hexvar ( s0 ) jalr t9 move a1 , s1 beqz v0 , hexvar nop lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rax mov edi , num call hexvar leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar call hexvar mov ecx , dword ptr [ ebx + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ eax ] mov esi , dword ptr [ ebx + hexvar ] test ecx , ecx mov dword ptr [ esp + num ] , eax jg hexvar lea eax , [ ebx + hexvar ] cmp esi , eax je hexvar sub esp , num push num push esi call hexvar add esp , hexvar mov esi , eax mov dword ptr [ ebx + hexvar ] , eax mov edx , dword ptr [ ebx + hexvar ] mov eax , num sub esp , num sub eax , edx lea edx , [ esi + edx * num ] shl eax , num push eax push num push edx call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num mov ebp , dword ptr [ esi ] mov edi , dword ptr [ esi + num ] lea ecx , [ ebx + hexvar ] or eax , num mov edx , ebp mov dword ptr [ esp + hexvar ] , eax push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , ecx push ecx push eax push dword ptr [ ebx + hexvar ] mov eax , edi push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp ebp , eax ja hexvar lea ebp , [ eax + num ] lea eax , [ ebx + hexvar ] cmp edi , eax mov dword ptr [ esi ] , ebp je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar sub esp , hexvar push ebp call hexvar mov dword ptr [ esi + num ] , eax mov edi , eax pop eax pop edx push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] mov edx , ebp push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , edi push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp ] mov edx , dword ptr [ esp + num ] mov dword ptr [ eax ] , edx add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) move a2 , a1 move a1 , a0 move a0 , zero jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 mov r13 , rsi push rbp push rbx mov r12 , rdi sub rsp , hexvar call hexvar mov rbp , rax mov r14d , dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] mov rbx , qword ptr [ rip + hexvar ] test eax , eax jg hexvar cmp rbx , hexvar je hexvar mov rdi , rbx mov esi , hexvar call hexvar mov rbx , rax mov qword ptr [ rip + hexvar ] , rax movsxd rdi , dword ptr [ rip + hexvar ] mov edx , num xor esi , esi sub edx , edi shl rdi , num movsxd rdx , edx add rdi , rbx shl rdx , num call hexvar mov dword ptr [ rip + hexvar ] , num mov eax , dword ptr [ rip + hexvar ] mov r11 , qword ptr [ rbx ] sub rsp , num mov r15 , qword ptr [ rbx + num ] mov r8d , dword ptr [ rip + hexvar ] mov rcx , r13 mov rdx , r12 or eax , num mov rsi , r11 mov dword ptr [ rsp + hexvar ] , eax push qword ptr [ rip + hexvar ] mov r9d , eax push qword ptr [ rip + hexvar ] push hexvar mov rdi , r15 mov qword ptr [ rsp + hexvar ] , r11 call hexvar add rsp , hexvar mov r11 , qword ptr [ rsp ] cmp r11 , rax ja hexvar lea rsi , [ rax + num ] cmp r15 , hexvar mov qword ptr [ rbx ] , rsi je hexvar mov rdi , r15 mov qword ptr [ rsp ] , rsi call hexvar mov rsi , qword ptr [ rsp ] mov rdi , rsi mov qword ptr [ rsp ] , rsi call hexvar sub rsp , num mov qword ptr [ rbx + num ] , rax mov r8d , dword ptr [ rip + hexvar ] push qword ptr [ rip + hexvar ] push qword ptr [ rip + hexvar ] mov rcx , r13 push hexvar mov r9d , dword ptr [ rsp + hexvar ] mov rdx , r12 mov rsi , qword ptr [ rsp + hexvar ] mov rdi , rax mov r15 , rax call hexvar add rsp , hexvar mov dword ptr [ rbp ] , r14d add rsp , hexvar mov rax , r15 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
call hexvar add eax , hexvar mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + num ] lea eax , [ eax + hexvar ] mov dword ptr [ esp + num ] , eax xor eax , eax jmp hexvar lea esi , [ esi ] lea edi , [ edi ]
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar call hexvar mov ecx , dword ptr [ ebx + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr [ eax ] mov esi , dword ptr [ ebx + hexvar ] test ecx , ecx mov dword ptr [ esp + num ] , eax jg hexvar lea eax , [ ebx + hexvar ] cmp esi , eax je hexvar sub esp , num push num push esi call hexvar add esp , hexvar mov esi , eax mov dword ptr [ ebx + hexvar ] , eax mov edx , dword ptr [ ebx + hexvar ] mov eax , num sub esp , num sub eax , edx lea edx , [ esi + edx * num ] shl eax , num push eax push num push edx call hexvar mov dword ptr [ ebx + hexvar ] , num add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , num mov ebp , dword ptr [ esi ] mov edi , dword ptr [ esi + num ] lea ecx , [ ebx + hexvar ] or eax , num mov edx , ebp mov dword ptr [ esp + hexvar ] , eax push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , ecx push ecx push eax push dword ptr [ ebx + hexvar ] mov eax , edi push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp ebp , eax ja hexvar lea ebp , [ eax + num ] lea eax , [ ebx + hexvar ] cmp edi , eax mov dword ptr [ esi ] , ebp je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar sub esp , hexvar push ebp call hexvar mov dword ptr [ esi + num ] , eax mov edi , eax pop eax pop edx push dword ptr [ ebx + hexvar ] push dword ptr [ ebx + hexvar ] mov edx , ebp push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , edi push dword ptr [ ebx + hexvar ] push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp ] mov edx , dword ptr [ esp + num ] mov dword ptr [ eax ] , edx add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) bltz v0 , hexvar nop slti v1 , v0 , hexvar bnez v1 , hexvar nop addiu v1 , zero , hexvar bne v0 , v1 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov edx , ecx sub edx , hexvar mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al mov rsp , rbp pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , edx mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov cl , byte ptr [ eax ] and cl , num movzx eax , cl mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] mov esi , edx sub esi , hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - num ] pop esi pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num blt hexvar cmp r3 , hexvar ble hexvar cmp r3 , hexvar bne hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , fp , num pop { fp } bx lr
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov ecx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , ecx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov edx , ecx sub edx , hexvar mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al mov rsp , rbp pop rbp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] test eax , eax js hexvar cmp eax , hexvar jle hexvar cmp eax , hexvar jne hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , ecx sub edx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a1 ) lw a1 , ( a0 ) move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar leave ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r1 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar pop ebx ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push rbp push rbx mov rbx , rdi xor eax , eax mov edx , hexvar sub rsp , num mov edi , dword ptr [ rdi ] call hexvar test eax , eax js hexvar mov ebp , eax mov rdi , rbx call hexvar mov dword ptr [ rbx ] , ebp xor eax , eax add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov edi , dword ptr [ ecx ] mov edi , dword ptr [ edi ] mov edx , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax cmp dword ptr [ ecx ] , num setl al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov dword ptr [ esi ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov edi , dword ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] xor eax , eax mov cl , al mov edx , hexvar mov al , cl call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax sets cl movzx eax , cl mov esi , eax mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov eax , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , eax mov dword ptr [ rbp - num ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , hexvar mov rsi , rcx mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 )
push r12 push rbp push rbx mov rbx , rdi mov r12 , rsi mov edx , hexvar mov edi , dword ptr [ rdi ] mov eax , num call hexvar mov ebp , eax test eax , eax jns hexvar mov edx , hexvar mov rsi , r12 mov edi , dword ptr [ rbx ] mov eax , num call hexvar mov ebp , eax test eax , eax js hexvar mov edi , dword ptr [ rbx ] test edi , edi js hexvar call hexvar test eax , eax je hexvar mov ecx , hexvar mov edx , hexvar mov esi , hexvar mov edi , hexvar call hexvar mov dword ptr [ rbx ] , ebp mov eax , num jmp hexvar mov eax , hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rsi mov ebp , edi mov esi , num call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov r14d , num cmp ebp , hexvar je hexvar cmp ebp , hexvar je hexvar cmp ebp , hexvar jne hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar jmp hexvar xor r14d , r14d jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rsi mov ebp , edi mov esi , num call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov r14d , num cmp ebp , hexvar je hexvar cmp ebp , hexvar je hexvar cmp ebp , hexvar jne hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar jmp hexvar xor r14d , r14d jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rsi mov ebp , edi mov esi , num call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov r14d , num cmp ebp , hexvar je hexvar cmp ebp , hexvar je hexvar cmp ebp , hexvar jne hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar jmp hexvar xor r14d , r14d jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rsi mov ebp , edi mov esi , num call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov r14d , num cmp ebp , hexvar je hexvar cmp ebp , hexvar je hexvar cmp ebp , hexvar jne hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar jmp hexvar xor r14d , r14d jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rsi mov ebp , edi mov esi , num call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov r14d , num cmp ebp , hexvar je hexvar cmp ebp , hexvar je hexvar cmp ebp , hexvar jne hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar jmp hexvar xor r14d , r14d jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rsi mov ebp , edi mov esi , num call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov r14d , num cmp ebp , hexvar je hexvar cmp ebp , hexvar je hexvar cmp ebp , hexvar jne hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar jmp hexvar xor r14d , r14d jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw s1 , hexvar ( sp ) addiu a1 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , a0 lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , ( s0 ) addiu v1 , zero , hexvar beq s1 , v1 , hexvar addiu v1 , zero , hexvar beq s1 , v1 , hexvar addiu v1 , zero , hexvar beq s1 , v1 , hexvar lw ra , hexvar ( sp ) addiu v0 , zero , num lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move v0 , zero lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , v0 jalr t9 addiu a1 , a1 , - hexvar lui a1 , hexvar lw gp , hexvar ( sp ) lw a0 , ( s0 ) lw t9 , - hexvar ( gp )
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num push edi call hexvar mov edx , eax mov dword ptr [ esi ] , eax add esp , hexvar mov eax , num test edx , edx je hexvar cmp edi , hexvar je hexvar cmp edi , hexvar je hexvar mov eax , num cmp edi , hexvar je hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push num push edi call hexvar mov edx , eax mov dword ptr [ esi ] , eax add esp , hexvar xor eax , eax test edx , edx je hexvar cmp edi , hexvar je hexvar cmp edi , hexvar je hexvar cmp edi , hexvar mov eax , num je hexvar pop ebx pop esi pop edi ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rsi mov ebp , edi mov esi , num call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov r14d , num cmp ebp , hexvar je hexvar cmp ebp , hexvar je hexvar cmp ebp , hexvar jne hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar jmp hexvar xor r14d , r14d jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar mov edx , hexvar mov ecx , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov qword ptr [ rsp ] , hexvar mov esi , hexvar mov edx , hexvar mov ecx , hexvar mov r8d , hexvar mov r9d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar jmp hexvar mov esi , hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rbx ] mov esi , hexvar call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar blx r3 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lui v0 , hexvar and v0 , v1 , v0 bnez v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 ) lui v0 , hexvar and v1 , v1 , v0 lui v0 , hexvar bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) b hexvar nop move v0 , zero move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( v0 ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz t9 , hexvar lui v1 , hexvar jalr t9 nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop b hexvar nop lw v0 , hexvar ( fp ) lhu v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rdi , rdx call rax jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar test al , al jne hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] jmp hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ hexvar ] , num je hexvar mov rax , qword ptr [ hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov cx , word ptr [ rax + hexvar ] shr cx , hexvar and cx , num movzx edx , cx cmp edx , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov cx , word ptr [ rax + hexvar ] shr cx , hexvar mov dx , hexvar xor dx , num mov si , cx xor si , dx and si , cx movzx edi , si cmp edi , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call rax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , hexvar ( v0 ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz t9 , hexvar lui v1 , hexvar jalr t9 nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( a0 )
push r15 push r14 mov r15 , rdi push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call rax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 mov r15 , rdi push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] test rax , rax je hexvar call rax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] xor rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] or rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num sete al and al , num movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rip ] jmp rdx mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] xor rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip ] jmp rax add qword ptr [ rbp - hexvar ] , - num setg al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num ] jmp rdx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] mov rcx , qword ptr [ rbp - hexvar ] or rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rip ] jmp rax cmp qword ptr [ rbp - hexvar ] , num sete al and al , num movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] xor rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num mov ecx , hexvar mov edx , hexvar cmovg edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] or rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num sete al and al , num movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] xor rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] or rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] xor rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num mov ecx , hexvar mov edx , hexvar cmovg edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] or rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num sete al and al , num movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] xor rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] or rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num sete al and al , num movzx eax , al pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r9 mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr [ rdx ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , - num mov qword ptr [ rax ] , rcx cmp rcx , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx ] mov rcx , qword ptr [ rcx + rsi * num ] mov rsi , qword ptr [ rbp - hexvar ] or rcx , qword ptr [ rsi ] mov qword ptr [ rsi ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num sete cl and cl , num movzx edx , cl mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] xor rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] or rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num sete al and al , num movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , rax xor rdx , hexvar movabs rsi , hexvar and rdx , rsi mov rdi , - num xor rdi , rsi and rax , rdi mov r8 , rcx xor r8 , hexvar and r8 , rsi and rcx , rdi or rdx , rax or r8 , rcx xor rdx , r8 mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] or rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num sete al and al , num movzx eax , al pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] xor rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jle hexvar mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + rcx * num ] or rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num sete al and al , num movzx eax , al pop rbp ret
mov eax , dword ptr [ esp + num ] movzx edx , byte ptr [ eax + hexvar ] mov ecx , edx and ecx , hexvar cmp cl , hexvar jne hexvar and edx , hexvar or edx , hexvar mov byte ptr [ eax + hexvar ] , dl mov edx , dword ptr [ esp + num ] or dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , edx ret
movzx eax , byte ptr [ rdi + hexvar ] mov edx , eax and edx , hexvar cmp dl , hexvar jne hexvar and eax , hexvar or eax , hexvar mov byte ptr [ rdi + hexvar ] , al mov qword ptr [ rdi + hexvar ] , rsi or dword ptr [ rdi + hexvar ] , hexvar ret
movzx eax , byte ptr [ rdi + hexvar ] and eax , hexvar cmp al , hexvar je hexvar mov qword ptr [ rdi + hexvar ] , rsi or dword ptr [ rdi + hexvar ] , hexvar ret
movzx eax , byte ptr [ rdi + hexvar ] and eax , hexvar cmp al , hexvar je hexvar mov qword ptr [ rdi + hexvar ] , rsi or dword ptr [ rdi + hexvar ] , hexvar ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov eax , dword ptr [ rsi + hexvar ] shr eax , num xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , num xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , hexvar xor edx , hexvar or ecx , esi or edx , hexvar xor ecx , hexvar and ecx , edx or ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov esi , edx and esi , hexvar xor edx , hexvar or esi , edx mov dword ptr [ rax + hexvar ] , esi pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov eax , dword ptr [ rsi + hexvar ] shr eax , num xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , num xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , num jne hexvar mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , hexvar xor edx , hexvar or ecx , esi or edx , hexvar xor ecx , hexvar and ecx , edx or ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov esi , edx and esi , hexvar xor edx , hexvar or esi , edx mov dword ptr [ rax + hexvar ] , esi pop rbp ret
movzx eax , byte ptr [ rdi + hexvar ] mov edx , eax and edx , hexvar cmp dl , hexvar jne hexvar and eax , hexvar or eax , hexvar mov byte ptr [ rdi + hexvar ] , al mov qword ptr [ rdi + hexvar ] , rsi or dword ptr [ rdi + hexvar ] , hexvar ret
movzx eax , byte ptr [ rdi + hexvar ] mov edx , eax and edx , hexvar cmp dl , hexvar jne hexvar and eax , hexvar or eax , hexvar mov byte ptr [ rdi + hexvar ] , al mov qword ptr [ rdi + hexvar ] , rsi or dword ptr [ rdi + hexvar ] , hexvar ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar or edx , hexvar mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] or ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax + hexvar ] and eax , hexvar cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - num ] movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar or edx , hexvar mov byte ptr [ rax + hexvar ] , dl mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] or ah , hexvar mov edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , edx nop pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a3 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a3 , a3 , - hexvar lw v0 , - hexvar ( gp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
cmp byte ptr [ rip + hexvar ] , num push r12 mov r12 , rdi push rbp mov rbp , rdx push rbx mov rbx , rsi je hexvar test rbx , rbx je hexvar movsxd rdx , dword ptr [ rbp ] mov rbx , qword ptr [ rbx + rdx * num ] mov rax , rdx test rbx , rbx je hexvar add eax , num mov rdx , rbx mov esi , hexvar mov dword ptr [ rbp ] , eax mov rdi , r12 call hexvar mov rbp , rax mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , rbx movzx eax , byte ptr [ rbx ] test al , al je hexvar sub eax , hexvar cmp al , hexvar jbe hexvar mov rdx , rbx movabs rcx , hexvar nop dword ptr [ rax + rax ] add rdx , num movzx eax , byte ptr [ rdx ] test al , al je hexvar sub eax , hexvar cmp al , hexvar ja hexvar bt rcx , rax jae hexvar movss xmm0 , dword ptr [ rip + hexvar ] cmp byte ptr [ rip + hexvar ] , num movss dword ptr [ rbp + hexvar ] , xmm0 je hexvar pop rbx mov eax , num pop rbp pop r12 ret
test rsi , rsi je hexvar movsxd rcx , dword ptr [ rdx ] mov eax , num cmp qword ptr [ rsi + rcx * num ] , num je hexvar push rbp push rbx sub rsp , num mov rbx , rdx mov rbp , rsi mov esi , hexvar call hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num movsxd rdx , dword ptr [ rbx ] mov rdx , qword ptr [ rbp + rdx * num ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbx ] , num mov eax , num jmp hexvar mov eax , num ret
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ eax + hexvar ] lea eax , [ eax - hexvar ] push eax mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
test rsi , rsi je hexvar movsxd rcx , dword ptr [ rdx ] mov eax , num cmp qword ptr [ rsi + rcx * num ] , num je hexvar push rbp push rbx sub rsp , num mov rbx , rdx mov rbp , rsi mov esi , hexvar call hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num movsxd rdx , dword ptr [ rbx ] mov rdx , qword ptr [ rbp + rdx * num ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbx ] , num mov eax , num jmp hexvar mov eax , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rcx , [ rip - hexvar ] mov r8 , rcx lea rcx , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a3 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a3 , a3 , hexvar lw v0 , - hexvar ( gp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] blx r3 mov r3 , r0 cmp r3 , num moveq r3 , num movne r3 , num strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] and r3 , r3 , hexvar cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , hexvar bne hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num ldrb r3 , [ r3 ] cmp r3 , hexvar beq hexvar ldr r3 , [ fp , - hexvar ] add r1 , r3 , num ldr r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] blx r3 mov r3 , r0 cmp r3 , num moveq r3 , num movne r3 , num strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , num beq hexvar ldrb r3 , [ fp , - hexvar ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num bne hexvar ldrb r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rip + hexvar ] jmp hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rbp - num ] , rax mov edx , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rcx call rax test eax , eax sete al mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rax + num ] mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rcx call rax test eax , eax sete al mov byte ptr [ rbp - hexvar ] , al add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] test al , al je hexvar movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al jne hexvar movzx eax , byte ptr [ rbp - hexvar ] leave ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] lea esi , [ eax - hexvar ] push edi push ebx test edi , hexvar push dword ptr [ esp + hexvar ] cmovne esi , dword ptr [ eax + hexvar ] call esi add esp , hexvar test eax , eax sete cl test edi , hexvar jne hexvar movzx edx , byte ptr [ ebx ] test dl , dl je hexvar test eax , eax je hexvar nop cmp dl , hexvar lea ebp , [ ebx + num ] movzx eax , byte ptr [ ebx + num ] je hexvar test al , al mov edx , eax mov ebx , ebp jne hexvar xor ecx , ecx add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] blx r3 mov r3 , r0 cmp r3 , num moveq r3 , num movne r3 , num strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] and r3 , r3 , hexvar cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , hexvar bne hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num ldrb r3 , [ r3 ] cmp r3 , hexvar beq hexvar ldr r3 , [ fp , - hexvar ] add r1 , r3 , num ldr r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] blx r3 mov r3 , r0 cmp r3 , num moveq r3 , num movne r3 , num strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , num beq hexvar ldrb r3 , [ fp , - hexvar ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num bne hexvar ldrb r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] lea esi , [ eax - hexvar ] push edi push ebx test edi , hexvar push dword ptr [ esp + hexvar ] cmovne esi , dword ptr [ eax + hexvar ] call esi add esp , hexvar test eax , eax sete cl test edi , hexvar jne hexvar movzx edx , byte ptr [ ebx ] test dl , dl je hexvar test eax , eax je hexvar nop cmp dl , hexvar lea ebp , [ ebx + num ] movzx eax , byte ptr [ ebx + num ] je hexvar test al , al mov edx , eax mov ebx , ebp jne hexvar xor ecx , ecx add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar ext v0 , a2 , hexvar , num sw s4 , hexvar ( sp ) move s4 , a0 sw s2 , hexvar ( sp ) move s2 , a2 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) lw s3 , - hexvar ( gp ) move a0 , s4 move a2 , s2 move t9 , s3 jalr t9 move a1 , s0 ext v1 , s2 , hexvar , num move a0 , v0 bnez v1 , hexvar sltiu v0 , v0 , num lb v1 , ( s0 ) beqz v1 , hexvar lw ra , hexvar ( sp ) beqz a0 , hexvar addiu s5 , zero , hexvar addiu s1 , s0 , num beq v1 , s5 , hexvar lb v0 , num ( s0 ) move v1 , v0 bnez v0 , hexvar move s0 , s1 move v0 , zero lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui s3 , hexvar b hexvar addiu s3 , s3 , hexvar lb v0 , num ( s1 ) move s0 , s1 addiu s1 , s1 , num beq v0 , s5 , hexvar move a2 , s2 move a1 , s1 move t9 , s3 jalr t9 move a0 , s4 lb v1 , num ( s0 ) beqz v1 , hexvar nop bnez v0 , hexvar move s0 , s1 lw ra , hexvar ( sp ) addiu v0 , zero , num lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar sltiu v0 , v0 , num
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] lea esi , [ eax - hexvar ] push edi push ebx test edi , hexvar push dword ptr [ esp + hexvar ] cmovne esi , dword ptr [ eax + hexvar ] call esi add esp , hexvar test eax , eax sete cl test edi , hexvar jne hexvar movzx edx , byte ptr [ ebx ] test dl , dl je hexvar test eax , eax je hexvar nop cmp dl , hexvar lea ebp , [ ebx + num ] movzx eax , byte ptr [ ebx + num ] je hexvar test al , al mov edx , eax mov ebx , ebp jne hexvar xor ecx , ecx add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , hexvar and v0 , v1 , v0 beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) b hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sltiu v0 , v0 , num sb v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , hexvar and v0 , v1 , v0 bnez v0 , hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lb v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num lb v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v1 , v0 , num lw v0 , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v1 lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sltiu v0 , v0 , num sb v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar bnez v0 , hexvar nop lbu v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
ldr r3 , [ pc , hexvar ] tst r2 , hexvar push { r4 , r5 , r6 , r7 , r8 , lr } ldr r6 , [ pc , hexvar ] movne r6 , r3 mov r7 , r2 mov r8 , r0 mov r4 , r1 blx r6 mov r2 , r0 clz r0 , r0 tst r7 , hexvar lsr r0 , r0 , num popne { r4 , r5 , r6 , r7 , r8 , pc } ldrb r3 , [ r4 ] cmp r3 , num popeq { r4 , r5 , r6 , r7 , r8 , pc } cmp r2 , num beq hexvar cmp r3 , hexvar add r5 , r4 , num ldrb r3 , [ r4 , num ] beq hexvar cmp r3 , num mov r4 , r5 bne hexvar mov r0 , r3 pop { r4 , r5 , r6 , r7 , r8 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s4 , a0 move s0 , a1 ext v0 , a2 , hexvar , num bnez v0 , hexvar move s1 , a2 lui s3 , hexvar addiu s3 , s3 , - hexvar move a2 , s1 move a1 , s0 move a0 , s4 move t9 , s3 jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 ext v1 , s1 , hexvar , num bnez v1 , hexvar sltiu v0 , v0 , num lb v1 , ( s0 ) beqz v1 , hexvar lw ra , hexvar ( sp ) beqz a0 , hexvar addiu s0 , s0 , num addiu s2 , zero , hexvar b hexvar move s5 , zero b hexvar lw s3 , - hexvar ( gp ) lb v0 , ( s0 ) beq v0 , s2 , hexvar move a2 , s1 move a1 , s0 move a0 , s4 move t9 , s3 jalr t9 nop lw gp , hexvar ( sp ) lb v1 , ( s0 ) beqz v1 , hexvar sltiu v0 , v0 , num beqz v0 , hexvar addiu s0 , s0 , num lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , num lb v1 , ( s0 ) b hexvar move v0 , s5 beq v1 , s2 , hexvar nop lb v1 , ( s0 ) bnez v1 , hexvar addiu s0 , s0 , num b hexvar move v0 , zero
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , r14d movabs r15 , hexvar mov qword ptr [ r8 ] , r15 mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx ] mov r8 , qword ptr [ r8 ] mov r9 , qword ptr [ rsi ] mov r12d , dword ptr [ rdi ] sub rsp , hexvar mov rdi , rax mov rsi , rcx mov rcx , r8 mov r8d , hexvar mov dword ptr [ rsp ] , r12d call hexvar add rsp , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ecx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , ecx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] lea edi , [ esi + num ] mov eax , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , edx and edi , hexvar add edi , hexvar add eax , edi push eax push dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar test eax , eax mov ecx , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num mov eax , dword ptr [ edx ] lea ebx , [ ecx + eax ] add edi , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ edx ] , edi push ebx push num push num call dword ptr [ eax + hexvar ] lea eax , [ ebx + num ] add esp , hexvar mov edi , dword ptr [ ebp + num ] push eax mov eax , esi cdq push edx push esi call dword ptr [ edi + hexvar ] lea edx , [ ebx + num ] add esp , hexvar mov eax , dword ptr [ ebp + num ] lea edi , [ ebx + hexvar ] push edx push num push hexvar call dword ptr [ eax + hexvar ] add esp , hexvar xor edx , edx mov eax , hexvar mov dword ptr [ ebx + hexvar ] , hexvar mov word ptr [ ebx + hexvar ] , ax mov word ptr [ ebx + hexvar ] , dx push esi push dword ptr [ esp + hexvar ] push edi mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test esi , num mov ecx , dword ptr [ esp + hexvar ] je hexvar nop mov byte ptr [ edi + esi ] , num add esi , num test esi , num jne hexvar add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , r14d movabs r15 , hexvar mov qword ptr [ r8 ] , r15 mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx ] mov r8 , qword ptr [ r8 ] mov r9 , qword ptr [ rsi ] mov r12d , dword ptr [ rdi ] sub rsp , hexvar mov rdi , rax mov rsi , rcx mov rcx , r8 mov r8d , hexvar mov dword ptr [ rsp ] , r12d call hexvar add rsp , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov edi , dword ptr [ rbp - hexvar ] push rdi mov r9 , r8 mov r8d , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
push r15 push r14 mov r14 , rdi push r13 push r12 lea r12d , [ r8 + num ] push rbp push rbx mov rdi , rsi and r12d , hexvar mov r15 , rdx mov ebx , r8d sub rsp , hexvar movsxd rsi , dword ptr [ rdx ] movsxd r12 , r12d add r12 , hexvar mov qword ptr [ rsp + num ] , rcx add rsi , r12 call hexvar test rax , rax mov r13 , rax je hexvar movsxd rbp , dword ptr [ r15 ] mov edi , num mov rax , rbp add rbp , r13 add r12d , eax mov rax , qword ptr [ r14 + num ] mov rsi , rbp mov dword ptr [ r15 ] , r12d call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] mov r12 , rdi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] lea rsi , [ rbp + num ] mov edi , hexvar call qword ptr [ rax + hexvar ] lea rcx , [ rbp + hexvar ] mov rsi , qword ptr [ rsp + num ] xor edx , edx mov eax , hexvar mov word ptr [ rbp + hexvar ] , dx mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rcx mov word ptr [ rbp + hexvar ] , ax mov rdx , r12 call hexvar test bl , num lea rdi , [ rax + r12 ] je hexvar add ebx , num add rdi , num mov byte ptr [ rdi - num ] , num test bl , num jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov edi , dword ptr [ rbp - hexvar ] push rdi mov r9 , r8 mov r8d , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
cmp byte ptr [ rdi + hexvar ] , num je hexvar movzx eax , byte ptr [ rdi + hexvar ] sub eax , num cmp al , num jbe hexvar mov eax , num ret
mov edx , dword ptr [ esp + num ] call hexvar add ecx , hexvar movzx eax , byte ptr [ edx + hexvar ] cmp al , num jne hexvar mov edx , dword ptr [ edx + hexvar ] movzx eax , byte ptr [ edx + hexvar ] sub eax , num cmp al , num jbe hexvar mov eax , num ret
lbu v0 , hexvar ( a0 ) addiu v1 , zero , num bne v0 , v1 , hexvar addiu v0 , v0 , - num lw a0 , hexvar ( a0 )
mov edx , dword ptr [ esp + num ] call hexvar add ecx , hexvar movzx eax , byte ptr [ edx + hexvar ] cmp al , num jne hexvar mov edx , dword ptr [ edx + hexvar ] movzx eax , byte ptr [ edx + hexvar ] sub eax , num cmp al , num jbe hexvar mov eax , num ret
lbu v0 , hexvar ( a0 ) addiu v1 , zero , num bne v0 , v1 , hexvar addiu v0 , v0 , - num lw a0 , hexvar ( a0 )
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov ax , word ptr [ rsi + hexvar ] mov cx , hexvar xor cx , hexvar mov dx , ax xor dx , cx and dx , ax movzx r8d , dx cmp r8d , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov cx , word ptr [ rax + hexvar ] mov dx , hexvar xor dx , hexvar mov si , cx xor si , dx and si , cx movzx edi , si cmp edi , num je hexvar mov rax , qword ptr [ rbp - num ] mov cx , word ptr [ rax + hexvar ] xor cx , hexvar mov dx , hexvar mov si , dx xor si , hexvar xor dx , hexvar or cx , si or dx , hexvar xor cx , hexvar and cx , dx movzx edi , cx cmp edi , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rax + hexvar ] shr ecx , num and ecx , num cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rax + hexvar ] and ecx , hexvar cmp ecx , num jne hexvar movabs rax , hexvar add rax , hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , hexvar mov eax , num pop rbp ret
push ebp mov ebp , esp call hexvar add edx , hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] cmp al , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] cmp al , num je hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] cmp al , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] movzx eax , byte ptr [ eax + hexvar ] and eax , num test al , al jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] shr eax , num and eax , hexvar and eax , hexvar test eax , eax jne hexvar mov eax , dword ptr [ ebp + num ] lea edx , [ edx + hexvar ] lea edx , [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + hexvar ] , hexvar mov eax , num pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov al , byte ptr [ rsi + hexvar ] sub al , num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov cl , byte ptr [ rax + hexvar ] sub cl , num sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov rax , qword ptr [ rbp - num ] mov cl , byte ptr [ rax + hexvar ] sub cl , num sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov eax , ecx mov ecx , eax and ecx , num mov eax , ecx mov rax , qword ptr [ rax + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov cl , byte ptr [ rax + hexvar ] and cl , hexvar shr cl , num movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , num pop rbp ret
mov edx , dword ptr [ esp + num ] call hexvar add ecx , hexvar movzx eax , byte ptr [ edx + hexvar ] cmp al , num jne hexvar mov edx , dword ptr [ edx + hexvar ] movzx eax , byte ptr [ edx + hexvar ] sub eax , num cmp al , num jbe hexvar mov eax , num ret
mov edx , dword ptr [ esp + num ] call hexvar add ecx , hexvar movzx eax , byte ptr [ edx + hexvar ] cmp al , num jne hexvar mov edx , dword ptr [ edx + hexvar ] movzx eax , byte ptr [ edx + hexvar ] sub eax , num cmp al , num jbe hexvar mov eax , num ret
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar nop add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) lw a0 , hexvar ( sp ) move t9 , v0 jalr t9 nop nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r0 , [ sp , num ] blx r3 mov r0 , r0 add sp , sp , hexvar pop { pc }
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar nop add esp , hexvar ret
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar nop add esp , hexvar ret
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar nop add esp , hexvar ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r0 , [ sp , num ] blx r3 mov r0 , r0 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) lw a0 , hexvar ( sp ) move t9 , v0 jalr t9 nop nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r0 , [ sp , num ] blx r3 mov r0 , r0 add sp , sp , hexvar pop { pc }
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar nop add esp , hexvar ret
mov eax , dword ptr [ rdx + hexvar ] lea r9 , [ rax + rax * num ] mov rax , qword ptr [ r8 ] lea rax , [ rax + r9 * num ] cmp rax , qword ptr [ r8 + hexvar ] mov qword ptr [ r8 + num ] , rax jae hexvar push r14 mov r14 , rdx push r13 push r12 push rbp mov r13 , rcx push rbx mov edx , dword ptr [ rdx + hexvar ] mov rbx , r8 add edx , dword ptr [ r14 + hexvar ] mov r12 , rsi mov rbp , rdi cmp qword ptr [ rax ] , rdx jb hexvar jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rbx + num ] lea rax , [ rcx + hexvar ] cmp rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + num ] , rax jae hexvar mov eax , dword ptr [ r14 + hexvar ] add eax , dword ptr [ r14 + hexvar ] cmp qword ptr [ rcx + hexvar ] , rax jae hexvar mov rcx , rbx mov rdx , r13 mov rsi , r12 mov rdi , rbp call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r4 , [ sp , hexvar ] ldr ip , [ r2 , num ] add ip , ip , ip , lsl num lsl ip , ip , num ldr sb , [ r4 ] add lr , sb , ip str lr , [ r4 , num ] ldr r5 , [ r4 , num ] cmp lr , r5 bhs hexvar mov r8 , r3 mov r5 , r2 mov r7 , r1 mov r6 , r0 ldr r3 , [ r2 , hexvar ] ldr r2 , [ r2 , hexvar ] add r3 , r3 , r2 ldr r2 , [ sb , ip ] cmp r2 , r3 bhs hexvar mov r3 , r4 mov r2 , r8 mov r1 , r7 mov r0 , r6 bl hexvar cmp r0 , num popeq { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } ldr r3 , [ r4 , num ] add ip , r3 , hexvar str ip , [ r4 , num ] ldr r2 , [ r4 , num ] cmp ip , r2 bhs hexvar ldr ip , [ r5 , hexvar ] ldr r2 , [ r5 , hexvar ] add ip , ip , r2 ldr r3 , [ r3 , hexvar ] cmp r3 , ip blo hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } movwge ip , hexvar strbtpl r4 , [ sb ] , - hexvar
push ebp mov ebp , esp push esi push ebx call hexvar add esi , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , edx add eax , eax add eax , edx shl eax , num lea edx , [ ecx + eax ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx jmp hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] mov ebx , esi call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] lea edx , [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] cmp edx , eax jae hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] add ecx , ebx mov ebx , num cmp edx , ebx jb hexvar cmp edx , ebx ja hexvar cmp eax , ecx jb hexvar mov eax , num lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rdx + hexvar ] mov edx , eax imul rdx , rdx , hexvar add rcx , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rcx xor eax , eax mov cl , al mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov rsi , qword ptr [ rbp - hexvar ] cmp rdx , qword ptr [ rsi + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rcx + hexvar ] add edx , hexvar add edx , esi sub edx , hexvar mov edx , edx mov ecx , edx cmp rax , rcx setb dil mov byte ptr [ rbp - hexvar ] , dil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] add rcx , hexvar mov qword ptr [ rax + num ] , rcx jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov eax , dword ptr [ rdx + hexvar ] lea r9 , [ rax + rax * num ] mov rax , qword ptr [ r8 ] lea rax , [ rax + r9 * num ] cmp rax , qword ptr [ r8 + hexvar ] mov qword ptr [ r8 + num ] , rax jae hexvar push r14 mov r14 , rdx push r13 push r12 push rbp mov r13 , rcx push rbx mov edx , dword ptr [ rdx + hexvar ] mov rbx , r8 add edx , dword ptr [ r14 + hexvar ] mov r12 , rsi mov rbp , rdi cmp qword ptr [ rax ] , rdx jb hexvar jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rbx + num ] lea rax , [ rcx + hexvar ] cmp rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + num ] , rax jae hexvar mov eax , dword ptr [ r14 + hexvar ] add eax , dword ptr [ r14 + hexvar ] cmp qword ptr [ rcx + hexvar ] , rax jae hexvar mov rcx , rbx mov rdx , r13 mov rsi , r12 mov rdi , rbp call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
addiu sp , sp , - hexvar lw t1 , num ( a2 ) lui gp , hexvar sw s0 , hexvar ( sp ) sll v0 , t1 , num lw s0 , hexvar ( sp ) addiu gp , gp , - hexvar addu v0 , v0 , t1 sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sll v0 , v0 , num sw s3 , hexvar ( sp ) lw v1 , ( s0 ) lw t0 , num ( s0 ) sw s2 , hexvar ( sp ) addu v0 , v1 , v0 sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) sltu v1 , v0 , t0 beqz v1 , hexvar sw v0 , num ( s0 ) lw v1 , hexvar ( a2 ) lw t1 , hexvar ( a2 ) lw t0 , ( v0 )
mov eax , dword ptr [ rdx + hexvar ] lea r9 , [ rax + rax * num ] mov rax , qword ptr [ r8 ] lea rax , [ rax + r9 * num ] cmp rax , qword ptr [ r8 + hexvar ] mov qword ptr [ r8 + num ] , rax jae hexvar push r14 mov r14 , rdx push r13 push r12 push rbp mov r13 , rcx push rbx mov edx , dword ptr [ rdx + hexvar ] mov rbx , r8 add edx , dword ptr [ r14 + hexvar ] mov r12 , rsi mov rbp , rdi cmp qword ptr [ rax ] , rdx jb hexvar jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rbx + num ] lea rax , [ rcx + hexvar ] cmp rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rbx + num ] , rax jae hexvar mov eax , dword ptr [ r14 + hexvar ] add eax , dword ptr [ r14 + hexvar ] cmp qword ptr [ rcx + hexvar ] , rax jae hexvar mov rcx , rbx mov rdx , r13 mov rsi , r12 mov rdi , rbp call hexvar test eax , eax jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp push edi mov ebp , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ ecx + num ] mov esi , dword ptr [ esp + hexvar ] lea edi , [ eax + eax * num ] mov eax , dword ptr [ esi ] lea eax , [ eax + edi * num ] cmp eax , dword ptr [ esi + num ] mov dword ptr [ esi + num ] , eax jae hexvar mov edi , dword ptr [ ecx + hexvar ] add edi , dword ptr [ ecx + hexvar ] cmp dword ptr [ eax + num ] , num mov dword ptr [ esp + hexvar ] , edi ja hexvar mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ esp + hexvar ] mov edi , ecx cmp dword ptr [ eax ] , edx jae hexvar push esi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + num ] lea ecx , [ eax + hexvar ] cmp ecx , dword ptr [ esi + num ] mov dword ptr [ esi + num ] , ecx jae hexvar mov ecx , dword ptr [ edi + hexvar ] add ecx , dword ptr [ edi + hexvar ] cmp dword ptr [ eax + hexvar ] , num ja hexvar cmp dword ptr [ eax + hexvar ] , ecx jb hexvar nop mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov ecx , eax mov rax , rcx add rax , rax add rax , rcx shl rax , num add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] lea rdx , [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jae hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] add eax , ecx mov eax , eax cmp rdx , rax jb hexvar mov eax , num leave ret
mov eax , dword ptr [ rdx + hexvar ] lea r9 , [ rax + rax * num ] mov rax , qword ptr [ r8 ] lea rax , [ rax + r9 * num ] mov qword ptr [ r8 + num ] , rax cmp rax , qword ptr [ r8 + hexvar ] jae hexvar push r14 push r13 push r12 push rbp push rbx mov rbx , r8 mov r14 , rcx mov rbp , rdx mov r13 , rsi mov r12 , rdi mov edx , dword ptr [ rdx + hexvar ] add edx , dword ptr [ rbp + hexvar ] cmp qword ptr [ rax ] , rdx jae hexvar mov rcx , rbx mov rdx , r14 mov rsi , r13 mov rdi , r12 call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbx + num ] lea rax , [ rdx + hexvar ] mov qword ptr [ rbx + num ] , rax cmp rax , qword ptr [ rbx + hexvar ] jae hexvar mov eax , dword ptr [ rbp + hexvar ] add eax , dword ptr [ rbp + hexvar ] cmp qword ptr [ rdx + hexvar ] , rax jb hexvar mov eax , num jmp hexvar mov eax , num ret
str lr , [ sp , - num ] ! ldr lr , [ pc , hexvar ] mov ip , hexvar mov r3 , lr ldr r1 , [ r3 ] , hexvar b hexvar cmp r1 , r3 strb ip , [ r3 , num ] bhi hexvar mov r0 , r3 ldrb r2 , [ r3 ] , - num cmp r2 , hexvar bhi hexvar add r2 , r2 , num strb r2 , [ r0 ] pop { pc }
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] movsx ecx , byte ptr [ rax ] mov dl , cl add dl , num mov byte ptr [ rax ] , dl sub ecx , hexvar setl dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , rax add rcx , - num mov qword ptr [ rbp - num ] , rcx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx setae dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] mov ecx , hexvar sub rax , rcx seta dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] mov rcx , rax add rcx , - num mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rax - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov byte ptr [ rip + hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] add rax , - num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax pop rbp ret
push rbp mov rbp , rsp mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] movsx ecx , byte ptr [ rax ] mov dl , cl add dl , num mov byte ptr [ rax ] , dl sub ecx , hexvar setl dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov dword ptr [ rbp - hexvar ] , ecx jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , rax add rcx , - num mov qword ptr [ rbp - num ] , rcx mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx setae dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] mov ecx , hexvar sub rax , rcx seta dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] mov rcx , rax add rcx , - num mov qword ptr [ rip + hexvar ] , rcx mov byte ptr [ rax - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov byte ptr [ rip + hexvar ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] add rax , - num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax pop rbp ret
push ebx call hexvar add ebx , hexvar mov ecx , dword ptr [ ebx + hexvar ] lea eax , [ ebx + hexvar ] movzx edx , byte ptr [ eax ] cmp dl , hexvar jle hexvar sub eax , num mov byte ptr [ eax + num ] , hexvar cmp ecx , eax jbe hexvar lea eax , [ ebx + hexvar ] cmp ecx , eax jbe hexvar lea eax , [ ecx - num ] mov dword ptr [ ebx + hexvar ] , eax mov byte ptr [ ecx - num ] , hexvar mov eax , dword ptr [ ebx + hexvar ] cmp dword ptr [ ebx + hexvar ] , eax jae hexvar sub eax , num mov dword ptr [ ebx + hexvar ] , eax jmp hexvar add edx , num mov byte ptr [ eax ] , dl pop ebx ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - num ] movzx edx , byte ptr [ edx ] mov ecx , edx add ecx , num mov ebx , ecx mov ecx , dword ptr [ ebp - num ] mov byte ptr [ ecx ] , bl cmp dl , hexvar jle hexvar mov edx , dword ptr [ ebp - num ] lea ecx , [ edx - num ] mov dword ptr [ ebp - num ] , ecx mov byte ptr [ edx ] , hexvar mov edx , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp - num ] , edx jae hexvar mov ecx , dword ptr [ eax + hexvar ] lea edx , [ eax + hexvar ] cmp ecx , edx jbe hexvar mov edx , dword ptr [ eax + hexvar ] sub edx , num mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov byte ptr [ edx ] , hexvar jmp hexvar mov byte ptr [ eax + hexvar ] , hexvar mov ecx , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + hexvar ] cmp ecx , edx jae hexvar mov edx , dword ptr [ eax + hexvar ] sub edx , num mov dword ptr [ eax + hexvar ] , edx jmp hexvar nop add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] movsx ecx , byte ptr [ eax ] mov edx , ecx mov bl , dl inc bl mov byte ptr [ eax ] , bl sub ecx , hexvar setl bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov ecx , eax dec ecx mov dword ptr [ ebp - num ] , ecx mov byte ptr [ eax ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] sub eax , ecx setae dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ hexvar ] sub eax , hexvar seta cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ hexvar ] mov ecx , eax dec ecx mov dword ptr [ hexvar ] , ecx mov byte ptr [ eax - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ hexvar ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] sub eax , ecx setb dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ hexvar ] dec eax mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] movsx ecx , byte ptr [ eax ] mov edx , ecx mov bl , dl inc bl mov byte ptr [ eax ] , bl sub ecx , hexvar setl bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov ecx , eax dec ecx mov dword ptr [ ebp - num ] , ecx mov byte ptr [ eax ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] sub eax , ecx setae dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ hexvar ] sub eax , hexvar seta cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ hexvar ] mov ecx , eax dec ecx mov dword ptr [ hexvar ] , ecx mov byte ptr [ eax - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov byte ptr [ hexvar ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] sub eax , ecx setb dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ hexvar ] dec eax mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov cl , byte ptr [ eax ] mov dl , cl add dl , num mov byte ptr [ eax ] , dl movsx eax , cl cmp eax , hexvar jge hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax add ecx , - num mov dword ptr [ ebp - num ] , ecx mov byte ptr [ eax ] , hexvar mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jae hexvar lea eax , [ hexvar ] cmp dword ptr [ hexvar ] , eax jbe hexvar mov eax , dword ptr [ hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ hexvar ] , ecx mov byte ptr [ eax - num ] , hexvar jmp hexvar mov byte ptr [ hexvar ] , hexvar mov eax , dword ptr [ hexvar ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ hexvar ] add eax , - num mov dword ptr [ hexvar ] , eax add esp , num pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp lui v0 , hexvar lw v0 , - hexvar ( v0 ) sw v0 , num ( fp ) lw v0 , num ( fp ) lb v0 , ( v0 ) andi v1 , v0 , hexvar addiu v1 , v1 , num andi v1 , v1 , hexvar seb a0 , v1 lw v1 , num ( fp ) sb a0 , ( v1 ) slti v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , num ( fp ) addiu v1 , v0 , - num sw v1 , num ( fp ) addiu v1 , zero , hexvar sb v1 , ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v1 , num ( fp ) sltu v0 , v1 , v0 beqz v0 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar addiu v0 , v0 , - hexvar sltu v0 , v0 , v1 beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) addiu v1 , v0 , - num lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) addiu v1 , zero , hexvar sb v1 , ( v0 )
str lr , [ sp , - num ] ! ldr lr , [ pc , hexvar ] mov ip , hexvar mov r3 , lr ldr r1 , [ r3 ] , hexvar b hexvar cmp r1 , r3 strb ip , [ r3 , num ] bhi hexvar mov r0 , r3 ldrb r2 , [ r3 ] , - num cmp r2 , hexvar bhi hexvar add r2 , r2 , num strb r2 , [ r0 ] pop { pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + hexvar ] add eax , num mov edx , hexvar mul edx mov eax , edx shr eax , num shl eax , num add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] mov ebx , ecx call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] push dword ptr [ ebp - hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , v0 , num lui v0 , hexvar ori v0 , v0 , hexvar multu v1 , v0 mfhi v0 srl v0 , v0 , num sll v0 , v0 , num addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v0 , v1 beqz v0 , hexvar nop lw v0 , hexvar ( fp ) sw zero , ( v0 ) move v0 , zero b hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lw a3 , hexvar ( fp ) move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx mov esi , hexvar call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] lea edx , [ edi + num ] mov eax , edx mul esi shr edx , num lea esi , [ edx * num ] lea ebp , [ esi + num ] cmp edi , ebp jbe hexvar mov eax , dword ptr [ esp + hexvar ] xor ebp , ebp mov dword ptr [ eax ] , num add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + hexvar ] add eax , num mov edx , hexvar mul edx mov eax , edx shr eax , num shl eax , num add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] mov ebx , ecx call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] push dword ptr [ ebp - hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar lui v0 , hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu s0 , a1 , num ori v0 , v0 , hexvar sw s1 , hexvar ( sp ) multu s0 , v0 sw ra , hexvar ( sp ) addiu gp , gp , hexvar sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) mfhi s0 srl s0 , s0 , num sll s0 , s0 , num addiu s1 , s0 , num sltu v0 , s1 , a1 beqz v0 , hexvar sw gp , hexvar ( sp ) move s1 , zero sw zero , ( a2 ) lw ra , hexvar ( sp ) move v0 , s1 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move s3 , a2 move s4 , a0 move a0 , s1 jalr t9 move s2 , a1 beqz v0 , hexvar sw v0 , ( s3 ) move a3 , s1 move a2 , v0 move a1 , s2 jal hexvar move a0 , s4 move s1 , s0 lw ra , hexvar ( sp ) move v0 , s1 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar addiu s0 , a1 , num lui v0 , hexvar ori v0 , v0 , hexvar multu s0 , v0 mfhi s0 srl s0 , s0 , num sll s0 , s0 , num addiu s1 , s0 , num sltu v0 , s1 , a1 beqz v0 , hexvar sw gp , hexvar ( sp ) sw zero , ( a2 ) move s1 , zero move v0 , s1 lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s3 , a2 move s2 , a1 move s4 , a0 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , ( s3 ) move a3 , s1 move a2 , v0 move a1 , s2 move a0 , s4 jal hexvar nop lw gp , hexvar ( sp ) b hexvar move s1 , s0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar addiu s0 , a1 , num lui v0 , hexvar ori v0 , v0 , hexvar multu s0 , v0 mfhi s0 srl s0 , s0 , num sll s0 , s0 , num addiu s1 , s0 , num sltu v0 , s1 , a1 beqz v0 , hexvar sw gp , hexvar ( sp ) sw zero , ( a2 ) move s1 , zero move v0 , s1 lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move s3 , a2 move s2 , a1 move s4 , a0 move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , ( s3 ) move a3 , s1 move a2 , v0 move a1 , s2 move a0 , s4 jal hexvar nop lw gp , hexvar ( sp ) b hexvar move s1 , s0
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] add esi , num mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , esi mov dword ptr [ ebp - hexvar ] , edx mul edi and edx , hexvar lea eax , [ edx + edx + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] sub eax , edx seta bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp - hexvar ] mov edi , esp mov dword ptr [ edi + hexvar ] , esi mov dword ptr [ edi + num ] , edx mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] dec eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , num movabs rsi , hexvar mov rax , rdx mul rsi movabs rax , hexvar and rdx , rax lea rax , [ rdx + rdx + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] sub rax , rdx seta cl movzx r8d , cl mov edx , r8d mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] add esi , num mov dword ptr [ ebp - hexvar ] , eax mov eax , esi xor esi , esi mov dword ptr [ ebp - hexvar ] , edx mov edx , esi mov esi , num div esi shl eax , num add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , num mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + hexvar ] cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push r15 push r14 push r13 push r12 mov r13 , rcx push rbp push rbx mov rbp , rsi mov rbx , rdi mov r12 , rdx sub rsp , num call hexvar mov r15d , eax call hexvar mov r14d , dword ptr [ rax ] test r14d , r14d je hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov esi , r14d mov rdx , rax xor edi , edi xor eax , eax call hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar xor esi , esi mov rdx , rax xor edi , edi xor eax , eax call hexvar mov rdx , r12 mov rcx , r13 mov esi , num mov edi , num call hexvar mov rcx , rbp mov rdx , rbx mov esi , num xor edi , edi mov r12 , rax call hexvar mov edx , num mov esi , hexvar xor edi , edi mov rbx , rax call hexvar mov edi , dword ptr [ rip + hexvar ] mov rdx , rax mov r8 , r12 mov rcx , rbx xor esi , esi xor eax , eax call hexvar add rsp , num mov eax , r15d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi mov r12 , rdx mov r13 , rcx call hexvar mov r15d , eax call hexvar mov r14d , dword ptr [ rax ] test r14d , r14d je hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rdx , rax mov esi , r14d mov edi , num mov eax , num call hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rcx , r13 mov rdx , r12 mov esi , num mov edi , num call hexvar mov r12 , rax mov rcx , rbp mov rdx , rbx mov esi , num mov edi , num call hexvar mov rbx , rax mov edx , num mov esi , hexvar mov edi , num call hexvar mov edi , dword ptr [ rip + hexvar ] mov r8 , r12 mov rcx , rbx mov rdx , rax mov esi , num mov eax , num call hexvar mov eax , r15d add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a3 sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 lw a0 , ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s2 , a2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 lw s0 , ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , esp mov dword ptr [ ebx + hexvar ] , edi mov dword ptr [ ebx + hexvar ] , esi mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx + num ] , ecx mov dword ptr [ ebx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s2 , a1 move s3 , a2 move s4 , a3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s2 , a2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 lw s0 , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] push edi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax call hexvar mov esi , dword ptr [ eax ] add esp , hexvar test esi , esi je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar add esp , hexvar push eax push esi push num call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar add esp , hexvar push eax push num push num call hexvar push edi push dword ptr [ esp + hexvar ] push num push num call hexvar add esp , hexvar mov esi , eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num push num call hexvar mov edi , eax lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar lea edx , [ ebx + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , esi push edi push eax push num push edx call hexvar add esp , hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } subs r4 , r0 , num mov r2 , num mov r5 , r1 beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r3 , r4 mov r2 , r0 mov r1 , num mov r0 , r5 bl hexvar bl hexvar ldr r3 , [ r0 ] mov r7 , r0 cmp r3 , num beq hexvar mov r4 , r0 ldr r6 , [ pc , hexvar ] mov r2 , r6 mov r1 , num mov r0 , r5 bl hexvar ldr r3 , [ r4 , num ] ! cmp r3 , num bne hexvar mov r1 , r5 mov r0 , hexvar bl hexvar mov r0 , r7 pop { r4 , r5 , r6 , r7 , r8 , lr } b hexvar ldr r1 , [ pc , hexvar ] bl hexvar mov r1 , num mov r2 , r0 mov r0 , r5 bl hexvar b hexvar andeq sp , sb , r8 , ror num andeq sp , sb , r8 , asr num andeq sp , sb , r4 , asr sp
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move s0 , a0 addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , s0 move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw a3 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax mov eax , num call hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar add dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar nop leave ret
push r13 push r12 push rbp push rbx mov rbp , rsi sub rsp , num test rdi , rdi je hexvar lea rsi , [ rip + hexvar ] mov rbx , rdi mov edx , num xor edi , edi call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov rdi , rbp xor eax , eax call hexvar call hexvar mov rcx , qword ptr [ rax ] mov r13 , rax test rcx , rcx je hexvar lea rbx , [ rax + num ] lea r12 , [ rip + hexvar ] nop dword ptr [ rax ] xor eax , eax add rbx , num mov rdx , r12 mov esi , num mov rdi , rbp call hexvar mov rcx , qword ptr [ rbx - num ] test rcx , rcx jne hexvar mov rsi , rbp mov edi , hexvar call hexvar add rsp , num mov rdi , r13 pop rbx pop rbp pop r12 pop r13 jmp hexvar nop lea rsi , [ rip + hexvar ] xor edi , edi mov edx , num call hexvar mov esi , num mov rdx , rax mov rdi , rbp xor eax , eax call hexvar jmp hexvar nop word ptr [ rax + rax ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - num ] , num jne hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rax , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rax , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - num ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , dword ptr [ rbp - hexvar ] cmp qword ptr [ rax + rcx * num ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsxd rcx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + rcx * num ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rsi mov dword ptr [ rbp - hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar push edi push eax push num push esi call hexvar add esp , hexvar call hexvar mov edx , eax mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ eax ] test eax , eax je hexvar lea ebp , [ edx + num ] lea edi , [ ebx - hexvar ] nop lea esi , [ esi ] push eax push edi add ebp , num push num push esi call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar test eax , eax jne hexvar sub esp , num push esi push hexvar call hexvar pop eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar push edi push eax push num push esi call hexvar add esp , hexvar call hexvar mov edx , eax mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ eax ] test eax , eax je hexvar lea ebp , [ edx + num ] lea edi , [ ebx - hexvar ] nop lea esi , [ esi ] push eax push edi add ebp , num push num push esi call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar test eax , eax jne hexvar sub esp , num push esi push hexvar call hexvar pop eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar push edi push eax push num push esi call hexvar add esp , hexvar call hexvar mov edx , eax mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ eax ] test eax , eax je hexvar lea ebp , [ edx + num ] lea edi , [ ebx - hexvar ] nop lea esi , [ esi ] push eax push edi add ebp , num push num push esi call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar test eax , eax jne hexvar sub esp , num push esi push hexvar call hexvar pop eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move s0 , a0 addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero addiu a1 , zero , num lw gp , hexvar ( sp ) move a3 , s0 move a2 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw a3 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) beqz a0 , hexvar move s1 , a1 move s0 , a0 addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a3 , s0 move a2 , v0 addiu a1 , zero , num move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw a3 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 lui v0 , hexvar lw v0 , - hexvar ( v0 ) lui v1 , hexvar ori v1 , v1 , hexvar addu v0 , v0 , v1 lui v1 , hexvar lw v1 , - hexvar ( v1 ) sll v0 , v0 , num addu v0 , v1 , v0 lw a0 , ( v0 )
movsxd rdx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] push rbx mov rdi , qword ptr [ rax + rdx * num - num ] call hexvar lea rsi , [ rip + hexvar ] mov rbx , rax xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax xor eax , eax call hexvar nop dword ptr [ rax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a0 , v0 lui v0 , hexvar ori v0 , v0 , hexvar addu v0 , a0 , v0 sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 lui v0 , hexvar lw v0 , - hexvar ( v0 ) lui v1 , hexvar ori v1 , v1 , hexvar addu v0 , v0 , v1 lui v1 , hexvar lw v1 , - hexvar ( v1 ) sll v0 , v0 , num addu v0 , v1 , v0 lw a0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a0 , v0 lui v0 , hexvar ori v0 , v0 , hexvar addu v0 , a0 , v0 sll v0 , v0 , num addu v0 , v1 , v0 lw v0 , ( v0 )
push rbx movsxd rdx , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rax + rdx * num - num ] call hexvar mov rbx , rax mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , rbx mov rdi , rax mov al , num call hexvar
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ]
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] sub edx , num mov ecx , dword ptr [ ecx + edx * num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar jmp hexvar nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar leave ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push r15 push r14 push rbx xor eax , eax test rdx , rdx je hexvar mov rbx , qword ptr [ rdx ] test rbx , rbx je hexvar mov rcx , qword ptr [ rcx + hexvar ] test rcx , rcx je hexvar test byte ptr [ rcx + num ] , num je hexvar movsxd rcx , dword ptr [ rcx + hexvar ] add rbx , rcx je hexvar cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov r15 , rsi mov r14 , rdi test rsi , rsi je hexvar mov rdi , qword ptr [ r15 ] mov rsi , qword ptr [ rbx ] mov rdx , qword ptr [ rbx + num ] call hexvar mov rax , qword ptr [ rbx + num ] add qword ptr [ r15 ] , rax mov eax , num test r14 , r14 je hexvar mov ecx , dword ptr [ rbx + num ] mov dword ptr [ r14 ] , ecx pop rbx pop r14 pop r15 ret
push esi push ebx xor eax , eax call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ edx ] test edx , edx je hexvar mov ecx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] test ecx , ecx je hexvar mov eax , dword ptr [ ecx + num ] and eax , num je hexvar xor eax , eax mov esi , edx add esi , dword ptr [ ecx + hexvar ] je hexvar mov edx , dword ptr [ esi + num ] test edx , edx jne hexvar mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar sub esp , num push dword ptr [ esi + num ] push dword ptr [ esi ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + num ] add esp , hexvar add dword ptr [ ebx ] , eax mov edx , dword ptr [ esp + hexvar ] mov eax , num test edx , edx je hexvar mov edx , dword ptr [ esi + num ] mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ ebx ] , edx add esp , num pop ebx pop esi ret
push r15 push r14 push rbx xor eax , eax test rdx , rdx je hexvar mov rbx , qword ptr [ rdx ] test rbx , rbx je hexvar mov rcx , qword ptr [ rcx + hexvar ] test rcx , rcx je hexvar test byte ptr [ rcx + num ] , num je hexvar movsxd rcx , dword ptr [ rcx + hexvar ] add rbx , rcx je hexvar cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov r15 , rsi mov r14 , rdi test rsi , rsi je hexvar mov rdi , qword ptr [ r15 ] mov rsi , qword ptr [ rbx ] mov rdx , qword ptr [ rbx + num ] call hexvar mov rax , qword ptr [ rbx + num ] add qword ptr [ r15 ] , rax mov eax , num test r14 , r14 je hexvar mov ecx , dword ptr [ rbx + num ] mov dword ptr [ r14 ] , ecx pop rbx pop r14 pop r15 ret
push esi push ebx xor eax , eax call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov edx , dword ptr [ edx ] test edx , edx je hexvar mov ecx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ ecx + hexvar ] test ecx , ecx je hexvar mov eax , dword ptr [ ecx + num ] and eax , num je hexvar xor eax , eax mov esi , edx add esi , dword ptr [ ecx + hexvar ] je hexvar mov edx , dword ptr [ esi + num ] test edx , edx jne hexvar mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar sub esp , num push dword ptr [ esi + num ] push dword ptr [ esi ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + num ] add esp , hexvar add dword ptr [ ebx ] , eax mov edx , dword ptr [ esp + hexvar ] mov eax , num test edx , edx je hexvar mov edx , dword ptr [ esi + num ] mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ ebx ] , edx add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
push r15 push r14 push rbx xor eax , eax test rdx , rdx je hexvar mov rbx , qword ptr [ rdx ] test rbx , rbx je hexvar mov rcx , qword ptr [ rcx + hexvar ] test rcx , rcx je hexvar test byte ptr [ rcx + num ] , num je hexvar movsxd rcx , dword ptr [ rcx + hexvar ] add rbx , rcx je hexvar cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov r15 , rsi mov r14 , rdi test rsi , rsi je hexvar mov rdi , qword ptr [ r15 ] mov rsi , qword ptr [ rbx ] mov rdx , qword ptr [ rbx + num ] call hexvar mov rax , qword ptr [ rbx + num ] add qword ptr [ r15 ] , rax mov eax , num test r14 , r14 je hexvar mov ecx , dword ptr [ rbx + num ] mov dword ptr [ r14 ] , ecx pop rbx pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r0 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r1 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] mov r2 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] ldr r2 , [ sp , hexvar ] ldr r2 , [ r2 , num ] add r2 , r3 , r2 ldr r3 , [ sp , num ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] str r2 , [ r3 ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push r15 push r14 push rbx xor eax , eax test rdx , rdx je hexvar mov rbx , qword ptr [ rdx ] test rbx , rbx je hexvar mov rcx , qword ptr [ rcx + hexvar ] test rcx , rcx je hexvar test byte ptr [ rcx + num ] , num je hexvar movsxd rcx , dword ptr [ rcx + hexvar ] add rbx , rcx je hexvar cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov r15 , rsi mov r14 , rdi test rsi , rsi je hexvar mov rdi , qword ptr [ r15 ] mov rsi , qword ptr [ rbx ] mov rdx , qword ptr [ rbx + num ] call hexvar mov rax , qword ptr [ rbx + num ] add qword ptr [ r15 ] , rax mov eax , num test r14 , r14 je hexvar mov ecx , dword ptr [ rbx + num ] mov dword ptr [ r14 ] , ecx pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx xor eax , eax test rdx , rdx je hexvar mov rbx , qword ptr [ rdx ] test rbx , rbx je hexvar mov rcx , qword ptr [ rcx + hexvar ] test rcx , rcx je hexvar test byte ptr [ rcx + num ] , num je hexvar movsxd rcx , dword ptr [ rcx + hexvar ] add rbx , rcx je hexvar cmp dword ptr [ rbx + hexvar ] , num jne hexvar mov r15 , rsi mov r14 , rdi test rsi , rsi je hexvar mov rdi , qword ptr [ r15 ] mov rsi , qword ptr [ rbx ] mov rdx , qword ptr [ rbx + num ] call hexvar mov rax , qword ptr [ rbx + num ] add qword ptr [ r15 ] , rax mov eax , num test r14 , r14 je hexvar mov ecx , dword ptr [ rbx + num ] mov dword ptr [ r14 ] , ecx pop rbx pop r14 pop r15 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , num mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , num jmp hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov ecx , eax mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push ecx push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] add edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , num add esp , hexvar pop ebx ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , esi shl rax , num add rdi , rax mov dword ptr [ rdi + num ] , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , esi shl rax , num add rdi , rax mov dword ptr [ rdi + num ] , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , esi shl rax , num add rdi , rax mov dword ptr [ rdi + num ] , edx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rsi mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , edi mov r8d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , r8d mov r9d , dword ptr [ rdx ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov r10d , dword ptr [ rcx ] mov ecx , r10d shl rcx , num add rax , rcx mov dword ptr [ rax + num ] , r9d mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , esi shl rax , num add rdi , rax mov dword ptr [ rdi + num ] , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , esi shl rax , num add rdi , rax mov dword ptr [ rdi + num ] , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , esi shl rax , num add rdi , rax mov dword ptr [ rdi + num ] , edx pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , esi shl rax , num add rdi , rax mov dword ptr [ rdi + num ] , edx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rsi mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , edi mov r8d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , r8d mov r9d , dword ptr [ rdx ] mov rax , qword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov r10d , dword ptr [ rcx ] mov ecx , r10d shl rcx , num add rax , rcx mov dword ptr [ rax + num ] , r9d mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov eax , esi shl rax , num add rdi , rax mov dword ptr [ rdi + num ] , edx pop rbp ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov ecx , edx shr ecx , hexvar xor ecx , edx shr edx , hexvar and edx , hexvar xor ecx , edx mov edx , hexvar mov eax , ecx mul edx mov eax , ecx sub eax , edx shr eax , num add edx , eax shr edx , num lea eax , [ edx + edx * num ] lea eax , [ edx + eax * num ] mov edx , ecx sub edx , eax mov eax , edx lea edx , [ edx + edx * num ] lea eax , [ eax + edx * num ] xor eax , ecx ret
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax push dword ptr [ esp + hexvar ] call hexvar add esp , num add esp , hexvar ret
lw v0 , ( a0 ) srl a1 , v0 , hexvar ext v1 , v0 , hexvar , hexvar xor a1 , a1 , v0 xor a1 , a1 , v1 lui v1 , hexvar addiu v1 , v1 , hexvar multu a1 , v1 mfhi v1 subu v0 , a1 , v1 srl v0 , v0 , num addu v1 , v1 , v0 srl v1 , v1 , num sll a0 , v1 , num addu a0 , a0 , v1 sll a0 , a0 , num subu v1 , a0 , v1 subu v1 , a1 , v1 sll v0 , v1 , num addu v0 , v0 , v1 sll v0 , v0 , num addu v0 , v0 , v1 jr ra xor v0 , v0 , a1
lw v0 , ( a0 ) srl a1 , v0 , hexvar ext v1 , v0 , hexvar , hexvar xor a1 , a1 , v0 xor a1 , a1 , v1 lui v1 , hexvar addiu v1 , v1 , hexvar multu a1 , v1 mfhi v1 subu v0 , a1 , v1 srl v0 , v0 , num addu v1 , v1 , v0 srl v1 , v1 , num sll a0 , v1 , num addu a0 , a0 , v1 sll a0 , a0 , num subu v1 , a0 , v1 subu v1 , a1 , v1 sll v0 , v1 , num addu v0 , v0 , v1 sll v0 , v0 , num addu v0 , v0 , v1 jr ra xor v0 , v0 , a1
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov ecx , edx shr ecx , hexvar xor ecx , edx shr edx , hexvar and edx , hexvar xor ecx , edx mov edx , hexvar mov eax , ecx mul edx mov eax , ecx sub eax , edx shr eax , num add edx , eax shr edx , num lea eax , [ edx + edx * num ] lea eax , [ edx + eax * num ] mov edx , ecx sub edx , eax mov eax , edx lea edx , [ edx + edx * num ] lea eax , [ eax + edx * num ] xor eax , ecx ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov ecx , edx shr ecx , hexvar xor ecx , edx shr edx , hexvar and edx , hexvar xor ecx , edx mov edx , hexvar mov eax , ecx mul edx mov eax , ecx sub eax , edx shr eax , num add edx , eax shr edx , num lea eax , [ edx + edx * num ] lea eax , [ edx + eax * num ] mov edx , ecx sub edx , eax mov eax , edx lea edx , [ edx + edx * num ] lea eax , [ eax + edx * num ] xor eax , ecx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
mov rcx , qword ptr [ rdi ] mov eax , ecx shr eax , hexvar xor rax , rcx shr ecx , hexvar and ecx , hexvar xor rcx , rax movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num lea rax , [ rdx + rdx * num ] lea rax , [ rdx + rax * num ] mov rdx , rcx sub rdx , rax lea rax , [ rdx + rdx * num ] lea rax , [ rdx + rax * num ] xor rax , rcx ret
mov rcx , qword ptr [ rdi ] mov eax , ecx shr eax , hexvar xor rax , rcx shr ecx , hexvar and ecx , hexvar xor rcx , rax movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num lea rax , [ rdx + rdx * num ] lea rax , [ rdx + rax * num ] mov rdx , rcx sub rdx , rax lea rax , [ rdx + rdx * num ] lea rax , [ rdx + rax * num ] xor rax , rcx ret
mov rcx , qword ptr [ rdi ] mov eax , ecx shr eax , hexvar xor rax , rcx shr ecx , hexvar and ecx , hexvar xor rcx , rax movabs rdx , hexvar mov rax , rcx mul rdx shr rdx , num lea rax , [ rdx + rdx * num ] lea rax , [ rdx + rax * num ] mov rdx , rcx sub rdx , rax lea rax , [ rdx + rdx * num ] lea rax , [ rdx + rax * num ] xor rax , rcx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar or v0 , a0 , a2 sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) move s0 , a3 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) or v0 , a2 , a3 beqz v0 , hexvar lw t9 , - hexvar ( gp ) bnez a0 , hexvar nop bnez a2 , hexvar move t2 , a2 multu s1 , s0 mflo t1 mfhi t0 mult a2 , s1 madd a0 , s0 move s2 , t1 mflo v0 addu v0 , v0 , t0 bnez v0 , hexvar move a0 , t1 bltz t1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move v1 , v0 mul a2 , s1 , s0 beqz a2 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , zero jalr t9 move a0 , v1 move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jalr t9 move a0 , zero lw gp , hexvar ( sp ) bnez v0 , hexvar move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s2 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 move s2 , a3 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 mul a2 , s0 , s2 bnez a2 , hexvar move a1 , zero move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , s1
push rbp push rbx mov rbp , rsi mov rbx , rdi sub rsp , num call hexvar test rax , rax mov rcx , rax je hexvar imul rbx , rbp test rbx , rbx jne hexvar add rsp , num mov rax , rcx pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar or v0 , a0 , a2 sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) move s0 , a3 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) or v0 , a2 , a3 beqz v0 , hexvar lw t9 , - hexvar ( gp ) bnez a0 , hexvar nop bnez a2 , hexvar move t2 , a2 multu s1 , s0 mflo t1 mfhi t0 mult a2 , s1 madd a0 , s0 move s2 , t1 mflo v0 addu v0 , v0 , t0 bnez v0 , hexvar move a0 , t1 bltz t1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move v1 , v0 mul a2 , s1 , s0 beqz a2 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , zero jalr t9 move a0 , v1 move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jalr t9 move a0 , zero lw gp , hexvar ( sp ) bnez v0 , hexvar move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s2 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] imul eax , edx mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar sub esp , num push dword ptr [ ebp - hexvar ] push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r5 , r1 bl hexvar subs r6 , r0 , num beq hexvar muls r2 , r5 , r4 bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , ebp je hexvar mov eax , edi or eax , ebp je hexvar test ecx , ecx jne hexvar test ebp , ebp jne hexvar imul ebp , esi mov eax , esi imul ecx , edi mul edi add ecx , ebp add ecx , edx mov ebp , eax test ecx , ecx jne hexvar test eax , eax js hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov edx , eax jne hexvar test ebp , ebp je hexvar sub esp , hexvar push num call hexvar add esp , hexvar xor edx , edx add esp , hexvar mov eax , edx pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r5 , r1 bl hexvar subs r6 , r0 , num beq hexvar muls r2 , r5 , r4 bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num mov ecx , hexvar mov edx , hexvar cmova edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar xor esi , esi mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] imul rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] xor esi , esi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar jmp hexvar nop nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar nop nop nop nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar lea edx , [ ebx + hexvar ] mov edx , dword ptr [ edx ] push eax lea eax , [ ebx - hexvar ] push eax push num push edx call hexvar add esp , hexvar call hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a1 , hexvar addiu a2 , zero , num sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a1 , a1 , - hexvar sw gp , hexvar ( sp ) move a0 , zero lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw s0 , ( v0 ) jalr t9 nop lui a2 , hexvar lw gp , hexvar ( sp ) move a1 , zero addiu a2 , a2 , - hexvar move a3 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop nop
sub rsp , num mov edx , num mov esi , hexvar xor edi , edi call hexvar mov edi , dword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar xor esi , esi xor eax , eax call hexvar call hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar lea edx , [ ebx + hexvar ] mov edx , dword ptr [ edx ] push eax lea eax , [ ebx - hexvar ] push eax push num push edx call hexvar add esp , hexvar call hexvar nop
push { r4 , r5 , fp , lr } add fp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] mov r1 , num mov r0 , r4 bl hexvar bl hexvar andeq r4 , r4 , r4 , ror r1 andeq r3 , r3 , r8 , lsr r6 andeq r3 , r3 , ip , asr num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push edi mov edx , dword ptr [ esp + num ] lea ecx , [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num lea edi , [ edx + hexvar ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar mov eax , num pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lui v1 , hexvar ori v1 , v1 , hexvar sw v1 , ( v0 ) lw v0 , hexvar ( sp ) lui v1 , hexvar ori v1 , v1 , hexvar sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lui v1 , hexvar ori v1 , v1 , hexvar sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lui v1 , hexvar ori v1 , v1 , hexvar sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) lui v1 , hexvar ori v1 , v1 , hexvar sw v1 , hexvar ( v0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov dword ptr [ rdi + hexvar ] , hexvar mov eax , num ret
push edi mov edx , dword ptr [ esp + num ] lea ecx , [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num lea edi , [ edx + hexvar ] and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar mov eax , num pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) move a1 , zero sw ra , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , a0 , hexvar lui v0 , hexvar lw ra , hexvar ( sp ) lui v1 , hexvar addiu v0 , v0 , hexvar ori v1 , v1 , hexvar sw v0 , ( s0 )
push edi mov edx , dword ptr [ esp + num ] xor eax , eax lea edi , [ edx + hexvar ] lea ecx , [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , num mov dword ptr [ edx + hexvar ] , num and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax mov dword ptr [ edx ] , hexvar mov dword ptr [ edx + num ] , hexvar mov eax , num mov dword ptr [ edx + num ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar mov dword ptr [ edx + hexvar ] , hexvar pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) move a1 , zero sw ra , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , a0 , hexvar lui v0 , hexvar lw ra , hexvar ( sp ) lui v1 , hexvar addiu v0 , v0 , hexvar ori v1 , v1 , hexvar sw v0 , ( s0 )
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov dword ptr [ rdi + hexvar ] , hexvar mov eax , num ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] mov r2 , hexvar mov r1 , num ldr r0 , [ sp , num ] bl hexvar ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
xorps xmm0 , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movups xmmword ptr [ rdi + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movups xmmword ptr [ rdi ] , xmm0 mov dword ptr [ rdi + hexvar ] , hexvar mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbp push r15 push r14 push r12 push rbx test rdi , rdi je hexvar mov r12d , edx mov r15 , rsi mov r14 , rdi mov rbx , qword ptr [ rdi ] test rbx , rbx jne hexvar call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar mov ebp , eax mov rdi , r15 call hexvar test rax , rax je hexvar mov r15 , rax cmp ebp , r12d mov edx , r12d cmovle edx , ebp test r12d , r12d cmovs edx , ebp mov rdi , rbx mov rsi , rax call hexvar test eax , eax je hexvar cmp qword ptr [ r14 ] , num jne hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , r15 call hexvar test rbx , rbx je hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar call hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp + num ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] cmp eax , dword ptr [ esp + hexvar ] jle hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + num ] jmp hexvar nop sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar nop cmp dword ptr [ esp + num ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp dword ptr [ esp + num ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 ble hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bge hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] b hexvar mov r0 , r0 mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r12 push rbx test rdi , rdi je hexvar mov r12d , edx mov r15 , rsi mov r14 , rdi mov rbx , qword ptr [ rdi ] test rbx , rbx jne hexvar call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar mov ebp , eax mov rdi , r15 call hexvar test rax , rax je hexvar mov r15 , rax cmp ebp , r12d mov edx , r12d cmovle edx , ebp test r12d , r12d cmovs edx , ebp mov rdi , rbx mov rsi , rax call hexvar test eax , eax je hexvar cmp qword ptr [ r14 ] , num jne hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , r15 call hexvar test rbx , rbx je hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov esi , dword ptr [ edi ] test esi , esi je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , num js hexvar cmp eax , dword ptr [ esp + hexvar ] jl hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar cmp dword ptr [ edi ] , num jne hexvar mov dword ptr [ edi ] , esi jmp hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov esi , num jmp hexvar call hexvar mov esi , eax test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar mov dword ptr [ esp + hexvar ] , eax jmp hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar push ebp call hexvar add esp , hexvar test esi , esi je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov esi , num mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx test rdi , rdi je hexvar mov r12d , edx mov r15 , rsi mov r14 , rdi mov rbx , qword ptr [ rdi ] test rbx , rbx jne hexvar call hexvar mov rbx , rax test rax , rax je hexvar mov rdi , rbx call hexvar mov ebp , eax mov rdi , r15 call hexvar test rax , rax je hexvar mov r15 , rax cmp ebp , r12d mov edx , r12d cmovle edx , ebp test r12d , r12d cmovs edx , ebp mov rdi , rbx mov rsi , rax call hexvar test eax , eax je hexvar cmp qword ptr [ r14 ] , num jne hexvar mov qword ptr [ r14 ] , rbx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , r15 call hexvar test rbx , rbx je hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r12 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 ble hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bge hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] b hexvar mov r0 , r0 mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s4 , a1 lw s0 , ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push r15 push r14 push rbx mov eax , ecx mov r15 , rdx mov r14 , rsi xor ebx , ebx mov esi , hexvar mov ecx , hexvar mov rdi , rdx mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rdi , r15 mov rsi , r14 call hexvar xor ebx , ebx test eax , eax setne bl mov eax , ebx pop rbx pop r14 pop r15 ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov eax , ecx mov rbx , rdx mov r14 , rsi mov esi , hexvar mov ecx , hexvar mov rdi , rdx mov edx , eax xor eax , eax call hexvar mov dword ptr [ rsp + hexvar ] , eax mov eax , hexvar mov r15d , hexvar mov r12d , hexvar jmp hexvar mov eax , hexvar xor ebp , ebp nop dword ptr [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov ebp , num jmp hexvar mov rdi , rbx mov rsi , r14 call hexvar test eax , eax mov eax , hexvar cmove eax , r12d jmp hexvar cmp dword ptr [ rsp + hexvar ] , num mov eax , hexvar cmovle eax , r15d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r2 , [ sp ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar mov r3 , num b hexvar ldr r1 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push r15 push r14 push rbx mov eax , ecx mov r15 , rdx mov r14 , rsi xor ebx , ebx mov esi , hexvar mov ecx , hexvar mov rdi , rdx mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rdi , r15 mov rsi , r14 call hexvar xor ebx , ebx test eax , eax setne bl mov eax , ebx pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov eax , ecx mov r15 , rdx mov r14 , rsi xor ebx , ebx mov esi , hexvar mov ecx , hexvar mov rdi , rdx mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rdi , r15 mov rsi , r14 call hexvar xor ebx , ebx test eax , eax setne bl mov eax , ebx pop rbx pop r14 pop r15 ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] mov esi , dword ptr [ esp + hexvar ] push eax lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar xor edx , edx test eax , eax jle hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi call hexvar xor edx , edx add esp , hexvar test eax , eax setne dl add esp , num mov eax , edx pop ebx pop esi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push esi call hexvar add esp , hexvar mov edx , num test eax , eax jle hexvar sub esp , num push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax setne dl movzx edx , dl mov eax , edx add esp , num pop ebx pop esi ret
push ebx sub esp , num call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jg hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num add esp , num pop ebx ret
push r14 push rbx push rax mov eax , ecx mov rbx , rdx mov r14 , rsi mov esi , hexvar mov ecx , hexvar mov rdi , rdx mov edx , eax xor eax , eax call hexvar test eax , eax jle hexvar mov rdi , rbx mov rsi , r14 call hexvar xor ecx , ecx test eax , eax setne cl mov eax , ecx add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 move s0 , a2 move a2 , a3 lui a3 , hexvar addiu a3 , a3 , - hexvar lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) blez v0 , hexvar move a1 , s1 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sltu v0 , zero , v0 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero
push r12 push rbp mov rdx , rdi push rbx mov esi , hexvar mov rbx , rdi sub rsp , hexvar lea rbp , [ rsp + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rbp call hexvar cmp rax , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov rdi , rbp call qword ptr [ rax + hexvar ] movzx edx , ax mov qword ptr [ rsp ] , rax lea rcx , [ rdx - hexvar ] cmp rcx , num jbe hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar jne hexvar sar rax , hexvar movzx eax , al cmp eax , hexvar je hexvar test eax , eax jne hexvar mov r12 , rsp mov rsi , rbp mov rdi , rbx mov rdx , r12 call hexvar lea rdx , [ rip + hexvar ] mov rsi , r12 mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push edi push esi push ebx add esp , - hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi push num push hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar xor eax , hexvar or edx , eax jne hexvar sub esp , hexvar mov eax , dword ptr [ esi + num ] lea edx , [ esp + hexvar ] push edx call dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax movzx edx , ax sub edx , hexvar add esp , hexvar cmp edx , num jbe hexvar movzx edx , ax cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar sar eax , hexvar movzx edx , al cmp edx , hexvar je hexvar mov eax , num test edx , edx jne hexvar sub esp , num lea edi , [ esp + hexvar ] push edi lea eax , [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar lea eax , [ ebx - hexvar ] push eax push edi push esi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar sub esp , - hexvar pop ebx pop esi pop edi ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rdi , [ rsp + hexvar ] mov rdx , rbx mov esi , hexvar call hexvar cmp rax , hexvar jne hexvar lea rdi , [ rsp + hexvar ] mov rax , qword ptr [ rbx + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rsp ] , rax movzx edx , ax sub rdx , hexvar cmp rdx , num jbe hexvar movzx edx , ax cmp rdx , hexvar je hexvar cmp rdx , hexvar jne hexvar sar rax , hexvar movzx edx , al cmp edx , hexvar je hexvar mov eax , num test edx , edx jne hexvar mov rbp , rsp lea rsi , [ rsp + hexvar ] mov rdx , rbp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] mov rsi , rbp mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push edi push esi push ebx add esp , - hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi push num push hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar xor eax , hexvar or edx , eax jne hexvar sub esp , hexvar mov eax , dword ptr [ esi + num ] lea edx , [ esp + hexvar ] push edx call dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax movzx edx , ax sub edx , hexvar add esp , hexvar cmp edx , num jbe hexvar movzx edx , ax cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar sar eax , hexvar movzx edx , al cmp edx , hexvar je hexvar mov eax , num test edx , edx jne hexvar sub esp , num lea edi , [ esp + hexvar ] push edi lea eax , [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar lea eax , [ ebx - hexvar ] push eax push edi push esi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar sub esp , - hexvar pop ebx pop esi pop edi ret
push r12 push rbp mov rdx , rdi push rbx mov esi , hexvar mov rbx , rdi sub rsp , hexvar lea rbp , [ rsp + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rbp call hexvar cmp rax , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov rdi , rbp call qword ptr [ rax + hexvar ] movzx edx , ax mov qword ptr [ rsp ] , rax lea rcx , [ rdx - hexvar ] cmp rcx , num jbe hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar jne hexvar sar rax , hexvar movzx eax , al cmp eax , hexvar je hexvar test eax , eax jne hexvar mov r12 , rsp mov rsi , rbp mov rdi , rbx mov rdx , r12 call hexvar lea rdx , [ rip + hexvar ] mov rsi , r12 mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push edi push num push hexvar lea esi , [ esp + hexvar ] push esi call hexvar xor eax , hexvar add esp , hexvar or edx , eax jne hexvar mov eax , dword ptr [ edi + num ] sub esp , hexvar push esi call dword ptr [ eax + hexvar ] movzx edx , ax mov dword ptr [ esp + hexvar ] , eax add esp , hexvar lea ecx , [ edx - hexvar ] cmp ecx , num jbe hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar sar eax , hexvar movzx eax , al cmp eax , hexvar je hexvar test eax , eax jne hexvar sub esp , num lea ebp , [ esp + hexvar ] push ebp push esi push edi call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push eax push ebp push edi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp mov rdx , rdi push rbx mov esi , hexvar mov rbx , rdi sub rsp , hexvar lea rbp , [ rsp + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rbp call hexvar cmp rax , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov rdi , rbp call qword ptr [ rax + hexvar ] movzx edx , ax mov qword ptr [ rsp ] , rax lea rcx , [ rdx - hexvar ] cmp rcx , num jbe hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar jne hexvar sar rax , hexvar movzx eax , al cmp eax , hexvar je hexvar test eax , eax jne hexvar mov r12 , rsp mov rsi , rbp mov rdi , rbx mov rdx , r12 call hexvar lea rdx , [ rip + hexvar ] mov rsi , r12 mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rdi , [ rsp + hexvar ] mov rdx , rbx mov esi , hexvar call hexvar cmp rax , hexvar jne hexvar lea rdi , [ rsp + hexvar ] mov rax , qword ptr [ rbx + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rsp ] , rax movzx edx , ax sub rdx , hexvar cmp rdx , num jbe hexvar movzx edx , ax cmp rdx , hexvar je hexvar cmp rdx , hexvar jne hexvar sar rax , hexvar movzx edx , al cmp edx , hexvar je hexvar mov eax , num test edx , edx jne hexvar mov rbp , rsp lea rsi , [ rsp + hexvar ] mov rdx , rbp mov rdi , rbx call hexvar lea rdx , [ rip + hexvar ] mov rsi , rbp mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push r12 push rbp mov rdx , rdi push rbx mov esi , hexvar mov rbx , rdi sub rsp , hexvar lea rbp , [ rsp + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rbp call hexvar cmp rax , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov rdi , rbp call qword ptr [ rax + hexvar ] movzx edx , ax mov qword ptr [ rsp ] , rax lea rcx , [ rdx - hexvar ] cmp rcx , num jbe hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar jne hexvar sar rax , hexvar movzx eax , al cmp eax , hexvar je hexvar test eax , eax jne hexvar mov r12 , rsp mov rsi , rbp mov rdi , rbx mov rdx , r12 call hexvar lea rdx , [ rip + hexvar ] mov rsi , r12 mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r12 push rbp mov rdx , rdi push rbx mov esi , hexvar mov rbx , rdi sub rsp , hexvar lea rbp , [ rsp + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdi , rbp call hexvar cmp rax , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov rdi , rbp call qword ptr [ rax + hexvar ] movzx edx , ax mov qword ptr [ rsp ] , rax lea rcx , [ rdx - hexvar ] cmp rcx , num jbe hexvar cmp rdx , hexvar je hexvar cmp rdx , hexvar jne hexvar sar rax , hexvar movzx eax , al cmp eax , hexvar je hexvar test eax , eax jne hexvar mov r12 , rsp mov rsi , rbp mov rdi , rbx mov rdx , r12 call hexvar lea rdx , [ rip + hexvar ] mov rsi , r12 mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] or rsi , rdi shr rsi , hexvar test rsi , rsi setne al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor edx , edx mov rsi , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , rsi div rcx mov rcx , qword ptr [ rbp - hexvar ] sub rcx , rax seta dil movzx r8d , dil mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] imul rax , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar or v0 , a0 , a2 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) or v0 , a2 , a3 beqz v0 , hexvar lw t9 , - hexvar ( gp ) bnez a0 , hexvar nop bnez a2 , hexvar move t2 , a2 multu a1 , a3 mflo v1 mfhi v0 mult a2 , a1 madd a0 , a3 move s0 , v1 mflo a3 addu a3 , a3 , v0 bnez a3 , hexvar move a0 , v1 bltz v1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move a0 , zero lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar beqz s0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num move v0 , zero lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move t0 , a1 multu t0 , t2 mflo t3 mfhi t2 multu a1 , a3 mfhi v0 addu t0 , v0 , t3 sltu t0 , t0 , t3 addu t0 , t0 , t2 beqz t0 , hexvar mflo v1 b hexvar lw t9 , - hexvar ( gp ) bnez a2 , hexvar move t2 , a0 b hexvar move t0 , a3
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar or v0 , a0 , a2 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz v0 , hexvar sw gp , hexvar ( sp ) or v0 , a2 , a3 beqz v0 , hexvar lw t9 , - hexvar ( gp ) bnez a0 , hexvar nop bnez a2 , hexvar move t2 , a2 multu a1 , a3 mflo v1 mfhi v0 mult a2 , a1 madd a0 , a3 move s0 , v1 mflo a3 addu a3 , a3 , v0 bnez a3 , hexvar move a0 , v1 bltz v1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw ra , hexvar ( sp ) move a0 , zero lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar beqz s0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num move v0 , zero lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move t0 , a1 multu t0 , t2 mflo t3 mfhi t2 multu a1 , a3 mfhi v0 addu t0 , v0 , t3 sltu t0 , t0 , t3 addu t0 , t0 , t2 beqz t0 , hexvar mflo v1 b hexvar lw t9 , - hexvar ( gp ) bnez a2 , hexvar move t2 , a0 b hexvar move t0 , a3
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] or rsi , rdi shr rsi , hexvar test rsi , rsi setne al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor edx , edx mov rsi , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , rsi div rcx mov rcx , qword ptr [ rbp - hexvar ] sub rcx , rax seta dil movzx r8d , dil mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] imul rax , rcx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
orr r2 , r0 , r1 cmp r2 , hexvar movlo r3 , num movhs r3 , num cmp r1 , num moveq r3 , num cmp r3 , num push { r4 , r5 , r6 , lr } bne hexvar muls r4 , r1 , r0 bmi hexvar mov r0 , r4 bl hexvar mov r5 , r0 adds r0 , r4 , num movne r0 , num cmp r5 , num movne r0 , num cmp r0 , num beq hexvar mov r0 , num bl hexvar mov r0 , r5 pop { r4 , r5 , r6 , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , edi test eax , eax je hexvar mov eax , ebp or eax , edi je hexvar mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , num test ecx , ecx jne hexvar test edi , edi jne hexvar mov eax , dword ptr [ esp + hexvar ] or eax , dword ptr [ esp + num ] jne hexvar sub esp , num imul ecx , ebp imul edi , esi add ecx , edi mov eax , esi mul ebp add edx , ecx push edx push eax call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , edi je hexvar mov eax , esi or eax , edi je hexvar test ecx , ecx jne hexvar test edi , edi jne hexvar imul edi , ebp mov eax , ebp imul ecx , esi mul esi add ecx , edi add ecx , edx mov edi , eax test ecx , ecx jne hexvar test eax , eax js hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar test edi , edi je hexvar mov dword ptr [ esp + num ] , eax sub esp , hexvar push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , lr } mov ip , r0 orr r2 , r0 , r1 cmp r2 , hexvar movlo r3 , num movhs r3 , num cmp r1 , num moveq r3 , num cmp r3 , num bne hexvar mul r0 , r1 , ip bl hexvar pop { r4 , pc }
mov rdx , rdi mov eax , hexvar or rdx , rsi cmp rdx , rax jbe hexvar test rsi , rsi je hexvar mov rax , rdi mul rsi jo hexvar imul rdi , rsi jmp hexvar sub rsp , num mov edi , num call hexvar xor eax , eax pop rdx ret
push rbx mov rdx , rdi mov eax , hexvar or rdx , rsi sub rsp , hexvar cmp rdx , rax jbe hexvar test rsi , rsi je hexvar mov rax , rdi mul rsi jo hexvar mov rbx , rdi imul rbx , rsi test rbx , rbx js hexvar mov rdi , rbx call hexvar test rax , rax jne hexvar test rbx , rbx je hexvar mov edi , num mov qword ptr [ rsp + num ] , rax call hexvar mov rax , qword ptr [ rsp + num ] add rsp , hexvar pop rbx ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r5 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r5 ] mov r6 , r0 mov r0 , sp mov r7 , r2 str r3 , [ sp , hexvar ] bl hexvar mov ip , sp add lr , sp , hexvar ldm ip ! , { r0 , r1 , r2 , r3 } stm lr ! , { r0 , r1 , r2 , r3 } ldr r8 , [ sp , hexvar ] ldm ip ! , { r0 , r1 , r2 , r3 } mvn r4 , r8 stm lr ! , { r0 , r1 , r2 , r3 } and r4 , r4 , hexvar ldm ip , { r0 , r1 , r2 , r3 } eor ip , r4 , r8 stm lr , { r0 , r1 , r2 , r3 } add r3 , sp , hexvar mvn r2 , num mov r1 , r7 mov r0 , r6 str ip , [ sp , hexvar ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num lea eax , [ ebp - hexvar ] mov ecx , eax lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num lea eax , [ ebp - hexvar ] mov ecx , eax lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ rbp - num ] lea rdi , [ rbp - hexvar ] call hexvar lea rdx , [ rbp - hexvar ] mov rdi , rdx lea rax , [ rbp - hexvar ] mov rsi , rax mov eax , hexvar mov qword ptr [ rbp - hexvar ] , rdx mov rdx , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar mov edx , num call hexvar mov edi , dword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , - num lea rcx , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , esi mov edi , dword ptr [ eax ] sub esp , hexvar mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , edi call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rbp - hexvar ] mov edx , num mov esi , hexvar mov rdi , rax call hexvar lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rcx , rdx mov rdx , - num mov edi , eax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ rbp - num ] lea rdi , [ rbp - hexvar ] call hexvar lea rdx , [ rbp - hexvar ] mov rdi , rdx lea rax , [ rbp - hexvar ] mov rsi , rax mov eax , hexvar mov qword ptr [ rbp - hexvar ] , rdx mov rdx , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar mov edx , num call hexvar mov edi , dword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , - num lea rcx , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num lea eax , [ ebp - hexvar ] mov ecx , eax lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ rbp - num ] lea rdi , [ rbp - hexvar ] call hexvar lea rdx , [ rbp - hexvar ] mov rdi , rdx lea rax , [ rbp - hexvar ] mov rsi , rax mov eax , hexvar mov qword ptr [ rbp - hexvar ] , rdx mov rdx , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar mov edx , num call hexvar mov edi , dword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , - num lea rcx , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] lea edi , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar sub esp , num lea eax , [ ebp - hexvar ] mov ecx , eax lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , hexvar lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov eax , esi mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rcx , rax mov edx , num mov esi , num lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] movsx eax , al mov edi , eax call hexvar nop add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar leave ret
test sil , sil push rbx mov rbx , rdi jne hexvar jmp hexvar nop mov rcx , qword ptr [ rip + hexvar ] mov edx , num mov esi , num mov edi , hexvar call hexvar add rbx , num movzx esi , byte ptr [ rbx ] test sil , sil je hexvar cmp sil , hexvar je hexvar cmp sil , hexvar je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , sil jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rip + hexvar ] mov edx , num mov esi , num mov edi , hexvar call hexvar jmp hexvar nop dword ptr [ rax ] pop rbx ret
test sil , sil push rbx mov rbx , rdi jne hexvar jmp hexvar nop mov rcx , qword ptr [ rip + hexvar ] mov edx , num mov esi , num mov edi , hexvar call hexvar add rbx , num movzx esi , byte ptr [ rbx ] test sil , sil je hexvar cmp sil , hexvar je hexvar cmp sil , hexvar je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , sil jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rip + hexvar ] mov edx , num mov esi , num mov edi , hexvar call hexvar jmp hexvar nop dword ptr [ rax ] pop rbx ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push eax push num push num lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push eax push num push num lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax ] movsx eax , al sub esp , hexvar push eax call hexvar add esp , hexvar nop add dword ptr [ ebp + num ] , num mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax ] test al , al jne hexvar mov ebx , dword ptr [ ebp - num ] leave ret
test sil , sil push rbx mov rbx , rdi jne hexvar jmp hexvar nop mov rcx , qword ptr [ rip + hexvar ] mov edx , num mov esi , num mov edi , hexvar call hexvar add rbx , num movzx esi , byte ptr [ rbx ] test sil , sil je hexvar cmp sil , hexvar je hexvar cmp sil , hexvar je hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jae hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , sil jmp hexvar nop dword ptr [ rax ] mov rcx , qword ptr [ rip + hexvar ] mov edx , num mov esi , num mov edi , hexvar call hexvar jmp hexvar nop dword ptr [ rax ] pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lb v0 , ( a0 ) beqz v0 , hexvar move s0 , a0 lui s4 , hexvar lw s2 , - hexvar ( gp ) lui s3 , hexvar addiu s1 , zero , hexvar addiu s4 , s4 , - hexvar b hexvar addiu s3 , s3 , - hexvar jalr t9 move a0 , s3 lw gp , hexvar ( sp ) addiu s0 , s0 , num lb v0 , ( s0 ) beqz v0 , hexvar lw ra , hexvar ( sp ) addiu v1 , zero , hexvar lw a3 , ( s2 ) lw t9 , - hexvar ( gp ) addiu a2 , zero , num beq v0 , s1 , hexvar addiu a1 , zero , num beq v0 , v1 , hexvar nop lw a0 , hexvar ( a3 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax ] movsx eax , al cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push eax push num push num lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push eax push num push num lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax ] movsx eax , al sub esp , hexvar push eax call hexvar add esp , hexvar nop add dword ptr [ ebp + num ] , num mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax ] test al , al jne hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , sil mov qword ptr [ rbp - num ] , rdi and al , num mov byte ptr [ rbp - num ] , al test byte ptr [ rbp - num ] , num jne hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp byte ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - num ] movsx ecx , byte ptr [ rax ] mov edx , ecx sub edx , hexvar mov dword ptr [ rbp - hexvar ] , ecx mov dword ptr [ rbp - hexvar ] , edx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov rsi , qword ptr [ hexvar ] movabs rdi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rsi , qword ptr [ hexvar ] movabs rdi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - num ] movsx edi , byte ptr [ rax ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar test dl , dl je hexvar movzx eax , byte ptr [ eax ] lea ecx , [ ebx - hexvar ] mov edi , dword ptr [ ebx + hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ ebx - hexvar ] test al , al mov dword ptr [ esp + hexvar ] , ecx jne hexvar jmp hexvar nop push edx push num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esi , num movzx eax , byte ptr [ esi ] test al , al je hexvar cmp al , hexvar mov edx , dword ptr [ edi ] je hexvar cmp al , hexvar je hexvar mov ecx , dword ptr [ edx + hexvar ] cmp ecx , dword ptr [ edx + hexvar ] jae hexvar lea ebp , [ ecx + num ] add esi , num mov dword ptr [ edx + hexvar ] , ebp mov byte ptr [ ecx ] , al movzx eax , byte ptr [ esi ] test al , al jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , ecx jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] cmp byte ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] sub ecx , hexvar setb dl movzx esi , dl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp esi mov eax , dword ptr [ ebp + num ] lea eax , [ eax + eax * num ] mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] sub ecx , hexvar setb dl movzx esi , dl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp esi mov eax , dword ptr [ ebp + num ] lea eax , [ eax + eax * num ] mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
slti v0 , a0 , hexvar beqz v0 , hexvar nop sll v0 , a0 , num lui a0 , hexvar addiu a0 , a0 , hexvar addu a0 , a0 , v0 jr ra lw v0 , num ( a0 ) jr ra addiu v0 , zero , - num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar imul eax , dword ptr [ ebp + num ] , hexvar lea ecx , [ hexvar ] add ecx , eax mov eax , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar imul eax , dword ptr [ ebp + num ] , hexvar lea ecx , [ hexvar ] add ecx , eax mov eax , dword ptr [ ecx + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
sltiu v0 , a0 , hexvar beqz v0 , hexvar nop sll v0 , a0 , num addu a0 , v0 , a0 lui v0 , hexvar sll a0 , a0 , num addiu v0 , v0 , - hexvar addu a0 , a0 , v0 jr ra lw v0 , num ( a0 ) jr ra addiu v0 , zero , - num
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] sub ecx , hexvar setb dl movzx esi , dl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp esi mov eax , dword ptr [ ebp + num ] lea eax , [ eax + eax * num ] mov eax , dword ptr [ eax * num + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) sltiu v0 , v0 , hexvar beqz v0 , hexvar nop lui a0 , hexvar lw v1 , num ( fp ) move v0 , v1 sll v0 , v0 , num addu v0 , v0 , v1 sll v0 , v0 , num addiu v1 , a0 , hexvar addu v0 , v0 , v1 lw v0 , num ( v0 )
mov eax , dword ptr [ esp + num ] call hexvar add edx , hexvar cmp eax , hexvar ja hexvar lea eax , [ eax + eax * num ] mov eax , dword ptr [ edx + eax * num + hexvar ] ret
sltiu v0 , a0 , hexvar beqz v0 , hexvar nop sll v0 , a0 , num addu a0 , v0 , a0 sll a0 , a0 , num lui v0 , hexvar addiu v0 , v0 , hexvar addu a0 , a0 , v0 lw v0 , num ( a0 ) jr ra nop jr ra addiu v0 , zero , - num
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , esi cmp dword ptr [ ebp - num ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax add esp , hexvar pop esi pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] mov r0 , r0 add sp , fp , num pop { fp } bx lr strheq sb , [ pc ] , -ip
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , num ( fp ) bnez v0 , hexvar nop lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , num ( fp ) nop move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edx cmp dword ptr [ eax ] , num setne cl mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx cmp qword ptr [ rbp - num ] , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax nop nop pop rbp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - num ] mov r0 , r0 add sp , fp , num pop { fp } bx lr andeq sb , pc , r0 , lsl num
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , esi cmp dword ptr [ ebp - num ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw s0 , hexvar ( a2 ) beqz s0 , hexvar addiu s2 , a2 , hexvar move s1 , a1 move s4 , a0 addiu s3 , zero , num addiu s5 , zero , hexvar addiu s7 , zero , - num lui s6 , hexvar b hexvar addiu s6 , s6 , - hexvar addiu v1 , zero , hexvar bne v0 , v1 , hexvar lui a3 , hexvar lw v0 , hexvar ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , hexvar ( a2 ) beqz s0 , hexvar addiu s2 , a2 , hexvar move s1 , a1 move s4 , a0 addiu s3 , zero , num addiu s5 , zero , hexvar addiu s7 , zero , - num lui s6 , hexvar b hexvar addiu s6 , s6 , hexvar addiu v1 , zero , hexvar bne v0 , v1 , hexvar lui a3 , hexvar lw v0 , hexvar ( s1 ) lw a1 , hexvar ( s1 ) sw v0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw fp , num ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s4 , hexvar ( sp ) sw fp , hexvar ( sp ) lw s4 , - hexvar ( gp ) lw fp , hexvar ( a2 )
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( a2 ) beqz s0 , hexvar lui s6 , hexvar addiu s2 , a2 , hexvar move s1 , a1 move s4 , a0 addiu s3 , zero , num addiu s5 , zero , hexvar addiu s7 , zero , - num b hexvar addiu s6 , s6 , - hexvar lb a2 , num ( s0 ) beqz a2 , hexvar move a3 , s1 lb v0 , num ( s0 ) beq v0 , s5 , hexvar slti v1 , v0 , hexvar bnez v1 , hexvar addiu v1 , zero , hexvar beq v0 , v1 , hexvar addiu v1 , zero , hexvar bne v0 , v1 , hexvar lui a3 , hexvar lw v1 , hexvar ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push r13 push r12 push rbp push rbx sub rsp , num mov r13 , rdi mov rbp , rsi lea r12 , [ rdx + hexvar ] mov rbx , qword ptr [ rdx + hexvar ] test rbx , rbx je hexvar cmp dword ptr [ rbx ] , num jne hexvar movzx eax , byte ptr [ rbx + num ] test al , al je hexvar movzx edx , byte ptr [ rbx + num ] cmp dl , hexvar je hexvar cmp dl , hexvar jg hexvar cmp dl , hexvar je hexvar jmp hexvar cmp dl , hexvar je hexvar cmp dl , hexvar je hexvar jmp hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbp + hexvar ] jmp hexvar mov rdi , - num cmp al , hexvar jne hexvar jmp hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbp + hexvar ] jmp hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbp + hexvar ] jmp hexvar mov ecx , hexvar mov edx , hexvar mov esi , hexvar mov edi , hexvar call hexvar mov rsi , - num movsx edx , byte ptr [ rbx + num ] call hexvar mov rsi , qword ptr [ rbx + num ] mov rdx , rax mov rdi , r12 mov eax , num call hexvar jmp hexvar mov rsi , qword ptr [ rbx + num ] mov edx , hexvar mov rdi , r12 mov eax , num call hexvar jmp hexvar mov rcx , rbp mov rdx , r13 mov rsi , rbx mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw s1 , hexvar ( a2 )
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdx + hexvar ] test rbx , rbx je hexvar mov r13 , rdi mov rbp , rsi lea r12 , [ rdx + hexvar ] jmp hexvar nop movsx edx , byte ptr [ rbx + num ] test dl , dl je hexvar movzx eax , byte ptr [ rbx + num ] cmp al , hexvar je hexvar jle hexvar cmp al , hexvar je hexvar cmp al , hexvar jne hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov rsi , qword ptr [ rbx + num ] mov rdx , rax mov rdi , r12 xor eax , eax call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar nop dword ptr [ rax ] cmp dword ptr [ rbx ] , num je hexvar mov rsi , rbx mov rcx , rbp mov rdx , r13 mov rdi , r12 call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar add rsp , num mov eax , num pop rbx pop rbp pop r12 pop r13 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx mov rdx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdx ] , num jge hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx ] setge dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] sub rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jge hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rdi cmp qword ptr [ rcx ] , num setl r8b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] cmp rcx , qword ptr [ rdx ] setge sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] sub rcx , num mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rdi cmp qword ptr [ rcx ] , num setl r8b mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , rdx mov byte ptr [ rbp - hexvar ] , r8b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] cmp rcx , qword ptr [ rdx ] setge sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] sub rcx , num mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx mov rdx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdx ] , num jge hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx ] setge dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] sub rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovl edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov qword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar mov edx , hexvar cmovge edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jge hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx mov rdx , qword ptr [ rbp - hexvar ] cmp qword ptr [ rdx ] , num jge hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx ] setge dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] sub rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] shr rsi , hexvar mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setge dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jge hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jl hexvar mov rax , qword ptr [ rbp - hexvar ] sub rax , num mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] sub ecx , eax mov dword ptr [ ebp + hexvar ] , ecx cmp dword ptr [ ebp + hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx call eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] sub ecx , eax mov dword ptr [ ebp + hexvar ] , ecx cmp dword ptr [ ebp + hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx call eax jmp hexvar add esp , hexvar pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] sub r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r4 , [ fp , - hexvar ] b hexvar mov r4 , num bl hexvar mov r3 , r0 str r4 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] ldr r2 , [ r2 , num ] mov r0 , r2 blx r3 b hexvar mov r0 , r0 mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] sub ecx , eax mov dword ptr [ ebp + hexvar ] , ecx cmp dword ptr [ ebp + hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx call eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] sub ecx , eax mov dword ptr [ ebp + hexvar ] , ecx cmp dword ptr [ ebp + hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx call eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] sub ecx , eax mov dword ptr [ ebp + hexvar ] , ecx cmp dword ptr [ ebp + hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx call eax jmp hexvar add esp , hexvar pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] sub r3 , r2 , r3 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r4 , [ fp , - hexvar ] b hexvar mov r4 , num bl hexvar mov r3 , r0 str r4 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] ldr r2 , [ r2 , num ] mov r0 , r2 blx r3 b hexvar mov r0 , r0 mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] sub ecx , eax mov dword ptr [ ebp + hexvar ] , ecx cmp dword ptr [ ebp + hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx call eax jmp hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 ) move a3 , v0 lw a2 , hexvar ( fp ) addiu a1 , zero , num lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) subu v0 , v1 , v0 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop lw s0 , hexvar ( fp ) b hexvar nop move s0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw s0 , ( v0 ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v1 , hexvar ( fp ) lw v1 , num ( v1 ) move a0 , v1 move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) b hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + hexvar ] sub ecx , eax mov dword ptr [ ebp + hexvar ] , ecx cmp dword ptr [ ebp + hexvar ] , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , ecx call eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov r12 , rdi mov rbx , rdx mov edi , num call hexvar mov rbp , rax mov rsi , r12 mov edi , num call hexvar mov rcx , rbp mov rdx , rax mov esi , hexvar mov edi , num mov eax , num call hexvar test rbx , rbx je hexvar mov rdi , rbx call hexvar mov rbx , rax mov edx , num mov esi , hexvar mov edi , num call hexvar mov rdx , rbx mov rsi , rax mov edi , num mov eax , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rdi + hexvar ] cmp rax , qword ptr [ rdi + hexvar ] jb hexvar mov esi , hexvar call hexvar jmp hexvar lea rdx , [ rax + num ] mov qword ptr [ rdi + hexvar ] , rdx mov byte ptr [ rax ] , hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar mov r4 , r0 ldr r2 , [ fp , - hexvar ] mov r1 , num mov r0 , num bl hexvar mov r3 , r0 mov r2 , r3 mov r1 , r4 ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , r0 ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar mov r3 , r0 mov r1 , r3 mov r0 , r4 bl hexvar mov r0 , hexvar bl hexvar mov r0 , r0 sub sp , fp , num pop { r4 , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a1 move s0 , a2 move a2 , a0 addiu a1 , zero , num move a0 , zero lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a2 , s2 addiu a1 , zero , num addiu a0 , zero , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a3 , v0 move a2 , s1 lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz s0 , hexvar addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , v0 move a1 , s0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a2 , v0 move a1 , s1 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw v1 , hexvar ( a0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax je hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , eax mov esi , ecx push edx push num call hexvar mov edi , eax add esp , num push ebp push num call hexvar push edi push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar test esi , esi je hexvar sub esp , hexvar push esi call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar push esi push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] cmp edx , dword ptr [ eax + hexvar ] jae hexvar lea ecx , [ edx + num ] mov dword ptr [ eax + hexvar ] , ecx mov byte ptr [ edx ] , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a2 , hexvar ( fp ) addiu a1 , zero , num move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move s0 , v0 lw a2 , hexvar ( fp ) addiu a1 , zero , num addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , s0 lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw a1 , hexvar ( fp ) addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move a1 , v0 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a2 , hexvar ( fp ) addiu a1 , zero , num move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move s0 , v0 lw a2 , hexvar ( fp ) addiu a1 , zero , num addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , s0 lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw a1 , hexvar ( fp ) addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move a1 , v0 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , zero , hexvar sw s5 , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , a3 sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw s5 , - hexvar ( gp ) lb v1 , ( a2 ) lb s1 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a0 , ( s5 ) sw a0 , hexvar ( sp ) beq v1 , v0 , hexvar nop lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , a2 sw zero , hexvar ( sp ) jalr t9 addiu a1 , a1 , - hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s6 , v0 move s0 , zero move s3 , zero move s7 , zero b hexvar addiu s2 , sp , hexvar addu v0 , s7 , s3 addiu s3 , s3 , num sb s4 , ( v0 ) lw v1 , num ( s6 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov eax , r8d mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ rbp - hexvar ] , al and byte ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar movsx esi , byte ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rdi mov r8d , esi mov rsi , rax lea rdi , [ rip - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s6 , a0 sw a1 , hexvar ( sp ) sw a3 , hexvar ( sp ) lb s4 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lb v1 , ( a2 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop sw zero , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , a2 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 move s7 , zero move s0 , zero move s3 , zero addiu s5 , zero , - num b hexvar addiu fp , sp , hexvar lb v0 , num ( a2 ) bnez v0 , hexvar lw v0 , - hexvar ( gp ) sw zero , hexvar ( sp ) lw s1 , ( v0 ) b hexvar addiu s7 , zero , num addu v0 , s3 , s0 sb s2 , ( v0 ) addiu s0 , s0 , num lw v1 , num ( s1 )
push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rbx , rsi mov r12d , ecx mov r13d , r8d cmp byte ptr [ rdx ] , hexvar je hexvar lea rsi , [ rip + hexvar ] mov rdi , rdx call hexvar mov rbp , rax test rax , rax je hexvar lea r9 , [ rsp + num ] movsx r8d , r13b mov ecx , r12d mov rdx , rax mov rsi , rbx lea rdi , [ rip - hexvar ] call hexvar mov ebx , eax mov rdi , rbp call hexvar test eax , eax mov eax , hexvar cmovne ebx , eax jmp hexvar cmp byte ptr [ rdx + num ] , num jne hexvar lea r9 , [ rsp + num ] movsx r8d , r8b mov rdx , qword ptr [ rip + hexvar ] lea rdi , [ rip - hexvar ] call hexvar mov ebx , eax mov eax , ebx add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] cmp byte ptr [ eax ] , hexvar je hexvar sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax mov eax , esi movsx esi , al push esi push edi push ebp push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar mov esi , eax add esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax mov eax , hexvar cmovne esi , eax jmp hexvar cmp byte ptr [ eax + num ] , num jne hexvar sub esp , num lea eax , [ esp + hexvar ] push eax mov eax , esi movsx esi , al push esi push edi mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar mov esi , eax add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , hexvar bne hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num ldrb r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar mov r3 , num strb r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] and r3 , r3 , num strb r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - num ] ldrb r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] b hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar mvn r3 , num b hexvar sub r3 , fp , hexvar str r3 , [ sp , num ] ldrb r3 , [ fp , num ] str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar str r0 , [ fp , - num ] ldrb r3 , [ fp , - hexvar ] eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mvn r3 , num str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax ] cmp al , hexvar jne hexvar mov eax , dword ptr [ ebp + hexvar ] add eax , num movzx eax , byte ptr [ eax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ ebp - hexvar ] , al and byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , hexvar jmp hexvar movsx eax , byte ptr [ ebp - hexvar ] sub esp , num lea edx , [ ebp + num ] push edx push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , r5 , r6 , r7 , lr } ldrb ip , [ r2 ] sub sp , sp , hexvar cmp ip , hexvar str r0 , [ sp , hexvar ] mov r6 , r1 mov r7 , r3 ldrb r4 , [ sp , hexvar ] beq hexvar mov r0 , r2 ldr r1 , [ pc , hexvar ] bl hexvar subs r5 , r0 , num beq hexvar add r2 , sp , hexvar str r4 , [ sp ] mov r3 , r7 mov r1 , r6 str r2 , [ sp , num ] ldr r0 , [ pc , hexvar ] mov r2 , r5 bl hexvar mov r4 , r0 mov r0 , r5 bl hexvar cmp r0 , num bne hexvar mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , ecx mov eax , r8d mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar jne hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num mov byte ptr [ rbp - hexvar ] , al and byte ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num cmp byte ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , hexvar jmp hexvar movsx esi , byte ptr [ rbp - hexvar ] lea rdi , [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rdi mov r8d , esi mov rsi , rax lea rdi , [ rip - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax movzx eax , byte ptr [ rbp - hexvar ] xor eax , num test al , al je hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test eax , eax je hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] cmp byte ptr [ eax ] , hexvar je hexvar sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax mov eax , esi movsx esi , al push esi push edi push ebp push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar mov esi , eax add esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax mov eax , hexvar cmovne esi , eax jmp hexvar cmp byte ptr [ eax + num ] , num jne hexvar sub esp , num lea eax , [ esp + hexvar ] push eax mov eax , esi movsx esi , al push esi push edi mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar mov esi , eax add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 } ldrb r2 , [ r0 , num ] ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num lsr r3 , r2 , hexvar ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num lsl r3 , r3 , num orr r3 , r3 , r2 , lsr num ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num lsl r3 , r3 , num orr r3 , r3 , r2 , lsr num ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num lsl r3 , r3 , num orr r3 , r3 , r2 , lsr num ldrb r4 , [ r0 , num ] orr r4 , r4 , r2 , lsl num lsl r3 , r3 , num orr r3 , r3 , r4 , lsr num ldrb r6 , [ r0 ] orr r0 , r6 , r4 , lsl num add r1 , r3 , hexvar adds r0 , r0 , num adc r1 , r1 , hexvar pop { r4 , r5 , r6 , r7 } bx lr
mov edx , dword ptr [ rdi + num ] mov rax , rdx movzx edx , byte ptr [ rdi + num ] shl rax , num or rdx , rax movzx eax , byte ptr [ rdi + num ] shl rdx , num or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx movzx edx , byte ptr [ rdi ] shl rax , num or rax , rdx ret
push edi push esi xor edx , edx push ebx mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ecx + num ] movzx ebx , byte ptr [ ecx + num ] shld edx , eax , num shl eax , num or ebx , eax mov eax , ebx shld edx , ebx , num movzx ebx , byte ptr [ ecx + num ] shl eax , num or ebx , eax shld edx , ebx , num mov eax , ebx movzx ebx , byte ptr [ ecx + num ] shl eax , num mov edi , edx or ebx , eax shld edi , ebx , num mov esi , ebx movzx ebx , byte ptr [ ecx ] shl esi , num lea edx , [ edi - hexvar ] add edx , hexvar or ebx , esi mov eax , ebx pop ebx pop esi pop edi ret
lbu v1 , num ( a0 ) sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl a1 , v1 , hexvar sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num sll v1 , v1 , num lbu a0 , ( a0 ) or v1 , a0 , v1 jr ra or v0 , v0 , a1
movzx edx , byte ptr [ rdi + num ] shl rdx , num movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num movzx edx , byte ptr [ rdi + num ] or rdx , rax mov rax , rdx shl rax , num movzx edx , byte ptr [ rdi + num ] or rdx , rax shl rdx , num movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx shl rax , num movzx edx , byte ptr [ rdi ] or rax , rdx ret
mov edx , dword ptr [ rdi + num ] mov rax , rdx movzx edx , byte ptr [ rdi + num ] shl rax , num or rdx , rax movzx eax , byte ptr [ rdi + num ] shl rdx , num or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx movzx edx , byte ptr [ rdi ] shl rax , num or rax , rdx ret
mov edx , dword ptr [ rdi + num ] mov rax , rdx movzx edx , byte ptr [ rdi + num ] shl rax , num or rdx , rax movzx eax , byte ptr [ rdi + num ] shl rdx , num or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx movzx edx , byte ptr [ rdi ] shl rax , num or rax , rdx ret
mov edx , dword ptr [ rdi + num ] mov rax , rdx movzx edx , byte ptr [ rdi + num ] shl rax , num or rdx , rax movzx eax , byte ptr [ rdi + num ] shl rdx , num or rax , rdx shl rax , num mov rdx , rax movzx eax , byte ptr [ rdi + num ] or rax , rdx movzx edx , byte ptr [ rdi ] shl rax , num or rax , rdx ret
lbu v1 , num ( a0 ) sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl a1 , v1 , hexvar sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num or a1 , v0 , a1 sll v0 , v1 , num lbu v1 , num ( a0 ) or v1 , v1 , v0 srl v0 , v1 , hexvar sll a1 , a1 , num sll v1 , v1 , num lbu a0 , ( a0 ) or v1 , a0 , v1 jr ra or v0 , v0 , a1
push { r4 , r5 , r6 , r7 } ldrb r2 , [ r0 , num ] ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num lsr r3 , r2 , hexvar ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num lsl r3 , r3 , num orr r3 , r3 , r2 , lsr num ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num lsl r3 , r3 , num orr r3 , r3 , r2 , lsr num ldrb r4 , [ r0 , num ] orr r2 , r4 , r2 , lsl num lsl r3 , r3 , num orr r3 , r3 , r2 , lsr num ldrb r4 , [ r0 , num ] orr r4 , r4 , r2 , lsl num lsl r3 , r3 , num orr r3 , r3 , r4 , lsr num ldrb r6 , [ r0 ] orr r0 , r6 , r4 , lsl num add r1 , r3 , hexvar adds r0 , r0 , num adc r1 , r1 , hexvar pop { r4 , r5 , r6 , r7 } bx lr
mov ecx , dword ptr [ esp + num ] mov eax , dword ptr [ esp + num ] test ecx , ecx je hexvar mov edx , dword ptr [ eax + num ] test edx , edx jne hexvar mov dword ptr [ eax + hexvar ] , num ret
test esi , esi je hexvar mov eax , num cmp dword ptr [ rdi + num ] , num je hexvar mov dword ptr [ rdi + hexvar ] , eax ret
test esi , esi je hexvar mov eax , num cmp dword ptr [ rdi + num ] , num je hexvar mov dword ptr [ rdi + hexvar ] , eax ret
test esi , esi mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov edx , hexvar jmp hexvar mov edx , ecx nop dword ptr [ rax + rax ] cmp edx , hexvar jle hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar cmp dword ptr [ rdi + num ] , num mov edx , hexvar cmove edx , eax jmp hexvar mov dword ptr [ rdi + hexvar ] , num mov edx , hexvar jmp hexvar mov dword ptr [ rdi + hexvar ] , num mov edx , hexvar jmp hexvar ret
test esi , esi je hexvar mov eax , num cmp dword ptr [ rdi + num ] , num je hexvar mov dword ptr [ rdi + hexvar ] , eax ret
call hexvar add eax , hexvar cmp dword ptr [ esp + num ] , num je hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ eax + hexvar ] , num jmp hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ eax + hexvar ] , num nop ret
sw a0 , ( sp ) sw a1 , num ( sp ) lw v0 , num ( sp ) beqz v0 , hexvar nop lw v0 , ( sp ) lw v0 , num ( v0 )
test esi , esi je hexvar mov eax , num cmp dword ptr [ rdi + num ] , num je hexvar mov dword ptr [ rdi + hexvar ] , eax ret
call hexvar add eax , hexvar cmp dword ptr [ esp + num ] , num je hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ eax + hexvar ] , num jmp hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ eax + hexvar ] , num nop ret
sub sp , sp , num str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] b hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] mov r0 , r0 add sp , sp , num bx lr
test esi , esi jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar bnez a1 , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) sw v0 , hexvar ( a0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp )
cmp r1 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ r0 , hexvar ] mov r0 , num bx lr push { r4 , lr } bl hexvar pop { r4 , pc }
test esi , esi jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) sw v1 , hexvar ( v0 ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
cmp r1 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ r0 , hexvar ] mov r0 , num bx lr push { r4 , lr } bl hexvar pop { r4 , pc }
test esi , esi jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rdi + hexvar ] , rax mov eax , num ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] test eax , eax jne hexvar lea eax , [ ebx - hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , eax add esp , num mov eax , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov esi , dword ptr [ rbp - hexvar ] test esi , esi setne al movzx esi , al mov edx , esi mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp dword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ esi + num ] mov ebx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] movzx esi , byte ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx and esi , num mov dword ptr [ eax + num ] , esi mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp + num ] mov bl , byte ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi movzx esi , bl mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , num ( v0 ) lw v0 , hexvar ( fp ) lw a0 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lbu a1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) move a2 , a1 move a1 , a0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r0 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r1 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bge hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lbu v0 , hexvar ( a0 ) sw a2 , hexvar ( sp ) move a3 , a1 move a2 , v0 lw a1 , hexvar ( a0 ) lw a0 , num ( a0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) bltz v0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , num ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , num ( v0 ) lw v0 , hexvar ( fp ) lw a0 , hexvar ( v0 ) lw v0 , hexvar ( fp ) lbu a1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) move a2 , a1 move a1 , a0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] movzx edx , al mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , rdi mov rdi , rax call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num jns hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , rax call hexvar nop leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp + num ] mov bl , byte ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi movzx esi , bl mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , num ( v0 )
push rbx mov rbx , rdi mov rcx , rsi mov r8 , rdx movzx edx , byte ptr [ rdi + hexvar ] mov rsi , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + num ] call hexvar test eax , eax jns hexvar call hexvar mov rsi , qword ptr [ rbx + hexvar ] mov edi , dword ptr [ rax ] call hexvar pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] add r0 , r3 , hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , num bl hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , r2 blt hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop sw zero , hexvar ( sp ) b hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , v0 , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , num addiu a1 , zero , num move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , num sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) slt v0 , v0 , v1 bnez v0 , hexvar nop lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r15d , hexvar mov r14d , hexvar jmp hexvar mov eax , hexvar mov rbx , qword ptr [ rsp + hexvar ] nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar xor ebx , ebx jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov dword ptr [ rsp + hexvar ] , ebp mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov ecx , dword ptr [ rsp + hexvar ] cmp ecx , eax mov eax , hexvar cmovl eax , r14d jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp + hexvar ] mov esi , dword ptr [ rsp + hexvar ] call hexvar lea rdi , [ rax + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov ebp , dword ptr [ rsp + hexvar ] add ebp , num mov eax , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov qword ptr [ rsp + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r15d jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov rax , rbx add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push rbp push rbx push rax mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar test eax , eax jle hexvar xor ebp , ebp nop word ptr [ rax + rax ] mov rdi , rbx mov esi , ebp call hexvar lea rdi , [ rax + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar add ebp , num mov rdi , rbx call hexvar cmp ebp , eax jl hexvar jmp hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop rbp ret
push rbp push rbx push rax mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar test eax , eax jle hexvar xor ebp , ebp nop word ptr [ rax + rax ] mov rdi , rbx mov esi , ebp call hexvar lea rdi , [ rax + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar add ebp , num mov rdi , rbx call hexvar cmp ebp , eax jl hexvar jmp hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax + hexvar ] test edi , edi je hexvar sub esp , hexvar push edi call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar mov esi , num lea ebp , [ ebx - hexvar ] jmp hexvar sub esp , num push esi push edi call hexvar mov dword ptr [ esp ] , hexvar push ebp push num push num add eax , hexvar push eax call hexvar add esi , num add esp , hexvar sub esp , hexvar push edi call hexvar add esp , hexvar cmp eax , esi jg hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx push rax mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar test eax , eax jle hexvar xor ebp , ebp nop word ptr [ rax + rax ] mov rdi , rbx mov esi , ebp call hexvar lea rdi , [ rax + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar add ebp , num mov rdi , rbx call hexvar cmp ebp , eax jl hexvar jmp hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop rbp ret
push rbp push rbx push rax mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar test eax , eax jle hexvar xor ebp , ebp nop word ptr [ rax + rax ] mov rdi , rbx mov esi , ebp call hexvar lea rdi , [ rax + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar add ebp , num mov rdi , rbx call hexvar cmp ebp , eax jl hexvar jmp hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax + hexvar ] test edi , edi je hexvar sub esp , hexvar push edi call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar mov esi , num lea ebp , [ ebx - hexvar ] jmp hexvar sub esp , num push esi push edi call hexvar mov dword ptr [ esp ] , hexvar push ebp push num push num add eax , hexvar push eax call hexvar add esi , num add esp , hexvar sub esp , hexvar push edi call hexvar add esp , hexvar cmp eax , esi jg hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx push rax mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi je hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar test eax , eax jle hexvar xor ebp , ebp nop word ptr [ rax + rax ] mov rdi , rbx mov esi , ebp call hexvar lea rdi , [ rax + hexvar ] mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar add ebp , num mov rdi , rbx call hexvar cmp ebp , eax jl hexvar jmp hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop rbp ret
push { r4 , lr } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r2 , [ pc , hexvar ] mov r1 , r0 mov r0 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] mov r1 , r0 ldr r2 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r1 , [ pc , hexvar ] mov r2 , num mov r0 , num bl hexvar pop { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r1 , [ r3 ] b hexvar andeq sb , r3 , r0 , asr sb andeq sb , r3 , r8 , ror num andeq sb , r3 , r0 , lsl num muleq r3 , r4 , sb andeq sb , r3 , r0 , ror num strheq sb , [ r3 ] , -ip ldrdeq fp , ip , [ r4 ] , -ip
push rbp mov rbp , rsp sub rsp , hexvar mov rsi , qword ptr [ hexvar ] movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , rax movabs rsi , hexvar movabs rdx , hexvar mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a1 , hexvar addiu a2 , zero , num sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num addiu a2 , a2 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a3 , hexvar lw gp , hexvar ( sp ) lui a2 , hexvar addiu a3 , a3 , - hexvar addiu a2 , a2 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , zero addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a2 , zero , num lw gp , hexvar ( sp ) move a0 , v0 lw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw a1 , ( v0 ) jr t9 addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar lea edx , [ ebx - hexvar ] push edx push eax push num call hexvar add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar lea edx , [ ebx - hexvar ] push edx lea edx , [ ebx - hexvar ] push edx push eax push num call hexvar mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push esi push eax call hexvar add esp , hexvar pop ebx pop esi ret
push { r4 , lr } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r2 , [ pc , hexvar ] mov r1 , r0 mov r0 , num bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r3 , [ pc , hexvar ] mov r1 , r0 ldr r2 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r1 , [ pc , hexvar ] mov r2 , num mov r0 , num bl hexvar pop { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r1 , [ r3 ] b hexvar andeq lr , r1 , r8 , asr ip andeq lr , r1 , r0 , ror ip andeq lr , r1 , r8 , lsl num andeq lr , r1 , r0 , ror r1 muleq r1 , r8 , r1 muleq r1 , ip , ip muleq r2 , r4 , r1
push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push num push eax push num call hexvar lea edx , [ ebx - hexvar ] add esp , hexvar push edx push eax push num call hexvar lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar lea edx , [ ebx - hexvar ] push edx lea edx , [ ebx - hexvar ] push edx push eax push num call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar mov esi , dword ptr [ eax ] lea eax , [ ebx - hexvar ] push num push eax push num call hexvar pop edx pop ecx push esi push eax call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a1 , hexvar addiu a2 , zero , num sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num addiu a2 , a2 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a3 , hexvar lw gp , hexvar ( sp ) lui a2 , hexvar addiu a3 , a3 , - hexvar addiu a2 , a2 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , zero addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a2 , zero , num lw gp , hexvar ( sp ) move a0 , v0 lw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw a1 , ( v0 ) jr t9 addiu sp , sp , hexvar
mov rdx , rsi mov esi , dword ptr [ rdi + hexvar ] mov ecx , dword ptr [ rdx + hexvar ] cmp ecx , num sete al cmp ecx , num sete cl or eax , ecx cmp esi , num je hexvar cmp esi , num je hexvar mov ecx , dword ptr [ rdi + hexvar ] and ecx , hexvar test al , al je hexvar cmp ecx , hexvar je hexvar mov eax , num ret
ldr r3 , [ r1 , hexvar ] mov r2 , r1 cmp r3 , num cmpne r3 , num ldr r1 , [ r0 , hexvar ] moveq r3 , num movne r3 , num cmp r1 , num cmpne r1 , num beq hexvar ldr r1 , [ r0 , hexvar ] cmp r3 , num and r1 , r1 , hexvar beq hexvar cmp r1 , hexvar beq hexvar mov r3 , num mov r0 , r3 bx lr cmp r3 , num bne hexvar ldr r3 , [ r2 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar mvn r3 , num mov r0 , r3 bx lr ldr r3 , [ r2 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar cmp r1 , hexvar beq hexvar ldr r1 , [ r0 , hexvar ] ldr r3 , [ r2 , hexvar ] cmp r1 , r3 blt hexvar bgt hexvar ldr r3 , [ r0 , hexvar ] ldr r1 , [ r2 , hexvar ] subs r3 , r3 , r1 bne hexvar ldr r1 , [ r0 ] ldr r0 , [ r2 ] b hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s2 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw v0 , hexvar ( s1 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov eax , dword ptr [ edi + hexvar ] mov edx , dword ptr [ esi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num mov ebp , dword ptr [ eax + hexvar ] jle hexvar test ebp , ebp je hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov edi , dword ptr [ esp + hexvar ] xor esi , esi jmp hexvar lea esi , [ esi ] sub esp , num push esi push ebp call hexvar mov ecx , dword ptr [ eax + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] cmp dword ptr [ esp + hexvar ] , eax jle hexvar sub esp , num add esi , num push eax mov dword ptr [ esp + hexvar ] , eax push ecx push edi call hexvar mov edx , dword ptr [ esp + hexvar ] lea eax , [ edi + edx ] add edx , num sub dword ptr [ esp + hexvar ] , edx add esp , hexvar lea edi , [ eax + num ] mov byte ptr [ eax ] , hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar cmp eax , esi jg hexvar mov byte ptr [ edi - num ] , num mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov r12d , edx xor eax , eax cmp edx , num jl hexvar mov r15 , qword ptr [ rcx + hexvar ] test r15 , r15 je hexvar mov rbx , rsi mov rdi , r15 call hexvar mov qword ptr [ rsp ] , rbx mov r14 , rbx test eax , eax jle hexvar xor ebx , ebx mov r13 , qword ptr [ rsp ] nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebx call hexvar mov r14 , qword ptr [ rax + num ] mov rdi , r14 call hexvar mov rbp , rax cmp r12d , ebp jle hexvar mov rdi , r13 mov rsi , r14 call hexvar movsxd rax , ebp lea r14 , [ rax + r13 ] add r14 , num mov byte ptr [ r13 + rax ] , hexvar not ebp add r12d , ebp add ebx , num mov rdi , r15 call hexvar mov r13 , r14 cmp ebx , eax jl hexvar mov byte ptr [ r14 - num ] , num mov rax , qword ptr [ rsp ] jmp hexvar xor eax , eax jmp hexvar lea rax , [ r13 - num ] mov rcx , qword ptr [ rsp ] cmp r13 , rcx cmove rax , r13 mov byte ptr [ rax ] , num mov rax , rcx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov r12d , edx xor eax , eax cmp edx , num jl hexvar mov r15 , qword ptr [ rcx + hexvar ] test r15 , r15 je hexvar mov rbx , rsi mov rdi , r15 call hexvar test eax , eax je hexvar mov rdi , r15 call hexvar mov qword ptr [ rsp ] , rbx mov r14 , rbx test eax , eax jle hexvar xor ebx , ebx mov r13 , qword ptr [ rsp ] nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebx call hexvar mov r14 , qword ptr [ rax + num ] mov rdi , r14 call hexvar mov rbp , rax cmp r12d , ebp jle hexvar mov rdi , r13 mov rsi , r14 call hexvar movsxd rax , ebp lea r14 , [ rax + r13 ] add r14 , num mov byte ptr [ r13 + rax ] , hexvar not ebp add r12d , ebp add ebx , num mov rdi , r15 call hexvar mov r13 , r14 cmp ebx , eax jl hexvar mov byte ptr [ r14 - num ] , num mov rax , qword ptr [ rsp ] jmp hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov r12d , edx xor eax , eax cmp edx , num jl hexvar mov r15 , qword ptr [ rcx + hexvar ] test r15 , r15 je hexvar mov rbx , rsi mov rdi , r15 call hexvar test eax , eax je hexvar mov rdi , r15 call hexvar mov qword ptr [ rsp ] , rbx mov r14 , rbx test eax , eax jle hexvar xor ebx , ebx mov r13 , qword ptr [ rsp ] nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebx call hexvar mov r14 , qword ptr [ rax + num ] mov rdi , r14 call hexvar mov rbp , rax cmp r12d , ebp jle hexvar mov rdi , r13 mov rsi , r14 call hexvar movsxd rax , ebp lea r14 , [ rax + r13 ] add r14 , num mov byte ptr [ r13 + rax ] , hexvar not ebp add r12d , ebp add ebx , num mov rdi , r15 call hexvar mov r13 , r14 cmp ebx , eax jl hexvar mov byte ptr [ r14 - num ] , num mov rax , qword ptr [ rsp ] jmp hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num mov ebp , dword ptr [ eax + hexvar ] jle hexvar test ebp , ebp je hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov edi , dword ptr [ esp + hexvar ] xor esi , esi jmp hexvar lea esi , [ esi ] sub esp , num push esi push ebp call hexvar mov ecx , dword ptr [ eax + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] cmp dword ptr [ esp + hexvar ] , eax jle hexvar sub esp , num add esi , num push eax mov dword ptr [ esp + hexvar ] , eax push ecx push edi call hexvar mov edx , dword ptr [ esp + hexvar ] lea eax , [ edi + edx ] add edx , num sub dword ptr [ esp + hexvar ] , edx add esp , hexvar lea edi , [ eax + num ] mov byte ptr [ eax ] , hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar cmp eax , esi jg hexvar mov byte ptr [ edi - num ] , num mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov r12d , edx xor eax , eax cmp edx , num jl hexvar mov r15 , qword ptr [ rcx + hexvar ] test r15 , r15 je hexvar mov rbx , rsi mov rdi , r15 call hexvar mov qword ptr [ rsp ] , rbx mov r14 , rbx test eax , eax jle hexvar xor ebx , ebx mov r13 , qword ptr [ rsp ] nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebx call hexvar mov r14 , qword ptr [ rax + num ] mov rdi , r14 call hexvar mov rbp , rax cmp r12d , ebp jle hexvar mov rdi , r13 mov rsi , r14 call hexvar movsxd rax , ebp lea r14 , [ rax + r13 ] add r14 , num mov byte ptr [ r13 + rax ] , hexvar not ebp add r12d , ebp add ebx , num mov rdi , r15 call hexvar mov r13 , r14 cmp ebx , eax jl hexvar mov byte ptr [ r14 - num ] , num mov rax , qword ptr [ rsp ] jmp hexvar xor eax , eax jmp hexvar lea rax , [ r13 - num ] mov rcx , qword ptr [ rsp ] cmp r13 , rcx cmove rax , r13 mov byte ptr [ rax ] , num mov rax , rcx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov r12d , edx xor eax , eax cmp edx , num jl hexvar mov r15 , qword ptr [ rcx + hexvar ] test r15 , r15 je hexvar mov rbx , rsi mov rdi , r15 call hexvar test eax , eax je hexvar mov rdi , r15 call hexvar mov qword ptr [ rsp ] , rbx mov r14 , rbx test eax , eax jle hexvar xor ebx , ebx mov r13 , qword ptr [ rsp ] nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebx call hexvar mov r14 , qword ptr [ rax + num ] mov rdi , r14 call hexvar mov rbp , rax cmp r12d , ebp jle hexvar mov rdi , r13 mov rsi , r14 call hexvar movsxd rax , ebp lea r14 , [ rax + r13 ] add r14 , num mov byte ptr [ r13 + rax ] , hexvar not ebp add r12d , ebp add ebx , num mov rdi , r15 call hexvar mov r13 , r14 cmp ebx , eax jl hexvar mov byte ptr [ r14 - num ] , num mov rax , qword ptr [ rsp ] jmp hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov r12d , edx xor eax , eax cmp edx , num jl hexvar mov r15 , qword ptr [ rcx + hexvar ] test r15 , r15 je hexvar mov r13 , rsi mov rdi , r15 call hexvar test eax , eax je hexvar mov rdi , r15 call hexvar mov qword ptr [ rsp ] , r13 test eax , eax jle hexvar xor ebp , ebp mov r13 , qword ptr [ rsp ] nop mov rdi , r15 mov esi , ebp call hexvar mov r14 , qword ptr [ rax + num ] mov rdi , r14 call hexvar mov rbx , rax cmp r12d , ebx jle hexvar mov rdi , r13 mov rsi , r14 call hexvar movsxd rax , ebx mov byte ptr [ r13 + rax ] , hexvar not ebx add r12d , ebx add r13 , rax add r13 , num add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar mov byte ptr [ r13 - num ] , num mov rax , qword ptr [ rsp ] jmp hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov r12d , edx xor eax , eax cmp edx , num jl hexvar mov r15 , qword ptr [ rcx + hexvar ] test r15 , r15 je hexvar mov r13 , rsi mov rdi , r15 call hexvar mov qword ptr [ rsp ] , r13 test eax , eax jle hexvar xor ebp , ebp mov r13 , qword ptr [ rsp ] nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , r15 mov esi , ebp call hexvar mov r14 , qword ptr [ rax + num ] mov rdi , r14 call hexvar mov rbx , rax cmp r12d , ebx jle hexvar mov rdi , r13 mov rsi , r14 call hexvar movsxd rax , ebx mov byte ptr [ r13 + rax ] , hexvar not ebx add r12d , ebx add r13 , rax add r13 , num add ebp , num mov rdi , r15 call hexvar cmp ebp , eax jl hexvar mov byte ptr [ r13 - num ] , num mov rax , qword ptr [ rsp ] jmp hexvar xor eax , eax jmp hexvar lea rax , [ r13 - num ] mov rcx , qword ptr [ rsp ] cmp r13 , rcx cmove rax , r13 mov byte ptr [ rax ] , num mov rax , rcx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov r12d , edx xor eax , eax cmp edx , num jl hexvar mov r15 , qword ptr [ rcx + hexvar ] test r15 , r15 je hexvar mov rbx , rsi mov rdi , r15 call hexvar mov qword ptr [ rsp ] , rbx mov r14 , rbx test eax , eax jle hexvar xor ebx , ebx mov r13 , qword ptr [ rsp ] nop word ptr cs : [ rax + rax ] nop mov rdi , r15 mov esi , ebx call hexvar mov r14 , qword ptr [ rax + num ] mov rdi , r14 call hexvar mov rbp , rax cmp r12d , ebp jle hexvar mov rdi , r13 mov rsi , r14 call hexvar movsxd rax , ebp lea r14 , [ rax + r13 ] add r14 , num mov byte ptr [ r13 + rax ] , hexvar not ebp add r12d , ebp add ebx , num mov rdi , r15 call hexvar mov r13 , r14 cmp ebx , eax jl hexvar mov byte ptr [ r14 - num ] , num mov rax , qword ptr [ rsp ] jmp hexvar xor eax , eax jmp hexvar lea rax , [ r13 - num ] mov rcx , qword ptr [ rsp ] cmp r13 , rcx cmove rax , r13 mov byte ptr [ rax ] , num mov rax , rcx add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jae hexvar mov eax , dword ptr [ ebp + hexvar ] shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jae hexvar mov eax , dword ptr [ ebp + hexvar ] shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jae hexvar mov eax , dword ptr [ ebp + hexvar ] shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] cmp dword ptr [ ebp + hexvar ] , edx jbe hexvar mov edx , dword ptr [ ebp + hexvar ] lea ecx , [ edx + edx ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + hexvar ] , ecx mov edx , dword ptr [ ebp + num ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push num push ecx push edx mov ebx , eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx nop mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + rax ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov edx , num mov rsi , rcx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jae hexvar mov eax , dword ptr [ ebp + hexvar ] shl eax , num mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop ebp ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a3 , a1 lui a1 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) move a2 , a0 sw zero , hexvar ( sp ) addiu a1 , a1 , hexvar sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) bal hexvar sw zero , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push num push num push num push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) sw zero , hexvar ( sp ) move a3 , a1 move a2 , a0 lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
sub rsp , hexvar mov rcx , rsi mov rdx , rdi xorps xmm0 , xmm0 movups xmmword ptr [ rsp + num ] , xmm0 mov dword ptr [ rsp ] , num mov edi , hexvar mov esi , hexvar xor r8d , r8d xor r9d , r9d call hexvar add rsp , hexvar ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r4 , [ r0 , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar mov r4 , num mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar ldr r4 , [ r0 , hexvar ] ldr r3 , [ r4 , num ] ldr r3 , [ r3 , num ] cmp r3 , num movne r4 , num beq hexvar mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 ) lw v0 , num ( s0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r4 , [ r0 , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar mov r4 , num mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r4 , [ r0 , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar mov r4 , num mov r0 , r4 add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rax + num ] , num je hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 ) lw v0 , num ( s0 )
addiu sp , sp , - hexvar lui gp , hexvar addiu v1 , zero , num sw s0 , hexvar ( sp ) addiu gp , gp , - hexvar lw s0 , hexvar ( a0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbx + num ] mov r12d , num cmp dword ptr [ rax + num ] , num je hexvar mov eax , r12d add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push edi push esi push ebx sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push dword ptr [ esp + hexvar ] lea ebx , [ esp + hexvar ] push ebx call hexvar add esp , hexvar push edi push esi push ebx mov eax , dword ptr [ esp + hexvar ] call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax mov eax , num cmovne eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov rbx , rdi lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx mov eax , hexvar mov ebp , hexvar jmp hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov eax , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , ebp jmp hexvar lea r12 , [ rsp + hexvar ] mov rdi , r12 call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , rbx mov ecx , hexvar jmp hexvar mov ecx , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov rdi , r12 mov rsi , r15 mov rdx , r14 call qword ptr [ rax + hexvar ] mov ecx , hexvar jmp hexvar mov dword ptr [ rsp + num ] , eax mov esi , hexvar mov rcx , qword ptr [ rsp + hexvar ] mov edx , hexvar jmp hexvar mov esi , hexvar xor eax , eax nop dword ptr [ rax ] cmp esi , hexvar jg hexvar cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar cmp dword ptr [ rsp + num ] , num mov esi , hexvar cmove esi , edx jmp hexvar mov esi , hexvar mov rax , rcx jmp hexvar mov rcx , qword ptr [ rsp + num ] add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a1 move s2 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) move a1 , a0 addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s2 move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move v0 , zero lw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rsp mov rdi , rbx call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , r12 mov rax , qword ptr [ rsp ] mov rdi , rbx mov rsi , r15 mov rdx , r14 call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rsp + hexvar ] jmp hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rsp mov rdi , rbx call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , r12 mov rax , qword ptr [ rsp ] mov rdi , rbx mov rsi , r15 mov rdx , r14 call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rsp + hexvar ] jmp hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx sub rsp , hexvar mov r14 , rdx mov r15 , rsi mov r12 , rdi mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx jne hexvar call hexvar mov rcx , rax mov qword ptr [ rip + hexvar ] , rax mov rbx , rsp mov rdi , rbx call qword ptr [ rcx + hexvar ] mov qword ptr [ rsp + hexvar ] , r12 mov rax , qword ptr [ rsp ] mov rdi , rbx mov rsi , r15 mov rdx , r14 call qword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rsp + hexvar ] jmp hexvar xor eax , eax add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu s0 , sp , hexvar lw s1 , - hexvar ( gp ) sw s2 , hexvar ( sp ) move s2 , a1 move a1 , a0 sw gp , hexvar ( sp ) move a0 , s0 sw ra , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) jal hexvar nop move a1 , s2 lw v0 , hexvar ( sp ) move a0 , s0 lw t9 , hexvar ( v0 ) jalr t9 lw a2 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
push edi push esi push ebx sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push dword ptr [ esp + hexvar ] lea ebx , [ esp + hexvar ] push ebx call hexvar add esp , hexvar push edi push esi push ebx call hexvar add esp , hexvar test eax , eax mov eax , num cmovne eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] add r3 , sp , hexvar ldr r1 , [ sp , hexvar ] mov r0 , r3 bl hexvar add r3 , sp , hexvar ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar lw a1 , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) addiu v0 , sp , hexvar lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) b hexvar nop move v0 , zero lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar cmp eax , esi jne hexvar add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar cmp eax , esi jne hexvar add esp , num pop ebx pop esi ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar cmp eax , esi jne hexvar add esp , num pop ebx pop esi ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar cmp eax , esi jne hexvar add esp , num pop ebx pop esi ret
push rbx mov rbx , rdi mov rsi , rdi mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar cmp rax , rbx jne hexvar pop rbx ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ ebp + num ] mov eax , dword ptr [ ebx + hexvar ] sub esp , num push edx push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ ebp + num ] , eax je hexvar lea eax , [ ebx - hexvar ] push eax push hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax call hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar cmp eax , esi jne hexvar add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rip + hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar call hexvar mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar nop leave ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar cmp eax , esi jne hexvar add esp , num pop ebx pop esi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar call hexvar mov esi , eax test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov esi , num mov eax , esi add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num call hexvar test eax , eax mov esi , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push esi xor esi , esi call hexvar add esp , hexvar add esp , num mov eax , esi pop ebx pop esi ret
push r15 push r14 push rbx mov r15 , rsi mov r14 , rdi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , qword ptr [ r14 + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ r14 + hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ r14 + hexvar ] add rax , num mov rdi , qword ptr [ rax ] mov rsi , rbx call hexvar test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a1 , s1 move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a1 , s0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , zero move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a0 , s0 b hexvar move v0 , s0
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r1 , [ sp ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push r15 push r14 push rbx mov r15 , rsi mov r14 , rdi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , qword ptr [ r14 + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ r14 + hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ r14 + hexvar ] add rax , num mov rdi , qword ptr [ rax ] mov rsi , rbx call hexvar test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar call hexvar mov esi , eax test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov esi , num mov eax , esi add esp , num pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r1 , [ sp ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar nop jmp hexvar nop jmp hexvar nop cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx ret
push r15 push r14 push rbx mov r15 , rsi mov r14 , rdi call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , qword ptr [ r14 + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ r14 + hexvar ] add rax , hexvar jmp hexvar mov rax , qword ptr [ r14 + hexvar ] add rax , num mov rdi , qword ptr [ rax ] mov rsi , rbx call hexvar test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx pop rbx pop r14 pop r15 ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov qword ptr [ rsp + hexvar ] , r8 mov rbp , rcx mov rbx , rdx mov r12 , rsi mov r14 , qword ptr [ rsp + hexvar ] mov r13 , qword ptr [ rsp + hexvar ] lea r15 , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , r15 mov rax , qword ptr [ rsp + num ] mov rdi , r15 call hexvar mov rdi , r12 mov rsi , rbx mov rdx , rbp mov rbp , r14 mov rcx , r13 mov r8 , rbp call hexvar mov dword ptr [ rsp + num ] , eax mov eax , hexvar mov ebx , hexvar jmp hexvar cmove eax , ebx xor r14d , r14d nop cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , r15 mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov rcx , r13 mov r8 , rbp call hexvar test eax , eax mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , r12 mov rsi , r12 mov rdx , r15 mov rcx , r13 mov r8 , rbp call hexvar test eax , eax mov eax , hexvar jmp hexvar mov eax , hexvar mov r14d , num jmp hexvar cmp dword ptr [ rsp + num ] , num mov eax , hexvar jmp hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rax , qword ptr [ rsp + num ] mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r9 mov r13 , r8 mov rbp , rcx mov r14 , rdx mov rbx , rsi mov r15 , qword ptr [ rsp + hexvar ] mov rdi , rsp call hexvar mov rdi , rbx mov rsi , r14 mov r14 , qword ptr [ rsp + hexvar ] mov rdx , rbp mov rcx , r15 mov r8 , r14 call hexvar xor ebp , ebp test eax , eax je hexvar mov rdi , rsp mov rsi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 call hexvar test eax , eax je hexvar mov rdx , rsp mov rdi , rbx mov rsi , rbx mov rcx , r15 mov r8 , r14 call hexvar xor ebp , ebp test eax , eax setne bpl mov rdi , rsp call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov qword ptr [ rsp + hexvar ] , r8 mov rbp , rcx mov rbx , rdx mov r12 , rsi mov r14 , qword ptr [ rsp + hexvar ] mov r13 , qword ptr [ rsp + hexvar ] lea r15 , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , r15 mov rax , qword ptr [ rsp + num ] mov rdi , r15 call hexvar mov rdi , r12 mov rsi , rbx mov rdx , rbp mov rbp , r14 mov rcx , r13 mov r8 , rbp call hexvar mov dword ptr [ rsp + num ] , eax mov eax , hexvar mov ebx , hexvar jmp hexvar cmove eax , ebx xor r14d , r14d nop cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ rsp + num ] , num mov eax , hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov r14d , num jmp hexvar mov rdi , r12 mov rsi , r12 mov rdx , r15 mov rcx , r13 mov r8 , rbp call hexvar test eax , eax mov eax , hexvar jmp hexvar mov rdi , r15 mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov rcx , r13 mov r8 , rbp call hexvar test eax , eax mov eax , hexvar jmp hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rax , qword ptr [ rsp + num ] mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edi mov edx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edx xor edx , edx mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] push esi call hexvar pop eax pop edx push edi push ebp mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar xor edi , edi sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r9 mov r13 , r8 mov rbp , rcx mov r14 , rdx mov rbx , rsi mov r15 , qword ptr [ rsp + hexvar ] mov rdi , rsp call hexvar mov rdi , rbx mov rsi , r14 mov r14 , qword ptr [ rsp + hexvar ] mov rdx , rbp mov rcx , r15 mov r8 , r14 call hexvar xor ebp , ebp test eax , eax je hexvar mov rdi , rsp mov rsi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 call hexvar test eax , eax je hexvar mov rdx , rsp mov rdi , rbx mov rsi , rbx mov rcx , r15 mov r8 , r14 call hexvar xor ebp , ebp test eax , eax setne bpl mov rdi , rsp call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov qword ptr [ rsp + hexvar ] , r8 mov rbp , rcx mov rbx , rdx mov r12 , rsi mov r14 , qword ptr [ rsp + hexvar ] mov r13 , qword ptr [ rsp + hexvar ] lea r15 , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , r15 mov rax , qword ptr [ rsp + num ] mov rdi , r15 call hexvar mov rdi , r12 mov rsi , rbx mov rdx , rbp mov rbp , r14 mov rcx , r13 mov r8 , rbp call hexvar mov dword ptr [ rsp + num ] , eax mov eax , hexvar mov ebx , hexvar jmp hexvar cmove eax , ebx xor r14d , r14d nop cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , r15 mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov rcx , r13 mov r8 , rbp call hexvar test eax , eax mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , r12 mov rsi , r12 mov rdx , r15 mov rcx , r13 mov r8 , rbp call hexvar test eax , eax mov eax , hexvar jmp hexvar mov eax , hexvar mov r14d , num jmp hexvar cmp dword ptr [ rsp + num ] , num mov eax , hexvar jmp hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rax , qword ptr [ rsp + num ] mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r9 mov r13 , r8 mov rbp , rcx mov r14 , rdx mov rbx , rsi mov r15 , qword ptr [ rsp + hexvar ] mov rdi , rsp call hexvar mov rdi , rbx mov rsi , r14 mov r14 , qword ptr [ rsp + hexvar ] mov rdx , rbp mov rcx , r15 mov r8 , r14 call hexvar xor ebp , ebp test eax , eax je hexvar mov rdi , rsp mov rsi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 call hexvar test eax , eax je hexvar mov rdx , rsp mov rdi , rbx mov rsi , rbx mov rcx , r15 mov r8 , r14 call hexvar xor ebp , ebp test eax , eax setne bpl mov rdi , rsp call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] add r3 , sp , hexvar mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar add r0 , sp , hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar add r2 , sp , hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 b hexvar mov r0 , r0 add r3 , sp , hexvar mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov qword ptr [ rsp + hexvar ] , r8 mov rbp , rcx mov rbx , rdx mov r12 , rsi mov r14 , qword ptr [ rsp + hexvar ] mov r13 , qword ptr [ rsp + hexvar ] lea r15 , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , r15 mov rax , qword ptr [ rsp + num ] mov rdi , r15 call hexvar mov rdi , r12 mov rsi , rbx mov rdx , rbp mov rbp , r14 mov rcx , r13 mov r8 , rbp call hexvar mov dword ptr [ rsp + num ] , eax mov eax , hexvar mov ebx , hexvar jmp hexvar cmove eax , ebx xor r14d , r14d nop cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , r15 mov rsi , qword ptr [ rsp + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] mov rcx , r13 mov r8 , rbp call hexvar test eax , eax mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , r12 mov rsi , r12 mov rdx , r15 mov rcx , r13 mov r8 , rbp call hexvar test eax , eax mov eax , hexvar jmp hexvar mov eax , hexvar mov r14d , num jmp hexvar cmp dword ptr [ rsp + num ] , num mov eax , hexvar jmp hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rax , qword ptr [ rsp + num ] mov eax , r14d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r9 mov r13 , r8 mov rbp , rcx mov r14 , rdx mov rbx , rsi mov r15 , qword ptr [ rsp + hexvar ] mov rdi , rsp call hexvar mov rdi , rbx mov rsi , r14 mov r14 , qword ptr [ rsp + hexvar ] mov rdx , rbp mov rcx , r15 mov r8 , r14 call hexvar xor ebp , ebp test eax , eax je hexvar mov rdi , rsp mov rsi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 call hexvar test eax , eax je hexvar mov rdx , rsp mov rdi , rbx mov rsi , rbx mov rcx , r15 mov r8 , r14 call hexvar xor ebp , ebp test eax , eax setne bpl mov rdi , rsp call hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov ebx , dword ptr [ esi + num ] test ebx , ebx je hexvar sub esp , num push num push num push ebp push edi push num push esi call ebx add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num mov eax , dword ptr [ esi ] push ebp push edi push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jle hexvar add dword ptr [ esi + hexvar ] , eax test ebx , ebx je hexvar sub esp , num push eax push num push ebp push edi push hexvar push esi call ebx add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov rbp , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov r14d , edx mov rbx , rsi mov r15 , qword ptr [ rbp + num ] test r15 , r15 je hexvar mov r9d , num mov rdi , rbp mov esi , num mov rdx , rbx mov ecx , r14d xor r8d , r8d call r15
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov rbp , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov r14d , edx mov rbx , rsi mov r15 , qword ptr [ rbp + num ] test r15 , r15 je hexvar mov r9d , num mov rdi , rbp mov esi , num mov rdx , rbx mov ecx , r14d xor r8d , r8d call r15
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov ebx , dword ptr [ esi + num ] test ebx , ebx je hexvar sub esp , num push num push num push ebp push edi push num push esi call ebx add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num mov eax , dword ptr [ esi ] push ebp push edi push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jle hexvar add dword ptr [ esi + hexvar ] , eax test ebx , ebx je hexvar sub esp , num push eax push num push ebp push edi push hexvar push esi call ebx add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov ebx , dword ptr [ esi + num ] test ebx , ebx je hexvar sub esp , num push num push num push ebp push edi push num push esi call ebx add esp , hexvar test eax , eax jle hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , num mov eax , dword ptr [ esi ] push ebp push edi push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jle hexvar add dword ptr [ esi + hexvar ] , eax test ebx , ebx je hexvar sub esp , num push eax push num push ebp push edi push hexvar push esi call ebx add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + hexvar ] , eax mov ebx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test ebx , ebx je hexvar mov eax , dword ptr [ ebx ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov esi , dword ptr [ ebx + num ] test esi , esi je hexvar sub esp , num push num push num push ebp push edi push num push ebx call esi add esp , hexvar test eax , eax jle hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num mov eax , dword ptr [ ebx ] push ebp push edi push ebx call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jle hexvar add dword ptr [ ebx + hexvar ] , eax test esi , esi je hexvar sub esp , num push eax push num push ebp push edi push hexvar push ebx call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + hexvar ] , eax mov ebx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test ebx , ebx je hexvar mov eax , dword ptr [ ebx ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov esi , dword ptr [ ebx + num ] test esi , esi je hexvar sub esp , num push num push num push ebp push edi push num push ebx call esi add esp , hexvar test eax , eax jle hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num mov eax , dword ptr [ ebx ] push ebp push edi push ebx call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jle hexvar add dword ptr [ ebx + hexvar ] , eax test esi , esi je hexvar sub esp , num push eax push num push ebp push edi push hexvar push ebx call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov rbp , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov r14d , edx mov rbx , rsi mov r15 , qword ptr [ rbp + num ] test r15 , r15 je hexvar mov r9d , num mov rdi , rbp mov esi , num mov rdx , rbx mov ecx , r14d xor r8d , r8d call r15
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + hexvar ] , eax mov ebx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test ebx , ebx je hexvar mov eax , dword ptr [ ebx ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov esi , dword ptr [ ebx + num ] test esi , esi je hexvar sub esp , num push num push num push ebp push edi push num push ebx call esi add esp , hexvar test eax , eax jle hexvar cmp dword ptr [ ebx + hexvar ] , num je hexvar sub esp , num mov eax , dword ptr [ ebx ] push ebp push edi push ebx call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jle hexvar add dword ptr [ ebx + hexvar ] , eax test esi , esi je hexvar sub esp , num push eax push num push ebp push edi push hexvar push ebx call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , - hexvar lw a0 , ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw a0 , ( a0 ) beqz a0 , hexvar move s1 , a1 lw v0 , hexvar ( a1 ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu gp , gp , - hexvar lw a0 , ( a0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ eax ] test ecx , ecx je hexvar mov esi , dword ptr [ edx + hexvar ] cmp ecx , dword ptr [ esi + hexvar ] je hexvar mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , eax sub esp , hexvar push ecx call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] cmp eax , dword ptr [ edx + hexvar ] je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , eax mov edi , edx mov eax , dword ptr [ eax ] test eax , eax je hexvar mov edx , dword ptr [ edx + hexvar ] cmp eax , dword ptr [ edx + hexvar ] je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov edx , dword ptr [ edi + hexvar ] mov eax , esi call hexvar pop ebx pop esi pop edi ret
push rbx mov rbx , rdi sub rsp , hexvar mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rax , qword ptr [ rsi + hexvar ] cmp rdi , qword ptr [ rax + hexvar ] je hexvar mov qword ptr [ rsp + num ] , rsi call hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rdi , qword ptr [ rax + hexvar ] je hexvar add rsp , hexvar pop rbx jmp hexvar nop dword ptr [ rax ] add rsp , hexvar pop rbx ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar mov rax , qword ptr [ rsi + hexvar ] cmp rdi , qword ptr [ rax + hexvar ] je hexvar call hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdi , rbx call hexvar add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar nop leave ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ eax ] test ecx , ecx je hexvar mov esi , dword ptr [ edx + hexvar ] cmp ecx , dword ptr [ esi + hexvar ] je hexvar mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + num ] , eax sub esp , hexvar push ecx call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] cmp eax , dword ptr [ edx + hexvar ] je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lw a0 , ( a0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui a3 , hexvar sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
call hexvar add eax , hexvar sub esp , hexvar lea eax , [ eax - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) lui a3 , hexvar sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r15 push r14 mov r14 , rdi push r13 push r12 lea r12d , [ r8 + num ] push rbp push rbx mov rdi , rsi and r12d , hexvar mov r15 , rdx mov ebx , r8d sub rsp , hexvar movsxd rsi , dword ptr [ rdx ] movsxd r12 , r12d add r12 , hexvar mov qword ptr [ rsp + num ] , rcx add rsi , r12 call hexvar test rax , rax mov r13 , rax je hexvar movsxd rbp , dword ptr [ r15 ] mov edi , num mov rax , rbp add rbp , r13 add r12d , eax mov rax , qword ptr [ r14 + num ] mov rsi , rbp mov dword ptr [ r15 ] , r12d call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] mov r12 , rdi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] lea rsi , [ rbp + num ] mov edi , hexvar call qword ptr [ rax + hexvar ] lea rcx , [ rbp + hexvar ] mov rsi , qword ptr [ rsp + num ] xor edx , edx mov eax , hexvar mov word ptr [ rbp + hexvar ] , dx mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rcx mov word ptr [ rbp + hexvar ] , ax mov rdx , r12 call hexvar test bl , num lea rdi , [ rax + r12 ] je hexvar add ebx , num add rdi , num mov byte ptr [ rdi - num ] , num test bl , num jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rbx , qword ptr [ rax + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip + hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
push r12 push rbp mov rbp , rdi push rbx mov rax , qword ptr [ rsi + num ] mov r12 , rsi mov rdi , rsi call qword ptr [ rax + hexvar ] mov rbx , rax mov rax , qword ptr [ rbp + num ] mov rsi , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] test rsi , rsi mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rbp + hexvar ] mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , r12 call hexvar test rax , rax je hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ ebp + hexvar ] call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , num push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cdq mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push eax push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov esi , dword ptr [ eax + hexvar ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ ebx + hexvar ] lea edx , [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push r12 push rbp mov rbp , rdi push rbx mov rax , qword ptr [ rsi + num ] mov r12 , rsi mov rdi , rsi call qword ptr [ rax + hexvar ] mov rbx , rax mov rax , qword ptr [ rbp + num ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov rsi , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rbp + hexvar ] test rsi , rsi mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , r12 call hexvar test rax , rax je hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx pop rbp pop r12 ret
push r12 push rbp mov rbp , rdi push rbx mov rax , qword ptr [ rsi + num ] mov r12 , rsi mov rdi , rsi call qword ptr [ rax + hexvar ] mov rbx , rax mov rax , qword ptr [ rbp + num ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov rsi , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rbp + hexvar ] test rsi , rsi mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , r12 call hexvar test rax , rax je hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ ebp + hexvar ] call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , num push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cdq mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push eax push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov esi , dword ptr [ eax + hexvar ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax call hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ ebx + hexvar ] lea edx , [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rsi mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + num ] call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , ecx mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar movabs rdi , hexvar call hexvar mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rdi + hexvar ] mov rdi , rax mov al , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax jmp hexvar movabs rax , hexvar add rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push r12 push rbp mov rbp , rdi push rbx mov rax , qword ptr [ rsi + num ] mov r12 , rsi mov rdi , rsi call qword ptr [ rax + hexvar ] mov rbx , rax mov rax , qword ptr [ rbp + num ] mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rbp + hexvar ] mov rsi , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov eax , dword ptr [ rbp + hexvar ] test rsi , rsi mov dword ptr [ rbx + hexvar ] , eax je hexvar mov rdi , r12 call hexvar test rax , rax je hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , rbx pop rbx pop rbp pop r12 ret
ldrsb r3 , [ r0 , hexvar ] cmp r3 , num bge hexvar cmn r1 , num moveq r1 , num ldr r3 , [ r0 , hexvar ] addne r1 , r1 , num ldr r0 , [ r3 , hexvar ] cmp r0 , r1 mvnls r1 , num ldrhi r3 , [ r3 , hexvar ] mov r0 , r1 addhi r3 , r3 , r1 , lsl num strhi r3 , [ r2 ] bx lr push { r4 , lr } mov r0 , num bl hexvar mvn r1 , num mov r0 , r1 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
ldrsb r3 , [ r0 , hexvar ] cmp r3 , num bge hexvar cmn r1 , num addne r1 , r1 , num moveq r1 , num ldr r3 , [ r0 , hexvar ] ldr r0 , [ r3 , hexvar ] cmp r0 , r1 ldrhi r3 , [ r3 , hexvar ] addhi r3 , r3 , r1 , lsl num strhi r3 , [ r2 ] mvnls r1 , num mov r0 , r1 bx lr push { r4 , lr } mov r0 , num bl hexvar mvn r1 , num mov r0 , r1 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] movzx edx , byte ptr [ edx + hexvar ] and edx , hexvar test dl , dl jne hexvar sub esp , hexvar push num mov ebx , eax call hexvar add esp , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , - num jne hexvar mov dword ptr [ ebp + hexvar ] , num jmp hexvar add dword ptr [ ebp + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp + hexvar ] , eax jb hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov eax , edx add eax , eax add eax , edx shl eax , num lea edx , [ ecx + eax ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
ldrsb r3 , [ r0 , hexvar ] cmp r3 , num bge hexvar cmn r1 , num moveq r1 , num ldr r3 , [ r0 , hexvar ] addne r1 , r1 , num ldr r0 , [ r3 , hexvar ] cmp r0 , r1 mvnls r1 , num ldrhi r3 , [ r3 , hexvar ] mov r0 , r1 addhi r3 , r3 , r1 , lsl num strhi r3 , [ r2 ] bx lr push { r4 , lr } mov r0 , num bl hexvar mvn r1 , num mov r0 , r1 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov edi , num call hexvar mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] sub rax , - num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] sub rax , rcx setae dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] shl rcx , num add rax , rcx mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , num bnez v0 , hexvar nop addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) addiu v0 , zero , - num b hexvar nop lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) lw v1 , hexvar ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v1 , v1 , v0 lw v0 , hexvar ( fp ) sw v1 , ( v0 )
ldrsb r3 , [ r0 , hexvar ] cmp r3 , num bge hexvar cmn r1 , num moveq r1 , num ldr r3 , [ r0 , hexvar ] addne r1 , r1 , num ldr r0 , [ r3 , hexvar ] cmp r0 , r1 mvnls r1 , num ldrhi r3 , [ r3 , hexvar ] mov r0 , r1 addhi r3 , r3 , r1 , lsl num strhi r3 , [ r2 ] bx lr push { r4 , lr } mov r0 , num bl hexvar mvn r1 , num mov r0 , r1 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
ldrsb r3 , [ r0 , hexvar ] cmp r3 , num bge hexvar cmn r1 , num addne r1 , r1 , num moveq r1 , num ldr r3 , [ r0 , hexvar ] ldr r0 , [ r3 , hexvar ] cmp r0 , r1 ldrhi r3 , [ r3 , hexvar ] addhi r3 , r3 , r1 , lsl num strhi r3 , [ r2 ] mvnls r1 , num mov r0 , r1 bx lr push { r4 , lr } mov r0 , num bl hexvar mvn r1 , num mov r0 , r1 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] movzx edx , byte ptr [ edx + hexvar ] and edx , hexvar test dl , dl jne hexvar sub esp , hexvar push num mov ebx , eax call hexvar add esp , hexvar mov eax , hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , - num jne hexvar mov dword ptr [ ebp + hexvar ] , num jmp hexvar add dword ptr [ ebp + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp + hexvar ] , eax jb hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov eax , edx add eax , eax add eax , edx shl eax , num lea edx , [ ecx + eax ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov edi , num call hexvar mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] sub rax , - num sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rsi mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] sub rax , rcx setae dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] shl rcx , num add rax , rcx mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 addiu a0 , a0 , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , hexvar ( s0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbx mov rbx , rdi lea rdi , [ rdi + num ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num pop rbx ret
push rbx mov rbx , rdi lea rdi , [ rdi + num ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num pop rbx ret
push rbx mov rbx , rdi lea rdi , [ rdi + num ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num pop rbx ret
push rbx mov rbx , rdi lea rdi , [ rdi + num ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 addiu a0 , a0 , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sw zero , hexvar ( s0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbx mov rbx , rdi lea rdi , [ rdi + num ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , num move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , a0 , num lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , s0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , s0 , hexvar lw ra , hexvar ( sp ) sw zero , hexvar ( s0 )
push rbx mov rbx , rdi lea rdi , [ rdi + num ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar lea rdi , [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , num pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 move a1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar addiu v1 , sp , hexvar addiu a0 , v0 , hexvar lw t1 , ( v0 ) lw t0 , num ( v0 ) lw a3 , num ( v0 ) lw a2 , hexvar ( v0 ) sw t1 , ( v1 ) sw t0 , num ( v1 ) sw a3 , num ( v1 ) sw a2 , hexvar ( v1 ) addiu v0 , v0 , hexvar bne v0 , a0 , hexvar addiu v1 , v1 , hexvar addiu a2 , zero , num addiu s2 , sp , hexvar move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) move a3 , s2 move a2 , s1 move a1 , s0 move a0 , zero jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
sub rsp , hexvar mov ecx , edx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov r8 , rsp and ecx , hexvar movdqa xmm0 , xmmword ptr [ rip + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov eax , edx movaps xmmword ptr [ rsp ] , xmm0 shr al , num movzx eax , al lea r9 , [ r8 + rax * num + num ] movdqa xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movdqa xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 mov edx , dword ptr [ r9 ] mov eax , edx shr eax , cl not eax and eax , num shl eax , cl mov rcx , r8 xor eax , edx mov rdx , rsi mov rsi , rdi mov dword ptr [ r9 ] , eax xor edi , edi call hexvar mov rsi , qword ptr [ rsp + hexvar ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] mov r3 , r2 strb r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ pc , hexvar ] sub ip , fp , hexvar mov lr , r3 ldm lr ! , { r0 , r1 , r2 , r3 } stm ip ! , { r0 , r1 , r2 , r3 } ldm lr ! , { r0 , r1 , r2 , r3 } stm ip ! , { r0 , r1 , r2 , r3 } ldm lr , { r0 , r1 , r2 , r3 } stm ip , { r0 , r1 , r2 , r3 } ldrb r1 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r2 , num mov r0 , r3 bl hexvar sub r3 , fp , hexvar ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ hexvar ] lea edi , [ ebp - hexvar ] mov ebx , edi mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , hexvar mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx movsx edx , byte ptr [ ebp + hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] lea esi , [ ebp - hexvar ] mov edi , esi lea ebx , [ hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , hexvar mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx movsx edx , byte ptr [ ebp + hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax movsx ecx , byte ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov edx , num mov esi , ecx mov rdi , rax call hexvar lea rcx , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar mov rsi , qword ptr [ rbp - num ] xor rsi , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 move a1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar addiu v1 , sp , hexvar addiu a0 , v0 , hexvar lw t1 , ( v0 ) lw t0 , num ( v0 ) lw a3 , num ( v0 ) lw a2 , hexvar ( v0 ) sw t1 , ( v1 ) sw t0 , num ( v1 ) sw a3 , num ( v1 ) sw a2 , hexvar ( v1 ) addiu v0 , v0 , hexvar bne v0 , a0 , hexvar addiu v1 , v1 , hexvar addiu a2 , zero , num addiu s2 , sp , hexvar move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) move a3 , s2 move a2 , s1 move a1 , s0 move a0 , zero jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) move v0 , a2 sb v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lui v0 , hexvar addiu v1 , fp , hexvar addiu v0 , v0 , - hexvar addiu a0 , zero , hexvar move a2 , a0 move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lb v1 , hexvar ( fp ) addiu v0 , fp , hexvar addiu a2 , zero , num move a1 , v1 move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) addiu v0 , fp , hexvar move a3 , v0 lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , zero jal hexvar nop lw gp , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax push num movsx eax , byte ptr [ esp + hexvar ] push eax lea ebx , [ esp + hexvar ] push ebx call hexvar push ebx mov ecx , dword ptr [ esp + hexvar ] mov edx , esi mov eax , num call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] mov r3 , r2 strb r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ pc , hexvar ] sub ip , fp , hexvar mov lr , r3 ldm lr ! , { r0 , r1 , r2 , r3 } stm ip ! , { r0 , r1 , r2 , r3 } ldm lr ! , { r0 , r1 , r2 , r3 } stm ip ! , { r0 , r1 , r2 , r3 } ldm lr , { r0 , r1 , r2 , r3 } stm ip , { r0 , r1 , r2 , r3 } ldrb r1 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r2 , num mov r0 , r3 bl hexvar sub r3 , fp , hexvar ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14d , esi mov r15 , rdi add r15 , num test esi , esi mov eax , hexvar mov ebx , hexvar cmovs ebx , eax mov eax , hexvar mov r13d , hexvar mov r12d , hexvar jmp hexvar call hexvar mov eax , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov qword ptr [ rsp ] , r15 mov rax , qword ptr [ rsp ] mov rdi , qword ptr [ rax ] call hexvar cmp eax , r14d mov eax , hexvar cmovg eax , r12d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov eax , ebx jmp hexvar mov rax , qword ptr [ rsp ] mov rdi , qword ptr [ rax ] mov esi , r14d call hexvar test rax , rax mov ecx , hexvar mov edx , hexvar cmove ecx , edx mov edx , hexvar jmp hexvar mov edx , hexvar xor ebp , ebp nop word ptr [ rax + rax ] cmp edx , hexvar jg hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov edx , dword ptr [ rax ] add edx , - num cmp edx , num mov edx , hexvar cmovb edx , r13d jmp hexvar mov edx , ecx jmp hexvar mov rbp , qword ptr [ rax + hexvar ] mov edx , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov rax , rbp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar bltz a1 , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 lw a0 , num ( a0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) slt v0 , s0 , v0 beqz v0 , hexvar move a1 , s0 lw a0 , num ( s1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , zero addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar bltz a1 , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 lw a0 , num ( a0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) slt v0 , s0 , v0 beqz v0 , hexvar move a1 , s0 lw a0 , num ( s1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , zero addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp )
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num jns hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar cmp dword ptr [ esp + hexvar ] , eax jl hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bge hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ sp , num ] cmp r3 , r2 blt hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push r14 push rbx push rax test esi , esi js hexvar mov ebx , esi mov r14 , rdi mov rdi , qword ptr [ rdi + num ] call hexvar cmp eax , ebx jle hexvar mov rdi , qword ptr [ r14 + num ] mov esi , ebx call hexvar test rax , rax je hexvar mov ecx , dword ptr [ rax ] add ecx , - num cmp ecx , num ja hexvar mov rax , qword ptr [ rax + hexvar ] add rsp , num pop rbx pop r14 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] test ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov byte ptr [ ebp - num ] , num jmp hexvar call hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ eax ] test edx , edx je hexvar mov esi , eax cmp edx , num jne hexvar mov ebp , dword ptr [ eax + num ] mov eax , ebp call hexvar mov edi , eax test al , al je hexvar sub esp , hexvar push num lea eax , [ esi + num ] push eax push hexvar push num push ebp call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push ebp call hexvar mov dword ptr [ esi ] , num add esp , hexvar jmp hexvar push ebp lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar jmp hexvar call hexvar mov edi , num mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ eax ] test edx , edx je hexvar mov esi , eax cmp edx , num jne hexvar mov ebp , dword ptr [ eax + num ] mov eax , ebp call hexvar mov edi , eax test al , al je hexvar sub esp , hexvar push num lea eax , [ esi + num ] push eax push hexvar push num push ebp call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push ebp call hexvar mov dword ptr [ esi ] , num add esp , hexvar jmp hexvar push ebp lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar jmp hexvar call hexvar mov edi , num mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
ldr r3 , [ r0 ] cmp r3 , num beq hexvar push { r4 , r5 , r6 , lr } cmp r3 , num sub sp , sp , num mov r5 , r0 bne hexvar ldr r6 , [ r0 , num ] ldrb r3 , [ r6 ] sub r3 , r3 , hexvar clz r3 , r3 lsr r3 , r3 , num ldrb r4 , [ r6 , r3 ] add r3 , r6 , r3 b hexvar ldrb r4 , [ r3 , num ] ! cmp r4 , num beq hexvar sub r4 , r4 , hexvar cmp r4 , num bls hexvar mov r0 , num add sp , sp , num pop { r4 , r5 , r6 , pc } strheq r0 , [ r0 ] , -r6 andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] test ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov byte ptr [ ebp - num ] , num jmp hexvar call hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jl hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov byte ptr [ ebp - num ] , num jmp hexvar jmp hexvar call hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar cmp r3 , num beq hexvar b hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] str r3 , [ fp , - num ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 eor r3 , r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num mov r2 , hexvar ldr r1 , [ fp , - num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , num bl hexvar ldr r0 , [ fp , - num ] bl hexvar ldr r3 , [ fp , - hexvar ] mov r2 , num str r2 , [ r3 ] mov r3 , num b hexvar bl hexvar mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] test ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov byte ptr [ ebp - num ] , num jmp hexvar call hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] test ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num mov byte ptr [ ebp - num ] , num jmp hexvar call hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
lw v0 , ( a0 ) beqz v0 , hexvar nop lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v1 , zero , num sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) bne v0 , v1 , hexvar sw gp , hexvar ( sp ) lw s1 , num ( a0 ) lb v1 , ( s1 ) xori v1 , v1 , hexvar sltiu v1 , v1 , num addu v1 , s1 , v1 b hexvar lb v0 , ( v1 ) lb v0 , ( v1 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , v0 , - hexvar sltiu v0 , v0 , hexvar bnez v0 , hexvar addiu v1 , v1 , num addiu v1 , v1 , - num lw ra , hexvar ( sp ) move v0 , zero lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra addiu v0 , zero , num addiu a3 , s0 , num addiu a2 , zero , hexvar sw zero , hexvar ( sp ) move a1 , zero bal hexvar move a0 , s1 bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num ja hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] cmp al , num jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov rax , qword ptr [ rbp - num ] add rax , num movzx eax , byte ptr [ rax ] test al , al jne hexvar mov eax , num jmp hexvar mov eax , num pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jae hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + num ] cmp ecx , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r15 , rcx mov r12 , rdx mov r13 , rsi mov rbx , rdi mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp ] , rax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov rax , qword ptr [ rsp ] mov rdi , rbx mov rsi , r13 mov rdx , r12 mov rcx , r15 mov r8 , r14 call rax mov ecx , hexvar nop dword ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v0 , hexvar ( v0 )
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar add esp , num pop ebx jmp eax lea esi , [ esi ] lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar xor eax , eax pop ebx ret
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 ) lw t9 , hexvar ( v0 )
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v0 , hexvar ( v0 )
mov rax , qword ptr [ rdi ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar jmp rax push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
lea rax , [ rip + hexvar ] lea rdx , [ rip + hexvar ] test rsi , rsi je hexvar jmp hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp edi , dword ptr [ rax + hexvar ] jne hexvar cmp rsi , qword ptr [ rax + hexvar ] jne hexvar mov rax , qword ptr [ rax + hexvar ] ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop beqz v0 , hexvar nop lw v0 , hexvar ( v0 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar b hexvar addiu v0 , v0 , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop beqz v0 , hexvar nop lw v0 , hexvar ( v0 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v0 , hexvar b hexvar addiu v0 , v0 , - hexvar
push esi push ebx call hexvar add esi , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea eax , [ esi - hexvar ] lea ebx , [ esi - hexvar ] jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp edx , dword ptr [ eax + hexvar ] jne hexvar cmp ecx , dword ptr [ eax + hexvar ] je hexvar test ecx , ecx jne hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ eax + hexvar ] pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov edi , dword ptr [ rbp - num ] mov dword ptr [ rcx ] , edi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r8 mov edi , dword ptr [ rcx ] mov rcx , qword ptr [ rdx ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rcx mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax cmp qword ptr [ rcx ] , num setne r9b mov byte ptr [ rbp - hexvar ] , r9b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rcx , qword ptr [ rcx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop beqz v0 , hexvar nop lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rdx mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] jmp hexvar lea rax , [ rip + hexvar ] leave ret
push esi push ebx call hexvar add esi , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea eax , [ esi - hexvar ] lea ebx , [ esi - hexvar ] jmp hexvar nop lea esi , [ esi ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp edx , dword ptr [ eax + hexvar ] jne hexvar cmp ecx , dword ptr [ eax + hexvar ] je hexvar test ecx , ecx jne hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ eax + hexvar ] pop ebx pop esi ret
push ebx call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , num lea edx , [ ebx - hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] mov eax , edx pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov edi , dword ptr [ rbp - num ] mov dword ptr [ rcx ] , edi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r8 mov edi , dword ptr [ rcx ] mov rcx , qword ptr [ rdx ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rcx mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax cmp qword ptr [ rcx ] , num setne r9b mov byte ptr [ rbp - hexvar ] , r9b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov rcx , qword ptr [ rcx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rcx jmp hexvar movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) beqz a0 , hexvar move v0 , zero lw s1 , hexvar ( a0 )
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar mov eax , esi call hexvar mov esi , eax mov eax , num test esi , esi je hexvar cmp dword ptr [ esi + num ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push dword ptr [ esi + num ] call hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi je hexvar mov ebp , dword ptr [ esi + hexvar ] test ebp , ebp je hexvar mov eax , dword ptr [ ebp + num ] test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push eax call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov rbp , rdi test rsi , rsi je hexvar xor r14d , r14d test rbp , rbp je hexvar mov r15d , edx mov r12 , rsi mov rbx , qword ptr [ rbp + hexvar ] test rbx , rbx jne hexvar mov edi , hexvar call hexvar mov rbx , rax mov qword ptr [ rbp + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , r12 mov edx , r15d pop rbx pop r12 pop r14 pop r15 pop rbp jmp hexvar mov r14d , num test rbp , rbp je hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) beqz a0 , hexvar move v0 , zero lw s1 , hexvar ( a0 )
push rbp push r15 push r14 push r12 push rbx mov rbp , rdi test rsi , rsi je hexvar xor r14d , r14d test rbp , rbp je hexvar mov r15d , edx mov r12 , rsi mov rbx , qword ptr [ rbp + hexvar ] test rbx , rbx jne hexvar mov edi , hexvar call hexvar mov rbx , rax mov qword ptr [ rbp + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , r12 mov edx , r15d pop rbx pop r12 pop r14 pop r15 pop rbp jmp hexvar mov r14d , num test rbp , rbp je hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test esi , esi je hexvar mov ebp , dword ptr [ esi + hexvar ] test ebp , ebp je hexvar mov eax , dword ptr [ ebp + num ] test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push edi push eax call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov rbp , rdi test rsi , rsi je hexvar xor r14d , r14d test rbp , rbp je hexvar mov r15d , edx mov r12 , rsi mov rbx , qword ptr [ rbp + hexvar ] test rbx , rbx jne hexvar mov edi , hexvar call hexvar mov rbx , rax mov qword ptr [ rbp + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , r12 mov edx , r15d pop rbx pop r12 pop r14 pop r15 pop rbp jmp hexvar mov r14d , num test rbp , rbp je hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov rbp , rdi test rsi , rsi je hexvar xor r14d , r14d test rbp , rbp je hexvar mov r15d , edx mov r12 , rsi mov rbx , qword ptr [ rbp + hexvar ] test rbx , rbx jne hexvar mov edi , hexvar call hexvar mov rbx , rax mov qword ptr [ rbp + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , r12 mov edx , r15d pop rbx pop r12 pop r14 pop r15 pop rbp jmp hexvar mov r14d , num test rbp , rbp je hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov rbp , rdi test rsi , rsi je hexvar xor r14d , r14d test rbp , rbp je hexvar mov r15d , edx mov r12 , rsi mov rbx , qword ptr [ rbp + hexvar ] test rbx , rbx jne hexvar mov edi , hexvar call hexvar mov rbx , rax mov qword ptr [ rbp + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rsi , r12 mov edx , r15d pop rbx pop r12 pop r14 pop r15 pop rbp jmp hexvar mov r14d , num test rbp , rbp je hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax je hexvar mov rdi , qword ptr [ rax + hexvar ] test rdi , rdi je hexvar call hexvar mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , num mov eax , r14d pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , num lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp + num ] cmp dword ptr [ eax ] , num jge hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp eax , num mov eax , hexvar cmovne eax , ecx mov dword ptr [ ebp - num ] , eax jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a1 , zero sw s0 , hexvar ( sp ) move s0 , a0 lui a0 , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw zero , num ( s0 ) lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , a0 , - hexvar lw gp , hexvar ( sp ) bltz v0 , hexvar sw v0 , ( s0 ) lw ra , hexvar ( sp ) move v0 , zero lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw ra , hexvar ( sp ) sltiu v1 , v0 , num sw v0 , num ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a1 , num sw s0 , hexvar ( sp ) move s0 , a0 lui a0 , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw zero , num ( s0 )
push rbx mov rbx , rdi mov qword ptr [ rdi + num ] , num lea rdi , [ rip + hexvar ] xor eax , eax mov esi , hexvar call hexvar mov edx , eax mov dword ptr [ rbx ] , eax xor eax , eax test edx , edx js hexvar pop rbx ret
push rbx mov rbx , rdi mov qword ptr [ rdi + num ] , num lea rdi , [ rip + hexvar ] xor eax , eax mov esi , hexvar call hexvar mov edx , eax mov dword ptr [ rbx ] , eax xor eax , eax test edx , edx js hexvar pop rbx ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al lea eax , [ hexvar ] mov dword ptr [ hexvar ] , num mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , esi mov edi , dword ptr [ edx ] mov dword ptr [ edi + num ] , num sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ecx ] cmp dword ptr [ eax ] , num jge hexvar xor eax , eax sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ edx ] mov eax , dword ptr [ eax + num ] cmp eax , num mov eax , hexvar cmovne eax , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , num push hexvar lea eax , [ ebx - hexvar ] push eax call hexvar mov edx , eax mov dword ptr [ esi ] , eax add esp , hexvar mov eax , num test edx , edx js hexvar add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al xor eax , eax lea ecx , [ hexvar ] mov dword ptr [ hexvar ] , num mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edi mov ebx , dword ptr [ esi ] mov dword ptr [ ebx + num ] , num sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ecx ] cmp dword ptr [ eax ] , num jge hexvar xor eax , eax sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ edx ] mov eax , dword ptr [ eax + num ] cmp eax , num mov eax , hexvar cmovne eax , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , num mov r5 , r0 str r4 , [ r0 , num ] mov r1 , hexvar ldr r0 , [ pc , hexvar ] bl hexvar cmp r0 , r4 str r0 , [ r5 ] blt hexvar mov r0 , r4 pop { r4 , r5 , r6 , pc }
push rbx xor esi , esi mov rbx , rdi mov qword ptr [ rdi + num ] , num xor eax , eax mov edi , hexvar call hexvar mov edx , eax mov dword ptr [ rbx ] , eax xor eax , eax test edx , edx js hexvar pop rbx ret
push rbx xor esi , esi call hexvar test rax , rax je hexvar mov esi , num mov rdi , rax mov rbx , rax call hexvar test eax , eax je hexvar mov rax , rbx pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a1 , zero , num move s0 , v0 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) movz s0 , zero , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s0 , zero
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax sub esp , num push num push eax call hexvar add esp , hexvar test eax , eax mov eax , num cmove esi , eax mov eax , esi add esp , num pop ebx pop esi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax push edi push num call hexvar add esp , hexvar test eax , eax js hexvar mov eax , dword ptr [ esp + hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar sub esp , num push hexvar push num call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax push edi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , edi mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + hexvar ] , ecx push eax lea eax , [ esi + hexvar ] push num push hexvar push eax call hexvar add esp , hexvar cmp eax , num je hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar xor esi , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num mov esi , eax push num push eax call hexvar add esp , hexvar test eax , eax je hexvar add esp , num mov eax , esi pop ebx pop esi ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax sub esp , num push num push eax call hexvar add esp , hexvar test eax , eax mov eax , num cmove esi , eax mov eax , esi add esp , num pop ebx pop esi ret
push rbx xor esi , esi call hexvar test rax , rax je hexvar mov esi , num mov rdi , rax mov rbx , rax call hexvar test eax , eax je hexvar mov rax , rbx pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) move a1 , zero lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop addiu a1 , zero , num lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al sub esp , num push num push num push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num js hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] or eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] je hexvar sub esp , num push dword ptr [ ebp - hexvar ] push num push dword ptr [ ebp + num ] call hexvar add esp , hexvar cmp eax , - num je hexvar mov eax , num jmp hexvar mov eax , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx and al , num mov byte ptr [ ebp - hexvar ] , al mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jg hexvar test byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , num xor edx , hexvar mov edi , ecx and edi , hexvar and eax , edx mov ebx , esi and ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edx and eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] or edi , eax mov eax , dword ptr [ ebp - hexvar ] or ebx , eax xor edi , ebx or ecx , esi xor ecx , hexvar or edx , hexvar and ecx , edx or edi , ecx mov dword ptr [ ebp - hexvar ] , edi jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , - num je hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a2 , zero sw s0 , hexvar ( sp ) move s0 , a1 sw s1 , hexvar ( sp ) addiu a1 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a0 bltz v0 , hexvar lw gp , hexvar ( sp ) bnez s0 , hexvar ori a2 , v0 , num addiu a2 , zero , - num and a2 , v0 , a2 beq a2 , v0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , zero , num bal hexvar move a0 , s1 addiu v0 , v0 , num sltiu v0 , v0 , num negu v0 , v0 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bne a2 , v0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) move v0 , zero lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , - num
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx and al , num mov byte ptr [ ebp - num ] , al mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jg hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] or eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , - num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push num push num push esi call hexvar add esp , hexvar test eax , eax js hexvar mov edx , eax or eax , num mov ebp , eax mov ecx , edx and ecx , hexvar mov eax , edi test al , al cmovne ecx , ebp mov eax , num cmp ecx , edx je hexvar sub esp , num push ecx push num push esi call hexvar add esp , hexvar cmp eax , - num sete al movzx eax , al neg eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov eax , esi mov byte ptr [ rbp - hexvar ] , al mov eax , dword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax cmp dword ptr [ rbp - num ] , num js hexvar cmp byte ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - num ] or eax , num jmp hexvar mov eax , dword ptr [ rbp - num ] and eax , hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] je hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar cmp eax , - num je hexvar mov eax , num jmp hexvar mov eax , hexvar leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx and al , num mov byte ptr [ ebp - num ] , al mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jg hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] or eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , - num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx and al , num mov byte ptr [ ebp - num ] , al mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jg hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] or eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , - num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push num push num push esi call hexvar add esp , hexvar test eax , eax js hexvar mov edx , eax or eax , num mov ebp , eax mov ecx , edx mov eax , edi and ecx , hexvar test al , al cmovne ecx , ebp xor eax , eax cmp ecx , edx je hexvar sub esp , num push ecx push num push esi call hexvar add esp , hexvar cmp eax , - num sete al movzx eax , al neg eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx and al , num mov byte ptr [ ebp - num ] , al mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] jg hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] or eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , - num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r4 , [ r1 ] cmp r4 , num beq hexvar mov r7 , r2 mov r5 , r1 mov r8 , r0 bl hexvar ldr r3 , [ r7 ] mov r6 , r0 cmp r3 , r0 bhi hexvar mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push r14 push r13 mov r14 , rdi push r12 push rbp push rbx mov r13 , qword ptr [ rsi ] test r13 , r13 je hexvar mov r12 , rdx mov rbx , rsi call hexvar mov rbp , rax cmp qword ptr [ r12 ] , rbp mov eax , num ja hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp push edi mov ebp , eax push esi push ebx mov esi , edx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , ecx test edx , edx mov dword ptr [ esp + num ] , edx je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , eax mov edx , dword ptr [ esp + num ] mov eax , num cmp dword ptr [ ecx ] , edi ja hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ esi ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx ] jb hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] add edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] add eax , dword ptr [ ecx ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ecx ] sub edx , eax mov dword ptr [ ecx ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov esi , edx mov edx , dword ptr [ edx ] test edx , edx je hexvar mov edi , eax mov ebp , ecx mov ecx , hexvar mov eax , num repne scasb al , byte ptr es : [ edi ] not ecx lea edi , [ ecx - num ] mov eax , num cmp dword ptr [ ebp ] , edi ja hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ ebp - hexvar ] , eax jb hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push edx push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] add edx , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] sub eax , dword ptr [ ebp - hexvar ] mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar lui gp , hexvar sw s3 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s3 , ( a1 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] cmp dword ptr [ esi ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] cmp eax , dword ptr [ ecx ] jb hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] add edx , num mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] add eax , dword ptr [ ecx ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ecx ] sub edx , eax mov dword ptr [ ecx ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp push edi mov ebp , eax push esi push ebx mov esi , edx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , ecx test edx , edx mov dword ptr [ esp + num ] , edx je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , eax mov edx , dword ptr [ esp + num ] mov eax , num cmp dword ptr [ ecx ] , edi ja hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov esi , edx mov edx , dword ptr [ edx ] test edx , edx je hexvar mov edi , eax mov ebp , ecx mov ecx , hexvar mov eax , num repne scasb al , byte ptr es : [ edi ] not ecx lea edi , [ ecx - num ] mov eax , num cmp dword ptr [ ebp ] , edi ja hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rdi + num ] , hexvar cmp dword ptr [ rdi ] , num jg hexvar mov rdi , qword ptr [ r14 + num ] test rdi , rdi je hexvar call hexvar mov esi , hexvar mov edi , num mov edx , hexvar call hexvar mov qword ptr [ r14 + num ] , rax test rax , rax je hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rcx , qword ptr [ r14 + num ] test rcx , rcx je hexvar test rbx , rbx js hexvar test rbx , rbx je hexvar mov byte ptr [ rsp + hexvar ] , bl mov rax , rbx sar rax , num je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al sar rbx , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , bl mov eax , num test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 ret
push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rdi + num ] , hexvar cmp dword ptr [ rdi ] , num jg hexvar mov rdi , qword ptr [ r14 + num ] test rdi , rdi je hexvar call hexvar mov esi , hexvar mov edi , num mov edx , hexvar call hexvar mov qword ptr [ r14 + num ] , rax test rax , rax je hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rcx , qword ptr [ r14 + num ] test rcx , rcx je hexvar test rbx , rbx js hexvar test rbx , rbx je hexvar mov byte ptr [ rsp + hexvar ] , bl mov rax , rbx sar rax , num je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al sar rbx , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , bl mov eax , num test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 ret
push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rdi + num ] , hexvar cmp dword ptr [ rdi ] , num jg hexvar mov rdi , qword ptr [ r14 + num ] test rdi , rdi je hexvar call hexvar mov esi , hexvar mov edi , num mov edx , hexvar call hexvar mov qword ptr [ r14 + num ] , rax test rax , rax je hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rdi , qword ptr [ r14 + num ] test rdi , rdi je hexvar test rbx , rbx js hexvar test rbx , rbx jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 ret
push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rdi + num ] , hexvar cmp dword ptr [ rdi ] , num jg hexvar mov rdi , qword ptr [ r14 + num ] test rdi , rdi je hexvar call hexvar mov esi , hexvar mov edi , num mov edx , hexvar call hexvar mov qword ptr [ r14 + num ] , rax test rax , rax je hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rcx , qword ptr [ r14 + num ] test rcx , rcx je hexvar test rbx , rbx js hexvar test rbx , rbx je hexvar mov byte ptr [ rsp + hexvar ] , bl mov rax , rbx sar rax , num je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al sar rbx , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , bl mov eax , num test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ edi ] , num mov dword ptr [ edi + num ] , hexvar mov edx , dword ptr [ edi + num ] jg hexvar test edx , edx je hexvar sub esp , hexvar push edx call hexvar add esp , hexvar lea ebp , [ ebx - hexvar ] sub esp , num push hexvar push ebp push num call hexvar add esp , hexvar test eax , eax mov dword ptr [ edi + num ] , eax je hexvar mov dword ptr [ eax ] , num mov byte ptr [ eax + num ] , num mov edx , dword ptr [ edi + num ] test edx , edx je hexvar test esi , esi js hexvar je hexvar mov eax , esi mov byte ptr [ esp + num ] , al mov eax , esi sar eax , num test eax , eax je hexvar mov ecx , esi mov byte ptr [ esp + num ] , al sar ecx , hexvar test ecx , ecx je hexvar mov eax , esi mov byte ptr [ esp + num ] , cl sar eax , hexvar test eax , eax je hexvar mov byte ptr [ edx ] , al mov byte ptr [ esp + hexvar ] , al mov edx , num mov eax , dword ptr [ edi + num ] mov byte ptr [ eax + num ] , cl mov eax , num movzx ecx , byte ptr [ esp + edx + num ] mov ebx , dword ptr [ edi + num ] test edx , edx mov byte ptr [ ebx + num ] , cl je hexvar movzx ecx , byte ptr [ esp + num ] mov edx , dword ptr [ edi + num ] mov byte ptr [ edx + num ] , cl add eax , num mov dword ptr [ edi ] , eax mov eax , num mov ebx , dword ptr [ esp + hexvar ] xor ebx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rdi + num ] , hexvar cmp dword ptr [ rdi ] , num jg hexvar mov rdi , qword ptr [ r14 + num ] test rdi , rdi je hexvar call hexvar mov esi , hexvar mov edi , num mov edx , hexvar call hexvar mov qword ptr [ r14 + num ] , rax test rax , rax je hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rcx , qword ptr [ r14 + num ] test rcx , rcx je hexvar test rbx , rbx js hexvar test rbx , rbx je hexvar mov byte ptr [ rsp + hexvar ] , bl mov rax , rbx sar rax , num je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al sar rbx , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , bl mov eax , num test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , zero , hexvar sw v1 , num ( v0 )
push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rdi + num ] , hexvar cmp dword ptr [ rdi ] , num jg hexvar mov rdi , qword ptr [ r14 + num ] test rdi , rdi je hexvar call hexvar mov esi , hexvar mov edi , num mov edx , hexvar call hexvar mov qword ptr [ r14 + num ] , rax test rax , rax je hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rdi , qword ptr [ r14 + num ] test rdi , rdi je hexvar test rbx , rbx js hexvar test rbx , rbx jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 ret
push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rdi + num ] , hexvar cmp dword ptr [ rdi ] , num jg hexvar mov rdi , qword ptr [ r14 + num ] test rdi , rdi je hexvar call hexvar mov esi , hexvar mov edi , num mov edx , hexvar call hexvar mov qword ptr [ r14 + num ] , rax test rax , rax je hexvar mov byte ptr [ rax + num ] , num mov qword ptr [ rax ] , num mov rcx , qword ptr [ r14 + num ] test rcx , rcx je hexvar test rbx , rbx js hexvar test rbx , rbx je hexvar mov byte ptr [ rsp + hexvar ] , bl mov rax , rbx sar rax , num je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al mov rax , rbx sar rax , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , al sar rbx , hexvar je hexvar mov byte ptr [ rsp + hexvar ] , bl mov eax , num test eax , eax jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ esi ] , num mov dword ptr [ esi + num ] , hexvar mov ecx , dword ptr [ esi + num ] jg hexvar test ecx , ecx je hexvar sub esp , hexvar push ecx call hexvar add esp , hexvar lea ebp , [ ebx - hexvar ] sub esp , num push hexvar push ebp push num call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar mov dword ptr [ eax ] , num mov byte ptr [ eax + num ] , num mov ecx , dword ptr [ esi + num ] test ecx , ecx je hexvar test edi , edi js hexvar je hexvar mov eax , edi mov byte ptr [ esp + num ] , al mov eax , edi sar eax , num test eax , eax je hexvar mov byte ptr [ esp + num ] , al mov eax , edi sar eax , hexvar test eax , eax je hexvar sar edi , hexvar mov byte ptr [ esp + num ] , al test edi , edi je hexvar mov eax , edi mov ebp , num mov byte ptr [ esp + hexvar ] , al lea edi , [ esp + num ] mov eax , ebp xor edx , edx movzx ebx , byte ptr [ edi + eax ] sub eax , num mov byte ptr [ ecx + edx ] , bl add edx , num cmp eax , - num je hexvar mov ecx , dword ptr [ esi + num ] jmp hexvar lea esi , [ esi ] lea edi , [ edi ] lea ebx , [ ebp + num ] mov dword ptr [ esi ] , ebx mov eax , num mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , eax and ecx , hexvar mov eax , ecx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov ecx , edx and ecx , hexvar mov edx , ecx sub rax , rdx setne sil movzx ecx , sil mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num push esi push edi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] xor edx , dword ptr [ esi + hexvar ] and edx , hexvar mov edx , num cmovne eax , edx pop ebx pop esi pop edi ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num call hexvar add ebx , hexvar push esi push edi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] xor edx , dword ptr [ esi + hexvar ] and edx , hexvar mov edx , num cmovne eax , edx pop ebx pop esi pop edi ret
push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp + hexvar ] xor rdx , qword ptr [ rbx + hexvar ] and edx , hexvar mov edx , num cmovne rax , rdx add rsp , num pop rbx pop rbp ret
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp + hexvar ] xor rdx , qword ptr [ rbx + hexvar ] and edx , hexvar mov edx , num cmovne rax , rdx add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] xor rax , rdx and eax , hexvar test rax , rax je hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov ecx , eax and ecx , hexvar mov eax , ecx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov ecx , edx and ecx , hexvar mov edx , ecx sub rax , rdx setne sil movzx ecx , sil mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] xor eax , edx and eax , hexvar test eax , eax je hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] xor rax , hexvar mov rcx , - num mov rdx , rcx xor rdx , hexvar movabs rsi , hexvar xor rcx , rsi or rax , rdx or rcx , rsi xor rax , hexvar and rax , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] and rcx , hexvar cmp rax , rcx je hexvar mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , num call hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbp + hexvar ] xor rdx , qword ptr [ rbx + hexvar ] and edx , hexvar mov edx , num cmovne rax , rdx add rsp , num pop rbx pop rbp ret
sub rsp , hexvar mov rdi , qword ptr [ rdi ] call hexvar test eax , eax je hexvar lea rcx , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rcx test eax , eax js hexvar mov dword ptr [ rsp + hexvar ] , eax lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax ] add rsp , hexvar ret
push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar mov rdi , qword ptr [ rdi ] call hexvar test eax , eax je hexvar lea rcx , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rcx test eax , eax js hexvar mov dword ptr [ rsp + hexvar ] , eax lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax ] add rsp , hexvar ret
sub rsp , hexvar mov rdi , qword ptr [ rdi ] call hexvar test eax , eax je hexvar lea rcx , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rcx test eax , eax js hexvar mov dword ptr [ rsp + hexvar ] , eax lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax ] add rsp , hexvar ret
sub rsp , hexvar mov rdi , qword ptr [ rdi ] call hexvar test eax , eax je hexvar lea rcx , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rcx test eax , eax js hexvar mov dword ptr [ rsp + hexvar ] , eax lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax ] add rsp , hexvar ret
sub rsp , hexvar mov rdi , qword ptr [ rdi ] call hexvar test eax , eax je hexvar lea rcx , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rcx test eax , eax js hexvar mov dword ptr [ rsp + hexvar ] , eax lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax ] add rsp , hexvar ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar add esp , num pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
ldr r3 , [ r0 , hexvar ] ldr ip , [ r0 , hexvar ] push { r4 , r5 , r6 , lr } cmp r3 , ip mov r4 , r0 mov r6 , r1 mov r5 , r2 ldr r0 , [ r0 , hexvar ] bhs hexvar str r6 , [ r0 , r3 , lsl num ] add r2 , r0 , r3 , lsl num add r3 , r3 , num str r5 , [ r2 , num ] str r3 , [ r4 , hexvar ] pop { r4 , r5 , r6 , pc }
push rbp push rbx mov rbx , rdi mov rbp , rsi sub rsp , hexvar mov rcx , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbx + hexvar ] cmp rcx , rdi jae hexvar mov rdi , rcx add rcx , num shl rdi , num add rax , rdi mov qword ptr [ rax ] , rbp mov qword ptr [ rax + num ] , rdx mov qword ptr [ rbx + hexvar ] , rcx add rsp , hexvar pop rbx pop rbp ret
push r12 push rbp mov r12 , rsi push rbx mov rcx , qword ptr [ rdi + hexvar ] mov rbx , rdi mov rax , qword ptr [ rdi + hexvar ] mov rbp , rdx cmp rcx , rax jae hexvar mov rax , qword ptr [ rdi + hexvar ] mov rsi , rcx add rcx , num shl rsi , num add rax , rsi mov qword ptr [ rax ] , r12 mov qword ptr [ rax + num ] , rbp mov qword ptr [ rbx + hexvar ] , rcx pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax mov ebp , edx mov edi , ecx mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ esi + hexvar ] , eax jae hexvar mov edx , dword ptr [ esi + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + edx * num ] , ebp mov edx , dword ptr [ esi + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ eax + edx * num + num ] , edi add dword ptr [ esi + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + num ] cmp esi , dword ptr [ edi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jb hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ edx + esi * num ] , ecx mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ edx + esi * num + num ] , ecx mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ecx + hexvar ] mov esi , eax sub esi , edx mov edx , eax sub edx , num add esi , edx sub eax , esi mov dword ptr [ ecx + hexvar ] , eax add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] cmp ecx , edx jb hexvar mov edx , dword ptr [ ebp + num ] lea ecx , [ edx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push num push ecx push edx mov ebx , eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] shl eax , num add edx , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] shl eax , num add edx , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ edx + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ esi + hexvar ] mov esi , dword ptr [ esi + hexvar ] sub edi , esi setae bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi jmp esi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + hexvar ] add eax , hexvar mov edx , esp mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , ecx mov dword ptr [ edx + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ecx + edx * num + num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + hexvar ] add ecx , num mov dword ptr [ eax + hexvar ] , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ esi + hexvar ] mov esi , dword ptr [ esi + hexvar ] sub edi , esi setae bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , edi jmp esi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + hexvar ] add eax , hexvar mov edx , esp mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , ecx mov dword ptr [ edx + num ] , num call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ecx + edx * num + num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + hexvar ] add ecx , num mov dword ptr [ eax + hexvar ] , ecx add esp , hexvar pop esi pop edi pop ebx pop ebp ret
beqz a0 , hexvar lw v0 , hexvar ( sp ) lw v1 , num ( v0 ) lw v1 , ( v1 )
test rdi , rdi je hexvar mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rdi ] , rax mov r9 , qword ptr [ r8 + hexvar ] mov edi , dword ptr [ r9 ] cmp edi , hexvar je hexvar xor eax , eax cmp edi , num jne hexvar mov dword ptr [ r8 ] , num test rsi , rsi jne hexvar jmp hexvar mov dword ptr [ r8 ] , num test rsi , rsi je hexvar mov rax , qword ptr [ r9 + num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsi ] , rax mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , num test rcx , rcx je hexvar mov rdx , qword ptr [ r8 + hexvar ] mov qword ptr [ rcx ] , rdx ret
sw a0 , ( sp ) sw a1 , num ( sp ) sw a2 , num ( sp ) sw a3 , hexvar ( sp ) lw v0 , ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) lw v1 , ( v0 )
push esi push ebx mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ edx + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ eax ] , ecx mov ebx , dword ptr [ edx + hexvar ] mov ecx , dword ptr [ ebx ] cmp ecx , num je hexvar xor eax , eax cmp ecx , hexvar je hexvar pop ebx pop esi ret
test rdi , rdi je hexvar mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rdi ] , rax mov r9 , qword ptr [ r8 + hexvar ] mov edi , dword ptr [ r9 ] cmp edi , hexvar je hexvar xor eax , eax cmp edi , num jne hexvar mov dword ptr [ r8 ] , num test rsi , rsi jne hexvar jmp hexvar mov dword ptr [ r8 ] , num test rsi , rsi je hexvar mov rax , qword ptr [ r9 + num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsi ] , rax mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , num test rcx , rcx je hexvar mov rdx , qword ptr [ r8 + hexvar ] mov qword ptr [ rcx ] , rdx ret
beqz a0 , hexvar lw v0 , hexvar ( sp ) lw v1 , num ( v0 ) lw v1 , ( v1 )
test rdi , rdi je hexvar mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rdi ] , rax mov r9 , qword ptr [ r8 + hexvar ] mov edi , dword ptr [ r9 ] cmp edi , hexvar je hexvar xor eax , eax cmp edi , num jne hexvar mov dword ptr [ r8 ] , num test rsi , rsi jne hexvar jmp hexvar mov dword ptr [ r8 ] , num test rsi , rsi je hexvar mov rax , qword ptr [ r9 + num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsi ] , rax mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , num test rcx , rcx je hexvar mov rdx , qword ptr [ r8 + hexvar ] mov qword ptr [ rcx ] , rdx ret
push esi push ebx mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ edx + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ eax ] , ecx mov ebx , dword ptr [ edx + hexvar ] mov ecx , dword ptr [ ebx ] cmp ecx , num je hexvar xor eax , eax cmp ecx , hexvar je hexvar pop ebx pop esi ret
test rdi , rdi je hexvar mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rdi ] , rax mov r9 , qword ptr [ r8 + hexvar ] mov edi , dword ptr [ r9 ] cmp edi , hexvar je hexvar xor eax , eax cmp edi , num jne hexvar mov dword ptr [ r8 ] , num test rsi , rsi jne hexvar jmp hexvar mov dword ptr [ r8 ] , num test rsi , rsi je hexvar mov rax , qword ptr [ r9 + num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsi ] , rax mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , num test rcx , rcx je hexvar mov rdx , qword ptr [ r8 + hexvar ] mov qword ptr [ rcx ] , rdx ret
test rdi , rdi je hexvar mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rdi ] , rax mov r9 , qword ptr [ r8 + hexvar ] mov edi , dword ptr [ r9 ] cmp edi , hexvar je hexvar xor eax , eax cmp edi , num jne hexvar mov dword ptr [ r8 ] , num test rsi , rsi jne hexvar jmp hexvar mov dword ptr [ r8 ] , num test rsi , rsi je hexvar mov rax , qword ptr [ r9 + num ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsi ] , rax mov rax , qword ptr [ r8 + hexvar ] mov rax , qword ptr [ rax + num ] mov eax , dword ptr [ rax ] mov dword ptr [ rdx ] , eax mov eax , num test rcx , rcx je hexvar mov rdx , qword ptr [ r8 + hexvar ] mov qword ptr [ rcx ] , rdx ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar lea edi , [ ebx - hexvar ] push hexvar push edi push hexvar push num call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar push hexvar push edi push hexvar push hexvar call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call eax add esp , hexvar test eax , eax je hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push r15 push r14 push r12 push rbx push rax test rdi , rdi je hexvar mov r14 , rcx mov r15 , rdx mov r12 , rsi mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , rbx mov rsi , r12 mov rdx , r15 mov rcx , r14 call rax test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax test rdi , rdi je hexvar mov r14 , rcx mov r15 , rdx mov r12 , rsi mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , rbx mov rsi , r12 mov rdx , r15 mov rcx , r14 call rax test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar add esp , hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call eax mov esi , eax add esp , hexvar test eax , eax je hexvar mov eax , esi add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar mov r3 , hexvar ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , num bl hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar mov r3 , hexvar ldr r2 , [ pc , hexvar ] mov r1 , hexvar mov r0 , hexvar bl hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , hexvar ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] blx r4 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { r4 , pc }
push r15 push r14 push r12 push rbx push rax test rdi , rdi je hexvar mov r14 , rcx mov r15 , rdx mov r12 , rsi mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , rbx mov rsi , r12 mov rdx , r15 mov rcx , r14 call rax test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar lea edi , [ ebx - hexvar ] push hexvar push edi push hexvar push num call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar push hexvar push edi push hexvar push hexvar call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call eax add esp , hexvar test eax , eax je hexvar add esp , hexvar pop ebx pop esi pop edi ret
push r15 push r14 push r12 push rbx push rax test rdi , rdi je hexvar mov r14 , rcx mov r15 , rdx mov r12 , rsi mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar mov rdi , rbx mov rsi , r12 mov rdx , r15 mov rcx , r14 call rax test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi + hexvar ] , rsi je hexvar mov rbx , rdi mov rdi , rsi call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi + hexvar ] , rsi je hexvar mov rbx , rdi mov rdi , rsi call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d pop rbx pop r14 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ sp , num ] cmp r2 , r3 bne hexvar mov r3 , num b hexvar ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 , num ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebp push edi mov edi , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + num ] , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push dword ptr [ esi + num ] call hexvar mov dword ptr [ esi + num ] , ebp add esp , hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi + hexvar ] , rsi je hexvar mov rbx , rdi mov rdi , rsi call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d pop rbx pop r14 pop rbp ret
push ebp push edi mov edi , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + num ] , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push dword ptr [ esi + num ] call hexvar mov dword ptr [ esi + num ] , ebp add esp , hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi + hexvar ] , rsi je hexvar mov rbx , rdi mov rdi , rsi call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d pop rbx pop r14 pop rbp ret
lw v0 , num ( a0 ) beq v0 , a1 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , a1 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) bal hexvar lw a0 , num ( s0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) sw s1 , num ( s0 ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra addiu v0 , zero , num lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax test ecx , ecx je hexvar mov ebp , edx lea esi , [ ecx - num ] call hexvar movzx ecx , byte ptr [ ebp + esi ] mov edx , dword ptr [ eax ] mov edx , dword ptr [ edx + ecx * num ] mov byte ptr [ edi + esi ] , dl sub esi , num cmp esi , - num jne hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx sub rsi , rdx mov rdi , rcx sub rdi , - num add rsi , rdi sub rcx , rsi mov qword ptr [ rbp - hexvar ] , rcx cmp rdx , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movzx edi , byte ptr [ rax + rcx ] call hexvar mov dl , al mov rcx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov byte ptr [ rcx + rsi ] , dl jmp hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num mov eax , hexvar mov ecx , hexvar cmova ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov dl , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a2 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu s0 , a2 , - num jalr t9 move s1 , a1 addu v1 , s1 , s0 addu t0 , s2 , s0 addiu a1 , s1 , - num lbu a3 , ( v1 ) addiu t0 , t0 , - num lw a2 , ( v0 ) addiu v1 , v1 , - num sll a3 , a3 , num addu a2 , a2 , a3 lw a2 , ( a2 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov dl , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov dl , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movzx edi , byte ptr [ rax + rcx ] mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov cl , al mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov byte ptr [ rdx + rsi ] , cl jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov dl , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov dl , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx sub rsi , rdx mov rdi , rcx sub rdi , - num add rsi , rdi sub rcx , rsi mov qword ptr [ rbp - hexvar ] , rcx cmp rdx , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movzx edi , byte ptr [ rax + rcx ] call hexvar mov dl , al mov rcx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov byte ptr [ rcx + rsi ] , dl jmp hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
call hexvar add eax , hexvar sub esp , hexvar lea eax , [ eax - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
call hexvar add eax , hexvar sub esp , hexvar lea eax , [ eax - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , r14d movabs r15 , hexvar mov qword ptr [ r8 ] , r15 mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx ] mov r8 , qword ptr [ r8 ] mov r9 , qword ptr [ rsi ] mov r12d , dword ptr [ rdi ] sub rsp , hexvar mov rdi , rax mov rsi , rcx mov rcx , r8 mov r8d , hexvar mov dword ptr [ rsp ] , r12d call hexvar add rsp , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , r14d movabs r15 , hexvar mov qword ptr [ r8 ] , r15 mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx ] mov r8 , qword ptr [ r8 ] mov r9 , qword ptr [ rsi ] mov r12d , dword ptr [ rdi ] sub rsp , hexvar mov rdi , rax mov rsi , rcx mov rcx , r8 mov r8d , hexvar mov dword ptr [ rsp ] , r12d call hexvar add rsp , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r14 pop r15 pop rbp ret
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push rbp mov rbp , rsp push r15 push r14 push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , rsp add rdi , - hexvar mov rsp , rdi mov r8 , rsp add r8 , - hexvar mov rsp , r8 mov r9 , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , r9 mov r10 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r10 mov r11 , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , r11 mov rbx , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi ] , rbx mov r14d , dword ptr [ rbp - hexvar ] mov dword ptr [ rdi ] , r14d movabs r15 , hexvar mov qword ptr [ r8 ] , r15 mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rcx ] mov rdx , qword ptr [ rdx ] mov r8 , qword ptr [ r8 ] mov r9 , qword ptr [ rsi ] mov r12d , dword ptr [ rdi ] sub rsp , hexvar mov rdi , rax mov rsi , rcx mov rcx , r8 mov r8d , hexvar mov dword ptr [ rsp ] , r12d call hexvar add rsp , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] lea rsp , [ rbp - hexvar ] pop rbx pop r12 pop r14 pop r15 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar push dword ptr [ esp + hexvar ] push num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push r15 push r14 push r12 push rbx push rax mov r15 , rsi mov r12 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax xor r14d , r14d mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , rbx mov rsi , r12 mov edx , num xor ecx , ecx call hexvar mov r14d , eax mov rdi , r12 call hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a3 , hexvar ( sp ) move a2 , zero addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r15 push r14 push r12 push rbx push rax mov r15 , rsi mov r12 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax xor r14d , r14d mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , rbx mov rsi , r12 mov edx , num xor ecx , ecx call hexvar mov r14d , eax mov rdi , r12 call hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , rsi mov r15 , rdi call hexvar mov rdi , rax call hexvar mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov r12d , hexvar mov r13d , hexvar jmp hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp + num ] mov esi , hexvar xor edx , edx mov rcx , r15 call hexvar mov rbx , qword ptr [ rsp + num ] call hexvar mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r13d jmp hexvar mov rsi , qword ptr [ rsp + hexvar ] mov rdi , rbx mov edx , num xor ecx , ecx call hexvar mov ebp , eax mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r12d jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] mov rsi , r14 call hexvar test eax , eax mov eax , hexvar cmove eax , r12d jmp hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s2 bal hexvar move a0 , v0 move a1 , s1 jal hexvar move a0 , s0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar bal hexvar addiu a0 , zero , hexvar move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s1 move a0 , v0 bal hexvar move s0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) move a1 , s2 jalr t9 move a0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) move s1 , zero lw t9 , - hexvar ( gp ) bal hexvar move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar jalr t9 move s1 , zero lw ra , hexvar ( sp ) move v0 , s1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a3 , zero addiu a2 , zero , num move a1 , s1 jalr t9 move a0 , s0 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a3 , hexvar ( sp ) move a2 , zero addiu a1 , zero , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s2 bal hexvar move a0 , v0 move a1 , s1 jal hexvar move a0 , s0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar bal hexvar addiu a0 , zero , hexvar move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push r15 push r14 push r12 push rbx push rax mov r15 , rsi mov r12 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax xor r14d , r14d mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , rbx mov rsi , r12 mov edx , num xor ecx , ecx call hexvar mov r14d , eax mov rdi , r12 call hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx jne hexvar mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ eax + hexvar ] cmp esi , edi jne hexvar cmp ecx , edx je hexvar sub esp , num sub esi , edi push edx push ecx call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , esi fild dword ptr [ esp + hexvar ] fmul qword ptr [ ebx - hexvar ] faddp st ( num ) fldz fucomip st ( num ) fstp st ( num ) setbe al add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v1 , hexvar ( a2 )
sub rsp , num mov eax , dword ptr [ rdx + hexvar ] test eax , eax jne hexvar mov rax , rsi mov rcx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] call hexvar test eax , eax setg al add rsp , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + hexvar ] cmp esi , dword ptr [ edi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar cmp eax , num setg bl and bl , num movzx eax , bl add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx + hexvar ] jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setg cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
lui gp , hexvar lw v0 , hexvar ( a2 ) addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) bnez v0 , hexvar sw gp , hexvar ( sp ) lw a0 , hexvar ( a1 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] xor esi , esi mov edi , dword ptr [ ebp + hexvar ] cmp esi , dword ptr [ edi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar cmp eax , num setg bl and bl , num movzx eax , bl add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx + hexvar ] jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar sub esp , num mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setg cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
sub rsp , num mov eax , dword ptr [ rdx + hexvar ] test eax , eax jne hexvar mov rax , rsi mov rcx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] call hexvar test eax , eax setg al add rsp , num ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar sub r3 , fp , hexvar ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , hexvar ldm r3 , { r2 , r3 } sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r3 , r0 cmp r3 , num movgt r3 , num movle r3 , num and r3 , r3 , hexvar mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx call hexvar mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
ldr r3 , [ r1 , hexvar ] mov r2 , r1 cmp r3 , num cmpne r3 , num ldr r1 , [ r0 , hexvar ] moveq r3 , num movne r3 , num cmp r1 , num cmpne r1 , num beq hexvar ldr r1 , [ r0 , hexvar ] cmp r3 , num and r1 , r1 , hexvar beq hexvar cmp r1 , hexvar beq hexvar mov r3 , num mov r0 , r3 bx lr cmp r3 , num bne hexvar ldr r3 , [ r2 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar mvn r3 , num mov r0 , r3 bx lr ldr r3 , [ r2 , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar cmp r1 , hexvar beq hexvar ldr r1 , [ r0 , hexvar ] ldr r3 , [ r2 , hexvar ] cmp r1 , r3 blt hexvar bgt hexvar ldr r3 , [ r0 , hexvar ] ldr r1 , [ r2 , hexvar ] subs r3 , r3 , r1 bne hexvar ldr r1 , [ r0 ] ldr r0 , [ r2 ] b hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 move s0 , a1 jal hexvar nop move s2 , v0 move a0 , s0 jal hexvar nop beqz s2 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw v0 , hexvar ( s1 ) lw v1 , hexvar ( s0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar mov dword ptr [ rbp - num ] , eax mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , esi call hexvar mov ebx , eax mov eax , edi call hexvar cmp al , num je hexvar test bl , bl jne hexvar cmp bl , num je hexvar mov edx , num test al , al je hexvar mov eax , edx pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 move s0 , a1 jal hexvar nop move s2 , v0 move a0 , s0 jal hexvar nop beqz s2 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw v0 , hexvar ( s1 ) lw v1 , hexvar ( s0 ) slt a0 , v0 , v1 bnez a0 , hexvar nop slt v0 , v1 , v0 bnez v0 , hexvar addiu v0 , zero , num lw v0 , hexvar ( s1 ) lw v1 , hexvar ( s0 ) subu v0 , v0 , v1 bnez v0 , hexvar lw ra , hexvar ( sp ) lw a1 , ( s1 ) lw a0 , ( s0 ) jal hexvar nop lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz v0 , hexvar addiu v0 , zero , num b hexvar lw ra , hexvar ( sp ) b hexvar addiu v0 , zero , - num
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] add rsi , num mov rdi , qword ptr [ rbp - hexvar ] cmp rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] add rsi , num mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdi , rax setg cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx xor eax , eax mov ecx , eax mov rdx , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rcx jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] add rsi , num mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdi , rax setg cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx xor eax , eax mov ecx , eax mov rdx , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rcx jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] add rsi , num mov rdi , qword ptr [ rbp - hexvar ] cmp rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rcx , hexvar mov rdx , qword ptr [ rbp - hexvar ] add rdx , rcx add rdx , rax sub rdx , rcx mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] add rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rsi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] cmp rax , rcx mov edx , hexvar mov esi , hexvar cmovg esi , edx mov dword ptr [ rbp - hexvar ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov dword ptr [ rbp - hexvar ] , hexvar mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] add rsi , num mov rdi , qword ptr [ rbp - hexvar ] cmp rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] add rsi , num mov rdi , qword ptr [ rbp - hexvar ] cmp rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] add rax , num mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] add rsi , num mov rdi , qword ptr [ rbp - hexvar ] cmp rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi jle hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] sar rsi , num mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] add rsi , num mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdi , rax setg cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdi jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx xor eax , eax mov ecx , eax mov rdx , qword ptr [ rip ] mov qword ptr [ rbp - hexvar ] , rcx jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push rbx sub rsp , hexvar mov rbx , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov rdx , rsp call hexvar cmp eax , - num je hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rsp ] mov rax , rbx mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ ebp - num ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp lea ebx , [ ebp - hexvar ] mov dword ptr [ edi + num ] , ebx mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] sub eax , - num sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx xor eax , eax mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] test eax , eax sete cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , hexvar mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax push ebx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp eax , - num je hexvar test eax , eax mov eax , ebx cmove eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ ebp - num ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push rbx mov rbx , rsi sub rsp , hexvar mov rdx , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax call hexvar cmp eax , - num je hexvar test eax , eax jne hexvar mov rbx , qword ptr [ rsp ] mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] mov rax , rbx jne hexvar add rsp , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) addiu v0 , fp , hexvar move a2 , v0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) b hexvar nop move v0 , zero lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] lea rdx , [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , - num jne hexvar xor eax , eax mov ecx , eax mov qword ptr [ rbp - hexvar ] , rcx jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ ebp - num ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , - num jne hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push { r4 , lr } ldr r4 , [ pc , hexvar ] ldr lr , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ r4 ] stm sp , { r0 , r1 } ldr r0 , [ lr ] mov r1 , sp str r2 , [ sp , num ] str r3 , [ sp , hexvar ] str ip , [ sp , hexvar ] bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r0 , num ldrne r0 , [ r0 , hexvar ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v1 , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) addiu a1 , sp , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , ( s0 ) lw a0 , - hexvar ( v1 ) sw v0 , hexvar ( sp ) bal hexvar nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( v0 )
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp ] , rdi mov qword ptr [ rsp + num ] , rsi mov rsi , rsp mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] jmp hexvar mov eax , num mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } str r3 , [ fp , - hexvar ] str r4 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] sub r2 , fp , hexvar mov r1 , r2 mov r0 , r3 bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
sub rsp , hexvar mov qword ptr [ rsp ] , rdi mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rsp + num ] , rsi mov rsi , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ ebp + num ] movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp + hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov edi , dword ptr [ hexvar ] lea ebx , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx lea eax , [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov qword ptr [ rsp ] , rdi mov qword ptr [ rsp + num ] , rsi mov rsi , rsp mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ ebp + num ] movsd qword ptr [ ebp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ ebp + hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov edi , dword ptr [ hexvar ] lea ebx , [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw a2 , hexvar ( sp ) addiu a1 , sp , hexvar lui v0 , hexvar lw a0 , - hexvar ( v0 ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( v0 ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edx mov eax , hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) addiu v0 , zero , - hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi add esp , hexvar pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar xor edx , edx lea edi , [ ebx - hexvar ] lea ebp , [ ebx - hexvar ] jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ eax + hexvar ] mov esi , edx or esi , num cmp ecx , ebp cmove edx , esi test eax , eax je hexvar mov ecx , dword ptr [ eax ] cmp ecx , edi jne hexvar mov eax , dword ptr [ eax + hexvar ] or edx , num test eax , eax jne hexvar cmp edx , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rdi , rdi je hexvar xor eax , eax jmp hexvar nop dword ptr [ rax ] mov rdi , qword ptr [ rdi + hexvar ] mov ecx , eax or ecx , num cmp rdx , hexvar cmove eax , ecx test rdi , rdi je hexvar mov rdx , qword ptr [ rdi ] cmp rdx , hexvar jne hexvar mov rdi , qword ptr [ rdi + hexvar ] or eax , num test rdi , rdi jne hexvar nop word ptr cs : [ rax + rax ] and eax , num cmp eax , num je hexvar ret nop word ptr [ rax + rax ] cmp byte ptr [ rip + hexvar ] , num jne hexvar sub rsp , num mov edx , num mov esi , hexvar call hexvar xor esi , esi mov rdx , rax mov edi , num xor eax , eax add rsp , num jmp hexvar nop dword ptr [ rax + rax ] nop word ptr cs : [ rax + rax ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax and ecx , num xor eax , num or ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax xor ecx , hexvar mov edx , hexvar mov esi , edx xor esi , num xor edx , hexvar mov edi , ecx and edi , hexvar and eax , edx mov ebx , esi and ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edx and eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] or edi , eax mov eax , dword ptr [ ebp - hexvar ] or ebx , eax xor edi , ebx or ecx , esi xor ecx , hexvar or edx , hexvar and ecx , edx or edi , ecx mov dword ptr [ ebp - hexvar ] , edi jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , hexvar xor ecx , num mov edx , eax xor edx , ecx and edx , eax cmp edx , num je hexvar mov eax , dword ptr [ ebp - hexvar ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , num xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , num je hexvar test byte ptr [ hexvar ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov edx , num lea edi , [ ebx - hexvar ] lea ebp , [ ebx - hexvar ] jmp hexvar or edx , num mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ eax ] cmp ecx , edi je hexvar mov esi , edx or esi , num cmp ecx , ebp cmove edx , esi jmp hexvar cmp edx , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num setne al mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] or eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx jne hexvar mov eax , dword ptr [ ebp - num ] or eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] and eax , num cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] and eax , num cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar xor edx , edx lea edi , [ ebx - hexvar ] lea ebp , [ ebx - hexvar ] jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ eax + hexvar ] mov esi , edx or esi , num cmp ecx , ebp cmove edx , esi test eax , eax je hexvar mov ecx , dword ptr [ eax ] cmp ecx , edi jne hexvar mov eax , dword ptr [ eax + hexvar ] or edx , num test eax , eax jne hexvar cmp edx , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub eax , hexvar sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov al , byte ptr [ ebp - num ] or al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ hexvar ] jmp ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub eax , hexvar sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov al , byte ptr [ ebp - num ] or al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ hexvar ] jmp ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num shr al , num movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ hexvar ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , esp mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx ] , num call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebp ret
test rdi , rdi je hexvar mov edx , num mov rax , qword ptr [ rdi ] cmp rax , hexvar jne hexvar or edx , num jmp hexvar mov ecx , edx or ecx , num cmp rax , hexvar cmove edx , ecx mov rdi , qword ptr [ rdi + hexvar ] test rdi , rdi jne hexvar and edx , num cmp edx , num jne hexvar cmp byte ptr [ rip + hexvar ] , num jne hexvar sub rsp , num mov edx , num mov esi , hexvar call hexvar mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip - hexvar ] cmp rax , rdx jne hexvar or dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rip - hexvar ] cmp rax , rdx jne hexvar or dword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rbp - num ] and eax , num test eax , eax je hexvar movzx eax , byte ptr [ rip + hexvar ] xor eax , num test al , al je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp + num ] , num je hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx jne hexvar mov eax , dword ptr [ ebp - num ] or eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx jne hexvar mov eax , dword ptr [ ebp - num ] or eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] and eax , num cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] and eax , num cmp eax , num je hexvar test byte ptr [ hexvar ] , num jne hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar jmp hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw a2 , hexvar ( a2 )
push r12 mov rcx , rdx push rbp mov r12 , rdx mov rbp , rsi mov rdx , rsi mov rsi , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi call hexvar xor edx , edx test eax , eax jne hexvar mov rax , qword ptr [ r12 + hexvar ] mov rsi , rbp mov rdi , rbx mov rdx , rax call qword ptr [ rax ] xor eax , num mov edx , eax pop rbx mov eax , edx pop rbp pop r12 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar xor al , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebx + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar xor al , hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw a2 , hexvar ( a2 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar xor eax , num add esp , hexvar pop ebx ret
push r12 mov rcx , rdx push rbp mov r12 , rdx mov rbp , rsi mov rdx , rsi mov rsi , qword ptr [ rip + hexvar ] push rbx mov rbx , rdi call hexvar xor edx , edx test eax , eax jne hexvar mov rax , qword ptr [ r12 + hexvar ] mov rsi , rbp mov rdi , rbx mov rdx , rax call qword ptr [ rax ] xor eax , num mov edx , eax pop rbx mov eax , edx pop rbp pop r12 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ebx mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar xor al , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov esi , dword ptr [ esi + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , esi call hexvar add esp , hexvar xor al , hexvar and al , num movzx eax , al lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push edx push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar movzx eax , al test eax , eax setne al xor eax , num movzx eax , al and eax , num mov ebx , dword ptr [ ebp - num ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 move a0 , s0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw zero , ( v0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] call hexvar sub esp , hexvar mov dword ptr [ eax ] , num push esi call hexvar add esp , hexvar test ah , hexvar je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar sub esp , hexvar push esi call dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax js hexvar je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ eax ] , num sub esp , hexvar push esi call hexvar add esp , hexvar test ah , hexvar je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar sub esp , hexvar push esi call dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax js hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ eax ] , num sub esp , hexvar push esi call hexvar add esp , hexvar test ah , hexvar je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar sub esp , hexvar push esi call dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax js hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar mov dword ptr [ eax ] , num sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar and eax , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] call eax add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , hexvar jmp hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , hexvar add esp , hexvar pop ebx ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ eax ] , num sub esp , hexvar push esi call hexvar add esp , hexvar test ah , hexvar je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar sub esp , hexvar push esi call dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax js hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push rbp push r14 push rbx mov r14d , edx mov rbp , rsi mov rbx , rdi call hexvar mov dword ptr [ rax ] , num mov rdi , rbx call hexvar test eax , hexvar je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rdi , rbx call hexvar mov eax , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov r14d , edx mov rbp , rsi mov rbx , rdi call hexvar mov dword ptr [ rax ] , num mov rdi , rbx call hexvar test eax , hexvar je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rdi , rbx call hexvar mov eax , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov r14d , edx mov rbp , rsi mov rbx , rdi call hexvar mov dword ptr [ rax ] , num mov rdi , rbx call hexvar test eax , hexvar je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov rdi , rbx call hexvar mov eax , hexvar pop rbx pop r14 pop rbp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] bl hexvar mov r2 , r0 mov r3 , num str r3 , [ r2 ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r0 , [ sp , hexvar ] blx r3 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bge hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mvn r3 , num b hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 b hexvar ldr r0 , [ sp , hexvar ] bl hexvar mvn r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r14 push rbx test rdi , rdi je hexvar mov rbx , rdi mov r14d , num cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov edi , dword ptr [ rbx + hexvar ] cmp edi , - num je hexvar cmp dword ptr [ rbp ] , num jne hexvar mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi jne hexvar jmp hexvar xor r14d , r14d jmp hexvar test rbp , rbp je hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , r14d pop rbx pop r14 pop rbp ret
push edi push esi xor eax , eax push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] mov eax , num test edx , edx jne hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push rbp push r14 push rbx test rdi , rdi je hexvar mov rbx , rdi mov r14d , num cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov edi , dword ptr [ rbx + hexvar ] cmp edi , - num je hexvar cmp dword ptr [ rbp ] , num jne hexvar mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi jne hexvar jmp hexvar xor r14d , r14d jmp hexvar test rbp , rbp je hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , r14d pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx test rdi , rdi je hexvar mov rbx , rdi mov r14d , num cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov edi , dword ptr [ rbx + hexvar ] cmp edi , - num je hexvar cmp dword ptr [ rbp ] , num jne hexvar mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi jne hexvar jmp hexvar xor r14d , r14d jmp hexvar test rbp , rbp je hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , r14d pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx test rdi , rdi je hexvar mov rbx , rdi mov r14d , num cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rbp , qword ptr [ rbx + hexvar ] mov edi , dword ptr [ rbx + hexvar ] cmp edi , - num je hexvar cmp dword ptr [ rbp ] , num jne hexvar mov esi , num call hexvar mov edi , dword ptr [ rbx + hexvar ] call hexvar mov dword ptr [ rbx + hexvar ] , hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi jne hexvar jmp hexvar xor r14d , r14d jmp hexvar test rbp , rbp je hexvar mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbp call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , num mov eax , r14d pop rbx pop r14 pop rbp ret
push edi push esi xor eax , eax push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] mov eax , num test edx , edx jne hexvar pop ebx pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , num ] bl hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , num ] bl hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rdi + hexvar ] , num mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rdi + hexvar ] , num mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rdi + hexvar ] , num mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] mov r3 , r2 strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ r2 ] ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ r2 ] mov r3 , num strb r3 , [ fp , - num ] ldrb r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp , hexvar ] sub r3 , fp , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] mov r3 , num ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t0 , hexvar ( sp ) lw t1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a3 , hexvar lw t9 , - hexvar ( gp ) lw v0 , ( a3 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov eax , edx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test al , al jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rip + hexvar ] , rax movzx edx , byte ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] sub rsp , num push qword ptr [ rbp - hexvar ] push qword ptr [ rbp - hexvar ] push num mov r9 , rcx mov r8d , num mov ecx , num mov rdi , rax call hexvar add rsp , hexvar leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t0 , hexvar ( sp ) lw t1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a3 , hexvar lw t9 , - hexvar ( gp ) lw v0 , ( a3 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] and bl , num mov byte ptr [ ebp - hexvar ] , bl mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax ] , ebx mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ hexvar ] jmp eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , ecx mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx movzx ecx , bl mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] and bl , num mov byte ptr [ ebp - hexvar ] , bl mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar test al , num jne hexvar jmp hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , ecx mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx movzx ecx , bl mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] and bl , num mov byte ptr [ ebp - hexvar ] , bl mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar test al , num jne hexvar jmp hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ hexvar ] , ecx mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , num mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx movzx ecx , bl mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , num lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , eax call hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] mov r3 , r2 strb r3 , [ fp , - hexvar ] ldr r3 , [ fp , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , num ] str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ r2 ] ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ r2 ] mov r3 , num strb r3 , [ fp , - num ] ldrb r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp , hexvar ] sub r3 , fp , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , num ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] mov r3 , num ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax test rcx , rcx je hexvar cmp dword ptr [ rcx ] , num ja hexvar mov eax , dword ptr [ rcx + hexvar ] lea r10d , [ rax - num ] cmp r10d , num ja hexvar mov r10d , dword ptr [ rcx + hexvar ] cmp r10d , num ja hexvar cmp byte ptr [ rcx + hexvar ] , num je hexvar cmp byte ptr [ rcx + hexvar ] , num jne hexvar cmp eax , num je hexvar cmp r10d , num je hexvar mov byte ptr [ rsp + num ] , num push r9 movzx edx , dl push r8 mov r9 , rcx xor r8d , r8d xor ecx , ecx mov qword ptr [ rip + hexvar ] , rsi mov qword ptr [ rip + hexvar ] , rdi lea rax , [ rsp + hexvar ] push rax push num call hexvar add rsp , hexvar mov rsi , qword ptr [ rsp + num ] xor rsi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
sub rsp , num test rcx , rcx je hexvar cmp dword ptr [ rcx ] , num ja hexvar mov eax , dword ptr [ rcx + hexvar ] sub eax , num cmp eax , num ja hexvar cmp byte ptr [ rcx + hexvar ] , num je hexvar cmp byte ptr [ rcx + hexvar ] , num jne hexvar sub rsp , num movzx edx , dl mov qword ptr [ rip + hexvar ] , rdi push r9 push r8 mov r9 , rcx push num xor r8d , r8d xor ecx , ecx mov qword ptr [ rip + hexvar ] , rsi call hexvar add rsp , hexvar ret
push { r4 , lr } sub sp , sp , hexvar ldr r4 , [ pc , hexvar ] ldr r3 , [ r4 ] str r3 , [ sp , hexvar ] add r3 , sp , num str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) move s5 , a1 lw v0 , - hexvar ( gp ) sw s4 , hexvar ( sp ) move s4 , a0 sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lui a0 , hexvar beqz s5 , hexvar nop lw v0 , ( s4 )
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov r9 , rsp lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] mov edx , num call hexvar mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar move a2 , zero jal hexvar nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi xor edx , edx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r8 mov rdi , qword ptr [ rax ] mov rax , qword ptr [ rcx ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rax movabs rcx , hexvar movabs r8 , hexvar mov r9 , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push { r4 , lr } sub sp , sp , hexvar ldr r4 , [ pc , hexvar ] ldr r3 , [ r4 ] str r3 , [ sp , hexvar ] add r3 , sp , num str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx xor ecx , ecx sub esp , num lea edx , [ ebp - hexvar ] push edx lea edx , [ eax - hexvar ] push edx lea eax , [ eax - hexvar ] push eax push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar leave ret
sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov r9 , rsp lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] mov edx , num call hexvar mov rdx , qword ptr [ rsp + num ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov r9 , rdx lea r8 , [ rip - hexvar ] lea rcx , [ rip - hexvar ] mov edx , num mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push { r4 , lr } sub sp , sp , hexvar ldr r4 , [ pc , hexvar ] ldr r3 , [ r4 ] str r3 , [ sp , hexvar ] add r3 , sp , num str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num bl hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop beqz v0 , hexvar nop lw v0 , ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar jmp qword ptr [ rcx * num + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + hexvar ] jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + hexvar ] jmp hexvar mov rbx , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , num je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar jmp qword ptr [ rcx * num + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + hexvar ] jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + hexvar ] jmp hexvar mov rbx , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , num je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar pop rbx ret
push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] call hexvar lea ecx , [ rax - hexvar ] cmp ecx , num ja hexvar jmp qword ptr [ rcx * num + hexvar ] mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + hexvar ] jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rbx + num ] mov rbx , qword ptr [ rax + hexvar ] jmp hexvar mov rbx , qword ptr [ rbx + num ] cmp dword ptr [ rbx ] , num je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , hexvar je hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar mov esi , dword ptr [ esi + num ] cmp dword ptr [ esi ] , num jne hexvar add esi , num jmp hexvar lea esi , [ esi ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ esi + num ] mov esi , dword ptr [ eax + num ] add esi , num test esi , esi je hexvar mov edx , dword ptr [ esi ] xor eax , eax test edx , edx sete al add esp , num pop ebx pop esi ret
sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ eax ] test eax , eax sete al movzx eax , al add esp , hexvar ret
push rax call hexvar mov qword ptr [ rsp ] , rax mov esi , hexvar mov ecx , hexvar mov edx , hexvar jmp hexvar mov esi , hexvar mov eax , num nop word ptr cs : [ rax + rax ] nop cmp esi , hexvar jg hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov esi , hexvar cmove esi , edx jmp hexvar mov rsi , qword ptr [ rsp ] cmp qword ptr [ rsi ] , num mov esi , hexvar cmove esi , ecx jmp hexvar mov esi , hexvar mov eax , hexvar jmp hexvar mov esi , hexvar xor eax , eax jmp hexvar pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop beqz v0 , hexvar nop lw v0 , ( v0 ) sltiu v0 , v0 , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , - num
push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov r13 , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax movsx eax , byte ptr [ rdi ] sub eax , hexvar mov ebp , hexvar mov ebx , num cmp eax , num ja hexvar mov edx , hexvar mov rsi , rsp call hexvar mov rdx , qword ptr [ rsp ] cmp byte ptr [ rdx ] , num jne hexvar cmp rax , hexvar jle hexvar mov eax , hexvar jmp hexvar mov rsi , r12 mov rdi , rbp call hexvar test eax , eax jne hexvar mov ebx , ebx lea rax , [ rbx + rbx * num ] mov eax , dword ptr [ rax * num + hexvar ] jmp hexvar add ebx , num add rbp , hexvar cmp ebx , hexvar jne hexvar call hexvar mov ebx , eax call hexvar mov ebp , eax test ebx , ebx jle hexvar mov edi , hexvar mov ecx , num mov rsi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl setb al cmp dl , al jne hexvar lea rdi , [ r12 + num ] mov edx , hexvar mov rsi , rsp call hexvar mov rdx , qword ptr [ rsp ] cmp byte ptr [ rdx ] , num jne hexvar test rax , rax js hexvar sub ebp , ebx movsxd rdx , ebp cmp rax , rdx jg hexvar add eax , ebx jmp hexvar test ebp , ebp jle hexvar mov edi , hexvar mov ecx , num mov rsi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl setb al cmp dl , al jne hexvar lea rdi , [ r12 + num ] mov edx , hexvar mov rsi , rsp call hexvar mov rdx , qword ptr [ rsp ] cmp byte ptr [ rdx ] , num jne hexvar sub ebx , ebp movsxd rbx , ebx cmp rax , rbx jl hexvar test rax , rax jg hexvar add eax , ebp jmp hexvar mov eax , hexvar mov dword ptr [ r13 ] , eax sar eax , hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov r13 , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax movsx eax , byte ptr [ rdi ] sub eax , hexvar lea rbp , [ rip + hexvar ] mov ebx , num cmp eax , num jbe hexvar mov rsi , r12 mov rdi , rbp call hexvar test eax , eax je hexvar add ebx , num add rbp , hexvar cmp ebx , hexvar jne hexvar call hexvar mov ebp , eax call hexvar mov ebx , eax test ebp , ebp jle hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar test ebx , ebx jle hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rsi , rsp lea rdi , [ r12 + num ] mov edx , hexvar call hexvar mov rdx , qword ptr [ rsp ] cmp byte ptr [ rdx ] , num jne hexvar sub ebp , ebx movsxd rbp , ebp cmp rax , rbp jl hexvar test rax , rax jg hexvar add eax , ebx jmp hexvar mov rsi , rsp mov edx , hexvar call hexvar mov rdx , qword ptr [ rsp ] cmp byte ptr [ rdx ] , num jne hexvar cmp rax , hexvar jle hexvar mov eax , hexvar jmp hexvar mov ebx , ebx lea rdx , [ rbx + rbx * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax + rdx * num ] mov dword ptr [ r13 ] , eax sar eax , hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s4 , - hexvar ( gp ) lb v0 , ( a0 ) lw v1 , ( s4 ) addiu v0 , v0 , - hexvar sltiu v0 , v0 , hexvar sw v1 , hexvar ( sp ) bnez v0 , hexvar lui s0 , hexvar move s2 , a0 move s1 , zero addiu s0 , s0 , - hexvar b hexvar addiu s3 , zero , hexvar addiu s1 , s1 , num beq s1 , s3 , hexvar addiu s0 , s0 , hexvar lw t9 , - hexvar ( gp ) move a1 , s2 jalr t9 move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) sll v0 , s1 , num addu s1 , v0 , s1 lui v0 , hexvar sll s1 , s1 , num addiu v0 , v0 , - hexvar addu s1 , s1 , v0 lw s0 , ( s1 ) sra v0 , s0 , hexvar sw s0 , ( s5 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , num mov eax , hexvar cmovl ecx , eax mov eax , ecx add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , num mov eax , hexvar cmovl ecx , eax mov eax , ecx add esp , hexvar pop ebp ret
push r13 push r12 mov r13 , rsi push rbp push rbx xor ebx , ebx mov r12 , rdi mov ebp , hexvar sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax movsx eax , byte ptr [ rdi ] sub eax , hexvar cmp eax , num ja hexvar jmp hexvar nop dword ptr [ rax ] add ebx , num add rbp , hexvar cmp ebx , hexvar je hexvar mov rsi , r12 mov rdi , rbp call hexvar test eax , eax jne hexvar lea rax , [ rbx + rbx * num ] mov eax , dword ptr [ rax * num + hexvar ] mov dword ptr [ r13 ] , eax sar eax , hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , num mov eax , hexvar cmovl ecx , eax mov eax , ecx add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , num mov eax , hexvar cmovl ecx , eax mov eax , ecx add esp , hexvar pop ebp ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov r13 , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax movsx eax , byte ptr [ rdi ] sub eax , hexvar lea rbp , [ rip + hexvar ] mov ebx , num cmp eax , num jbe hexvar mov rsi , r12 mov rdi , rbp call hexvar test eax , eax je hexvar add ebx , num add rbp , hexvar cmp ebx , hexvar jne hexvar call hexvar mov ebp , eax call hexvar mov ebx , eax test ebp , ebp jle hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al je hexvar test ebx , ebx jle hexvar mov ecx , num lea rdi , [ rip + hexvar ] mov rsi , r12 repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rsi , rsp lea rdi , [ r12 + num ] mov edx , hexvar call hexvar mov rdx , qword ptr [ rsp ] cmp byte ptr [ rdx ] , num jne hexvar sub ebp , ebx movsxd rbp , ebp cmp rax , rbp jl hexvar test rax , rax jg hexvar add eax , ebx jmp hexvar mov rsi , rsp mov edx , hexvar call hexvar mov rdx , qword ptr [ rsp ] cmp byte ptr [ rdx ] , num jne hexvar cmp rax , hexvar jle hexvar mov eax , hexvar jmp hexvar mov ebx , ebx lea rdx , [ rbx + rbx * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rax + rdx * num ] mov dword ptr [ r13 ] , eax sar eax , hexvar mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , num mov eax , hexvar cmovl ecx , eax mov eax , ecx add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a2 ) addiu a2 , zero , hexvar move a1 , a0 move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sltiu v0 , v0 , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push hexvar push dword ptr [ ebp + num ] push edx mov ebx , eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push hexvar push dword ptr [ ebp + num ] push edx mov ebx , eax call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rdx + hexvar ] mov edx , hexvar call hexvar test eax , eax sete al add rsp , num ret
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rdx + hexvar ] mov edx , hexvar call hexvar test eax , eax sete al add rsp , num ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push hexvar push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar test eax , eax sete al add esp , hexvar pop ebx ret
sub rsp , num mov rsi , rdi mov rdi , qword ptr [ rdx + hexvar ] mov edx , hexvar call hexvar test eax , eax sete al add rsp , num ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp + hexvar ] cmp eax , ecx jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al movzx eax , cl cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax ] , cl mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp + hexvar ] cmp eax , ecx jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al movzx eax , cl cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax ] , cl mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al call hexvar mov dword ptr [ eax ] , num sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] cmp byte ptr [ ebp - hexvar ] , al jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ ebp + num ] , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , al cmp dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax ] , dl mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] bl hexvar mov r2 , r0 mov r3 , num str r3 , [ r2 ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] bl hexvar mov r3 , r0 ldr r3 , [ r3 ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldrb r3 , [ r3 ] ldrb r2 , [ fp , num ] cmp r2 , r3 bne hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar ldr r3 , [ fp , - num ] and r3 , r3 , hexvar mov r2 , r3 ldr r3 , [ fp , - num ] cmp r3 , r2 beq hexvar mvn r3 , num b hexvar ldr r3 , [ fp , - num ] and r2 , r3 , hexvar ldr r3 , [ fp , - hexvar ] strb r2 , [ r3 ] mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp + hexvar ] cmp eax , ecx jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al movzx eax , cl cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax ] , cl mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw zero , ( v0 ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al call hexvar mov dword ptr [ eax ] , num sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movzx eax , byte ptr [ eax ] cmp byte ptr [ ebp - hexvar ] , al jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ ebp + num ] , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] movzx eax , al cmp dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax ] , dl mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp + hexvar ] cmp eax , ecx jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al movzx eax , cl cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax ] , cl mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw zero , ( v0 ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar cmp dword ptr [ eax ] , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp + hexvar ] cmp eax , ecx jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al movzx eax , cl cmp eax , dword ptr [ ebp - hexvar ] je hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , al mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax ] , cl mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push ebp mov ebp , esp call hexvar add eax , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp call hexvar add eax , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rax call hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp call hexvar add eax , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp call hexvar add eax , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp call hexvar add eax , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] ldr lr , [ pc , hexvar ] ldr r2 , [ r4 ] ldr r6 , [ lr ] cmp r2 , num beq hexvar mov ip , num mov r3 , r6 mov r5 , ip ldr r0 , [ lr , num ] ldr r1 , [ r3 , num ] add r3 , r3 , hexvar cmp r1 , num moveq ip , num streq r5 , [ r3 , - hexvar ] addeq r0 , r0 , ip subs r2 , r2 , num bne hexvar cmp ip , num strne r0 , [ lr , num ] ldrb r3 , [ r4 , num ] cmp r3 , num popeq { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + num ] , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] cmp dword ptr [ eax + num ] , num jne hexvar mov dword ptr [ hexvar ] , num jmp hexvar mov dword ptr [ hexvar ] , num jmp hexvar add esp , num pop ebp ret
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] ldr lr , [ pc , hexvar ] ldr r2 , [ r4 ] ldr r6 , [ lr ] cmp r2 , num beq hexvar mov ip , num mov r3 , r6 mov r5 , ip ldr r0 , [ lr , num ] ldr r1 , [ r3 , num ] add r3 , r3 , hexvar cmp r1 , num moveq ip , num streq r5 , [ r3 , - hexvar ] addeq r0 , r0 , ip subs r2 , r2 , num bne hexvar cmp ip , num strne r0 , [ lr , num ] ldrb r3 , [ r4 , num ] cmp r3 , num popeq { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp lui v0 , hexvar lw v0 , - hexvar ( v0 ) sw v0 , ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) sw v0 , num ( fp ) b hexvar nop lw v0 , num ( fp ) lw v1 , num ( v0 ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lw v0 , num ( fp ) sw zero , num ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) addiu v1 , v0 , num lui v0 , hexvar sw v1 , - hexvar ( v0 ) lw v0 , ( fp ) addiu v0 , v0 , - num sw v0 , ( fp ) lw v0 , num ( fp ) addiu v0 , v0 , hexvar sw v0 , num ( fp ) lw v0 , ( fp ) bnez v0 , hexvar nop lui v0 , hexvar lbu v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v1 , num ( v0 ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lui v0 , hexvar sw zero , - hexvar ( v0 ) b hexvar nop lui v0 , hexvar addiu v1 , zero , num sw v1 , - hexvar ( v0 ) nop move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + num ] , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ hexvar ] sub eax , hexvar add eax , num add eax , hexvar mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] cmp dword ptr [ eax + num ] , num jne hexvar mov dword ptr [ hexvar ] , num jmp hexvar mov dword ptr [ hexvar ] , num jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , edx jmp hexvar mov edx , dword ptr [ ebp - num ] mov edx , dword ptr [ edx + num ] cmp edx , num jne hexvar mov edx , dword ptr [ ebp - num ] mov dword ptr [ edx + num ] , num mov edx , dword ptr [ eax + hexvar ] add edx , num mov dword ptr [ eax + hexvar ] , edx sub dword ptr [ ebp - num ] , num add dword ptr [ ebp - num ] , hexvar cmp dword ptr [ ebp - num ] , num jne hexvar movzx edx , byte ptr [ eax + hexvar ] test dl , dl je hexvar mov edx , dword ptr [ eax + hexvar ] mov edx , dword ptr [ edx + num ] cmp edx , num jne hexvar mov dword ptr [ eax + hexvar ] , num jmp hexvar mov dword ptr [ eax + hexvar ] , num nop leave ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax + num ] , num jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ ebp - num ] , eax jmp hexvar test byte ptr [ hexvar ] , num je hexvar mov eax , dword ptr [ hexvar ] cmp dword ptr [ eax + num ] , num jne hexvar mov dword ptr [ hexvar ] , num jmp hexvar mov dword ptr [ hexvar ] , num jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + num ] sub eax , num sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ hexvar ] inc eax mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] dec eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ hexvar ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax + num ] sub eax , num sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp edx mov dword ptr [ hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ edx ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] mov dword ptr [ ecx + num ] , num mov eax , dword ptr [ hexvar ] add eax , num mov dword ptr [ hexvar ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] add ecx , hexvar mov dword ptr [ eax ] , ecx jmp hexvar mov al , byte ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num jne hexvar mov dword ptr [ hexvar ] , num jmp hexvar mov dword ptr [ hexvar ] , num jmp hexvar jmp hexvar mov esp , ebp pop ebp ret
lui v0 , hexvar lw v1 , hexvar ( v0 ) lui v0 , hexvar beqz v1 , hexvar lw t1 , hexvar ( v0 ) lui v0 , hexvar lw a2 , hexvar ( v0 ) move v0 , t1 move a3 , zero addiu a1 , zero , num b hexvar addiu t0 , zero , num addiu v1 , v1 , - num beqz v1 , hexvar addiu v0 , v0 , hexvar lw a0 , num ( v0 ) bne a0 , a1 , hexvar nop sw zero , num ( v0 ) addiu a2 , a2 , num b hexvar move a3 , t0 bnez a3 , hexvar lui v0 , hexvar lui v0 , hexvar lbu v0 , hexvar ( v0 ) beqz v0 , hexvar addiu v0 , zero , num lw v1 , num ( t1 ) beq v1 , v0 , hexvar lui v0 , hexvar addiu v1 , zero , num sw v1 , hexvar ( v0 ) jr ra nop b hexvar sw a2 , hexvar ( v0 ) jr ra sw zero , hexvar ( v0 )
push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] test ebx , ebx je hexvar xor edx , edx mov eax , hexvar call hexvar test eax , eax je hexvar mov dword ptr [ eax + hexvar ] , ebx add esp , num pop ebx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , hexvar mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , esi add esp , num pop ebx pop esi ret
beqz a1 , hexvar move a2 , zero addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 addiu a1 , zero , hexvar jal hexvar nop beqz v0 , hexvar lw ra , hexvar ( sp ) sw s0 , hexvar ( v0 )
test rsi , rsi je hexvar push rbx mov rbx , rsi mov edx , num mov esi , hexvar call hexvar test rax , rax je hexvar mov qword ptr [ rax + hexvar ] , rbx pop rbx ret
push { r4 , lr } subs r4 , r1 , num beq hexvar mov r0 , hexvar bl hexvar mov r3 , num mov r1 , hexvar strb r3 , [ r0 , num ] strb r3 , [ r0 , num ] strb r3 , [ r0 , hexvar ] strb r3 , [ r0 , hexvar ] str r3 , [ r0 , num ] str r4 , [ r0 , hexvar ] str r1 , [ r0 ] pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
beqz a1 , hexvar nop addiu sp , sp , - hexvar addiu a0 , zero , hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) jal hexvar move a1 , zero beqz v0 , hexvar lw ra , hexvar ( sp ) sw s0 , hexvar ( v0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra move v0 , zero
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num push num push hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar xor edx , edx mov rdi , qword ptr [ rbp - hexvar ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , lr } subs r4 , r1 , num beq hexvar mov r0 , hexvar bl hexvar mov r3 , num mov r1 , hexvar strb r3 , [ r0 , num ] strb r3 , [ r0 , num ] strb r3 , [ r0 , hexvar ] strb r3 , [ r0 , hexvar ] str r3 , [ r0 , num ] str r4 , [ r0 , hexvar ] str r1 , [ r0 ] pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop move a2 , zero addiu a1 , zero , hexvar lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar xor esi , esi mov r9d , esi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] lea r8 , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar call hexvar mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push r12 push rbp mov r12d , esi push rbx mov rbp , rdi mov rbx , rdx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] xor r9d , r9d mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] mov rdx , rbx call hexvar mov rdi , qword ptr [ rsp + hexvar ] mov ebx , eax call hexvar call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar mov eax , ebx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar xor esi , esi mov r9d , esi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] lea r8 , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar call hexvar mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar xor esi , esi mov r9d , esi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] lea r8 , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar call hexvar mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar xor esi , esi mov r9d , esi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] lea r8 , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar call hexvar mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar xor esi , esi mov r9d , esi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] lea r8 , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar call hexvar mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push r12 push rbp mov r12d , esi push rbx mov rbp , rdi mov rbx , rdx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar lea rcx , [ rsp + hexvar ] lea r8 , [ rsp + hexvar ] xor r9d , r9d mov rdx , rbx mov esi , r12d mov rdi , rbp call hexvar mov esi , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] mov rdx , rbx call hexvar mov rdi , qword ptr [ rsp + hexvar ] mov ebx , eax call hexvar call hexvar mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar mov eax , ebx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar xor esi , esi mov r9d , esi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] lea r8 , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar call hexvar mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar xor esi , esi mov r9d , esi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] lea r8 , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar call hexvar mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar xor esi , esi mov r9d , esi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] lea rcx , [ rbp - hexvar ] lea r8 , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar and al , num mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar call hexvar mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi cmp dword ptr [ eax ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ecx ] mov edi , dword ptr [ eax ] mov dword ptr [ edi + num ] , esi mov eax , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
call hexvar add eax , hexvar mov edx , dword ptr [ esp + num ] lea eax , [ eax + hexvar ] test edx , edx cmove edx , eax mov eax , dword ptr [ edx + num ] mov ecx , dword ptr [ esp + num ] mov dword ptr [ edx + num ] , ecx ret
call hexvar add eax , hexvar mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + num ] lea eax , [ eax + hexvar ] test edx , edx cmove edx , eax mov eax , dword ptr [ edx + num ] mov dword ptr [ edx + num ] , ecx ret
call hexvar add eax , hexvar mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ esp + num ] lea eax , [ eax + hexvar ] test edx , edx cmove edx , eax mov eax , dword ptr [ edx + num ] mov dword ptr [ edx + num ] , ecx ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar lea eax , [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar lea eax , [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - num ] leave ret
call hexvar add eax , hexvar mov edx , dword ptr [ esp + num ] lea eax , [ eax + hexvar ] test edx , edx cmove edx , eax mov eax , dword ptr [ edx + num ] mov ecx , dword ptr [ esp + num ] mov dword ptr [ edx + num ] , ecx ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] mov r0 , r3 add sp , fp , num pop { fp } bx lr andeq fp , r4 , r8 , lsr num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push r13 push r12 push rbp push rbx sub rsp , num cmp qword ptr [ rip + hexvar ] , num je hexvar test rdi , rdi mov rbx , rdi lea rbp , [ rip + hexvar ] jne hexvar jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rax mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test rax , rax jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov r13 , qword ptr [ rbx ] mov r12 , qword ptr [ rip + hexvar ] mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax mov r8 , r13 xor eax , eax mov rcx , r12 mov esi , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov edi , num call hexvar nop word ptr cs : [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , qword ptr [ rip + hexvar ] mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax mov rcx , rbx xor eax , eax mov esi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push esi push edx push eax call hexvar add esp , hexvar call hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov edi , dword ptr [ eax ] lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] push edi push esi push edx push eax call hexvar add esp , hexvar call hexvar jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar nop lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar test esi , esi lea edi , [ ebx - hexvar ] je hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar nop lea esi , [ esi ] mov edx , dword ptr [ ebx + hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ edx + hexvar ] , eax mov esi , dword ptr [ esi + num ] test esi , esi je hexvar sub esp , num push edi push dword ptr [ esi ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esi ] sub esp , num mov ebp , dword ptr [ eax ] lea eax , [ ebx - hexvar ] mov dword ptr [ esp + num ] , edx push num push eax push num call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edx push ebp push eax push num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar lea eax , [ ebx + hexvar ] add esp , hexvar mov eax , dword ptr [ eax ] test eax , eax jne hexvar sub esp , hexvar push num call hexvar nop lea esi , [ esi ] lea eax , [ ebx + hexvar ] sub esp , num mov esi , dword ptr [ eax ] lea eax , [ ebx - hexvar ] push num push eax push num call hexvar push esi push eax mov eax , dword ptr [ ebx + hexvar ] push num push dword ptr [ eax ] call hexvar lea eax , [ ebx + hexvar ] add esp , hexvar mov edx , dword ptr [ eax ] test edx , edx je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r13 push r12 push rbp push rbx sub rsp , num cmp qword ptr [ rip + hexvar ] , num je hexvar test rdi , rdi mov rbx , rdi lea rbp , [ rip + hexvar ] jne hexvar jmp hexvar nop dword ptr [ rax ] mov rdx , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rdx + hexvar ] mov qword ptr [ rax + hexvar ] , rcx mov qword ptr [ rdx + hexvar ] , rax mov rbx , qword ptr [ rbx + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] mov rsi , rbp call hexvar test rax , rax jne hexvar lea rsi , [ rip + hexvar ] xor edi , edi mov r13 , qword ptr [ rbx ] mov r12 , qword ptr [ rip + hexvar ] mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax mov r8 , r13 xor eax , eax mov rcx , r12 mov esi , num call hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov edi , num call hexvar nop word ptr cs : [ rax + rax ] lea rsi , [ rip + hexvar ] xor edi , edi mov rbx , qword ptr [ rip + hexvar ] mov edx , num call hexvar mov rdi , qword ptr [ rip + hexvar ] mov rdx , rax mov rcx , rbx xor eax , eax mov esi , num call hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar test esi , esi lea edi , [ ebx - hexvar ] je hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar nop lea esi , [ esi ] mov edx , dword ptr [ ebx + hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ edx + hexvar ] , eax mov esi , dword ptr [ esi + num ] test esi , esi je hexvar sub esp , num push edi push dword ptr [ esi ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esi ] sub esp , num mov ebp , dword ptr [ eax ] lea eax , [ ebx - hexvar ] mov dword ptr [ esp + num ] , edx push num push eax push num call hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edx push ebp push eax push num mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] call hexvar lea eax , [ ebx + hexvar ] add esp , hexvar mov eax , dword ptr [ eax ] test eax , eax jne hexvar sub esp , hexvar push num call hexvar nop lea esi , [ esi ] lea eax , [ ebx + hexvar ] sub esp , num mov esi , dword ptr [ eax ] lea eax , [ ebx - hexvar ] push num push eax push num call hexvar push esi push eax mov eax , dword ptr [ ebx + hexvar ] push num push dword ptr [ eax ] call hexvar lea eax , [ ebx + hexvar ] add esp , hexvar mov edx , dword ptr [ eax ] test edx , edx je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ ebx + hexvar ] , num je hexvar test esi , esi je hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar lea eax , [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , num push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push esi push eax push num mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a2 , v0 move a1 , v1 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v1 , ( v0 )
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov r12 , qword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , r12 mov rdx , rbx mov rdi , rax mov eax , num call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop add rsp , hexvar pop rbx pop r12 pop rbp ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] test rax , rax jne hexvar mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rip + hexvar ] mov rdx , rbx mov rsi , rcx mov rdi , rax mov eax , num call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov r12 , qword ptr [ rax ] mov rbx , qword ptr [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rsi , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , r12 mov rdx , rbx mov rdi , rax mov eax , num call hexvar call hexvar jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar nop add rsp , hexvar pop rbx pop r12 pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s2 , hexvar ( sp ) lui s2 , hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( s2 ) beqz v0 , hexvar lw v0 , - hexvar ( gp ) beqz a0 , hexvar move s0 , a0 lui s3 , hexvar lw s6 , - hexvar ( gp ) lui s1 , hexvar lw s5 , - hexvar ( gp ) addiu s3 , s3 , - hexvar b hexvar lw s4 , - hexvar ( gp ) lw v1 , hexvar ( s2 ) lw a0 , hexvar ( v1 ) sw a0 , hexvar ( v0 ) sw v0 , hexvar ( v1 ) lw s0 , num ( s0 ) beqz s0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , s1 , - hexvar bal hexvar lw a0 , ( s0 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax xor ebp , ebp test rdi , rdi je hexvar mov r15d , ecx mov r14 , rdx mov r12d , esi mov rbx , rdi test esi , hexvar je hexvar mov rdi , qword ptr [ rbx ] call hexvar xor ebp , ebp xor edi , edi mov rsi , r14 mov edx , r15d mov ecx , r12d mov r8d , eax call hexvar test rax , rax je hexvar mov r13 , rax mov eax , dword ptr [ rax + num ] mov dword ptr [ rsp + num ] , eax call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar cmp r15d , - num je hexvar mov edi , r12d call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r14 mov edx , r15d call hexvar mov dword ptr [ rsp + num ] , r12d test eax , eax je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov dword ptr [ rbx + num ] , num mov ebp , num test r12d , r12d je hexvar call hexvar test rax , rax je hexvar test r12d , hexvar jne hexvar cmp r15d , - num jne hexvar mov rdi , rax mov esi , r12d mov rdx , r14 mov r14 , rax call hexvar test eax , eax mov rsi , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar xor r13d , r13d mov dword ptr [ rsp + num ] , num call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar mov rdi , rax mov esi , dword ptr [ rsp + num ] mov rdx , r13 mov r14 , rax call hexvar mov rsi , r14 mov rdi , qword ptr [ rbx + hexvar ] call hexvar test eax , eax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) move s4 , a3 move s3 , a2 move s1 , a1 andi s2 , a1 , hexvar bnez s2 , hexvar move s0 , a0 addiu v0 , zero , - num bne a3 , v0 , hexvar move s6 , s2 move s5 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , num ( s0 )
push ebp push edi xor ebp , ebp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esp + hexvar ] and eax , hexvar mov dword ptr [ esp + hexvar ] , eax jne hexvar cmp dword ptr [ esp + hexvar ] , - num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov ebp , dword ptr [ esp + hexvar ] jmp hexvar lea esi , [ esi ] sub esp , hexvar push dword ptr [ esi ] call hexvar mov dword ptr [ esp ] , eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar mov ebp , dword ptr [ eax + num ] call hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , num test edx , edx jne hexvar mov ebp , num add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax xor ebp , ebp test rdi , rdi je hexvar mov r15d , ecx mov r14 , rdx mov r12d , esi mov rbx , rdi test esi , hexvar je hexvar mov rdi , qword ptr [ rbx ] call hexvar xor ebp , ebp xor edi , edi mov rsi , r14 mov edx , r15d mov ecx , r12d mov r8d , eax call hexvar test rax , rax je hexvar mov r13 , rax mov eax , dword ptr [ rax + num ] mov dword ptr [ rsp + num ] , eax call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar cmp r15d , - num je hexvar mov edi , r12d call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r14 mov edx , r15d call hexvar mov dword ptr [ rsp + num ] , r12d test eax , eax je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov dword ptr [ rbx + num ] , num mov ebp , num test r12d , r12d je hexvar call hexvar test rax , rax je hexvar test r12d , hexvar jne hexvar cmp r15d , - num jne hexvar mov rdi , rax mov esi , r12d mov rdx , r14 mov r14 , rax call hexvar test eax , eax mov rsi , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar xor r13d , r13d mov dword ptr [ rsp + num ] , num call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar mov rdi , rax mov esi , dword ptr [ rsp + num ] mov rdx , r13 mov r14 , rax call hexvar mov rsi , r14 mov rdi , qword ptr [ rbx + hexvar ] call hexvar test eax , eax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax xor ebp , ebp test rdi , rdi je hexvar mov r15d , ecx mov r14 , rdx mov r12d , esi mov rbx , rdi test esi , hexvar je hexvar mov rdi , qword ptr [ rbx ] call hexvar xor ebp , ebp xor edi , edi mov rsi , r14 mov edx , r15d mov ecx , r12d mov r8d , eax call hexvar test rax , rax je hexvar mov r13 , rax mov eax , dword ptr [ rax + num ] mov dword ptr [ rsp + num ] , eax call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar cmp r15d , - num je hexvar mov edi , r12d call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r14 mov edx , r15d call hexvar mov dword ptr [ rsp + num ] , r12d test eax , eax je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov dword ptr [ rbx + num ] , num mov ebp , num test r12d , r12d je hexvar call hexvar test rax , rax je hexvar test r12d , hexvar jne hexvar cmp r15d , - num jne hexvar mov rdi , rax mov esi , r12d mov rdx , r14 mov r14 , rax call hexvar test eax , eax mov rsi , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar xor r13d , r13d mov dword ptr [ rsp + num ] , num call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar mov rdi , rax mov esi , dword ptr [ rsp + num ] mov rdx , r13 mov r14 , rax call hexvar mov rsi , r14 mov rdi , qword ptr [ rbx + hexvar ] call hexvar test eax , eax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , num test esi , esi je hexvar mov ebp , dword ptr [ esp + hexvar ] and ebp , hexvar jne hexvar cmp dword ptr [ esp + hexvar ] , - num jne hexvar mov dword ptr [ esp + num ] , ebp mov edi , num call hexvar mov dword ptr [ esi + num ] , eax test eax , eax je hexvar mov dword ptr [ esi + num ] , num mov eax , num cmp dword ptr [ esp + hexvar ] , num je hexvar call hexvar mov dword ptr [ esp + hexvar ] , eax test eax , eax je hexvar test ebp , ebp jne hexvar cmp dword ptr [ esp + hexvar ] , - num je hexvar sub esp , num push edi push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esi + num ] call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax xor ebp , ebp test rdi , rdi je hexvar mov r15d , ecx mov r14 , rdx mov r12d , esi mov rbx , rdi test esi , hexvar je hexvar mov rdi , qword ptr [ rbx ] call hexvar xor ebp , ebp xor edi , edi mov rsi , r14 mov edx , r15d mov ecx , r12d mov r8d , eax call hexvar test rax , rax je hexvar mov r13 , rax mov eax , dword ptr [ rax + num ] mov dword ptr [ rsp + num ] , eax call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar cmp r15d , - num je hexvar mov edi , r12d call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r14 mov edx , r15d call hexvar mov dword ptr [ rsp + num ] , r12d test eax , eax je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov dword ptr [ rbx + num ] , num mov ebp , num test r12d , r12d je hexvar call hexvar test rax , rax je hexvar test r12d , hexvar jne hexvar cmp r15d , - num jne hexvar mov rdi , rax mov esi , r12d mov rdx , r14 mov r14 , rax call hexvar test eax , eax mov rsi , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar xor r13d , r13d mov dword ptr [ rsp + num ] , num call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar mov rdi , rax mov esi , dword ptr [ rsp + num ] mov rdx , r13 mov r14 , rax call hexvar mov rsi , r14 mov rdi , qword ptr [ rbx + hexvar ] call hexvar test eax , eax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax xor ebp , ebp test rdi , rdi je hexvar mov r15d , ecx mov r14 , rdx mov r12d , esi mov rbx , rdi test esi , hexvar je hexvar mov rdi , qword ptr [ rbx ] call hexvar xor ebp , ebp xor edi , edi mov rsi , r14 mov edx , r15d mov ecx , r12d mov r8d , eax call hexvar test rax , rax je hexvar mov r13 , rax mov eax , dword ptr [ rax + num ] mov dword ptr [ rsp + num ] , eax call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar cmp r15d , - num je hexvar mov edi , r12d call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r14 mov edx , r15d call hexvar mov dword ptr [ rsp + num ] , r12d test eax , eax je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov dword ptr [ rbx + num ] , num mov ebp , num test r12d , r12d je hexvar call hexvar test rax , rax je hexvar test r12d , hexvar jne hexvar cmp r15d , - num jne hexvar mov rdi , rax mov esi , r12d mov rdx , r14 mov r14 , rax call hexvar test eax , eax mov rsi , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar xor r13d , r13d mov dword ptr [ rsp + num ] , num call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar mov rdi , rax mov esi , dword ptr [ rsp + num ] mov rdx , r13 mov r14 , rax call hexvar mov rsi , r14 mov rdi , qword ptr [ rbx + hexvar ] call hexvar test eax , eax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax xor ebp , ebp test rdi , rdi je hexvar mov r15d , ecx mov r14 , rdx mov r12d , esi mov rbx , rdi test esi , hexvar je hexvar mov rdi , qword ptr [ rbx ] call hexvar xor ebp , ebp xor edi , edi mov rsi , r14 mov edx , r15d mov ecx , r12d mov r8d , eax call hexvar test rax , rax je hexvar mov r13 , rax mov eax , dword ptr [ rax + num ] mov dword ptr [ rsp + num ] , eax call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar cmp r15d , - num je hexvar mov edi , r12d call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r14 mov edx , r15d call hexvar mov dword ptr [ rsp + num ] , r12d test eax , eax je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov dword ptr [ rbx + num ] , num mov ebp , num test r12d , r12d je hexvar call hexvar test rax , rax je hexvar test r12d , hexvar jne hexvar cmp r15d , - num jne hexvar mov rdi , rax mov esi , r12d mov rdx , r14 mov r14 , rax call hexvar test eax , eax mov rsi , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar xor r13d , r13d mov dword ptr [ rsp + num ] , num call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar mov rdi , rax mov esi , dword ptr [ rsp + num ] mov rdx , r13 mov r14 , rax call hexvar mov rsi , r14 mov rdi , qword ptr [ rbx + hexvar ] call hexvar test eax , eax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax xor ebp , ebp test rdi , rdi je hexvar mov r15d , ecx mov r14 , rdx mov r12d , esi mov rbx , rdi test esi , hexvar je hexvar mov rdi , qword ptr [ rbx ] call hexvar xor ebp , ebp xor edi , edi mov rsi , r14 mov edx , r15d mov ecx , r12d mov r8d , eax call hexvar test rax , rax je hexvar mov r13 , rax mov eax , dword ptr [ rax + num ] mov dword ptr [ rsp + num ] , eax call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar cmp r15d , - num je hexvar mov edi , r12d call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , rax mov rsi , r14 mov edx , r15d call hexvar mov dword ptr [ rsp + num ] , r12d test eax , eax je hexvar call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov dword ptr [ rbx + num ] , num mov ebp , num test r12d , r12d je hexvar call hexvar test rax , rax je hexvar test r12d , hexvar jne hexvar cmp r15d , - num jne hexvar mov rdi , rax mov esi , r12d mov rdx , r14 mov r14 , rax call hexvar test eax , eax mov rsi , r14 jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar xor r13d , r13d mov dword ptr [ rsp + num ] , num call hexvar mov qword ptr [ rbx + hexvar ] , rax test rax , rax jne hexvar jmp hexvar mov rdi , rax mov esi , dword ptr [ rsp + num ] mov rdx , r13 mov r14 , rax call hexvar mov rsi , r14 mov rdi , qword ptr [ rbx + hexvar ] call hexvar test eax , eax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s5 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw s2 , ( a0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov r12 , qword ptr [ rdi ] cmp dword ptr [ r12 + num ] , num je hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov r15 , rax mov qword ptr [ rsp + num ] , rbp mov rdi , qword ptr [ r12 ] call hexvar test eax , eax jle hexvar xor ebx , ebx mov r14d , hexvar xor r13d , r13d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r12 ] mov esi , ebx call hexvar mov rbp , rax cmp dword ptr [ rax + hexvar ] , r14d je hexvar call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar mov r14d , dword ptr [ rbp + hexvar ] mov rdi , r13 mov rsi , rbp call hexvar test eax , eax je hexvar add ebx , num mov rdi , qword ptr [ r12 ] call hexvar cmp ebx , eax jl hexvar mov rdi , rsp mov edx , hexvar xor esi , esi mov ecx , hexvar mov r8d , hexvar call hexvar mov r15d , eax mov rdi , qword ptr [ r12 + hexvar ] movsxd rsi , eax call hexvar test eax , eax je hexvar mov rax , qword ptr [ r12 + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsp + hexvar ] , rax mov rdi , rsp lea rsi , [ rsp + hexvar ] mov edx , hexvar mov ecx , hexvar mov r8d , hexvar call hexvar mov rdi , qword ptr [ rsp ] mov esi , hexvar call hexvar mov dword ptr [ r12 + num ] , num test r15d , r15d js hexvar mov rdi , r12 call hexvar test eax , eax mov rbp , qword ptr [ rsp + num ] js hexvar mov rax , qword ptr [ r12 + hexvar ] mov r15 , qword ptr [ rax ] test rbp , rbp je hexvar mov rdi , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] movsxd rbx , r15d mov rdx , rbx call hexvar add qword ptr [ rbp ] , rbx jmp hexvar xor r15d , r15d jmp hexvar mov r15 , qword ptr [ rsp ] mov esi , hexvar mov rdi , r15 call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov r15d , hexvar mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jns hexvar mov eax , dword ptr [ esp + hexvar ] jmp hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push ecx push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] add edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push r15 push r14 push rbx mov r14 , rsi mov rbx , qword ptr [ rdi ] cmp dword ptr [ rbx + num ] , num je hexvar mov rdi , rbx call hexvar test eax , eax js hexvar mov rdi , rbx call hexvar test eax , eax js hexvar mov rax , qword ptr [ rbx + hexvar ] mov r15 , qword ptr [ rax ] test r14 , r14 je hexvar mov rdi , qword ptr [ r14 ] mov rsi , qword ptr [ rax + num ] movsxd rbx , r15d mov rdx , rbx call hexvar add qword ptr [ r14 ] , rbx jmp hexvar mov r15d , eax mov eax , r15d pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s6 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw s6 , - hexvar ( gp ) lw s2 , ( a0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ eax ] cmp dword ptr [ ebp + num ] , num jne hexvar mov eax , dword ptr [ ebp + num ] mov edi , dword ptr [ eax ] mov esi , edi mov ebp , dword ptr [ esp + hexvar ] test ebp , ebp je hexvar sub esp , num push edi push dword ptr [ eax + num ] push dword ptr [ ebp ] call hexvar add dword ptr [ ebp ] , edi add esp , hexvar mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s6 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw s6 , - hexvar ( gp ) lw s2 , ( a0 ) sw s5 , hexvar ( sp ) move s5 , a1 sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s6 ) lw v0 , num ( s2 ) sw v1 , hexvar ( sp ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) lw v0 , num ( s2 ) beqz s5 , hexvar lw s0 , ( v0 ) lw t9 , - hexvar ( gp ) move a2 , s0 lw a1 , num ( v0 ) jalr t9 lw a0 , ( s5 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov r12 , qword ptr [ rdi ] cmp dword ptr [ r12 + num ] , num je hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov r15 , rax mov qword ptr [ rsp + num ] , rbp mov rdi , qword ptr [ r12 ] call hexvar test eax , eax jle hexvar xor ebx , ebx mov r14d , hexvar xor r13d , r13d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r12 ] mov esi , ebx call hexvar mov rbp , rax cmp dword ptr [ rax + hexvar ] , r14d je hexvar call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar mov r14d , dword ptr [ rbp + hexvar ] mov rdi , r13 mov rsi , rbp call hexvar test eax , eax je hexvar add ebx , num mov rdi , qword ptr [ r12 ] call hexvar cmp ebx , eax jl hexvar mov rdi , rsp mov edx , hexvar xor esi , esi mov ecx , hexvar mov r8d , hexvar call hexvar mov r15d , eax mov rdi , qword ptr [ r12 + hexvar ] movsxd rsi , eax call hexvar test eax , eax je hexvar mov rax , qword ptr [ r12 + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsp + hexvar ] , rax mov rdi , rsp lea rsi , [ rsp + hexvar ] mov edx , hexvar mov ecx , hexvar mov r8d , hexvar call hexvar mov rdi , qword ptr [ rsp ] mov esi , hexvar call hexvar mov dword ptr [ r12 + num ] , num test r15d , r15d js hexvar mov rdi , r12 call hexvar test eax , eax mov rbp , qword ptr [ rsp + num ] js hexvar mov rax , qword ptr [ r12 + hexvar ] mov r15 , qword ptr [ rax ] test rbp , rbp je hexvar mov rdi , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] movsxd rbx , r15d mov rdx , rbx call hexvar add qword ptr [ rbp ] , rbx jmp hexvar xor r15d , r15d jmp hexvar mov r15 , qword ptr [ rsp ] mov esi , hexvar mov rdi , r15 call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov r15d , hexvar mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov r12 , qword ptr [ rdi ] cmp dword ptr [ r12 + num ] , num je hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov r15 , rax mov qword ptr [ rsp + num ] , rbp mov rdi , qword ptr [ r12 ] call hexvar test eax , eax jle hexvar xor ebx , ebx mov r14d , hexvar xor r13d , r13d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r12 ] mov esi , ebx call hexvar mov rbp , rax cmp dword ptr [ rax + hexvar ] , r14d je hexvar call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar mov r14d , dword ptr [ rbp + hexvar ] mov rdi , r13 mov rsi , rbp call hexvar test eax , eax je hexvar add ebx , num mov rdi , qword ptr [ r12 ] call hexvar cmp ebx , eax jl hexvar mov rdi , rsp mov edx , hexvar xor esi , esi mov ecx , hexvar mov r8d , hexvar call hexvar mov r15d , eax mov rdi , qword ptr [ r12 + hexvar ] movsxd rsi , eax call hexvar test eax , eax je hexvar mov rax , qword ptr [ r12 + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsp + hexvar ] , rax mov rdi , rsp lea rsi , [ rsp + hexvar ] mov edx , hexvar mov ecx , hexvar mov r8d , hexvar call hexvar mov rdi , qword ptr [ rsp ] mov esi , hexvar call hexvar mov dword ptr [ r12 + num ] , num test r15d , r15d js hexvar mov rdi , r12 call hexvar test eax , eax mov rbp , qword ptr [ rsp + num ] js hexvar mov rax , qword ptr [ r12 + hexvar ] mov r15 , qword ptr [ rax ] test rbp , rbp je hexvar mov rdi , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] movsxd rbx , r15d mov rdx , rbx call hexvar add qword ptr [ rbp ] , rbx jmp hexvar xor r15d , r15d jmp hexvar mov r15 , qword ptr [ rsp ] mov esi , hexvar mov rdi , r15 call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov r15d , hexvar mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , rsi mov r12 , qword ptr [ rdi ] cmp dword ptr [ r12 + num ] , num je hexvar call hexvar mov qword ptr [ rsp ] , rax test rax , rax je hexvar mov r15 , rax mov qword ptr [ rsp + num ] , rbp mov rdi , qword ptr [ r12 ] call hexvar test eax , eax jle hexvar xor ebx , ebx mov r14d , hexvar xor r13d , r13d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] mov rdi , qword ptr [ r12 ] mov esi , ebx call hexvar mov rbp , rax cmp dword ptr [ rax + hexvar ] , r14d je hexvar call hexvar test rax , rax je hexvar mov r13 , rax mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar mov r14d , dword ptr [ rbp + hexvar ] mov rdi , r13 mov rsi , rbp call hexvar test eax , eax je hexvar add ebx , num mov rdi , qword ptr [ r12 ] call hexvar cmp ebx , eax jl hexvar mov rdi , rsp mov edx , hexvar xor esi , esi mov ecx , hexvar mov r8d , hexvar call hexvar mov r15d , eax mov rdi , qword ptr [ r12 + hexvar ] movsxd rsi , eax call hexvar test eax , eax je hexvar mov rax , qword ptr [ r12 + hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rsp + hexvar ] , rax mov rdi , rsp lea rsi , [ rsp + hexvar ] mov edx , hexvar mov ecx , hexvar mov r8d , hexvar call hexvar mov rdi , qword ptr [ rsp ] mov esi , hexvar call hexvar mov dword ptr [ r12 + num ] , num test r15d , r15d js hexvar mov rdi , r12 call hexvar test eax , eax mov rbp , qword ptr [ rsp + num ] js hexvar mov rax , qword ptr [ r12 + hexvar ] mov r15 , qword ptr [ rax ] test rbp , rbp je hexvar mov rdi , qword ptr [ rbp ] mov rsi , qword ptr [ rax + num ] movsxd rbx , r15d mov rdx , rbx call hexvar add qword ptr [ rbp ] , rbx jmp hexvar xor r15d , r15d jmp hexvar mov r15 , qword ptr [ rsp ] mov esi , hexvar mov rdi , r15 call hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov r15d , hexvar mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , esp add eax , - hexvar mov esp , eax mov dword ptr [ eax ] , num mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] cmp ecx , dword ptr [ hexvar ] setb dl mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] imul edx , dword ptr [ ecx ] , hexvar add eax , edx mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ ecx ] mov dword ptr [ edx + esi * num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] add ecx , num mov dword ptr [ eax ] , ecx jmp hexvar lea esp , [ ebp - num ] pop esi pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] imul rdx , rax , hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rbp - num ] shl rsi , num add rax , rsi add rdx , rcx mov qword ptr [ rax ] , rdx add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar nop pop rbp ret
mov rcx , qword ptr [ rip + hexvar ] test rcx , rcx je hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov rax , rsi lea rcx , [ rsi + rcx * num ] mov qword ptr [ rax ] , rdx add rdx , hexvar add rax , num cmp rax , rcx jne hexvar ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw zero , num ( fp ) b hexvar nop lui v0 , hexvar lw a0 , - hexvar ( v0 ) lw v1 , num ( fp ) addiu v0 , zero , hexvar mul v1 , v1 , v0 lui v0 , hexvar lw a1 , - hexvar ( v0 ) lw v0 , num ( fp ) sll v0 , v0 , num addu v0 , a1 , v0 addu v1 , a0 , v1 sw v1 , ( v0 ) lw v0 , num ( fp ) addiu v0 , v0 , num sw v0 , num ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v1 , num ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop nop move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] imul ecx , dword ptr [ ebp - num ] , hexvar add eax , ecx mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx + edx * num ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx jae hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] imul ecx , eax , hexvar mov edx , dword ptr [ ebp - hexvar ] add edx , ecx mov ecx , dword ptr [ hexvar ] mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx + esi * num ] , edx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - num ] , eax jmp hexvar add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] imul rdx , rcx , hexvar add rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rdx + rcx * num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] imul rdx , rax , hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rbp - num ] shl rsi , num add rax , rsi add rdx , rcx mov qword ptr [ rax ] , rdx add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , num jmp hexvar mov rcx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] imul rdx , rax , hexvar mov rax , qword ptr [ rip + hexvar ] mov rsi , qword ptr [ rbp - num ] shl rsi , num add rax , rsi add rdx , rcx mov qword ptr [ rax ] , rdx add qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar nop pop rbp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - num ] imul rdx , rcx , hexvar add rax , rdx mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rdx + rcx * num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax pop rbp ret
push { r4 , lr } mov r4 , r0 mov r0 , r1 mov r1 , r2 bl hexvar cmp r0 , num beq hexvar str r0 , [ r4 , hexvar ] mov r0 , num pop { r4 , pc }
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea esi , [ ebx - hexvar ] lea eax , [ ebx - hexvar ] jmp hexvar lea esi , [ esi ] lea edi , [ edi ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp edx , dword ptr [ eax + hexvar ] jne hexvar cmp ecx , dword ptr [ eax + hexvar ] je hexvar test ecx , ecx jne hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ ebx + hexvar ] , eax mov eax , num add esp , num pop ebx pop esi ret
push { r4 , lr } ldr ip , [ pc , hexvar ] ldr r4 , [ pc , hexvar ] b hexvar ldr r4 , [ r4 , hexvar ] cmp r4 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r1 , r3 bne hexvar ldr r3 , [ r4 , hexvar ] cmp r2 , r3 beq hexvar cmp r2 , num bne hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar mov r3 , num str r4 , [ r0 , hexvar ] mov r0 , r3 pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax setne cl movzx edi , cl mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , hexvar mov edi , hexvar call hexvar mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov edi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebx sub esp , num call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , num test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , num add esp , num pop ebx ret
lea rax , [ rip + hexvar ] lea rcx , [ rip + hexvar ] jmp hexvar mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp esi , dword ptr [ rax + hexvar ] jne hexvar cmp rdx , qword ptr [ rax + hexvar ] je hexvar test rdx , rdx jne hexvar mov r8d , dword ptr [ rax + hexvar ] test r8d , r8d je hexvar mov qword ptr [ rdi + hexvar ] , rax mov eax , num ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a3 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a3 , a3 , - hexvar lw v1 , - hexvar ( gp ) beqz a2 , hexvar nop b hexvar lw v0 , hexvar ( v1 ) lw v1 , hexvar ( v1 ) beqz v1 , hexvar nop lw v0 , hexvar ( v1 ) bne a1 , v0 , hexvar nop lw v0 , hexvar ( v1 ) bne a2 , v0 , hexvar addiu v0 , zero , num sw v1 , hexvar ( a0 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( v1 ) beqz v0 , hexvar addiu v0 , zero , num lw v0 , hexvar ( v1 ) bnez v0 , hexvar addiu v0 , zero , num lw v1 , hexvar ( v1 ) beqz v1 , hexvar nop lw v0 , hexvar ( v1 ) beq a1 , v0 , hexvar nop lw v1 , hexvar ( v1 ) bnez v1 , hexvar nop addiu a3 , a3 , num lw v1 , ( a3 ) bnez v1 , hexvar lw t9 , - hexvar ( gp ) lui v1 , hexvar move v0 , a0 addiu v1 , v1 , hexvar addiu a0 , zero , hexvar bal hexvar sw v1 , hexvar ( v0 ) b hexvar move v0 , zero
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmovne edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movabs rcx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov edi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a3 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a3 , a3 , - hexvar lw v1 , - hexvar ( gp ) beqz a2 , hexvar nop b hexvar lw v0 , hexvar ( v1 ) lw v1 , hexvar ( v1 ) beqz v1 , hexvar nop lw v0 , hexvar ( v1 ) bne a1 , v0 , hexvar nop lw v0 , hexvar ( v1 ) bne a2 , v0 , hexvar addiu v0 , zero , num sw v1 , hexvar ( a0 )
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar mov r3 , num str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] ldr r4 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] mov r1 , num ldr r0 , [ sp , hexvar ] blx r4 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bgt hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mvn r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] blx r3 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp , num ] mov r3 , num str r3 , [ sp ] ldr r4 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] mov r1 , hexvar ldr r0 , [ sp , hexvar ] blx r4 str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { r4 , pc }
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov rbp , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov r14d , edx mov rbx , rsi mov r15 , qword ptr [ rbp + num ] test r15 , r15 je hexvar mov r9d , num mov rdi , rbp mov esi , num mov rdx , rbx mov ecx , r14d xor r8d , r8d call r15
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 ) beqz v0 , hexvar move s0 , a0 lw t9 , hexvar ( v0 ) beqz t9 , hexvar lui a3 , hexvar lw s1 , num ( a0 ) beqz s1 , hexvar addiu v0 , zero , num sw zero , hexvar ( sp ) move s2 , a1 addiu a1 , zero , num sw v0 , hexvar ( sp ) move a3 , a2 move s3 , a2 move t9 , s1 jalr t9 move a2 , s2 blez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar move a2 , s3 lw v0 , ( s0 ) move a1 , s2 lw t9 , hexvar ( v0 ) jalr t9 move a0 , s0 addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) move a3 , s3 sw zero , hexvar ( sp ) move a2 , s2 move t9 , s1 jalr t9 move a0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( a0 ) beqz v0 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) bal hexvar addiu a0 , zero , hexvar b hexvar addiu v0 , zero , - num lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov rbp , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov r14d , edx mov rbx , rsi mov r15 , qword ptr [ rbp + num ] test r15 , r15 je hexvar mov r9d , num mov rdi , rbp mov esi , num mov rdx , rbx mov ecx , r14d xor r8d , r8d call r15
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov rbp , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov r14d , edx mov rbx , rsi mov r15 , qword ptr [ rbp + num ] test r15 , r15 je hexvar mov r9d , num mov rdi , rbp mov esi , num mov rdx , rbx mov ecx , r14d xor r8d , r8d call r15
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 ) beqz v0 , hexvar move s0 , a0 lw t9 , hexvar ( v0 ) beqz t9 , hexvar lui a3 , hexvar lw s1 , num ( a0 ) beqz s1 , hexvar addiu v0 , zero , num sw zero , hexvar ( sp ) move s2 , a1 addiu a1 , zero , num sw v0 , hexvar ( sp ) move a3 , a2 move s3 , a2 move t9 , s1 jalr t9 move a2 , s2 blez v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar move a2 , s3 lw v0 , ( s0 ) move a1 , s2 lw t9 , hexvar ( v0 ) jalr t9 move a0 , s0 addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) move a3 , s3 sw zero , hexvar ( sp ) move a2 , s2 move t9 , s1 jalr t9 move a0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( a0 ) beqz v0 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr t9 addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar addiu v0 , zero , hexvar addiu a1 , zero , hexvar sw v0 , hexvar ( sp ) bal hexvar addiu a0 , zero , hexvar b hexvar addiu v0 , zero , - num lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a3 , a3 , - hexvar b hexvar addiu v0 , zero , hexvar
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov rbp , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov r14d , edx mov rbx , rsi mov r15 , qword ptr [ rbp + num ] test r15 , r15 je hexvar mov r9d , num mov rdi , rbp mov esi , num mov rdx , rbx mov ecx , r14d xor r8d , r8d call r15
push rbp push r15 push r14 push rbx push rax test rdi , rdi je hexvar mov rbp , rdi mov rax , qword ptr [ rdi ] test rax , rax je hexvar cmp qword ptr [ rax + hexvar ] , num je hexvar mov r14d , edx mov rbx , rsi mov r15 , qword ptr [ rbp + num ] test r15 , r15 je hexvar mov r9d , num mov rdi , rbp mov esi , num mov rdx , rbx mov ecx , r14d xor r8d , r8d call r15
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a2 , hexvar sw gp , hexvar ( sp ) move a1 , a3 jal hexvar move a0 , a2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a1 , v0 bal hexvar lw a0 , hexvar ( sp ) lw gp , hexvar ( sp ) sltu s1 , zero , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , zero lui s1 , hexvar lw t9 , - hexvar ( gp ) sw a3 , hexvar ( sp ) move s0 , a1 jalr t9 addiu a2 , s1 , hexvar lw gp , hexvar ( sp ) move a2 , v0 bnez v0 , hexvar lw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar b hexvar ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push r15 push r14 push r13 push r12 push rbx mov r14 , r8 mov r12 , rcx mov r15 , rdx test rdx , rdx jne hexvar mov rbx , rsi mov edx , hexvar call hexvar mov r15 , rax test rax , rax je hexvar mov esi , hexvar mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov rdi , r13 xor esi , esi xor edx , edx mov rcx , r12 call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , r13 call hexvar mov rdi , r14 mov rsi , rbx call hexvar xor r14d , r14d test eax , eax setne r14b mov rdi , rbx call hexvar mov eax , r14d pop rbx pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a3 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a2 , hexvar sw gp , hexvar ( sp ) move s0 , a2 lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu a1 , a1 , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lw t9 , - hexvar ( gp ) move a2 , zero move a1 , zero move a3 , s1 jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 move a1 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar lw a0 , hexvar ( sp ) lw gp , hexvar ( sp ) sltu s0 , zero , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a2 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , num addiu a2 , a2 , hexvar move a3 , s0 lw a0 , ( v0 ) move s1 , zero jalr t9 move s0 , zero lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push r15 push r14 push r13 push r12 push rbx mov r14 , r8 mov r12 , rcx mov r15 , rdx test rdx , rdx jne hexvar mov rbx , rsi mov edx , hexvar call hexvar mov r15 , rax test rax , rax je hexvar mov esi , hexvar mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov rdi , r13 xor esi , esi xor edx , edx mov rcx , r12 call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , r13 call hexvar mov rdi , r14 mov rsi , rbx call hexvar xor r14d , r14d test eax , eax setne r14b mov rdi , rbx call hexvar mov eax , r14d pop rbx pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a3 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a2 , hexvar sw gp , hexvar ( sp ) move s0 , a2 lui a1 , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 addiu a1 , a1 , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s2 , v0 lw t9 , - hexvar ( gp ) move a2 , zero move a1 , zero move a3 , s1 jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 move a1 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar lw a0 , hexvar ( sp ) lw gp , hexvar ( sp ) sltu s0 , zero , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a2 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , zero , num addiu a2 , a2 , hexvar move a3 , s0 lw a0 , ( v0 ) move s1 , zero jalr t9 move s0 , zero lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push r15 push r14 push r13 push r12 push rbx mov r14 , r8 mov r12 , rcx mov r15 , rdx test rdx , rdx jne hexvar mov rbx , rsi mov edx , hexvar call hexvar mov r15 , rax test rax , rax je hexvar mov esi , hexvar mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov rdi , r13 xor esi , esi xor edx , edx mov rcx , r12 call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , r13 call hexvar mov rdi , r14 mov rsi , rbx call hexvar xor r14d , r14d test eax , eax setne r14b mov rdi , rbx call hexvar mov eax , r14d pop rbx pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbx mov r14 , r8 mov r12 , rcx mov r15 , rdx test rdx , rdx jne hexvar mov rbx , rsi mov edx , hexvar call hexvar mov r15 , rax test rax , rax je hexvar mov esi , hexvar mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov rdi , r13 xor esi , esi xor edx , edx mov rcx , r12 call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , r13 call hexvar mov rdi , r14 mov rsi , rbx call hexvar xor r14d , r14d test eax , eax setne r14b mov rdi , rbx call hexvar mov eax , r14d pop rbx pop r12 pop r13 pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] str r3 , [ sp ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r2 , [ pc , hexvar ] ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar b hexvar ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num str r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push r15 push r14 push r13 push r12 push rbx mov r14 , r8 mov r12 , rcx mov r15 , rdx test rdx , rdx jne hexvar mov rbx , rsi mov edx , hexvar call hexvar mov r15 , rax test rax , rax je hexvar mov esi , hexvar mov rdi , r15 call hexvar mov r13 , rax test rax , rax je hexvar mov rdi , r13 xor esi , esi xor edx , edx mov rcx , r12 call hexvar test rax , rax je hexvar mov rbx , rax mov rdi , r13 call hexvar mov rdi , r14 mov rsi , rbx call hexvar xor r14d , r14d test eax , eax setne r14b mov rdi , rbx call hexvar mov eax , r14d pop rbx pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , - num sw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a0 , a1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 addiu a1 , sp , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw a2 , hexvar ( sp ) move a1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a0 , s0 addiu a1 , sp , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw a2 , hexvar ( sp ) move a1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a0 , s0 move a1 , s0 move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s0 , zero move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + num ] , hexvar mov rdi , rsi call hexvar test rax , rax je hexvar mov r15 , rax lea rsi , [ rsp + hexvar ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + num ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar test r14 , r14 je hexvar mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar xor ebx , ebx mov rsi , r15 call hexvar test eax , eax jne hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , num jmp hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov rdi , rax mov ebx , num mov rsi , r15 call hexvar test eax , eax jne hexvar jmp hexvar mov rdi , r15 call hexvar xor r15d , r15d mov rax , r15 add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + num ] , hexvar mov rdi , rsi call hexvar test rax , rax je hexvar mov r15 , rax lea rsi , [ rsp + hexvar ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + num ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar test r14 , r14 je hexvar mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar xor ebx , ebx mov rsi , r15 call hexvar test eax , eax jne hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , num jmp hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov rdi , rax mov ebx , num mov rsi , r15 call hexvar test eax , eax jne hexvar jmp hexvar mov rdi , r15 call hexvar xor r15d , r15d mov rax , r15 add rsp , hexvar pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar push edi call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push edi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + num ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push edi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , esi mov eax , ebp call hexvar test eax , eax jne hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov esi , num mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , - num sw s1 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s3 , hexvar ( sp ) move s3 , a0 sw s2 , hexvar ( sp ) move a0 , a1 sw s0 , hexvar ( sp ) move s2 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) addiu a1 , sp , hexvar jalr t9 move a0 , s2 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , v0 lw a2 , hexvar ( sp ) bal hexvar move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a1 , sp , hexvar jalr t9 move a0 , s2 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , v0 lw a2 , hexvar ( sp ) bal hexvar move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , s0 bal hexvar move s0 , zero lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) move v0 , s0 lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar beqz s3 , hexvar nop lw a0 , ( s3 )
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + num ] , hexvar mov rdi , rsi call hexvar test rax , rax je hexvar mov r15 , rax lea rsi , [ rsp + hexvar ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + num ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar test r14 , r14 je hexvar mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar xor ebx , ebx mov rsi , r15 call hexvar test eax , eax jne hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , num jmp hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov rdi , rax mov ebx , num mov rsi , r15 call hexvar test eax , eax jne hexvar jmp hexvar mov rdi , r15 call hexvar xor r15d , r15d mov rax , r15 add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + num ] , hexvar mov rdi , rsi call hexvar test rax , rax je hexvar mov r15 , rax lea rsi , [ rsp + hexvar ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + num ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar test r14 , r14 je hexvar mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar xor ebx , ebx mov rsi , r15 call hexvar test eax , eax jne hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , num jmp hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov rdi , rax mov ebx , num mov rsi , r15 call hexvar test eax , eax jne hexvar jmp hexvar mov rdi , r15 call hexvar xor r15d , r15d mov rax , r15 add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + num ] , hexvar mov rdi , rsi call hexvar test rax , rax je hexvar mov r15 , rax lea rsi , [ rsp + hexvar ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + num ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar test r14 , r14 je hexvar mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar xor ebx , ebx mov rsi , r15 call hexvar test eax , eax jne hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , num jmp hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov rdi , rax mov ebx , num mov rsi , r15 call hexvar test eax , eax jne hexvar jmp hexvar mov rdi , r15 call hexvar xor r15d , r15d mov rax , r15 add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi mov dword ptr [ rsp + hexvar ] , hexvar mov dword ptr [ rsp + num ] , hexvar mov rdi , rsi call hexvar test rax , rax je hexvar mov r15 , rax lea rsi , [ rsp + hexvar ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar test rax , rax je hexvar mov edx , dword ptr [ rsp + num ] mov rdi , r15 mov rsi , rax call hexvar test eax , eax je hexvar test r14 , r14 je hexvar mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar xor ebx , ebx mov rsi , r15 call hexvar test eax , eax jne hexvar test ebx , ebx je hexvar mov rdi , qword ptr [ r14 ] call hexvar mov qword ptr [ r14 ] , num jmp hexvar call hexvar mov qword ptr [ r14 ] , rax test rax , rax je hexvar mov rdi , rax mov ebx , num mov rsi , r15 call hexvar test eax , eax jne hexvar jmp hexvar mov rdi , r15 call hexvar xor r15d , r15d mov rax , r15 add rsp , hexvar pop rbx pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] mvn r3 , num str r3 , [ sp , num ] mvn r3 , num str r3 , [ sp , hexvar ] ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar add r3 , sp , num mov r1 , r3 ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] mov r2 , r3 ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar add r3 , sp , hexvar mov r1 , r3 ldr r0 , [ sp ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] mov r2 , r3 ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a3 , zero , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s1 , hexvar ( sp ) addiu a1 , zero , num sw gp , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) addiu a2 , s0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num lui v0 , hexvar lw v1 , - hexvar ( v0 ) beqz v1 , hexvar lw gp , hexvar ( sp ) move s1 , zero lw t9 , - hexvar ( gp ) addiu a2 , s0 , hexvar addiu a3 , zero , hexvar addiu a1 , zero , num bal hexvar addiu a0 , zero , hexvar move v0 , s1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar sw s1 , - hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a3 , zero , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw s1 , hexvar ( sp ) addiu a1 , zero , num sw gp , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) addiu a2 , s0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num lui v0 , hexvar lw v1 , - hexvar ( v0 ) beqz v1 , hexvar lw gp , hexvar ( sp ) move s1 , zero lw t9 , - hexvar ( gp ) addiu a2 , s0 , hexvar addiu a3 , zero , hexvar addiu a1 , zero , num bal hexvar addiu a0 , zero , hexvar move v0 , s1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar sw s1 , - hexvar ( v0 )
push edi push esi xor edi , edi push ebx push hexvar call hexvar add ebx , hexvar lea esi , [ ebx - hexvar ] push esi push num push num call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , num mov dword ptr [ ebx + hexvar ] , eax push hexvar push esi push num push hexvar call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push r14 push rbx push rax mov r14 , rdi mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar xor ebx , ebx cmp qword ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , r14 mov ebx , num mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov eax , ebx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rdi mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar xor ebx , ebx cmp qword ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , r14 mov ebx , num mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov eax , ebx add rsp , num pop rbx pop r14 ret
push edi push esi xor edi , edi push ebx push hexvar call hexvar add ebx , hexvar lea esi , [ ebx - hexvar ] push esi push num push num call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , num mov dword ptr [ ebx + hexvar ] , eax push hexvar push esi push num push hexvar call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push edi push esi xor edi , edi push ebx push hexvar call hexvar add ebx , hexvar lea esi , [ ebx - hexvar ] push esi push num push num call hexvar mov eax , dword ptr [ ebx + hexvar ] add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , num mov dword ptr [ ebx + hexvar ] , eax push hexvar push esi push num push hexvar call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push num call hexvar add esp , hexvar mov esi , num cmp dword ptr [ ebx + hexvar ] , num je hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar call hexvar mov eax , esi add esp , hexvar pop ebx pop esi ret
push r14 push rbx push rax mov r14 , rdi mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar xor ebx , ebx cmp qword ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , r14 mov ebx , num mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov eax , ebx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax mov r14 , rdi mov edx , hexvar mov edi , num mov esi , num mov ecx , hexvar call hexvar xor ebx , ebx cmp qword ptr [ rip + hexvar ] , num jne hexvar mov qword ptr [ rip + hexvar ] , r14 mov ebx , num mov edx , hexvar mov edi , hexvar mov esi , num mov ecx , hexvar call hexvar mov eax , ebx add rsp , num pop rbx pop r14 ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] mov r3 , r1 strb r3 , [ fp , - hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num ble hexvar ldrb r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] orr r3 , r3 , hexvar b hexvar ldr r3 , [ fp , - hexvar ] bic r3 , r3 , hexvar str r3 , [ fp , - num ] ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 beq hexvar ldr r2 , [ fp , - num ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax mov edi , edx push num push eax call hexvar add esp , hexvar test eax , eax jle hexvar mov ecx , eax or ch , hexvar mov edx , eax and dh , hexvar mov ebp , edx mov edx , edi test dl , dl cmove ecx , ebp cmp ecx , eax je hexvar sub esp , num push ecx push num push esi call hexvar add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jge hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] or eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al sub esp , num push num push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jle hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] or ah , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and ah , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] je hexvar sub esp , num push dword ptr [ ebp - hexvar ] push num push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r1 , num mov r5 , r0 bl hexvar cmp r0 , num pople { r4 , r5 , r6 , pc } cmp r4 , num orrne r2 , r0 , hexvar biceq r2 , r0 , hexvar cmp r2 , r0 popeq { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jge hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] or eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , sil mov dword ptr [ rbp - num ] , edi and al , num mov byte ptr [ rbp - num ] , al mov edi , dword ptr [ rbp - num ] xor esi , esi mov al , sil mov esi , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax setg cl movzx eax , cl mov edx , eax mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx movzx eax , byte ptr [ rbp - num ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov eax , dword ptr [ rbp - hexvar ] or eax , hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] sub eax , ecx setne dl movzx ecx , dl mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov edi , dword ptr [ rbp - num ] mov edx , dword ptr [ rbp - hexvar ] xor eax , eax mov cl , al mov esi , num mov al , cl call hexvar mov r8 , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp r8
push rbp push rbx sub rsp , num mov ebp , edi mov ebx , esi mov esi , num mov eax , num call hexvar test eax , eax jle hexvar mov ecx , eax or ch , hexvar mov edx , eax and dh , hexvar test bl , bl cmovne edx , ecx cmp edx , eax je hexvar mov esi , num mov edi , ebp mov eax , num call hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al sub esp , num push num push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jle hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] or ah , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] and ah , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] je hexvar sub esp , num push dword ptr [ ebp - hexvar ] push num push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jge hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] or eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - num ] cmp edx , dword ptr [ ebp - hexvar ] setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beq a0 , a1 , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - num ] cmp edx , dword ptr [ ebp - hexvar ] setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) beq v1 , v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beq a0 , a1 , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - num ] cmp edx , dword ptr [ ebp - hexvar ] setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebx pop ebp ret
cmp edi , esi je hexvar push rbx mov ebx , edi call hexvar mov edi , ebx call hexvar pop rbx ret
push { r4 , lr } mov r1 , num bl hexvar subs r4 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num popeq { r4 , pc } mov r0 , r4 ldr r1 , [ pc , hexvar ] bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , pc }
sub rsp , num mov esi , num call hexvar test rax , rax je hexvar cmp byte ptr [ rax ] , hexvar jne hexvar cmp byte ptr [ rax + num ] , num je hexvar mov edi , hexvar mov ecx , num mov rsi , rax repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta dl setb al cmp dl , al setne al jmp hexvar mov eax , num jmp hexvar mov eax , num add rsp , num ret
push { r4 , lr } mov r1 , num bl hexvar subs r4 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num popeq { r4 , pc } mov r0 , r4 ldr r1 , [ pc , hexvar ] bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , pc }
push { r4 , lr } mov r1 , num bl hexvar subs r4 , r0 , num beq hexvar ldr r1 , [ pc , hexvar ] bl hexvar cmp r0 , num popeq { r4 , pc } mov r0 , r4 ldr r1 , [ pc , hexvar ] bl hexvar adds r0 , r0 , num movne r0 , num pop { r4 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , rsp add rax , - hexvar mov rsp , rax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , ecx mov edi , dword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , hexvar call hexvar cmp eax , num je hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov esi , hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num mov cl , num mov byte ptr [ rbp - hexvar ] , cl jne hexvar jmp hexvar mov esi , hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al jmp hexvar mov al , byte ptr [ rbp - hexvar ] xor al , hexvar and al , num mov byte ptr [ rbp - num ] , al mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al mov rsp , rbp pop rbp ret
push rbx mov edx , hexvar sub rsp , hexvar mov rbx , rsp mov rsi , rbx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar xor edx , edx test eax , eax jne hexvar lea rdi , [ rip + hexvar ] mov ecx , num mov rsi , rbx repe cmpsb byte ptr [ rsi ] , byte ptr [ rdi ] seta al sbb al , num test al , al jne hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] mov eax , edx jne hexvar add rsp , hexvar pop rbx ret
push { r4 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 ] mov r1 , sp ldr r2 , [ pc , hexvar ] str r3 , [ sp , hexvar ] bl hexvar cmp r0 , num movne r0 , num bne hexvar ldr r1 , [ pc , hexvar ] mov r0 , sp bl hexvar cmp r0 , num bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , pc }
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar lea edi , [ ebx - hexvar ] mov ecx , num mov esi , edx repe cmpsb byte ptr [ esi ] , byte ptr es : [ edi ] seta cl sbb cl , num xor eax , eax test cl , cl jne hexvar pop ebx pop esi pop edi ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , num mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ edx + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar test eax , eax sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov byte ptr [ ebp - num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar call hexvar cmp eax , num jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw a0 , hexvar ( a0 )
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 )
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] cmp eax , num ja hexvar mov edx , dword ptr [ esp + hexvar ] mov word ptr [ edx + hexvar ] , ax add esp , num xor eax , eax pop ebx ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov ebx , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , eax mov eax , dword ptr [ ebp + hexvar ] mov word ptr [ eax + hexvar ] , dx mov eax , num add esp , num pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov cx , ax mov eax , dword ptr [ ebp + hexvar ] mov word ptr [ eax + hexvar ] , cx mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] cmp eax , num ja hexvar mov edx , dword ptr [ esp + hexvar ] mov word ptr [ edx + hexvar ] , ax add esp , num xor eax , eax pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] cmp eax , num ja hexvar mov edx , dword ptr [ esp + hexvar ] mov word ptr [ edx + hexvar ] , ax add esp , num xor eax , eax pop ebx ret
sltiu v0 , a2 , num beqz v0 , hexvar move v1 , zero sh a2 , hexvar ( a1 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar cmp dword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov dword ptr [ rax ] , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov word ptr [ rax + hexvar ] , dx mov eax , num leave ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] cmp eax , num ja hexvar mov edx , dword ptr [ esp + hexvar ] mov word ptr [ edx + hexvar ] , ax add esp , num xor eax , eax pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sltiu v0 , a2 , num beqz v0 , hexvar sw gp , hexvar ( sp ) sh a2 , hexvar ( a1 ) move v0 , zero lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v1 , zero , hexvar sw v1 , ( v0 ) b hexvar addiu v0 , zero , num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov cx , ax mov eax , dword ptr [ ebp + hexvar ] mov word ptr [ eax + hexvar ] , cx mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , edx call edi add esp , hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , eax cmp ecx , dword ptr [ edx ] setne bl mov byte ptr [ ebp - hexvar ] , bl xor eax , eax mov cl , al mov dl , byte ptr [ ebp - hexvar ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar call hexvar mov ecx , hexvar cmp ecx , dword ptr [ eax ] sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , esp lea edi , [ ebp - hexvar ] mov dword ptr [ esi + num ] , edi mov dword ptr [ esi ] , edx mov dword ptr [ ebp - hexvar ] , eax call ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne bl movzx eax , bl mov eax , dword ptr [ eax * num + hexvar ] xor ecx , ecx mov bl , cl mov byte ptr [ ebp - hexvar ] , bl jmp eax call hexvar mov eax , dword ptr [ eax ] sub eax , hexvar sete cl mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl jmp edx mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero andi v0 , v0 , num andi v0 , v0 , hexvar lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero andi v0 , v0 , num andi v0 , v0 , hexvar lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call ecx xor ecx , ecx mov bl , cl xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , bl je hexvar call hexvar mov ecx , hexvar cmp ecx , dword ptr [ eax ] sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar addiu a2 , sp , hexvar move a1 , s0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar andi v0 , v0 , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] call ecx xor ecx , ecx mov dl , cl xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , dl je hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar sub r3 , fp , hexvar mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] b hexvar sub r3 , fp , hexvar mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar bl hexvar mov r3 , r0 ldr r3 , [ r3 ] cmp r3 , hexvar bne hexvar mov r3 , num b hexvar mov r3 , num and r3 , r3 , num and r3 , r3 , hexvar mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) b hexvar nop addiu v0 , fp , hexvar move a1 , v0 lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v1 , ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero andi v0 , v0 , num andi v0 , v0 , hexvar lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] call ecx xor ecx , ecx mov dl , cl xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax cmp ecx , dword ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , dl je hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , hexvar mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx sete dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
cmp r0 , num beq hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar push { r4 , r5 , r6 , lr } ldr r4 , [ r0 , hexvar ] cmp r4 , num beq hexvar ldr r3 , [ r4 ] cmp r0 , r3 beq hexvar mvn r0 , num pop { r4 , r5 , r6 , pc } stmmi sp , { r1 , r3 , r4 , r5 , r7 , sp , pc } andeq r0 , r0 , r0
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rdi mov r13 , rsi mov r12 , rdx call hexvar test eax , eax jne hexvar mov ebp , eax mov rbx , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] test edx , edx je hexvar test r13 , r13 jne hexvar test r12 , r12 je hexvar mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax mov eax , ebp add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbx , rdi mov r13 , rsi mov r12 , rdx call hexvar test eax , eax jne hexvar mov ebp , eax mov rbx , qword ptr [ rbx + hexvar ] mov edx , dword ptr [ rbx + hexvar ] test edx , edx je hexvar test r13 , r13 jne hexvar test r12 , r12 je hexvar mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ r12 ] , eax mov eax , ebp add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov eax , esi call hexvar test eax , eax mov edx , eax jne hexvar mov esi , dword ptr [ esi + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar test edi , edi jne hexvar test ebp , ebp je hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ ebp ] , eax add esp , hexvar mov eax , edx pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov eax , esi call hexvar test eax , eax mov edx , eax jne hexvar mov esi , dword ptr [ esi + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar test edi , edi jne hexvar test ebp , ebp je hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ ebp ] , eax add esp , hexvar mov eax , edx pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , esi call hexvar test eax , eax jne hexvar mov edi , eax mov esi , dword ptr [ esi + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar test ebp , ebp je hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ ebp ] , eax mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
test rdi , rdi je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar push rbp push rbx mov eax , hexvar sub rsp , num mov rbx , qword ptr [ rdi + hexvar ] test rbx , rbx je hexvar cmp rdi , qword ptr [ rbx ] je hexvar add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] sub edx , eax mov eax , edx mov esi , eax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rsi mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov esi , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx + hexvar ] mov ecx , edx mov rdx , qword ptr [ rbp - num ] mov edx , dword ptr [ rdx + hexvar ] mov edx , edx sub rcx , rdx mov rdx , qword ptr [ rbp - hexvar ] add rcx , rdx mov rdx , rsi mov rsi , rax mov rdi , rcx call hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx mov eax , num leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ edx + hexvar ] test ecx , ecx je hexvar mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar mov esi , dword ptr [ edx + hexvar ] mov eax , hexvar test esi , esi je hexvar cmp edx , dword ptr [ esi ] je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s0 , ( a0 )
push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdi ] mov rdi , qword ptr [ rbx ] call qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rbx + num ] mov ebp , eax call qword ptr [ rip + hexvar ] imul eax , eax , hexvar add rsp , num pop rbx add eax , ebp pop rbp ret
push edi push esi push ebx call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ edx ] sub esp , hexvar lea ebx , [ eax + hexvar ] push dword ptr [ edi ] call dword ptr [ ebx ] mov esi , eax add esp , num push dword ptr [ edi + num ] call dword ptr [ ebx ] imul eax , eax , hexvar add eax , esi add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s0 , ( a0 )
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] sub esp , hexvar push edx call eax add esp , hexvar mov esi , eax lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + num ] sub esp , hexvar push edx call eax add esp , hexvar imul eax , eax , hexvar add eax , esi lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push edi push esi push ebx call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ edx ] sub esp , hexvar lea ebx , [ eax + hexvar ] push dword ptr [ edi ] call dword ptr [ ebx ] mov esi , eax add esp , num push dword ptr [ edi + num ] call dword ptr [ ebx ] imul eax , eax , hexvar add eax , esi add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push rbp push rbx sub rsp , num mov rbx , qword ptr [ rdi ] mov rdi , qword ptr [ rbx ] call qword ptr [ rip + hexvar ] mov ebp , eax mov rdi , qword ptr [ rbx + num ] call qword ptr [ rip + hexvar ] imul eax , eax , hexvar add eax , ebp add rsp , num pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s0 , ( a0 )
push edi push esi push ebx mov edx , dword ptr [ esp + hexvar ] call hexvar add eax , hexvar sub esp , hexvar mov edi , dword ptr [ edx ] lea ebx , [ eax + hexvar ] push dword ptr [ edi ] call dword ptr [ ebx ] mov esi , eax pop eax push dword ptr [ edi + num ] call dword ptr [ ebx ] imul eax , eax , hexvar add esp , hexvar pop ebx add eax , esi pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu v0 , zero , - num sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v0 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw v0 , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu s0 , sp , hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , a3 sw s7 , hexvar ( sp ) move s7 , a2 sw s4 , hexvar ( sp ) move s4 , a0 sw s1 , hexvar ( sp ) move a0 , s0 sw gp , hexvar ( sp ) move s1 , a1 sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] lea esi , [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar pop eax push dword ptr [ edi ] call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar test eax , eax je hexvar mov edi , eax mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ eax + num ] , num je hexvar sub esp , num push num push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call eax mov dword ptr [ esp + hexvar ] , eax add esp , hexvar lea edx , [ ebx - hexvar ] push hexvar mov dword ptr [ esp + hexvar ] , edx push edx push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar push num push edi push esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push ebp push esi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar push dword ptr [ esp + hexvar ] push num xor edi , edi push hexvar push hexvar call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , num push dword ptr [ esi ] call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar sub esp , num push num push ebp call edi mov edx , eax mov dword ptr [ esp + hexvar ] , eax add esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push edx call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ esp + hexvar ] , eax sub esp , num lea eax , [ esp + hexvar ] push eax push ebp call edi add esp , hexvar push num push dword ptr [ esp + num ] lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + num ] push esi lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push num push hexvar push hexvar call hexvar add esp , hexvar mov esi , num sub esp , hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , r8 mov r12 , rcx mov r15 , rdx mov rbp , rsi mov r13 , rdi lea rdi , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rbp ] call hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax cmp dword ptr [ r15 + num ] , num jne hexvar test byte ptr [ r15 + hexvar ] , num je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov qword ptr [ rsp + num ] , rbx mov rdi , r12 xor esi , esi call r13
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , r8 mov r12 , rcx mov rbx , rdx mov rbp , rsi mov r15 , rdi lea rdi , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rbp ] call hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax mov qword ptr [ rsp ] , rbx mov qword ptr [ rsp + num ] , r13 mov rdi , r12 xor esi , esi call r15
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu v0 , zero , - num sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , r8 mov r12 , rcx mov rbx , rdx mov rbp , rsi mov r15 , rdi lea rdi , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rbp ] call hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax mov qword ptr [ rsp ] , rbx mov qword ptr [ rsp + num ] , r13 mov rdi , r12 xor esi , esi call r15
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , r8 mov r12 , rcx mov rbx , rdx mov rbp , rsi mov r15 , rdi lea rdi , [ rsp + hexvar ] call hexvar mov rdi , qword ptr [ rbp ] call hexvar mov edi , eax call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov r14 , rax mov qword ptr [ rsp ] , rbx mov qword ptr [ rsp + num ] , r13 mov rdi , r12 xor esi , esi call r15
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lw v0 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw v0 , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu s0 , sp , hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , a3 sw s7 , hexvar ( sp ) move s7 , a2 sw s4 , hexvar ( sp ) move s4 , a0 sw s1 , hexvar ( sp ) move a0 , s0 sw gp , hexvar ( sp ) move s1 , a1 sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 )
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar call hexvar mov esi , dword ptr [ eax + hexvar ] lea edx , [ esi + num ] mov ecx , edx sar ecx , hexvar shr ecx , hexvar add edx , ecx and edx , hexvar sub edx , ecx cmp edx , dword ptr [ eax + hexvar ] mov ecx , edx mov dword ptr [ eax + hexvar ] , edx jne hexvar lea esi , [ edx + num ] mov edi , esi sar edi , hexvar shr edi , hexvar add esi , edi and esi , hexvar sub esi , edi mov dword ptr [ eax + hexvar ] , esi lea esi , [ eax + edx * num ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , num and edx , hexvar and edi , hexvar shl edx , hexvar or edx , edi mov edi , dword ptr [ esp + hexvar ] shl edi , hexvar or edx , edi mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test byte ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ eax + ecx * num + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar call hexvar mov esi , dword ptr [ eax + hexvar ] lea edx , [ esi + num ] mov ecx , edx sar ecx , hexvar shr ecx , hexvar add edx , ecx and edx , hexvar sub edx , ecx cmp edx , dword ptr [ eax + hexvar ] mov ecx , edx mov dword ptr [ eax + hexvar ] , edx jne hexvar lea esi , [ edx + num ] mov edi , esi sar edi , hexvar shr edi , hexvar add esi , edi and esi , hexvar sub esi , edi mov dword ptr [ eax + hexvar ] , esi lea esi , [ eax + edx * num ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , num and edx , hexvar and edi , hexvar shl edx , hexvar or edx , edi mov edi , dword ptr [ esp + hexvar ] shl edi , hexvar or edx , edi mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test byte ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ eax + ecx * num + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar call hexvar mov esi , dword ptr [ eax + hexvar ] lea edx , [ esi + num ] mov ecx , edx sar ecx , hexvar shr ecx , hexvar add edx , ecx and edx , hexvar sub edx , ecx cmp edx , dword ptr [ eax + hexvar ] mov ecx , edx mov dword ptr [ eax + hexvar ] , edx jne hexvar lea esi , [ edx + num ] mov edi , esi sar edi , hexvar shr edi , hexvar add esi , edi and esi , hexvar sub esi , edi mov dword ptr [ eax + hexvar ] , esi lea esi , [ eax + edx * num ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , num and edx , hexvar and edi , hexvar shl edx , hexvar or edx , edi mov edi , dword ptr [ esp + hexvar ] shl edi , hexvar or edx , edi mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test byte ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ eax + ecx * num + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar call hexvar mov esi , dword ptr [ eax + hexvar ] lea edx , [ esi + num ] mov ecx , edx sar ecx , hexvar shr ecx , hexvar add edx , ecx and edx , hexvar sub edx , ecx cmp edx , dword ptr [ eax + hexvar ] mov ecx , edx mov dword ptr [ eax + hexvar ] , edx jne hexvar lea esi , [ edx + num ] mov edi , esi sar edi , hexvar shr edi , hexvar add esi , edi and esi , hexvar sub esi , edi mov dword ptr [ eax + hexvar ] , esi lea esi , [ eax + edx * num ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , num and edx , hexvar and edi , hexvar shl edx , hexvar or edx , edi mov edi , dword ptr [ esp + hexvar ] shl edi , hexvar or edx , edi mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test byte ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ eax + ecx * num + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar call hexvar mov esi , dword ptr [ eax + hexvar ] lea edx , [ esi + num ] mov ecx , edx sar ecx , hexvar shr ecx , hexvar add edx , ecx and edx , hexvar sub edx , ecx cmp edx , dword ptr [ eax + hexvar ] mov ecx , edx mov dword ptr [ eax + hexvar ] , edx jne hexvar lea esi , [ edx + num ] mov edi , esi sar edi , hexvar shr edi , hexvar add esi , edi and esi , hexvar sub esi , edi mov dword ptr [ eax + hexvar ] , esi lea esi , [ eax + edx * num ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , num and edx , hexvar and edi , hexvar shl edx , hexvar or edx , edi mov edi , dword ptr [ esp + hexvar ] shl edi , hexvar or edx , edi mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test byte ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ eax + ecx * num + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 move s3 , a2 move s4 , a3 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 lw v0 , hexvar ( v0 ) addiu v0 , v0 , num lui v1 , hexvar addiu v1 , v1 , hexvar and v0 , v0 , v1 bltz v0 , hexvar nop sw v0 , hexvar ( s1 ) lw a0 , hexvar ( s1 ) beq v0 , a0 , hexvar move v1 , v0 sll v0 , v1 , num addu v0 , s1 , v0 sw zero , num ( v0 ) andi s0 , s0 , hexvar sll s0 , s0 , hexvar andi s3 , s3 , hexvar or s3 , s0 , s3 sll s2 , s2 , hexvar or s2 , s3 , s2 sw s2 , hexvar ( v0 ) sw s4 , hexvar ( v0 ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lw a0 , hexvar ( v0 ) beqz a0 , hexvar nop lw v0 , hexvar ( v0 ) andi v0 , v0 , num bnez v0 , hexvar lw t9 , - hexvar ( gp ) lw v0 , hexvar ( s1 ) addiu v0 , v0 , hexvar sll v0 , v0 , num addu s1 , s1 , v0 sw zero , ( s1 ) lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , v0 , - num addiu v1 , zero , - hexvar or v0 , v0 , v1 b hexvar addiu v0 , v0 , num addiu v0 , v0 , num lui a0 , hexvar addiu a0 , a0 , hexvar and v0 , v0 , a0 bltz v0 , hexvar addiu a0 , zero , - hexvar b hexvar sw v0 , hexvar ( s1 )
push esi push ebx sub esp , num call hexvar add ebx , hexvar call hexvar mov esi , eax mov eax , dword ptr [ eax + hexvar ] add eax , num cdq shr edx , hexvar add eax , edx and eax , hexvar sub eax , edx mov dword ptr [ esi + hexvar ] , eax cmp eax , dword ptr [ esi + hexvar ] je hexvar lea edx , [ esi + eax * num ] mov dword ptr [ edx + num ] , num mov eax , dword ptr [ esp + hexvar ] and eax , hexvar shl eax , hexvar mov ecx , dword ptr [ esp + hexvar ] and ecx , hexvar or eax , ecx mov ecx , dword ptr [ esp + hexvar ] shl ecx , hexvar or eax , ecx mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar test byte ptr [ edx + hexvar ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + eax * num + hexvar ] , num add esp , num pop ebx pop esi ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14d , r8d mov r15 , rcx mov r12d , edx mov ebp , esi mov r13d , edi call hexvar mov rbx , rax mov eax , dword ptr [ rax + hexvar ] lea ecx , [ rax + num ] sar ecx , hexvar shr ecx , hexvar lea ecx , [ rax + rcx ] add ecx , num and ecx , hexvar neg ecx lea eax , [ rax + rcx ] add eax , num mov dword ptr [ rbx + hexvar ] , eax cmp eax , dword ptr [ rbx + hexvar ] jne hexvar lea ecx , [ rax + num ] mov edx , ecx sar edx , hexvar shr edx , hexvar lea edx , [ rax + rdx ] add edx , num and edx , hexvar sub ecx , edx mov dword ptr [ rbx + hexvar ] , ecx cdqe mov dword ptr [ rbx + rax * num + hexvar ] , num shl r13d , hexvar shl ebp , hexvar and ebp , hexvar or ebp , r13d and r12d , hexvar or r12d , ebp movsxd rax , dword ptr [ rbx + hexvar ] mov qword ptr [ rbx + rax * num + hexvar ] , r12 mov qword ptr [ rbx + rax * num + hexvar ] , r15 mov dword ptr [ rbx + rax * num + hexvar ] , r14d movsxd rax , dword ptr [ rbx + hexvar ] mov rdi , qword ptr [ rbx + rax * num + hexvar ] test rdi , rdi je hexvar test byte ptr [ rbx + rax * num + hexvar ] , num je hexvar call hexvar movsxd rax , dword ptr [ rbx + hexvar ] mov qword ptr [ rbx + rax * num + hexvar ] , num mov dword ptr [ rbx + rax * num + hexvar ] , num add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar call hexvar mov esi , dword ptr [ eax + hexvar ] lea edx , [ esi + num ] mov ecx , edx sar ecx , hexvar shr ecx , hexvar add edx , ecx and edx , hexvar sub edx , ecx cmp edx , dword ptr [ eax + hexvar ] mov ecx , edx mov dword ptr [ eax + hexvar ] , edx jne hexvar lea esi , [ edx + num ] mov edi , esi sar edi , hexvar shr edi , hexvar add esi , edi and esi , hexvar sub esi , edi mov dword ptr [ eax + hexvar ] , esi lea esi , [ eax + edx * num ] mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , num and edx , hexvar and edi , hexvar shl edx , hexvar or edx , edi mov edi , dword ptr [ esp + hexvar ] shl edi , hexvar or edx , edi mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , edx mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar test byte ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ eax + ecx * num + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) move s2 , a2 sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar move s0 , a1 lui a0 , hexvar lw v1 , hexvar ( v0 )
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp move v0 , a0 sb v0 , num ( fp ) lbu v0 , num ( fp ) srl v0 , v0 , num andi v0 , v0 , hexvar move v1 , v0 lui v0 , hexvar sll v1 , v1 , num addiu v0 , v0 , - hexvar addu v0 , v1 , v0 lw v1 , ( v0 ) lbu v0 , num ( fp ) andi v0 , v0 , hexvar srlv v0 , v1 , v0 andi v0 , v0 , num sltu v0 , zero , v0 andi v0 , v0 , hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop nop
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] lsr r3 , r3 , num and r3 , r3 , hexvar mov r2 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 , r2 , lsl num ] ldrb r3 , [ fp , - num ] and r3 , r3 , hexvar lsr r3 , r2 , r3 and r3 , r3 , num cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr andeq sp , r1 , r8 , asr num
mov ecx , dword ptr [ esp + num ] call hexvar add edx , hexvar mov eax , ecx and ecx , hexvar shr al , num movzx eax , al mov eax , dword ptr [ edx + eax * num - hexvar ] shr eax , cl and eax , num ret
mov eax , edi lea rdx , [ rip + hexvar ] mov ecx , edi shr al , num and ecx , hexvar and eax , num mov eax , dword ptr [ rdx + rax * num ] shr eax , cl and eax , num ret
mov eax , edi mov ecx , edi shr al , num and ecx , hexvar and eax , num mov eax , dword ptr [ rax * num + hexvar ] shr eax , cl and eax , num ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar mov r3 , r0 strb r3 , [ fp , - num ] ldrb r3 , [ fp , - num ] lsr r3 , r3 , num and r3 , r3 , hexvar mov r2 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 , r2 , lsl num ] ldrb r3 , [ fp , - num ] and r3 , r3 , hexvar lsr r3 , r2 , r3 and r3 , r3 , num cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr andeq sb , r2 , r4 , lsl sl
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov byte ptr [ ebp - num ] , dl movzx edx , byte ptr [ ebp - num ] shr dl , num movzx edx , dl lea eax , [ eax - hexvar ] mov edx , dword ptr [ eax + edx * num ] movzx eax , byte ptr [ ebp - num ] movzx eax , al and eax , hexvar mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax setne al leave ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov byte ptr [ ebp - num ] , al jne hexvar mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] xor eax , hexvar mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num mov eax , esp add eax , - hexvar mov esp , eax mov cl , byte ptr [ ebp - num ] mov byte ptr [ eax ] , cl movzx edx , byte ptr [ eax ] sar edx , num mov edx , dword ptr [ edx * num + hexvar ] movzx eax , byte ptr [ eax ] and eax , hexvar mov ecx , eax shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx eax , cl mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] sar ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] movzx edx , byte ptr [ ebp + num ] and edx , hexvar mov dword ptr [ ebp - num ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - num ] shr edx , cl and edx , num cmp edx , num setne cl and cl , num movzx edx , cl mov byte ptr [ ebp - num ] , al mov eax , edx add esp , num pop ebp ret
mov eax , edi shr al , num and eax , num mov ecx , edi and ecx , hexvar lea rdx , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax * num ] shr eax , cl and eax , num ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx call hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ecx + hexvar ] cmp dword ptr [ edx + hexvar ] , eax jg hexvar mov eax , num jl hexvar mov eax , dword ptr [ ecx + hexvar ] sub eax , dword ptr [ edx + hexvar ] jne hexvar sub esp , num push dword ptr [ ecx ] push dword ptr [ edx ] call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ eax ] mov esi , dword ptr [ ebp - num ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
mov rax , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi + hexvar ] , rax mov rdx , rsi jg hexvar jl hexvar mov rax , qword ptr [ rdi + hexvar ] sub eax , dword ptr [ rsi + hexvar ] jne hexvar mov rsi , qword ptr [ rdi ] mov rdi , qword ptr [ rdx ] jmp hexvar nop mov eax , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ num ] , num jne hexvar cmp qword ptr [ num ] , num jne hexvar movabs rdi , num call hexvar mov rdi , qword ptr [ num ] call hexvar cmp qword ptr [ num ] , num jne hexvar mov rsi , qword ptr [ rbp - num ] movabs rdi , num call hexvar mov qword ptr [ num ] , rax call hexvar mov rdi , qword ptr [ num ] call hexvar xor eax , eax mov rcx , qword ptr [ num ] cmp rcx , num mov edx , num cmovne eax , edx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx cmp qword ptr [ num ] , num sete dl mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar cmp qword ptr [ num ] , num jne hexvar movabs rdi , num call hexvar jmp hexvar mov rdi , qword ptr [ num ] call hexvar cmp qword ptr [ num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] movabs rdi , num call hexvar mov qword ptr [ num ] , rax call hexvar mov rdi , qword ptr [ num ] call hexvar jmp hexvar xor eax , eax mov rcx , qword ptr [ num ] cmp rcx , num mov edx , num cmovne eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ num ] , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rdi , num call hexvar jmp hexvar mov rdi , qword ptr [ num ] call hexvar mov rdi , qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] cmp rax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rsi , qword ptr [ rbp - num ] movabs rdi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ num ] , rax call hexvar mov rdi , qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar cmp qword ptr [ num ] , num setne al mov byte ptr [ rbp - hexvar ] , al xor eax , eax mov cl , byte ptr [ rbp - hexvar ] test cl , num mov edx , num cmovne eax , edx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar cmp dword ptr [ num ] , num mov qword ptr [ rbp - num ] , rdi jne hexvar mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov al , byte ptr [ num ] xor al , hexvar mov byte ptr [ num ] , al mov dword ptr [ rip ] , num mov dword ptr [ rip ] , num add dword ptr [ rax ] , eax add byte ptr [ rax ] , al add eax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx cmp qword ptr [ num ] , num mov qword ptr [ rbp - hexvar ] , rax jne hexvar cmp qword ptr [ num ] , num jne hexvar movabs rdi , num call hexvar mov rdi , qword ptr [ num ] call hexvar cmp qword ptr [ num ] , num jne hexvar movabs rdi , num mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] call hexvar mov qword ptr [ num ] , rax call hexvar mov rdi , qword ptr [ num ] call hexvar xor eax , eax mov rcx , qword ptr [ num ] cmp rcx , num mov edx , num cmovne eax , edx mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ num ] , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rdi , num call hexvar jmp hexvar mov rdi , qword ptr [ num ] call hexvar mov rdi , qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] cmp rax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rsi , qword ptr [ rbp - num ] movabs rdi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ num ] , rax call hexvar mov rdi , qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar cmp qword ptr [ num ] , num setne al mov byte ptr [ rbp - hexvar ] , al xor eax , eax mov cl , byte ptr [ rbp - hexvar ] test cl , num mov edx , num cmovne eax , edx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ hexvar ] mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] cmp rax , num mov ecx , hexvar mov edx , hexvar cmove edx , ecx mov dword ptr [ rbp - hexvar ] , edx jmp hexvar cmp qword ptr [ hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar movabs rdi , hexvar call hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ hexvar ] call hexvar cmp qword ptr [ hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rsi , qword ptr [ rbp - hexvar ] movabs rdi , hexvar call hexvar mov qword ptr [ hexvar ] , rax call hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar xor eax , eax mov rcx , qword ptr [ hexvar ] cmp rcx , num mov edx , num cmovne eax , edx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rcx cmp qword ptr [ num ] , num sete dl mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar cmp qword ptr [ num ] , num jne hexvar movabs rdi , num call hexvar jmp hexvar mov rdi , qword ptr [ num ] call hexvar cmp qword ptr [ num ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax ] movabs rdi , num call hexvar mov qword ptr [ num ] , rax call hexvar mov rdi , qword ptr [ num ] call hexvar jmp hexvar xor eax , eax mov rcx , qword ptr [ num ] cmp rcx , num mov edx , num cmovne eax , edx mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ num ] , num jne hexvar cmp qword ptr [ num ] , num jne hexvar movabs rdi , num call hexvar mov rdi , qword ptr [ num ] call hexvar cmp qword ptr [ num ] , num jne hexvar mov rsi , qword ptr [ rbp - num ] movabs rdi , num call hexvar mov qword ptr [ num ] , rax call hexvar mov rdi , qword ptr [ num ] call hexvar xor eax , eax mov rcx , qword ptr [ num ] cmp rcx , num mov edx , num cmovne eax , edx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ hexvar ] , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rdi , hexvar call hexvar jmp hexvar mov rdi , qword ptr [ hexvar ] call hexvar mov rdi , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] cmp rax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rsi , qword ptr [ rbp - num ] movabs rdi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ hexvar ] , rax call hexvar mov rdi , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar cmp qword ptr [ hexvar ] , num setne al mov byte ptr [ rbp - hexvar ] , al xor eax , eax mov cl , byte ptr [ rbp - hexvar ] test cl , num mov edx , num cmovne eax , edx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ num ] , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movabs rdi , num call hexvar jmp hexvar mov rdi , qword ptr [ num ] call hexvar mov rdi , qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] cmp rax , num sete cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rsi , qword ptr [ rbp - num ] movabs rdi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ num ] , rax call hexvar mov rdi , qword ptr [ num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar cmp qword ptr [ num ] , num setne al mov byte ptr [ rbp - hexvar ] , al xor eax , eax mov cl , byte ptr [ rbp - hexvar ] test cl , num mov edx , num cmovne eax , edx add rsp , hexvar pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi mov r15 , rdi mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + num ] , num mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r15 call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp r12d , hexvar mov rbx , qword ptr [ rsp + hexvar ] jg hexvar mov rdi , r15 mov esi , hexvar xor edx , edx call hexvar mov rax , qword ptr [ r15 + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar call hexvar lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov edi , eax call hexvar test bl , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov ecx , dword ptr [ r13 ] mov eax , ecx and eax , hexvar cmp eax , hexvar setne al cmp ecx , hexvar setl cl cmp dword ptr [ rsp + num ] , hexvar je hexvar or cl , al je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov eax , dword ptr [ r13 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rsp + num ] cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov ebp , num test r14b , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar cmp byte ptr [ r15 + hexvar ] , num js hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi mov r15 , rdi mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + num ] , num mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r15 call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp r12d , hexvar mov rbx , qword ptr [ rsp + hexvar ] jg hexvar mov rdi , r15 mov esi , hexvar xor edx , edx call hexvar mov rax , qword ptr [ r15 + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar call hexvar lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov edi , eax call hexvar test bl , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov ecx , dword ptr [ r13 ] mov eax , ecx and eax , hexvar cmp eax , hexvar setne al cmp ecx , hexvar setl cl cmp dword ptr [ rsp + num ] , hexvar je hexvar or cl , al je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov eax , dword ptr [ r13 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rsp + num ] cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov ebp , num test r14b , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar cmp byte ptr [ r15 + hexvar ] , num js hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi mov r15 , rdi mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + num ] , num mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r15 call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp r12d , hexvar mov rbx , qword ptr [ rsp + hexvar ] jg hexvar mov rdi , r15 mov esi , hexvar xor edx , edx call hexvar mov rax , qword ptr [ r15 + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar call hexvar lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov edi , eax call hexvar test bl , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov ecx , dword ptr [ r13 ] mov eax , ecx and eax , hexvar cmp eax , hexvar setne al cmp ecx , hexvar setl cl cmp dword ptr [ rsp + num ] , hexvar je hexvar or cl , al je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov eax , dword ptr [ r13 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rsp + num ] cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov ebp , num test r14b , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar cmp byte ptr [ r15 + hexvar ] , num js hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi mov r15 , rdi mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + num ] , num mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r15 call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp r12d , hexvar mov rbx , qword ptr [ rsp + hexvar ] jg hexvar mov rdi , r15 mov esi , hexvar xor edx , edx call hexvar mov rax , qword ptr [ r15 + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar call hexvar lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov edi , eax call hexvar test bl , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov ecx , dword ptr [ r13 ] mov eax , ecx and eax , hexvar cmp eax , hexvar setne al cmp ecx , hexvar setl cl cmp dword ptr [ rsp + num ] , hexvar je hexvar or cl , al je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov eax , dword ptr [ r13 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rsp + num ] cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov ebp , num test r14b , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar cmp byte ptr [ r15 + hexvar ] , num js hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ edi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov ebp , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , ecx test byte ptr [ eax + hexvar ] , num je hexvar sub esp , hexvar push esi call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , edx push edx call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num cmp dword ptr [ esp + hexvar ] , hexvar jg hexvar sub esp , num push num push - num push esi call hexvar mov eax , dword ptr [ esi + num ] add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ eax ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar lea edx , [ esp + hexvar ] push edx lea edx , [ esp + hexvar ] push edx push eax call hexvar add esp , hexvar test ebp , hexvar je hexvar test byte ptr [ esi + hexvar ] , num je hexvar test byte ptr [ esi + hexvar ] , num je hexvar test ebp , hexvar je hexvar mov eax , dword ptr [ edi ] mov edx , eax sar edx , num cmp edx , num jne hexvar cmp eax , hexvar jg hexvar cmp dword ptr [ esp + hexvar ] , hexvar jne hexvar test ebp , hexvar jne hexvar mov eax , num test byte ptr [ esp + num ] , hexvar je hexvar test byte ptr [ esi + hexvar ] , num je hexvar test byte ptr [ esi + hexvar ] , hexvar je hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi mov r15 , rdi mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + num ] , num mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r15 call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp r12d , hexvar mov rbx , qword ptr [ rsp + hexvar ] jg hexvar mov rdi , r15 mov esi , hexvar xor edx , edx call hexvar mov rax , qword ptr [ r15 + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar call hexvar lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov edi , eax call hexvar test bl , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov ecx , dword ptr [ r13 ] mov eax , ecx and eax , hexvar cmp eax , hexvar setne al cmp ecx , hexvar setl cl cmp dword ptr [ rsp + num ] , hexvar je hexvar or cl , al je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov eax , dword ptr [ r13 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rsp + num ] cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov ebp , num test r14b , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar cmp byte ptr [ r15 + hexvar ] , num js hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi mov r15 , rdi mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + num ] , num mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r15 call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp r12d , hexvar mov rbx , qword ptr [ rsp + hexvar ] jg hexvar mov rdi , r15 mov esi , hexvar xor edx , edx call hexvar mov rax , qword ptr [ r15 + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar call hexvar lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov edi , eax call hexvar test bl , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov ecx , dword ptr [ r13 ] mov eax , ecx and eax , hexvar cmp eax , hexvar setne al cmp ecx , hexvar setl cl cmp dword ptr [ rsp + num ] , hexvar je hexvar or cl , al je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov eax , dword ptr [ r13 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rsp + num ] cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov ebp , num test r14b , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar cmp byte ptr [ r15 + hexvar ] , num js hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi mov r15 , rdi mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + num ] , num mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r15 call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp r12d , hexvar mov rbx , qword ptr [ rsp + hexvar ] jg hexvar mov rdi , r15 mov esi , hexvar xor edx , edx call hexvar mov rax , qword ptr [ r15 + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar call hexvar lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov edi , eax call hexvar test bl , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov ecx , dword ptr [ r13 ] mov eax , ecx and eax , hexvar cmp eax , hexvar setne al cmp ecx , hexvar setl cl cmp dword ptr [ rsp + num ] , hexvar je hexvar or cl , al je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov eax , dword ptr [ r13 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rsp + num ] cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov ebp , num test r14b , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar cmp byte ptr [ r15 + hexvar ] , num js hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi mov r15 , rdi mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + num ] , num mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r15 call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp r12d , hexvar mov rbx , qword ptr [ rsp + hexvar ] jg hexvar mov rdi , r15 mov esi , hexvar xor edx , edx call hexvar mov rax , qword ptr [ r15 + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar call hexvar lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov edi , eax call hexvar test bl , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov ecx , dword ptr [ r13 ] mov eax , ecx and eax , hexvar cmp eax , hexvar setne al cmp ecx , hexvar setl cl cmp dword ptr [ rsp + num ] , hexvar je hexvar or cl , al je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov eax , dword ptr [ r13 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rsp + num ] cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov ebp , num test r14b , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar cmp byte ptr [ r15 + hexvar ] , num js hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rsi mov r15 , rdi mov dword ptr [ rsp + hexvar ] , num mov dword ptr [ rsp + num ] , num mov rax , qword ptr [ rsi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax + hexvar ] mov r14 , qword ptr [ rax + hexvar ] test byte ptr [ rax + hexvar ] , num je hexvar mov qword ptr [ rsp + hexvar ] , rbx mov rdi , r15 call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax mov rdi , rax call hexvar mov r12d , eax mov rdi , rbx call hexvar cmp r12d , hexvar mov rbx , qword ptr [ rsp + hexvar ] jg hexvar mov rdi , r15 mov esi , hexvar xor edx , edx call hexvar mov rax , qword ptr [ r15 + num ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] test rdi , rdi je hexvar call hexvar lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + num ] mov edi , eax call hexvar test bl , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar test byte ptr [ r15 + hexvar ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov ecx , dword ptr [ r13 ] mov eax , ecx and eax , hexvar cmp eax , hexvar setne al cmp ecx , hexvar setl cl cmp dword ptr [ rsp + num ] , hexvar je hexvar or cl , al je hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar test bl , hexvar je hexvar mov eax , dword ptr [ r13 ] cmp eax , hexvar jl hexvar and eax , hexvar cmp eax , hexvar je hexvar mov eax , dword ptr [ rsp + num ] cmp eax , num je hexvar cmp eax , hexvar jne hexvar mov ebp , num test r14b , hexvar je hexvar test byte ptr [ r15 + hexvar ] , num je hexvar cmp byte ptr [ r15 + hexvar ] , num js hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , s1 move a1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar push dword ptr [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] sub esp , hexvar mov ebx , esp mov dword ptr [ ebx ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx sub esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx call hexvar lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , a0 move a2 , s1 lw gp , hexvar ( sp ) move a0 , s0 lw ra , hexvar ( sp ) move a1 , v0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) j hexvar addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebp ret
mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num je hexvar sub rsp , num call hexvar cmp eax , hexvar sbb eax , eax and eax , hexvar add eax , hexvar add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rdi + num ] mov eax , dword ptr [ rdi + num ] mov dword ptr [ rbp - num ] , eax mov dword ptr [ rbp - hexvar ] , hexvar mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] sub eax , hexvar mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ rbp - hexvar ] , ecx jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] movzx ecx , byte ptr [ rax + hexvar ] mov dword ptr [ rbp - num ] , ecx mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmova ecx , eax mov dword ptr [ rbp - num ] , ecx mov dword ptr [ rbp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
mov rax , qword ptr [ rdi + num ] cmp dword ptr [ rax + num ] , num je hexvar sub rsp , num call hexvar cmp eax , hexvar sbb eax , eax add rsp , num and eax , hexvar add eax , hexvar ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] mov edx , dword ptr [ edx + num ] cmp edx , num jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] movzx eax , byte ptr [ eax + hexvar ] movzx eax , al jmp hexvar sub esp , hexvar push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar cmp eax , hexvar jbe hexvar mov eax , hexvar jmp hexvar mov eax , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
ldr r3 , [ r0 , num ] ldr r2 , [ r3 , num ] cmp r2 , num beq hexvar push { r4 , lr } bl hexvar cmp r0 , hexvar movhi r0 , hexvar movls r0 , hexvar pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 ) lw a1 , num ( v0 )
ldr r3 , [ r0 , num ] ldr r2 , [ r3 , num ] cmp r2 , num beq hexvar push { r4 , lr } bl hexvar cmp r0 , hexvar movhi r0 , hexvar movls r0 , hexvar pop { r4 , pc }
ldr r3 , [ r0 , num ] ldr r2 , [ r3 , num ] cmp r2 , num beq hexvar push { r4 , lr } bl hexvar cmp r0 , hexvar movhi r0 , hexvar movls r0 , hexvar pop { r4 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , a1 jalr t9 move s0 , a1 sltiu v0 , v0 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( s1 )
push r14 push rbx push rax mov rbx , rsi mov r14 , rdi test rsi , rsi je hexvar mov rdi , rbx call hexvar cmp rax , hexvar jb hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , a1 jalr t9 move s0 , a1 sltiu v0 , v0 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( s1 )
push r14 push rbx push rax mov rbx , rsi mov r14 , rdi test rsi , rsi je hexvar mov rdi , rbx call hexvar cmp rax , hexvar jb hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax add rsp , num pop rbx pop r14 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 cmp r3 , hexvar bls hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r0 , [ sp , num ] bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rsi mov r14 , rdi add r14 , hexvar mov eax , hexvar mov r13d , hexvar mov r15d , hexvar mov r12d , hexvar jmp hexvar mov eax , hexvar xor ebp , ebp nop dword ptr [ rax + rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov eax , hexvar mov ebp , num jmp hexvar nop word ptr [ rax + rax ] cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar test rbx , rbx setne byte ptr [ rsp + num ] cmp byte ptr [ rsp + num ] , num mov eax , hexvar cmovne eax , r12d jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar jmp hexvar mov rdi , rbx call hexvar cmp rax , hexvar mov eax , hexvar mov ecx , hexvar cmova eax , ecx jmp hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , num mov eax , hexvar jmp hexvar mov rdi , rbx call hexvar mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rcx ] , rax test rax , rax mov eax , hexvar cmove eax , r15d jmp hexvar mov qword ptr [ rsp + num ] , r14 mov rax , qword ptr [ rsp + num ] mov rax , qword ptr [ rax ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar mov ecx , hexvar cmove eax , ecx jmp hexvar cmp byte ptr [ rsp + num ] , num mov eax , hexvar cmovne eax , r13d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov ecx , hexvar mov eax , num mov edi , esi repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub eax , num cmp eax , hexvar ja hexvar mov eax , dword ptr [ ebp + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar mov dword ptr [ ebp + hexvar ] , eax add esp , hexvar test eax , eax setne al movzx eax , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov ecx , hexvar mov eax , num mov edi , esi repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub eax , num cmp eax , hexvar ja hexvar mov eax , dword ptr [ ebp + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar mov dword ptr [ ebp + hexvar ] , eax add esp , hexvar test eax , eax setne al movzx eax , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , a1 jalr t9 move s0 , a1 sltiu v0 , v0 , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a1 , hexvar move s1 , a0 move s0 , a1 move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) sltiu v0 , v0 , hexvar beqz v0 , hexvar addiu v0 , zero , hexvar lw a0 , hexvar ( s1 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + num ] , rdi xor r14d , r14d test edx , edx je hexvar mov r13d , ecx mov rbp , rsi jle hexvar mov r12d , edx mov dword ptr [ rsp ] , r9d xor r15d , r15d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] lea eax , [ r12 + r15 ] mov r14d , eax shr r14d , hexvar add r14d , eax sar r14d , num mov eax , r14d imul eax , r13d movsxd rbx , eax add rbx , rbp mov rdi , qword ptr [ rsp + num ] mov rsi , rbx call qword ptr [ rsp + hexvar ] mov ecx , r14d test eax , eax js hexvar test eax , eax je hexvar lea r15d , [ r14 + num ] mov ecx , r12d mov r12d , ecx cmp r15d , ecx jl hexvar mov al , num mov r9d , dword ptr [ rsp ] test r9b , num jne hexvar xor ebx , ebx jmp hexvar xor eax , eax xor ebx , ebx test r9b , num je hexvar test al , al jne hexvar movsxd rbx , r14d movsxd r14 , r13d mov rax , rbp mov ebp , ebx imul ebp , r13d lea r15 , [ rbx + num ] add rbx , - num imul rbx , r14 mov qword ptr [ rsp ] , rax add rbx , rax neg r14 nop dword ptr [ rax + rax ] mov r12d , ebp add r15 , - num jle hexvar mov ebp , r12d sub ebp , r13d mov rsi , rbx lea rbx , [ rbx + r14 ] mov rdi , qword ptr [ rsp + num ] call qword ptr [ rsp + hexvar ] test eax , eax je hexvar movsxd rax , r12d mov rbx , qword ptr [ rsp ] add rbx , rax mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + num ] , rdi xor r14d , r14d test edx , edx je hexvar mov r13d , ecx mov rbp , rsi jle hexvar mov r12d , edx mov dword ptr [ rsp ] , r9d xor r15d , r15d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] lea eax , [ r12 + r15 ] mov r14d , eax shr r14d , hexvar add r14d , eax sar r14d , num mov eax , r14d imul eax , r13d movsxd rbx , eax add rbx , rbp mov rdi , qword ptr [ rsp + num ] mov rsi , rbx call qword ptr [ rsp + hexvar ] mov ecx , r14d test eax , eax js hexvar test eax , eax je hexvar lea r15d , [ r14 + num ] mov ecx , r12d mov r12d , ecx cmp r15d , ecx jl hexvar mov al , num mov r9d , dword ptr [ rsp ] test r9b , num jne hexvar xor ebx , ebx jmp hexvar xor eax , eax xor ebx , ebx test r9b , num je hexvar test al , al jne hexvar movsxd rbx , r14d movsxd r14 , r13d mov rax , rbp mov ebp , ebx imul ebp , r13d lea r15 , [ rbx + num ] add rbx , - num imul rbx , r14 mov qword ptr [ rsp ] , rax add rbx , rax neg r14 nop dword ptr [ rax + rax ] mov r12d , ebp add r15 , - num jle hexvar mov ebp , r12d sub ebp , r13d mov rsi , rbx lea rbx , [ rbx + r14 ] mov rdi , qword ptr [ rsp + num ] call qword ptr [ rsp + hexvar ] test eax , eax je hexvar movsxd rax , r12d mov rbx , qword ptr [ rsp ] add rbx , rax mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] cmp edi , num je hexvar jle hexvar xor ebp , ebp mov dword ptr [ esp + hexvar ] , edi mov edi , ebp mov ebp , dword ptr [ esp + hexvar ] jmp hexvar nop lea esi , [ esi ] je hexvar lea edi , [ ebx + num ] cmp ebp , edi jle hexvar lea eax , [ edi + ebp ] mov esi , dword ptr [ esp + hexvar ] sub esp , num mov ebx , eax shr ebx , hexvar add ebx , eax sar ebx , num imul esi , ebx add esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx push esi push dword ptr [ esp + hexvar ] call dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax jns hexvar mov ebp , ebx cmp ebp , edi jg hexvar test eax , eax je hexvar test byte ptr [ esp + hexvar ] , num je hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + num ] , rdi xor r14d , r14d test edx , edx je hexvar mov r13d , ecx mov rbp , rsi jle hexvar mov r12d , edx mov dword ptr [ rsp ] , r9d xor r15d , r15d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] lea eax , [ r12 + r15 ] mov r14d , eax shr r14d , hexvar add r14d , eax sar r14d , num mov eax , r14d imul eax , r13d movsxd rbx , eax add rbx , rbp mov rdi , qword ptr [ rsp + num ] mov rsi , rbx call qword ptr [ rsp + hexvar ] mov ecx , r14d test eax , eax js hexvar test eax , eax je hexvar lea r15d , [ r14 + num ] mov ecx , r12d mov r12d , ecx cmp r15d , ecx jl hexvar mov al , num mov r9d , dword ptr [ rsp ] test r9b , num jne hexvar xor ebx , ebx jmp hexvar xor eax , eax xor ebx , ebx test r9b , num je hexvar test al , al jne hexvar movsxd rbx , r14d movsxd r14 , r13d mov rax , rbp mov ebp , ebx imul ebp , r13d lea r15 , [ rbx + num ] add rbx , - num imul rbx , r14 mov qword ptr [ rsp ] , rax add rbx , rax neg r14 nop dword ptr [ rax + rax ] mov r12d , ebp add r15 , - num jle hexvar mov ebp , r12d sub ebp , r13d mov rsi , rbx lea rbx , [ rbx + r14 ] mov rdi , qword ptr [ rsp + num ] call qword ptr [ rsp + hexvar ] test eax , eax je hexvar movsxd rax , r12d mov rbx , qword ptr [ rsp ] add rbx , rax mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push edi push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test ecx , ecx mov edi , dword ptr [ esp + hexvar ] je hexvar mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ebx pop ebx pop esi pop edi jmp hexvar pop ebx xor eax , eax pop esi pop edi ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + num ] , rdi xor r14d , r14d test edx , edx je hexvar mov r13d , ecx mov rbp , rsi jle hexvar mov r12d , edx mov dword ptr [ rsp ] , r9d xor r15d , r15d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] lea eax , [ r12 + r15 ] mov r14d , eax shr r14d , hexvar add r14d , eax sar r14d , num mov eax , r14d imul eax , r13d movsxd rbx , eax add rbx , rbp mov rdi , qword ptr [ rsp + num ] mov rsi , rbx call qword ptr [ rsp + hexvar ] mov ecx , r14d test eax , eax js hexvar test eax , eax je hexvar lea r15d , [ r14 + num ] mov ecx , r12d mov r12d , ecx cmp r15d , ecx jl hexvar mov al , num mov r9d , dword ptr [ rsp ] test r9b , num jne hexvar xor ebx , ebx jmp hexvar xor eax , eax xor ebx , ebx test r9b , num je hexvar test al , al jne hexvar movsxd rbx , r14d movsxd r14 , r13d mov rax , rbp mov ebp , ebx imul ebp , r13d lea r15 , [ rbx + num ] add rbx , - num imul rbx , r14 mov qword ptr [ rsp ] , rax add rbx , rax neg r14 nop dword ptr [ rax + rax ] mov r12d , ebp add r15 , - num jle hexvar mov ebp , r12d sub ebp , r13d mov rsi , rbx lea rbx , [ rbx + r14 ] mov rdi , qword ptr [ rsp + num ] call qword ptr [ rsp + hexvar ] test eax , eax je hexvar movsxd rax , r12d mov rbx , qword ptr [ rsp ] add rbx , rax mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + num ] , rdi xor r14d , r14d test edx , edx je hexvar mov r13d , ecx mov rbp , rsi jle hexvar mov r12d , edx mov dword ptr [ rsp ] , r9d xor r15d , r15d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] lea eax , [ r12 + r15 ] mov r14d , eax shr r14d , hexvar add r14d , eax sar r14d , num mov eax , r14d imul eax , r13d movsxd rbx , eax add rbx , rbp mov rdi , qword ptr [ rsp + num ] mov rsi , rbx call qword ptr [ rsp + hexvar ] mov ecx , r14d test eax , eax js hexvar test eax , eax je hexvar lea r15d , [ r14 + num ] mov ecx , r12d mov r12d , ecx cmp r15d , ecx jl hexvar mov al , num mov r9d , dword ptr [ rsp ] test r9b , num jne hexvar xor ebx , ebx jmp hexvar xor eax , eax xor ebx , ebx test r9b , num je hexvar test al , al jne hexvar movsxd rbx , r14d movsxd r14 , r13d mov rax , rbp mov ebp , ebx imul ebp , r13d lea r15 , [ rbx + num ] add rbx , - num imul rbx , r14 mov qword ptr [ rsp ] , rax add rbx , rax neg r14 nop dword ptr [ rax + rax ] mov r12d , ebp add r15 , - num jle hexvar mov ebp , r12d sub ebp , r13d mov rsi , rbx lea rbx , [ rbx + r14 ] mov rdi , qword ptr [ rsp + num ] call qword ptr [ rsp + hexvar ] test eax , eax je hexvar movsxd rax , r12d mov rbx , qword ptr [ rsp ] add rbx , rax mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] test edi , edi je hexvar test edi , edi jle hexvar mov ebp , num jmp hexvar mov edi , ebx cmp edi , ebp jle hexvar lea eax , [ ebp + edi ] mov ebx , eax shr ebx , hexvar add ebx , eax sar ebx , num mov dword ptr [ esp + hexvar ] , ebx mov esi , ebx imul esi , dword ptr [ esp + hexvar ] add esi , dword ptr [ esp + hexvar ] sub esp , num push esi push dword ptr [ esp + hexvar ] call dword ptr [ esp + hexvar ] add esp , hexvar test eax , eax js hexvar test eax , eax jle hexvar lea ebp , [ ebx + num ] jmp hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] and eax , num mov eax , num cmove esi , eax mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r8 mov qword ptr [ rsp + num ] , rdi xor r14d , r14d test edx , edx je hexvar mov r13d , ecx mov rbp , rsi jle hexvar mov r12d , edx mov dword ptr [ rsp ] , r9d xor r15d , r15d nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] lea eax , [ r12 + r15 ] mov r14d , eax shr r14d , hexvar add r14d , eax sar r14d , num mov eax , r14d imul eax , r13d movsxd rbx , eax add rbx , rbp mov rdi , qword ptr [ rsp + num ] mov rsi , rbx call qword ptr [ rsp + hexvar ] mov ecx , r14d test eax , eax js hexvar test eax , eax je hexvar lea r15d , [ r14 + num ] mov ecx , r12d mov r12d , ecx cmp r15d , ecx jl hexvar mov al , num mov r9d , dword ptr [ rsp ] test r9b , num jne hexvar xor ebx , ebx jmp hexvar xor eax , eax xor ebx , ebx test r9b , num je hexvar test al , al jne hexvar movsxd rbx , r14d movsxd r14 , r13d mov rax , rbp mov ebp , ebx imul ebp , r13d lea r15 , [ rbx + num ] add rbx , - num imul rbx , r14 mov qword ptr [ rsp ] , rax add rbx , rax neg r14 nop dword ptr [ rax + rax ] mov r12d , ebp add r15 , - num jle hexvar mov ebp , r12d sub ebp , r13d mov rsi , rbx lea rbx , [ rbx + r14 ] mov rdi , qword ptr [ rsp + num ] call qword ptr [ rsp + hexvar ] test eax , eax je hexvar movsxd rax , r12d mov rbx , qword ptr [ rsp ] add rbx , rax mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push edi push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test ecx , ecx mov edi , dword ptr [ esp + hexvar ] je hexvar mov dword ptr [ esp + hexvar ] , edi mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , ebx pop ebx pop esi pop edi jmp hexvar pop ebx xor eax , eax pop esi pop edi ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar mov ebp , dword ptr [ esp + hexvar ] sub esp , hexvar mov esi , eax push num call hexvar add esp , hexvar push esi push ebp push num push num push num push eax push edi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] lea rsi , [ rsp + hexvar ] call hexvar test eax , eax jle hexvar mov ebp , eax mov edi , num call hexvar mov r9 , qword ptr [ rsp + hexvar ] mov dword ptr [ rsp ] , ebp mov rdi , rbx mov rsi , rax xor edx , edx mov ecx , num xor r8d , r8d call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] lea rsi , [ rsp + hexvar ] call hexvar test eax , eax jle hexvar mov ebp , eax mov edi , num call hexvar mov r9 , qword ptr [ rsp + hexvar ] mov dword ptr [ rsp ] , ebp mov rdi , rbx mov rsi , rax xor edx , edx mov ecx , num xor r8d , r8d call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] lea rsi , [ rsp + hexvar ] call hexvar test eax , eax jle hexvar mov ebp , eax mov edi , num call hexvar mov r9 , qword ptr [ rsp + hexvar ] mov dword ptr [ rsp ] , ebp mov rdi , rbx mov rsi , rax xor edx , edx mov ecx , num xor r8d , r8d call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar mov ebp , dword ptr [ esp + hexvar ] sub esp , hexvar mov esi , eax push num call hexvar add esp , hexvar push esi push ebp push num push num push num push eax push edi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) addiu v1 , sp , hexvar move a1 , v1 move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bgtz v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move a0 , v0 lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) addiu a3 , zero , num move a2 , zero move a1 , a0 lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu v0 , zero , num lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push rbx sub rsp , hexvar mov rbx , rdi lea rax , [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] mov rsi , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar jmp hexvar call hexvar mov eax , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp dword ptr [ rsp + hexvar ] , num mov eax , hexvar cmovle eax , r15d jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov edi , num call hexvar mov r9 , qword ptr [ rsp + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] mov dword ptr [ rsp ] , ecx mov rdi , rbx mov rsi , rax xor edx , edx mov ecx , num xor r8d , r8d call hexvar test eax , eax mov eax , hexvar cmove eax , r14d jmp hexvar mov eax , hexvar mov ebp , num jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov eax , ebp add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] lea rsi , [ rsp + hexvar ] call hexvar test eax , eax jle hexvar mov ebp , eax mov edi , num call hexvar mov r9 , qword ptr [ rsp + hexvar ] mov dword ptr [ rsp ] , ebp mov rdi , rbx mov rsi , rax xor edx , edx mov ecx , num xor r8d , r8d call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] lea rsi , [ rsp + hexvar ] call hexvar test eax , eax jle hexvar mov ebp , eax mov edi , num call hexvar mov r9 , qword ptr [ rsp + hexvar ] mov dword ptr [ rsp ] , ebp mov rdi , rbx mov rsi , rax xor edx , edx mov ecx , num xor r8d , r8d call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + hexvar ] , num mov rdi , qword ptr [ rsi + hexvar ] lea rsi , [ rsp + hexvar ] call hexvar test eax , eax jle hexvar mov ebp , eax mov edi , num call hexvar mov r9 , qword ptr [ rsp + hexvar ] mov dword ptr [ rsp ] , ebp mov rdi , rbx mov rsi , rax xor edx , edx mov ecx , num xor r8d , r8d call hexvar mov ecx , eax mov eax , num test ecx , ecx je hexvar add rsp , hexvar pop rbx pop rbp ret
mov eax , num cmp qword ptr [ rdi + hexvar ] , num jne hexvar push rbp push rbx sub rsp , num mov rbx , rdi mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov rbp , rax mov eax , num test rbp , rbp js hexvar mov rsi , rbp mov rdi , rbx call hexvar mov qword ptr [ rbx + hexvar ] , rax test rbp , rbp je hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , rax mov rdi , rbx call qword ptr [ rdx + hexvar ] mov rdx , rax mov eax , num test rdx , rdx js hexvar mov dword ptr [ rbx + hexvar ] , edx mov eax , num add rsp , num pop rbx pop rbp ret
cmp qword ptr [ rdi + hexvar ] , num mov eax , num jne hexvar push rbp push rbx mov rbx , rdi sub rsp , num mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test rax , rax mov rbp , rax js hexvar mov rsi , rax mov rdi , rbx call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax jne hexvar test rbp , rbp jne hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , rax mov rdi , rbx call qword ptr [ rdx + hexvar ] test rax , rax js hexvar mov dword ptr [ rbx + hexvar ] , eax add rsp , num mov eax , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 ) bnez v0 , hexvar move s0 , a0 lw v0 , num ( a0 ) lw t9 , hexvar ( v0 ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar move s1 , v0 sra a2 , v0 , hexvar move a3 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , hexvar ( s0 ) lw v1 , num ( s0 ) lw t9 , hexvar ( v1 ) move a1 , v0 move a0 , s0 jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar nop sw v0 , hexvar ( s0 ) b hexvar addiu v0 , zero , num beqz s1 , hexvar nop b hexvar move v0 , zero b hexvar addiu v0 , zero , num move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero
ldr r3 , [ r0 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ r0 , num ] push { r4 , r5 , r6 , lr } ldr r3 , [ r3 , hexvar ] mov r4 , r0 blx r3 subs r5 , r0 , num blt hexvar mov r1 , r5 mov r0 , r4 bl hexvar adds r5 , r5 , num movne r5 , num cmp r0 , num movne r5 , num cmp r5 , num str r0 , [ r4 , hexvar ] bne hexvar ldr r3 , [ r4 , num ] mov r1 , r0 ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 cmp r0 , num blt hexvar str r0 , [ r4 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jge hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rsi + hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp rax , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rcx mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jge hexvar mov dword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , ecx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
cmp qword ptr [ rdi + hexvar ] , num mov eax , num jne hexvar push rbp push rbx mov rbx , rdi sub rsp , num mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] test rax , rax mov rbp , rax js hexvar mov rsi , rax mov rdi , rbx call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax jne hexvar test rbp , rbp jne hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , rax mov rdi , rbx call qword ptr [ rdx + hexvar ] test rax , rax js hexvar mov dword ptr [ rbx + hexvar ] , eax add rsp , num mov eax , num pop rbx pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , rdx call rax mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test rax , rax jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rbx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call rbx mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov eax , num add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ ebp + num ] call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cdq sub esp , num push edx push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push edx push dword ptr [ ebp + num ] call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push edi push esi mov eax , num push ebx mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx jne hexvar sub esp , hexvar mov eax , dword ptr [ esi + num ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax mov edi , eax js hexvar sub esp , num cdq push edx push eax push esi call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + hexvar ] , eax jne hexvar test edi , edi jne hexvar sub esp , num mov edx , dword ptr [ esi + num ] push eax push esi call dword ptr [ edx + hexvar ] add esp , hexvar test eax , eax js hexvar mov dword ptr [ esi + hexvar ] , eax mov eax , num pop ebx pop esi pop edi ret
mov eax , num cmp qword ptr [ rdi + hexvar ] , num jne hexvar push rbp push rbx sub rsp , num mov rbx , rdi mov rax , qword ptr [ rdi + num ] call qword ptr [ rax + hexvar ] mov rbp , rax mov eax , num test rbp , rbp js hexvar mov rsi , rbp mov rdi , rbx call hexvar mov qword ptr [ rbx + hexvar ] , rax test rbp , rbp je hexvar test rax , rax je hexvar mov rdx , qword ptr [ rbx + num ] mov rsi , rax mov rdi , rbx call qword ptr [ rdx + hexvar ] mov rdx , rax mov eax , num test rdx , rdx js hexvar mov dword ptr [ rbx + hexvar ] , edx mov eax , num add rsp , num pop rbx pop rbp ret
push r12 push rbp mov r12 , rdi push rbx mov rax , qword ptr [ rdi + num ] mov rbp , rdx mov rbx , rsi mov rdi , rsi call qword ptr [ rax + hexvar ] mov qword ptr [ rbp ] , rax mov rax , qword ptr [ r12 + num ] lea rdi , [ rbx + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , num mov qword ptr [ rbp + num ] , rax pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx mov r12 , rdi mov rbx , rsi mov rbp , rdx mov rax , qword ptr [ rdi + num ] mov rdi , rsi call qword ptr [ rax + hexvar ] mov qword ptr [ rbp ] , rax lea rdi , [ rbx + num ] mov rax , qword ptr [ r12 + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + num ] , rax mov qword ptr [ rbp + hexvar ] , num pop rbx pop rbp pop r12 ret
push r12 push rbp mov r12 , rdi push rbx mov rax , qword ptr [ rdi + num ] mov rbp , rdx mov rbx , rsi mov rdi , rsi call qword ptr [ rax + hexvar ] mov qword ptr [ rbp ] , rax mov rax , qword ptr [ r12 + num ] lea rdi , [ rbx + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + hexvar ] , num mov qword ptr [ rbp + num ] , rax pop rbx pop rbp pop r12 ret
push r12 push rbp push rbx mov r12 , rdi mov rbx , rsi mov rbp , rdx mov rax , qword ptr [ rdi + num ] mov rdi , rsi call qword ptr [ rax + hexvar ] mov qword ptr [ rbp ] , rax lea rdi , [ rbx + num ] mov rax , qword ptr [ r12 + num ] call qword ptr [ rax + hexvar ] mov qword ptr [ rbp + num ] , rax mov qword ptr [ rbp + hexvar ] , num pop rbx pop rbp pop r12 ret
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r5 , r1 mov r4 , r2 ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r1 blx r3 str r0 , [ r4 ] ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 str r0 , [ r4 , num ] mov r3 , num str r3 , [ r4 , num ] pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s2 , a0 move s1 , a1 move s0 , a2 lw v0 , num ( a0 )
ldr r3 , [ r0 , num ] push { r4 , r5 , r6 , lr } mov r6 , r0 ldr r3 , [ r3 , hexvar ] mov r0 , r1 mov r4 , r2 mov r5 , r1 blx r3 ldr r3 , [ r6 , num ] str r0 , [ r4 ] ldr r3 , [ r3 , hexvar ] add r0 , r5 , num blx r3 mov r3 , num stmib r4 , { r0 , r3 } pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s2 , a0 move s1 , a1 move s0 , a2 lw v0 , num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rdx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov rdi , rdx call rax mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rdx + num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , num add rsp , hexvar pop rbp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov qword ptr [ rsp + num ] , rsi mov dword ptr [ rsp + hexvar ] , edx mov rsi , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rsi xor esi , esi test edx , edx jne hexvar mov rax , qword ptr [ rdi + hexvar ] lea r14 , [ rax + hexvar ] mov ebx , num mov rax , qword ptr [ r12 + num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp ] , rax mov rax , qword ptr [ r14 + hexvar ] shr rax , num mov qword ptr [ rsp + hexvar ] , rax test rax , rax jne hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov r13d , num mov ebx , num mov rax , qword ptr [ rsp ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rsi , r13 mov rdi , r12 call rax sub rbx , r13 mov rax , rbx sar rax , num movabs rdx , hexvar imul rax , rdx mov rbp , rax mov rdx , qword ptr [ rsp + num ] test rdx , rdx je hexvar lea rcx , [ rax - num ] test rbx , rbx jle hexvar add rdx , num mov qword ptr [ rdx - num ] , r13 add r13 , hexvar sub rax , num test rax , rax jg hexvar test rcx , rcx mov eax , num cmovs rcx , rax mov rax , qword ptr [ rsp + num ] lea rax , [ rax + rcx * num + num ] mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rsp + hexvar ] test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar cmp qword ptr [ r14 + hexvar ] , rdi je hexvar call hexvar mov rax , rbp mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 mov r15 , rdi push r13 push r12 push rbp push rbx mov rbp , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test edx , edx mov dword ptr [ rsp + hexvar ] , edx mov rax , qword ptr [ rdi + hexvar ] jne hexvar lea r14 , [ rax + hexvar ] xor r13d , r13d mov rax , qword ptr [ r15 + num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp ] , rax mov rax , qword ptr [ r14 + hexvar ] shr rax , num test rax , rax mov qword ptr [ rsp + num ] , rax jne hexvar xor r13d , r13d xor ebx , ebx mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num xor r12d , r12d mov rax , qword ptr [ rsp ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rsp + num ] mov rsi , r12 mov rdi , r15 call rax test rbp , rbp je hexvar test rbx , rbx jle hexvar mov rax , r13 nop dword ptr [ rax + rax ] add rbp , num sub rax , num mov qword ptr [ rbp - num ] , r12 add r12 , hexvar test rax , rax jg hexvar mov qword ptr [ rbp ] , num mov rax , qword ptr [ rsp + hexvar ] test rax , rax je hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax je hexvar cmp qword ptr [ r14 + hexvar ] , rax je hexvar mov rdi , rax call hexvar mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] mov rax , r13 jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r7 , r0 str r1 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs r3 , r2 , num mov r6 , r3 bne hexvar ldr sb , [ r0 , hexvar ] add sb , sb , hexvar mov r4 , num ldr r3 , [ r7 , num ] ldr fp , [ r3 , hexvar ] ldr r3 , [ sb , hexvar ] lsrs r3 , r3 , num str r3 , [ sp , hexvar ] bne hexvar mov r3 , num str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] mov r8 , r3 mov r6 , r3 ldr r3 , [ fp , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] mov r1 , r8 mov r0 , r7 blx r3 sub r6 , r6 , r8 asr r4 , r6 , num ldr r3 , [ pc , hexvar ] mul r5 , r3 , r4 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar sub r1 , r5 , num cmp r6 , num ble hexvar sub r2 , r3 , num mov r3 , r5 mov r4 , r5 str r8 , [ r2 , num ] ! add r8 , r8 , hexvar sub r3 , r3 , num cmp r3 , num bgt hexvar mov r5 , r4 bic r1 , r1 , r1 , asr num add r1 , r1 , num ldr r3 , [ sp , hexvar ] add r3 , r3 , r1 , lsl num str r3 , [ sp , hexvar ] mov r3 , num ldr r2 , [ sp , hexvar ] str r3 , [ r2 ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar mov r0 , r3 bl hexvar ldr r0 , [ sp , hexvar ] cmp r0 , num beq hexvar ldr r3 , [ sb , hexvar ] cmp r3 , r0 beq hexvar bl hexvar mov r0 , r5 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r3 ] subs r4 , r2 , num str r3 , [ sp , hexvar ] ldr r3 , [ r0 , hexvar ] mov r6 , r0 str r4 , [ sp , hexvar ] mov sb , r1 addeq fp , r3 , hexvar beq hexvar ldr r4 , [ r3 , hexvar ] ldr r2 , [ r3 , hexvar ] cmp r4 , num addne r4 , r3 , hexvar cmp r2 , num add fp , r3 , hexvar bne hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r6 , num ] ldr r8 , [ fp , hexvar ] ldr r3 , [ r3 , hexvar ] lsrs r8 , r8 , num str r3 , [ sp , hexvar ] bne hexvar mov sl , r8 mov r4 , r8 mov r7 , r8 str r8 , [ sp , hexvar ] str r8 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar mov r2 , r8 mov r0 , r6 mov r1 , r7 blx r3 cmp sb , num beq hexvar cmp r4 , num ble hexvar mov r3 , sl mov r5 , sl sub r3 , r3 , num cmp r3 , num str r7 , [ sb ] , num add r7 , r7 , hexvar bgt hexvar mov sl , r5 mov r3 , num str r3 , [ sb ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar mov r0 , r3 bl hexvar ldr r2 , [ sp , hexvar ] cmp r2 , num beq hexvar ldr r3 , [ fp , hexvar ] cmp r3 , r2 beq hexvar mov r0 , r2 bl hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r0 , sl cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r12 , rdi mov qword ptr [ rsp + num ] , rsi mov dword ptr [ rsp + hexvar ] , edx mov rsi , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rsi xor esi , esi test edx , edx jne hexvar mov rax , qword ptr [ rdi + hexvar ] lea r14 , [ rax + hexvar ] mov ebx , num mov rax , qword ptr [ r12 + num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp ] , rax mov rax , qword ptr [ r14 + hexvar ] shr rax , num mov qword ptr [ rsp + hexvar ] , rax test rax , rax jne hexvar mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num mov r13d , num mov ebx , num mov rax , qword ptr [ rsp ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rsp + hexvar ] mov rsi , r13 mov rdi , r12 call rax sub rbx , r13 mov rax , rbx sar rax , num movabs rdx , hexvar imul rax , rdx mov rbp , rax mov rdx , qword ptr [ rsp + num ] test rdx , rdx je hexvar lea rcx , [ rax - num ] test rbx , rbx jle hexvar add rdx , num mov qword ptr [ rdx - num ] , r13 add r13 , hexvar sub rax , num test rax , rax jg hexvar test rcx , rcx mov eax , num cmovs rcx , rax mov rax , qword ptr [ rsp + num ] lea rax , [ rax + rcx * num + num ] mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rsp + hexvar ] test rax , rax je hexvar mov rdi , rax call hexvar mov rdi , qword ptr [ rsp + hexvar ] test rdi , rdi je hexvar cmp qword ptr [ r14 + hexvar ] , rdi je hexvar call hexvar mov rax , rbp mov rdi , qword ptr [ rsp + hexvar ] xor rdi , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s7 , hexvar ( sp ) move s7 , a0 lw v0 , - hexvar ( gp ) sw s4 , hexvar ( sp ) move s4 , a2 sw s0 , hexvar ( sp ) move s0 , a1 move v1 , v0 sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( v1 ) lw v0 , hexvar ( a0 )
push r15 push r14 mov r15 , rdi push r13 push r12 push rbp push rbx mov rbp , rsi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test edx , edx mov dword ptr [ rsp + hexvar ] , edx mov rax , qword ptr [ rdi + hexvar ] jne hexvar lea r14 , [ rax + hexvar ] xor r13d , r13d mov rax , qword ptr [ r15 + num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rsp ] , rax mov rax , qword ptr [ r14 + hexvar ] shr rax , num test rax , rax mov qword ptr [ rsp + num ] , rax jne hexvar xor r13d , r13d xor ebx , ebx mov qword ptr [ rsp + hexvar ] , num mov qword ptr [ rsp + hexvar ] , num xor r12d , r12d mov rax , qword ptr [ rsp ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov edx , dword ptr [ rsp + num ] mov rsi , r12 mov rdi , r15 call rax test rbp , rbp je hexvar test rbx , rbx jle hexvar mov rax , r13 nop dword ptr [ rax + rax ] add rbp , num sub rax , num mov qword ptr [ rbp - num ] , r12 add r12 , hexvar test rax , rax jg hexvar mov qword ptr [ rbp ] , num mov rax , qword ptr [ rsp + hexvar ] test rax , rax je hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax je hexvar cmp qword ptr [ r14 + hexvar ] , rax je hexvar mov rdi , rax call hexvar mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] mov rax , r13 jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s7 , hexvar ( sp ) move s7 , a0 lw v0 , - hexvar ( gp ) sw s4 , hexvar ( sp ) move s4 , a2 sw s0 , hexvar ( sp ) move s0 , a1 move v1 , v0 sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( v1 ) lw v0 , hexvar ( a0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr r3 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r3 ] subs r4 , r2 , num str r3 , [ sp , hexvar ] ldr r3 , [ r0 , hexvar ] mov r6 , r0 str r4 , [ sp , hexvar ] mov sb , r1 addeq fp , r3 , hexvar beq hexvar ldr r4 , [ r3 , hexvar ] ldr r2 , [ r3 , hexvar ] cmp r4 , num addne r4 , r3 , hexvar cmp r2 , num add fp , r3 , hexvar bne hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r6 , num ] ldr r8 , [ fp , hexvar ] ldr r3 , [ r3 , hexvar ] lsrs r8 , r8 , num str r3 , [ sp , hexvar ] bne hexvar mov sl , r8 mov r4 , r8 mov r7 , r8 str r8 , [ sp , hexvar ] str r8 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar mov r2 , r8 mov r0 , r6 mov r1 , r7 blx r3 cmp sb , num beq hexvar cmp r4 , num ble hexvar mov r3 , sl mov r5 , sl sub r3 , r3 , num cmp r3 , num str r7 , [ sb ] , num add r7 , r7 , hexvar bgt hexvar mov sl , r5 mov r3 , num str r3 , [ sb ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar mov r0 , r3 bl hexvar ldr r2 , [ sp , hexvar ] cmp r2 , num beq hexvar ldr r3 , [ fp , hexvar ] cmp r3 , r2 beq hexvar mov r0 , r2 bl hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] mov r0 , sl cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
cmp esi , num ja hexvar mov edx , esi lea rcx , [ rip + hexvar ] movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax movzx eax , byte ptr [ rdi ] ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] cmp esi , num ja hexvar mov eax , dword ptr [ ebx + esi * num - hexvar ] add eax , ebx jmp eax lea esi , [ esi ]
sltiu v0 , a1 , num beqz v0 , hexvar lui v0 , hexvar sll v1 , a1 , num addiu v0 , v0 , - hexvar addu v0 , v0 , v1 lw v0 , ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] cmp esi , num ja hexvar mov eax , ebx add eax , dword ptr [ ebx + esi * num - hexvar ] jmp eax
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] cmp esi , num ja hexvar mov eax , dword ptr [ ebx + esi * num - hexvar ] add eax , ebx jmp eax lea esi , [ esi ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sltiu v0 , a1 , num beqz v0 , hexvar sw gp , hexvar ( sp ) sll v1 , a1 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v0 , v1 lw v0 , ( v0 )
cmp esi , num ja hexvar lea rcx , [ rip + hexvar ] mov edx , esi movsxd rax , dword ptr [ rcx + rdx * num ] add rax , rcx jmp rax nop dword ptr [ rax + rax ] mov rax , qword ptr [ rdi ] ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + hexvar ] , num ja hexvar mov eax , dword ptr [ ebp + hexvar ] shl eax , num mov eax , dword ptr [ eax + ebx - hexvar ] add eax , ebx jmp eax
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] cmp esi , num ja hexvar mov eax , dword ptr [ ebx + esi * num - hexvar ] add eax , ebx jmp eax lea esi , [ esi ]
sltiu v0 , a1 , num beqz v0 , hexvar lui v0 , hexvar sll v1 , a1 , num addiu v0 , v0 , - hexvar addu v0 , v0 , v1 lw v0 , ( v0 )
push r15 push r14 mov r14 , rdx push r13 push r12 push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov r15 , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax jne hexvar mov rbx , qword ptr [ rbp + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rbp , qword ptr [ rbx + num ] test rbp , rbp je hexvar mov rsi , qword ptr [ rbx + hexvar ] test rsi , rsi je hexvar cmp r14 , qword ptr [ rbx + hexvar ] jne hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp r15 , rax jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , r15 mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rbp mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rdx ] , eax mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 move s2 , a2 sw a3 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw ra , hexvar ( sp ) lw v0 , hexvar ( s0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] test esi , esi mov dword ptr [ esp + num ] , edi jne hexvar mov ebp , dword ptr [ eax + hexvar ] mov edi , edx mov esi , eax test ebp , ebp je hexvar mov eax , dword ptr [ edi + num ] test byte ptr [ edi + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ edi + hexvar ] mov dword ptr [ esp + hexvar ] , eax jne hexvar mov esi , dword ptr [ esi + hexvar ] test esi , esi je hexvar mov ebp , ecx jmp hexvar nop mov esi , dword ptr [ esi ] test esi , esi je hexvar test byte ptr [ esi + hexvar ] , num jne hexvar mov edi , dword ptr [ esi + num ] test edi , edi je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ esp + num ] mov ecx , dword ptr [ esi + hexvar ] xor edx , dword ptr [ esi + hexvar ] xor ecx , ebp or ecx , edx jne hexvar mov edx , dword ptr [ esi + hexvar ] cmp dword ptr [ esp + hexvar ] , edx je hexvar test edx , edx jne hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edi mov eax , dword ptr [ esi + num ] mov dword ptr [ ebx ] , eax add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rdi , qword ptr [ rbp - hexvar ] call hexvar test eax , eax setne r9b movzx eax , r9b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + hexvar ] mov eax , ecx mov ecx , eax and ecx , num mov eax , ecx mov rax , qword ptr [ rax + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rdi , qword ptr [ rbp - hexvar ] call hexvar test eax , eax setne r9b movzx eax , r9b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] movzx ecx , byte ptr [ rax + hexvar ] mov eax , ecx mov ecx , eax and ecx , num mov eax , ecx mov rax , qword ptr [ rax + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi mov edi , edx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , esi call hexvar test eax , eax je hexvar mov eax , dword ptr [ edi + num ] test byte ptr [ edi + hexvar ] , num mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ edi + hexvar ] mov dword ptr [ esp + hexvar ] , eax jne hexvar mov esi , dword ptr [ esi + hexvar ] test esi , esi je hexvar mov ebp , dword ptr [ esp + hexvar ] jmp hexvar nop mov esi , dword ptr [ esi ] test esi , esi je hexvar test byte ptr [ esi + hexvar ] , num jne hexvar mov edi , dword ptr [ esi + num ] test edi , edi je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esi + hexvar ] xor edx , dword ptr [ esi + hexvar ] xor ecx , ebp or ecx , edx jne hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar cmp dword ptr [ esp + hexvar ] , edx jne hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edi mov eax , dword ptr [ esi + num ] mov dword ptr [ ebx ] , eax mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 mov r14 , rdx push r13 push r12 push rbp push rbx mov rbp , rdi mov rbx , rsi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov r15 , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax jne hexvar mov rbx , qword ptr [ rbp + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rbp , qword ptr [ rbx + num ] test rbp , rbp je hexvar mov rsi , qword ptr [ rbx + hexvar ] test rsi , rsi je hexvar cmp r14 , qword ptr [ rbx + hexvar ] jne hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp r15 , rax jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , r15 mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rbp mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rdx ] , eax mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] and eax , num test eax , eax je hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) move s0 , a1 sw s5 , hexvar ( sp ) addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s5 , a3 sw s1 , hexvar ( sp ) move s2 , a2 sw gp , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) jal hexvar lw a1 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) lw s6 , num ( s0 ) andi v0 , v0 , num bnez v0 , hexvar lw fp , hexvar ( s0 ) lw s0 , hexvar ( s1 )
push r15 push r14 mov r14 , rdx push r13 push r12 push rbp push rbx mov rbx , rsi mov rsi , r9 mov rbp , rdi sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , r8 call hexvar test eax , eax je hexvar test byte ptr [ rbx + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov r15 , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax jne hexvar mov rbx , qword ptr [ rbp + hexvar ] test rbx , rbx jne hexvar jmp hexvar nop dword ptr [ rax ] mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar test byte ptr [ rbx + hexvar ] , num jne hexvar mov rbp , qword ptr [ rbx + num ] test rbp , rbp je hexvar mov rsi , qword ptr [ rbx + hexvar ] test rsi , rsi je hexvar cmp r14 , qword ptr [ rbx + hexvar ] jne hexvar mov rax , qword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp r15 , rax jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbx + hexvar ] , r15 mov rdx , qword ptr [ rsp + hexvar ] mov qword ptr [ rax ] , rbp mov eax , dword ptr [ rbx + hexvar ] mov dword ptr [ rdx ] , eax mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , num call hexvar cmp eax , num jne hexvar sub esp , num push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar cmp eax , num sbb eax , eax add esp , hexvar and eax , num add eax , num pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax call hexvar cmp rax , num je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax je hexvar mov eax , num jmp hexvar mov eax , num leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] ldr r1 , [ fp , - num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar cmp eax , num sbb eax , eax and eax , num add eax , num add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num call hexvar cmp eax , num jne hexvar sub esp , num push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + hexvar ] call hexvar cmp eax , num sbb eax , eax add esp , hexvar and eax , num add eax , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar xor ecx , ecx cmp ecx , eax je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi call hexvar cmp rax , num je hexvar mov ecx , hexvar mov edx , hexvar mov esi , hexvar mov edi , hexvar call hexvar mov rdi , qword ptr [ rbp + hexvar ] mov rsi , rbx call hexvar cmp rax , num sbb eax , eax and eax , num add eax , num add rsp , num pop rbx pop rbp ret
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi cmp dword ptr [ rip + hexvar ] , num sete r12b movzx r12d , r12b cmp qword ptr [ rip + hexvar ] , num jg hexvar mov rdi , qword ptr [ rsi + num ] lea rsi , [ rip + hexvar ] mov eax , num call qword ptr [ rbx ] mov edx , r12d mov rsi , rbx mov rdi , rbp call hexvar cmp dword ptr [ rip + hexvar ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push { r4 , r5 , r6 , r7 , r8 , sb , lr } ldr r5 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r2 , [ r5 ] ldr r3 , [ r6 ] sub sp , sp , hexvar cmp r2 , num mov r4 , r1 mov r8 , r0 str r3 , [ sp , hexvar ] ldr r7 , [ r5 , hexvar ] ldr sb , [ r1 , num ] bgt hexvar ldr r3 , [ r1 ] ldr r0 , [ r4 , num ] ldr r1 , [ pc , hexvar ] blx r3 ldr r3 , [ r4 , num ] mov r2 , r8 ldr r0 , [ r3 ] add r1 , sp , hexvar bl hexvar cmp r7 , num addne r2 , sp , hexvar bne hexvar ldrb r3 , [ sp , hexvar ] add r2 , sp , hexvar cmp r3 , hexvar bne hexvar ldrb r3 , [ r2 , num ] ! cmp r3 , hexvar beq hexvar cmp r3 , num subeq r2 , r2 , num ldr r3 , [ r4 ] ldr r1 , [ pc , hexvar ] ldr r0 , [ r4 , num ] blx r3 ldr r3 , [ r5 , hexvar ] cmp r3 , num bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r6 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov rbx , rsi cmp dword ptr [ rip + hexvar ] , num sete r12b movzx r12d , r12b mov r13 , qword ptr [ rsi + hexvar ] cmp qword ptr [ rip + hexvar ] , num jg hexvar mov rdi , qword ptr [ rsi + num ] lea rsi , [ rip + hexvar ] mov eax , num call qword ptr [ rbx ] mov edx , r12d mov rsi , rbx mov rdi , rbp call hexvar cmp dword ptr [ rip + hexvar ] , num jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a0 move s2 , a1 move s0 , a2 lui v0 , hexvar lw a3 , hexvar ( v0 ) sltiu s1 , a3 , num lui v0 , hexvar lw v0 , hexvar ( v0 ) bgtz v0 , hexvar lw s4 , num ( a2 ) lw t9 , ( a2 ) lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , num ( a2 ) jalr t9 nop lw gp , hexvar ( sp ) move a3 , s1 move a2 , s0 move a0 , s3 move a1 , s2 jal hexvar nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) bnez v0 , hexvar addiu a2 , zero , num lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw s1 , ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move s2 , a1 move s0 , a2 lui v0 , hexvar lw a3 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bgtz v0 , hexvar sltiu s1 , a3 , num lw t9 , ( a2 )
push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rsi sub rsp , hexvar mov r13d , dword ptr [ rip + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rip + hexvar ] , num jg hexvar mov rdi , qword ptr [ rsi + num ] lea rsi , [ rip + hexvar ] mov rbx , rsp call qword ptr [ rbp ] mov rax , qword ptr [ rbp + hexvar ] mov rdx , r12 mov rsi , rbx mov rdi , qword ptr [ rax ] call hexvar test r13d , r13d mov rdx , rbx jne hexvar movzx eax , byte ptr [ rsp ] cmp al , hexvar jne hexvar nop dword ptr [ rax + rax ] add rdx , num movzx eax , byte ptr [ rdx ] cmp al , hexvar je hexvar cmp al , num sbb rdx , num xor eax , eax mov rdi , qword ptr [ rbp + num ] lea rsi , [ rip + hexvar ] call qword ptr [ rbp ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r13 push r12 mov r12 , rdi push rbp push rbx mov rbp , rsi sub rsp , hexvar mov r13d , dword ptr [ rip + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax cmp qword ptr [ rip + hexvar ] , num jg hexvar mov rdi , qword ptr [ rsi + num ] lea rsi , [ rip + hexvar ] mov rbx , rsp call qword ptr [ rbp ] mov rax , qword ptr [ rbp + hexvar ] mov rdx , r12 mov rsi , rbx mov rdi , qword ptr [ rax ] call hexvar test r13d , r13d mov rdx , rbx jne hexvar movzx eax , byte ptr [ rsp ] cmp al , hexvar jne hexvar nop dword ptr [ rax + rax ] add rdx , num movzx eax , byte ptr [ rdx ] cmp al , hexvar je hexvar cmp al , num sbb rdx , num xor eax , eax mov rdi , qword ptr [ rbp + num ] lea rsi , [ rip + hexvar ] call qword ptr [ rbp ] mov eax , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov ecx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ecx mov ecx , dword ptr [ ebx + hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx test ecx , ecx jg hexvar mov edi , eax lea eax , [ ebx - hexvar ] sub esp , num mov ebp , edx push eax push dword ptr [ esi + num ] call dword ptr [ esi ] push ebp push edi lea ebp , [ esp + hexvar ] push ebp mov eax , dword ptr [ esi + num ] push dword ptr [ eax ] call hexvar add esp , hexvar mov eax , ebp mov ebp , dword ptr [ esp + num ] test ebp , ebp jne hexvar movzx edx , byte ptr [ esp + hexvar ] cmp dl , hexvar jne hexvar lea esi , [ esi ] lea edi , [ edi ] add eax , num movzx edx , byte ptr [ eax ] cmp dl , hexvar je hexvar cmp dl , num sbb eax , num sub esp , num push eax lea eax , [ ebx - hexvar ] push eax push dword ptr [ esi + num ] call dword ptr [ esi ] mov edi , dword ptr [ ebx + hexvar ] add esp , hexvar test edi , edi jne hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a0 move s2 , a1 move s0 , a2 lui v0 , hexvar lw a3 , hexvar ( v0 ) sltiu s1 , a3 , num lui v0 , hexvar lw v0 , hexvar ( v0 ) bgtz v0 , hexvar lw s4 , num ( a2 ) lw t9 , ( a2 ) lui a1 , hexvar addiu a1 , a1 , - hexvar lw a0 , num ( a2 ) jalr t9 nop lw gp , hexvar ( sp ) move a3 , s1 move a2 , s0 move a0 , s3 move a1 , s2 jal hexvar nop lw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) bnez v0 , hexvar addiu a2 , zero , num lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw s1 , ( s0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx mov esi , dword ptr [ esp + hexvar ] cmp dword ptr [ ebx + hexvar ] , num sete dl movzx edx , dl mov ebp , edx mov ecx , dword ptr [ esi + num ] mov dword ptr [ esp + hexvar ] , ecx cmp dword ptr [ ebx + hexvar ] , num jg hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ esi + num ] call dword ptr [ esi ] mov dword ptr [ esp ] , ebp mov ecx , esi mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar cmp dword ptr [ ebx + hexvar ] , num jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , num ] cmp r2 , r3 bne hexvar mov r3 , num b hexvar ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi + hexvar ] , rsi je hexvar mov rbx , rdi mov rdi , rsi call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d pop rbx pop r14 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , num cmp dword ptr [ esi + hexvar ] , edx je hexvar sub esp , hexvar push edx call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , edi add esp , hexvar mov eax , num pop ebx pop esi pop edi ret
lw v0 , hexvar ( a0 ) beq v0 , a1 , hexvar lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , a1 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( s0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) sw s1 , hexvar ( s0 ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra addiu v0 , zero , num lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi + hexvar ] , rsi je hexvar mov rbx , rdi mov rdi , rsi call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d pop rbx pop r14 pop rbp ret
push ebp push edi mov edi , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + hexvar ] , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , ebp add esp , hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push rbp push r14 push rbx mov r14d , num cmp qword ptr [ rdi + hexvar ] , rsi je hexvar mov rbx , rdi mov rdi , rsi call hexvar test rax , rax je hexvar mov rbp , rax mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , rbp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d pop rbx pop r14 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , num cmp dword ptr [ esi + hexvar ] , edx je hexvar sub esp , hexvar push edx call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , edi add esp , hexvar mov eax , num pop ebx pop esi pop edi ret
push ebp push edi mov edi , num push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ esi + hexvar ] , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov ebp , eax je hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , ebp add esp , hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , num cmp dword ptr [ esi + hexvar ] , edx je hexvar sub esp , hexvar push edx call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , edi add esp , hexvar mov eax , num pop ebx pop esi pop edi ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw s1 , ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , edx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num lea eax , [ eax - hexvar ] push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov edi , hexvar call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rdx , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rip + hexvar ] , rax nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ esp ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax ] mov esi , dword ptr [ ecx ] mov dword ptr [ esi ] , edx mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ ecx ] mov dword ptr [ esi + num ] , edx mov edx , dword ptr [ ecx ] mov dword ptr [ hexvar ] , edx lea esp , [ ebp - num ] pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) move a0 , a1 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( s1 ) beqz s2 , hexvar move s0 , v0 lw a0 , num ( s2 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , a1 beqz v0 , hexvar lw ra , hexvar ( sp ) move a0 , s1 jal hexvar move s0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw a0 , num ( v0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) move a1 , s0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) b - hexvar addiu sp , sp , hexvar bal - hexvar nop lw gp , hexvar ( sp ) move a0 , v0 bnez v0 , hexvar sw v0 , num ( s1 )
push r15 push r14 push rbx mov rbx , rdi mov rdi , rsi call hexvar test rbx , rbx je hexvar mov r14 , rax test rax , rax je hexvar mov r15 , qword ptr [ rbx + hexvar ] test r15 , r15 jne hexvar mov edi , hexvar call hexvar mov r15 , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ r15 + num ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar mov rsi , r14 pop rbx pop r14 pop r15 jmp hexvar xor eax , eax pop rbx pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw v0 , num ( v0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) move a1 , s0 lw a0 , num ( s1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , num ( s1 ) b hexvar move v0 , zero move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) move a0 , a1 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( s1 ) beqz s2 , hexvar move s0 , v0 lw a0 , num ( s2 )
push r15 push r14 push rbx mov rbx , rdi mov rdi , rsi call hexvar test rbx , rbx je hexvar mov r14 , rax test rax , rax je hexvar mov r15 , qword ptr [ rbx + hexvar ] test r15 , r15 jne hexvar mov edi , hexvar call hexvar mov r15 , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ r15 + num ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar mov rsi , r14 pop rbx pop r14 pop r15 jmp hexvar xor eax , eax pop rbx pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move a0 , a1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw v0 , num ( v0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) move a1 , s0 lw a0 , num ( s1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar lw ra , hexvar ( sp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , num ( s1 ) b hexvar move v0 , zero move v0 , zero lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero
push r15 push r14 push rbx mov rbx , rdi mov rdi , rsi call hexvar test rbx , rbx je hexvar mov r14 , rax test rax , rax je hexvar mov r15 , qword ptr [ rbx + hexvar ] test r15 , r15 jne hexvar mov edi , hexvar call hexvar mov r15 , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ r15 + num ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar mov rsi , r14 pop rbx pop r14 pop r15 jmp hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov rbx , rdi mov rdi , rsi call hexvar test rbx , rbx je hexvar mov r14 , rax test rax , rax je hexvar mov r15 , qword ptr [ rbx + hexvar ] test r15 , r15 jne hexvar mov edi , hexvar call hexvar mov r15 , rax mov qword ptr [ rbx + hexvar ] , rax test rax , rax je hexvar mov rdi , qword ptr [ r15 + num ] test rdi , rdi jne hexvar call hexvar mov rdi , rax mov qword ptr [ r15 + num ] , rax test rax , rax je hexvar mov rsi , r14 pop rbx pop r14 pop r15 jmp hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push { r4 , r5 , r6 , lr } ldr r5 , [ pc , hexvar ] mov r4 , r1 mov r2 , r1 ldr r3 , [ r5 ] mov r1 , num bl hexvar cmp r4 , r0 popls { r4 , r5 , r6 , pc } ldr r0 , [ r5 ] bl hexvar bl hexvar mov r2 , num ldr r4 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r1 , [ pc , hexvar ] mov r5 , r0 mov r0 , num bl hexvar mov r2 , r5 mov r3 , r0 mov r1 , r4 mov r0 , num bl hexvar andeq sl , r2 , ip , ror num muleq r1 , r8 , r3 andeq r8 , r1 , ip , lsr num
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a1 addiu a1 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a2 , s0 jalr t9 lw a3 , ( s1 ) sltu v0 , v0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a1 addiu a1 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a2 , s0 jalr t9 lw a3 , ( s1 ) sltu v0 , v0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push { r4 , r5 , r6 , lr } ldr r5 , [ pc , hexvar ] mov r4 , r1 mov r2 , r1 ldr r3 , [ r5 ] mov r1 , num bl hexvar cmp r4 , r0 popls { r4 , r5 , r6 , pc } ldr r0 , [ r5 ] bl hexvar bl hexvar mov r2 , num ldr r4 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar ldr r1 , [ pc , hexvar ] mov r5 , r0 mov r0 , num bl hexvar mov r2 , r5 mov r3 , r0 mov r1 , r4 mov r0 , num bl hexvar andeq sb , r2 , ip , asr r1 andeq r7 , r1 , r4 , asr num andeq r7 , r1 , r8 , asr pc
push { r4 , r5 , r6 , lr } ldr r5 , [ pc , hexvar ] mov r4 , r1 mov r2 , r1 ldr r3 , [ r5 ] mov r1 , num bl hexvar cmp r4 , r0 popls { r4 , r5 , r6 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a1 addiu a1 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a2 , s0 jalr t9 lw a3 , ( s1 ) sltu v0 , v0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a1 addiu a1 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a2 , s0 jalr t9 lw a3 , ( s1 ) sltu v0 , v0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 )
push { r4 , r5 , r6 , lr } ldr r5 , [ pc , hexvar ] mov r4 , r1 mov r2 , r1 ldr r3 , [ r5 ] mov r1 , num bl hexvar cmp r4 , r0 popls { r4 , r5 , r6 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a1 addiu a1 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a2 , s0 jalr t9 lw a3 , ( s1 ) sltu v0 , v0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a1 addiu a1 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a2 , s0 jalr t9 lw a3 , ( s1 ) sltu v0 , v0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp dword ptr [ ecx ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar cmp eax , num sete bl and bl , num mov byte ptr [ ebp - num ] , bl mov bl , byte ptr [ ebp - num ] and bl , num movzx eax , bl shl eax , num add eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax mov bl , byte ptr [ ebp - num ] and bl , num mov byte ptr [ ebp - num ] , bl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp dword ptr [ ecx ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar cmp eax , num sete bl and bl , num mov byte ptr [ ebp - num ] , bl mov bl , byte ptr [ ebp - num ] and bl , num movzx eax , bl shl eax , num add eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax mov bl , byte ptr [ ebp - num ] and bl , num mov byte ptr [ ebp - num ] , bl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push rbx mov rbx , qword ptr [ rip + hexvar ] mov rsi , rdi mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar call hexvar test eax , eax sete al movzx edx , al lea rdx , [ rbx + rdx * num ] pop rbx mov qword ptr [ rip + hexvar ] , rdx ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 ] ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num moveq r3 , num movne r3 , num strb r3 , [ fp , - num ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldrb r3 , [ fp , - num ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r2 , [ pc , hexvar ] str r3 , [ r2 ] ldrb r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc } stmhi fp , { r1 , r3 , r6 , r7 , sb , sl , fp , ip , sp , lr } ^ andeq r0 , r0 , r0
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar test eax , eax sete al mov byte ptr [ ebp - num ] , al mov eax , dword ptr [ ebx + hexvar ] movzx edx , byte ptr [ ebp - num ] shl edx , num add eax , edx mov dword ptr [ ebx + hexvar ] , eax movzx eax , byte ptr [ ebp - num ] mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax sete al mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rip + hexvar ] movzx edx , byte ptr [ rbp - num ] shl rdx , num add rax , rdx mov qword ptr [ rip + hexvar ] , rax movzx eax , byte ptr [ rbp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp dword ptr [ ecx ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar cmp eax , num sete bl and bl , num mov byte ptr [ ebp - num ] , bl mov bl , byte ptr [ ebp - num ] and bl , num movzx eax , bl shl eax , num add eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax mov bl , byte ptr [ ebp - num ] and bl , num mov byte ptr [ ebp - num ] , bl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp dword ptr [ ecx ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar cmp eax , num sete bl and bl , num mov byte ptr [ ebp - num ] , bl mov bl , byte ptr [ ebp - num ] and bl , num movzx eax , bl shl eax , num add eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax mov bl , byte ptr [ ebp - num ] and bl , num mov byte ptr [ ebp - num ] , bl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] cmp dword ptr [ ecx ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar cmp eax , num sete bl and bl , num mov byte ptr [ ebp - num ] , bl mov bl , byte ptr [ ebp - num ] and bl , num movzx eax , bl shl eax , num add eax , dword ptr [ hexvar ] mov dword ptr [ hexvar ] , eax mov bl , byte ptr [ ebp - num ] and bl , num mov byte ptr [ ebp - num ] , bl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ hexvar ] mov ecx , dword ptr [ ecx ] test ecx , ecx sete dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov byte ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar test eax , eax sete byte ptr [ ebp - num ] movzx eax , byte ptr [ ebp - num ] and eax , num mov ecx , dword ptr [ hexvar ] lea eax , [ ecx + eax * num ] mov dword ptr [ hexvar ] , eax mov bl , byte ptr [ ebp - num ] and bl , num mov byte ptr [ ebp - num ] , bl mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push { r4 , lr } ldr r4 , [ pc , hexvar ] ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar add r1 , r3 , hexvar ldm r1 , { r0 , r1 } pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
cmp qword ptr [ rip + hexvar ] , num jne hexvar push rbx call hexvar test al , al jne hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rbx , rax call hexvar mov rdx , rbx mov esi , dword ptr [ rax ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) bnez v0 , hexvar nop jal hexvar nop lw gp , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , s0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax call hexvar movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx call hexvar mov esi , dword ptr [ rax ] movabs rdi , hexvar mov dword ptr [ rbp - num ] , esi call hexvar mov edi , num mov esi , dword ptr [ rbp - num ] mov rdx , rax mov al , num call hexvar mov rax , qword ptr [ hexvar ] mov rax , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar lui v0 , hexvar lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar call hexvar xor eax , num test al , al je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
cmp qword ptr [ rip + hexvar ] , num jne hexvar push rbx call hexvar test al , al jne hexvar mov edx , num mov esi , hexvar mov edi , num call hexvar mov rbx , rax call hexvar mov rdx , rbx mov esi , dword ptr [ rax ] mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax + hexvar ] pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) bnez v0 , hexvar lui v0 , hexvar lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov rax , qword ptr [ rip + hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax call hexvar movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx call hexvar mov esi , dword ptr [ rax ] movabs rdi , hexvar mov dword ptr [ rbp - num ] , esi call hexvar mov edi , num mov esi , dword ptr [ rbp - num ] mov rdx , rax mov al , num call hexvar mov rax , qword ptr [ hexvar ] mov rax , qword ptr [ rax + hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , num sete cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar call hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ esp ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx + num ] add esp , hexvar pop ebp ret
bnez a0 , hexvar andi a1 , a1 , hexvar lui a0 , hexvar addiu a0 , a0 , - hexvar srl v0 , a1 , num addiu a0 , a0 , num sll v0 , v0 , num andi v1 , a1 , hexvar addu a0 , a0 , v0 lw a3 , ( a0 ) srlv v0 , a3 , v1 xor a1 , v0 , a2 andi a1 , a1 , num sllv a1 , a1 , v1 andi v0 , v0 , num xor a1 , a1 , a3 jr ra sw a1 , ( a0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov ch , byte ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , ch cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num movzx ecx , byte ptr [ ebp - hexvar ] shr ecx , num shl ecx , num add eax , ecx mov dword ptr [ ebp - hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shr eax , cl xor eax , hexvar mov edx , hexvar mov esi , edx xor esi , num mov edi , edx xor edi , hexvar or eax , esi or edi , hexvar xor eax , hexvar and eax , edi mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov esi , edx xor esi , num mov edi , eax xor edi , esi and edi , eax mov eax , dword ptr [ ebp - hexvar ] mov esi , edi xor esi , hexvar and esi , hexvar mov ebx , edx xor ebx , hexvar and edi , ebx mov ecx , eax xor ecx , hexvar and ecx , hexvar and eax , ebx or esi , edi or ecx , eax xor esi , ecx mov ecx , dword ptr [ ebp - hexvar ] shl esi , cl mov eax , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ eax ] mov ebx , edi xor ebx , hexvar and ebx , hexvar xor edx , hexvar and edi , edx mov ecx , esi xor ecx , hexvar and ecx , hexvar and esi , edx or ebx , edi or ecx , esi xor ebx , ecx mov dword ptr [ eax ] , ebx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
ldr r3 , [ pc , hexvar ] cmp r0 , num moveq r0 , r3 str lr , [ sp , - num ] ! add r3 , r0 , num lsr lr , r1 , num ldr ip , [ r3 , lr , lsl num ] and r1 , r1 , hexvar lsr r0 , ip , r1 eor r2 , r2 , r0 and r2 , r2 , num eor r1 , ip , r2 , lsl r1 str r1 , [ r3 , lr , lsl num ] and r0 , r0 , num pop { pc }
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov eax , esi mov dword ptr [ rbp - hexvar ] , edx mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar lea rax , [ rip + hexvar ] lea rdx , [ rax + num ] movzx eax , byte ptr [ rbp - hexvar ] shr al , num movzx eax , al shl rax , num add rax , rdx mov qword ptr [ rbp - num ] , rax movzx eax , byte ptr [ rbp - hexvar ] and eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shr edx , cl mov eax , edx and eax , num mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov edx , dword ptr [ rax ] mov eax , dword ptr [ rbp - hexvar ] and eax , num xor eax , dword ptr [ rbp - hexvar ] mov esi , eax mov eax , dword ptr [ rbp - hexvar ] mov ecx , eax shl esi , cl mov eax , esi xor edx , eax mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , edx mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
push esi push ebx call hexvar add edx , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea edx , [ edx + hexvar ] test eax , eax cmove eax , edx mov edx , ecx shr dl , num movzx edx , dl lea ebx , [ eax + edx * num + num ] and ecx , hexvar mov esi , dword ptr [ ebx ] mov eax , esi shr eax , cl mov edx , eax xor edx , dword ptr [ esp + hexvar ] and edx , num shl edx , cl xor edx , esi mov dword ptr [ ebx ] , edx and eax , num pop ebx pop esi ret
test rdi , rdi mov eax , hexvar cmove rdi , rax mov eax , esi shr al , num movzx eax , al lea rdi , [ rdi + rax * num + num ] mov ecx , esi and ecx , hexvar mov esi , dword ptr [ rdi ] mov eax , esi shr eax , cl xor edx , eax and edx , num shl edx , cl xor edx , esi mov dword ptr [ rdi ] , edx and eax , num ret
push esi push ebx call hexvar add edx , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea edx , [ edx + hexvar ] test eax , eax cmove eax , edx mov edx , ecx and ecx , hexvar shr dl , num movzx edx , dl lea ebx , [ eax + edx * num + num ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ ebx ] mov eax , esi shr eax , cl xor edx , eax and eax , num and edx , num shl edx , cl xor edx , esi mov dword ptr [ ebx ] , edx pop ebx pop esi ret
test rdi , rdi mov eax , hexvar cmove rdi , rax mov eax , esi shr al , num movzx eax , al lea rdi , [ rdi + rax * num + num ] mov ecx , esi and ecx , hexvar mov esi , dword ptr [ rdi ] mov eax , esi shr eax , cl xor edx , eax and edx , num shl edx , cl xor edx , esi mov dword ptr [ rdi ] , edx and eax , num ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov ch , byte ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , ch cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl mov dword ptr [ ebp - hexvar ] , edx je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num movzx ecx , byte ptr [ ebp - hexvar ] shr ecx , num shl ecx , num add eax , ecx mov dword ptr [ ebp - hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shr eax , cl xor eax , hexvar mov edx , hexvar mov esi , edx xor esi , num mov edi , edx xor edi , hexvar or eax , esi or edi , hexvar xor eax , hexvar and eax , edi mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov esi , edx xor esi , num mov edi , eax xor edi , esi and edi , eax mov eax , dword ptr [ ebp - hexvar ] mov esi , edi xor esi , hexvar and esi , hexvar mov ebx , edx xor ebx , hexvar and edi , ebx mov ecx , eax xor ecx , hexvar and ecx , hexvar and eax , ebx or esi , edi or ecx , eax xor esi , ecx mov ecx , dword ptr [ ebp - hexvar ] shl esi , cl mov eax , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ eax ] mov ebx , edi xor ebx , hexvar and ebx , hexvar xor edx , hexvar and edi , edx mov ecx , esi xor ecx , hexvar and ecx , hexvar and esi , edx or ebx , edi or ecx , esi xor ebx , ecx mov dword ptr [ eax ] , ebx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp mov al , sil mov qword ptr [ rbp - num ] , rdi mov byte ptr [ rbp - hexvar ] , al mov dword ptr [ rbp - hexvar ] , edx mov al , byte ptr [ rbp - hexvar ] mov byte ptr [ rbp - num ] , al mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov al , byte ptr [ rbp - num ] mov byte ptr [ rbp - hexvar ] , al cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar movabs rax , hexvar mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx ecx , byte ptr [ rbp - hexvar ] mov edx , ecx shr rdx , num shl rdx , num add rax , rdx mov qword ptr [ rbp - hexvar ] , rax movzx ecx , byte ptr [ rbp - hexvar ] mov eax , ecx and rax , hexvar mov ecx , eax mov dword ptr [ rbp - hexvar ] , ecx mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov esi , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , ecx mov ecx , esi mov esi , dword ptr [ rbp - hexvar ] shr esi , cl and esi , num mov dword ptr [ rbp - hexvar ] , esi mov esi , dword ptr [ rbp - hexvar ] and esi , num xor esi , dword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] shl esi , cl mov rax , qword ptr [ rbp - hexvar ] xor esi , dword ptr [ rax ] mov dword ptr [ rax ] , esi mov eax , dword ptr [ rbp - hexvar ] pop rbp ret
tst r0 , hexvar bne hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar orr r0 , r0 , hexvar bx lr
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp move v0 , a0 sw a1 , hexvar ( fp ) sb v0 , num ( fp ) lbu v0 , num ( fp ) andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num bne v0 , v1 , hexvar nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar sb v0 , num ( fp ) b hexvar nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar sb v0 , num ( fp ) b hexvar nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar sb v0 , num ( fp ) nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar andi v0 , v0 , hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
tst r0 , hexvar bne hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar orr r0 , r0 , hexvar bx lr
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp move v0 , a0 sw a1 , hexvar ( fp ) sb v0 , num ( fp ) lbu v0 , num ( fp ) andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num bne v0 , v1 , hexvar nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar sb v0 , num ( fp ) b hexvar nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar sb v0 , num ( fp ) b hexvar nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar sb v0 , num ( fp ) nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar andi v0 , v0 , hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
mov ecx , eax test al , hexvar jne hexvar cmp edx , num je hexvar cmp edx , num je hexvar or eax , hexvar cmp edx , num cmove ecx , eax mov eax , ecx or eax , hexvar ret
tst r0 , hexvar bne hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar orr r0 , r0 , hexvar bx lr
tst r0 , hexvar bne hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar orr r0 , r0 , hexvar bx lr
tst r0 , hexvar bne hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar beq hexvar cmp r1 , num orreq r0 , r0 , hexvar orr r0 , r0 , hexvar bx lr
mov eax , edi test dil , hexvar jne hexvar cmp esi , num je hexvar cmp esi , num je hexvar or edi , hexvar cmp esi , num cmove eax , edi or eax , hexvar ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp move v0 , a0 sw a1 , hexvar ( fp ) sb v0 , num ( fp ) lbu v0 , num ( fp ) andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , num bne v0 , v1 , hexvar nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar sb v0 , num ( fp ) b hexvar nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar sb v0 , num ( fp ) b hexvar nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar sb v0 , num ( fp ) nop lbu v0 , num ( fp ) ori v0 , v0 , hexvar andi v0 , v0 , hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add eax , num mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax add ecx , hexvar add ecx , num sub ecx , hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num sub ecx , eax mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] push num push edi push num call hexvar add esp , hexvar cmp edi , eax mov esi , eax je hexvar mov edx , edi call hexvar test al , al je hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar movabs rdi , hexvar sub rax , rdi add rax , num add rax , rdi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , rax movabs rax , hexvar add rdi , rax add rdi , num sub rdi , rax movabs rax , hexvar sub rdi , rax add rdi , num add rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rcx mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar add rax , num mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , rax add rdi , num add rdi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 addiu a2 , zero , num move a1 , a0 move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beq s1 , v0 , hexvar move s0 , v0 move a1 , s1 move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a0 , s0 move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s2 , v0 move a0 , s1 lw t9 , - hexvar ( gp )
push { r4 , r5 , r6 , lr } mov r1 , r0 mov r4 , r0 sub sp , sp , num mov r2 , num mov r0 , num bl hexvar cmp r4 , r0 mov r5 , r0 beq hexvar mov r1 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r5 add sp , sp , num pop { r4 , r5 , r6 , pc }
push r12 push rbp mov rsi , rdi push rbx mov rbp , rdi mov edx , num xor edi , edi call hexvar cmp rbp , rax mov rbx , rax je hexvar mov rsi , rbp mov rdi , rax call hexvar test al , al je hexvar mov rax , rbx pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rbp - hexvar ] setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar add rax , num mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] add rdi , rax add rdi , num add rdi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx setne bl movzx ecx , bl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] lea eax , [ ecx + eax + num ] mov edx , esp mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , esp mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax mov dword ptr [ esi + num ] , hexvar call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp + num ] je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add eax , num mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax add ecx , hexvar add ecx , num sub ecx , hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , num sub ecx , eax mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , edx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rax call hexvar movsxd rdx , dword ptr [ rax + hexvar ] xor ecx , ecx cmp dword ptr [ rax + hexvar ] , edx je hexvar or byte ptr [ rax + rdx * num + hexvar ] , num mov ecx , num mov eax , ecx pop rcx ret
push rax call hexvar movsxd rdx , dword ptr [ rax + hexvar ] xor ecx , ecx cmp dword ptr [ rax + hexvar ] , edx je hexvar or byte ptr [ rax + rdx * num + hexvar ] , num mov ecx , num mov eax , ecx pop rcx ret
push rax call hexvar movsxd rdx , dword ptr [ rax + hexvar ] xor ecx , ecx cmp dword ptr [ rax + hexvar ] , edx je hexvar or byte ptr [ rax + rdx * num + hexvar ] , num mov ecx , num mov eax , ecx pop rcx ret
push rax call hexvar movsxd rdx , dword ptr [ rax + hexvar ] xor ecx , ecx cmp dword ptr [ rax + hexvar ] , edx je hexvar or byte ptr [ rax + rdx * num + hexvar ] , num mov ecx , num mov eax , ecx pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar bl hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r2 , r3 bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] add r2 , r2 , num ldr r3 , [ r3 , r2 , lsl num ] ldr r2 , [ sp , num ] ldr r2 , [ r2 , hexvar ] orr r1 , r3 , num ldr r3 , [ sp , num ] add r2 , r2 , num str r1 , [ r3 , r2 , lsl num ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
sub esp , hexvar call hexvar mov edx , eax mov ecx , dword ptr [ eax + hexvar ] mov eax , num cmp dword ptr [ edx + hexvar ] , ecx je hexvar or dword ptr [ edx + ecx * num + num ] , num mov eax , num add esp , hexvar ret
sub esp , hexvar call hexvar mov edx , eax mov ecx , dword ptr [ eax + hexvar ] xor eax , eax cmp dword ptr [ edx + hexvar ] , ecx je hexvar or dword ptr [ edx + ecx * num + num ] , num mov eax , num add esp , hexvar ret
push rax call hexvar movsxd rdx , dword ptr [ rax + hexvar ] xor ecx , ecx cmp dword ptr [ rax + hexvar ] , edx je hexvar or byte ptr [ rax + rdx * num + hexvar ] , num mov ecx , num mov eax , ecx pop rcx ret
push rax call hexvar movsxd rdx , dword ptr [ rax + hexvar ] xor ecx , ecx cmp dword ptr [ rax + hexvar ] , edx je hexvar or byte ptr [ rax + rdx * num + hexvar ] , num mov ecx , num mov eax , ecx pop rcx ret
push rax call hexvar movsxd rdx , dword ptr [ rax + hexvar ] xor ecx , ecx cmp dword ptr [ rax + hexvar ] , edx je hexvar or byte ptr [ rax + rdx * num + hexvar ] , num mov ecx , num mov eax , ecx pop rcx ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] add ecx , dword ptr [ eax + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] imul eax , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + num ] add eax , dword ptr [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] imul eax , dword ptr [ ecx ] mov edx , dword ptr [ ebp + num ] add eax , dword ptr [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + hexvar ] , num add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + hexvar ] , num nop pop ebp ret
push rbp push rbx mov rcx , qword ptr [ rsp + hexvar ] mov r8 , qword ptr [ rsp + hexvar ] mov r9 , qword ptr [ rsp + hexvar ] mov r10 , qword ptr [ rsp + hexvar ] mov r11 , qword ptr [ rsp + hexvar ] mov rbx , qword ptr [ rsp + hexvar ] mov edx , dword ptr [ rsp + hexvar ] test esi , esi js hexvar add edx , dword ptr [ rdi + hexvar ] seto al movzx eax , al mov dword ptr [ rdi + hexvar ] , edx add rbx , qword ptr [ rdi + hexvar ] seto dl movzx edx , dl mov qword ptr [ rdi + hexvar ] , rbx add r11 , qword ptr [ rdi + hexvar ] seto bl movzx ebx , bl mov qword ptr [ rdi + hexvar ] , r11 add r10 , qword ptr [ rdi + hexvar ] seto r11b movzx r11d , r11b mov qword ptr [ rdi + hexvar ] , r10 add r9 , qword ptr [ rdi + hexvar ] seto r10b movzx r10d , r10b mov qword ptr [ rdi + hexvar ] , r9 add r8 , qword ptr [ rdi + hexvar ] seto r9b movzx r9d , r9b mov qword ptr [ rdi + hexvar ] , r8 add rcx , qword ptr [ rdi + hexvar ] seto sil movzx esi , sil mov qword ptr [ rdi + hexvar ] , rcx and eax , num and edx , num or eax , edx mov edx , ebx and edx , num or edx , eax and r11d , num or edx , r11d and r10d , num or edx , r10d and r9d , num or edx , r9d and esi , num or edx , esi mov eax , num test dl , dl jne hexvar mov byte ptr [ rdi + hexvar ] , num mov eax , num pop rbx pop rbp ret
movsxd rsi , esi mov byte ptr [ rdi + hexvar ] , num mov rax , rsi imul rax , qword ptr [ rsp + hexvar ] add qword ptr [ rdi + hexvar ] , rax mov rax , rsi imul rax , qword ptr [ rsp + hexvar ] add qword ptr [ rdi + hexvar ] , rax mov rax , rsi imul rax , qword ptr [ rsp + hexvar ] add qword ptr [ rdi + hexvar ] , rax mov rax , rsi imul rax , qword ptr [ rsp + hexvar ] add qword ptr [ rdi + hexvar ] , rax mov rax , rsi imul rax , qword ptr [ rsp + hexvar ] add qword ptr [ rdi + hexvar ] , rax mov rax , rsi imul rsi , qword ptr [ rsp + num ] imul rax , qword ptr [ rsp + hexvar ] add qword ptr [ rdi + hexvar ] , rsi add qword ptr [ rdi + hexvar ] , rax ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ ecx ] mov ebx , dword ptr [ ebp - hexvar ] imul edi , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ eax ] add edi , dword ptr [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , edi mov edx , dword ptr [ ecx ] imul edx , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ eax ] add edx , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , edx mov edx , dword ptr [ ecx ] imul edx , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ eax ] add edx , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , edx mov edx , dword ptr [ ecx ] imul edx , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ eax ] add edx , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , edx mov edx , dword ptr [ ecx ] imul edx , dword ptr [ ebx + num ] mov edi , dword ptr [ eax ] add edx , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , edx mov edx , dword ptr [ ecx ] imul edx , dword ptr [ ebx + num ] mov edi , dword ptr [ eax ] add edx , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , edx mov ecx , dword ptr [ ecx ] imul ecx , dword ptr [ ebx ] mov edx , dword ptr [ eax ] add ecx , dword ptr [ edx + hexvar ] mov dword ptr [ edx + hexvar ] , ecx mov eax , dword ptr [ eax ] mov byte ptr [ eax + hexvar ] , num lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
mov rax , qword ptr [ rsp + hexvar ] movsxd rsi , esi mov byte ptr [ rdi + hexvar ] , num imul rax , rsi add qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] imul rax , rsi add qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] imul rax , rsi add qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] imul rax , rsi add qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] imul rax , rsi add qword ptr [ rdi + hexvar ] , rax mov rax , qword ptr [ rsp + hexvar ] imul rax , rsi imul rsi , qword ptr [ rsp + num ] add qword ptr [ rdi + hexvar ] , rax add qword ptr [ rdi + hexvar ] , rsi ret
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + num ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + num ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx ] mov ecx , dword ptr [ ebp + num ] add esi , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx + hexvar ] , esi mov ecx , dword ptr [ ebp + num ] mov byte ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx add esp , num pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] lea ecx , [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + num ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx + num ] mov edi , dword ptr [ ebp + num ] add esi , dword ptr [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , esi mov esi , dword ptr [ ebp + hexvar ] imul esi , dword ptr [ ecx ] mov ecx , dword ptr [ ebp + num ] add esi , dword ptr [ ecx + hexvar ] mov dword ptr [ ecx + hexvar ] , esi mov ecx , dword ptr [ ebp + num ] mov byte ptr [ ecx + hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx add esp , num pop esi pop edi pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] imul eax , dword ptr [ ebp + hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + hexvar ] , num nop pop ebp ret
addiu sp , sp , - num sw s0 , num ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw t5 , hexvar ( sp ) lw t0 , hexvar ( sp ) lw t6 , hexvar ( sp ) lw t3 , hexvar ( sp ) lw t7 , hexvar ( sp ) lw t4 , hexvar ( sp ) lw t8 , hexvar ( sp ) lw t2 , hexvar ( sp ) lw t9 , hexvar ( sp ) bltz v0 , hexvar lw t1 , hexvar ( sp ) lw v1 , hexvar ( a0 )
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ pc , hexvar ] str r3 , [ sp ] ldr r3 , [ pc , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov edi , dword ptr [ rbp - hexvar ] push rdi mov r9 , r8 mov r8d , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] ldr r0 , [ pc , hexvar ] blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
call hexvar add eax , hexvar sub esp , hexvar lea eax , [ eax - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp + num ] mov bl , byte ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi movzx esi , bl mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax + hexvar ] movzx ecx , al mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push ecx push edx push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jns hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax push ecx push edx movzx eax , byte ptr [ eax + hexvar ] push eax push dword ptr [ esi + hexvar ] push dword ptr [ esi + num ] call hexvar add esp , hexvar test eax , eax js hexvar add esp , num pop ebx pop esi ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r0 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] ldr r1 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bge hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp + num ] mov bl , byte ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi movzx esi , bl mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a3 , a1 sw a2 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) lbu a2 , hexvar ( a0 ) lw a1 , hexvar ( a0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ esi + num ] mov ebx , dword ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] movzx esi , byte ptr [ esi + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx and esi , num mov dword ptr [ eax + num ] , esi mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp + num ] mov bl , byte ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi movzx esi , bl mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a0 lbu v0 , hexvar ( a0 ) sw a2 , hexvar ( sp ) move a3 , a1 move a2 , v0 lw a1 , hexvar ( a0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + hexvar ] mov ebx , dword ptr [ ebp + num ] mov bl , byte ptr [ ebx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] and bl , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi movzx esi , bl mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar movzx eax , byte ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] movzx ecx , al mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar movzx eax , byte ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , hexvar sete cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar movzx eax , byte ptr [ ebp - num ] add eax , hexvar add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov al , dil mov byte ptr [ rbp - num ] , al movzx edi , byte ptr [ rbp - num ] call hexvar movzx edi , al mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax movzx edi , byte ptr [ rbp - num ] call hexvar movzx edi , al mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - num ] mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov al , byte ptr [ rbp - num ] sub al , hexvar sete cl movzx edx , cl mov esi , edx mov rsi , qword ptr [ rsi * num + hexvar ] mov byte ptr [ rbp - num ] , al jmp rsi mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - num ] or eax , hexvar mov dword ptr [ rbp - num ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov eax , edi mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - num ] mov edi , eax call hexvar test al , al je hexvar movzx eax , byte ptr [ rbp - num ] jmp hexvar cmp byte ptr [ rbp - num ] , hexvar jne hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rbp - num ] add eax , hexvar leave ret
mov edx , eax lea eax , [ eax - hexvar ] cmp al , num jbe hexvar movzx eax , dl cmp dl , hexvar jb hexvar cmp dl , hexvar jbe hexvar lea ecx , [ edx - hexvar ] cmp cl , hexvar jbe hexvar cmp dl , hexvar je hexvar add eax , hexvar ret
lea eax , [ rdi - hexvar ] cmp al , num jbe hexvar cmp dil , hexvar jb hexvar cmp dil , hexvar jbe hexvar lea eax , [ rdi - hexvar ] cmp al , hexvar ja hexvar movzx eax , dil ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov byte ptr [ ebp - num ] , al call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar movzx eax , byte ptr [ ebp + num ] cmp eax , hexvar jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar xor eax , eax movzx ecx , byte ptr [ ebp + num ] add ecx , hexvar sub eax , num sub ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov byte ptr [ ebp - num ] , al call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar movzx eax , byte ptr [ ebp + num ] cmp eax , hexvar jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar movzx eax , byte ptr [ ebp + num ] add eax , hexvar add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov byte ptr [ ebp - num ] , al call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar movzx eax , byte ptr [ ebp + num ] cmp eax , hexvar jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar xor eax , eax movzx ecx , byte ptr [ ebp + num ] add ecx , hexvar sub eax , num sub ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov al , byte ptr [ ebp + num ] movzx ecx , byte ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov byte ptr [ ebp - num ] , al call hexvar test al , num jne hexvar jmp hexvar mov dword ptr [ ebp - num ] , num jmp hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar movzx eax , byte ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax jmp hexvar movzx eax , byte ptr [ ebp + num ] cmp eax , hexvar jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar movzx eax , byte ptr [ ebp + num ] add eax , hexvar add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al movzx eax , byte ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar test al , al je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar test al , al je hexvar movzx eax , byte ptr [ ebp - hexvar ] jmp hexvar cmp byte ptr [ ebp - hexvar ] , hexvar jne hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] add eax , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor eax , dword ptr [ ecx ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] mov esi , dword ptr [ ebp + hexvar ] xor edx , dword ptr [ esi + num ] or eax , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] mov esi , dword ptr [ ebp + hexvar ] xor edx , dword ptr [ esi + num ] or eax , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] xor edx , dword ptr [ esi + hexvar ] or eax , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] xor edx , dword ptr [ esi + hexvar ] or eax , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] xor edx , dword ptr [ esi + hexvar ] or eax , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num movzx ecx , al mov edx , dword ptr [ ebp - hexvar ] or edx , ecx cmp edx , num setne al xor al , hexvar and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + hexvar ] xor edx , dword ptr [ esi ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + num ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + num ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx ecx , al mov edx , dword ptr [ ebp - hexvar ] or edx , ecx cmp edx , num setne al xor al , hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + hexvar ] xor edx , dword ptr [ esi ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + num ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + num ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx ecx , al mov edx , dword ptr [ ebp - hexvar ] or edx , ecx cmp edx , num setne al xor al , hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + hexvar ] xor edx , dword ptr [ esi ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + num ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + num ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx ecx , al mov edx , dword ptr [ ebp - hexvar ] or edx , ecx cmp edx , num setne al xor al , hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp + hexvar ] xor edx , dword ptr [ esi ] mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + num ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + num ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + num ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] xor esi , dword ptr [ edi + hexvar ] or edx , esi mov esi , dword ptr [ ebp + num ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar and al , num movzx ecx , al mov edx , dword ptr [ ebp - hexvar ] or edx , ecx cmp edx , num setne al xor al , hexvar and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov eax , dword ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] xor eax , dword ptr [ rsi ] mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rsi + num ] or eax , ecx mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rsi + num ] or eax , ecx mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rsi + hexvar ] or eax , ecx mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rsi + hexvar ] or eax , ecx mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rsi + hexvar ] or eax , ecx mov rsi , qword ptr [ rbp - num ] mov edi , dword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rsi + hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar and al , num movzx ecx , al mov esi , dword ptr [ rbp - hexvar ] or esi , ecx cmp esi , num setne al xor al , hexvar and al , num movzx eax , al add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx xor ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx mov ebx , ecx or ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , edx mov edi , eax call hexvar movzx eax , al or eax , ebx test eax , eax sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov eax , dword ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] xor eax , dword ptr [ rsi ] mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rsi + num ] or eax , ecx mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rsi + num ] or eax , ecx mov rsi , qword ptr [ rbp - num ] mov ecx , dword ptr [ rsi + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rsi + hexvar ] or eax , ecx mov rsi , qword ptr [ rbp - num ] add rsi , hexvar mov dword ptr [ rbp - hexvar ] , eax mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rdx + hexvar ] mov esi , dword ptr [ rbp - hexvar ] or esi , ecx mov rdx , qword ptr [ rbp - num ] mov ecx , dword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] xor ecx , dword ptr [ rdx + hexvar ] or esi , ecx mov rdx , qword ptr [ rbp - num ] mov edi , dword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rdx + hexvar ] mov dword ptr [ rbp - hexvar ] , esi mov esi , ecx call hexvar mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , num movzx ecx , al mov edx , dword ptr [ rbp - hexvar ] or edx , ecx cmp edx , num setne al xor al , hexvar and al , num movzx eax , al add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov ecx , edx xor ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + num ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx or ecx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] xor eax , edx mov ebx , ecx or ebx , eax mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] mov esi , edx mov edi , eax call hexvar movzx eax , al or eax , ebx test eax , eax sete al movzx eax , al add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push ebx call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , edx xor ecx , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] xor eax , edx or ecx , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] xor eax , edx or ecx , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] xor eax , edx or ecx , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] xor eax , edx or ecx , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] xor eax , edx mov ebx , ecx or ebx , eax mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] push edx push eax call hexvar add esp , num movzx eax , al or eax , ebx test eax , eax sete al movzx eax , al mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax test ecx , ecx je hexvar mov ebp , edx lea esi , [ ecx - num ] call hexvar movzx ecx , byte ptr [ ebp + esi ] mov edx , dword ptr [ eax ] mov edx , dword ptr [ edx + ecx * num ] mov byte ptr [ edi + esi ] , dl sub esi , num cmp esi , - num jne hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov dl , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx movzx eax , byte ptr [ rax ] movzx eax , al mov edi , eax call hexvar mov ecx , eax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , ecx mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar mov rax , qword ptr [ rbp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lb v0 , ( v0 ) andi v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a0 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 seb v1 , a0 sb v1 , ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , v0 , - num sw v1 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) beqz a2 , hexvar move s1 , a0 move s2 , a1 addiu s0 , a2 , - num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addu v1 , s2 , s0 addu a3 , s1 , s0 addiu a1 , s2 , - num lbu a2 , ( v1 ) lw a0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov dl , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + hexvar ] , ecx cmp eax , num jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar mov dl , al mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + ecx ] , dl jmp hexvar mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , - num mov qword ptr [ rbp - hexvar ] , rcx test rax , rax setne dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movzx edi , byte ptr [ rax + rcx ] call hexvar mov dl , al mov rcx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov byte ptr [ rcx + rsi ] , dl mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax test ecx , ecx je hexvar mov ebp , edx lea esi , [ ecx - num ] call hexvar movzx ecx , byte ptr [ ebp + esi ] mov edx , dword ptr [ eax ] mov edx , dword ptr [ edx + ecx * num ] mov byte ptr [ edi + esi ] , dl sub esi , num cmp esi , - num jne hexvar mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } subs r4 , r2 , num mov r6 , r0 beq hexvar mov r5 , r1 bl hexvar add r3 , r5 , r4 add r2 , r6 , r4 ldrb lr , [ r3 , - num ] ! ldr ip , [ r0 ] cmp r5 , r3 ldr ip , [ ip , lr , lsl num ] strb ip , [ r2 , - num ] ! bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , pc }
sub rsp , num cmp dword ptr [ rip + hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jle hexvar test byte ptr [ rip + hexvar ] , num je hexvar cdqe lea rdx , [ rip + hexvar ] mov dword ptr [ rdx + rax * num ] , hexvar call hexvar add rsp , num ret
cmp dword ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] je hexvar movsxd rdx , dword ptr [ rip + hexvar ] cmp edx , dword ptr [ rip + hexvar ] jle hexvar test byte ptr [ rip + hexvar ] , num je hexvar lea rcx , [ rip + hexvar ] mov dword ptr [ rcx + rdx * num ] , hexvar test al , al je hexvar add qword ptr [ rip + hexvar ] , num jmp hexvar nop word ptr [ rax + rax ] test al , al je hexvar add qword ptr [ rip + hexvar ] , num jmp hexvar sub rsp , num call hexvar nop word ptr [ rax + rax ]
sub rsp , num cmp dword ptr [ rip + hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jle hexvar test byte ptr [ rip + hexvar ] , num je hexvar cdqe lea rdx , [ rip + hexvar ] mov dword ptr [ rdx + rax * num ] , hexvar call hexvar add rsp , num ret
sub rsp , num cmp dword ptr [ rip + hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jle hexvar test byte ptr [ rip + hexvar ] , num je hexvar cdqe lea rdx , [ rip + hexvar ] mov dword ptr [ rdx + rax * num ] , hexvar call hexvar add rsp , num ret
push esi push ebx call hexvar add ecx , hexvar sub esp , num cmp dword ptr [ ecx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] movzx ebx , byte ptr [ ecx + hexvar ] je hexvar mov esi , dword ptr [ ecx + hexvar ] cmp esi , dword ptr [ ecx + hexvar ] jle hexvar test byte ptr [ ecx + hexvar ] , num je hexvar mov dword ptr [ ecx + esi * num + hexvar ] , hexvar test bl , bl je hexvar add dword ptr [ ecx + hexvar ] , num add esp , num pop ebx pop esi jmp hexvar nop test bl , bl je hexvar add dword ptr [ ecx + hexvar ] , num add esp , num pop ebx pop esi jmp hexvar mov ebx , ecx call hexvar lea esi , [ esi ]
cmp dword ptr [ rip + hexvar ] , num movzx eax , byte ptr [ rip + hexvar ] je hexvar movsxd rdx , dword ptr [ rip + hexvar ] cmp edx , dword ptr [ rip + hexvar ] jle hexvar test byte ptr [ rip + hexvar ] , num je hexvar lea rcx , [ rip + hexvar ] mov dword ptr [ rcx + rdx * num ] , hexvar test al , al je hexvar add qword ptr [ rip + hexvar ] , num jmp hexvar nop word ptr [ rax + rax ] test al , al je hexvar add qword ptr [ rip + hexvar ] , num jmp hexvar sub rsp , num call hexvar nop word ptr [ rax + rax ]
call hexvar add eax , hexvar push ebx mov edx , dword ptr [ esp + num ] cmp dword ptr [ eax + hexvar ] , num mov ecx , dword ptr [ esp + hexvar ] je hexvar mov ebx , dword ptr [ eax + hexvar ] cmp ebx , dword ptr [ eax + hexvar ] jle hexvar test byte ptr [ eax + hexvar ] , num je hexvar mov dword ptr [ eax + ebx * num + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + num ] , edx pop ebx jmp hexvar lea esi , [ esi ]
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] cmp edx , num je hexvar mov ecx , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + hexvar ] cmp ecx , edx jle hexvar mov edx , dword ptr [ eax + hexvar ] and edx , num test edx , edx je hexvar mov edx , dword ptr [ eax + hexvar ] mov dword ptr [ eax + edx * num + hexvar ] , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar nop leave ret
sub rsp , num cmp dword ptr [ rip + hexvar ] , num je hexvar mov eax , dword ptr [ rip + hexvar ] cmp eax , dword ptr [ rip + hexvar ] jle hexvar test byte ptr [ rip + hexvar ] , num je hexvar cdqe lea rdx , [ rip + hexvar ] mov dword ptr [ rdx + rax * num ] , hexvar call hexvar add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov dword ptr [ rbp - num ] , esi mov eax , dword ptr [ rip + hexvar ] cmp eax , num je hexvar mov edx , dword ptr [ rip + hexvar ] mov eax , dword ptr [ rip + hexvar ] cmp edx , eax jle hexvar mov eax , dword ptr [ rip + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ rip + hexvar ] cdqe lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov dword ptr [ rdx + rax ] , hexvar mov edx , dword ptr [ rbp - num ] mov eax , dword ptr [ rbp - num ] mov esi , edx mov edi , eax call hexvar nop leave ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw a0 , hexvar ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui a1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar lui s0 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( s0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a1 , s0 , hexvar jalr t9 move a0 , zero lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , zero lw ra , hexvar ( sp ) addiu a1 , a1 , hexvar lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar lui s0 , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( s0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a1 , s0 , hexvar jalr t9 move a0 , zero lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , zero lw ra , hexvar ( sp ) addiu a1 , a1 , hexvar lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw a0 , hexvar ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lui a1 , hexvar lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp )
push rax mov rdi , qword ptr [ rip + hexvar ] call hexvar test rax , rax je hexvar pop rax ret
push rbx mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar add dword ptr [ rbx + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rax , rbx pop rbx ret
push edi push esi push ebx push hexvar call hexvar add ebx , hexvar lea edi , [ ebx - hexvar ] push edi push hexvar push num call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov esi , dword ptr [ eax + hexvar ] test esi , esi je hexvar add dword ptr [ esi + hexvar ] , num push hexvar push edi push hexvar push hexvar call hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 addiu a3 , zero , hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw s0 , hexvar ( s0 )
push edi push esi push ebx push hexvar call hexvar add ebx , hexvar lea edi , [ ebx - hexvar ] push edi push hexvar push num call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov esi , dword ptr [ eax + hexvar ] test esi , esi je hexvar add dword ptr [ esi + hexvar ] , num push hexvar push edi push hexvar push hexvar call hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi ret
push edi push esi push ebx push hexvar call hexvar add ebx , hexvar lea edi , [ ebx - hexvar ] push edi push hexvar push num call hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar mov esi , dword ptr [ eax + hexvar ] test esi , esi je hexvar add dword ptr [ esi + hexvar ] , num push hexvar push edi push hexvar push hexvar call hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] add esp , hexvar test esi , esi je hexvar add dword ptr [ esi + hexvar ] , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar mov eax , esi add esp , hexvar pop ebx pop esi ret
push rbx mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar add dword ptr [ rbx + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rax , rbx pop rbx ret
push rbx mov rbx , rdi mov edx , hexvar mov edi , num mov esi , hexvar mov ecx , hexvar call hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx je hexvar add dword ptr [ rbx + hexvar ] , num mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar mov rax , rbx pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) addiu v1 , v0 , num lw v0 , hexvar ( sp ) sw v1 , hexvar ( v0 ) addiu a3 , zero , hexvar lui v0 , hexvar addiu a2 , v0 , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push num call hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] add esp , hexvar test esi , esi je hexvar add dword ptr [ esi + hexvar ] , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar mov eax , esi add esp , hexvar pop ebx pop esi ret
sub sp , sp , num str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , hexvar beq hexvar cmp r3 , hexvar bgt hexvar cmp r3 , num beq hexvar cmp r3 , hexvar beq hexvar b hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar blt hexvar sub r3 , r3 , hexvar cmp r3 , num bhi hexvar mov r3 , num b hexvar mov r0 , r0 mov r3 , num mov r0 , r3 add sp , sp , num bx lr
mov eax , num lea ecx , [ rdi - hexvar ] cmp ecx , hexvar ja hexvar movabs rdx , hexvar bt rdx , rcx jb hexvar cmp edi , num je hexvar cmp edi , hexvar jne hexvar ret
mov eax , dword ptr [ esp + num ] cmp eax , hexvar je hexvar jle hexvar cmp eax , hexvar je hexvar jl hexvar sub eax , hexvar cmp eax , num ja hexvar mov eax , num ret
call hexvar add eax , hexvar mov eax , dword ptr [ esp + num ] cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , num je hexvar cmp eax , hexvar je hexvar jmp hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jl hexvar sub eax , hexvar cmp eax , num ja hexvar mov eax , num ret
sw a0 , ( sp ) lw v0 , ( sp ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop slti v1 , v0 , hexvar beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop slti v1 , v0 , hexvar bnez v1 , hexvar nop addiu v0 , v0 , - hexvar sltiu v0 , v0 , num beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop nop move v0 , zero jr ra nop
sw a0 , ( sp ) lw v0 , ( sp ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop slti v1 , v0 , hexvar beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop slti v1 , v0 , hexvar bnez v1 , hexvar nop addiu v0 , v0 , - hexvar sltiu v0 , v0 , num beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop nop move v0 , zero jr ra nop
mov eax , num lea ecx , [ rdi - hexvar ] cmp ecx , hexvar ja hexvar movabs rdx , hexvar bt rdx , rcx jb hexvar cmp edi , num je hexvar cmp edi , hexvar jne hexvar ret
mov eax , dword ptr [ esp + num ] cmp eax , hexvar je hexvar cmp eax , hexvar jg hexvar cmp eax , num je hexvar cmp eax , hexvar je hexvar mov eax , num ret
mov eax , dword ptr [ esp + num ] cmp eax , hexvar je hexvar jle hexvar cmp eax , hexvar je hexvar jl hexvar sub eax , hexvar cmp eax , num ja hexvar mov eax , num ret
mov eax , num lea ecx , [ rdi - hexvar ] cmp ecx , hexvar ja hexvar movabs rdx , hexvar bt rdx , rcx jb hexvar cmp edi , num je hexvar cmp edi , hexvar jne hexvar ret
addiu sp , sp , - hexvar lbu v0 , hexvar ( a0 ) lw v1 , hexvar ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] or edx , num mov byte ptr [ rax + hexvar ] , dl mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar mov byte ptr [ rax + hexvar ] , dl nop leave ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r7 , r0 ldrb r3 , [ r0 , hexvar ] ldr r0 , [ r0 , hexvar ] orr r3 , r3 , num cmp r0 , num strb r3 , [ r7 , hexvar ] beq hexvar mov r5 , r1 mov r6 , r2 mov r8 , num ldr r3 , [ r7 ] ldr r4 , [ r3 , r8 , lsl num ] cmp r4 , num bne hexvar b hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar mov r1 , r6 mov r0 , r4 blx r5 cmp r0 , num bne hexvar ldrb r3 , [ r7 , hexvar ] bic r3 , r3 , num strb r3 , [ r7 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc } bmi hexvar andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , lr } mov r7 , r0 ldrb r3 , [ r0 , hexvar ] orr r3 , r3 , num strb r3 , [ r0 , hexvar ] ldr r3 , [ r0 , hexvar ] cmp r3 , num beq hexvar mov r5 , r1 mov r6 , r2 mov r8 , num ldr r3 , [ r7 ] ldr r4 , [ r3 , r8 , lsl num ] cmp r4 , num beq hexvar mov r1 , r6 mov r0 , r4 blx r5 cmp r0 , num beq hexvar ldr r4 , [ r4 ] cmp r4 , num bne hexvar add r8 , r8 , num ldr r3 , [ r7 , hexvar ] cmp r3 , r8 bhi hexvar ldrb r3 , [ r7 , hexvar ] bic r3 , r3 , num strb r3 , [ r7 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc } andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] or edx , num mov byte ptr [ rax + hexvar ] , dl mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar mov byte ptr [ rax + hexvar ] , dl nop leave ret
addiu sp , sp , - hexvar lbu v0 , hexvar ( a0 ) lw v1 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] movzx edx , byte ptr [ eax + hexvar ] or edx , num mov byte ptr [ eax + hexvar ] , dl mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp - hexvar ] , eax jb hexvar jmp hexvar nop mov eax , dword ptr [ ebp + num ] movzx edx , byte ptr [ eax + hexvar ] and edx , hexvar mov byte ptr [ eax + hexvar ] , dl nop leave ret
addiu sp , sp , - hexvar lbu v0 , hexvar ( a0 ) lw v1 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) lbu v0 , hexvar ( v1 ) addiu a0 , zero , num ins v0 , a0 , num , num sb v0 , hexvar ( v1 ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v1 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] movzx edx , byte ptr [ eax + hexvar ] or edx , num mov byte ptr [ eax + hexvar ] , dl mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp - hexvar ] , eax jb hexvar jmp hexvar nop mov eax , dword ptr [ ebp + num ] movzx edx , byte ptr [ eax + hexvar ] and edx , hexvar mov byte ptr [ eax + hexvar ] , dl nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ eax ] add eax , hexvar sub esp , hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - num ] , eax mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] add edx , hexvar sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , esi mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + hexvar ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ edx + hexvar ] , eax mov eax , num lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , num add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar lw a0 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , num add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , num pop ebx pop esi ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ fp , - num ] str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , num add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] call hexvar mov dword ptr [ esi + hexvar ] , eax add esp , hexvar mov eax , num pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + hexvar ] , eax mov eax , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] bl hexvar mov r2 , r0 mov r3 , hexvar str r3 , [ r2 ] mvn r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] bl hexvar mov r2 , r0 mov r3 , hexvar str r3 , [ r2 ] mvn r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar test eax , eax je hexvar mov esi , eax mov eax , num cmp dword ptr [ esi + hexvar ] , num je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , num add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) addiu a1 , zero , num move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r1 , num mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , num ] mov r2 , num str r2 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push esi push ebx sub esp , num call hexvar add ebx , hexvar test eax , eax je hexvar mov esi , eax mov eax , num cmp dword ptr [ esi + hexvar ] , num je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , num add esp , num pop ebx pop esi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar test eax , eax je hexvar mov esi , eax mov eax , num cmp dword ptr [ esi + hexvar ] , num je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + hexvar ] , num mov eax , num add esp , num pop ebx pop esi ret
push ebx sub esp , num call hexvar add ebx , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , num push num push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , num add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) addiu a1 , zero , num move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a2 , a0 sw s1 , hexvar ( sp ) move a3 , a1 lw s1 , - hexvar ( gp ) addiu a1 , zero , num lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) jalr t9 lw a0 , ( s1 ) lw gp , hexvar ( sp ) bltz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax sets cl movzx eax , cl mov esi , eax mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rdi , qword ptr [ rip + hexvar ] call hexvar test eax , eax setne cl movzx eax , cl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov edi , dword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , edi call hexvar mov esi , dword ptr [ rax ] mov edi , hexvar mov dword ptr [ rbp - hexvar ] , esi call hexvar xor esi , esi mov cl , sil mov edi , dword ptr [ rbp - hexvar ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , rax mov al , cl call hexvar mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov ecx , dword ptr [ rax ] mov eax , dword ptr [ rip + hexvar ] mov rdx , rbx mov esi , ecx mov edi , eax mov eax , num call hexvar mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbx pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move a2 , a0 sw s1 , hexvar ( sp ) move a3 , a1 lw s1 , - hexvar ( gp ) addiu a1 , zero , num lw t9 , - hexvar ( gp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) jalr t9 lw a0 , ( s1 ) lw gp , hexvar ( sp ) bltz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , ( s1 )
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jns hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov edx , dword ptr [ eax ] lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push esi push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jge hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num jne hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovl ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r4 , [ pc , hexvar ] mov r3 , r1 mov r2 , r0 mov r1 , num ldr r0 , [ r4 ] bl hexvar subs r5 , r0 , num blt hexvar mov r0 , r5 pop { r4 , r5 , r6 , r7 , r8 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw s1 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , s1 move a0 , s0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move a3 , a1 move a2 , a0 addiu a1 , zero , num lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw v0 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea r8 , [ rip + hexvar ] mov ecx , hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , hexvar mov eax , num call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov al , num call hexvar cmp qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar movsd xmm0 , qword ptr [ rip + hexvar ] xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov al , num call hexvar cmp qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar movsd xmm0 , qword ptr [ rip ] xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov al , num call hexvar cmp qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar movsd xmm0 , qword ptr [ rip + hexvar ] xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov al , num call hexvar cmp qword ptr [ rbp - num ] , num setne r9b mov dword ptr [ rbp - hexvar ] , eax mov byte ptr [ rbp - hexvar ] , r9b mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax movsd xmm0 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rcx , qword ptr [ rbp - num ] add rcx , hexvar mov qword ptr [ rbp - hexvar ] , rcx movsd xmm0 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov al , num call hexvar cmp qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar movsd xmm0 , qword ptr [ rip ] xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi lea r8 , [ rip + hexvar ] mov ecx , hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , hexvar mov eax , num call hexvar cmp qword ptr [ rbp - num ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rip + hexvar ] movsd qword ptr [ rax + hexvar ] , xmm0 nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov al , num call hexvar cmp qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar movsd xmm0 , qword ptr [ rip + hexvar ] xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov al , num call hexvar cmp qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar movsd xmm0 , qword ptr [ rip + hexvar ] xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov edi , hexvar movabs rsi , num movabs rdx , num mov ecx , hexvar movabs r8 , num mov al , num call hexvar cmp qword ptr [ rbp - num ] , num mov dword ptr [ rbp - hexvar ] , eax je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar movsd xmm0 , qword ptr [ rip ] xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 call hexvar mov rax , qword ptr [ rbp - num ] movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 mov rax , qword ptr [ rbp - num ] movsd qword ptr [ rax + hexvar ] , xmm0 add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num jne hexvar jmp hexvar xor eax , eax lea ecx , [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , ecx imul ecx , dword ptr [ ebp - num ] , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov edi , num call hexvar test eax , eax je hexvar lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] imul rdx , rax , hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx jmp hexvar nop mov rax , qword ptr [ rbp - num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 move a0 , zero sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a1 , s1 lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , zero bal hexvar addiu a0 , sp , hexvar addiu v1 , zero , hexvar lw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) mul v0 , v0 , v1 lw v1 , hexvar ( sp ) sw v1 , ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 move a0 , zero sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) move a1 , s1 lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a1 , zero jalr t9 addiu a0 , sp , hexvar addiu v1 , zero , hexvar lw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) mul v0 , v0 , v1 lw v1 , hexvar ( sp ) sw v1 , ( s1 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num lea eax , [ esp + hexvar ] push eax call hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , eax imul eax , dword ptr [ esp + hexvar ] , hexvar add esp , hexvar mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num lea eax , [ esp + hexvar ] push eax call hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , eax imul eax , dword ptr [ esp + hexvar ] , hexvar add esp , hexvar mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rsi , rdi mov edi , num call hexvar test eax , eax je hexvar mov esi , num mov rdi , rsp call hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ rbx ] , rax imul rax , qword ptr [ rsp + num ] , hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , edx mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov esp , ebp pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r1 , [ fp , - hexvar ] mov r0 , num bl hexvar mov r3 , r0 cmp r3 , num beq hexvar sub r3 , fp , hexvar mov r1 , num mov r0 , r3 bl hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r2 , [ fp , - hexvar ] mov r3 , r2 lsl r3 , r3 , num sub r3 , r3 , r2 lsl r3 , r3 , num add r3 , r3 , r2 lsl r3 , r3 , num mov r2 , r3 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , num ] b hexvar mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
call hexvar add edx , hexvar mov eax , dword ptr [ esp + num ] test eax , eax je hexvar mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx movzx edx , word ptr [ edx + hexvar ] mov word ptr [ eax + hexvar ] , dx mov eax , hexvar ret
push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + hexvar ] , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] push edx push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + hexvar ] , hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push dword ptr [ esp + hexvar ] lea edx , [ eax + hexvar ] push edx push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
call hexvar add edx , hexvar mov eax , dword ptr [ esp + num ] test eax , eax je hexvar mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov ecx , dword ptr [ edx + hexvar ] mov dword ptr [ eax + hexvar ] , ecx movzx edx , word ptr [ edx + hexvar ] mov word ptr [ eax + hexvar ] , dx mov eax , hexvar ret
beqz a1 , hexvar lui v1 , hexvar addiu v0 , v1 , hexvar lw t2 , hexvar ( v1 ) lw t1 , num ( v0 ) lw v1 , hexvar ( v0 ) lw a0 , hexvar ( v0 ) lw t0 , num ( v0 ) lw a3 , hexvar ( v0 ) lw a2 , hexvar ( v0 ) swl t2 , ( a1 ) swr t2 , num ( a1 ) swl t1 , num ( a1 ) swr t1 , num ( a1 ) swl t0 , num ( a1 ) swr t0 , hexvar ( a1 ) swl a3 , hexvar ( a1 ) swr a3 , hexvar ( a1 ) swl a2 , hexvar ( a1 ) swr a2 , hexvar ( a1 ) swl a0 , hexvar ( a1 ) swr a0 , hexvar ( a1 ) swl v1 , hexvar ( a1 ) swr v1 , hexvar ( a1 ) lbu v1 , hexvar ( v0 ) sb v1 , hexvar ( a1 ) lbu v0 , hexvar ( v0 ) sb v0 , hexvar ( a1 ) jr ra addiu v0 , zero , hexvar
beqz a1 , hexvar lui v1 , hexvar addiu v0 , v1 , hexvar lw t2 , hexvar ( v1 ) lw t1 , num ( v0 ) lw v1 , hexvar ( v0 ) lw a0 , hexvar ( v0 ) lw t0 , num ( v0 ) lw a3 , hexvar ( v0 ) lw a2 , hexvar ( v0 ) swl t2 , ( a1 ) swr t2 , num ( a1 ) swl t1 , num ( a1 ) swr t1 , num ( a1 ) swl t0 , num ( a1 ) swr t0 , hexvar ( a1 ) swl a3 , hexvar ( a1 ) swr a3 , hexvar ( a1 ) swl a2 , hexvar ( a1 ) swr a2 , hexvar ( a1 ) swl a0 , hexvar ( a1 ) swr a0 , hexvar ( a1 ) swl v1 , hexvar ( a1 ) swr v1 , hexvar ( a1 ) lbu v1 , hexvar ( v0 ) sb v1 , hexvar ( a1 ) lbu v0 , hexvar ( v0 ) sb v0 , hexvar ( a1 ) jr ra addiu v0 , zero , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] mov r3 , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ sp ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] mov r3 , hexvar str r3 , [ sp , hexvar ] ldr r3 , [ sp ] cmp r3 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
beqz a1 , hexvar nop lui v0 , hexvar lw t2 , hexvar ( v0 ) addiu v0 , v0 , hexvar lw t1 , num ( v0 ) lw t0 , num ( v0 ) lw a3 , hexvar ( v0 ) lw a2 , hexvar ( v0 ) lw a0 , hexvar ( v0 ) lw v1 , hexvar ( v0 ) swl t2 , ( a1 ) swr t2 , num ( a1 ) swl t1 , num ( a1 ) swr t1 , num ( a1 ) swl t0 , num ( a1 ) swr t0 , hexvar ( a1 ) swl a3 , hexvar ( a1 ) swr a3 , hexvar ( a1 ) swl a2 , hexvar ( a1 ) swr a2 , hexvar ( a1 ) swl a0 , hexvar ( a1 ) swr a0 , hexvar ( a1 ) swl v1 , hexvar ( a1 ) swr v1 , hexvar ( a1 ) lbu v1 , hexvar ( v0 ) sb v1 , hexvar ( a1 ) lbu v0 , hexvar ( v0 ) sb v0 , hexvar ( a1 ) jr ra addiu v0 , zero , hexvar
test rdi , rdi je hexvar mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] jmp hexvar xor eax , eax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) lw v0 , ( a0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw a0 , ( v0 )
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ eax ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ eax ] call hexvar add esp , hexvar add esp , num pop ebx ret
test rdi , rdi je hexvar mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] jmp hexvar xor eax , eax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v0 , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v0 , ( v0 )
test rdi , rdi je hexvar mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] jmp hexvar xor eax , eax ret
test rdi , rdi je hexvar mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] jmp hexvar xor eax , eax ret
test rdi , rdi je hexvar mov rax , qword ptr [ rdi ] test rax , rax je hexvar mov rdi , qword ptr [ rax ] jmp hexvar xor eax , eax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov qword ptr [ rax + hexvar ] , rdx mov rdi , qword ptr [ rbp - num ] mov esi , num call hexvar add rsp , hexvar pop rbp ret
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov r8 , rdx mov rcx , rsi mov rdx , rdi sub rsp , num mov edi , hexvar mov esi , hexvar push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov r8 , rdx mov rcx , rsi mov rdx , rdi sub rsp , num mov edi , hexvar mov esi , hexvar push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov r8 , rdx mov rcx , rsi mov rdx , rdi sub rsp , num mov edi , hexvar mov esi , hexvar push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar add esp , num pop ebx ret
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov r8 , rdx mov rcx , rsi mov rdx , rdi sub rsp , num mov edi , hexvar mov esi , hexvar push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push eax push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar lw a0 , - hexvar ( gp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar lui gp , hexvar lw v0 , hexvar ( sp ) addiu gp , gp , hexvar sw a3 , hexvar ( sp ) move a3 , a1 lui a1 , hexvar sw a2 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a2 , a0 lw v0 , hexvar ( sp ) addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) lw a0 , - hexvar ( gp ) sw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov r8 , rdx mov rcx , rsi mov rdx , rdi sub rsp , num mov edi , hexvar mov esi , hexvar push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
push rbp push r14 push rbx mov r14 , rsi mov rbp , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rbx , qword ptr [ rbp + hexvar ] add rbx , hexvar cmp qword ptr [ rbx ] , num jne hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar lea rdi , [ r14 + hexvar ] mov ebp , num mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov rsi , r14 call hexvar test eax , eax jne hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp pop rbx pop r14 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov esi , num mov eax , esi pop ebx pop esi pop edi ret
push rbp push r14 push rbx mov r14 , rsi mov rbp , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rbx , qword ptr [ rbp + hexvar ] add rbx , hexvar cmp qword ptr [ rbx ] , num jne hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar lea rdi , [ r14 + hexvar ] mov ebp , num mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov rsi , r14 call hexvar test eax , eax jne hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov r14 , rsi mov rbp , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rbx , qword ptr [ rbp + hexvar ] add rbx , hexvar cmp qword ptr [ rbx ] , num jne hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar lea rdi , [ r14 + hexvar ] mov ebp , num mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov rsi , r14 call hexvar test eax , eax jne hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx mov r14 , rsi mov rbp , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rbx , qword ptr [ rbp + hexvar ] add rbx , hexvar cmp qword ptr [ rbx ] , num jne hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar lea rdi , [ r14 + hexvar ] mov ebp , num mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov rsi , r14 call hexvar test eax , eax jne hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp pop rbx pop r14 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw s1 , hexvar ( sp ) move s1 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( a0 )
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov esi , num mov eax , esi pop ebx pop esi pop edi ret
push rbp push r14 push rbx mov r14 , rsi mov rbp , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rbx , qword ptr [ rbp + hexvar ] add rbx , hexvar cmp qword ptr [ rbx ] , num jne hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar lea rdi , [ r14 + hexvar ] mov ebp , num mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov rsi , r14 call hexvar test eax , eax jne hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp pop rbx pop r14 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw s1 , hexvar ( sp ) move s1 , a1 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( a0 )
push rbp push r14 push rbx mov r14 , rsi mov rbp , rdi mov rdi , qword ptr [ rdi + hexvar ] call hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rbx , qword ptr [ rbp + hexvar ] add rbx , hexvar cmp qword ptr [ rbx ] , num jne hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar lea rdi , [ r14 + hexvar ] mov ebp , num mov ecx , hexvar mov esi , num mov edx , num mov r8d , hexvar call hexvar mov rdi , qword ptr [ rbx ] mov rsi , r14 call hexvar test eax , eax jne hexvar mov rdi , r14 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebp , ebp mov eax , ebp pop rbx pop r14 pop rbp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar mov r3 , r0 str r1 , [ fp , - hexvar ] strb r3 , [ fp , - num ] ldrb r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] asr r3 , r2 , r3 lsl r3 , r3 , hexvar asr r2 , r3 , hexvar ldrb r1 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] rsb r3 , r3 , num lsl r3 , r1 , r3 lsl r3 , r3 , hexvar asr r3 , r3 , hexvar orr r3 , r2 , r3 lsl r3 , r3 , hexvar asr r3 , r3 , hexvar and r3 , r3 , hexvar mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] movzx edx , byte ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - num ] , cl mov ecx , esi sar edx , cl movzx esi , byte ptr [ ebp + num ] mov edi , num sub edi , dword ptr [ ebp + hexvar ] mov ecx , edi shl esi , cl or edx , esi and edx , hexvar mov cl , dl movzx edx , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] movzx edx , byte ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - num ] , cl mov ecx , esi sar edx , cl movzx esi , byte ptr [ ebp + num ] mov edi , num sub edi , dword ptr [ ebp + hexvar ] mov ecx , edi shl esi , cl or edx , esi and edx , hexvar mov cl , dl movzx edx , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] movzx edx , byte ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - num ] , cl mov ecx , esi sar edx , cl movzx esi , byte ptr [ ebp + num ] mov edi , num sub edi , dword ptr [ ebp + hexvar ] mov ecx , edi shl esi , cl or edx , esi and edx , hexvar mov cl , dl movzx edx , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] movzx edx , byte ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - num ] , cl mov ecx , esi shr edx , cl movzx esi , byte ptr [ ebp + num ] mov edi , num sub edi , dword ptr [ ebp + hexvar ] mov ecx , edi shl esi , cl or edx , esi and edx , hexvar mov cl , dl movzx edx , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov dl , byte ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi movzx edi , byte ptr [ eax ] mov ebx , dword ptr [ ecx ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , ebx sar edi , cl movzx eax , byte ptr [ eax ] mov ebx , num mov ecx , dword ptr [ ebp - hexvar ] sub ebx , dword ptr [ ecx ] mov ecx , ebx shl eax , cl or edi , eax mov eax , edi and eax , hexvar mov cl , al mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] mov dl , byte ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , cl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] movzx ecx , al mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , edx mov edx , dword ptr [ ebp - hexvar ] sar edx , cl movzx esi , byte ptr [ ebp + num ] mov edi , num sub edi , dword ptr [ ebp + hexvar ] mov ecx , edi shl esi , cl mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] or eax , ecx and eax , hexvar mov dl , al movzx eax , dl add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp mov al , dil mov byte ptr [ rbp - num ] , al mov dword ptr [ rbp - num ] , esi movzx esi , byte ptr [ rbp - num ] mov ecx , dword ptr [ rbp - num ] shr esi , cl movzx edi , byte ptr [ rbp - num ] mov edx , dword ptr [ rbp - num ] mov r8d , hexvar add r8d , num sub r8d , edx sub r8d , hexvar mov ecx , r8d shl edi , cl mov edx , esi and edx , edi xor esi , edi or edx , esi mov esi , hexvar xor esi , hexvar mov edi , edx xor edi , esi and edi , edx mov al , dil movzx eax , al pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] movzx edx , byte ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , cl mov ecx , esi sar edx , cl movzx esi , byte ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , num sub ebx , hexvar sub ebx , edi add ebx , hexvar mov ecx , ebx shl esi , cl or edx , esi and edx , hexvar mov cl , dl movzx edx , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ ebp + num ] movzx edx , byte ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , cl mov ecx , esi sar edx , cl movzx esi , byte ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , num sub ebx , hexvar sub ebx , edi add ebx , hexvar mov ecx , ebx shl esi , cl or edx , esi and edx , hexvar mov cl , dl movzx edx , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx add esp , num pop esi pop edi pop ebx pop ebp ret
push rax call hexvar mov rdi , rax call hexvar mov dword ptr [ rsp + num ] , eax test eax , eax je hexvar lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar mov rcx , rax xor eax , eax test rcx , rcx setne al pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r3 , r0 str r3 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar add r3 , sp , num mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push rax call hexvar mov rdi , rax call hexvar mov dword ptr [ rsp + num ] , eax test eax , eax je hexvar lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar mov rcx , rax xor eax , eax test rcx , rcx setne al pop rcx ret
push rax call hexvar mov rdi , rax call hexvar mov dword ptr [ rsp + num ] , eax test eax , eax je hexvar lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar mov rcx , rax xor eax , eax test rcx , rcx setne al pop rcx ret
push rax call hexvar mov rdi , rax call hexvar mov dword ptr [ rsp + num ] , eax test eax , eax je hexvar lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar mov rcx , rax xor eax , eax test rcx , rcx setne al pop rcx ret
push rax call hexvar mov rdi , rax call hexvar mov dword ptr [ rsp + num ] , eax test eax , eax je hexvar lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar mov rcx , rax xor eax , eax test rcx , rcx setne al pop rcx ret
push rax call hexvar mov rdi , rax call hexvar mov dword ptr [ rsp + num ] , eax test eax , eax je hexvar lea rdi , [ rsp + num ] mov esi , hexvar mov r8d , hexvar mov edx , hexvar mov ecx , num call hexvar mov rcx , rax xor eax , eax test rcx , rcx setne al pop rcx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar mov r3 , r0 str r3 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar add r3 , sp , num mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) bal - hexvar nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar addiu v0 , v0 , hexvar addiu a3 , zero , num addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , a1 , hexvar jalr t9 addiu a0 , sp , hexvar lw gp , hexvar ( sp ) sltu v0 , zero , v0 lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + num ] cmp dword ptr [ esp + hexvar ] , edx jle hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar test eax , eax sete al jmp hexvar cmp dword ptr [ esp + hexvar ] , num sete al test al , al je hexvar mov eax , num jmp hexvar mov dword ptr [ esp ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] lea ecx , [ edx + eax ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp ] add edx , eax movzx eax , byte ptr [ ecx ] mov byte ptr [ edx ] , al add dword ptr [ esp ] , num mov eax , dword ptr [ esp + hexvar ] add dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] shl eax , num cmp dword ptr [ esp ] , eax jb hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jle hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ esp + hexvar ] add edx , hexvar shl edx , num add eax , edx mov dword ptr [ esp + num ] , eax jmp hexvar mov eax , dword ptr [ esp + num ] lea edx , [ eax - num ] mov dword ptr [ esp + num ] , edx mov eax , dword ptr [ eax ] test eax , eax jne hexvar sub dword ptr [ esp + hexvar ] , num cmp dword ptr [ esp + hexvar ] , num jg hexvar jmp hexvar nop mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , num add esp , hexvar pop ebx ret
push ebp push edi push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ eax + num ] , edx mov edi , dword ptr [ esp + hexvar ] jl hexvar lea ebx , [ edx * num ] add ecx , dword ptr [ esp + hexvar ] xor eax , eax test ebx , ebx je hexvar mov dword ptr [ esp + num ] , edx lea esi , [ esi ] movzx edx , byte ptr [ ecx ] mov ebp , dword ptr [ esi ] add ecx , edi mov byte ptr [ ebp + eax ] , dl add eax , num cmp eax , ebx jne hexvar mov edx , dword ptr [ esp + num ] test edx , edx mov dword ptr [ esi + num ] , edx mov eax , num jle hexvar lea eax , [ edx * num ] sub ebx , num sub ebx , eax add ebx , dword ptr [ esi ] nop lea esi , [ esi ] mov eax , dword ptr [ ebx + edx * num ] test eax , eax jne hexvar sub edx , num jne hexvar mov dword ptr [ esi + num ] , edx mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 move s0 , a1 move s2 , a2 move s3 , a3 lw v0 , num ( a0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov esi , edx mov ebp , ecx test eax , eax sete dl cmp dword ptr [ eax + num ] , esi jl hexvar mov eax , num test dl , dl jne hexvar mov dword ptr [ esp + hexvar ] , esi lea edx , [ esi * num ] test edx , edx je hexvar mov ebx , dword ptr [ esp + hexvar ] mov ecx , ebp add ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ebx mov ebp , dword ptr [ edi ] movzx ebx , byte ptr [ ecx ] mov byte ptr [ ebp + eax ] , bl add eax , num add ecx , dword ptr [ esp + num ] cmp eax , edx jne hexvar mov dword ptr [ edi + num ] , esi mov eax , num test esi , esi jle hexvar mov eax , dword ptr [ edi ] lea eax , [ eax + edx - num ] cmp dword ptr [ eax ] , num jne hexvar mov edx , dword ptr [ esp + hexvar ] shl edx , num sub eax , edx sub esi , num je hexvar cmp dword ptr [ eax + esi * num ] , num je hexvar mov dword ptr [ edi + num ] , esi mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ eax + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov esi , dword ptr [ esp + hexvar ] jl hexvar cmp esi , num jg hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx jle hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , esi mov edi , num shl edi , cl mov ebx , dword ptr [ eax ] mov eax , num shl eax , cl mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx + edx * num ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax lea esi , [ esi ] mov esi , dword ptr [ esp + hexvar ] xor ebp , ebp xor ebx , ebx nop lea esi , [ esi ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esi ] add esi , num xor edx , ebx add ebx , num lea eax , [ edx - num ] not edx and edx , eax sar edx , hexvar and ecx , edx or ebp , ecx cmp edi , ebx jne hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] add dword ptr [ esp + hexvar ] , esi mov dword ptr [ eax ] , ebp add eax , num cmp dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] sub eax , num lea esi , [ esi ] mov ecx , dword ptr [ eax + edx * num ] test ecx , ecx jne hexvar sub edx , num jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ eax + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov esi , dword ptr [ esp + hexvar ] jl hexvar cmp esi , num jg hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx jle hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , esi mov edi , num shl edi , cl mov ebx , dword ptr [ eax ] mov eax , num shl eax , cl mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx + edx * num ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax lea esi , [ esi ] mov esi , dword ptr [ esp + hexvar ] xor ebp , ebp xor ebx , ebx nop lea esi , [ esi ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esi ] add esi , num xor edx , ebx add ebx , num lea eax , [ edx - num ] not edx and edx , eax sar edx , hexvar and ecx , edx or ebp , ecx cmp edi , ebx jne hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] add dword ptr [ esp + hexvar ] , esi mov dword ptr [ eax ] , ebp add eax , num cmp dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] sub eax , num lea esi , [ esi ] mov ecx , dword ptr [ eax + edx * num ] test ecx , ecx jne hexvar sub edx , num jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 move s0 , a2 lw v0 , num ( a0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ eax + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov esi , dword ptr [ esp + hexvar ] jl hexvar cmp esi , num jg hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx jle hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , esi mov edi , num shl edi , cl mov ebx , dword ptr [ eax ] mov eax , num shl eax , cl mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx + edx * num ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax lea esi , [ esi ] mov esi , dword ptr [ esp + hexvar ] xor ebp , ebp xor ebx , ebx nop lea esi , [ esi ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esi ] add esi , num xor edx , ebx add ebx , num lea eax , [ edx - num ] not edx and edx , eax sar edx , hexvar and ecx , edx or ebp , ecx cmp edi , ebx jne hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] add dword ptr [ esp + hexvar ] , esi mov dword ptr [ eax ] , ebp add eax , num cmp dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] sub eax , num lea esi , [ esi ] mov ecx , dword ptr [ eax + edx * num ] test ecx , ecx jne hexvar sub edx , num jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , eax mov esi , edx mov ebp , ecx test eax , eax sete dl cmp dword ptr [ eax + num ] , esi jl hexvar mov eax , num test dl , dl jne hexvar mov dword ptr [ esp + hexvar ] , esi lea edx , [ esi * num ] test edx , edx je hexvar mov ebx , dword ptr [ esp + hexvar ] mov ecx , ebp add ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ebx mov ebp , dword ptr [ edi ] movzx ebx , byte ptr [ ecx ] mov byte ptr [ ebp + eax ] , bl add eax , num add ecx , dword ptr [ esp + num ] cmp eax , edx jne hexvar mov dword ptr [ edi + num ] , esi mov eax , num test esi , esi jle hexvar mov eax , dword ptr [ edi ] lea eax , [ eax + edx - num ] cmp dword ptr [ eax ] , num jne hexvar mov edx , dword ptr [ esp + hexvar ] shl edx , num sub eax , edx sub esi , num je hexvar cmp dword ptr [ eax + esi * num ] , num je hexvar mov dword ptr [ edi + num ] , esi mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ eax + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov esi , dword ptr [ esp + hexvar ] jl hexvar cmp esi , num jg hexvar mov edx , dword ptr [ esp + hexvar ] test edx , edx jle hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , esi mov edi , num shl edi , cl mov ebx , dword ptr [ eax ] mov eax , num shl eax , cl mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx + edx * num ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , eax lea esi , [ esi ] mov esi , dword ptr [ esp + hexvar ] xor ebp , ebp xor ebx , ebx nop lea esi , [ esi ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esi ] add esi , num xor edx , ebx add ebx , num lea eax , [ edx - num ] not edx and edx , eax sar edx , hexvar and ecx , edx or ebp , ecx cmp edi , ebx jne hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] add dword ptr [ esp + hexvar ] , esi mov dword ptr [ eax ] , ebp add eax , num cmp dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] sub eax , num lea esi , [ esi ] mov ecx , dword ptr [ eax + edx * num ] test ecx , ecx jne hexvar sub edx , num jne hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) addiu v0 , sp , hexvar lw a2 , hexvar ( sp ) move a1 , v0 move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw a1 , hexvar ( sp ) move a0 , zero sw gp , hexvar ( sp ) addiu a1 , sp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a0 , s2 , hexvar bal hexvar move s0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw a0 , hexvar ( s2 ) jal hexvar move a1 , s0 lw gp , hexvar ( sp ) move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar b hexvar lw gp , hexvar ( sp ) lui a3 , hexvar lw t9 , - hexvar ( gp )
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + num ] , rsi movsxd rdx , edx lea rsi , [ rsp + num ] xor edi , edi call hexvar mov qword ptr [ rsp ] , rax mov eax , hexvar mov r14d , hexvar jmp hexvar mov rsi , qword ptr [ rsp ] mov rdi , rbx call hexvar mov ebp , eax mov rdi , qword ptr [ rsp ] call hexvar mov eax , hexvar nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + num ] , rsi movsxd rdx , edx lea rsi , [ rsp + num ] xor edi , edi call hexvar mov qword ptr [ rsp ] , rax mov eax , hexvar mov r14d , hexvar jmp hexvar mov rsi , qword ptr [ rsp ] mov rdi , rbx call hexvar mov ebp , eax mov rdi , qword ptr [ rsp ] call hexvar mov eax , hexvar nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar mov edi , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + num ] , rsi movsxd rdx , edx xor r14d , r14d lea rsi , [ rsp + num ] xor edi , edi call hexvar test rax , rax je hexvar mov r15 , rax add rbx , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx ] mov rsi , r15 call hexvar mov r14d , eax jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov rdi , r15 call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + num ] , rsi movsxd rdx , edx xor r14d , r14d lea rsi , [ rsp + num ] xor edi , edi call hexvar test rax , rax je hexvar mov r15 , rax add rbx , hexvar mov rdi , rbx call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rbx ] mov rsi , r15 call hexvar mov r14d , eax jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor r14d , r14d mov rdi , r15 call hexvar mov eax , r14d add rsp , hexvar pop rbx pop r14 pop r15 ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar mov esi , eax mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , esi mov eax , dword ptr [ eax + hexvar ] call hexvar mov edi , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar mov esi , eax mov eax , dword ptr [ esp + hexvar ] add eax , hexvar push eax call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , esi mov eax , dword ptr [ eax + hexvar ] call hexvar mov edi , eax sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push rbp push r14 push rbx sub rsp , hexvar mov rbx , rdi mov qword ptr [ rsp + num ] , rsi movsxd rdx , edx lea rsi , [ rsp + num ] xor edi , edi call hexvar mov qword ptr [ rsp ] , rax mov eax , hexvar mov r14d , hexvar jmp hexvar mov rsi , qword ptr [ rsp ] mov rdi , rbx call hexvar mov ebp , eax mov rdi , qword ptr [ rsp ] call hexvar mov eax , hexvar nop dword ptr [ rax ] cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar xor ebp , ebp jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov eax , ebp add rsp , hexvar pop rbx pop r14 pop rbp ret
push ebx mov eax , num call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ ebx + hexvar ] test edx , edx je hexvar sub esp , hexvar push edx call hexvar add esp , hexvar add eax , num add esp , num pop ebx ret
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 add r3 , r3 , num mov r0 , r3 pop { r4 , pc }
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rax call hexvar add eax , num add rsp , num ret
push { r4 , lr } ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , r0 add r3 , r3 , num mov r0 , r3 pop { r4 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw a0 , - hexvar ( v0 ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , v0 , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar addiu v0 , zero , num
push ebx sub esp , num call hexvar add ebx , hexvar mov edx , dword ptr [ ebx + hexvar ] mov eax , num test edx , edx je hexvar sub esp , hexvar push edx call hexvar add eax , num add esp , hexvar add esp , num pop ebx ret
lui v0 , hexvar lw a0 , hexvar ( v0 ) beqz a0 , hexvar nop lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw ra , hexvar ( sp ) addiu v0 , v0 , num jr ra addiu sp , sp , hexvar jr ra addiu v0 , zero , num
push ebx mov eax , num call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ ebx + hexvar ] test edx , edx je hexvar sub esp , hexvar push edx call hexvar add esp , hexvar add eax , num add esp , num pop ebx ret
mov rdi , qword ptr [ rip + hexvar ] test rdi , rdi je hexvar push rax call hexvar add eax , num add rsp , num ret
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx jne hexvar mov eax , num jmp hexvar mov edx , dword ptr [ eax + hexvar ] sub esp , hexvar push edx mov ebx , eax call hexvar add esp , hexvar add eax , num add esp , num pop ebx ret
mov rax , rsi xor edx , edx nop dword ptr [ rax ] mov rcx , qword ptr [ rdi + rdx ] bswap rcx mov qword ptr [ rax + rdx ] , rcx add rdx , num cmp rdx , hexvar jne hexvar ret nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move v0 , a1 addiu t1 , a0 , hexvar sw ra , hexvar ( sp ) lw t2 , - hexvar ( gp ) addiu t0 , sp , hexvar sw gp , hexvar ( sp ) move v1 , v0 lw a1 , ( t2 ) sw a1 , hexvar ( sp ) lw a3 , num ( a0 )
push ebp push edi push esi push ebx mov edx , num mov ecx , edx mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + ecx * num ] mov edi , dword ptr [ eax + ecx * num + num ] mov eax , esi shl eax , hexvar mov ebp , edi shr ebp , hexvar mov ebx , esi shl ebx , num and ebx , hexvar or ebx , eax mov edx , edi shld edx , esi , hexvar mov eax , edx and eax , hexvar or ebx , eax mov edx , edi shld edx , esi , num movzx eax , dl or ebx , eax mov eax , esi shrd eax , edi , num and eax , hexvar or ebp , eax mov eax , esi shrd eax , edi , hexvar and eax , hexvar or eax , ebp mov ebp , edi shr ebp , num and ebp , hexvar or eax , ebp mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ edi + ecx * num ] , eax mov eax , edi mov dword ptr [ edi + ecx * num + num ] , ebx add ecx , num cmp ecx , num jne hexvar pop ebx pop esi pop edi pop ebp ret
mov rax , rsi xor edx , edx nop dword ptr [ rax ] mov rcx , qword ptr [ rdi + rdx ] bswap rcx mov qword ptr [ rax + rdx ] , rcx add rdx , num cmp rdx , hexvar jne hexvar ret nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v0 , a1 addiu t1 , a0 , hexvar sw ra , hexvar ( sp ) lw t2 , - hexvar ( gp ) addiu t0 , sp , hexvar sw gp , hexvar ( sp ) move v1 , v0 lw a1 , ( t2 ) sw a1 , hexvar ( sp ) lw a3 , num ( a0 )
push esi push ebx xor edx , edx mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] lea esi , [ esi ] mov ecx , dword ptr [ esi + edx * num ] mov ebx , dword ptr [ esi + edx * num + num ] bswap ecx bswap ebx mov dword ptr [ eax + edx * num ] , ebx mov dword ptr [ eax + edx * num + num ] , ecx add edx , num cmp edx , num jne hexvar pop ebx pop esi ret
push ebp push edi push esi push ebx mov edx , num mov ecx , edx mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + ecx * num ] mov edi , dword ptr [ eax + ecx * num + num ] mov eax , esi shl eax , hexvar mov ebp , edi shr ebp , hexvar mov ebx , esi shl ebx , num and ebx , hexvar or ebx , eax mov edx , edi shld edx , esi , hexvar mov eax , edx and eax , hexvar or ebx , eax mov edx , edi shld edx , esi , num movzx eax , dl or ebx , eax mov eax , esi shrd eax , edi , num and eax , hexvar or ebp , eax mov eax , esi shrd eax , edi , hexvar and eax , hexvar or eax , ebp mov ebp , edi shr ebp , num and ebp , hexvar or eax , ebp mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ edi + ecx * num ] , eax mov eax , edi mov dword ptr [ edi + ecx * num + num ] , ebx add ecx , num cmp ecx , num jne hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num lw v1 , hexvar ( fp ) addu a0 , v1 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 lw v1 , num ( v0 ) lw v0 , ( v0 ) move a3 , v1 move a2 , v0 jal hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) slti v0 , v0 , num bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx mov rax , qword ptr [ rax + rdx * num ] mov rdi , rax call hexvar mov rcx , rax mov eax , dword ptr [ rbp - hexvar ] cdqe lea rdx , [ rax * num ] mov rax , qword ptr [ rbp - num ] add rax , rdx mov rsi , rcx mov rdi , rax call hexvar add dword ptr [ rbp - hexvar ] , num cmp dword ptr [ rbp - hexvar ] , num jle hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r1 mov r4 , r0 mov r8 , r1 ldr r7 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r7 ] add r5 , r0 , hexvar str r3 , [ sp , hexvar ] ldr r1 , [ r4 , num ] ldr ip , [ r4 ] eor r3 , r1 , r1 , ror num eor r2 , ip , ip , ror num lsr r2 , r2 , num lsr r3 , r3 , num bic r2 , r2 , hexvar bic r3 , r3 , hexvar eor ip , r2 , ip , ror num eor r3 , r3 , r1 , ror num mov r0 , r8 add r4 , r4 , num mov r2 , num mov r1 , sp stm sp , { r3 , ip } bl hexvar cmp r4 , r5 add r8 , r8 , num bne hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r7 ] mov r0 , r6 cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , hexvar ] str r2 , [ sp , hexvar ] str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 ] and r3 , r3 , num cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 ] and r3 , r3 , num cmp r3 , num beq hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r3 , [ r3 , num ] ldr r2 , [ pc , hexvar ] cmp r3 , r2 bne hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 b hexvar ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 b hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 ] ldr r4 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] str r3 , [ sp ] ldr r3 , [ sp , num ] ldr r2 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] blx r4 mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { r4 , pc }
lw v0 , ( a0 ) lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v1 , a0 lw t9 , hexvar ( v0 )
push rax mov rax , qword ptr [ rdi ] mov r9 , qword ptr [ rax + hexvar ] test r9 , r9 jne hexvar test byte ptr [ rax ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edx , dword ptr [ ecx ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ edx + hexvar ] test eax , eax je hexvar cmp edx , dword ptr [ esi ] jne hexvar test byte ptr [ edx ] , num jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp jmp eax lea esi , [ esi ] mov eax , dword ptr [ edx ] and eax , num je hexvar cmp edx , dword ptr [ esi ] je hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rax mov rax , qword ptr [ rdi ] mov r9 , qword ptr [ rax + hexvar ] test r9 , r9 jne hexvar test byte ptr [ rax ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , ( v0 ) lw v0 , hexvar ( v0 )
push rax mov rax , qword ptr [ rdi ] mov r9 , qword ptr [ rax + hexvar ] test r9 , r9 jne hexvar test byte ptr [ rax ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push rax mov rax , qword ptr [ rdi ] mov r9 , qword ptr [ rax + hexvar ] test r9 , r9 jne hexvar test byte ptr [ rax ] , num jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + hexvar ] test edx , edx jne hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx ] and edx , num test edx , edx jne hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] cmp ecx , edx je hexvar sub esp , hexvar push hexvar lea edx , [ eax - hexvar ] push edx push hexvar push hexvar push hexvar mov ebx , eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx ] and edx , num test edx , edx je hexvar mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] cmp edx , hexvar jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar jmp hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call eax add esp , hexvar add esp , num pop ebx ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar mov r14 , rsi cmp dword ptr [ rbx + hexvar ] , num jne hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov qword ptr [ rsp + num ] , num lea rsi , [ rsp + num ] mov edx , num call hexvar movsxd rax , dword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp eax , num jg hexvar lea rdi , [ rbx + rax ] add rdi , hexvar mov edx , num sub edx , eax add rdx , num xor esi , esi call hexvar lea r15 , [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar lea rsi , [ rbx + hexvar ] mov rdi , rbx mov rdx , r15 call hexvar mov eax , hexvar and eax , dword ptr [ rbx + hexvar ] add eax , num mov dword ptr [ rbx + hexvar ] , eax add rbx , hexvar mov rdi , rbx mov esi , hexvar mov rdx , r14 call hexvar mov eax , num jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov esi , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esi + hexvar ] test edi , edi je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar lea edx , [ esp + num ] mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num sub esp , num push num push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp eax , num jg hexvar add eax , esi lea edx , [ esi + num ] mov byte ptr [ eax + hexvar ] , num add eax , num cmp eax , edx jne hexvar lea edx , [ esi + hexvar ] mov eax , esi call hexvar sub esp , num push ebp push hexvar add esi , hexvar push esi call hexvar add esp , hexvar mov edi , num mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar mov r14 , rsi cmp dword ptr [ rbx + hexvar ] , num jne hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov qword ptr [ rsp + num ] , num lea rsi , [ rsp + num ] mov edx , num call hexvar movsxd rax , dword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp eax , num jg hexvar lea rdi , [ rbx + rax ] add rdi , hexvar mov edx , num sub edx , eax add rdx , num xor esi , esi call hexvar lea r15 , [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar lea rsi , [ rbx + hexvar ] mov rdi , rbx mov rdx , r15 call hexvar mov eax , hexvar and eax , dword ptr [ rbx + hexvar ] add eax , num mov dword ptr [ rbx + hexvar ] , eax add rbx , hexvar mov rdi , rbx mov esi , hexvar mov rdx , r14 call hexvar mov eax , num jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar mov r14 , rsi cmp dword ptr [ rbx + hexvar ] , num jne hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov qword ptr [ rsp + num ] , num lea rsi , [ rsp + num ] mov edx , num call hexvar movsxd rax , dword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp eax , num jg hexvar lea rdi , [ rbx + rax ] add rdi , hexvar mov edx , num sub edx , eax add rdx , num xor esi , esi call hexvar lea r15 , [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar lea rsi , [ rbx + hexvar ] mov rdi , rbx mov rdx , r15 call hexvar mov eax , hexvar and eax , dword ptr [ rbx + hexvar ] add eax , num mov dword ptr [ rbx + hexvar ] , eax add rbx , hexvar mov rdi , rbx mov esi , hexvar mov rdx , r14 call hexvar mov eax , num jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s0 , hexvar ( a0 )
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , dword ptr [ edx + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ esi + hexvar ] mov eax , dword ptr [ esi + hexvar ] test ecx , ecx jne hexvar test eax , eax jne hexvar sub esp , num add esi , hexvar push edi push hexvar push esi call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , num push num push num lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar sub esp , num push num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax jmp hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] add eax , edx add eax , hexvar mov byte ptr [ eax ] , num add dword ptr [ esp + hexvar ] , num cmp dword ptr [ esp + hexvar ] , num jle hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] add eax , hexvar sub esp , num push dword ptr [ esp + hexvar ] push hexvar push eax call hexvar add esp , hexvar mov eax , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar mov r14 , rsi cmp dword ptr [ rbx + hexvar ] , num jne hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov qword ptr [ rsp + num ] , num lea rsi , [ rsp + num ] mov edx , num call hexvar movsxd rax , dword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp eax , num jg hexvar lea rdi , [ rbx + rax ] add rdi , hexvar mov edx , num sub edx , eax add rdx , num xor esi , esi call hexvar lea r15 , [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar lea rsi , [ rbx + hexvar ] mov rdi , rbx mov rdx , r15 call hexvar mov eax , hexvar and eax , dword ptr [ rbx + hexvar ] add eax , num mov dword ptr [ rbx + hexvar ] , eax add rbx , hexvar mov rdi , rbx mov esi , hexvar mov rdx , r14 call hexvar mov eax , num jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar mov r14 , rsi cmp dword ptr [ rbx + hexvar ] , num jne hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov qword ptr [ rsp + num ] , num lea rsi , [ rsp + num ] mov edx , num call hexvar movsxd rax , dword ptr [ rbx + hexvar ] test rax , rax je hexvar cmp eax , num jg hexvar lea rdi , [ rbx + rax ] add rdi , hexvar mov edx , num sub edx , eax add rdx , num xor esi , esi call hexvar lea r15 , [ rbx + hexvar ] cmp dword ptr [ rbx + hexvar ] , num je hexvar cmp dword ptr [ rbx + hexvar ] , hexvar jne hexvar lea rsi , [ rsp + num ] mov rdi , rbx call hexvar lea rsi , [ rbx + hexvar ] mov rdi , rbx mov rdx , r15 call hexvar mov eax , hexvar and eax , dword ptr [ rbx + hexvar ] add eax , num mov dword ptr [ rbx + hexvar ] , eax add rbx , hexvar mov rdi , rbx mov esi , hexvar mov rdx , r14 call hexvar mov eax , num jmp hexvar mov edx , hexvar mov edi , hexvar mov esi , hexvar mov ecx , hexvar call hexvar xor eax , eax add rsp , hexvar pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov esi , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esi + hexvar ] test edi , edi je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar lea edx , [ esp + num ] mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num sub esp , num push num push edx push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp eax , num jg hexvar add eax , esi lea edx , [ esi + num ] mov byte ptr [ eax + hexvar ] , num add eax , num cmp eax , edx jne hexvar lea edx , [ esi + hexvar ] mov eax , esi call hexvar sub esp , num push ebp push hexvar add esi , hexvar push esi call hexvar add esp , hexvar mov edi , num mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r5 , [ sp , hexvar ] ldr r1 , [ r4 ] str r5 , [ sp ] mov r7 , r3 str r1 , [ sp , hexvar ] mov r6 , r2 ldr r8 , [ sp , hexvar ] bl hexvar cmp r0 , num sbcs r3 , r1 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r5 , [ sp , hexvar ] ldr r1 , [ r4 ] str r5 , [ sp ] mov r7 , r3 str r1 , [ sp , hexvar ] mov r6 , r2 ldr r8 , [ sp , hexvar ] bl hexvar cmp r0 , num sbcs r3 , r1 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar cmp eax , num je hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov edi , num call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + num ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax js hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , edx mov edi , ecx mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx push dword ptr [ esp + hexvar ] push edi push edx push eax call hexvar add esp , hexvar test edx , edx js hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a3 move s2 , a2 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar addiu a2 , sp , hexvar lw a1 , hexvar ( sp ) lw a0 , - hexvar ( gp ) lw a0 , ( a0 ) bne a1 , a0 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a1 , s3 move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 addiu v0 , zero , num beq s0 , v0 , hexvar addiu v0 , zero , num beq s0 , v0 , hexvar lw t9 , - hexvar ( gp )
push r12 push rbp mov r12 , rcx push rbx mov rbp , rsi mov ebx , edx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax js hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + num ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax js hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp push edi mov edi , ecx push esi push ebx mov esi , edx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov ebp , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edi push edx push eax call hexvar add esp , hexvar test edx , edx js hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar cmp eax , num je hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov edi , num call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov dword ptr [ hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar mov byte ptr [ ebp - num ] , al mov al , byte ptr [ ebp - num ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ hexvar ] sub esp , hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar jmp hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ edx + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx call hexvar mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) addiu a1 , zero , num lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar sb zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar sw v1 , hexvar ( v0 ) b hexvar nop jal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov byte ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , num mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov dword ptr [ rip + hexvar ] , eax jmp hexvar call hexvar mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar test al , al jne hexvar nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) addiu a1 , zero , num lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar sb zero , hexvar ( v0 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar sw v1 , hexvar ( v0 ) b hexvar nop jal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num call hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] mov r1 , num ldr r0 , [ fp , - num ] bl hexvar ldr r3 , [ pc , hexvar ] mov r2 , num strb r2 , [ r3 ] ldr r3 , [ pc , hexvar ] mov r2 , num str r2 , [ r3 ] ldr r0 , [ fp , - num ] bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] str r2 , [ r3 ] b hexvar bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax call hexvar mov byte ptr [ hexvar ] , num mov dword ptr [ hexvar ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar jmp hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm1 , xmm0 seta al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] ucomisd xmm0 , xmm1 setae al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movsd xmm0 , qword ptr [ rbp - hexvar ] cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rip + hexvar ] jmp rax movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - hexvar ] , xmm0 mov rax , rsp add rax , - hexvar mov rsp , rax movsd xmm0 , qword ptr [ rbp - hexvar ] movsd qword ptr [ rax ] , xmm0 xorps xmm1 , xmm1 ucomisd xmm1 , qword ptr [ rax ] seta cl mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar xorps xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] ucomisd xmm1 , xmm0 setae al mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] cvtsd2ss xmm1 , xmm0 movss dword ptr [ rbp - hexvar ] , xmm1 movss xmm0 , dword ptr [ rbp - hexvar ] movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 xorps xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jbe hexvar xorps xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rip ] movsd xmm1 , qword ptr [ rbp - hexvar ] ucomisd xmm1 , xmm0 jb hexvar movss xmm0 , dword ptr [ rip ] movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm1 , xmm0 seta al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip + hexvar ] ucomisd xmm0 , xmm1 setae al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movsd xmm0 , qword ptr [ rbp - hexvar ] cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rip + hexvar ] jmp rax movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar movsd qword ptr [ rbp - num ] , xmm0 mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx movsd xmm0 , qword ptr [ rbp - num ] movsd qword ptr [ rcx ] , xmm0 xorps xmm1 , xmm1 ucomisd xmm1 , qword ptr [ rcx ] seta dl mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar xorps xmm0 , xmm0 mov rax , qword ptr [ rbp - hexvar ] movss dword ptr [ rax ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rax ] ucomisd xmm1 , xmm0 setae cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar movss xmm0 , dword ptr [ rip + hexvar ] mov rax , qword ptr [ rbp - hexvar ] movss dword ptr [ rax ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movsd xmm0 , qword ptr [ rax ] cvtsd2ss xmm0 , xmm0 mov rcx , qword ptr [ rbp - hexvar ] movss dword ptr [ rcx ] , xmm0 jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movss xmm0 , dword ptr [ rax ] movss dword ptr [ rbp - hexvar ] , xmm0 movss xmm0 , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 xorps xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jbe hexvar xorps xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] ucomisd xmm1 , xmm0 jb hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 xorps xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jbe hexvar xorps xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rip ] movsd xmm1 , qword ptr [ rbp - hexvar ] ucomisd xmm1 , xmm0 jb hexvar movss xmm0 , dword ptr [ rip ] movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 xorps xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jbe hexvar xorps xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] ucomisd xmm1 , xmm0 jb hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 movsd xmm0 , qword ptr [ rbp - hexvar ] xorps xmm1 , xmm1 ucomisd xmm1 , xmm0 seta al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num ] jmp rdx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip ] jmp rax movsd xmm0 , qword ptr [ rbp - hexvar ] movsd xmm1 , qword ptr [ rip ] ucomisd xmm0 , xmm1 setae al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num ] jmp rdx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip ] jmp rax movsd xmm0 , qword ptr [ rbp - hexvar ] cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 mov rax , qword ptr [ rip ] jmp rax movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
push rbp mov rbp , rsp movsd qword ptr [ rbp - hexvar ] , xmm0 xorps xmm0 , xmm0 ucomisd xmm0 , qword ptr [ rbp - hexvar ] jbe hexvar xorps xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rip + hexvar ] movsd xmm1 , qword ptr [ rbp - hexvar ] ucomisd xmm1 , xmm0 jb hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbp - num ] , xmm0 jmp hexvar movsd xmm0 , qword ptr [ rbp - hexvar ] cvtsd2ss xmm0 , xmm0 movss dword ptr [ rbp - num ] , xmm0 movss xmm0 , dword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al cmp dword ptr [ hexvar ] , num je hexvar test byte ptr [ hexvar ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , num cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ hexvar ] , eax mov dl , byte ptr [ ebp - num ] and dl , num mov byte ptr [ hexvar ] , dl mov eax , dword ptr [ hexvar ] add esp , num pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar movzx eax , byte ptr [ ebx + hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] mov byte ptr [ ebx + hexvar ] , al mov eax , dword ptr [ ebx + hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al cmp dword ptr [ hexvar ] , num je hexvar test byte ptr [ hexvar ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , num cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ hexvar ] , eax mov dl , byte ptr [ ebp - num ] and dl , num mov byte ptr [ hexvar ] , dl mov eax , dword ptr [ hexvar ] add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al cmp dword ptr [ hexvar ] , num je hexvar test byte ptr [ hexvar ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , num cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ hexvar ] , eax mov dl , byte ptr [ ebp - num ] and dl , num mov byte ptr [ hexvar ] , dl mov eax , dword ptr [ hexvar ] add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a0 sb v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar nop lui v0 , hexvar lbu v0 , - hexvar ( v0 ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) bnez v0 , hexvar nop lbu v0 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lbu v1 , hexvar ( fp ) sb v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al cmp dword ptr [ hexvar ] , num je hexvar test byte ptr [ hexvar ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , num cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ hexvar ] , eax mov dl , byte ptr [ ebp - num ] and dl , num mov byte ptr [ hexvar ] , dl mov eax , dword ptr [ hexvar ] add esp , num pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) lui s2 , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( s0 ) beqz v0 , hexvar move s1 , a0 lbu v1 , hexvar ( s2 ) bnez v1 , hexvar lw ra , hexvar ( sp ) beqz a0 , hexvar nop lw t9 , - hexvar ( gp ) move a0 , v0 jalr t9 lw s3 , hexvar ( v0 ) lw gp , hexvar ( sp ) bnez s3 , hexvar move v0 , s3 sw zero , hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 sb s1 , hexvar ( s2 ) sw v0 , hexvar ( s0 ) lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , num mov al , byte ptr [ ebp + num ] and al , num mov byte ptr [ ebp - num ] , al cmp dword ptr [ hexvar ] , num je hexvar test byte ptr [ hexvar ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ hexvar ] , num cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ hexvar ] , eax mov dl , byte ptr [ ebp - num ] and dl , num mov byte ptr [ hexvar ] , dl mov eax , dword ptr [ hexvar ] add esp , num pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar movzx eax , byte ptr [ ebx + hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] mov byte ptr [ ebx + hexvar ] , al mov eax , dword ptr [ ebx + hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ ebp - hexvar ] , al mov eax , dword ptr [ ebx + hexvar ] test eax , eax je hexvar movzx eax , byte ptr [ ebx + hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , num mov eax , dword ptr [ ebx + hexvar ] test eax , eax jne hexvar movzx eax , byte ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] mov byte ptr [ ebx + hexvar ] , al mov eax , dword ptr [ ebx + hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov rdi , rsi mov rsi , rdx jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push eax push edx push edx push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
push rbp push r15 push r14 push rbx push rax mov r14 , rcx mov rbx , rdx mov r15 , rsi mov rax , qword ptr [ rdi + hexvar ] mov qword ptr [ rsp ] , rax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov rcx , qword ptr [ rsp ] mov rdi , r15 mov rsi , rbx mov rdx , rbx mov r8 , r14 call hexvar mov ecx , hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , num pop rbx pop r14 pop r15 pop rbp ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov rdi , rsi mov rsi , rdx jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov rdi , rsi mov rsi , rdx jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov rdi , rsi mov rsi , rdx jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov rdi , rsi mov rsi , rdx jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
mov r8 , rcx mov rcx , qword ptr [ rdi + hexvar ] test rcx , rcx je hexvar mov rdi , rsi mov rsi , rdx jmp hexvar push rax mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al test byte ptr [ ecx + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al test byte ptr [ ecx + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] sub ecx , eax mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v1 , v0 lbu v0 , ( v0 ) bnez v0 , hexvar nop b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v1 , v0 lbu v0 , ( v0 ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move s0 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) subu v0 , s0 , v0 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a3 , v0 move a2 , v1 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al test byte ptr [ ecx + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al test byte ptr [ ecx + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] sub ecx , eax mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al test byte ptr [ ecx + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al test byte ptr [ ecx + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] sub ecx , eax mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - num ] movsx edi , byte ptr [ rax ] call hexvar movzx edi , al mov ecx , edi movzx edi , byte ptr [ rcx + hexvar ] mov ecx , edi mov edi , ecx and edi , num mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] movsx edi , byte ptr [ rax ] call hexvar movzx edi , al mov ecx , edi movzx edi , byte ptr [ rcx + hexvar ] mov ecx , edi mov edi , ecx and edi , num mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov ecx , dword ptr [ rbp - hexvar ] sub ecx , eax mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] test eax , eax setne dl movzx eax , dl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v1 , v0 lbu v0 , ( v0 ) bnez v0 , hexvar nop b hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v0 , ( v0 ) move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v1 , v0 lbu v0 , ( v0 ) bnez v0 , hexvar nop lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move s0 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) subu v0 , s0 , v0 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lui v0 , hexvar lw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a3 , v0 move a2 , v1 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - num ] movsx edi , byte ptr [ rax ] call hexvar movzx edi , al mov ecx , edi movzx edi , byte ptr [ rcx + hexvar ] mov ecx , edi mov edi , ecx and edi , num mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] movsx edi , byte ptr [ rax ] call hexvar movzx edi , al mov ecx , edi movzx edi , byte ptr [ rcx + hexvar ] mov ecx , edi mov edi , ecx and edi , num mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov ecx , dword ptr [ rbp - hexvar ] sub ecx , eax mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] test eax , eax setne dl movzx eax , dl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - num ] movsx edi , byte ptr [ rax ] call hexvar movzx edi , al mov ecx , edi movzx edi , byte ptr [ rcx + hexvar ] mov ecx , edi mov edi , ecx and edi , num mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] movsx edi , byte ptr [ rax ] call hexvar movzx edi , al mov ecx , edi movzx edi , byte ptr [ rcx + hexvar ] mov ecx , edi mov edi , ecx and edi , num mov ecx , edi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - num ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov ecx , dword ptr [ rbp - hexvar ] sub ecx , eax mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] test eax , eax setne dl movzx eax , dl mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rip + hexvar ] mov ecx , dword ptr [ rip + hexvar ] call hexvar mov rsi , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rsi mov eax , dword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al test byte ptr [ ecx + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + num ] add eax , num mov dword ptr [ ebp + num ] , eax jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] movsx eax , byte ptr [ eax ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al test byte ptr [ ecx + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] sub ecx , eax mov dword ptr [ ebp - num ] , ecx cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar jmp hexvar add dword ptr [ ebp + num ] , num mov eax , dword ptr [ ebp + num ] movzx eax , byte ptr [ eax ] movsx eax , al push eax call hexvar add esp , num movzx eax , al movzx eax , byte ptr [ ebx + eax + hexvar ] test al , al jne hexvar jmp hexvar add dword ptr [ ebp + hexvar ] , num mov eax , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax ] movsx eax , al push eax call hexvar add esp , num movzx eax , al movzx eax , byte ptr [ ebx + eax + hexvar ] test al , al jne hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jg hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jl hexvar mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] push edx push eax push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lb v0 , ( v0 ) move a0 , v0 jal hexvar nop move a0 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lui v1 , hexvar addiu v1 , v1 , hexvar addu v1 , a0 , v1 lb v1 , ( v1 ) sb v1 , ( v0 ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 jal hexvar nop beqz v0 , hexvar lw ra , hexvar ( sp ) move v1 , s0 addu a0 , s0 , v0 lui a2 , hexvar addiu a2 , a2 , - hexvar lbu a1 , ( v1 ) addu a1 , a1 , a2 lbu a1 , ( a1 ) sb a1 , ( v1 ) addiu v1 , v1 , num bne v1 , a0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] movsx edi , byte ptr [ rax + rcx ] call hexvar movzx edi , al mov ecx , edi mov al , byte ptr [ rcx + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov byte ptr [ rcx + rdx ] , al mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lb v0 , ( v0 ) move a0 , v0 jal hexvar nop move a0 , v0 lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 lui v1 , hexvar addiu v1 , v1 , hexvar addu v1 , a0 , v1 lb v1 , ( v1 ) sb v1 , ( v0 ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sltu v0 , v1 , v0 bnez v0 , hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 jal hexvar nop beqz v0 , hexvar lw ra , hexvar ( sp ) move v1 , s0 addu a0 , s0 , v0 lui a2 , hexvar addiu a2 , a2 , - hexvar lbu a1 , ( v1 ) addu a1 , a1 , a2 lbu a1 , ( a1 ) sb a1 , ( v1 ) addiu v1 , v1 , num bne v1 , a0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] movsx edi , byte ptr [ rax + rcx ] call hexvar movzx edi , al mov ecx , edi mov al , byte ptr [ rcx + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov byte ptr [ rcx + rdx ] , al mov rcx , qword ptr [ rip + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] setb cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al mov al , byte ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov byte ptr [ ecx + edx ] , al jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] mov eax , hexvar mov ecx , hexvar cmovb ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al mov al , byte ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov byte ptr [ ecx + edx ] , al mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] jae hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] movsx eax , byte ptr [ eax + ecx ] mov dword ptr [ esp ] , eax call hexvar movzx ecx , al mov al , byte ptr [ ecx + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov byte ptr [ ecx + edx ] , al mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push esi push num call hexvar add esp , hexvar cmp eax , - num mov edi , eax je hexvar test eax , eax je hexvar lea ecx , [ ebx + hexvar ] xor eax , eax nop lea esi , [ esi ] movzx edx , byte ptr [ esi + eax ] movzx edx , byte ptr [ ecx + edx ] mov byte ptr [ esi + eax ] , dl add eax , num cmp edi , eax ja hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
ldr ip , [ pc , hexvar ] str lr , [ sp , - num ] ! ldr lr , [ ip , num ] cmp lr , num beq hexvar mov ip , lr pop { lr } bx ip mov r0 , lr pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , num ( v0 ) beqz t9 , hexvar move v0 , zero jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
ldr ip , [ pc , hexvar ] str lr , [ sp , - num ] ! ldr lr , [ ip , num ] cmp lr , num beq hexvar mov ip , lr pop { lr } bx ip mov r0 , lr pop { pc }
lui gp , hexvar addiu gp , gp , - hexvar lw v0 , - hexvar ( gp ) lw t9 , num ( v0 ) beqz t9 , hexvar nop jr t9 nop jr ra move v0 , zero
call hexvar add eax , hexvar lea eax , [ eax + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar jmp eax lea esi , [ esi ] xor eax , eax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , num ( v0 ) beqz t9 , hexvar move v0 , zero jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu gp , gp , - hexvar lw v0 , - hexvar ( gp ) lw t9 , num ( v0 ) beqz t9 , hexvar nop jr t9 nop jr ra move v0 , zero
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar lea edx , [ eax + hexvar ] mov edx , dword ptr [ edx + num ] test edx , edx je hexvar lea eax , [ eax + hexvar ] mov eax , dword ptr [ eax + num ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call eax add esp , hexvar jmp hexvar mov eax , num leave ret
call hexvar add eax , hexvar lea eax , [ eax + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar jmp eax lea esi , [ esi ] xor eax , eax ret
call hexvar add eax , hexvar lea eax , [ eax + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar jmp eax lea esi , [ esi ] xor eax , eax ret
ldr r3 , [ pc , hexvar ] push { r4 , lr } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar ldr r2 , [ pc , hexvar ] mov r3 , r0 mov r1 , num mov r0 , r4 bl hexvar bl hexvar andeq fp , r2 , ip , ror num andeq sl , r1 , r0 , lsl num andeq sl , r1 , r4 , lsl num
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar nop
lea rsi , [ rip + hexvar ] sub rsp , num mov edx , num xor edi , edi call hexvar mov edi , dword ptr [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rcx , rax xor esi , esi xor eax , eax call hexvar call hexvar nop word ptr cs : [ rax + rax ] nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar jmp hexvar nop nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar lea edx , [ ebx + hexvar ] mov edx , dword ptr [ edx ] push eax lea eax , [ ebx - hexvar ] push eax push num push edx call hexvar add esp , hexvar call hexvar nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax ] push edx lea edx , [ ebx - hexvar ] push edx push num push eax call hexvar add esp , hexvar call hexvar
push { r4 , r5 , fp , lr } add fp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] mov r1 , num mov r0 , r4 bl hexvar bl hexvar andeq ip , r2 , r4 , lsl r1 andeq sl , r1 , r0 , lsr lr andeq sl , r1 , r4 , asr num
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
push { r4 , r5 , r6 , lr } mov r4 , r0 mvn r0 , num mov r5 , r1 bl hexvar cmp r0 , r4 bls hexvar mul r0 , r4 , r5 pop { r4 , r5 , r6 , lr } b hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar addiu v0 , zero , - num teq a1 , zero , num divu zero , v0 , a1 mflo v0 sltu v0 , a0 , v0 beqz v0 , hexvar sw gp , hexvar ( sp ) mul a0 , a1 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , - num mov edx , num div qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax jb hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar leave ret
push { r4 , r5 , r6 , lr } mov r4 , r0 mvn r0 , num mov r5 , r1 bl hexvar cmp r0 , r4 bls hexvar mul r0 , r4 , r5 pop { r4 , r5 , r6 , lr } b hexvar mov r0 , num pop { r4 , r5 , r6 , pc }
addiu v0 , zero , - num teq a1 , zero , num divu zero , v0 , a1 mflo v0 sltu v0 , a0 , v0 beqz v0 , hexvar nop lui gp , hexvar addiu gp , gp , - hexvar lw t9 , - hexvar ( gp ) jr t9 mul a0 , a1 , a0 jr ra move v0 , zero
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ecx , hexvar mov eax , hexvar mov edx , num div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ecx , hexvar mov eax , hexvar mov edx , num div dword ptr [ ebp + hexvar ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) addiu v1 , zero , - num lw v0 , hexvar ( fp ) teq v0 , zero , num divu zero , v1 , v0 mfhi v0 mflo v1 lw v0 , hexvar ( fp ) sltu v0 , v0 , v1 bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) mul v0 , v1 , v0 move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
xor edx , edx mov rax , - num div rsi cmp rax , rdi jbe hexvar imul rdi , rsi jmp hexvar nop word ptr [ rax + rax ] xor eax , eax ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , hexvar mov edx , num div ecx
push r15 push r14 push r12 push rbx push rax mov r15 , rsi mov r12 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax xor r14d , r14d mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , rbx mov rsi , r12 mov edx , num xor ecx , ecx call hexvar mov r14d , eax mov rdi , r12 call hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a3 , s2 move a2 , zero addiu a1 , zero , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar move s1 , zero nop
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax push dword ptr [ esp + hexvar ] push num push hexvar push eax call hexvar add esp , num push dword ptr [ esp + hexvar ] push esi call hexvar mov edi , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push r15 push r14 push r12 push rbx push rax mov r15 , rsi mov r12 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax xor r14d , r14d mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , rbx mov rsi , r12 mov edx , num xor ecx , ecx call hexvar mov r14d , eax mov rdi , r12 call hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov r15 , rsi mov r12 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax xor r14d , r14d mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , rbx mov rsi , r12 mov edx , num xor ecx , ecx call hexvar mov r14d , eax mov rdi , r12 call hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s1 move a0 , v0 bal hexvar move s0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) move a1 , s2 jalr t9 move a0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) move s1 , zero lw t9 , - hexvar ( gp ) bal hexvar move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar bal hexvar move s1 , zero lw ra , hexvar ( sp ) move v0 , s1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a3 , zero addiu a2 , zero , num move a1 , s1 jalr t9 move a0 , s0 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push r15 push r14 push r12 push rbx push rax mov r15 , rsi mov r12 , rdi call hexvar mov rdi , rax call hexvar test rax , rax je hexvar mov rbx , rax xor r14d , r14d mov rdi , rax mov esi , hexvar xor edx , edx mov rcx , r12 call hexvar call hexvar test rax , rax je hexvar mov r12 , rax mov rdi , rax mov rsi , r15 call hexvar test eax , eax je hexvar mov rdi , rbx mov rsi , r12 mov edx , num xor ecx , ecx call hexvar mov r14d , eax mov rdi , r12 call hexvar mov rdi , rbx call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , num mov r8d , hexvar call hexvar xor r14d , r14d mov eax , r14d add rsp , num pop rbx pop r12 pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , num mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] mov r2 , num mov r1 , hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s0 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move a0 , v0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a2 , zero addiu a1 , zero , hexvar move a3 , s1 move a0 , v0 bal hexvar move s0 , v0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) move a1 , s2 jalr t9 move a0 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) move s1 , zero lw t9 , - hexvar ( gp ) bal hexvar move a0 , s0 move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , num sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar bal hexvar move s1 , zero lw ra , hexvar ( sp ) move v0 , s1 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a3 , zero addiu a2 , zero , num move a1 , s1 jalr t9 move a0 , s0 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push edi push esi push ebx call hexvar add ebx , hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar push dword ptr [ esp + hexvar ] push num mov esi , eax push hexvar push eax call hexvar pop eax pop edx push dword ptr [ esp + hexvar ] push esi call hexvar mov dword ptr [ esp ] , esi mov edi , eax call hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi shl eax , cl mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi shld eax , esi , cl xor ecx , ecx test bl , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] cmovne eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmovne ecx , eax mov bh , hexvar sub bh , bl mov dword ptr [ ebp - hexvar ] , ecx mov cl , bh mov eax , edi shr eax , cl mov cl , bh shrd esi , edi , cl test bh , hexvar cmovne esi , eax mov edi , dword ptr [ ebp - hexvar ] cmovne eax , edi mov ecx , dword ptr [ ebp - hexvar ] or ecx , esi mov esi , dword ptr [ ebp - hexvar ] or esi , eax mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov edx , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi shl eax , cl mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi shld eax , esi , cl xor ecx , ecx test bl , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] cmovne eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmovne ecx , eax mov bh , hexvar sub bh , bl mov dword ptr [ ebp - hexvar ] , ecx mov cl , bh mov eax , edi shr eax , cl mov cl , bh shrd esi , edi , cl test bh , hexvar cmovne esi , eax mov edi , dword ptr [ ebp - hexvar ] cmovne eax , edi mov ecx , dword ptr [ ebp - hexvar ] or ecx , esi mov esi , dword ptr [ ebp - hexvar ] or esi , eax mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov edx , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } ldr r2 , [ fp , - hexvar ] sub r0 , r2 , hexvar rsb r1 , r2 , hexvar lsl r8 , r4 , r2 orr r8 , r8 , r3 , lsl r0 orr r8 , r8 , r3 , lsr r1 lsl r7 , r3 , r2 ldr r2 , [ fp , - hexvar ] rsb r2 , r2 , num and r2 , r2 , hexvar rsb r0 , r2 , hexvar sub r1 , r2 , hexvar lsr r5 , r3 , r2 orr r5 , r5 , r4 , lsl r0 orr r5 , r5 , r4 , lsr r1 lsr r6 , r4 , r2 orr sb , r7 , r5 orr sl , r8 , r6 mov r5 , sb mov r6 , sl mov r3 , r5 mov r4 , r6 mov r0 , r3 mov r1 , r4 sub sp , fp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp } bx lr
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov bl , byte ptr [ eax ] mov cl , bl mov edi , edx shl edi , cl mov cl , bl mov eax , esi shld eax , edx , cl xor ecx , ecx test bl , hexvar cmovne eax , edi cmovne edi , ecx mov bh , hexvar sub bh , bl mov dword ptr [ ebp - hexvar ] , ecx mov cl , bh mov dword ptr [ ebp - hexvar ] , eax mov eax , esi shr eax , cl mov cl , bh shrd edx , esi , cl test bh , hexvar cmovne edx , eax mov esi , dword ptr [ ebp - hexvar ] cmovne eax , esi or edi , edx mov edx , dword ptr [ ebp - hexvar ] or edx , eax mov eax , edi lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi shl eax , cl mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi shld eax , esi , cl xor ecx , ecx test bl , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] cmovne eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmovne ecx , eax mov bh , hexvar sub bh , bl mov dword ptr [ ebp - hexvar ] , ecx mov cl , bh mov eax , edi shr eax , cl mov cl , bh shrd esi , edi , cl test bh , hexvar cmovne esi , eax mov edi , dword ptr [ ebp - hexvar ] cmovne eax , edi mov ecx , dword ptr [ ebp - hexvar ] or ecx , esi mov esi , dword ptr [ ebp - hexvar ] or esi , eax mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov edx , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi shl eax , cl mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi shld eax , esi , cl xor ecx , ecx test bl , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] cmovne eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmovne ecx , eax mov bh , hexvar sub bh , bl mov dword ptr [ ebp - hexvar ] , ecx mov cl , bh mov eax , edi shr eax , cl mov cl , bh shrd esi , edi , cl test bh , hexvar cmovne esi , eax mov edi , dword ptr [ ebp - hexvar ] cmovne eax , edi mov ecx , dword ptr [ ebp - hexvar ] or ecx , esi mov esi , dword ptr [ ebp - hexvar ] or esi , eax mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov edx , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax rol rdx , cl mov rax , rdx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi shl eax , cl mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi shld eax , esi , cl xor ecx , ecx test bl , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] cmovne eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmovne ecx , eax mov bh , hexvar sub bh , bl mov dword ptr [ ebp - hexvar ] , ecx mov cl , bh mov eax , edi shr eax , cl mov cl , bh shrd esi , edi , cl test bh , hexvar cmovne esi , eax mov edi , dword ptr [ ebp - hexvar ] cmovne eax , edi mov ecx , dword ptr [ ebp - hexvar ] or ecx , esi mov esi , dword ptr [ ebp - hexvar ] or esi , eax mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov edx , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , esi shl eax , cl mov cl , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edi shld eax , esi , cl xor ecx , ecx test bl , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] cmovne eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmovne ecx , eax mov bh , hexvar sub bh , bl mov dword ptr [ ebp - hexvar ] , ecx mov cl , bh mov eax , edi shr eax , cl mov cl , bh shrd esi , edi , cl test bh , hexvar cmovne esi , eax mov edi , dword ptr [ ebp - hexvar ] cmovne eax , edi mov ecx , dword ptr [ ebp - hexvar ] or ecx , esi mov esi , dword ptr [ ebp - hexvar ] or esi , eax mov eax , ecx mov dword ptr [ ebp - hexvar ] , edx mov edx , esi add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov eax , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov ecx , eax rol rdx , cl mov rax , rdx pop rbp ret
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push hexvar push ecx push edx mov ebx , eax call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push hexvar push ecx push edx mov ebx , eax call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
push edi push esi mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esi ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ ecx + hexvar ] , eax lea edi , [ ecx + num ] and edi , hexvar sub ecx , edi sub esi , ecx add ecx , hexvar shr ecx , num rep movsd dword ptr es : [ edi ] , dword ptr [ esi ] mov eax , num pop esi pop edi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] ldr r0 , [ r3 , hexvar ] ldr r3 , [ sp ] ldr r3 , [ r3 , hexvar ] mov r2 , hexvar mov r1 , r3 bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub esp , num push hexvar push ecx push edx mov ebx , eax call hexvar add esp , hexvar mov eax , num add esp , num pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] ldr r0 , [ r3 , hexvar ] ldr r3 , [ sp ] ldr r3 , [ r3 , hexvar ] mov r2 , hexvar mov r1 , r3 bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push edi push esi mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] lea edi , [ ecx + num ] and edi , hexvar mov eax , dword ptr [ esi ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ ecx + hexvar ] , eax sub ecx , edi mov eax , num sub esi , ecx add ecx , hexvar shr ecx , num rep movsd dword ptr es : [ edi ] , dword ptr [ esi ] pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) addiu a2 , zero , hexvar move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] ldr r0 , [ r3 , hexvar ] ldr r3 , [ sp ] ldr r3 , [ r3 , hexvar ] mov r2 , hexvar mov r1 , r3 bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
push edi push esi mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esi ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ ecx + hexvar ] , eax lea edi , [ ecx + num ] and edi , hexvar sub ecx , edi sub esi , ecx add ecx , hexvar shr ecx , num rep movsd dword ptr es : [ edi ] , dword ptr [ esi ] mov eax , num pop esi pop edi ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov r13 , rdi mov rbx , rsi mov rbp , rdx mov r12 , qword ptr [ rdx + hexvar ] test r12 , r12 je hexvar mov r14d , hexvar sub r14 , r12 cmp r14 , rsi cmova r14 , rsi lea r15 , [ rdx + hexvar ] lea rdi , [ r15 + r12 ] mov rdx , r14 mov rsi , r13 call hexvar mov rsi , r14 add rsi , qword ptr [ rbp + hexvar ] mov qword ptr [ rbp + hexvar ] , rsi cmp rsi , hexvar jbe hexvar and rsi , hexvar mov rdx , rbp mov rdi , r15 call hexvar mov rdx , qword ptr [ rbp + hexvar ] and edx , hexvar mov qword ptr [ rbp + hexvar ] , rdx lea rsi , [ r12 + r14 ] and rsi , hexvar lea rsi , [ r15 + rsi ] mov rdi , r15 call hexvar add r13 , r14 sub rbx , r14 cmp rbx , hexvar jbe hexvar mov r12 , rbx and r12 , hexvar mov rdx , rbp mov rsi , r12 mov rdi , r13 call hexvar add r13 , r12 and ebx , hexvar test rbx , rbx je hexvar mov r12 , qword ptr [ rbp + hexvar ] lea r14 , [ rbp + hexvar ] lea rdi , [ r14 + r12 ] mov rdx , rbx mov rsi , r13 call hexvar add rbx , r12 cmp rbx , hexvar jbe hexvar mov rdx , rbp mov esi , hexvar mov rdi , r14 call hexvar sub rbx , hexvar lea rsi , [ rbp + hexvar ] mov rdx , rbx mov rdi , r14 call hexvar mov qword ptr [ rbp + hexvar ] , rbx add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s1 , a1 lw s3 , hexvar ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r7 , [ r2 , hexvar ] mov r6 , r2 cmp r7 , num mov r4 , r0 mov r5 , r1 bne hexvar cmp r5 , hexvar bls hexvar tst r4 , num beq hexvar cmp r5 , hexvar add r7 , r6 , hexvar beq hexvar sub sb , r5 , hexvar lsr sb , sb , num add r8 , sb , num add r8 , r4 , r8 , lsl num mov r2 , hexvar mov r1 , r4 mov r0 , r7 add r4 , r4 , r2 bl hexvar mov r2 , r6 mov r1 , hexvar bl hexvar cmp r4 , r8 bne hexvar sub r5 , r5 , hexvar rsb sb , sb , sb , lsl num add r5 , r5 , sb , lsl num ldr r3 , [ r6 , hexvar ] mov r1 , r4 add r0 , r7 , r3 add r4 , r3 , r5 mov r2 , r5 bl hexvar cmp r4 , hexvar bhi hexvar str r4 , [ r6 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s3 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s1 , hexvar ( a2 )
push r15 push r14 mov r15 , rdi push r13 push r12 mov r13 , rsi push rbp push rbx mov r14 , rdx sub rsp , num mov rbx , qword ptr [ rdx + hexvar ] test rbx , rbx jne hexvar cmp r13 , hexvar jbe hexvar test r15b , num je hexvar cmp r13 , hexvar lea rbp , [ r14 + hexvar ] mov r12 , r13 mov rbx , r15 je hexvar nop dword ptr [ rax ] mov rax , qword ptr [ rbx ] mov rdx , r14 mov esi , hexvar mov rdi , rbp sub r12 , hexvar add rbx , hexvar mov qword ptr [ rbp ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + num ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - num ] mov qword ptr [ rbp + hexvar ] , rax call hexvar cmp r12 , hexvar ja hexvar lea rax , [ r13 - hexvar ] shr rax , num lea rdx , [ rax + num ] neg rax shl rax , num shl rdx , num lea r13 , [ r13 + rax - hexvar ] add r15 , rdx mov rcx , qword ptr [ r14 + hexvar ] cmp r13d , num mov eax , r13d lea rdi , [ rbp + rcx ] jae hexvar test r13b , num jne hexvar test r13d , r13d je hexvar movzx edx , byte ptr [ r15 ] test al , num mov byte ptr [ rdi ] , dl jne hexvar add r13 , rcx cmp r13 , hexvar jbe hexvar mov rdx , r14 mov esi , hexvar mov rdi , rbp call hexvar sub r13 , hexvar lea rsi , [ r14 + hexvar ] mov rdi , rbp mov rdx , r13 call hexvar mov qword ptr [ r14 + hexvar ] , r13 add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s3 , a1 sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s1 , hexvar ( a2 )
push r15 push r14 push r13 push r12 mov r13 , rdx push rbp push rbx mov r12 , rsi mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rdx + hexvar ] test rbp , rbp jne hexvar cmp r12 , hexvar jbe hexvar test bl , num je hexvar cmp r12 , hexvar lea rbp , [ r13 + hexvar ] je hexvar lea r15 , [ r12 - hexvar ] shr r15 , num lea r14 , [ r15 + num ] shl r14 , num add r14 , rbx nop dword ptr [ rax ] movdqu xmm0 , xmmword ptr [ rbx ] mov rdx , r13 mov esi , hexvar mov rdi , rbp add rbx , hexvar movups xmmword ptr [ rbp ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx - hexvar ] movups xmmword ptr [ rbp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx - hexvar ] movups xmmword ptr [ rbp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx - hexvar ] movups xmmword ptr [ rbp + hexvar ] , xmm0 call hexvar cmp rbx , r14 jne hexvar neg r15 shl r15 , num lea r12 , [ r12 + r15 - hexvar ] mov rdi , qword ptr [ r13 + hexvar ] cmp r12d , num mov eax , r12d lea rcx , [ rbp + rdi ] jae hexvar test r12b , num jne hexvar test r12d , r12d je hexvar movzx edx , byte ptr [ rbx ] test al , num mov byte ptr [ rcx ] , dl jne hexvar add r12 , rdi cmp r12 , hexvar jbe hexvar mov rdx , r13 mov esi , hexvar mov rdi , rbp call hexvar sub r12 , hexvar lea rsi , [ r13 + hexvar ] mov rdi , rbp mov rdx , r12 call hexvar mov qword ptr [ r13 + hexvar ] , r12 add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 mov r15 , rdi push r13 push r12 mov r13 , rsi push rbp push rbx mov r14 , rdx sub rsp , num mov eax , dword ptr [ rdx + hexvar ] test eax , eax jne hexvar cmp r13 , hexvar jbe hexvar test r15b , num je hexvar cmp r13 , hexvar lea rbp , [ r14 + hexvar ] mov r12 , r13 mov rbx , r15 je hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rbx ] mov rdx , r14 mov esi , hexvar mov rdi , rbp sub r12 , hexvar add rbx , hexvar mov qword ptr [ rbp ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + num ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - hexvar ] mov qword ptr [ rbp + hexvar ] , rax mov rax , qword ptr [ rbx - num ] mov qword ptr [ rbp + hexvar ] , rax call hexvar cmp r12 , hexvar ja hexvar lea rax , [ r13 - hexvar ] shr rax , num lea rdx , [ rax + num ] neg rax shl rax , num shl rdx , num lea r13 , [ r13 + rax - hexvar ] add r15 , rdx mov esi , dword ptr [ r14 + hexvar ] cmp r13d , num mov eax , r13d lea rcx , [ rbp + rsi ] jae hexvar test r13b , num jne hexvar test r13d , r13d je hexvar movzx edx , byte ptr [ r15 ] test al , num mov byte ptr [ rcx ] , dl jne hexvar add r13 , rsi cmp r13 , hexvar jbe hexvar mov rdx , r14 mov esi , hexvar mov rdi , rbp call hexvar sub r13 , hexvar lea rsi , [ r14 + hexvar ] mov rdi , rbp mov rdx , r13 call hexvar mov dword ptr [ r14 + hexvar ] , r13d add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 mov r13 , rdx push rbp push rbx mov r12 , rsi mov rbx , rdi sub rsp , num mov rbp , qword ptr [ rdx + hexvar ] test rbp , rbp jne hexvar cmp r12 , hexvar jbe hexvar test bl , num je hexvar cmp r12 , hexvar lea rbp , [ r13 + hexvar ] je hexvar lea r15 , [ r12 - hexvar ] shr r15 , num lea r14 , [ r15 + num ] shl r14 , num add r14 , rbx nop dword ptr [ rax ] movdqu xmm0 , xmmword ptr [ rbx ] mov rdx , r13 mov esi , hexvar mov rdi , rbp add rbx , hexvar movups xmmword ptr [ rbp ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx - hexvar ] movups xmmword ptr [ rbp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx - hexvar ] movups xmmword ptr [ rbp + hexvar ] , xmm0 movdqu xmm0 , xmmword ptr [ rbx - hexvar ] movups xmmword ptr [ rbp + hexvar ] , xmm0 call hexvar cmp rbx , r14 jne hexvar neg r15 shl r15 , num lea r12 , [ r12 + r15 - hexvar ] mov rdi , qword ptr [ r13 + hexvar ] cmp r12d , num mov eax , r12d lea rcx , [ rbp + rdi ] jae hexvar test r12b , num jne hexvar test r12d , r12d je hexvar movzx edx , byte ptr [ rbx ] test al , num mov byte ptr [ rcx ] , dl jne hexvar add r12 , rdi cmp r12 , hexvar jbe hexvar mov rdx , r13 mov esi , hexvar mov rdi , rbp call hexvar sub r12 , hexvar lea rsi , [ r13 + hexvar ] mov rdi , rbp mov rdx , r12 call hexvar mov qword ptr [ r13 + hexvar ] , r12 add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rbp push r15 push r14 push r12 push rbx mov rbx , rcx mov r14d , edx mov r15 , rsi mov r12 , rdi mov esi , num mov rdx , r15 mov ecx , r14d mov r8 , rbx call hexvar test eax , eax je hexvar mov ebp , eax cdqe add rbx , rax mov rdi , r12 mov esi , hexvar mov rdx , r15 mov ecx , r14d mov r8 , rbx call hexvar add ebp , eax test eax , eax cmovne eax , ebp jmp hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov rbx , rcx mov r14d , edx mov r15 , rsi mov r12 , rdi mov esi , num mov rdx , r15 mov ecx , r14d mov r8 , rbx call hexvar test eax , eax je hexvar mov ebp , eax cdqe add rbx , rax mov rdi , r12 mov esi , hexvar mov rdx , r15 mov ecx , r14d mov r8 , rbx call hexvar add ebp , eax test eax , eax cmovne eax , ebp jmp hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx mov rbx , rcx mov r14d , edx mov r15 , rsi mov r12 , rdi mov esi , num mov rdx , r15 mov ecx , r14d mov r8 , rbx call hexvar test eax , eax je hexvar mov ebp , eax cdqe add rbx , rax mov rdi , r12 mov esi , hexvar mov rdx , r15 mov ecx , r14d mov r8 , rbx call hexvar add ebp , eax test eax , eax cmovne eax , ebp jmp hexvar xor eax , eax pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push esi push ebp mov ecx , edi mov edx , num mov eax , dword ptr [ esp + hexvar ] call hexvar mov ebx , eax add esp , hexvar test eax , eax jne hexvar mov eax , ebx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx mov r12 , rcx mov r14d , edx mov r15 , rsi mov rbp , rdi mov esi , num mov rdx , r15 mov ecx , r14d mov r8 , r12 call hexvar movsxd rbx , eax lea r8 , [ r12 + rbx ] mov rdi , rbp mov esi , hexvar mov rdx , r15 mov ecx , r14d call hexvar add eax , ebx pop rbx pop r12 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s4 , a0 move s2 , a1 move s3 , a2 move s1 , a3 sw a3 , hexvar ( sp ) move a3 , a2 move a2 , a1 addiu a1 , zero , num jal hexvar nop bnez v0 , hexvar move s0 , v0 move v0 , s0 lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addu s1 , s1 , v0 sw s1 , hexvar ( sp ) move a3 , s3 move a2 , s2 addiu a1 , zero , hexvar move a0 , s4 jal hexvar nop beqz v0 , hexvar nop b hexvar addu s0 , s0 , v0 b hexvar move s0 , v0
push ebp push edi mov edx , num push esi push ebx sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push esi push ebp mov eax , dword ptr [ esp + hexvar ] mov ecx , edi call hexvar mov ebx , eax mov ecx , edi pop eax add esi , ebx pop edx push esi push ebp mov edx , hexvar mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add eax , ebx pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw s2 , hexvar ( sp ) move s2 , a1 addiu a1 , zero , num sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s3 , a2 sw a3 , hexvar ( sp ) move s0 , a3 move a3 , a2 sw ra , hexvar ( sp ) move a2 , s2 sw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) jal hexvar move s4 , a0 addiu a1 , zero , hexvar addu s0 , s0 , v0 move a3 , s3 sw s0 , hexvar ( sp ) move a2 , s2 move a0 , s4 jal hexvar move s1 , v0 lw ra , hexvar ( sp ) addu v0 , s1 , v0 lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp push edi push esi push ebx sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push esi push ebp mov ecx , edi mov edx , num mov eax , dword ptr [ esp + hexvar ] call hexvar mov ebx , eax add esp , hexvar test eax , eax jne hexvar mov eax , ebx add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s4 , a0 move s2 , a1 move s3 , a2 move s0 , a3 sw a3 , hexvar ( sp ) move a3 , a2 move a2 , a1 addiu a1 , zero , num jal hexvar nop move s1 , v0 addu s0 , s0 , v0 sw s0 , hexvar ( sp ) move a3 , s3 move a2 , s2 addiu a1 , zero , hexvar move a0 , s4 jal hexvar nop addu v0 , s1 , v0 lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edi , dword ptr [ eax + hexvar ] test byte ptr [ eax + hexvar ] , hexvar jne hexvar test edi , hexvar je hexvar lea eax , [ edx + num ] cmp byte ptr [ edx ] , num je hexvar add edx , ecx cmp edx , eax je hexvar add eax , num cmp byte ptr [ eax - num ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ eax + hexvar ] lea eax , [ esp + hexvar ] push eax push esi call edx mov edi , eax add esp , hexvar cmp dword ptr [ esi + hexvar ] , - num je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , hexvar mov eax , dword ptr [ esi + hexvar ] sub esp , num push dword ptr [ eax + hexvar ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jne hexvar mov dword ptr [ esp + num ] , hexvar sub esp , num push dword ptr [ esp + hexvar ] push num push esi call hexvar add esp , hexvar mov edi , hexvar mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbp push rbx push rax mov rbx , rdi mov dword ptr [ rsp + num ] , hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rcx + hexvar ] test rcx , rcx je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] and esi , hexvar and edx , hexvar or rdx , rsi je hexvar xor edx , edx nop cmp byte ptr [ rax + rdx ] , num je hexvar add rdx , num cmp rdx , rcx jb hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ebp , hexvar jmp hexvar mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rax , qword ptr [ rcx + hexvar ] test rax , rax jne hexvar mov rcx , qword ptr [ rbx + hexvar ] xor ebp , ebp test rcx , rcx je hexvar mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rcx + hexvar ] lea rsi , [ rsp + num ] mov rdi , rbx call rax mov ebp , eax cmp dword ptr [ rbx + hexvar ] , - num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov ecx , ebp cmp ecx , num jne hexvar mov edx , dword ptr [ rsp + num ] mov ebp , num mov rdi , rbx mov esi , num call hexvar jmp hexvar mov ecx , ebp cmp ecx , num je hexvar mov ebp , num cmp ecx , num je hexvar cmp ecx , num jne hexvar mov edx , dword ptr [ rsp + num ] mov rdi , rbx mov esi , num call hexvar mov ebp , hexvar jmp hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , ebp add rsp , num pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , hexvar ( v0 ) lw v0 , hexvar ( v0 )
push rbp push rbx push rax mov rbx , rdi mov dword ptr [ rsp + num ] , hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rbx + hexvar ] , num je hexvar mov rcx , qword ptr [ rbx + hexvar ] mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rcx , qword ptr [ rcx + hexvar ] test rcx , rcx je hexvar mov rdx , qword ptr [ rbx + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] and esi , hexvar and edx , hexvar or rdx , rsi je hexvar xor edx , edx nop cmp byte ptr [ rax + rdx ] , num je hexvar add rdx , num cmp rdx , rcx jb hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ebp , hexvar jmp hexvar mov rcx , qword ptr [ rbx + hexvar ] test rcx , rcx je hexvar mov rax , qword ptr [ rcx + hexvar ] test rax , rax jne hexvar mov rcx , qword ptr [ rbx + hexvar ] xor ebp , ebp test rcx , rcx je hexvar mov rax , qword ptr [ rcx + hexvar ] test rax , rax je hexvar mov rdx , qword ptr [ rcx + hexvar ] lea rsi , [ rsp + num ] mov rdi , rbx call rax mov ebp , eax mov rdi , qword ptr [ rbx + hexvar ] call hexvar mov qword ptr [ rbx + hexvar ] , num mov dword ptr [ rbx + hexvar ] , hexvar cmp dword ptr [ rbx + hexvar ] , - num je hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov ecx , ebp cmp ecx , num jne hexvar mov edx , dword ptr [ rsp + num ] mov ebp , num mov rdi , rbx mov esi , num call hexvar jmp hexvar cmp dword ptr [ rbx + hexvar ] , num je hexvar mov ecx , ebp cmp ecx , num je hexvar mov ebp , num cmp ecx , num je hexvar cmp ecx , num jne hexvar mov edx , dword ptr [ rsp + num ] mov rdi , rbx mov esi , num call hexvar mov ebp , hexvar jmp hexvar mov dword ptr [ rbx + hexvar ] , num mov eax , ebp add rsp , num pop rbx pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ eax + hexvar ] lea eax , [ esp + hexvar ] push eax push esi call edx add esp , hexvar mov edi , eax cmp dword ptr [ esi + hexvar ] , - num je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar sub esp , hexvar push edx call hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , num add esp , hexvar sub esp , num mov dword ptr [ esi + hexvar ] , hexvar push dword ptr [ eax + hexvar ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jne hexvar mov dword ptr [ esp + num ] , hexvar mov eax , hexvar sub esp , num mov edi , hexvar push eax push num push esi call hexvar add esp , hexvar jmp hexvar js hexvar lea esi , [ esi ] lea edi , [ edi ] cmp edi , num je hexvar cmp edi , num je hexvar cmp edi , num je hexvar mov edi , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edi , dword ptr [ eax + hexvar ] test byte ptr [ eax + hexvar ] , hexvar jne hexvar test edi , hexvar je hexvar lea eax , [ edx + num ] cmp byte ptr [ edx ] , num je hexvar add edx , ecx cmp edx , eax je hexvar add eax , num cmp byte ptr [ eax - num ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ eax + hexvar ] lea eax , [ esp + hexvar ] push eax push esi call edx mov edi , eax add esp , hexvar cmp dword ptr [ esi + hexvar ] , - num je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , hexvar mov eax , dword ptr [ esi + hexvar ] sub esp , num push dword ptr [ eax + hexvar ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jne hexvar mov dword ptr [ esp + num ] , hexvar sub esp , num push dword ptr [ esp + hexvar ] push num push esi call hexvar add esp , hexvar mov edi , hexvar mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + num ] , hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar cmp dword ptr [ esi + hexvar ] , num je hexvar mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar mov eax , dword ptr [ esi + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edi , dword ptr [ eax + hexvar ] test byte ptr [ eax + hexvar ] , hexvar jne hexvar test edi , hexvar je hexvar lea eax , [ edx + num ] cmp byte ptr [ edx ] , num je hexvar add edx , ecx cmp edx , eax je hexvar add eax , num cmp byte ptr [ eax - num ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ eax + hexvar ] lea eax , [ esp + hexvar ] push eax push esi call edx mov edi , eax add esp , hexvar cmp dword ptr [ esi + hexvar ] , - num je hexvar cmp dword ptr [ esi + hexvar ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , num je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov dword ptr [ esi + hexvar ] , num add esp , hexvar mov dword ptr [ esi + hexvar ] , hexvar mov eax , dword ptr [ esi + hexvar ] sub esp , num push dword ptr [ eax + hexvar ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jne hexvar mov dword ptr [ esp + num ] , hexvar sub esp , num push dword ptr [ esp + hexvar ] push num push esi call hexvar add esp , hexvar mov edi , hexvar mov eax , edi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar sub esp , num push dword ptr [ eax + hexvar ] lea eax , [ esp + hexvar ] push eax push esi call edx add esp , hexvar mov edi , eax cmp dword ptr [ esi + hexvar ] , - num je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax jne hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov ecx , dword ptr [ eax + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar sub esp , hexvar push edx call hexvar mov eax , dword ptr [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , num add esp , hexvar sub esp , num mov dword ptr [ esi + hexvar ] , hexvar push dword ptr [ eax + hexvar ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax jne hexvar mov dword ptr [ esp + num ] , hexvar mov eax , hexvar sub esp , num mov edi , hexvar push eax push num push esi call hexvar add esp , hexvar jmp hexvar js hexvar lea esi , [ esi ] lea edi , [ edi ] cmp edi , num je hexvar cmp edi , num je hexvar cmp edi , num je hexvar mov edi , num mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lw v0 , hexvar ( a0 )
lui gp , hexvar lw v0 , hexvar ( a0 ) addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v1 , zero , hexvar sw s2 , hexvar ( sp ) sw v1 , hexvar ( sp ) lw s2 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s2 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( a0 ) bnez v0 , hexvar nop lw v0 , hexvar ( s0 ) beqz v0 , hexvar nop lw t9 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push rbx mov edx , num mov esi , hexvar xor edi , edi call hexvar mov edx , hexvar mov rsi , rax mov edi , num xor eax , eax call hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov ecx , hexvar mov rsi , rax mov edx , hexvar mov edi , num xor eax , eax call hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop word ptr cs : [ rax + rax ] nop
push rbp mov rbp , rsp sub rsp , hexvar mov rsi , qword ptr [ hexvar ] movabs rdi , hexvar call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov rdi , rax movabs rsi , hexvar mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov rdi , rax movabs rsi , hexvar movabs rdx , hexvar mov al , num call hexvar movabs rdi , hexvar mov dword ptr [ rbp - hexvar ] , eax call hexvar mov rdi , rax movabs rsi , hexvar mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a0 , zero , hexvar sw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) jalr t9 lw a1 , ( v0 ) lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num addiu a2 , a2 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a3 , hexvar lw gp , hexvar ( sp ) lui a2 , hexvar addiu a3 , a3 , hexvar addiu a2 , a2 , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num lw ra , hexvar ( sp ) addiu a2 , a2 , - hexvar addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jr t9 move a1 , v0
push rbx mov edx , num mov esi , hexvar xor edi , edi call hexvar mov edx , hexvar mov rsi , rax mov edi , num xor eax , eax call hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov ecx , hexvar mov rsi , rax mov edx , hexvar mov edi , num xor eax , eax call hexvar mov rbx , qword ptr [ rip + hexvar ] mov esi , hexvar xor edi , edi mov edx , num call hexvar mov rsi , rbx mov rdi , rax pop rbx jmp hexvar nop word ptr cs : [ rax + rax ] nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a1 , hexvar addiu a2 , zero , num sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num addiu a2 , a2 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a3 , hexvar lw gp , hexvar ( sp ) lui a2 , hexvar addiu a3 , a3 , - hexvar addiu a2 , a2 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , zero addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a2 , zero , num lw gp , hexvar ( sp ) move a0 , v0 lw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw a1 , ( v0 ) jr t9 addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a1 , hexvar addiu a2 , zero , num sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a2 , hexvar lw gp , hexvar ( sp ) addiu a0 , zero , num addiu a2 , a2 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui a3 , hexvar lw gp , hexvar ( sp ) lui a2 , hexvar addiu a3 , a3 , hexvar addiu a2 , a2 , hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 move a1 , v0 lui a1 , hexvar lw gp , hexvar ( sp ) move a0 , zero addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a2 , zero , num lw gp , hexvar ( sp ) move a0 , v0 lw ra , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw a1 , ( v0 ) jr t9 addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a1 , v0 addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu a2 , v0 , - hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax sub esp , num lea eax , [ ebx - hexvar ] push eax push edx call hexvar add esp , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax sub esp , num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push edx call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax call hexvar add esp , hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push { r4 , r5 , r6 , r7 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , hexvar str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r0 , [ r0 , hexvar ] cmn r0 , num beq hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num movne r0 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc } andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , num mov esi , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , hexvar lea edi , [ esp + hexvar ] mov ecx , num mov edx , hexvar mov dword ptr [ edi + eax ] , ecx add eax , num cmp eax , edx jb hexvar mov ecx , dword ptr [ esi + hexvar ] cmp ecx , - num je hexvar movzx edx , byte ptr [ esi + hexvar ] mov eax , num test dl , dl je hexvar mov esi , dword ptr [ esp + hexvar ] xor esi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r13 push r12 push rbp push rbx mov rbx , rdi pxor xmm0 , xmm0 sub rsp , hexvar mov edi , dword ptr [ rdi + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , num cmp edi , - num mov dword ptr [ rsp + hexvar ] , num movaps xmmword ptr [ rsp + hexvar ] , xmm0 je hexvar movzx eax , byte ptr [ rbx + hexvar ] test al , al je hexvar xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
lui gp , num addiu sp , sp , - hexvar addiu gp , gp , num addiu v0 , zero , hexvar sw s2 , hexvar ( sp ) sw s3 , hexvar ( sp ) addiu s3 , zero , - num sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) addiu s0 , sp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw s2 , ( gp ) lw a0 , hexvar ( a0 ) sw zero , hexvar ( sp ) sw zero , num ( s0 ) sw zero , num ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) sw zero , hexvar ( s0 ) lw v0 , ( s2 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , num mov esi , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , hexvar lea edi , [ esp + hexvar ] mov ecx , num mov edx , hexvar mov dword ptr [ edi + eax ] , ecx add eax , num cmp eax , edx jb hexvar mov ecx , dword ptr [ esi + hexvar ] cmp ecx , - num je hexvar movzx edx , byte ptr [ esi + hexvar ] mov eax , num test dl , dl je hexvar mov esi , dword ptr [ esp + hexvar ] xor esi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov edi , eax push esi push ebx xor edx , edx call hexvar add ebx , num sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea esi , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esi + eax ] , edx add eax , num cmp eax , hexvar jb hexvar mov edx , dword ptr [ edi + hexvar ] cmp edx , - num je hexvar movzx eax , byte ptr [ edi + hexvar ] test al , al je hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov edi , eax push esi push ebx xor edx , edx call hexvar add ebx , num sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea esi , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esi + eax ] , edx add eax , num cmp eax , hexvar jb hexvar mov edx , dword ptr [ edi + hexvar ] cmp edx , - num je hexvar movzx eax , byte ptr [ edi + hexvar ] test al , al je hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r13 push r12 push rbp push rbx mov rbx , rdi pxor xmm0 , xmm0 sub rsp , hexvar mov edi , dword ptr [ rdi + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov dword ptr [ rsp + hexvar ] , hexvar mov qword ptr [ rsp + hexvar ] , num cmp edi , - num mov dword ptr [ rsp + hexvar ] , num movaps xmmword ptr [ rsp + hexvar ] , xmm0 je hexvar movzx eax , byte ptr [ rbx + hexvar ] test al , al je hexvar xor eax , eax mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push { r4 , r5 , r6 , r7 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] mov r3 , hexvar str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] str r3 , [ sp , hexvar ] ldr r0 , [ r0 , hexvar ] cmn r0 , num beq hexvar ldrb r3 , [ r4 , hexvar ] cmp r3 , num movne r0 , num beq hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc } andeq r0 , r0 , r0
push ebp push edi mov edi , eax push esi push ebx xor edx , edx call hexvar add ebx , num sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea esi , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esi + eax ] , edx add eax , num cmp eax , hexvar jb hexvar mov edx , dword ptr [ edi + hexvar ] cmp edx , - num je hexvar movzx eax , byte ptr [ edi + hexvar ] test al , al je hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
orr r2 , r2 , hexvar push { r4 , r5 , r6 , r7 , r8 , lr } orr r2 , r2 , hexvar mov r6 , r3 bl hexvar subs r5 , r0 , num blt hexvar bl hexvar subs r4 , r0 , num strne r5 , [ r6 ] beq hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] or eax , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jns hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar call hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] or eax , hexvar push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax js hexvar mov esi , eax sub esp , hexvar push eax call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , esi mov eax , edi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , num ori v0 , v0 , hexvar or v0 , v1 , v0 sw v0 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgez v0 , hexvar nop move v0 , zero b hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 ) b hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v0 , ( v1 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov edx , dword ptr [ rbp - hexvar ] or edx , hexvar mov dword ptr [ rbp - hexvar ] , edx mov edi , dword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] xor eax , eax mov r8b , al mov al , r8b call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] test eax , eax sets r8b movzx eax , r8b mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov edi , dword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edi , cl mov eax , edi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , eax mov rcx , qword ptr [ rip + hexvar ] jmp rcx call hexvar mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov edi , dword ptr [ rbp - hexvar ] call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , ecx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , num ori v0 , v0 , hexvar or v0 , v1 , v0 sw v0 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgez v0 , hexvar nop move v0 , zero b hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 ) b hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) sw v0 , ( v1 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v1 , hexvar ( fp ) lui v0 , num ori v0 , v0 , hexvar or v0 , v1 , v0 sw v0 , hexvar ( fp ) lw a2 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bgez v0 , hexvar nop move v0 , zero b hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sw v1 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] or eax , hexvar mov edx , eax mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax call hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] or edi , hexvar mov dword ptr [ ebp - hexvar ] , edi mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jge hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov eax , dword ptr [ rbp - hexvar ] or eax , hexvar mov dword ptr [ rbp - hexvar ] , eax mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jns hexvar mov eax , num jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edx jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rdx ] , eax mov rax , qword ptr [ rbp - num ] leave ret
adds r3 , r0 , num movne r3 , num cmp r1 , num movne r3 , num cmp r3 , num push { r4 , lr } bne hexvar mov r4 , r1 bl hexvar adds r4 , r4 , num movne r4 , num cmp r0 , num movne r4 , num cmp r4 , num popeq { r4 , pc }
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] test esi , esi jne hexvar test eax , eax jne hexvar sub esp , num push esi push eax call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi jne hexvar add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx cmp dword ptr [ ebp - hexvar ] , num setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar call hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) bnez a1 , hexvar sw gp , hexvar ( sp ) bnez a0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp + num ] , eax cmp dword ptr [ ebp + num ] , num jne hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp - num ] leave ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , num b hexvar ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar bl hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] test rsi , rsi setne al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , num mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbx mov rbx , rsi call hexvar test rbx , rbx je hexvar test rax , rax je hexvar pop rbx ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + num ] , rsi lea rdx , [ rsp + num ] mov esi , hexvar mov edi , num call hexvar add rsp , hexvar ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + num ] , rsi lea rdx , [ rsp + num ] mov esi , hexvar mov edi , num call hexvar add rsp , hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + num ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + num ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , sp , hexvar sw s0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui a1 , hexvar lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) addiu a1 , a1 , hexvar sw a0 , hexvar ( sp ) addiu a0 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop lw v1 , hexvar ( sp ) lw v0 , ( s0 ) bne v1 , v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) addiu a2 , sp , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v1 , hexvar ( sp ) lw v0 , ( s0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , sp , hexvar sw s0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui a1 , hexvar lw s0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) addiu a1 , a1 , hexvar sw a0 , hexvar ( sp ) addiu a0 , zero , num sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) jalr t9 nop lw v1 , hexvar ( sp ) lw v0 , ( s0 ) bne v1 , v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + num ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , rdi mov qword ptr [ rsp + num ] , rsi lea rdx , [ rsp + num ] mov esi , hexvar mov edi , num call hexvar add rsp , hexvar ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + num ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx ret
push ebx mov edx , dword ptr [ esp + num ] call hexvar add ecx , hexvar mov ebx , edx mov eax , edx and ebx , hexvar and ah , hexvar cmp ebx , hexvar cmove edx , eax lea eax , [ ecx - hexvar ] cmp edx , hexvar ja hexvar mov eax , dword ptr [ ecx + edx * num - hexvar ] pop ebx ret
push ebx mov edx , dword ptr [ esp + num ] call hexvar add ecx , hexvar mov ebx , edx mov eax , edx and ebx , hexvar and ah , hexvar cmp ebx , hexvar cmove edx , eax lea eax , [ ecx - hexvar ] cmp edx , hexvar ja hexvar mov eax , dword ptr [ ecx + edx * num - hexvar ] pop ebx ret
addiu v0 , zero , - num addiu v1 , zero , hexvar and v0 , a0 , v0 bne v0 , v1 , hexvar sltiu v0 , a0 , hexvar addiu v0 , zero , - hexvar and a0 , a0 , v0 sltiu v0 , a0 , hexvar beqz v0 , hexvar sll a0 , a0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu a0 , a0 , v0 jr ra lw v0 , ( a0 ) lui v0 , hexvar jr ra addiu v0 , v0 , - hexvar nop
cmp edi , hexvar sete byte ptr [ rsp - num ] cmp edi , hexvar sete byte ptr [ rsp - num ] mov esi , edi and esi , hexvar mov edx , hexvar mov r8d , hexvar mov r9d , hexvar jmp hexvar mov edx , hexvar mov eax , hexvar nop dword ptr [ rax + rax ] cmp edx , hexvar jle hexvar cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar movzx ecx , byte ptr [ rsp - num ] cmp byte ptr [ rsp - num ] , num mov edx , hexvar cmovne edx , r9d test cl , cl cmovne edx , r9d mov r10d , edi jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp edx , hexvar je hexvar cmp edx , hexvar je hexvar cmp edx , hexvar jne hexvar mov edx , hexvar mov r10d , esi jmp hexvar mov dword ptr [ rsp - num ] , r10d mov ecx , dword ptr [ rsp - num ] mov edx , dword ptr [ rsp - num ] cmp edx , hexvar mov edx , hexvar cmovg edx , r8d test ecx , ecx cmovs edx , r8d jmp hexvar movsxd rax , dword ptr [ rsp - num ] mov rax , qword ptr [ rax * num + hexvar ] mov edx , hexvar jmp hexvar ret
mov eax , edi or eax , num mov ecx , edi and ecx , hexvar cmp eax , hexvar cmovne ecx , edi mov eax , hexvar cmp ecx , hexvar ja hexvar movsxd rax , ecx mov rax , qword ptr [ rax * num + hexvar ] ret
sw a0 , ( sp ) lw v1 , ( sp ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v1 , ( sp ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v1 , ( sp ) addiu v0 , zero , - hexvar and v0 , v1 , v0 sw v0 , ( sp ) lw v0 , ( sp ) bltz v0 , hexvar nop lw v0 , ( sp ) slti v0 , v0 , hexvar bnez v0 , hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar b hexvar nop lui v0 , hexvar lw v1 , ( sp ) sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) jr ra nop
push ebx call hexvar add ecx , hexvar mov edx , dword ptr [ esp + num ] mov ebx , edx and ebx , hexvar mov eax , edx and ah , hexvar cmp ebx , hexvar cmove edx , eax lea eax , [ ecx - hexvar ] cmp edx , hexvar ja hexvar mov eax , dword ptr [ ecx + edx * num - hexvar ] pop ebx ret
call hexvar add eax , hexvar cmp dword ptr [ esp + num ] , hexvar je hexvar cmp dword ptr [ esp + num ] , hexvar jne hexvar and dword ptr [ esp + num ] , hexvar cmp dword ptr [ esp + num ] , num js hexvar cmp dword ptr [ esp + num ] , hexvar jle hexvar lea eax , [ eax - hexvar ] ret
mov eax , edi or eax , num mov ecx , edi and ecx , hexvar cmp eax , hexvar cmovne ecx , edi mov eax , hexvar cmp ecx , hexvar ja hexvar movsxd rax , ecx mov rax , qword ptr [ rax * num + hexvar ] ret
push ebx call hexvar add ecx , hexvar mov edx , dword ptr [ esp + num ] mov ebx , edx and ebx , hexvar mov eax , edx and ah , hexvar cmp ebx , hexvar cmove edx , eax lea eax , [ ecx - hexvar ] cmp edx , hexvar ja hexvar mov eax , dword ptr [ ecx + edx * num - hexvar ] pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , rsi test rsi , rsi mov eax , hexvar mov r13d , hexvar cmove r13d , eax mov eax , hexvar mov r12d , hexvar jmp hexvar mov eax , r13d cmp eax , hexvar jle hexvar cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , hexvar mov rbx , rbp jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , r14 xor esi , esi call hexvar mov qword ptr [ rsp ] , rax cmp qword ptr [ rsp ] , num mov eax , hexvar cmove eax , r12d xor ebp , ebp jmp hexvar nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rsp ] call hexvar mov rbx , rax test rax , rax mov eax , hexvar cmove eax , r12d mov rbp , rbx jmp hexvar mov rdi , qword ptr [ rsp ] call hexvar mov eax , hexvar mov r15 , rbx jmp hexvar mov eax , hexvar xor r15d , r15d jmp hexvar mov rax , r15 add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push r14 push rbx push rax test rsi , rsi je hexvar mov rdi , rsi xor esi , esi call hexvar mov r14 , rax test rax , rax je hexvar mov rdi , r14 call hexvar mov rbx , rax test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , r14 call hexvar jmp hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , num ] cmp r3 , num bne hexvar mov r3 , num b hexvar mov r1 , num ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc }
push r14 push rbx push rax test rsi , rsi je hexvar mov rdi , rsi xor esi , esi call hexvar mov r14 , rax test rax , rax je hexvar mov rdi , r14 call hexvar mov rbx , rax test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , r14 call hexvar jmp hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a1 , hexvar sw gp , hexvar ( sp ) move a0 , a1 move a1 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s1 , v0 addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , zero move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s1 lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move s1 , zero
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a0 , a1 jalr t9 move a1 , zero lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 lw ra , hexvar ( sp ) move v0 , s1 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui a3 , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , a3 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar addiu a0 , zero , hexvar jalr t9 move s1 , zero b hexvar lw gp , hexvar ( sp ) b hexvar move s1 , zero
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + num ] , num cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx ret
push r14 push rbx push rax test rsi , rsi je hexvar mov rdi , rsi xor esi , esi call hexvar mov r14 , rax test rax , rax je hexvar mov rdi , r14 call hexvar mov rbx , rax test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , r14 call hexvar jmp hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push r14 push rbx push rax test rsi , rsi je hexvar mov rdi , rsi xor esi , esi call hexvar mov r14 , rax test rax , rax je hexvar mov rdi , r14 call hexvar mov rbx , rax test rax , rax jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rdi , r14 call hexvar jmp hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + num ] , num cmp dword ptr [ esp + hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + num ] , eax cmp dword ptr [ esp + num ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a3 sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s1 , hexvar ( sp ) lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , num ( s0 ) move s1 , v0 slti v0 , s3 , num beqz v0 , hexvar lw t9 , - hexvar ( gp ) bnez s2 , hexvar nop addiu s2 , zero , num lw s1 , num ( s1 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r13d , ecx mov r12 , rdx mov ebp , esi mov rbx , rdi call hexvar mov qword ptr [ rbx + num ] , rax xor r15d , r15d test rax , rax je hexvar cmp ebp , num jl hexvar mov edi , num call hexvar mov rcx , qword ptr [ rbx + num ] mov qword ptr [ rcx + hexvar ] , rax test rax , rax je hexvar movsxd rsi , ebp mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbx + num ] test r13d , r13d mov ebp , num cmovne ebp , r13d mov rax , qword ptr [ rax + num ] mov dword ptr [ rax ] , ebp mov esi , hexvar mov edi , ebp mov edx , hexvar call hexvar mov rcx , qword ptr [ rbx + num ] mov rcx , qword ptr [ rcx + num ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar test r12 , r12 je hexvar movsxd rdx , ebp mov rdi , rax mov rsi , r12 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , rax mov esi , ebp call hexvar test eax , eax js hexvar mov rdi , r14 call hexvar mov edi , eax call hexvar mov rcx , qword ptr [ rbx + num ] mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rcx ] , rax call hexvar mov rcx , qword ptr [ rbx + num ] mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar mov dword ptr [ rax ] , num mov r15d , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , r15d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , r8 mov ebp , ecx mov r12 , rdx mov ebx , esi mov r13 , rdi call hexvar mov qword ptr [ r13 + num ] , rax xor r14d , r14d test rax , rax je hexvar cmp ebx , num jl hexvar mov edi , num call hexvar mov rcx , qword ptr [ r13 + num ] mov qword ptr [ rcx + hexvar ] , rax test rax , rax je hexvar movsxd rsi , ebx mov rdi , rax call hexvar test eax , eax je hexvar test ebp , ebp mov ebx , num cmovne ebx , ebp mov esi , hexvar mov edi , ebx mov edx , hexvar call hexvar mov rcx , qword ptr [ r13 + num ] mov rcx , qword ptr [ rcx + num ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar mov dword ptr [ rcx ] , ebx test r12 , r12 je hexvar movsxd rdx , ebx mov rdi , rax mov rsi , r12 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , rax mov esi , ebx call hexvar test eax , eax jle hexvar mov rdi , r15 call hexvar mov edi , eax call hexvar mov rcx , qword ptr [ r13 + num ] mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rcx ] , rax call hexvar mov rcx , qword ptr [ r13 + num ] mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar mov dword ptr [ rax ] , num mov r14d , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , r14d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r15 , r8 mov ebp , ecx mov r12 , rdx mov ebx , esi mov r13 , rdi call hexvar mov qword ptr [ r13 + num ] , rax xor r14d , r14d test rax , rax je hexvar cmp ebx , num jl hexvar mov edi , num call hexvar mov rcx , qword ptr [ r13 + num ] mov qword ptr [ rcx + hexvar ] , rax test rax , rax je hexvar movsxd rsi , ebx mov rdi , rax call hexvar test eax , eax je hexvar test ebp , ebp mov ebx , num cmovne ebx , ebp mov esi , hexvar mov edi , ebx mov edx , hexvar call hexvar mov rcx , qword ptr [ r13 + num ] mov rcx , qword ptr [ rcx + num ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar mov dword ptr [ rcx ] , ebx test r12 , r12 je hexvar movsxd rdx , ebx mov rdi , rax mov rsi , r12 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , rax mov esi , ebx call hexvar test eax , eax jle hexvar mov rdi , r15 call hexvar mov edi , eax call hexvar mov rcx , qword ptr [ r13 + num ] mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rcx ] , rax call hexvar mov rcx , qword ptr [ r13 + num ] mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar mov dword ptr [ rax ] , num mov r14d , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , r14d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s3 , a1 move s4 , a2 move s1 , a3 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , num ( s0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi + num ] , eax mov dword ptr [ esp + hexvar ] , num test eax , eax je hexvar mov edi , eax cmp dword ptr [ esp + hexvar ] , num jg hexvar test ebp , ebp mov eax , num cmove ebp , eax mov eax , dword ptr [ esi + num ] mov edi , dword ptr [ eax + num ] sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push ebp call hexvar mov dword ptr [ edi + num ] , eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ eax ] , ebp cmp dword ptr [ esp + hexvar ] , num je hexvar mov eax , dword ptr [ esi + num ] mov eax , dword ptr [ eax + num ] sub esp , num push ebp push dword ptr [ esp + hexvar ] push dword ptr [ eax + num ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov edx , dword ptr [ esi + num ] mov edx , dword ptr [ edx ] mov edi , dword ptr [ edx ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ edi ] , eax mov eax , dword ptr [ esi + num ] mov eax , dword ptr [ eax ] mov edi , dword ptr [ eax ] call hexvar mov dword ptr [ edi + num ] , eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + num ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + num ] mov dword ptr [ eax ] , num mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a3 sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw s1 , hexvar ( sp ) lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , num ( s0 ) move s1 , v0 slti v0 , s3 , num beqz v0 , hexvar lw t9 , - hexvar ( gp ) bnez s2 , hexvar nop addiu s2 , zero , num lw s1 , num ( s1 )
push rbp push r15 push r14 push r13 push r12 push rbx push rax mov r14 , r8 mov r13d , ecx mov r12 , rdx mov ebp , esi mov rbx , rdi call hexvar mov qword ptr [ rbx + num ] , rax xor r15d , r15d test rax , rax je hexvar cmp ebp , num jl hexvar mov edi , num call hexvar mov rcx , qword ptr [ rbx + num ] mov qword ptr [ rcx + hexvar ] , rax test rax , rax je hexvar movsxd rsi , ebp mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbx + num ] test r13d , r13d mov ebp , num cmovne ebp , r13d mov rax , qword ptr [ rax + num ] mov dword ptr [ rax ] , ebp mov esi , hexvar mov edi , ebp mov edx , hexvar call hexvar mov rcx , qword ptr [ rbx + num ] mov rcx , qword ptr [ rcx + num ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar test r12 , r12 je hexvar movsxd rdx , ebp mov rdi , rax mov rsi , r12 call hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rdi , rax mov esi , ebp call hexvar test eax , eax js hexvar mov rdi , r14 call hexvar mov edi , eax call hexvar mov rcx , qword ptr [ rbx + num ] mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rcx ] , rax call hexvar mov rcx , qword ptr [ rbx + num ] mov rcx , qword ptr [ rcx ] mov rcx , qword ptr [ rcx ] mov qword ptr [ rcx + num ] , rax test rax , rax je hexvar mov dword ptr [ rax ] , num mov r15d , num jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov eax , r15d add rsp , num pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) move s1 , a1 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a0 , ( a1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) move s1 , a1 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a0 , ( a1 )
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) lw s2 , ( a1 ) addiu a1 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 addiu a1 , zero , hexvar lw gp , hexvar ( sp ) lw s3 , ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rcx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , rdx mov r15 , rsi mov qword ptr [ rsp + hexvar ] , rdi mov byte ptr [ rsp + hexvar ] , num mov r12d , ebp movsxd r14 , dword ptr [ rcx + num ] xor ebx , ebx test bpl , hexvar je hexvar mov qword ptr [ rsp + hexvar ] , rcx mov edi , r14d call hexvar mov rbx , rax mov rdi , rax call hexvar mov r13 , rax mov rdi , r15 mov rsi , rbx mov edx , r13d mov rbx , qword ptr [ rsp + hexvar ] call rbx mov edx , hexvar test eax , eax je hexvar mov esi , hexvar mov qword ptr [ rsp + hexvar ] , r15 mov rdi , r15 mov edx , num call rbx mov edx , hexvar xor ebx , ebx test eax , eax setne cl test eax , eax je hexvar mov bl , cl add ebx , r13d mov r15 , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] test r12b , r12b js hexvar mov r13d , num test bpl , hexvar jne hexvar lea eax , [ r14 - num ] cmp eax , hexvar ja hexvar mov eax , hexvar bt rax , r14 jb hexvar movsx r13d , byte ptr [ r14 + hexvar ] and r12b , hexvar test bpl , hexvar jne hexvar jmp hexvar test ebp , hexvar jne hexvar and r12b , hexvar test bpl , hexvar je hexvar mov eax , r13d or eax , num test r13d , r13d mov r13d , num cmovne r13d , eax mov rdi , qword ptr [ rcx + num ] mov qword ptr [ rsp + hexvar ] , rcx mov esi , dword ptr [ rcx ] mov qword ptr [ rsp ] , num movzx ebp , r12b lea r8 , [ rsp + hexvar ] mov edx , r13d mov ecx , ebp mov r9 , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar test eax , eax js hexvar mov edx , eax add edx , ebx mov cl , byte ptr [ rsp + hexvar ] test cl , cl lea r14d , [ rax + rbx + num ] cmove r14d , edx test r15 , r15 je hexvar test cl , cl mov r12 , qword ptr [ rsp + hexvar ] je hexvar mov esi , hexvar mov rdi , r15 mov edx , num call r12
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar andi v0 , a2 , hexvar sw s5 , hexvar ( sp ) lw s5 , - hexvar ( gp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a1 sw s3 , hexvar ( sp ) move s3 , a0 sw s1 , hexvar ( sp ) move s1 , a3 sw s0 , hexvar ( sp ) move s0 , a2 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) sb zero , hexvar ( sp ) lw v1 , ( s5 ) lw s6 , num ( a3 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sb zero , hexvar ( sp ) lw v0 , hexvar ( sp ) andi v0 , v0 , hexvar andi v0 , v0 , hexvar sb v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , rdx mov r15 , rsi mov qword ptr [ rsp + hexvar ] , rdi mov byte ptr [ rsp + hexvar ] , num mov r12d , ebp movsxd r14 , dword ptr [ rcx + num ] xor ebx , ebx test bpl , hexvar je hexvar mov qword ptr [ rsp + hexvar ] , rcx mov edi , r14d call hexvar mov rbx , rax mov rdi , rax call hexvar mov r13 , rax mov rdi , r15 mov rsi , rbx mov edx , r13d mov rbx , qword ptr [ rsp + hexvar ] call rbx mov edx , hexvar test eax , eax je hexvar mov esi , hexvar mov qword ptr [ rsp + hexvar ] , r15 mov rdi , r15 mov edx , num call rbx mov edx , hexvar xor ebx , ebx test eax , eax setne cl test eax , eax je hexvar mov bl , cl add ebx , r13d mov r15 , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] test r12b , r12b js hexvar mov r13d , num test bpl , hexvar jne hexvar lea eax , [ r14 - num ] cmp eax , hexvar ja hexvar mov eax , hexvar bt rax , r14 jb hexvar movsx r13d , byte ptr [ r14 + hexvar ] and r12b , hexvar test bpl , hexvar jne hexvar jmp hexvar test ebp , hexvar jne hexvar and r12b , hexvar test bpl , hexvar je hexvar mov eax , r13d or eax , num test r13d , r13d mov r13d , num cmovne r13d , eax mov rdi , qword ptr [ rcx + num ] mov qword ptr [ rsp + hexvar ] , rcx mov esi , dword ptr [ rcx ] mov qword ptr [ rsp ] , num movzx ebp , r12b lea r8 , [ rsp + hexvar ] mov edx , r13d mov ecx , ebp mov r9 , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar test eax , eax js hexvar mov edx , eax add edx , ebx mov cl , byte ptr [ rsp + hexvar ] test cl , cl lea r14d , [ rax + rbx + num ] cmove r14d , edx test r15 , r15 je hexvar test cl , cl mov r12 , qword ptr [ rsp + hexvar ] je hexvar mov esi , hexvar mov rdi , r15 mov edx , num call r12
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , rdx mov r15 , rsi mov qword ptr [ rsp + hexvar ] , rdi mov byte ptr [ rsp + hexvar ] , num mov r12d , ebp movsxd r14 , dword ptr [ rcx + num ] xor ebx , ebx test bpl , hexvar je hexvar mov qword ptr [ rsp + hexvar ] , rcx mov edi , r14d call hexvar mov rbx , rax mov rdi , rax call hexvar mov r13 , rax mov rdi , r15 mov rsi , rbx mov edx , r13d mov rbx , qword ptr [ rsp + hexvar ] call rbx mov edx , hexvar test eax , eax je hexvar mov esi , hexvar mov qword ptr [ rsp + hexvar ] , r15 mov rdi , r15 mov edx , num call rbx mov edx , hexvar xor ebx , ebx test eax , eax setne cl test eax , eax je hexvar mov bl , cl add ebx , r13d mov r15 , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] test r12b , r12b js hexvar mov r13d , num test bpl , hexvar jne hexvar lea eax , [ r14 - num ] cmp eax , hexvar ja hexvar mov eax , hexvar bt rax , r14 jb hexvar movsx r13d , byte ptr [ r14 + hexvar ] and r12b , hexvar test bpl , hexvar jne hexvar jmp hexvar test ebp , hexvar jne hexvar and r12b , hexvar test bpl , hexvar je hexvar mov eax , r13d or eax , num test r13d , r13d mov r13d , num cmovne r13d , eax mov rdi , qword ptr [ rcx + num ] mov qword ptr [ rsp + hexvar ] , rcx mov esi , dword ptr [ rcx ] mov qword ptr [ rsp ] , num movzx ebp , r12b lea r8 , [ rsp + hexvar ] mov edx , r13d mov ecx , ebp mov r9 , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar test eax , eax js hexvar mov edx , eax add edx , ebx mov cl , byte ptr [ rsp + hexvar ] test cl , cl lea r14d , [ rax + rbx + num ] cmove r14d , edx test r15 , r15 je hexvar test cl , cl mov r12 , qword ptr [ rsp + hexvar ] je hexvar mov esi , hexvar mov rdi , r15 mov edx , num call r12
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbp , rdx mov r15 , rsi mov qword ptr [ rsp + hexvar ] , rdi mov byte ptr [ rsp + hexvar ] , num mov r12d , ebp movsxd r14 , dword ptr [ rcx + num ] xor ebx , ebx test bpl , hexvar je hexvar mov qword ptr [ rsp + hexvar ] , rcx mov edi , r14d call hexvar mov rbx , rax mov rdi , rax call hexvar mov r13 , rax mov rdi , r15 mov rsi , rbx mov edx , r13d mov rbx , qword ptr [ rsp + hexvar ] call rbx mov edx , hexvar test eax , eax je hexvar mov esi , hexvar mov qword ptr [ rsp + hexvar ] , r15 mov rdi , r15 mov edx , num call rbx mov edx , hexvar xor ebx , ebx test eax , eax setne cl test eax , eax je hexvar mov bl , cl add ebx , r13d mov r15 , qword ptr [ rsp + hexvar ] mov rcx , qword ptr [ rsp + hexvar ] test r12b , r12b js hexvar mov r13d , num test bpl , hexvar jne hexvar lea eax , [ r14 - num ] cmp eax , hexvar ja hexvar mov eax , hexvar bt rax , r14 jb hexvar movsx r13d , byte ptr [ r14 + hexvar ] and r12b , hexvar test bpl , hexvar jne hexvar jmp hexvar test ebp , hexvar jne hexvar and r12b , hexvar test bpl , hexvar je hexvar mov eax , r13d or eax , num test r13d , r13d mov r13d , num cmovne r13d , eax mov rdi , qword ptr [ rcx + num ] mov qword ptr [ rsp + hexvar ] , rcx mov esi , dword ptr [ rcx ] mov qword ptr [ rsp ] , num movzx ebp , r12b lea r8 , [ rsp + hexvar ] mov edx , r13d mov ecx , ebp mov r9 , qword ptr [ rsp + hexvar ] call hexvar mov edx , hexvar test eax , eax js hexvar mov edx , eax add edx , ebx mov cl , byte ptr [ rsp + hexvar ] test cl , cl lea r14d , [ rax + rbx + num ] cmove r14d , edx test r15 , r15 je hexvar test cl , cl mov r12 , qword ptr [ rsp + hexvar ] je hexvar mov esi , hexvar mov rdi , r15 mov edx , num call r12
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , rcx mov r15 , rdx mov rbx , rsi mov qword ptr [ rsp + hexvar ] , rdi mov byte ptr [ rsp + hexvar ] , num mov r13d , r15d movsxd r14 , dword ptr [ rcx + num ] xor ecx , ecx test r15b , hexvar je hexvar mov edi , r14d call hexvar mov rbp , rbx mov rbx , rax mov rdi , rax call hexvar mov rdi , rbp mov rsi , rbx mov qword ptr [ rsp + hexvar ] , rax mov edx , eax mov rbx , qword ptr [ rsp + hexvar ] call rbx mov ecx , hexvar test eax , eax je hexvar mov esi , hexvar mov qword ptr [ rsp + hexvar ] , rbp mov rdi , rbp mov edx , num call rbx mov ecx , hexvar test eax , eax je hexvar mov rcx , qword ptr [ rsp + hexvar ] add ecx , num mov rbx , qword ptr [ rsp + hexvar ] test r13b , r13b js hexvar mov ebp , num test r15b , hexvar jne hexvar lea eax , [ r14 - num ] cmp eax , hexvar ja hexvar mov eax , hexvar bt rax , r14 jb hexvar movsx ebp , byte ptr [ r14 + hexvar ] and r13b , hexvar mov r14 , rcx test r15b , hexvar jne hexvar jmp hexvar test r15d , hexvar jne hexvar and r13b , hexvar mov r14 , rcx test r15b , hexvar je hexvar mov eax , ebp or eax , num test ebp , ebp mov ebp , num cmovne ebp , eax mov rdi , qword ptr [ r12 + num ] mov esi , dword ptr [ r12 ] mov qword ptr [ rsp ] , num movzx r13d , r13b lea r8 , [ rsp + hexvar ] mov edx , ebp mov ecx , r13d mov r15 , qword ptr [ rsp + hexvar ] mov r9 , r15 call hexvar mov ecx , hexvar test eax , eax js hexvar mov edx , eax add edx , r14d mov cl , byte ptr [ rsp + hexvar ] test cl , cl lea r14d , [ rax + r14 + num ] cmove r14d , edx test rbx , rbx je hexvar test cl , cl je hexvar mov esi , hexvar mov rdi , rbx mov edx , num call r15
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar andi v0 , a2 , hexvar sw s5 , hexvar ( sp ) lw s5 , - hexvar ( gp ) sw s6 , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a1 sw s3 , hexvar ( sp ) move s3 , a0 sw s1 , hexvar ( sp ) move s1 , a3 sw s0 , hexvar ( sp ) move s0 , a2 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) sb zero , hexvar ( sp ) lw v1 , ( s5 ) lw s6 , num ( a3 )
push ebp push edi push esi push ebx mov esi , ecx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax and ecx , hexvar mov dword ptr [ esp + num ] , edx mov byte ptr [ esp + hexvar ] , num mov ebp , dword ptr [ edi + num ] mov dword ptr [ esp + num ] , num jne hexvar test esi , hexvar jne hexvar test esi , hexvar je hexvar mov eax , esi and eax , hexvar cmp eax , num sbb ebp , ebp and ebp , hexvar add ebp , num and esi , hexvar mov eax , dword ptr [ edi + num ] mov ecx , ebp mov dword ptr [ esp + hexvar ] , esi push num push dword ptr [ esp + num ] lea edx , [ esp + hexvar ] push edx push esi mov edx , dword ptr [ edi ] call hexvar add esp , hexvar test eax , eax js hexvar mov esi , dword ptr [ esp + num ] add esi , eax cmp byte ptr [ esp + hexvar ] , num je hexvar mov ecx , dword ptr [ esp + num ] add esi , num test ecx , ecx je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push ecx mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ edi + num ] push dword ptr [ esp + num ] mov ecx , ebp push dword ptr [ esp + num ] push num push dword ptr [ esp + hexvar ] mov edx , dword ptr [ edi ] call hexvar add esp , hexvar test eax , eax js hexvar cmp byte ptr [ esp + hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx mov esi , ecx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax and ecx , hexvar mov dword ptr [ esp + num ] , edx mov byte ptr [ esp + hexvar ] , num mov ebp , dword ptr [ edi + num ] mov dword ptr [ esp + num ] , num jne hexvar test esi , hexvar jne hexvar test esi , hexvar je hexvar mov eax , esi and eax , hexvar cmp eax , num sbb ebp , ebp and ebp , hexvar add ebp , num and esi , hexvar mov eax , dword ptr [ edi + num ] mov ecx , ebp mov dword ptr [ esp + hexvar ] , esi push num push dword ptr [ esp + num ] lea edx , [ esp + hexvar ] push edx push esi mov edx , dword ptr [ edi ] call hexvar add esp , hexvar test eax , eax js hexvar mov esi , dword ptr [ esp + num ] add esi , eax cmp byte ptr [ esp + hexvar ] , num je hexvar mov ecx , dword ptr [ esp + num ] add esi , num test ecx , ecx je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push ecx mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ edi + num ] push dword ptr [ esp + num ] mov ecx , ebp push dword ptr [ esp + num ] push num push dword ptr [ esp + hexvar ] mov edx , dword ptr [ edi ] call hexvar add esp , hexvar test eax , eax js hexvar cmp byte ptr [ esp + hexvar ] , num je hexvar lea eax , [ ebx - hexvar ] sub esp , num push num push eax push dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call eax add esp , hexvar test eax , eax je hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , edi call hexvar mov ebx , eax mov eax , esi call hexvar mov edx , eax cmp al , num je hexvar test bl , bl jne hexvar cmp bl , num je hexvar mov eax , num test dl , dl je hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov byte ptr [ rbp - num ] , al cmp byte ptr [ rbp - num ] , num je hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ rbp - num ] xor eax , num test al , al je hexvar cmp byte ptr [ rbp - num ] , num je hexvar mov eax , num jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rip - hexvar ] mov rsi , rcx mov rdi , rax call hexvar leave ret
push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ ebx + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sb v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop lui v0 , hexvar addiu a2 , v0 , - hexvar lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push edi push esi push ebx mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edx , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ esi + hexvar ] cmp edx , num sete al cmp edx , num sete dl or eax , edx cmp edi , num je hexvar cmp edi , num je hexvar mov edx , dword ptr [ esi + hexvar ] and edx , hexvar test al , al je hexvar cmp edx , hexvar je hexvar pop ebx mov eax , num pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s2 , a0 move s0 , a1 jal hexvar nop move s1 , v0 move a0 , s0 jal hexvar nop beqz s1 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw a1 , ( s2 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num mov byte ptr [ ebp - hexvar ] , al push dword ptr [ ebp + hexvar ] call hexvar add esp , num mov byte ptr [ ebp - num ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar movzx eax , byte ptr [ ebp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - num ] , num je hexvar mov eax , num jmp hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) sw a1 , hexvar ( fp ) lw v0 , num ( fp ) move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , edx mov dword ptr [ ebp - num ] , ecx add esp , num pop ebp ret
cmp byte ptr [ rip + hexvar ] , num je hexvar cmp edi , hexvar sete al cmp edi , hexvar sete dl or al , dl jne hexvar cmp edi , hexvar ja hexvar mov eax , num mov ecx , edi shl rax , cl test eax , hexvar je hexvar push r12 push rbp mov edx , hexvar push rbx mov edi , hexvar xor eax , eax call hexvar mov r12d , eax call hexvar test r12d , r12d mov rbp , rax js hexvar mov edi , r12d call hexvar test rax , rax mov rbx , rax je hexvar mov dword ptr [ rbp ] , num nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax je hexvar cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar xor edx , edx cmp byte ptr [ rax + hexvar ] , hexvar sete dl movzx eax , byte ptr [ rax + rdx + hexvar ] test al , al je hexvar cmp al , hexvar je hexvar mov r12d , dword ptr [ rbp ] mov rdi , rbx call hexvar mov dword ptr [ rbp ] , r12d jmp hexvar nop dword ptr [ rax + rax ] xor eax , eax ret nop dword ptr [ rax ] mov r12d , dword ptr [ rax ] test r12d , r12d pop rbx sete al pop rbp pop r12 ret
lui v0 , hexvar lbu v0 , - hexvar ( v0 ) beqz v0 , hexvar addiu v1 , zero , hexvar beq a0 , v1 , hexvar addiu v1 , zero , hexvar beq a0 , v1 , hexvar nop sltiu v0 , a0 , hexvar beqz v0 , hexvar move v0 , zero addiu v0 , zero , num sllv a0 , v0 , a0 lui v0 , hexvar addiu v0 , v0 , hexvar and a0 , a0 , v0 beqz a0 , hexvar move v0 , zero lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a2 , num addiu a0 , zero , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) addiu a2 , a2 , hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 lw gp , hexvar ( sp ) bltz s0 , hexvar move s4 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 addiu s0 , zero , hexvar sw zero , ( s4 ) addiu s3 , zero , num addiu s2 , zero , num addiu s5 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) lb a0 , hexvar ( v0 ) bne a0 , s0 , hexvar addiu v1 , v0 , hexvar lb v0 , hexvar ( v0 ) move a0 , s2 xor v0 , v0 , s0 movn a0 , s3 , v0 addu v0 , v1 , a0 lb v0 , ( v0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) beq v0 , s5 , hexvar nop lw s0 , ( s4 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 sw s0 , ( s4 ) sltiu v0 , s0 , num lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move v0 , zero jr ra nop lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 b hexvar lw s0 , ( s4 )
cmp byte ptr [ rip + hexvar ] , num je hexvar cmp edi , hexvar sete al cmp edi , hexvar sete dl or al , dl jne hexvar cmp edi , hexvar ja hexvar mov eax , num mov ecx , edi shl rax , cl test eax , hexvar je hexvar push r12 push rbp mov edx , hexvar push rbx mov edi , hexvar xor eax , eax call hexvar mov r12d , eax call hexvar test r12d , r12d mov rbp , rax js hexvar mov edi , r12d call hexvar test rax , rax mov rbx , rax je hexvar mov dword ptr [ rbp ] , num nop dword ptr [ rax + rax ] mov rdi , rbx call hexvar test rax , rax je hexvar cmp byte ptr [ rax + hexvar ] , hexvar jne hexvar cmp byte ptr [ rax + hexvar ] , hexvar je hexvar movzx eax , byte ptr [ rax + hexvar ] cmp al , hexvar je hexvar test al , al je hexvar mov r12d , dword ptr [ rbp ] mov rdi , rbx call hexvar mov dword ptr [ rbp ] , r12d jmp hexvar nop word ptr [ rax + rax ] xor eax , eax ret nop dword ptr [ rax ] mov r12d , dword ptr [ rax ] test r12d , r12d pop rbx sete al pop rbp pop r12 ret
lui v0 , hexvar lbu v0 , - hexvar ( v0 ) beqz v0 , hexvar nop addiu v1 , zero , hexvar beq a0 , v1 , hexvar nop addiu v1 , zero , hexvar beq a0 , v1 , hexvar nop sltiu v0 , a0 , hexvar beqz v0 , hexvar move v0 , zero addiu v0 , zero , num sllv a0 , v0 , a0 lui v0 , hexvar addiu v0 , v0 , hexvar and a0 , a0 , v0 beqz a0 , hexvar move v0 , zero lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a2 , num addiu a0 , zero , - hexvar sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) addiu a2 , a2 , hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s1 , hexvar ( sp ) lw gp , hexvar ( sp ) bltz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , v0 lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 lw t9 , - hexvar ( gp ) addiu s0 , zero , hexvar addiu s3 , zero , num jalr t9 addiu s2 , zero , num addiu s4 , zero , hexvar lw gp , hexvar ( sp ) move s5 , v0 sw zero , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 beqz v0 , hexvar lw gp , hexvar ( sp ) lb a0 , hexvar ( v0 ) bne a0 , s0 , hexvar addiu v1 , v0 , hexvar lb v0 , hexvar ( v0 ) move a0 , s2 xor v0 , v0 , s0 movn a0 , s3 , v0 addu v0 , v1 , a0 lb v0 , ( v0 ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) beq v0 , s4 , hexvar nop lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 b hexvar move v0 , zero move v0 , zero jr ra nop lw t9 , - hexvar ( gp ) jalr t9 move a0 , s0 move v0 , zero lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw s0 , ( s5 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx xor eax , eax mov cl , al test byte ptr [ hexvar ] , num mov byte ptr [ ebp - hexvar ] , cl je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num mov cl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al xor eax , eax mov cl , al mov dl , byte ptr [ ebp - hexvar ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ esp ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp byte ptr [ ebx + hexvar ] , num je hexvar cmp eax , hexvar mov ebp , edx sete cl cmp eax , hexvar mov esi , ecx sete cl mov edx , esi or dl , cl mov esi , edx jne hexvar cmp eax , hexvar ja hexvar mov edi , num mov ecx , eax shl edi , cl and edi , hexvar je hexvar sub esp , num push hexvar push ebp push - hexvar call hexvar add esp , hexvar test eax , eax mov ebp , eax js hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar call hexvar mov ebp , eax mov dword ptr [ eax ] , num lea esi , [ esi ] sub esp , hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar cmp byte ptr [ eax + hexvar ] , hexvar jne hexvar xor edx , edx cmp byte ptr [ eax + hexvar ] , hexvar sete dl movzx eax , byte ptr [ eax + edx + hexvar ] test al , al je hexvar cmp al , hexvar je hexvar sub esp , hexvar push edi call hexvar add esp , hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov bl , dl test byte ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar test al , num mov al , num mov byte ptr [ ebp - hexvar ] , al jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dl , cl test al , num mov byte ptr [ ebp - hexvar ] , dl jne hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , eax call hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov bl , byte ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl xor eax , eax mov cl , al mov dl , byte ptr [ ebp - hexvar ] test dl , num mov byte ptr [ ebp - hexvar ] , cl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar test al , num mov al , num mov byte ptr [ ebp - hexvar ] , al jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx call hexvar add esp , hexvar xor ecx , ecx mov dl , cl test al , num mov byte ptr [ ebp - hexvar ] , dl jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , hexvar mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al jmp hexvar mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - num ] pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar movzx eax , byte ptr [ ebx + hexvar ] test al , al je hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test al , al jne hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test al , al je hexvar sub esp , num push dword ptr [ ebp + hexvar ] push - hexvar call hexvar add esp , hexvar xor eax , num test al , al je hexvar call hexvar mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar movzx eax , byte ptr [ eax + hexvar ] test al , al je hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test al , al jne hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test al , al je hexvar sub esp , num push dword ptr [ ebp + hexvar ] push - hexvar call hexvar add esp , hexvar test al , al je hexvar mov eax , num jmp hexvar mov eax , num and eax , num leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx call hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx call hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] sub esp , hexvar mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx call hexvar lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw a1 , hexvar ( fp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] movabs rdi , hexvar add rcx , rdi sub rcx , rdx sub rcx , rdi cmp rcx , num jge hexvar movabs rdi , hexvar call hexvar mov rdi , rax mov al , num call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , rax add rcx , num mov qword ptr [ rbp - hexvar ] , rcx mov dl , byte ptr [ rax ] mov byte ptr [ rbp - hexvar ] , dl movsxd rax , dword ptr [ rbp - hexvar ] shl rax , num movabs rcx , hexvar add rcx , rax movzx esi , byte ptr [ rbp - hexvar ] sar esi , num movsxd rax , esi mov rax , qword ptr [ rcx + rax * num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] movzx esi , byte ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbx mov rbx , rcx sub rcx , rdi test rcx , rcx jle hexvar mov eax , esi movzx ecx , byte ptr [ rdi ] movzx esi , cl add rdi , num shr cl , num and ecx , num cdqe lea r8 , [ rcx + rax * num ] mov rcx , rbx lea rax , [ rip + hexvar ] call qword ptr [ rax + r8 * num ]
movsxd r8 , esi movzx esi , byte ptr [ rdi ] add rdi , num mov eax , esi shr al , num and eax , num lea r8 , [ rax + r8 * num ] lea rax , [ rip + hexvar ] jmp qword ptr [ rax + r8 * num ]
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp + num ] sub edx , eax mov eax , edx test eax , eax jg hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] jmp hexvar mov eax , dword ptr [ ebp + num ] lea edx , [ eax + num ] mov dword ptr [ ebp + num ] , edx movzx eax , byte ptr [ eax ] mov byte ptr [ ebp - hexvar ] , al movzx eax , byte ptr [ ebp - hexvar ] shr al , num movzx eax , al mov edx , dword ptr [ ebp + hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ ebx + eax * num - hexvar ] mov dword ptr [ ebp - hexvar ] , eax movzx eax , byte ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push eax push dword ptr [ ebp + num ] mov eax , dword ptr [ ebp - hexvar ] call eax add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
str lr , [ sp , - num ] ! ldrb lr , [ r0 ] , num lsl r1 , r1 , num ldr ip , [ pc , hexvar ] add r1 , r1 , lr , lsr num add ip , ip , r1 , lsl num mov r1 , lr ldr lr , [ ip , hexvar ] mov ip , lr pop { lr } bx ip muleq sb , ip , r2
str lr , [ sp , - num ] ! ldrb lr , [ r0 ] , num lsl r1 , r1 , num ldr ip , [ pc , hexvar ] add r1 , r1 , lr , lsr num add ip , ip , r1 , lsl num mov r1 , lr ldr lr , [ ip , hexvar ] mov ip , lr pop { lr } bx ip strheq sp , [ sb ] , -r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , v0 , num sw v1 , hexvar ( fp ) lbu v0 , ( v0 ) sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) srl v0 , v0 , num andi v0 , v0 , hexvar move a0 , v0 lui v0 , hexvar lw v1 , hexvar ( fp ) sll v1 , v1 , num addu v1 , v1 , a0 sll v1 , v1 , num addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lbu v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw a3 , hexvar ( fp ) lw a2 , hexvar ( fp ) move a1 , v1 lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
sll v0 , a1 , num lbu a1 , ( a0 ) lui v1 , hexvar srl t0 , a1 , num addiu v1 , v1 , hexvar addu v0 , v0 , t0 sll v0 , v0 , num addu v0 , v0 , v1 lw t9 , ( v0 ) jr t9 addiu a0 , a0 , num
push edi push esi push ebx mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov edx , esi sub edx , eax test edx , edx jle hexvar movzx edx , byte ptr [ eax ] add eax , num mov dword ptr [ esp + hexvar ] , eax mov ecx , edx mov dword ptr [ esp + hexvar ] , edx shr cl , num movzx ecx , cl lea ecx , [ ecx + edi * num ] mov eax , dword ptr [ ebx + ecx * num - hexvar ] pop ebx pop esi pop edi jmp eax mov esi , esi lea edi , [ edi ] lea eax , [ ebx - hexvar ] sub esp , num push num push eax push num call hexvar pop edx pop ecx push eax push num call hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx test rax , rax jg hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx movzx eax , byte ptr [ rax ] mov byte ptr [ rbp - num ] , al movzx eax , byte ptr [ rbp - num ] shr al , num movzx eax , al cdqe mov edx , dword ptr [ rbp - hexvar ] movsxd rdx , edx shl rdx , num add rax , rdx lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov rax , qword ptr [ rdx + rax ] mov qword ptr [ rbp - num ] , rax movzx esi , byte ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] call rax leave ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r7 , r0 mov r5 , r1 mov r0 , r1 bl hexvar clz r3 , r7 lsr r3 , r3 , num cmp r0 , num moveq r0 , r3 movne r0 , num cmp r0 , num bne hexvar ldr r4 , [ r5 , hexvar ] ldr r3 , [ r5 , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , num ldr r0 , [ r5 , hexvar ] blx r3 subs r6 , r0 , num beq hexvar ldr r8 , [ r4 , hexvar ] cmp r8 , num beq hexvar mov r3 , num ldr r1 , [ r4 , hexvar ] ldr r8 , [ r5 , hexvar ] mov r2 , r3 lsl r1 , r3 , r1 ldr r0 , [ r5 , hexvar ] blx r8 subs r8 , r0 , num beq hexvar mov r2 , hexvar mov r1 , r5 mov r0 , r7 bl hexvar ldr r2 , [ pc , hexvar ] mov r1 , r4 mov r0 , r6 bl hexvar str r7 , [ r6 ] ldr r3 , [ r4 , hexvar ] add r2 , r4 , hexvar add r2 , r2 , num cmp r3 , r2 blo hexvar add r1 , r4 , hexvar cmp r3 , r1 bhi hexvar add r1 , r6 , hexvar add r1 , r1 , num sub r3 , r3 , r2 add r3 , r1 , r3 str r3 , [ r6 , hexvar ] ldr r3 , [ r4 , hexvar ] sub r3 , r3 , r2 add r1 , r1 , r3 str r1 , [ r6 , hexvar ] add r3 , r6 , hexvar add r3 , r3 , num ldr r1 , [ r4 , hexvar ] sub r2 , r1 , r2 add r3 , r3 , r2 str r3 , [ r6 , hexvar ] cmp r8 , num beq hexvar ldr r3 , [ r4 , hexvar ] mov r2 , num lsl r2 , r2 , r3 ldr r1 , [ r4 , hexvar ] mov r0 , r8 bl hexvar str r8 , [ r6 , hexvar ] str r6 , [ r7 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } strne ip , [ sb ] , hexvar andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
beqz a1 , hexvar nop lw t9 , hexvar ( a1 ) beqz t9 , hexvar nop lw v0 , hexvar ( a1 ) beqz v0 , hexvar nop addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s1 , hexvar ( a1 ) beqz s1 , hexvar addiu v0 , zero , - num lw v0 , ( s1 ) beq a1 , v0 , hexvar addiu v0 , zero , - num lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , num ( s1 )
push { r4 , r5 , r6 , r7 , r8 , lr } mov r7 , r0 mov r5 , r1 mov r0 , r1 bl hexvar clz r3 , r7 lsr r3 , r3 , num cmp r0 , num moveq r0 , r3 movne r0 , num cmp r0 , num bne hexvar ldr r4 , [ r5 , hexvar ] ldr r3 , [ r5 , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , num ldr r0 , [ r5 , hexvar ] blx r3 subs r6 , r0 , num beq hexvar ldr r8 , [ r4 , hexvar ] cmp r8 , num beq hexvar mov r3 , num ldr r1 , [ r4 , hexvar ] ldr r8 , [ r5 , hexvar ] mov r2 , r3 lsl r1 , r3 , r1 ldr r0 , [ r5 , hexvar ] blx r8 subs r8 , r0 , num beq hexvar mov r2 , hexvar mov r1 , r5 mov r0 , r7 bl hexvar ldr r2 , [ pc , hexvar ] mov r1 , r4 mov r0 , r6 bl hexvar str r7 , [ r6 ] ldr r3 , [ r4 , hexvar ] add r2 , r4 , hexvar add r2 , r2 , num cmp r3 , r2 blo hexvar add r1 , r4 , hexvar cmp r3 , r1 bhi hexvar add r1 , r6 , hexvar add r1 , r1 , num sub r3 , r3 , r2 add r3 , r1 , r3 str r3 , [ r6 , hexvar ] ldr r3 , [ r4 , hexvar ] sub r3 , r3 , r2 add r1 , r1 , r3 str r1 , [ r6 , hexvar ] add r3 , r6 , hexvar add r3 , r3 , num ldr r1 , [ r4 , hexvar ] sub r2 , r1 , r2 add r3 , r3 , r2 str r3 , [ r6 , hexvar ] cmp r8 , num beq hexvar ldr r3 , [ r4 , hexvar ] mov r2 , num lsl r2 , r2 , r3 ldr r1 , [ r4 , hexvar ] mov r0 , r8 bl hexvar str r8 , [ r6 , hexvar ] str r6 , [ r7 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } stcne p13 , c10 , [ sp ] , hexvar andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , hexvar ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) bnez v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
test rsi , rsi je hexvar mov rcx , qword ptr [ rsi + hexvar ] test rcx , rcx je hexvar cmp qword ptr [ rsi + hexvar ] , num je hexvar push r13 push r12 mov eax , hexvar push rbp push rbx sub rsp , num mov rbp , qword ptr [ rsi + hexvar ] test rbp , rbp je hexvar cmp rsi , qword ptr [ rbp ] je hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r7 , r0 mov r5 , r1 mov r0 , r1 bl hexvar clz r3 , r7 lsr r3 , r3 , num cmp r0 , num moveq r0 , r3 movne r0 , num cmp r0 , num bne hexvar ldr r4 , [ r5 , hexvar ] ldr r3 , [ r5 , hexvar ] ldr r2 , [ pc , hexvar ] mov r1 , num ldr r0 , [ r5 , hexvar ] blx r3 subs r6 , r0 , num beq hexvar ldr r8 , [ r4 , hexvar ] cmp r8 , num beq hexvar mov r3 , num ldr r1 , [ r4 , hexvar ] ldr r8 , [ r5 , hexvar ] mov r2 , r3 lsl r1 , r3 , r1 ldr r0 , [ r5 , hexvar ] blx r8 subs r8 , r0 , num beq hexvar mov r2 , hexvar mov r1 , r5 mov r0 , r7 bl hexvar ldr r2 , [ pc , hexvar ] mov r1 , r4 mov r0 , r6 bl hexvar str r7 , [ r6 ] ldr r3 , [ r4 , hexvar ] add r2 , r4 , hexvar add r2 , r2 , num cmp r3 , r2 blo hexvar add r1 , r4 , hexvar cmp r3 , r1 bhi hexvar add r1 , r6 , hexvar add r1 , r1 , num sub r3 , r3 , r2 add r3 , r1 , r3 str r3 , [ r6 , hexvar ] ldr r3 , [ r4 , hexvar ] sub r3 , r3 , r2 add r1 , r1 , r3 str r1 , [ r6 , hexvar ] add r3 , r6 , hexvar add r3 , r3 , num ldr r1 , [ r4 , hexvar ] sub r2 , r1 , r2 add r3 , r3 , r2 str r3 , [ r6 , hexvar ] cmp r8 , num beq hexvar ldr r3 , [ r4 , hexvar ] mov r2 , num lsl r2 , r2 , r3 ldr r1 , [ r4 , hexvar ] mov r0 , r8 bl hexvar str r8 , [ r6 , hexvar ] str r6 , [ r7 , hexvar ] mov r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } shadd16lo sb , r5 , r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx call hexvar add eax , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov ebp , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov edx , dword ptr [ esi + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov ebx , dword ptr [ esi + hexvar ] mov eax , hexvar test ebx , ebx je hexvar cmp esi , dword ptr [ ebx ] je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } subs r4 , r1 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r4 , hexvar ] cmp r2 , num beq hexvar ldr r5 , [ r4 , hexvar ] cmp r5 , num beq hexvar ldr r2 , [ r5 ] cmp r4 , r2 beq hexvar mvn r0 , num pop { r4 , r5 , r6 , r7 , r8 , pc } ldmdbvs pc ! , { r3 , r4 , r6 , r8 , pc } andeq r0 , r0 , r0
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov r8 , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] push num push qword ptr [ rbp + hexvar ] push qword ptr [ rbp + hexvar ] push num mov r9 , r8 mov r8 , rdi mov rdi , rax call hexvar add rsp , hexvar leave ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
push ebx mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx pop ebx jmp hexvar nop lea esi , [ esi ]
push ebx mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + num ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx pop ebx jmp hexvar nop lea esi , [ esi ]
addiu sp , sp , - hexvar addiu v0 , zero , num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( sp ) bltz a2 , hexvar lw s2 , hexvar ( sp ) bltz s0 , hexvar nop bltz s2 , hexvar addu s3 , a2 , s0 xor v1 , a2 , s0 xor v0 , s3 , s0 nor v1 , zero , v1 and v0 , v0 , v1 bltz v0 , hexvar move s1 , a2 beqz s0 , hexvar move s6 , a0 move s4 , a3 bnez a2 , hexvar sw a1 , hexvar ( sp ) move s5 , zero lw v0 , hexvar ( sp ) move a2 , s3 lw a3 , hexvar ( sp ) move a1 , s4 move a0 , s6 sw s2 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v0 , zero , num sw zero , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) move a0 , s5 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s3 lw gp , hexvar ( sp ) beqz v0 , hexvar move s5 , v0 lw t9 , - hexvar ( gp )
str lr , [ sp , - num ] ! mov ip , num mov lr , num sub sp , sp , hexvar str lr , [ sp , hexvar ] str ip , [ sp , num ] ldr lr , [ sp , hexvar ] ldr ip , [ sp , hexvar ] str lr , [ sp ] str ip , [ sp , num ] ldr lr , [ sp , hexvar ] ldr ip , [ sp , hexvar ] str lr , [ sp , hexvar ] str ip , [ sp , hexvar ] bl hexvar add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp push r15 push r14 push rbx sub rsp , hexvar mov rax , qword ptr [ rbp + hexvar ] mov r10 , qword ptr [ rbp + hexvar ] xor r11d , r11d mov ebx , r11d mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov qword ptr [ rbp - hexvar ] , r9 mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , qword ptr [ rbp - hexvar ] mov r9 , qword ptr [ rbp - hexvar ] mov r14 , qword ptr [ rbp + hexvar ] mov r15 , qword ptr [ rbp + hexvar ] mov qword ptr [ rsp ] , num mov qword ptr [ rsp + num ] , r14 mov qword ptr [ rsp + hexvar ] , r15 mov dword ptr [ rsp + hexvar ] , num mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , r10 mov qword ptr [ rbp - hexvar ] , rbx call hexvar add rsp , hexvar pop rbx pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ecx , edx shr eax , hexvar shr ecx , hexvar or cl , al jne hexvar test esi , esi js hexvar mov edi , esi add edi , edx jo hexvar test edx , edx mov dword ptr [ esp + hexvar ] , edx je hexvar xor ebp , ebp test esi , esi jne hexvar sub esp , hexvar mov ecx , edi push num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num push dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov esi , eax push ebp call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
movzx eax , byte ptr [ rdi ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx ecx , byte ptr [ rdi + num ] xor eax , eax cmp cl , byte ptr [ rcx + hexvar ] sete al ret
mov esi , hexvar xor edx , edx mov ecx , hexvar mov r8d , hexvar jmp hexvar mov edx , dword ptr [ rsp - hexvar ] add edx , num mov esi , hexvar cmp esi , hexvar jg hexvar cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp esi , hexvar je hexvar cmp esi , hexvar je hexvar cmp esi , hexvar jne hexvar mov dword ptr [ rsp - hexvar ] , edx mov esi , dword ptr [ rsp - hexvar ] mov qword ptr [ rsp - num ] , rsi mov rsi , qword ptr [ rsp - num ] cmp rsi , num mov esi , hexvar cmovb esi , r8d jmp hexvar mov esi , hexvar xor eax , eax jmp hexvar mov rsi , qword ptr [ rsp - num ] movzx esi , byte ptr [ rdi + rsi ] cmp sil , byte ptr [ rsi + hexvar ] mov esi , hexvar cmove esi , ecx jmp hexvar mov esi , hexvar mov eax , num jmp hexvar ret
movzx eax , byte ptr [ rdi ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx ecx , byte ptr [ rdi + num ] xor eax , eax cmp cl , byte ptr [ rcx + hexvar ] sete al ret
movzx eax , byte ptr [ rdi ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx ecx , byte ptr [ rdi + num ] xor eax , eax cmp cl , byte ptr [ rcx + hexvar ] sete al ret
movzx eax , byte ptr [ rdi ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx eax , byte ptr [ rdi + num ] cmp al , byte ptr [ rax + hexvar ] jne hexvar movzx ecx , byte ptr [ rdi + num ] xor eax , eax cmp cl , byte ptr [ rcx + hexvar ] sete al ret
addiu sp , sp , - num sw a0 , num ( sp ) sw zero , num ( sp ) b hexvar nop lw v1 , num ( sp ) lw v0 , num ( sp ) addu v0 , v1 , v0 lbu v1 , ( v0 ) lw a0 , num ( sp ) lw v0 , num ( sp ) addu v0 , a0 , v0 lbu v0 , ( v0 ) move a0 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , a0 , v0 lbu v0 , ( v0 ) beq v1 , v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , num ( sp ) addiu v0 , v0 , num sw v0 , num ( sp ) lw v0 , num ( sp ) sltiu v0 , v0 , num bnez v0 , hexvar nop addiu v0 , zero , num addiu sp , sp , num jr ra nop
push esi push ebx mov eax , dword ptr [ esp + hexvar ] call hexvar add ecx , hexvar movzx esi , byte ptr [ eax ] mov ebx , esi cmp byte ptr [ ecx + esi - hexvar ] , bl jne hexvar movzx esi , byte ptr [ eax + num ] mov ebx , esi cmp bl , byte ptr [ ecx + esi - hexvar ] jne hexvar movzx ebx , byte ptr [ eax + num ] lea edx , [ ecx - hexvar ] cmp bl , byte ptr [ edx + ebx ] jne hexvar movzx ebx , byte ptr [ eax + num ] cmp bl , byte ptr [ edx + ebx ] jne hexvar movzx ebx , byte ptr [ eax + num ] cmp bl , byte ptr [ edx + ebx ] jne hexvar movzx ebx , byte ptr [ eax + num ] cmp bl , byte ptr [ edx + ebx ] jne hexvar movzx ebx , byte ptr [ eax + num ] cmp bl , byte ptr [ edx + ebx ] jne hexvar movzx ecx , byte ptr [ eax + num ] pop ebx pop esi cmp byte ptr [ edx + ecx ] , cl sete al movzx eax , al ret
sub sp , sp , hexvar str r0 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r2 , r3 ldrb r2 , [ r3 ] ldr r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r1 , r3 ldrb r3 , [ r3 ] mov r1 , r3 ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 , r1 ] cmp r2 , r3 beq hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bls hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar bx lr eoreq sb , r6 , r0 , lsr num
push esi push ebx mov eax , dword ptr [ esp + hexvar ] call hexvar add edx , hexvar lea esi , [ eax + num ] lea ebx , [ edx - hexvar ] movzx ecx , byte ptr [ eax ] cmp cl , byte ptr [ ebx + ecx ] jne hexvar add eax , num cmp eax , esi jne hexvar mov eax , num pop ebx pop esi ret
sub sp , sp , hexvar str r0 , [ sp , num ] mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r2 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r2 , r3 ldrb r2 , [ r3 ] ldr r1 , [ sp , num ] ldr r3 , [ sp , hexvar ] add r3 , r1 , r3 ldrb r3 , [ r3 ] mov r1 , r3 ldr r3 , [ pc , hexvar ] ldrb r3 , [ r3 , r1 ] cmp r2 , r3 beq hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bls hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar bx lr eoreq sb , r6 , r0 , lsr num
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] test edx , edx je hexvar add esp , num lea edx , [ ebx - hexvar ] pop ebx jmp hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push hexvar push eax lea eax , [ ebx - hexvar ] push eax call hexvar nop lea esi , [ esi ]
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] test edx , edx je hexvar add esp , num lea edx , [ ebx - hexvar ] pop ebx jmp hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push hexvar push eax lea eax , [ ebx - hexvar ] push eax call hexvar nop lea esi , [ esi ]
sub rsp , num cmp qword ptr [ rdi + hexvar ] , num je hexvar lea rsi , [ rip + hexvar ] call hexvar add rsp , num ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] test edx , edx je hexvar add esp , num lea edx , [ ebx - hexvar ] pop ebx jmp hexvar lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push hexvar push eax lea eax , [ ebx - hexvar ] push eax call hexvar nop lea esi , [ esi ]
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + num ] test edx , edx jne hexvar lea edx , [ eax - hexvar ] push edx push hexvar lea edx , [ eax - hexvar ] push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar sub esp , num lea eax , [ eax - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar leave ret
cmp qword ptr [ rdi + hexvar ] , num je hexvar lea rsi , [ rip + hexvar ] jmp hexvar lea rcx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] sub rsp , num mov edx , hexvar call hexvar nop word ptr cs : [ rax + rax ]
push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ eax + num ] , num je hexvar lea edx , [ ebx - hexvar ] call hexvar add esp , num pop ebx ret
sub rsp , num cmp qword ptr [ rdi + hexvar ] , num je hexvar lea rsi , [ rip + hexvar ] call hexvar add rsp , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + hexvar ] , r8d mov qword ptr [ rsp + hexvar ] , rcx mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rsi mov r13 , rdi xor r14d , r14d lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] xor edi , edi call hexvar test eax , eax je hexvar mov r15d , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ebp , num lea r12 , [ rsp + hexvar ] lea rbx , [ rsp + hexvar ] nop mov rax , qword ptr [ rsp + hexvar ] shl rax , hexvar and rax , r13 cmp rax , num sbb r14d , - num mov edi , ebp mov rsi , r12 mov rdx , rbx call hexvar add ebp , num test eax , eax jne hexvar test r14d , r14d je hexvar mov eax , r15d cdq idiv r14d
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + hexvar ] , r8d mov qword ptr [ rsp + hexvar ] , rcx mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rsi mov r13 , rdi xor r14d , r14d lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] xor edi , edi call hexvar test eax , eax je hexvar mov r15d , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ebp , num lea r12 , [ rsp + hexvar ] lea rbx , [ rsp + hexvar ] nop mov rax , qword ptr [ rsp + hexvar ] shl rax , hexvar and rax , r13 cmp rax , num sbb r14d , - num mov edi , ebp mov rsi , r12 mov rdx , rbx call hexvar add ebp , num test eax , eax jne hexvar test r14d , r14d je hexvar mov eax , r15d cdq idiv r14d
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + num ] , r8d mov qword ptr [ rsp + hexvar ] , rcx mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rsi mov r12 , rdi mov r15d , dword ptr [ rsp + hexvar ] xor r14d , r14d lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] xor edi , edi call hexvar test eax , eax je hexvar xor r14d , r14d mov ebp , num lea r13 , [ rsp + hexvar ] lea rbx , [ rsp + hexvar ] nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsp + hexvar ] shl rax , hexvar and rax , r12 cmp rax , num sbb r14d , - num mov edi , ebp mov rsi , r13 mov rdx , rbx call hexvar add ebp , num test eax , eax jne hexvar mov eax , r15d cdq idiv r14d
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] shl eax , hexvar and eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar add dword ptr [ esp + hexvar ] , num add dword ptr [ esp + hexvar ] , num sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ esp + hexvar ] cdq idiv dword ptr [ esp + hexvar ]
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + hexvar ] , r8d mov qword ptr [ rsp + hexvar ] , rcx mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rsi mov r12 , rdi mov r15d , dword ptr [ rsp + hexvar ] xor r14d , r14d lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] xor edi , edi call hexvar test eax , eax je hexvar xor r14d , r14d mov ebp , num lea r13 , [ rsp + hexvar ] lea rbx , [ rsp + hexvar ] nop mov rax , qword ptr [ rsp + hexvar ] shl rax , hexvar and rax , r12 cmp rax , num sbb r14d , - num mov edi , ebp mov rsi , r13 mov rdx , rbx call hexvar add ebp , num test eax , eax jne hexvar mov eax , r15d cdq idiv r14d
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + hexvar ] , r8d mov qword ptr [ rsp + hexvar ] , rcx mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rsi mov r13 , rdi xor r14d , r14d lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] xor edi , edi call hexvar test eax , eax je hexvar mov r15d , dword ptr [ rsp + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + hexvar ] , rax mov ebp , num lea r12 , [ rsp + hexvar ] lea rbx , [ rsp + hexvar ] nop mov rax , qword ptr [ rsp + hexvar ] shl rax , hexvar and rax , r13 cmp rax , num sbb r14d , - num mov edi , ebp mov rsi , r12 mov rdx , rbx call hexvar add ebp , num test eax , eax jne hexvar test r14d , r14d je hexvar mov eax , r15d cdq idiv r14d
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + hexvar ] , r8d mov qword ptr [ rsp + hexvar ] , rcx mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rsi mov r12 , rdi mov r15d , dword ptr [ rsp + hexvar ] xor r14d , r14d lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] xor edi , edi call hexvar test eax , eax je hexvar xor r14d , r14d mov ebp , num lea r13 , [ rsp + hexvar ] lea rbx , [ rsp + hexvar ] nop mov rax , qword ptr [ rsp + hexvar ] shl rax , hexvar and rax , r12 cmp rax , num sbb r14d , - num mov edi , ebp mov rsi , r13 mov rdx , rbx call hexvar add ebp , num test eax , eax jne hexvar mov eax , r15d cdq idiv r14d
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + hexvar ] , r9 mov dword ptr [ rsp + hexvar ] , r8d mov qword ptr [ rsp + hexvar ] , rcx mov dword ptr [ rsp + hexvar ] , edx mov qword ptr [ rsp + hexvar ] , rsi mov qword ptr [ rsp + hexvar ] , rdi xor r12d , r12d lea rsi , [ rsp + hexvar ] lea rdx , [ rsp + hexvar ] xor edi , edi call hexvar test eax , eax je hexvar mov r14 , qword ptr [ rsp + hexvar ] xor r14 , hexvar xor r12d , r12d mov ebx , num lea r13 , [ rsp + hexvar ] lea rbp , [ rsp + hexvar ] nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] shl rax , hexvar and rax , r14 cmp rax , num sbb r12d , - num mov edi , ebx mov rsi , r13 mov rdx , rbp call hexvar add ebx , num test eax , eax jne hexvar mov ebx , dword ptr [ rsp + hexvar ] mov eax , ebx cdq idiv r12d
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] shl eax , hexvar and eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar add dword ptr [ esp + hexvar ] , num add dword ptr [ esp + hexvar ] , num sub esp , num lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] cdq idiv dword ptr [ esp + hexvar ]
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , num mov esi , num lea ebp , [ esp + hexvar ] lea eax , [ esp + hexvar ] mov dword ptr [ esp + num ] , eax sub esp , num push ebp push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] shl eax , hexvar and eax , dword ptr [ esp + num ] cmp eax , num sbb edi , - num add esi , num jmp hexvar mov dword ptr [ esp + hexvar ] , eax test edi , edi je hexvar mov eax , dword ptr [ esp + hexvar ] cdq idiv edi
ldrb r3 , [ r0 ] cmp r3 , num beq hexvar str lr , [ sp , - num ] ! mov ip , r1 b hexvar cmp r1 , hexvar and r3 , lr , hexvar bls hexvar cmp r2 , r3 bne hexvar ldrb r3 , [ r0 , num ] ! cmp r3 , num beq hexvar ldrb r2 , [ ip ] , num sub lr , r3 , hexvar cmp r2 , r3 sub r1 , r2 , hexvar beq hexvar cmp lr , hexvar and r1 , r1 , hexvar add lr , r3 , hexvar bls hexvar cmp r1 , hexvar bhi hexvar add r2 , r2 , hexvar and r2 , r2 , hexvar b hexvar ldrb r0 , [ ip ] clz r0 , r0 lsr r0 , r0 , num pop { pc }
jmp hexvar nop word ptr [ rax + rax ] add eax , hexvar cmp cl , hexvar jbe hexvar cmp dl , al jne hexvar add rdi , num add rsi , num movzx eax , byte ptr [ rdi ] test al , al je hexvar movzx edx , byte ptr [ rsi ] cmp dl , al je hexvar lea r8d , [ rax - hexvar ] lea ecx , [ rdx - hexvar ] cmp r8b , hexvar jbe hexvar cmp cl , hexvar ja hexvar add edx , hexvar jmp hexvar nop dword ptr [ rax ] xor eax , eax cmp byte ptr [ rsi ] , num sete al ret
lb v0 , ( a0 ) bnez v0 , hexvar nop b hexvar lb v0 , ( a1 ) bnez v1 , hexvar seb v0 , a3 bne a2 , v0 , hexvar nop lb v0 , ( a0 ) beqz v0 , hexvar addiu a1 , a1 , num lb a2 , ( a1 ) andi a3 , v0 , hexvar addiu a0 , a0 , num addiu t1 , a3 , - hexvar beq a2 , v0 , hexvar andi t0 , a2 , hexvar addiu v1 , t0 , - hexvar sltiu t1 , t1 , hexvar andi v1 , v1 , hexvar addiu a3 , a3 , hexvar addiu t0 , t0 , hexvar bnez t1 , hexvar sltiu v1 , v1 , hexvar beqz v1 , hexvar nop b hexvar seb a2 , t0 lb v0 , ( a1 ) jr ra sltiu v0 , v0 , num jr ra move v0 , zero
ldrb r3 , [ r0 ] cmp r3 , num movne ip , r1 bne hexvar ldrb r0 , [ r1 ] clz r0 , r0 lsr r0 , r0 , num bx lr mov r0 , num bx lr sub r1 , r2 , hexvar cmp r1 , hexvar bhi hexvar add r2 , r2 , hexvar and r2 , r2 , hexvar cmp r2 , r3 bne hexvar mov r1 , ip ldrb r3 , [ r0 , num ] ! cmp r3 , num beq hexvar ldrb r2 , [ ip ] , num cmp r2 , r3 beq hexvar sub r1 , r3 , hexvar cmp r1 , hexvar bhi hexvar add r3 , r3 , hexvar and r3 , r3 , hexvar sub r1 , r2 , hexvar cmp r1 , hexvar bhi hexvar b hexvar mov r0 , num bx lr
push ebp push edi push esi push ebx mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ ebp ] test al , al jne hexvar jmp hexvar lea esi , [ esi ] lea edi , [ edi ] mov ebx , esi add eax , hexvar cmp bl , hexvar jbe hexvar cmp dl , al jne hexvar add ebp , num movzx eax , byte ptr [ ebp ] add ecx , num test al , al je hexvar movzx edx , byte ptr [ ecx ] cmp dl , al je hexvar lea edi , [ eax - hexvar ] lea esi , [ edx - hexvar ] mov ebx , edi cmp bl , hexvar jbe hexvar mov ebx , esi cmp bl , hexvar ja hexvar add edx , hexvar jmp hexvar lea esi , [ esi ] xor eax , eax cmp byte ptr [ ecx ] , num pop ebx pop esi pop edi sete al pop ebp ret
push ebp push edi push esi push ebx mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ ebp ] test al , al jne hexvar cmp byte ptr [ ecx ] , num sete al movzx eax , al pop ebx pop esi pop edi pop ebp ret
jmp hexvar nop word ptr [ rax + rax ] add eax , hexvar cmp cl , hexvar jbe hexvar cmp dl , al jne hexvar add rdi , num add rsi , num movzx eax , byte ptr [ rdi ] test al , al je hexvar movzx edx , byte ptr [ rsi ] cmp dl , al je hexvar lea r8d , [ rax - hexvar ] lea ecx , [ rdx - hexvar ] cmp r8b , hexvar jbe hexvar cmp cl , hexvar ja hexvar add edx , hexvar jmp hexvar nop dword ptr [ rax ] xor eax , eax cmp byte ptr [ rsi ] , num sete al ret
lb v0 , ( a0 ) bnez v0 , hexvar nop b hexvar lb v0 , ( a1 ) bnez v1 , hexvar seb v0 , a3 bne a2 , v0 , hexvar nop lb v0 , ( a0 ) beqz v0 , hexvar addiu a1 , a1 , num lb a2 , ( a1 ) andi a3 , v0 , hexvar addiu a0 , a0 , num addiu t1 , a3 , - hexvar beq a2 , v0 , hexvar andi t0 , a2 , hexvar addiu v1 , t0 , - hexvar sltiu t1 , t1 , hexvar andi v1 , v1 , hexvar addiu a3 , a3 , hexvar addiu t0 , t0 , hexvar bnez t1 , hexvar sltiu v1 , v1 , hexvar beqz v1 , hexvar nop b hexvar seb a2 , t0 lb v0 , ( a1 ) jr ra sltiu v0 , v0 , num jr ra move v0 , zero
push ebp push edi push esi push ebx mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ ebp ] test al , al jne hexvar jmp hexvar lea esi , [ esi ] lea edi , [ edi ] mov ebx , esi add eax , hexvar cmp bl , hexvar jbe hexvar cmp dl , al jne hexvar add ebp , num movzx eax , byte ptr [ ebp ] add ecx , num test al , al je hexvar movzx edx , byte ptr [ ecx ] cmp dl , al je hexvar lea edi , [ eax - hexvar ] lea esi , [ edx - hexvar ] mov ebx , edi cmp bl , hexvar jbe hexvar mov ebx , esi cmp bl , hexvar ja hexvar add edx , hexvar jmp hexvar lea esi , [ esi ] xor eax , eax cmp byte ptr [ ecx ] , num pop ebx pop esi pop edi sete al pop ebp ret
lb v0 , ( a0 ) bnez v0 , hexvar nop b hexvar lb v0 , ( a1 ) bnez v1 , hexvar seb v0 , a3 bne a2 , v0 , hexvar nop lb v0 , ( a0 ) beqz v0 , hexvar addiu a1 , a1 , num lb a2 , ( a1 ) andi a3 , v0 , hexvar addiu a0 , a0 , num addiu t1 , a3 , - hexvar beq a2 , v0 , hexvar andi t0 , a2 , hexvar addiu v1 , t0 , - hexvar sltiu t1 , t1 , hexvar andi v1 , v1 , hexvar addiu a3 , a3 , hexvar addiu t0 , t0 , hexvar bnez t1 , hexvar sltiu v1 , v1 , hexvar beqz v1 , hexvar nop b hexvar seb a2 , t0 lb v0 , ( a1 ) jr ra sltiu v0 , v0 , num jr ra move v0 , zero
push rbp push rbx mov rbp , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdx , rdx je hexvar mov eax , dword ptr [ rdx + num ] mov rbx , rdx cmp eax , num jle hexvar mov dword ptr [ rbp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a2 , hexvar addiu v0 , zero , num move s2 , a1 lw v0 , num ( a2 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) beqz a2 , hexvar addiu v0 , zero , num lw v0 , num ( a2 )
push rbp push rbx mov rbp , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdx , rdx je hexvar mov eax , dword ptr [ rdx + num ] mov rbx , rdx cmp eax , num jle hexvar mov dword ptr [ rbp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx mov rbp , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdx , rdx je hexvar mov eax , dword ptr [ rdx + num ] mov rbx , rdx cmp eax , num jle hexvar mov dword ptr [ rbp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + num ] , num jg hexvar mov rax , qword ptr [ rbp - num ] cmp dword ptr [ rax + hexvar ] , hexvar jle hexvar mov rdi , qword ptr [ rbp - num ] call hexvar jmp hexvar xor eax , eax mov rcx , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rcx + num ] mov esi , eax sub esi , num sub edx , esi mov dword ptr [ rcx + num ] , edx mov rcx , qword ptr [ rbp - num ] mov edx , dword ptr [ rcx + hexvar ] mov esi , eax sub esi , edx mov edx , eax sub edx , num add esi , edx sub eax , esi mov dword ptr [ rcx + hexvar ] , eax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - num ] lea rdi , [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rdi mov rdi , qword ptr [ rbp - num ] mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar xor eax , eax mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rdx + hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov esi , dword ptr [ rcx + num ] sub eax , - num sub esi , eax mov dword ptr [ rcx + num ] , esi mov rcx , qword ptr [ rbp - num ] mov eax , dword ptr [ rcx + hexvar ] add eax , - num mov dword ptr [ rcx + hexvar ] , eax add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs r5 , r2 , num beq hexvar mov r6 , r1 ldr r3 , [ r5 , num ] cmp r3 , num ble hexvar mov r3 , num str r3 , [ r4 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push rbp push rbx mov rbp , rdi sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdx , rdx je hexvar mov eax , dword ptr [ rdx + num ] mov rbx , rdx cmp eax , num jle hexvar mov dword ptr [ rbp + hexvar ] , num mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add esi , hexvar mov ebp , eax mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , ecx mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edi xor edi , edi test ecx , ecx je hexvar mov eax , dword ptr [ ecx + num ] cmp eax , num jle hexvar mov dword ptr [ ebp + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) lw s2 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s2 ) sw v0 , hexvar ( sp ) beqz a2 , hexvar addiu v0 , zero , num lw v0 , num ( a2 )
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) lw v0 , ( fp ) lw v1 , ( v0 ) lw v0 , num ( fp ) lw v0 , ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , ebx mov eax , dword ptr [ eax ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ecx ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edx ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ esi ] cmp eax , dword ptr [ ecx ] sete al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp - hexvar ] cmp edx , dword ptr [ esi ] sete bl and bl , num movzx edx , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp - hexvar ] cmp edx , dword ptr [ esi ] sete bl and bl , num movzx edx , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) lw v0 , ( fp ) lw v1 , ( v0 )
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp - hexvar ] cmp edx , dword ptr [ esi ] sete bl and bl , num movzx edx , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx ] sete dl and dl , num movzx eax , dl add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ecx ] sete dl and dl , num movzx eax , dl add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] cmp rdx , rax sete al pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ ebp - hexvar ] cmp edx , dword ptr [ esi ] sete bl and bl , num movzx edx , bl mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor eax , eax mov edi , eax xor esi , esi mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rcx mov edx , hexvar call hexvar mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx ] , num mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor eax , eax mov edi , eax xor esi , esi mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rcx mov edx , hexvar call hexvar mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx ] , num mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx nop leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] test rdi , rdi setne al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num ] jmp rdi mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor eax , eax mov edi , eax xor esi , esi mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rcx mov edx , hexvar call hexvar mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx ] , num mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov edi , eax mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , num call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor eax , eax mov edi , eax xor esi , esi mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rcx mov edx , hexvar call hexvar mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx ] , num mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor eax , eax mov edi , eax xor esi , esi mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rcx mov edx , hexvar call hexvar mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx ] , num mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar xor esi , esi mov rax , qword ptr [ rbp - num ] mov rdi , rax mov edx , hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov edi , eax mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , num call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num je hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar xor eax , eax mov edi , eax xor esi , esi mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rcx mov edx , hexvar call hexvar mov rcx , qword ptr [ rbp - num ] mov dword ptr [ rcx ] , num mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax call hexvar mov rcx , qword ptr [ rbp - num ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi cmp qword ptr [ rbp - num ] , num jne hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov edx , hexvar mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov dword ptr [ rax ] , num mov edi , num call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov ecx , hexvar mov qword ptr [ rax + hexvar ] , rcx nop leave ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sp , sp , num ldr r3 , [ r0 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r4 , [ r3 ] cmp r4 , num beq hexvar mov r5 , r0 ldr r8 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r7 , [ pc , hexvar ] b hexvar mov r1 , r7 mov r0 , r6 bl hexvar b hexvar mov r1 , hexvar mov r0 , r6 bl hexvar b hexvar mov r1 , r8 mov r0 , r6 bl hexvar b hexvar ldr r3 , [ r5 , hexvar ] mvn r2 , num str r2 , [ r3 , hexvar ] mov r0 , sl bl hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar ldr r3 , [ r4 , num ] cmp r3 , num bne hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num bls hexvar add r3 , r3 , num ldr sb , [ r4 , r3 , lsl num ] ldr r3 , [ sb , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sb , hexvar ] tst r3 , hexvar beq hexvar ldr r3 , [ sb , hexvar ] tst r3 , hexvar beq hexvar ldr r3 , [ sb , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r5 , num ] ldr r1 , [ r3 , num ] ldr r3 , [ r5 , hexvar ] ldr r3 , [ r3 , hexvar ] mov r2 , num clz r1 , r1 lsr r1 , r1 , num ldr r0 , [ sb , hexvar ] blx r3 subs sl , r0 , num beq hexvar add r3 , sb , hexvar ldm r3 , { r2 , r3 } mov r1 , num str r1 , [ sp ] mov r0 , r5 bl hexvar cmp r0 , num bne hexvar mov r2 , r5 ldr r1 , [ sb , hexvar ] mov r0 , sl bl hexvar ldr r3 , [ sb , hexvar ] cmp r0 , r3 bne hexvar b hexvar add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } sub sp , sp , num ldr r3 , [ r0 , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r4 , [ r3 ] cmp r4 , num beq hexvar mov r5 , r0 ldr r8 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r7 , [ pc , hexvar ] b hexvar mov r1 , r7 mov r0 , r6 bl hexvar b hexvar mov r1 , hexvar mov r0 , r6 bl hexvar b hexvar mov r1 , r8 mov r0 , r6 bl hexvar b hexvar ldr r3 , [ r5 , hexvar ] mvn r2 , num str r2 , [ r3 , hexvar ] mov r0 , sl bl hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar ldr r3 , [ r4 , num ] cmp r3 , num bne hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num bls hexvar add r3 , r3 , num ldr sb , [ r4 , r3 , lsl num ] ldr r3 , [ sb , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sb , hexvar ] tst r3 , hexvar beq hexvar ldr r3 , [ sb , hexvar ] tst r3 , hexvar beq hexvar ldr r3 , [ sb , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ r5 , num ] ldr r1 , [ r3 , num ] ldr r3 , [ r5 , hexvar ] ldr r3 , [ r3 , hexvar ] mov r2 , num clz r1 , r1 lsr r1 , r1 , num ldr r0 , [ sb , hexvar ] blx r3 subs sl , r0 , num beq hexvar add r3 , sb , hexvar ldm r3 , { r2 , r3 } mov r1 , num str r1 , [ sp ] mov r0 , r5 bl hexvar cmp r0 , num bne hexvar mov r2 , r5 ldr r1 , [ sb , hexvar ] mov r0 , sl bl hexvar ldr r3 , [ sb , hexvar ] cmp r0 , r3 bne hexvar b hexvar add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax ] test esi , esi je hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar sub esp , num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar jmp hexvar sub esp , num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar jmp hexvar sub esp , num push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov esi , dword ptr [ esi ] test esi , esi je hexvar cmp dword ptr [ esi + num ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] cmp eax , num jbe hexvar mov edi , dword ptr [ esi + eax * num + hexvar ] cmp dword ptr [ edi + hexvar ] , num jne hexvar test byte ptr [ edi + hexvar ] , hexvar je hexvar test byte ptr [ edi + hexvar ] , hexvar je hexvar mov eax , dword ptr [ edi + hexvar ] or eax , dword ptr [ edi + hexvar ] je hexvar mov eax , dword ptr [ ebp + hexvar ] push num mov edx , dword ptr [ ebp + num ] cmp dword ptr [ edx + num ] , num sete dl movzx edx , dl push edx push dword ptr [ edi + hexvar ] push dword ptr [ edi + hexvar ] call dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar push num push dword ptr [ edi + hexvar ] push dword ptr [ edi + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax jne hexvar push ebp push dword ptr [ edi + hexvar ] push dword ptr [ edi + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar xor eax , dword ptr [ edi + hexvar ] xor edx , dword ptr [ edi + hexvar ] or edx , eax jne hexvar jmp hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push r13 push r12 push rbp push rbx mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r12 , rdi mov r13 , - num jmp hexvar nop mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + num ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , num jbe hexvar sub eax , num mov rbp , qword ptr [ rbx + rax * num + hexvar ] cmp qword ptr [ rbp + hexvar ] , num jne hexvar mov eax , dword ptr [ rbp + hexvar ] test eax , hexvar je hexvar test al , hexvar je hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ r12 + num ] xor esi , esi mov edx , num mov eax , dword ptr [ rax + hexvar ] test eax , eax mov rax , qword ptr [ r12 + hexvar ] sete sil call qword ptr [ rax + hexvar ] test rax , rax mov r14 , rax je hexvar mov rsi , qword ptr [ rbp + hexvar ] xor edx , edx mov rdi , r12 call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdx , r12 mov rdi , r14 call hexvar cmp rax , qword ptr [ rbp + hexvar ] je hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rax + hexvar ] , r13 mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 push r12 push rbp push rbx mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r12 , rdi mov r13 , - num jmp hexvar nop mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + num ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , num jbe hexvar sub eax , num mov rbp , qword ptr [ rbx + rax * num + hexvar ] cmp qword ptr [ rbp + hexvar ] , num jne hexvar mov eax , dword ptr [ rbp + hexvar ] test eax , hexvar je hexvar test al , hexvar je hexvar mov rdi , qword ptr [ rbp + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ r12 + num ] xor esi , esi mov edx , num mov eax , dword ptr [ rax + hexvar ] test eax , eax mov rax , qword ptr [ r12 + hexvar ] sete sil call qword ptr [ rax + hexvar ] test rax , rax mov r14 , rax je hexvar mov rsi , qword ptr [ rbp + hexvar ] xor edx , edx mov rdi , r12 call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdx , r12 mov rdi , r14 call hexvar cmp rax , qword ptr [ rbp + hexvar ] je hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rax + hexvar ] , r13 mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 push r12 push rbp mov rbp , rdi push rbx mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r13 , - num jmp hexvar nop mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + num ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , num jbe hexvar sub eax , num mov r12 , qword ptr [ rbx + rax * num + hexvar ] cmp qword ptr [ r12 + hexvar ] , num jne hexvar mov eax , dword ptr [ r12 + hexvar ] test eax , hexvar je hexvar test al , hexvar je hexvar mov rdi , qword ptr [ r12 + hexvar ] test rdi , rdi je hexvar mov rax , qword ptr [ rbp + num ] xor esi , esi mov edx , num mov eax , dword ptr [ rax + hexvar ] test eax , eax mov rax , qword ptr [ rbp + hexvar ] sete sil call qword ptr [ rax + hexvar ] test rax , rax mov r14 , rax je hexvar mov rsi , qword ptr [ r12 + hexvar ] xor edx , edx mov rdi , rbp call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ r12 + hexvar ] mov rdx , rbp mov rdi , r14 call hexvar cmp rax , qword ptr [ r12 + hexvar ] je hexvar nop word ptr [ rax + rax ] mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rax + hexvar ] , r13 mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar pop rbx mov rdi , rbp pop rbp pop r12 pop r13 pop r14 jmp hexvar nop lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov rdi , qword ptr [ r12 + hexvar ] jmp hexvar nop dword ptr [ rax + rax ] lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar jmp hexvar nop word ptr cs : [ rax + rax ] lea rdi , [ rip + hexvar ] mov esi , hexvar call hexvar mov eax , dword ptr [ r12 + hexvar ] jmp hexvar nop dword ptr [ rax + rax ]
ldr r3 , [ r0 , hexvar ] push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r3 , [ r3 , hexvar ] sub sp , sp , num ldr r4 , [ r3 ] cmp r4 , num beq hexvar mov r5 , r0 ldr r8 , [ pc , hexvar ] ldr r6 , [ pc , hexvar ] ldr r7 , [ pc , hexvar ] b hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar ldr r3 , [ r4 , num ] cmp r3 , num bne hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num bls hexvar add r3 , r3 , num ldr sb , [ r4 , r3 , lsl num ] ldr r3 , [ sb , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ sb , hexvar ] tst r3 , hexvar beq hexvar tst r3 , hexvar beq hexvar ldr r0 , [ sb , hexvar ] cmp r0 , num beq hexvar ldr r2 , [ r5 , num ] ldr r3 , [ r5 , hexvar ] ldr r1 , [ r2 , num ] ldr r3 , [ r3 , hexvar ] clz r1 , r1 mov r2 , num lsr r1 , r1 , num blx r3 subs sl , r0 , num beq hexvar add r3 , sb , hexvar ldm r3 , { r2 , r3 } mov r1 , num mov r0 , r5 str r1 , [ sp ] bl hexvar cmp r0 , num bne hexvar mov r2 , r5 ldr r1 , [ sb , hexvar ] mov r0 , sl bl hexvar ldr r3 , [ sb , hexvar ] cmp r0 , r3 beq hexvar mvn r2 , num ldr r3 , [ r5 , hexvar ] str r2 , [ r3 , hexvar ] mov r0 , sl bl hexvar ldr r4 , [ r4 ] cmp r4 , num bne hexvar add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push r14 push r13 push r12 push rbp push rbx mov rax , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rbx , qword ptr [ rax ] test rbx , rbx je hexvar mov r12 , rdi mov r13 , - num jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ r12 + hexvar ] mov qword ptr [ rax + hexvar ] , r13 mov rdi , r14 call hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx je hexvar cmp qword ptr [ rbx + num ] , num jne hexvar mov eax , dword ptr [ rbx + hexvar ] cmp eax , num jbe hexvar lea eax , [ rax - num ] mov rbp , qword ptr [ rbx + rax * num + hexvar ] cmp qword ptr [ rbp + hexvar ] , num jne hexvar test byte ptr [ rbp + hexvar ] , hexvar je hexvar test byte ptr [ rbp + hexvar ] , hexvar je hexvar cmp qword ptr [ rbp + hexvar ] , num je hexvar mov rax , qword ptr [ r12 + num ] cmp dword ptr [ rax + hexvar ] , num sete sil movzx esi , sil mov rdi , qword ptr [ rbp + hexvar ] mov rax , qword ptr [ r12 + hexvar ] mov edx , num call qword ptr [ rax + hexvar ] mov r14 , rax test rax , rax je hexvar mov rsi , qword ptr [ rbp + hexvar ] mov edx , num mov rdi , r12 call hexvar test eax , eax jne hexvar mov rsi , qword ptr [ rbp + hexvar ] mov rdx , r12 mov rdi , r14 call hexvar cmp rax , qword ptr [ rbp + hexvar ] jne hexvar jmp hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax ] test esi , esi je hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar nop lea esi , [ esi ] mov esi , dword ptr [ esi ] test esi , esi je hexvar cmp dword ptr [ esi + num ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] cmp eax , num jbe hexvar mov edi , dword ptr [ esi + eax * num + hexvar ] mov edx , dword ptr [ edi + hexvar ] test edx , edx jne hexvar mov eax , dword ptr [ edi + hexvar ] test eax , hexvar je hexvar test al , hexvar je hexvar mov edx , dword ptr [ edi + hexvar ] mov eax , dword ptr [ edi + hexvar ] mov ecx , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , ecx or ecx , eax je hexvar mov eax , dword ptr [ ebp + num ] push num mov eax , dword ptr [ eax + num ] test eax , eax sete al movzx eax , al push eax mov eax , dword ptr [ ebp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax mov ecx , eax je hexvar mov dword ptr [ esp + num ] , eax push num push dword ptr [ edi + hexvar ] push dword ptr [ edi + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax mov ecx , dword ptr [ esp + num ] jne hexvar push ebp push dword ptr [ edi + hexvar ] push dword ptr [ edi + hexvar ] push ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar xor eax , dword ptr [ edi + hexvar ] xor edx , dword ptr [ edi + hexvar ] add esp , hexvar mov ecx , dword ptr [ esp + num ] or edx , eax je hexvar nop mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar sub esp , hexvar push ecx call hexvar mov esi , dword ptr [ esi ] add esp , hexvar test esi , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax ] test esi , esi je hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ esp + num ] , eax jmp hexvar nop lea esi , [ esi ] mov esi , dword ptr [ esi ] test esi , esi je hexvar cmp dword ptr [ esi + num ] , num jne hexvar mov eax , dword ptr [ esi + hexvar ] cmp eax , num jbe hexvar mov edi , dword ptr [ esi + eax * num + hexvar ] mov edx , dword ptr [ edi + hexvar ] test edx , edx jne hexvar mov eax , dword ptr [ edi + hexvar ] test eax , hexvar je hexvar test al , hexvar je hexvar mov edx , dword ptr [ edi + hexvar ] mov eax , dword ptr [ edi + hexvar ] mov ecx , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , ecx or ecx , eax je hexvar mov eax , dword ptr [ ebp + num ] push num mov eax , dword ptr [ eax + num ] test eax , eax sete al movzx eax , al push eax mov eax , dword ptr [ ebp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call dword ptr [ eax + hexvar ] add esp , hexvar test eax , eax mov ecx , eax je hexvar mov dword ptr [ esp + num ] , eax push num push dword ptr [ edi + hexvar ] push dword ptr [ edi + hexvar ] push ebp call hexvar add esp , hexvar test eax , eax mov ecx , dword ptr [ esp + num ] jne hexvar push ebp push dword ptr [ edi + hexvar ] push dword ptr [ edi + hexvar ] push ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar xor eax , dword ptr [ edi + hexvar ] xor edx , dword ptr [ edi + hexvar ] add esp , hexvar mov ecx , dword ptr [ esp + num ] or edx , eax je hexvar nop mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , hexvar sub esp , hexvar push ecx call hexvar mov esi , dword ptr [ esi ] add esp , hexvar test esi , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a2 , zero sw s1 , hexvar ( sp ) move a1 , zero sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu a0 , a0 , hexvar sw gp , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) lw a3 , - hexvar ( gp ) sw s1 , hexvar ( sp ) sw zero , ( s0 ) sw zero , num ( s0 ) bal hexvar sw zero , num ( s0 ) addiu a0 , s0 , hexvar lw gp , hexvar ( sp ) move a2 , zero move a1 , zero lw t9 , - hexvar ( gp ) lw a3 , - hexvar ( gp ) bal hexvar sw s1 , hexvar ( sp ) addiu a0 , s0 , hexvar lw gp , hexvar ( sp ) move a2 , zero move a1 , zero lw t9 , - hexvar ( gp ) lw a3 , - hexvar ( gp ) bal hexvar sw s1 , hexvar ( sp ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ ebx + hexvar ] lea eax , [ esi + hexvar ] mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + num ] , num push ebp push edi push num push num push eax call hexvar lea eax , [ esi + hexvar ] add esp , hexvar add esi , hexvar push ebp push edi push num push num push eax call hexvar add esp , hexvar push ebp push edi push num push num push esi call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw zero , ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + num ] , num mov ebp , dword ptr [ ebx + hexvar ] push ebp mov edi , dword ptr [ ebx + hexvar ] push edi push num push num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar push ebp push edi push num push num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar push ebp push edi push num push num add esi , hexvar push esi call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ edx + num ] , num mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar xor ecx , ecx mov edx , dword ptr [ ebp + num ] add edx , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + num ] , num mov ebp , dword ptr [ ebx + hexvar ] push ebp mov edi , dword ptr [ ebx + hexvar ] push edi push num push num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar push ebp push edi push num push num lea eax , [ esi + hexvar ] push eax call hexvar add esp , hexvar push ebp push edi push num push num add esi , hexvar push esi call hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 sw zero , ( a0 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax xor eax , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , edx mov esi , dword ptr [ ecx ] mov dword ptr [ esi ] , num mov esi , dword ptr [ ecx ] mov dword ptr [ esi + num ] , num mov esi , dword ptr [ ecx ] mov dword ptr [ esi + num ] , num mov esi , dword ptr [ ecx ] add esi , hexvar sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] add esi , hexvar sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar xor ecx , ecx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] add esi , hexvar sub esp , hexvar mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi lea esi , [ hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax lea esp , [ ebp - num ] pop esi pop ebp ret
orr ip , r1 , r2 cmp ip , hexvar movlo r3 , num movhs r3 , num cmp r2 , num moveq r3 , num cmp r3 , num push { r4 , r5 , r6 , lr } bne hexvar mul r4 , r2 , r1 cmp r4 , num blt hexvar ldr r0 , [ r0 , hexvar ] beq hexvar add r1 , r4 , num bics r1 , r1 , num bne hexvar bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r2 , r4 mov r1 , num mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] or rdx , rsi shr rdx , hexvar test rdx , rdx setne al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor edx , edx mov rsi , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , rsi div rcx mov rcx , qword ptr [ rbp - hexvar ] sub rcx , rax seta dil movzx r8d , dil mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] imul rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne dl movzx r8d , dl mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] xor esi , esi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar lui gp , hexvar lw v0 , hexvar ( sp ) addiu gp , gp , - hexvar lw v1 , hexvar ( sp ) sw ra , hexvar ( sp ) or a1 , a2 , v0 sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) or a1 , v0 , v1 bnez a1 , hexvar nop multu a3 , v1 mflo t1 mfhi t0 mult v0 , a3 madd a2 , v1 move a3 , t1 move s0 , t1 mflo a2 jal hexvar addu a2 , a2 , t0 lw gp , hexvar ( sp ) beqz v0 , hexvar move v1 , v0 lw t9 , - hexvar ( gp ) move a1 , zero move a2 , s0 jalr t9 move a0 , v0 move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bnez a2 , hexvar nop beqz v0 , hexvar multu a3 , v1 move t2 , v0 move a1 , a3 multu a1 , t2 mflo t3 mfhi t2 multu a3 , v1 mfhi t0 addu a1 , t0 , t3 sltu a1 , a1 , t3 addu a1 , a1 , t2 beqz a1 , hexvar mflo t1 lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num b hexvar move v1 , zero bnez v0 , hexvar move t2 , a2 b hexvar move a1 , v1
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] or rdx , qword ptr [ rbp - hexvar ] movabs rsi , hexvar cmp rdx , rsi jb hexvar cmp qword ptr [ rbp - hexvar ] , num setne al mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , rcx xor edx , edx div qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax seta sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar xor esi , esi mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , ecx or eax , edi je hexvar mov eax , esi or eax , edi je hexvar test ecx , ecx jne hexvar test edi , edi jne hexvar imul edi , ebp mov eax , ebp imul ecx , esi mul esi add ecx , edi add ecx , edx mov ebp , eax test ecx , ecx jne hexvar test eax , eax js hexvar mov eax , dword ptr [ esp + hexvar ] test ebp , ebp mov edx , dword ptr [ eax + hexvar ] je hexvar lea eax , [ ebp + num ] and eax , hexvar jne hexvar sub esp , num push eax push edx call hexvar mov esi , eax add esp , hexvar test esi , esi je hexvar sub esp , num push ebp push num push esi call hexvar add esp , hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] or rdx , rsi shr rdx , hexvar test rdx , rdx setne al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor edx , edx mov rsi , - num mov qword ptr [ rbp - hexvar ] , rax mov rax , rsi div rcx mov rcx , qword ptr [ rbp - hexvar ] sub rcx , rax seta dil movzx r8d , dil mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp rax mov edi , num call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] imul rcx , rax mov qword ptr [ rbp - hexvar ] , rcx mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne dl movzx r8d , dl mov eax , r8d mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] xor esi , esi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , lr } orr ip , r1 , r2 cmp ip , hexvar movlo r3 , num movhs r3 , num cmp r2 , num moveq r3 , num cmp r3 , num bne hexvar mul r4 , r2 , r1 mov r1 , r4 bl hexvar subs r5 , r0 , num beq hexvar mov r2 , r4 mov r1 , num mov r0 , r5 bl hexvar mov r0 , r5 pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar lui gp , hexvar lw v0 , hexvar ( sp ) addiu gp , gp , - hexvar lw v1 , hexvar ( sp ) sw ra , hexvar ( sp ) or a1 , a2 , v0 sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) or a1 , v0 , v1 bnez a1 , hexvar nop multu a3 , v1 mflo t1 mfhi t0 mult v0 , a3 madd a2 , v1 move a3 , t1 move s0 , t1 mflo a2 jal hexvar addu a2 , a2 , t0 lw gp , hexvar ( sp ) beqz v0 , hexvar move v1 , v0 lw t9 , - hexvar ( gp ) move a1 , zero move a2 , s0 jalr t9 move a0 , v0 move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bnez a2 , hexvar nop beqz v0 , hexvar multu a3 , v1 move t2 , v0 move a1 , a3 multu a1 , t2 mflo t3 mfhi t2 multu a3 , v1 mfhi t0 addu a1 , t0 , t3 sltu a1 , a1 , t3 addu a1 , a1 , t2 beqz a1 , hexvar mflo t1 lw t9 , - hexvar ( gp ) bal hexvar addiu a0 , zero , num b hexvar move v1 , zero bnez v0 , hexvar move t2 , a2 b hexvar move a1 , v1
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] or rax , qword ptr [ rbp - hexvar ] mov rdx , rax mov eax , hexvar cmp rdx , rax jbe hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov ecx , num mov rax , qword ptr [ rbp - hexvar ] mul qword ptr [ rbp - hexvar ] jno hexvar mov ecx , num mov rax , rcx test rax , rax je hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , esi or eax , edi je hexvar mov eax , ecx or eax , edi je hexvar test esi , esi jne hexvar test edi , edi jne hexvar mov eax , ebp sub esp , num mul ecx imul edi , ebp mov ebp , edx imul esi , ecx add esi , edi mov edi , eax add ebp , esi push ebp push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push edi push num push eax call hexvar add esp , hexvar add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r1 , r3 ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar sub r4 , fp , hexvar ldm r4 , { r3 , r4 } ldr r2 , [ fp , - hexvar ] stm r2 , { r3 , r4 } sub r4 , fp , hexvar ldm r4 , { r3 , r4 } ldr r2 , [ fp , - hexvar ] str r3 , [ r2 , num ] str r4 , [ r2 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi sub esp , hexvar lea edi , [ hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar cmp eax , num setne bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] movsd qword ptr [ edx ] , xmm0 movsd xmm0 , qword ptr [ eax ] mov edx , dword ptr [ ecx ] movsd qword ptr [ edx + num ] , xmm0 mov edx , dword ptr [ ecx ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , lr } ldr r5 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r5 ] mov r4 , r0 mov r1 , sp ldr r0 , [ pc , hexvar ] str r3 , [ sp , hexvar ] bl hexvar cmp r0 , num bne hexvar add r1 , sp , hexvar ldm r1 , { r0 , r1 } ldm sp , { r2 , r3 } stm r4 , { r0 , r1 } mov r0 , r4 str r2 , [ r4 , num ] str r3 , [ r4 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r5 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rdx , rsp mov esi , hexvar mov edi , num call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rsp ] mov qword ptr [ rbx + num ] , rax mov rax , rbx jmp hexvar mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r1 , r3 ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar sub r4 , fp , hexvar ldm r4 , { r3 , r4 } ldr r2 , [ fp , - hexvar ] stm r2 , { r3 , r4 } sub r4 , fp , hexvar ldm r4 , { r3 , r4 } ldr r2 , [ fp , - hexvar ] str r3 , [ r2 , num ] str r4 , [ r2 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] movsd qword ptr [ eax ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] movsd qword ptr [ eax + num ] , xmm0 mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx lea ecx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar movsd xmm0 , qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] movsd qword ptr [ eax ] , xmm0 movsd xmm0 , qword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] movsd qword ptr [ eax + num ] , xmm0 mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] cmp dword ptr [ hexvar ] , num mov dword ptr [ ebp - hexvar ] , eax jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al lea eax , [ hexvar ] mov dword ptr [ hexvar ] , num mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , edi sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ecx ] movsd qword ptr [ edx ] , xmm0 movsd xmm0 , qword ptr [ eax ] mov edx , dword ptr [ ecx ] movsd qword ptr [ edx + num ] , xmm0 mov edx , dword ptr [ ecx ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , edx mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi ] , eax mov dword ptr [ esi + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax mov dword ptr [ esi + hexvar ] , edx mov eax , esi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r3 , fp , hexvar mov r1 , r3 ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar mov r3 , num b hexvar sub r4 , fp , hexvar ldm r4 , { r3 , r4 } ldr r2 , [ fp , - hexvar ] stm r2 , { r3 , r4 } sub r4 , fp , hexvar ldm r4 , { r3 , r4 } ldr r2 , [ fp , - hexvar ] str r3 , [ r2 , num ] str r4 , [ r2 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc }
cmp di , hexvar ja hexvar movzx ecx , di lea rax , [ rip + hexvar ] movsxd rcx , dword ptr [ rax + rcx * num ] add rcx , rax jmp rcx mov eax , num ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar cmp ax , hexvar ja hexvar movzx edx , ax mov esi , ebx add esi , dword ptr [ ebx + edx * num - hexvar ] jmp esi
cmp di , hexvar ja hexvar movzx ecx , di lea rax , [ rip + hexvar ] movsxd rcx , dword ptr [ rax + rcx * num ] add rcx , rax jmp rcx mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move v0 , a0 sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sh v0 , hexvar ( fp ) lhu v0 , hexvar ( fp ) sltiu v1 , v0 , hexvar beqz v1 , hexvar nop sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) jr v0 nop addiu v0 , zero , num b hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num b hexvar nop move v0 , zero b hexvar nop lhu v0 , hexvar ( fp ) move a1 , v0 lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) addiu v0 , zero , hexvar move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
cmp di , hexvar ja hexvar movzx ecx , di lea rax , [ rip + hexvar ] movsxd rcx , dword ptr [ rax + rcx * num ] add rcx , rax jmp rcx mov eax , num ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov word ptr [ ebp - hexvar ] , dx movzx edx , word ptr [ ebp - hexvar ] cmp edx , hexvar ja hexvar shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sltiu v0 , a0 , hexvar beqz v0 , hexvar sw gp , hexvar ( sp ) sll v0 , a0 , num lui v1 , hexvar addiu v1 , v1 , hexvar addu v1 , v1 , v0 lw v0 , ( v1 ) jr v0 nop b hexvar addiu v0 , zero , num b hexvar sll v0 , a2 , num b hexvar move v0 , zero move a1 , a0 lui a0 , hexvar addiu a0 , a0 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar addiu v0 , zero , hexvar addiu v0 , zero , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move v0 , a0 sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sh v0 , hexvar ( fp ) lhu v0 , hexvar ( fp ) sltiu v1 , v0 , hexvar beqz v1 , hexvar nop sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v1 , v0 lw v0 , ( v0 ) jr v0 nop addiu v0 , zero , num b hexvar nop addiu v0 , zero , num b hexvar nop lw v0 , hexvar ( fp ) sll v0 , v0 , num b hexvar nop move v0 , zero b hexvar nop lhu v0 , hexvar ( fp ) move a1 , v0 lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) addiu v0 , zero , hexvar move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push esi push ebx sub esp , num call hexvar add ebx , hexvar cmp ax , hexvar ja hexvar movzx edx , ax mov esi , ebx add esi , dword ptr [ ebx + edx * num - hexvar ] jmp esi
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov word ptr [ ebp - hexvar ] , dx movzx edx , word ptr [ ebp - hexvar ] cmp edx , hexvar ja hexvar shl edx , num mov edx , dword ptr [ edx + eax - hexvar ] add edx , eax jmp edx
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov dword ptr [ rbp - hexvar ] , esi mov edx , dword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push num push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar sub esp , num push dword ptr [ ebp + hexvar ] push num push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num pop rcx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw gp , hexvar ( sp ) addiu a0 , zero , hexvar sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , s0 , - hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) sw zero , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 sw zero , ( v0 )
push rbx sub rsp , hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + num ] , rax mov ecx , hexvar mov ebx , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp + num ] mov qword ptr [ rax + hexvar ] , num mov ecx , hexvar mov rax , qword ptr [ rsp + num ] nop word ptr cs : [ rax + rax ] nop cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , ebx jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , hexvar pop rbx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] add esp , hexvar pop ebx ret
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 sw zero , ( v0 )
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num pop rcx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s0 , hexvar ( sp ) lui s0 , hexvar sw gp , hexvar ( sp ) addiu a0 , zero , hexvar sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , s0 , - hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) sw zero , ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) sw zero , ( v0 ) lw v0 , hexvar ( sp ) sw zero , num ( v0 ) lw v0 , hexvar ( sp ) sw zero , num ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jl hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx cmp eax , num mov eax , num cmovne eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jl hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx cmp eax , num mov eax , num cmovne eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jns hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar test eax , eax sete al movzx eax , al jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax jns hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax sete al movzx eax , al add esp , num pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jl hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx cmp eax , num mov eax , num cmovne eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar move a0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar sltiu v0 , v0 , num
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar test eax , eax jns hexvar sub esp , hexvar push esi call hexvar add esp , hexvar test eax , eax sete al movzx eax , al add esp , num pop ebx pop esi ret
push rbx mov ebx , edi call hexvar test eax , eax jns hexvar mov edi , ebx call hexvar test eax , eax sete al movzx eax , al pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar move a0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar sltiu v0 , v0 , num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar move a0 , s0 lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar sltiu v0 , v0 , num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx mov dl , num mov byte ptr [ ebp - hexvar ] , dl jne hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] sub r0 , fp , hexvar str r3 , [ sp ] mvn r3 , num ldr r2 , [ fp , - hexvar ] mov r1 , num bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r2 , [ r3 ] ldrb r3 , [ fp , - hexvar ] cmp r2 , r3 bne hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] cmp r3 , r2 beq hexvar mov r3 , num b hexvar mov r3 , num and r3 , r3 , num and r3 , r3 , hexvar mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s2 , hexvar ( sp ) addiu a3 , zero , - num lw s2 , - hexvar ( gp ) addiu a1 , zero , num lw v1 , - hexvar ( v0 ) lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) addiu a0 , sp , hexvar sw gp , hexvar ( sp ) move a2 , s1 sw ra , hexvar ( sp ) lw v0 , ( s2 ) sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) bal hexvar nop move s0 , v0 lb v1 , ( s1 ) lb v0 , hexvar ( sp ) beq v1 , v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num lw a0 , hexvar ( sp ) lw v1 , ( s2 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , s1 xor v0 , v0 , s0 lw gp , hexvar ( sp ) b hexvar sltu v0 , zero , v0 lw t9 , - hexvar ( gp )
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp - hexvar ] cmp eax , ecx mov bl , num mov byte ptr [ ebp - hexvar ] , bl jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar cmp eax , dword ptr [ ebp - hexvar ] setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rbp - num ] mov r8 , qword ptr [ hexvar ] mov rdi , rax mov esi , num mov rcx , - num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] movsx r9d , byte ptr [ rax ] movsx r10d , byte ptr [ rbp - hexvar ] cmp r9d , r10d mov r11b , num mov byte ptr [ rbp - hexvar ] , r11b jne hexvar mov rdi , qword ptr [ rbp - num ] call hexvar cmp rax , qword ptr [ rbp - hexvar ] setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] movsx ecx , byte ptr [ ebp - hexvar ] cmp eax , ecx mov bl , num mov byte ptr [ ebp - hexvar ] , bl jne hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar cmp eax , dword ptr [ ebp - hexvar ] setne dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar lea rax , [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rdi mov rdx , qword ptr [ rbp - num ] mov r8 , qword ptr [ hexvar ] mov rdi , rax mov esi , num mov rcx , - num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] movsx r9d , byte ptr [ rax ] movsx r10d , byte ptr [ rbp - hexvar ] cmp r9d , r10d mov r11b , num mov byte ptr [ rbp - hexvar ] , r11b jne hexvar mov rdi , qword ptr [ rbp - num ] call hexvar cmp rax , qword ptr [ rbp - hexvar ] setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] movsx eax , byte ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax movsx eax , byte ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar cmp eax , dword ptr [ ebp - hexvar ] setne dl mov dword ptr [ ebp - hexvar ] , hexvar and dl , num mov byte ptr [ ebp - hexvar ] , dl jmp hexvar mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax lea rdi , [ rsp + num ] mov r8 , qword ptr [ rip + hexvar ] mov rcx , - num mov rdx , rbx mov esi , num call hexvar mov rdx , rax mov eax , num movzx esi , byte ptr [ rsp + num ] cmp byte ptr [ rbx ] , sil je hexvar and eax , num mov rcx , qword ptr [ rsp + num ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax push - num push dword ptr [ ebp - hexvar ] push num lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax ] movzx eax , byte ptr [ ebp - hexvar ] cmp dl , al jne hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar cmp dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , num jmp hexvar mov eax , num and eax , num mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp ) sw v1 , ( v0 ) addiu v1 , zero , num sw v1 , num ( v0 ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) sb zero , hexvar ( v0 ) sb zero , hexvar ( v0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb v1 , hexvar ( v0 ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
sub rsp , num call hexvar mov qword ptr [ rax ] , hexvar mov dword ptr [ rax + hexvar ] , num mov dword ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov eax , num add rsp , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb v1 , hexvar ( v0 ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move v1 , v0 lw ra , hexvar ( sp ) addiu v0 , zero , num sb zero , hexvar ( v1 ) sw v0 , num ( v1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) sw v1 , ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , num ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb zero , hexvar ( v0 ) lw v0 , hexvar ( fp ) lbu v1 , hexvar ( v0 ) lw v0 , hexvar ( fp ) sb v1 , hexvar ( v0 ) addiu v0 , zero , num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov eax , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ecx ] lea edx , [ hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ecx ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ecx ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ecx ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ecx ] mov byte ptr [ eax + hexvar ] , num mov al , num and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov bl , num and bl , num movzx eax , bl add esp , hexvar pop esi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , esp add esi , - hexvar mov esp , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov eax , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ ebp - hexvar ] , esi call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ecx ] lea edx , [ hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ecx ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ ecx ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ ecx ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ecx ] mov byte ptr [ eax + hexvar ] , num mov al , num and al , num movzx eax , al lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ ebp - num ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ ebp - hexvar ] sub edx , num imul edx , edx , hexvar add ecx , edx mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ hexvar ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx jae hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] xor edx , edx mov ecx , dword ptr [ ebp - hexvar ] div ecx
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , num xor eax , eax mov edi , eax mov dword ptr [ rbp - hexvar ] , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] lea rcx , [ rcx + rcx * num ] lea rax , [ rax + rcx * num - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov edx , dword ptr [ rbp - hexvar ] mov esi , edx call hexvar mov qword ptr [ rbp - num ] , num mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rip + hexvar ] sub rax , rcx setb dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] xor edx , edx div rcx
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ ebp - num ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num imul ecx , ecx , hexvar add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp - num ] xor edx , edx div dword ptr [ ebp - hexvar ]
push ebp mov ebp , esp push esi sub esp , hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add ecx , hexvar sub ecx , num sub ecx , hexvar imul ecx , ecx , hexvar add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp - num ] xor edx , edx div dword ptr [ ebp - hexvar ]
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ ebp - num ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num imul ecx , ecx , hexvar add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp - num ] xor edx , edx div dword ptr [ ebp - hexvar ]
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ ebp - num ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num imul ecx , ecx , hexvar add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp - num ] xor edx , edx div dword ptr [ ebp - hexvar ]
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ ebp - num ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num imul ecx , ecx , hexvar add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp - num ] xor edx , edx div dword ptr [ ebp - hexvar ]
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ ebp - num ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num imul ecx , ecx , hexvar add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp - num ] xor edx , edx div dword ptr [ ebp - hexvar ]
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ ebp - num ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num imul ecx , ecx , hexvar add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] jae hexvar mov eax , dword ptr [ ebp - num ] xor edx , edx div dword ptr [ ebp - hexvar ]
push ebp mov ebp , esp sub esp , hexvar xor eax , eax mov dword ptr [ ebp - num ] , num mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num imul ecx , ecx , hexvar add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ hexvar ] setb cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] xor edx , edx div dword ptr [ ebp - hexvar ]
push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edx , edx je hexvar mov dword ptr [ esp + num ] , esi mov esi , dword ptr [ ecx + hexvar ] mov edi , dword ptr [ ecx + hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi mov esi , dword ptr [ ecx ] mov edi , dword ptr [ ecx + num ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi sub esp , num lea eax , [ esp + hexvar ] push eax push edx call hexvar add esp , hexvar test eax , eax setne al mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move v1 , a1 lw t1 , hexvar ( a2 )
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp - hexvar ] , num sete bl mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ eax + hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ eax ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , num setne dl xor dl , hexvar xor dl , hexvar and dl , num mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar move v1 , a1 lw t1 , hexvar ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test rax , rax setne al mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov byte ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov rsi , rax call hexvar cmp rax , num setne cl xor cl , hexvar mov dl , cl xor dl , hexvar and dl , num mov r8b , num xor r8b , num and cl , r8b or dl , cl and dl , num mov byte ptr [ rbp - num ] , dl mov al , byte ptr [ rbp - num ] and al , num movzx eax , al add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) sw a1 , hexvar ( sp ) lw v1 , hexvar ( a2 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ eax + hexvar ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp + hexvar ] movsd xmm0 , qword ptr [ eax ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar cmp eax , num setne dl xor dl , hexvar xor dl , hexvar and dl , num mov byte ptr [ ebp - num ] , dl mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) sw a1 , hexvar ( sp ) lw v1 , hexvar ( a2 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] sub esi , ebx sbb edi , edx setae dl movzx ebx , dl mov ebx , dword ptr [ ebx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi jmp ebx mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] sub esi , ebx sbb edi , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi jb hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] sub esi , ebx sbb edi , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi jb hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] sub esi , ebx sbb edi , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi jb hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] sub esi , ebx sbb edi , edx setae dl movzx ebx , dl mov ebx , dword ptr [ ebx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi jmp ebx mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov esi , dword ptr [ ebp - hexvar ] mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx + hexvar ] , edi mov dword ptr [ edx + num ] , esi mov edx , dword ptr [ ebp - hexvar ] movsd xmm0 , qword ptr [ edx ] movsd qword ptr [ ebp - hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] sub eax , edx sbb ecx , esi mov edx , hexvar mov esi , hexvar cmovae esi , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] sub esi , ebx sbb edi , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi jb hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) lw v0 , num ( fp ) lw a1 , hexvar ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ edx ] mov edx , dword ptr [ edx + num ] sub esi , ebx sbb edi , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi jb hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , num ( fp ) lw v0 , num ( fp ) lw a1 , hexvar ( v0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp + hexvar ] , num je hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] jmp hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar cmp dword ptr [ ebp - hexvar ] , hexvar jbe hexvar cmp dword ptr [ ebp - hexvar ] , hexvar ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call eax add esp , hexvar jmp hexvar mov edx , dword ptr [ ebp - hexvar ] cmp edx , num je hexvar cmp edx , num je hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax + num ] mov ebx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] cmp ebx , edx jb hexvar cmp ebx , edx ja hexvar cmp ecx , eax jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num sete al movzx eax , al jmp hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar nop mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
mov rax , qword ptr [ rsi + num ] test rdx , rdx mov r8 , rcx cmovne r8 , rdx mov r8d , dword ptr [ r8 ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar lea r9d , [ r8 + hexvar ] cmp r9d , hexvar ja hexvar jmp rax nop word ptr cs : [ rax + rax ] cmp r8d , num je hexvar cmp r8d , num jne hexvar xor eax , eax test rdx , rdx sete al ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar cmp dword ptr [ rbp - hexvar ] , hexvar jbe hexvar cmp dword ptr [ rbp - hexvar ] , hexvar ja hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] call rax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar cmp eax , num je hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] cmp rdx , rax jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + num ] , rdx mov eax , num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num sete al movzx eax , al jmp hexvar lea rdx , [ rip + hexvar ] mov esi , hexvar lea rdi , [ rip + hexvar ] call hexvar nop mov eax , num leave ret
push ebp push edi mov edi , ecx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ edx + num ] test ecx , ecx cmove edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esi + hexvar ] mov edi , dword ptr [ edi ] mov esi , dword ptr [ esi + hexvar ] test esi , esi je hexvar lea ebp , [ edi + hexvar ] cmp ebp , hexvar ja hexvar push dword ptr [ esp + hexvar ] push ecx push edx push eax call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , num ( a1 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp + hexvar ] , num je hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] jmp hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar cmp dword ptr [ ebp - hexvar ] , hexvar jbe hexvar cmp dword ptr [ ebp - hexvar ] , hexvar ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call eax add esp , hexvar jmp hexvar mov edx , dword ptr [ ebp - hexvar ] cmp edx , num je hexvar cmp edx , num je hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax + num ] mov ebx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] cmp ebx , edx jb hexvar cmp ebx , edx ja hexvar cmp ecx , eax jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num sete al movzx eax , al jmp hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push hexvar lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar nop mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx + num ] mov esi , dword ptr [ esi + hexvar ] test ebx , ebx mov edi , ebx cmove edi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ edi ] mov esi , dword ptr [ esi + hexvar ] test esi , esi je hexvar lea ebp , [ edi + hexvar ] cmp ebp , hexvar ja hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] push ebx push ecx push edx push eax call esi add esp , hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
mov rax , qword ptr [ rsi + num ] test rdx , rdx mov r8 , rcx cmovne r8 , rdx mov r8d , dword ptr [ r8 ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar lea r9d , [ r8 + hexvar ] cmp r9d , hexvar ja hexvar jmp rax nop word ptr cs : [ rax + rax ] cmp r8d , num je hexvar cmp r8d , num jne hexvar xor eax , eax test rdx , rdx sete al ret
sub rsp , num mov rax , qword ptr [ rsi + num ] mov rax , qword ptr [ rax + hexvar ] test rdx , rdx mov r8 , rcx cmovne r8 , rdx mov r8d , dword ptr [ r8 ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar lea r9d , [ r8 + hexvar ] cmp r9d , hexvar ja hexvar call rax add rsp , num ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx + num ] mov edx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - hexvar ] , edx cmp dword ptr [ ebp + hexvar ] , num je hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] jmp hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + hexvar ] test edx , edx je hexvar cmp dword ptr [ ebp - hexvar ] , hexvar jbe hexvar cmp dword ptr [ ebp - hexvar ] , hexvar ja hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] sub esp , hexvar push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call eax add esp , hexvar jmp hexvar mov edx , dword ptr [ ebp - hexvar ] cmp edx , num je hexvar cmp edx , num je hexvar jmp hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar cmp dword ptr [ ebp + hexvar ] , num je hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax + num ] mov ebx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] cmp ebx , edx jb hexvar cmp ebx , edx ja hexvar cmp ecx , eax jbe hexvar mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , num jmp hexvar cmp dword ptr [ ebp + hexvar ] , num sete al movzx eax , al jmp hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push hexvar lea eax , [ eax - hexvar ] push eax call hexvar nop mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
cmp edi , num ja hexvar mov eax , edi jmp qword ptr [ rax * num + hexvar ] mov eax , dword ptr [ rip + hexvar ] ret
cmp edi , num ja hexvar mov eax , edi jmp qword ptr [ rax * num + hexvar ] mov eax , dword ptr [ rip + hexvar ] ret
beqz a0 , hexvar lui v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lui v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lui v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar nop jr ra move v0 , zero lw v0 , - hexvar ( v0 )
cmp edi , num ja hexvar mov eax , edi jmp qword ptr [ rax * num + hexvar ] mov eax , dword ptr [ rip + hexvar ] ret
mov edx , dword ptr [ esp + num ] call hexvar add eax , hexvar test edx , edx je hexvar cmp edx , num je hexvar cmp edx , num je hexvar mov eax , dword ptr [ eax + hexvar ] cmp edx , num mov edx , num cmovne eax , edx ret
push rbp push rbx cmp edi , num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov r8d , dword ptr [ rip + hexvar ] mov r9d , dword ptr [ rip + hexvar ] cmp edi , num mov eax , hexvar mov edx , hexvar cmove edx , eax cmp edi , num mov eax , hexvar mov esi , hexvar cmove esi , eax mov r10d , dword ptr [ rip + hexvar ] mov r11d , dword ptr [ rip + hexvar ] test edi , edi mov eax , hexvar mov edi , hexvar cmove edi , eax mov ebp , hexvar jmp hexvar mov ebp , hexvar xor eax , eax nop dword ptr [ rax + rax ] mov ebx , ebp cmp ebp , hexvar jle hexvar cmp ebx , hexvar jle hexvar mov ebp , ecx cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar mov ebp , ebx cmp ebx , hexvar jne hexvar mov ebp , hexvar mov eax , r11d jmp hexvar nop dword ptr [ rax + rax ] cmp ebx , hexvar jle hexvar mov ebp , edx cmp ebx , hexvar je hexvar cmp ebx , hexvar je hexvar mov ebp , ebx cmp ebx , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] mov ebp , esi cmp ebx , hexvar je hexvar mov ebp , ebx cmp ebx , hexvar jne hexvar mov ebp , hexvar mov eax , r8d jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp ebx , hexvar je hexvar mov ebp , ebx cmp ebx , hexvar jne hexvar mov ebp , edi jmp hexvar mov ebp , hexvar mov eax , r10d jmp hexvar mov ebp , hexvar mov eax , r9d jmp hexvar pop rbx pop rbp ret
beqz a0 , hexvar lui v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lui v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lui v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar nop jr ra move v0 , zero lw v0 , - hexvar ( v0 )
beqz a0 , hexvar lui v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lui v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar lui v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar nop jr ra move v0 , zero lw v0 , - hexvar ( v0 )
sw a0 , ( sp ) lw v0 , ( sp ) bnez v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) b hexvar nop lw v1 , ( sp ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) b hexvar nop lw v1 , ( sp ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) b hexvar nop lw v1 , ( sp ) addiu v0 , zero , num bne v1 , v0 , hexvar nop lui v0 , hexvar lw v0 , - hexvar ( v0 ) b hexvar nop move v0 , zero jr ra nop
mov edx , dword ptr [ esp + num ] call hexvar add eax , hexvar test edx , edx je hexvar cmp edx , num je hexvar cmp edx , num je hexvar mov eax , dword ptr [ eax + hexvar ] cmp edx , num mov edx , num cmovne eax , edx ret
push rbp mov rbp , rsp sub rsp , hexvar mov rsi , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rip + hexvar ] mov edi , num call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rip + hexvar ] add rdx , rax mov qword ptr [ rip + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rip + hexvar ] sub rax , rdx setne cl movzx edi , cl mov edx , edi mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx call hexvar mov esi , dword ptr [ rax ] mov edi , hexvar mov dword ptr [ rbp - hexvar ] , esi call hexvar mov rsi , qword ptr [ rip + hexvar ] mov edi , num mov qword ptr [ rbp - hexvar ] , rax call hexvar xor edi , edi mov cl , dil mov esi , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov byte ptr [ rbp - hexvar ] , cl mov rcx , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rbp - num ] test rcx , rcx setne al movzx esi , al mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov edi , num call hexvar mov rax , qword ptr [ rip + hexvar ] add rax , num mov qword ptr [ rip + hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov qword ptr [ hexvar ] , num add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] add edx , eax adc ecx , num mov dword ptr [ hexvar ] , edx mov dword ptr [ hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] add eax , num adc dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , eax mov dword ptr [ esp ] , num call hexvar mov eax , dword ptr [ hexvar ] add eax , num adc dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] add edx , eax adc ecx , num mov dword ptr [ hexvar ] , edx mov dword ptr [ hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] add eax , num adc dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , eax mov dword ptr [ esp ] , num call hexvar mov eax , dword ptr [ hexvar ] add eax , num adc dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lui s1 , hexvar lw a2 , hexvar ( s1 ) lui v0 , hexvar lw a1 , hexvar ( v0 ) addiu a0 , zero , num jal hexvar nop lw gp , hexvar ( sp ) move s0 , v0 lui v1 , hexvar lw a1 , hexvar ( v1 ) lw v0 , hexvar ( v1 ) addu a0 , v0 , s0 sltu v0 , a0 , v0 addu v0 , v0 , a1 sw v0 , hexvar ( v1 ) sw a0 , hexvar ( v1 ) lw v0 , hexvar ( s1 ) bne v0 , s0 , hexvar lui v1 , hexvar lw a1 , hexvar ( v1 ) lw v0 , hexvar ( v1 ) addiu a0 , v0 , num sltu v0 , a0 , v0 addu v0 , v0 , a1 sw v0 , hexvar ( v1 ) sw a0 , hexvar ( v1 ) lui v0 , hexvar sw zero , hexvar ( v0 ) lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw s1 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , hexvar move a0 , zero lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ ebx + hexvar ] call hexvar xor edx , edx add dword ptr [ ebx + hexvar ] , eax mov esi , eax adc dword ptr [ ebx + hexvar ] , edx cmp dword ptr [ ebx + hexvar ] , eax jne hexvar add dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num adc dword ptr [ ebx + hexvar ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui v0 , hexvar lui gp , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) lw a1 , hexvar ( s1 ) jal hexvar lw a0 , hexvar ( v0 ) lui v1 , hexvar move s0 , v0 lw a1 , hexvar ( s1 ) lw gp , hexvar ( sp ) lw v0 , hexvar ( v1 ) lw a2 , hexvar ( v1 ) addu a0 , v0 , s0 sltu v0 , a0 , v0 sw a0 , hexvar ( v1 ) addu v0 , v0 , a2 bne a1 , s0 , hexvar sw v0 , hexvar ( v1 ) lui v1 , hexvar lw ra , hexvar ( sp ) lui a0 , hexvar lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw v0 , hexvar ( v1 ) lw a1 , hexvar ( v1 ) sw zero , hexvar ( a0 ) addiu a0 , v0 , num lw s0 , hexvar ( sp ) addiu sp , sp , hexvar sltu v0 , a0 , v0 sw a0 , hexvar ( v1 ) addu v0 , v0 , a1 jr ra sw v0 , hexvar ( v1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , hexvar lw s1 , ( v0 ) lw t9 , - hexvar ( gp )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] add edx , eax adc ecx , num mov dword ptr [ hexvar ] , edx mov dword ptr [ hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] add eax , num adc dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , eax mov dword ptr [ esp ] , num call hexvar mov eax , dword ptr [ hexvar ] add eax , num adc dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar lui v0 , hexvar lui gp , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) lw a1 , hexvar ( s1 ) jal hexvar lw a0 , hexvar ( v0 ) lui v1 , hexvar move s0 , v0 lw a1 , hexvar ( s1 ) lw gp , hexvar ( sp ) lw v0 , hexvar ( v1 ) lw a2 , hexvar ( v1 ) addu a0 , v0 , s0 sltu v0 , a0 , v0 sw a0 , hexvar ( v1 ) addu v0 , v0 , a2 bne a1 , s0 , hexvar sw v0 , hexvar ( v1 ) lui v1 , hexvar lw ra , hexvar ( sp ) lui a0 , hexvar lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw v0 , hexvar ( v1 ) lw a1 , hexvar ( v1 ) sw zero , hexvar ( a0 ) addiu a0 , v0 , num lw s0 , hexvar ( sp ) addiu sp , sp , hexvar sltu v0 , a0 , v0 sw a0 , hexvar ( v1 ) addu v0 , v0 , a1 jr ra sw v0 , hexvar ( v1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , hexvar lw s1 , ( v0 ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar lui v0 , hexvar lui gp , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) sw s2 , hexvar ( sp ) lw a1 , hexvar ( s1 ) jal hexvar lw a0 , hexvar ( v0 ) lui v1 , hexvar move s0 , v0 lw a1 , hexvar ( s1 ) lw gp , hexvar ( sp ) lw v0 , hexvar ( v1 ) lw a2 , hexvar ( v1 ) addu a0 , v0 , s0 sltu v0 , a0 , v0 sw a0 , hexvar ( v1 ) addu v0 , v0 , a2 bne a1 , s0 , hexvar sw v0 , hexvar ( v1 ) lui v1 , hexvar lw ra , hexvar ( sp ) lui a0 , hexvar lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw v0 , hexvar ( v1 ) lw a1 , hexvar ( v1 ) sw zero , hexvar ( a0 ) addiu a0 , v0 , num lw s0 , hexvar ( sp ) addiu sp , sp , hexvar sltu v0 , a0 , v0 sw a0 , hexvar ( v1 ) addu v0 , v0 , a1 jr ra sw v0 , hexvar ( v1 ) lw t9 , - hexvar ( gp ) jalr t9 nop lui a1 , hexvar lw gp , hexvar ( sp ) addiu a2 , zero , num addiu a1 , a1 , hexvar lw s1 , ( v0 ) lw t9 , - hexvar ( gp )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ hexvar ] mov edx , dword ptr [ hexvar ] add edx , eax adc ecx , num mov dword ptr [ hexvar ] , edx mov dword ptr [ hexvar ] , ecx mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ hexvar ] je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp dword ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ hexvar ] add eax , num adc dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , eax mov dword ptr [ esp ] , num call hexvar mov eax , dword ptr [ hexvar ] add eax , num adc dword ptr [ hexvar ] , num mov dword ptr [ hexvar ] , eax mov dword ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ecx + hexvar ] cmp esi , num sete al cmp esi , num mov ebp , eax sete al mov esi , eax mov eax , ebp or eax , esi cmp edi , num je hexvar cmp edi , num je hexvar mov esi , dword ptr [ ecx + hexvar ] and esi , hexvar test al , al je hexvar cmp esi , hexvar je hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sb v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num mov byte ptr [ ebp - hexvar ] , al push dword ptr [ ebp + hexvar ] call hexvar add esp , num mov byte ptr [ ebp - num ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar movzx eax , byte ptr [ ebp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - num ] , num je hexvar mov eax , num jmp hexvar sub esp , num push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar leave ret
push r12 push rbp push rbx mov r12 , rdi mov rbp , rsi call hexvar mov ebx , eax mov rdi , rbp call hexvar cmp bl , al ja hexvar mov eax , num jb hexvar mov rsi , qword ptr [ r12 ] mov rdi , qword ptr [ rbp ] call hexvar jmp hexvar mov eax , hexvar pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov byte ptr [ rbp - hexvar ] , al movzx ecx , byte ptr [ rbp - hexvar ] mov edi , ecx mov ecx , edi and ecx , num mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , hexvar mov rax , qword ptr [ rip + hexvar ] jmp rax movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx movzx eax , byte ptr [ rbp - hexvar ] mov ecx , eax mov eax , ecx and eax , num mov ecx , eax mov rcx , qword ptr [ rcx * num + hexvar ] jmp rcx mov dword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - num ] , eax mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
ldr r2 , [ r1 , hexvar ] ldr r3 , [ r0 , hexvar ] cmp r2 , num cmpne r2 , num moveq r2 , num movne r2 , num cmp r3 , num cmpne r3 , num moveq r3 , num movne r3 , num mov ip , r1 eor r1 , r2 , num tst r3 , r1 bne hexvar eor r3 , r3 , num tst r2 , r3 beq hexvar mov r0 , num bx lr ldr r1 , [ r0 ] ldr r0 , [ ip ] b hexvar mvn r0 , num bx lr
mov edx , dword ptr [ rdi + hexvar ] mov r8 , rsi cmp edx , num sete cl cmp edx , num sete al or eax , ecx mov ecx , dword ptr [ rsi + hexvar ] cmp ecx , num sete sil cmp ecx , num sete dl or edx , esi cmp dl , al jb hexvar mov eax , num jbe hexvar ret nop dword ptr [ rax ] mov rsi , qword ptr [ rdi ] mov rdi , qword ptr [ r8 ] jmp hexvar nop dword ptr [ rax + rax ] mov eax , hexvar ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar mov eax , dword ptr [ edi + hexvar ] mov edx , dword ptr [ esi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar pop ebx pop esi pop edi ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , r8 mov r15 , rcx mov rbx , rsi mov rax , rdi lea rsi , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rsi mov rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , num mov rdi , rdx mov rdx , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r12d , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar movsxd rsi , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] mov rdx , r15 mov rcx , r14 mov r8 , rbx xor r9d , r9d call hexvar test eax , eax mov eax , hexvar cmove eax , r12d jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r13d jmp hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar mov ebp , num jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar move v1 , a2 sw s0 , hexvar ( sp ) move a2 , a0 lw s0 , - hexvar ( gp ) move a0 , v1 lw t9 , - hexvar ( gp ) sw s1 , hexvar ( sp ) move s1 , a1 addiu a1 , sp , hexvar sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a3 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw zero , hexvar ( sp ) lw v0 , ( s0 ) lw s3 , hexvar ( sp ) sw v0 , hexvar ( sp ) jalr t9 nop lw a0 , hexvar ( sp ) beqz a0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move a3 , s3 sw zero , hexvar ( sp ) move a2 , s2 sw s1 , hexvar ( sp ) jalr t9 move a1 , v0 bnez v0 , hexvar lw gp , hexvar ( sp ) move v0 , zero lw a0 , hexvar ( sp ) lw v1 , ( s0 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 lw a0 , hexvar ( sp ) addiu v0 , zero , num b hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , r8 mov r15 , rcx mov rbx , rsi mov rax , rdi lea rsi , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rsi mov rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , num mov rdi , rdx mov rdx , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r12d , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r12d jmp hexvar movsxd rsi , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] mov rdx , r15 mov rcx , r14 mov r8 , rbx xor r9d , r9d call hexvar test eax , eax mov eax , hexvar cmove eax , r13d jmp hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar mov ebp , num jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar test edx , edx je hexvar sub esp , num push num push ebp push edi push esi push eax push edx call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar test edx , edx je hexvar sub esp , num push num push ebp push edi push esi push eax push edx call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r12 push rbx push rax mov r14 , r8 mov r15 , rcx mov r12 , rsi mov rax , rdi mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rdx mov rdx , rax call hexvar mov rdi , qword ptr [ rsp ] test rdi , rdi je hexvar movsxd rsi , eax xor ebx , ebx mov rdx , r15 mov rcx , r14 mov r8 , r12 xor r9d , r9d call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rsp ] call hexvar mov ebx , num jmp hexvar xor ebx , ebx mov eax , ebx add rsp , num pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a1 move v0 , a2 move s0 , a3 lw s1 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) sw v1 , hexvar ( sp ) sw zero , hexvar ( sp ) move a2 , a0 addiu a1 , sp , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) beqz a0 , hexvar move a3 , s1 sw zero , hexvar ( sp ) sw s2 , hexvar ( sp ) move a2 , s0 move a1 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar lw a0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar addiu v0 , zero , num move v0 , zero lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov edx , dword ptr [ esp + hexvar ] add esp , hexvar test edx , edx je hexvar sub esp , num push num push ebp push edi push esi push eax push edx call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r12 push rbx push rax mov r14 , r8 mov r15 , rcx mov r12 , rsi mov rax , rdi mov qword ptr [ rsp ] , num mov rsi , rsp mov rdi , rdx mov rdx , rax call hexvar mov rdi , qword ptr [ rsp ] test rdi , rdi je hexvar movsxd rsi , eax xor ebx , ebx mov rdx , r15 mov rcx , r14 mov r8 , r12 xor r9d , r9d call hexvar test eax , eax je hexvar mov rdi , qword ptr [ rsp ] call hexvar mov ebx , num jmp hexvar xor ebx , ebx mov eax , ebx add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r14 , r8 mov r15 , rcx mov rbx , rsi mov rax , rdi lea rsi , [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rsi mov rcx , qword ptr [ rsp + hexvar ] mov qword ptr [ rsp + num ] , num mov rdi , rdx mov rdx , rax call hexvar mov dword ptr [ rsp + hexvar ] , eax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rsp + hexvar ] , rax mov eax , hexvar mov r12d , hexvar mov r13d , hexvar jmp hexvar mov eax , hexvar xor ebp , ebp nop word ptr cs : [ rax + rax ] nop cmp eax , hexvar jg hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar nop cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r12d jmp hexvar movsxd rsi , dword ptr [ rsp + hexvar ] mov rdi , qword ptr [ rsp + hexvar ] mov rdx , r15 mov rcx , r14 mov r8 , rbx xor r9d , r9d call hexvar test eax , eax mov eax , hexvar cmove eax , r13d jmp hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar mov ebp , num jmp hexvar mov rax , qword ptr [ rsp + hexvar ] mov eax , ebp add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , num mov rax , qword ptr [ rip + hexvar ] mov rdi , rax call hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop dword ptr [ eax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw a0 , ( v0 ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw s0 , ( v0 ) addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , v0 move a1 , s0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp )
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop dword ptr [ eax ]
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] push dword ptr [ eax ] call hexvar add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop word ptr cs : [ eax + eax ] nop dword ptr [ eax ]
push ebp mov ebp , esp sub esp , hexvar cmp dword ptr [ hexvar ] , num jne hexvar mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov al , byte ptr [ hexvar ] xor al , hexvar mov byte ptr [ hexvar ] , al mov dword ptr [ hexvar ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar call hexvar lea ecx , [ hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar nop dword ptr [ eax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw s0 , ( v0 ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a2 , v0 move a1 , s0 addiu a0 , zero , num lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rdx mov r12 , rsi mov r14 , rdi mov rdi , rdx call hexvar mov r13 , rax mov rcx , rsp mov rdi , r12 mov esi , num mov rdx , rax call hexvar cmp eax , num je hexvar mov ebx , eax test eax , eax je hexvar cmp ebx , - num jne hexvar mov eax , dword ptr [ rsp ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar mov rbx , qword ptr [ rsp + num ] mov rdi , r12 mov rsi , r15 mov rdx , rbx call qword ptr [ r12 + hexvar ]
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rdx mov r12 , rsi mov r14 , rdi mov rdi , rdx call hexvar mov r13 , rax mov rcx , rsp mov rdi , r12 mov esi , num mov rdx , rax call hexvar cmp eax , num je hexvar mov ebx , eax test eax , eax je hexvar cmp ebx , - num jne hexvar mov eax , dword ptr [ rsp ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar mov rbx , qword ptr [ rsp + num ] mov rdi , r12 mov rsi , r15 mov rdx , rbx call qword ptr [ r12 + hexvar ]
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rdx mov r12 , rsi mov r14 , rdi mov rdi , rdx call hexvar mov r13 , rax mov rcx , rsp mov rdi , r12 mov esi , num mov rdx , rax call hexvar cmp eax , num je hexvar mov ebx , eax test eax , eax je hexvar cmp ebx , - num jne hexvar mov eax , dword ptr [ rsp ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar mov rbx , qword ptr [ rsp + num ] mov rdi , r12 mov rsi , r15 mov rdx , rbx call qword ptr [ r12 + hexvar ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) lw s5 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a0 sw s4 , hexvar ( sp ) move a0 , a2 sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) addiu s2 , sp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw v0 , ( s5 ) sw v0 , hexvar ( sp ) bal hexvar nop addiu a1 , zero , num move a3 , s2 move a2 , v0 move a0 , s0 jal hexvar move s4 , v0 addiu v1 , zero , num lw gp , hexvar ( sp ) bne v0 , v1 , hexvar move s1 , v0 lw t9 , hexvar ( s0 ) move a1 , s3 lw a2 , hexvar ( sp ) jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , ( s6 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rdx mov r12 , rsi mov r14 , rdi mov rdi , rdx call hexvar mov r13 , rax mov rcx , rsp mov rdi , r12 mov esi , num mov rdx , rax call hexvar cmp eax , num je hexvar mov ebx , eax test eax , eax je hexvar cmp ebx , - num jne hexvar mov eax , dword ptr [ rsp ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar mov rbx , qword ptr [ rsp + num ] mov rdi , r12 mov rsi , r15 mov rdx , rbx call qword ptr [ r12 + hexvar ]
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) lw s5 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a0 sw s4 , hexvar ( sp ) move a0 , a2 sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) addiu s2 , sp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw v0 , ( s5 ) sw v0 , hexvar ( sp ) bal hexvar nop addiu a1 , zero , num move a3 , s2 move a2 , v0 move a0 , s0 jal hexvar move s4 , v0 addiu v1 , zero , num lw gp , hexvar ( sp ) bne v0 , v1 , hexvar move s1 , v0 lw t9 , hexvar ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s5 , hexvar ( sp ) lw s5 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a0 sw s4 , hexvar ( sp ) move a0 , a2 sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) addiu s2 , sp , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a1 sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw v0 , ( s5 ) sw v0 , hexvar ( sp ) bal hexvar nop addiu a1 , zero , num move a3 , s2 move a2 , v0 move a0 , s0 jal hexvar move s4 , v0 addiu v1 , zero , num lw gp , hexvar ( sp ) bne v0 , v1 , hexvar move s1 , v0 lw t9 , hexvar ( s0 ) move a1 , s3 lw a2 , hexvar ( sp ) jalr t9 move a0 , s0 beqz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , ( s6 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rdx mov r12 , rsi mov r14 , rdi mov rdi , rdx call hexvar mov r13 , rax mov rcx , rsp mov rdi , r12 mov esi , num mov rdx , rax call hexvar cmp eax , num je hexvar mov ebx , eax test eax , eax je hexvar cmp ebx , - num jne hexvar mov eax , dword ptr [ rsp ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar mov rbx , qword ptr [ rsp + num ] mov rdi , r12 mov rsi , r15 mov rdx , rbx call qword ptr [ r12 + hexvar ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s6 , a0 move s0 , a1 move s3 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) move a0 , a2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s4 , v0 addiu a3 , sp , hexvar move a2 , v0 addiu a1 , zero , num move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 addiu v0 , zero , num bne s1 , v0 , hexvar lw a2 , hexvar ( sp ) lw t9 , hexvar ( s0 ) move a1 , s3 move a0 , s0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s5 , v0 lw v0 , hexvar ( sp ) sw v0 , ( s6 ) move v0 , s1 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu v0 , zero , - num beq s1 , v0 , hexvar addiu a0 , sp , hexvar beqz s1 , hexvar move v0 , s1 addiu a0 , sp , hexvar jal hexvar nop lw gp , hexvar ( sp ) b hexvar addiu s1 , zero , - num jal hexvar nop lw gp , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , - hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r15 , rdx mov r12 , rsi mov r14 , rdi mov rdi , rdx call hexvar mov r13 , rax mov rcx , rsp mov rdi , r12 mov esi , num mov rdx , rax call hexvar cmp eax , num je hexvar mov ebx , eax test eax , eax je hexvar cmp ebx , - num jne hexvar mov eax , dword ptr [ rsp ] cmp eax , num je hexvar cmp eax , num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar jmp hexvar mov rbx , qword ptr [ rsp + num ] mov rdi , r12 mov rsi , r15 mov rdx , rbx call qword ptr [ r12 + hexvar ]
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , num mov eax , dword ptr [ edi + num ] push ebx push dword ptr [ esi + num ] push dword ptr [ esi ] call dword ptr [ eax + hexvar ] add esp , hexvar mov eax , dword ptr [ edi + num ] add ebx , num push ebx push dword ptr [ esi + hexvar ] push dword ptr [ esi + num ] call dword ptr [ eax + hexvar ] add esp , hexvar pop ebx pop esi pop edi ret
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r4 , r1 mov r5 , r2 ldr r3 , [ r0 , num ] ldr r3 , [ r3 , hexvar ] mov r1 , r2 ldr r0 , [ r4 ] blx r3 ldr r3 , [ r6 , num ] ldr r3 , [ r3 , hexvar ] add r1 , r5 , num ldr r0 , [ r4 , num ] blx r3 pop { r4 , r5 , r6 , pc }
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , num mov eax , dword ptr [ edi + num ] push ebx push dword ptr [ esi + num ] add ebx , num push dword ptr [ esi ] call dword ptr [ eax + hexvar ] add esp , hexvar mov eax , dword ptr [ edi + num ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esi + hexvar ] mov ecx , dword ptr [ esi + num ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr [ eax + hexvar ] pop ebx pop esi pop edi jmp eax jmp hexvar nop nop nop nop nop nop nop nop nop nop nop nop nop
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] sub esp , num mov eax , dword ptr [ edi + num ] push ebx push dword ptr [ esi + num ] add ebx , num push dword ptr [ esi ] call dword ptr [ eax + hexvar ] add esp , hexvar mov eax , dword ptr [ edi + num ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esi + hexvar ] mov ecx , dword ptr [ esi + num ] mov dword ptr [ esp + hexvar ] , ebx mov dword ptr [ esp + hexvar ] , ecx mov eax , dword ptr [ eax + hexvar ] pop ebx pop esi pop edi jmp eax jmp hexvar nop nop nop nop nop nop nop nop nop nop nop nop nop
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx ] mov rsi , rcx mov rdi , rdx call rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rbp - num ] lea rcx , [ rdx + num ] mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r6 , r0 mov r5 , r2 ldr r3 , [ r0 , num ] mov r1 , r2 ldr r0 , [ r4 ] ldr r3 , [ r3 , hexvar ] blx r3 ldr r3 , [ r6 , num ] add r1 , r5 , num ldr r0 , [ r4 , num ] ldr r3 , [ r3 , hexvar ] pop { r4 , r5 , r6 , lr } bx r3
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ eax + hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + num ] mov eax , dword ptr [ eax ] sub esp , num push ebx push edx push eax call ecx add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] lea ebx , [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num push ebx push edx push eax call ecx add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r6 , r0 mov r5 , r2 ldr r3 , [ r0 , num ] mov r1 , r2 ldr r0 , [ r4 ] ldr r3 , [ r3 , hexvar ] blx r3 ldr r3 , [ r6 , num ] add r1 , r5 , num ldr r0 , [ r4 , num ] ldr r3 , [ r3 , hexvar ] pop { r4 , r5 , r6 , lr } bx r3
addiu sp , sp , - hexvar lw v0 , num ( a0 ) sw s0 , hexvar ( sp ) move s0 , a1 sw s1 , hexvar ( sp ) move s1 , a0 sw s2 , hexvar ( sp ) move s2 , a2 sw ra , hexvar ( sp ) lw a0 , ( s0 ) lw t9 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw a3 , hexvar ( v0 )
call hexvar add eax , hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + hexvar ] cmp eax , hexvar jne hexvar mov eax , num ret
xor eax , eax cmp dword ptr [ rdi + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rdi + hexvar ] cmp dword ptr [ rcx + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rcx + hexvar ] ret
sw a0 , ( sp ) lw v0 , ( sp ) lw v1 , hexvar ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , ( sp ) lw v0 , hexvar ( v0 ) lw v1 , hexvar ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , ( sp ) lw v0 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) b hexvar nop move v0 , zero jr ra nop
sw a0 , ( sp ) lw v0 , ( sp ) lw v1 , hexvar ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , ( sp ) lw v0 , hexvar ( v0 ) lw v1 , hexvar ( v0 ) addiu v0 , zero , hexvar bne v1 , v0 , hexvar nop lw v0 , ( sp ) lw v0 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) b hexvar nop move v0 , zero jr ra nop
sub sp , sp , num str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , hexvar bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , hexvar bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] b hexvar mov r3 , num mov r0 , r3 add sp , sp , num bx lr
mov edx , dword ptr [ esp + num ] xor eax , eax cmp dword ptr [ edx + hexvar ] , hexvar je hexvar mov edx , dword ptr [ edx + hexvar ] cmp dword ptr [ edx + hexvar ] , hexvar je hexvar ret lea esi , [ esi ] mov eax , dword ptr [ edx + hexvar ] ret
xor eax , eax cmp dword ptr [ rdi + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rdi + hexvar ] cmp dword ptr [ rcx + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rcx + hexvar ] ret
call hexvar add eax , hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + hexvar ] cmp eax , hexvar jne hexvar mov eax , num ret
xor eax , eax cmp dword ptr [ rdi + hexvar ] , hexvar je hexvar mov rcx , qword ptr [ rdi + hexvar ] cmp dword ptr [ rcx + hexvar ] , hexvar jne hexvar mov eax , dword ptr [ rcx + hexvar ] ret
sub sp , sp , num str r0 , [ sp , num ] ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , hexvar bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , hexvar bne hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] ldr r3 , [ r3 , hexvar ] b hexvar mov r3 , num mov r0 , r3 add sp , sp , num bx lr
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) b hexvar nop sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v0 , hexvar ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 move s5 , a3 lw s4 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar nop addiu s1 , zero , num addiu v0 , sp , hexvar sw v0 , hexvar ( sp ) move a2 , s1 move a1 , s0 jal hexvar nop lw gp , hexvar ( sp ) addiu v1 , zero , num beq v0 , v1 , hexvar lw v1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 move s5 , a3 lw s4 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar nop addiu s1 , zero , num addiu v0 , sp , hexvar sw v0 , hexvar ( sp ) move a2 , s1 move a1 , s0 jal hexvar nop lw gp , hexvar ( sp ) addiu v1 , zero , num beq v0 , v1 , hexvar lw v1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , hexvar ( a2 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num sw v0 , hexvar ( fp ) b hexvar nop sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 lw s1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) move s4 , a3 sw s0 , hexvar ( sp ) move s0 , a2 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) lw s6 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz a0 , hexvar move s2 , zero addiu s2 , zero , num sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar addiu a2 , s0 , hexvar addiu a1 , s0 , hexvar sw v0 , hexvar ( sp ) jal hexvar move a3 , s2 addiu v1 , zero , num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v1 , hexvar ( a2 )
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , - hexvar sw s4 , hexvar ( sp ) move s4 , a3 sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( sp ) beqz s0 , hexvar move s1 , a2 lui t9 , hexvar addiu t9 , t9 , hexvar jalr t9 move a0 , s0 or a0 , v0 , v1 beqz a0 , hexvar lw gp , hexvar ( sp ) addiu fp , zero , num lw t9 , - hexvar ( gp ) move a2 , s3 lw a3 , hexvar ( sp ) move a1 , s1 sw v1 , hexvar ( sp ) move a0 , s2 sw v0 , hexvar ( sp ) sw s4 , hexvar ( sp ) jalr t9 sw fp , hexvar ( sp ) move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , hexvar ( s1 )
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a3 sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( sp ) beqz s0 , hexvar move s1 , a2 lui t9 , hexvar addiu t9 , t9 , - hexvar jalr t9 move a0 , s0 or a0 , v0 , v1 beqz a0 , hexvar lw gp , hexvar ( sp ) addiu fp , zero , num lw t9 , - hexvar ( gp ) move a2 , s3 lw a3 , hexvar ( sp ) move a1 , s1 sw v1 , hexvar ( sp ) move a0 , s2 sw v0 , hexvar ( sp ) sw s4 , hexvar ( sp ) jalr t9 sw fp , hexvar ( sp ) move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , hexvar ( s1 )
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw s4 , hexvar ( sp ) move s4 , a3 sw s3 , hexvar ( sp ) move s3 , a1 sw s2 , hexvar ( sp ) move s2 , a0 sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , hexvar ( sp ) beqz s0 , hexvar move s1 , a2 lui t9 , hexvar addiu t9 , t9 , hexvar jalr t9 move a0 , s0 or a0 , v0 , v1 beqz a0 , hexvar lw gp , hexvar ( sp ) addiu fp , zero , num lw t9 , - hexvar ( gp ) move a2 , s3 lw a3 , hexvar ( sp ) move a1 , s1 sw v1 , hexvar ( sp ) move a0 , s2 sw v0 , hexvar ( sp ) sw s4 , hexvar ( sp ) jalr t9 sw fp , hexvar ( sp ) move v1 , v0 lw ra , hexvar ( sp ) move v0 , v1 lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw a0 , hexvar ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 lw s1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) move s4 , a3 sw s0 , hexvar ( sp ) move s0 , a2 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) lw s6 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz a0 , hexvar move s2 , zero addiu s2 , zero , num sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar addiu a2 , s0 , hexvar addiu a1 , s0 , hexvar sw v0 , hexvar ( sp ) jal hexvar move a3 , s2 addiu v1 , zero , num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v1 , hexvar ( a2 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a0 lw s1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) move s4 , a3 sw s0 , hexvar ( sp ) move s0 , a2 sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) lw s6 , hexvar ( sp ) sw v1 , hexvar ( sp ) beqz a0 , hexvar move s2 , zero addiu s2 , zero , num sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar addiu a2 , s0 , hexvar addiu a1 , s0 , hexvar sw v0 , hexvar ( sp ) jal hexvar move a3 , s2 addiu v1 , zero , num beq v0 , v1 , hexvar lw gp , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , ( s1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v1 , hexvar ( a2 )
push edi push esi xor edi , edi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ eax ] mov eax , dword ptr [ esi ] test eax , eax je hexvar nop sub esp , hexvar add esi , num push eax call hexvar lea edi , [ edi + eax + num ] mov eax , dword ptr [ esi ] add esp , hexvar test eax , eax jne hexvar mov eax , edi pop ebx pop esi pop edi ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax add ecx , num mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ eax ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar add eax , num add eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar xor eax , eax mov ecx , dword ptr [ ebp - num ] mov edx , ecx add edx , num mov dword ptr [ ebp - num ] , edx mov ecx , dword ptr [ ecx ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp - hexvar ] sub ecx , num sub eax , ecx add eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax add ecx , num mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ eax ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar add eax , num add eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax add ecx , num mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ eax ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar add eax , num add eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp push rbx xor ebp , ebp sub rsp , num mov rbx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] add rbx , num call hexvar mov rdi , qword ptr [ rbx ] lea rbp , [ rbp + rax + num ] test rdi , rdi jne hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw s0 , ( v0 ) lw a0 , ( s0 )
mov rdx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rdx ] test rdi , rdi je hexvar mov esi , num mov r8 , - num mov eax , num add rdx , num mov rcx , r8 repne scasb al , byte ptr [ rdi ] not rcx add rsi , rcx mov rdi , qword ptr [ rdx ] test rdi , rdi jne hexvar jmp hexvar mov esi , num mov rax , rsi ret
push rbp push rbx xor ebp , ebp sub rsp , num mov rbx , qword ptr [ rip + hexvar ] mov rdi , qword ptr [ rbx ] test rdi , rdi je hexvar nop word ptr [ rax + rax ] add rbx , num call hexvar mov rdi , qword ptr [ rbx ] lea rbp , [ rbp + rax + num ] test rdi , rdi jne hexvar add rsp , num mov rax , rbp pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp dword ptr [ eax ] , num je hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax add ecx , num mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ eax ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar add eax , num add eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
cmp edi , hexvar mov qword ptr [ rip + hexvar ] , num je hexvar ja hexvar cmp edi , num je hexvar cmp edi , hexvar je hexvar cmp edi , num je hexvar ret nop cmp edi , hexvar je hexvar jbe hexvar cmp edi , hexvar jne hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop sltiu v1 , v0 , hexvar beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop sltiu v1 , v0 , hexvar beqz v1 , hexvar nop addiu v0 , v0 , - hexvar sltiu v0 , v0 , num beqz v0 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov edx , dword ptr [ esp + num ] call hexvar add eax , hexvar cmp edx , hexvar mov dword ptr [ eax + hexvar ] , num je hexvar ja hexvar cmp edx , num je hexvar cmp edx , hexvar je hexvar cmp edx , num je hexvar ret lea esi , [ esi ] cmp edx , hexvar je hexvar jbe hexvar cmp edx , hexvar jne hexvar lea edx , [ eax - hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , edx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lui v0 , hexvar sw zero , - hexvar ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop sltiu v1 , v0 , hexvar beqz v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop addiu v1 , zero , num beq v0 , v1 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop sltiu v1 , v0 , hexvar beqz v1 , hexvar nop addiu v0 , v0 , - hexvar sltiu v0 , v0 , num beqz v0 , hexvar nop b hexvar nop addiu v1 , zero , hexvar beq v0 , v1 , hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop jal hexvar nop b hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov qword ptr [ rip + hexvar ] , num cmp edi , hexvar je hexvar cmp edi , hexvar ja hexvar cmp edi , num je hexvar cmp edi , hexvar je hexvar cmp edi , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rip + hexvar ] , rax ret
lui v0 , hexvar sw zero , hexvar ( v0 ) addiu v0 , zero , hexvar beq a0 , v0 , hexvar sltiu v0 , a0 , hexvar beqz v0 , hexvar addiu v0 , zero , num beq a0 , v0 , hexvar addiu v0 , zero , hexvar beq a0 , v0 , hexvar addiu v0 , zero , num bne a0 , v0 , hexvar lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( v1 ) lui v0 , hexvar addiu v1 , zero , hexvar sw v1 , hexvar ( v0 ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( v1 ) jr ra nop addiu v0 , zero , hexvar beq a0 , v0 , hexvar sltiu v0 , a0 , hexvar bnez v0 , hexvar addiu v0 , zero , hexvar bne a0 , v0 , hexvar lui v0 , hexvar sw zero , hexvar ( v0 ) lui v0 , hexvar addiu v1 , zero , hexvar sw v1 , hexvar ( v0 ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , hexvar jr ra sw v0 , hexvar ( v1 ) addiu a0 , a0 , - hexvar sltiu a0 , a0 , num beqz a0 , hexvar nop lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( v1 ) lui v0 , hexvar addiu v1 , zero , hexvar sw v1 , hexvar ( v0 ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , hexvar jr ra sw v0 , hexvar ( v1 ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( v1 ) lui v0 , hexvar addiu v1 , zero , hexvar sw v1 , hexvar ( v0 ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , hexvar jr ra sw v0 , hexvar ( v1 ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( v1 ) lui v0 , hexvar addiu v1 , zero , hexvar sw v1 , hexvar ( v0 ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , hexvar jr ra sw v0 , hexvar ( v1 ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( v1 ) lui v0 , hexvar addiu v1 , zero , hexvar sw v1 , hexvar ( v0 ) lui v1 , hexvar lui v0 , hexvar addiu v0 , v0 , hexvar jr ra sw v0 , hexvar ( v1 )
mov qword ptr [ rip + hexvar ] , num cmp edi , hexvar je hexvar cmp edi , hexvar ja hexvar cmp edi , num je hexvar cmp edi , hexvar je hexvar cmp edi , num jne hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rip + hexvar ] , rax mov dword ptr [ rip + hexvar ] , hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rip + hexvar ] , rax ret
mov edx , dword ptr [ esp + num ] call hexvar add eax , hexvar cmp edx , hexvar mov dword ptr [ eax + hexvar ] , num je hexvar ja hexvar cmp edx , num je hexvar cmp edx , hexvar je hexvar cmp edx , num je hexvar ret lea esi , [ esi ] cmp edx , hexvar je hexvar jbe hexvar cmp edx , hexvar jne hexvar lea edx , [ eax - hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , edx ret
mov edx , dword ptr [ esp + num ] call hexvar add eax , hexvar cmp edx , hexvar mov dword ptr [ eax + hexvar ] , num je hexvar ja hexvar cmp edx , num je hexvar cmp edx , hexvar je hexvar cmp edx , num je hexvar ret lea esi , [ esi ] cmp edx , hexvar je hexvar jbe hexvar cmp edx , hexvar jne hexvar lea edx , [ eax - hexvar ] mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + hexvar ] , edx ret
cmp edi , hexvar mov qword ptr [ rip + hexvar ] , num je hexvar ja hexvar cmp edi , num je hexvar cmp edi , hexvar je hexvar cmp edi , num je hexvar ret nop cmp edi , hexvar je hexvar jbe hexvar cmp edi , hexvar jne hexvar lea rax , [ rip - hexvar ] mov qword ptr [ rip + hexvar ] , num mov dword ptr [ rip + hexvar ] , hexvar mov qword ptr [ rip + hexvar ] , rax ret
push { r4 , r5 , r6 , lr } ldr r4 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] sub sp , sp , hexvar ldr ip , [ r4 ] str r3 , [ sp ] mov r2 , hexvar add r3 , sp , num mov r1 , num str ip , [ sp , hexvar ] mov r5 , r0 bl hexvar cmp r0 , num bne hexvar ldr r3 , [ sp , num ] cmp r3 , num ble hexvar mov r0 , num ldr lr , [ sp , hexvar ] ldr ip , [ r4 ] ldr r1 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] cmp lr , ip strb r0 , [ r1 , hexvar ] str r3 , [ r2 ] bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move a3 , v0 lui v0 , hexvar addiu a2 , v0 , - hexvar addiu a1 , zero , num lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) lui v0 , hexvar addiu v1 , zero , num sb v1 , - hexvar ( v0 ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui a1 , hexvar sw s0 , hexvar ( sp ) addiu a2 , zero , num sw ra , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero lui v1 , hexvar lw gp , hexvar ( sp ) addiu a3 , zero , num sw v0 , hexvar ( sp ) lui v0 , hexvar move a2 , zero sw zero , hexvar ( sp ) addiu v0 , v0 , hexvar lw t9 , - hexvar ( gp ) ori v1 , v1 , hexvar sw v0 , hexvar ( sp ) move v0 , zero move a0 , s0 sw v1 , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar sw v1 , hexvar ( v0 ) lui v0 , hexvar addiu v1 , zero , num jr ra sb v1 , hexvar ( v0 )
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ ebx - hexvar ] push eax lea eax , [ esp + hexvar ] push eax push hexvar push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + num ] test eax , eax jle hexvar mov dword ptr [ ebx + hexvar ] , eax mov byte ptr [ ebx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ ebx - hexvar ] push eax lea eax , [ esp + hexvar ] push eax push hexvar push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , dword ptr [ esp + num ] test eax , eax jle hexvar mov dword ptr [ ebx + hexvar ] , eax mov byte ptr [ ebx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ ebx - hexvar ] push eax lea eax , [ esp + hexvar ] push eax push hexvar push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar cmp dword ptr [ esp + num ] , num jg hexvar sub esp , hexvar push esi call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar push esi push eax push num push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ ebx + hexvar ] , eax mov byte ptr [ ebx + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov byte ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov byte ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax mov ecx , dword ptr [ ebp - num ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar mov byte ptr [ hexvar ] , num add esp , hexvar pop ebp ret
push rbx sub rsp , hexvar mov rbx , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + num ] , rax xor eax , eax mov r8d , hexvar mov rcx , rsp mov edx , hexvar mov esi , num call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rsp ] sub rax , num cmp rax , hexvar jbe hexvar mov rdi , rbx call hexvar mov rbx , rax mov edx , num mov esi , hexvar mov edi , num call hexvar mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov rax , qword ptr [ rsp ] mov dword ptr [ rip + hexvar ] , eax mov byte ptr [ rip + hexvar ] , num mov rax , qword ptr [ rsp + num ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num lb v0 , ( v0 ) xori v0 , v0 , hexvar sltiu v0 , v0 , num sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) addiu v0 , v0 , num lw v1 , hexvar ( fp ) addu v0 , v1 , v0 sw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) addu v0 , v0 , v1 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , - num addiu v1 , zero , hexvar sb v1 , ( v0 ) b hexvar nop lw v0 , hexvar ( fp ) addiu v1 , zero , hexvar sb v1 , ( v0 ) lw v0 , hexvar ( fp ) addiu v0 , v0 , - num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lb v1 , ( v0 ) addiu v0 , zero , hexvar beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lb v0 , ( v0 ) andi v0 , v0 , hexvar addiu v0 , v0 , num andi v0 , v0 , hexvar seb v1 , v0 lw v0 , hexvar ( fp ) sb v1 , ( v0 ) lw v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sltu a0 , v0 , a0 movz v0 , v1 , a0 sw v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , - num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v1 , zero , hexvar sb v1 , ( v0 ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push edi push esi push ebx movzx esi , byte ptr [ eax + num ] mov ecx , esi cmp cl , hexvar sete dl movzx edx , dl lea ebx , [ eax + edx + num ] mov ecx , hexvar mov eax , num mov edi , ebx repne scasb al , byte ptr es : [ edi ] not ecx lea edx , [ ebx + ecx - num ] mov byte ptr [ ebx - num ] , hexvar lea eax , [ edx - num ] movzx edx , byte ptr [ edx - num ] cmp dl , hexvar jne hexvar mov byte ptr [ eax ] , hexvar sub eax , num movzx edx , byte ptr [ eax ] cmp dl , hexvar je hexvar add edx , num mov byte ptr [ eax ] , dl cmp ebx , eax cmovbe eax , ebx mov ecx , esi cmp cl , hexvar je hexvar pop ebx pop esi pop edi ret
movzx r8d , byte ptr [ rdi + num ] cmp r8b , hexvar sete al movzx eax , al lea rsi , [ rdi + rax + num ] mov rcx , - num mov eax , num mov rdi , rsi repne scasb al , byte ptr [ rdi ] not rcx lea rdx , [ rsi + rcx - num ] mov byte ptr [ rsi - num ] , hexvar lea rax , [ rdx - num ] movzx edx , byte ptr [ rdx - num ] cmp dl , hexvar jne hexvar mov byte ptr [ rax ] , hexvar sub rax , num movzx edx , byte ptr [ rax ] cmp dl , hexvar je hexvar add edx , num mov byte ptr [ rax ] , dl cmp rsi , rax cmovbe rax , rsi cmp r8b , hexvar je hexvar ret mov byte ptr [ rax - num ] , hexvar lea rax , [ rax - num ] jmp hexvar
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] movsx ecx , byte ptr [ ecx + num ] cmp ecx , hexvar sete dl and dl , num mov byte ptr [ ebp - num ] , dl mov ecx , dword ptr [ ebp + num ] add ecx , num mov dl , byte ptr [ ebp - num ] and dl , num movzx esi , dl add ecx , esi mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ebp - hexvar ] mov edi , esp mov dword ptr [ edi ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax - num ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp - hexvar ] , ecx movsx eax , byte ptr [ eax - num ] cmp eax , hexvar jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov cl , byte ptr [ eax ] add cl , num mov byte ptr [ eax ] , cl mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - hexvar ] jae hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax test byte ptr [ ebp - num ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax add ecx , - num mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ eax - num ] , hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lb s1 , num ( a0 ) lw t9 , - hexvar ( gp ) xori s0 , s1 , hexvar sltiu s0 , s0 , num addiu s0 , s0 , num addu s0 , a0 , s0 jalr t9 move a0 , s0 addiu v1 , zero , hexvar addu v0 , s0 , v0 sb v1 , - num ( s0 ) addiu a0 , zero , hexvar lb a1 , - num ( v0 ) bne a1 , a0 , hexvar addiu v1 , v0 , - num addiu a0 , zero , hexvar addiu v0 , zero , hexvar sb a0 , ( v1 ) addiu v1 , v1 , - num lb a1 , ( v1 ) beq a1 , v0 , hexvar nop addiu a1 , a1 , num sltu v0 , v1 , s0 sb a1 , ( v1 ) addiu a0 , zero , hexvar movz v1 , s0 , v0 bne s1 , a0 , hexvar move v0 , v1 addiu v0 , v1 , - num sb s1 , - num ( v1 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw gp , hexvar ( sp ) lb s1 , num ( a0 ) lw t9 , - hexvar ( gp ) xori s0 , s1 , hexvar sltiu s0 , s0 , num addiu s0 , s0 , num addu s0 , a0 , s0 jalr t9 move a0 , s0 addiu v1 , zero , hexvar addu v0 , s0 , v0 sb v1 , - num ( s0 ) addiu a0 , zero , hexvar lb a1 , - num ( v0 ) bne a1 , a0 , hexvar addiu v1 , v0 , - num addiu a0 , zero , hexvar addiu v0 , zero , hexvar sb a0 , ( v1 ) addiu v1 , v1 , - num lb a1 , ( v1 ) beq a1 , v0 , hexvar nop addiu a1 , a1 , num sltu v0 , v1 , s0 sb a1 , ( v1 ) addiu a0 , zero , hexvar movz v1 , s0 , v0 bne s1 , a0 , hexvar move v0 , v1 addiu v0 , v1 , - num sb s1 , - num ( v1 ) lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
movzx r8d , byte ptr [ rdi + num ] cmp r8b , hexvar sete al movzx eax , al lea rsi , [ rdi + rax + num ] mov eax , num mov rcx , - num mov rdi , rsi repne scasb al , byte ptr [ rdi ] not rcx lea rdx , [ rsi + rcx - num ] mov byte ptr [ rsi - num ] , hexvar lea rax , [ rdx - num ] movzx edx , byte ptr [ rdx - num ] cmp dl , hexvar jne hexvar mov byte ptr [ rax ] , hexvar sub rax , num movzx edx , byte ptr [ rax ] cmp dl , hexvar je hexvar add edx , num mov byte ptr [ rax ] , dl cmp rsi , rax cmovbe rax , rsi cmp r8b , hexvar jne hexvar mov byte ptr [ rax - num ] , hexvar lea rax , [ rax - num ] ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num ldrb r3 , [ r3 ] cmp r3 , hexvar moveq r3 , num movne r3 , num strb r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] add r3 , r3 , num ldr r2 , [ fp , - hexvar ] add r3 , r2 , r3 str r3 , [ fp , - num ] ldr r0 , [ fp , - num ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - num ] add r3 , r3 , r2 str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] sub r3 , r3 , num mov r2 , hexvar strb r2 , [ r3 ] b hexvar ldr r3 , [ fp , - hexvar ] mov r2 , hexvar strb r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] sub r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] cmp r3 , hexvar beq hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 ] add r3 , r3 , num and r2 , r3 , hexvar ldr r3 , [ fp , - hexvar ] strb r2 , [ r3 ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] cmp r2 , r3 movlo r3 , r2 movhs r3 , r3 str r3 , [ fp , - hexvar ] ldrb r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] sub r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] mov r2 , hexvar strb r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push edi push esi push ebx movzx esi , byte ptr [ eax + num ] mov ecx , esi cmp cl , hexvar sete dl movzx edx , dl lea ebx , [ eax + edx + num ] mov ecx , hexvar mov eax , num mov edi , ebx repne scasb al , byte ptr es : [ edi ] not ecx lea edx , [ ebx + ecx - num ] mov byte ptr [ ebx - num ] , hexvar lea eax , [ edx - num ] movzx edx , byte ptr [ edx - num ] cmp dl , hexvar jne hexvar mov byte ptr [ eax ] , hexvar sub eax , num movzx edx , byte ptr [ eax ] cmp dl , hexvar je hexvar add edx , num mov byte ptr [ eax ] , dl cmp ebx , eax cmovbe eax , ebx mov ecx , esi cmp cl , hexvar je hexvar pop ebx pop esi pop edi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] add rax , num movzx eax , byte ptr [ rax ] cmp al , hexvar sete al mov byte ptr [ rbp - hexvar ] , al movzx eax , byte ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] add rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - num ] sub rax , num mov byte ptr [ rax ] , hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] cmp al , hexvar je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax ] add eax , num mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - num ] cmp qword ptr [ rbp - hexvar ] , rax cmovbe rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp byte ptr [ rbp - hexvar ] , num je hexvar sub qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax ] , hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw s4 , hexvar ( sp ) addiu a0 , zero , hexvar sw s3 , hexvar ( sp ) move s4 , a1 sw s1 , hexvar ( sp ) move s3 , a2 sw gp , hexvar ( sp ) move s1 , a3 sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s2 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , num ( s1 ) move a1 , s0 lw t9 , - hexvar ( gp ) sw v0 , num ( s0 ) addiu v0 , zero , - num addiu a0 , a0 , hexvar sw s4 , hexvar ( s0 ) sw s3 , hexvar ( s0 ) bal hexvar sw v0 , hexvar ( s0 ) move v0 , zero lw a0 , ( s1 ) lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw v1 , hexvar ( a0 ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) ori v1 , v1 , num lw s0 , hexvar ( sp ) sw v1 , hexvar ( a0 ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero lw a0 , ( s1 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push hexvar call hexvar add esp , hexvar test eax , eax je hexvar test ebp , ebp mov esi , eax je hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] sub esp , num mov dword ptr [ esi + hexvar ] , hexvar mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax push esi mov eax , dword ptr [ edi + num ] add eax , hexvar push eax call hexvar mov eax , dword ptr [ edi ] add esp , hexvar or dword ptr [ eax + hexvar ] , num xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push r13 push r12 push rbp push rbx mov r12 , rdi mov r14 , rsi mov r13 , rdx mov rbp , rcx mov edi , hexvar call hexvar test rax , rax je hexvar mov rbx , rax test r12 , r12 je hexvar mov rdi , r12 call hexvar test rax , rax je hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r14 mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , hexvar mov rax , qword ptr [ rbp + hexvar ] lea rdi , [ rax + hexvar ] mov rsi , rbx call hexvar mov rax , qword ptr [ rbp ] or dword ptr [ rax + hexvar ] , num mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw s4 , hexvar ( sp ) addiu a0 , zero , hexvar sw s3 , hexvar ( sp ) move s4 , a1 sw s1 , hexvar ( sp ) move s3 , a2 sw gp , hexvar ( sp ) move s1 , a3 sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 sw s0 , hexvar ( sp ) beqz v0 , hexvar lw gp , hexvar ( sp ) beqz s2 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 beqz v0 , hexvar lw gp , hexvar ( sp ) lw a0 , num ( s1 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num sub esp , hexvar push hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] sub esp , num push hexvar push eax call hexvar add esp , hexvar jmp hexvar cmp dword ptr [ ebp + num ] , num je hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] sub esp , num push hexvar push eax call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + num ] add eax , hexvar sub esp , num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] or edx , num mov dword ptr [ eax + hexvar ] , edx mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , num mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov esi , hexvar call hexvar mov esi , eax mov dword ptr [ rbp - num ] , esi jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov esi , hexvar call hexvar mov esi , eax mov dword ptr [ rbp - num ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rax mov rsi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] or edx , num mov dword ptr [ rax + hexvar ] , edx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r14 push r13 push r12 push rbp push rbx mov r12 , rdi mov r14 , rsi mov r13 , rdx mov rbp , rcx mov edi , hexvar call hexvar test rax , rax je hexvar mov rbx , rax test r12 , r12 je hexvar mov rdi , r12 call hexvar test rax , rax je hexvar mov qword ptr [ rbx + hexvar ] , rax mov qword ptr [ rbx + hexvar ] , r14 mov qword ptr [ rbx + hexvar ] , r13 mov dword ptr [ rbx + hexvar ] , hexvar mov rax , qword ptr [ rbp + hexvar ] lea rdi , [ rax + hexvar ] mov rsi , rbx call hexvar mov rax , qword ptr [ rbp ] or dword ptr [ rax + hexvar ] , num mov eax , num pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] push hexvar call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax test ebp , ebp je hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , hexvar sub esp , num push esi mov eax , dword ptr [ edi + num ] add eax , hexvar push eax call hexvar mov eax , dword ptr [ edi ] or dword ptr [ eax + hexvar ] , num add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , num mov edi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov esi , hexvar call hexvar mov esi , eax mov dword ptr [ rbp - num ] , esi jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp rax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rax ] mov esi , hexvar call hexvar mov esi , eax mov dword ptr [ rbp - num ] , esi jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] add rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdi , rax mov rsi , rcx call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rax + hexvar ] or edx , num mov dword ptr [ rax + hexvar ] , edx mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push r14 push r13 mov r14 , rdi push r12 push rbp mov edi , hexvar push rbx mov r13 , rsi mov r12 , rdx mov rbp , rcx call hexvar test rax , rax je hexvar test r14 , r14 mov rbx , rax je hexvar mov rdi , r14 call hexvar test rax , rax je hexvar mov qword ptr [ rbx + hexvar ] , rax mov rax , qword ptr [ rbp + hexvar ] mov rsi , rbx mov qword ptr [ rbx + hexvar ] , r13 mov qword ptr [ rbx + hexvar ] , r12 mov dword ptr [ rbx + hexvar ] , hexvar lea rdi , [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp ] or dword ptr [ rax + hexvar ] , num xor eax , eax pop rbx pop rbp pop r12 pop r13 pop r14 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rdi , [ rbp - hexvar ] call hexvar jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] test rax , rax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdx , qword ptr [ rax + hexvar ] mov eax , hexvar cmp rdx , rax je hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] add rax , hexvar mov r9 , rax lea r8 , [ rip + hexvar ] mov ecx , hexvar lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , hexvar mov eax , num call hexvar jmp hexvar lea rax , [ rbp - num ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] test rax , rax jne hexvar mov eax , num leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] test rdi , rdi sete al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax lea rdi , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rdi , [ rbp - hexvar ] call hexvar jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rcx cmp qword ptr [ rax ] , num sete dl mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] cmp rcx , rax jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rcx ] , rdx cmp qword ptr [ rcx ] , num sete sil mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] mov edx , hexvar cmp qword ptr [ rcx + hexvar ] , rdx sete sil mov byte ptr [ rbp - hexvar ] , sil mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] cmp dword ptr [ rcx + hexvar ] , num setne dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax ] add rcx , hexvar mov edi , hexvar movabs rsi , num movabs rdx , num mov r8d , hexvar mov qword ptr [ rbp - hexvar ] , rcx mov rcx , r8 movabs r8 , num mov r9 , qword ptr [ rbp - hexvar ] mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] test rdi , rdi sete al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num + hexvar ] jmp rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip + hexvar ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax lea rdi , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] test rdi , rdi sete al movzx ecx , al mov edi , ecx mov rdi , qword ptr [ rdi * num ] jmp rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov ecx , hexvar sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip ] jmp rax movabs rdi , num movabs rsi , num mov edx , hexvar movabs rcx , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] test ecx , ecx setne dl movzx ecx , dl mov eax , ecx mov rax , qword ptr [ rax * num ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov esi , num mov edx , num mov r8d , num xor ecx , ecx mov dil , cl mov ecx , hexvar mov r9d , hexvar mov byte ptr [ rbp - hexvar ] , dil mov edi , ecx mov rcx , r9 mov r9 , rax mov al , byte ptr [ rbp - hexvar ] call hexvar mov rcx , qword ptr [ rip ] mov dword ptr [ rbp - hexvar ] , eax jmp rcx mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num ] jmp rax lea rdi , [ rbp - hexvar ] call hexvar mov rdi , qword ptr [ rip ] jmp rdi mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rdi , [ rbp - hexvar ] call hexvar jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , hexvar cmp qword ptr [ rax + hexvar ] , rcx jne hexvar jmp hexvar movabs rdi , hexvar movabs rsi , hexvar mov edx , hexvar movabs rcx , hexvar call hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov edi , hexvar movabs rsi , hexvar movabs rdx , hexvar mov ecx , hexvar movabs r8 , hexvar mov r9 , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar lea rdi , [ rbp - hexvar ] call hexvar jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , ecx cmp qword ptr [ rbp - num ] , num jne hexvar movabs rax , hexvar mov qword ptr [ rbp - num ] , rax jmp hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , ecx mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rbp - hexvar ] mov dword ptr [ rax + num ] , ecx mov edx , dword ptr [ rbp - hexvar ] mov eax , edx pop rbp ret
call hexvar add eax , hexvar mov edx , dword ptr [ esp + num ] lea eax , [ eax + hexvar ] test edx , edx cmove edx , eax mov eax , dword ptr [ edx + num ] mov ecx , dword ptr [ esp + num ] mov dword ptr [ edx + num ] , ecx ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] str r2 , [ r3 , num ] ldr r3 , [ fp , - num ] mov r0 , r3 add sp , fp , num pop { fp } bx lr strdeq r2 , r3 , [ r3 ] , -r4
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar lea eax , [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi cmp dword ptr [ eax ] , num setne bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar lea eax , [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ ecx ] mov edi , dword ptr [ eax ] mov dword ptr [ edi + num ] , esi mov eax , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar cmp dword ptr [ ebp + num ] , num jne hexvar lea eax , [ eax + hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] test edx , edx setne bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov dword ptr [ ebp + num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx jne hexvar lea eax , [ hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] test edx , edx setne bl movzx edx , bl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax xor eax , eax mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax lea eax , [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , esp mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , num cmp dword ptr [ rbp - hexvar ] , num cmovns eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push edi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , edi xor edi , edi test eax , eax je hexvar sub esp , num push num push eax call hexvar add esp , hexvar test eax , eax mov ecx , num cmovs eax , ecx mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop edi ret
push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov esi , num call hexvar test eax , eax mov edx , num cmovs eax , edx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , num cmp dword ptr [ rbp - hexvar ] , num cmovns eax , dword ptr [ rbp - hexvar ] jmp hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx cmp eax , dword ptr [ ebp - num ] setg dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax call hexvar lea ecx , [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] bic r3 , r3 , r3 , asr num b hexvar sub r3 , fp , hexvar ldr r2 , [ fp , - hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar sub r3 , fp , hexvar mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi cmp qword ptr [ rbp - hexvar ] , num je hexvar xor esi , esi mov rdi , qword ptr [ rbp - hexvar ] call hexvar xor esi , esi mov dword ptr [ rbp - hexvar ] , eax cmp esi , dword ptr [ rbp - hexvar ] jle hexvar xor eax , eax mov dword ptr [ rbp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar lea rdi , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] movabs rsi , hexvar mov al , num call hexvar lea rdi , [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov ecx , eax mov dword ptr [ rbp - num ] , ecx mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jle hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar lea ecx , [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar xor eax , eax mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ ebp - num ] , eax cmp ecx , dword ptr [ ebp - num ] jle hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar lea eax , [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar lea ecx , [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rbx , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , rcx sub rax , rdi cmp rax , num jle hexvar lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx r12d , byte ptr [ rdi ] lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx ebp , byte ptr [ rdi + num ] lea r14 , [ rsp + num ] mov rsi , rcx mov rdi , r14 call hexvar mov r13 , rax mov rsi , rbx mov rdi , r14 call hexvar mov r14 , rax mov ebx , r12d and ebx , hexvar and ebp , hexvar test r12b , r12b js hexvar movzx esi , bpl lea rbp , [ rsp + hexvar ] mov rdi , rbp call hexvar movzx ecx , bl sub rsp , num shl r14 , num push r14 mov r9 , rbp mov r8 , r13 lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar add rsp , hexvar mov rax , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , eax mov dword ptr [ esp + hexvar ] , eax mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , edx mov edx , esi sub edx , eax cmp edx , num jle hexvar lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx edi , byte ptr [ eax ] lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx eax , byte ptr [ eax + num ] mov byte ptr [ esp + num ] , al lea ebp , [ esp + hexvar ] mov edx , esi mov eax , ebp call hexvar mov dword ptr [ esp + num ] , eax mov edx , esi mov eax , ebp call hexvar mov ebp , eax mov esi , edi and esi , hexvar movzx edx , byte ptr [ esp + num ] and edx , hexvar mov eax , edi test al , al js hexvar movzx edx , dl lea edi , [ esp + hexvar ] mov eax , edi call hexvar sub esp , num shl ebp , num push ebp push edi push dword ptr [ esp + hexvar ] mov eax , esi movzx esi , al push esi lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx ebp , byte ptr [ eax ] lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx esi , byte ptr [ eax + num ] lea edi , [ esp + hexvar ] mov eax , edi call hexvar mov dword ptr [ esp + num ] , eax mov eax , edi call hexvar mov dword ptr [ esp + num ] , eax mov edi , ebp and edi , hexvar mov edx , esi and edx , hexvar mov eax , ebp test al , al js hexvar movzx edx , dl lea ebp , [ esp + hexvar ] mov eax , ebp call hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] shl eax , num push eax push ebp push dword ptr [ esp + hexvar ] mov eax , edi movzx edi , al push edi lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , a0 , num sw v0 , hexvar ( sp ) lbu s0 , ( a0 ) addiu v0 , a0 , num sw v0 , hexvar ( sp ) lbu s1 , num ( a0 ) addiu s2 , sp , hexvar move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) move s4 , v1 move a0 , s2 jal hexvar nop lw gp , hexvar ( sp ) move s2 , v1 andi s3 , s0 , hexvar seb s0 , s0 bltz s0 , hexvar andi a1 , s1 , hexvar addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) sll s2 , s2 , num sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw s4 , hexvar ( sp ) move a3 , s3 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar addiu s0 , sp , hexvar move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) sll s2 , s2 , num sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw s4 , hexvar ( sp ) move a3 , s3 lui a2 , hexvar addiu a2 , a2 , - hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , num lw t9 , - hexvar ( gp )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx ebp , byte ptr [ eax ] lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx esi , byte ptr [ eax + num ] lea edi , [ esp + hexvar ] mov eax , edi call hexvar mov dword ptr [ esp + num ] , eax mov eax , edi call hexvar mov dword ptr [ esp + num ] , eax mov edi , ebp and edi , hexvar mov edx , esi and edx , hexvar mov eax , ebp test al , al js hexvar movzx edx , dl lea ebp , [ esp + hexvar ] mov eax , ebp call hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] shl eax , num push eax push ebp push dword ptr [ esp + hexvar ] mov eax , edi movzx edi , al push edi lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx ebp , byte ptr [ eax ] lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx esi , byte ptr [ eax + num ] lea edi , [ esp + hexvar ] mov eax , edi call hexvar mov dword ptr [ esp + num ] , eax mov eax , edi call hexvar mov dword ptr [ esp + num ] , eax mov edi , ebp and edi , hexvar mov edx , esi and edx , hexvar mov eax , ebp test al , al js hexvar movzx edx , dl lea ebp , [ esp + hexvar ] mov eax , ebp call hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] shl eax , num push eax push ebp push dword ptr [ esp + hexvar ] mov eax , edi movzx edi , al push edi lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edx , eax mov dword ptr [ esp + hexvar ] , eax mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , edx mov edx , esi sub edx , eax cmp edx , num jle hexvar lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx edi , byte ptr [ eax ] lea edx , [ eax + num ] mov dword ptr [ esp + hexvar ] , edx movzx eax , byte ptr [ eax + num ] mov byte ptr [ esp + num ] , al lea ebp , [ esp + hexvar ] mov edx , esi mov eax , ebp call hexvar mov dword ptr [ esp + num ] , eax mov edx , esi mov eax , ebp call hexvar mov ebp , eax mov esi , edi and esi , hexvar movzx edx , byte ptr [ esp + num ] and edx , hexvar mov eax , edi test al , al js hexvar movzx edx , dl lea edi , [ esp + hexvar ] mov eax , edi call hexvar sub esp , num shl ebp , num push ebp push edi push dword ptr [ esp + hexvar ] mov eax , esi movzx esi , al push esi lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rbx , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , rcx sub rax , rdi cmp rax , num jle hexvar lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx r12d , byte ptr [ rdi ] lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx ebp , byte ptr [ rdi + num ] lea r14 , [ rsp + num ] mov rsi , rcx mov rdi , r14 call hexvar mov r13 , rax mov rsi , rbx mov rdi , r14 call hexvar mov r14 , rax mov ebx , r12d and ebx , hexvar and ebp , hexvar test r12b , r12b js hexvar movzx esi , bpl lea rbp , [ rsp + hexvar ] mov rdi , rbp call hexvar movzx ecx , bl sub rsp , num shl r14 , num push r14 mov r9 , rbp mov r8 , r13 lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar add rsp , hexvar mov rax , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rdi mov rbx , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov rax , rcx sub rax , rdi cmp rax , num jle hexvar lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx r12d , byte ptr [ rdi ] lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx ebp , byte ptr [ rdi + num ] lea r14 , [ rsp + num ] mov rsi , rcx mov rdi , r14 call hexvar mov r13 , rax mov rsi , rbx mov rdi , r14 call hexvar mov r14 , rax mov ebx , r12d and ebx , hexvar and ebp , hexvar test r12b , r12b js hexvar movzx esi , bpl lea rbp , [ rsp + hexvar ] mov rdi , rbp call hexvar movzx ecx , bl sub rsp , num shl r14 , num push r14 mov r9 , rbp mov r8 , r13 lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar add rsp , hexvar mov rax , qword ptr [ rsp + num ] mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx r13d , byte ptr [ rdi ] lea rax , [ rdi + num ] mov qword ptr [ rsp + num ] , rax movzx ebx , byte ptr [ rdi + num ] lea rbp , [ rsp + num ] mov rdi , rbp call hexvar mov r14 , rax mov rdi , rbp call hexvar mov r12 , rax mov ebp , r13d and ebp , hexvar and ebx , hexvar test r13b , r13b js hexvar movzx esi , bl lea rbx , [ rsp + hexvar ] mov rdi , rbx call hexvar movzx ecx , bpl sub rsp , num shl r12 , num push r12 mov r9 , rbx mov r8 , r14 lea rdx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar add rsp , hexvar mov rax , qword ptr [ rsp + num ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num mov eax , dword ptr [ eax + hexvar ] push eax push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , esi mov ecx , dword ptr [ ecx ] mov eax , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ eax ] mov esi , dword ptr [ ebp - num ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , esi lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a2 , - hexvar ( gp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ fp , - num ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num mov eax , dword ptr [ eax + hexvar ] push eax push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar leave ret
ldr r3 , [ pc , hexvar ] push { r4 , lr } mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num ldr r4 , [ r3 ] bl hexvar ldr r2 , [ pc , hexvar ] mov r3 , r0 mov r1 , num mov r0 , r4 bl hexvar bl hexvar andeq fp , r2 , r0 , lsl num andeq sl , r1 , r8 , asr num andeq sb , r1 , r4 , asr num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea esi , [ hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar nop nop nop nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
push rbp mov rbp , rsp lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov eax , dword ptr [ rip + hexvar ] mov rcx , rdx lea rdx , [ rip + hexvar ] mov esi , num mov edi , eax mov eax , num call hexvar call hexvar
sub rsp , num mov edx , num mov esi , hexvar xor edi , edi call hexvar mov edi , dword ptr [ rip + hexvar ] mov rcx , rax mov edx , hexvar xor esi , esi xor eax , eax call hexvar call hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
push { r4 , r5 , fp , lr } add fp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r4 , [ r3 ] ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 ldr r2 , [ pc , hexvar ] mov r1 , num mov r0 , r4 bl hexvar bl hexvar strdeq sb , sl , [ r2 ] , -r4
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push num push eax push num call hexvar lea edx , [ ebx + hexvar ] mov edx , dword ptr [ edx ] push eax lea eax , [ ebx - hexvar ] push eax push num push edx call hexvar add esp , hexvar call hexvar nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , num lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar call hexvar nop nop nop nop nop
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , num mov r6 , r1 mov r7 , r2 mov r8 , r3 mov r5 , r0 bl hexvar mov r4 , r0 bl hexvar ldr r0 , [ r0 ] cmp r0 , num beq hexvar str r8 , [ sp ] mov r3 , r7 mov r2 , r6 mov r1 , r5 bl hexvar mov r0 , r4 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a1 sw s4 , hexvar ( sp ) move s4 , a0 sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s2 , a2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s1 , v0 lw s0 , ( v0 )
push r15 push r14 push r13 push r12 mov r13 , rcx push rbp push rbx mov rbp , rsi mov rbx , rdi mov r12 , rdx sub rsp , num call hexvar mov r15d , eax call hexvar mov r14d , dword ptr [ rax ] test r14d , r14d je hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov esi , r14d mov rdx , rax xor edi , edi xor eax , eax call hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar xor esi , esi mov rdx , rax xor edi , edi xor eax , eax call hexvar mov rdx , r12 mov rcx , r13 mov esi , num mov edi , num call hexvar mov rcx , rbp mov rdx , rbx mov esi , num xor edi , edi mov r12 , rax call hexvar mov edx , num mov esi , hexvar xor edi , edi mov rbx , rax call hexvar mov edi , dword ptr [ rip + hexvar ] mov rdx , rax mov r8 , r12 mov rcx , rbx xor esi , esi xor eax , eax call hexvar add rsp , num mov eax , r15d pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a3 sw s3 , hexvar ( sp ) move s3 , a2 sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , a0 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 lw a0 , ( v0 )
push { r4 , r5 , r6 , r7 , r8 , lr } sub sp , sp , num mov r6 , r1 mov r7 , r2 mov r8 , r3 mov r5 , r0 bl hexvar mov r4 , r0 bl hexvar ldr r0 , [ r0 ] cmp r0 , num beq hexvar str r8 , [ sp ] mov r3 , r7 mov r2 , r6 mov r1 , r5 bl hexvar mov r0 , r4 add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edi mov dword ptr [ esp + num ] , ebx mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , edi call hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 ldr r3 , [ r3 ] str r3 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] str r3 , [ sp ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp push rbx lea rsi , [ rip + hexvar ] mov rbp , rdi mov edx , hexvar mov edi , hexvar sub rsp , num call hexvar test rax , rax mov rbx , rax je hexvar lea rsi , [ rip + hexvar ] mov edx , hexvar mov edi , hexvar call hexvar test rax , rax mov qword ptr [ rbx + num ] , rax je hexvar mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num movabs rax , hexvar mov qword ptr [ rbx + hexvar ] , rbp mov dword ptr [ rbx ] , num mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov dword ptr [ esi + num ] , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax ] , num mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esi + num ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num mov eax , esi add esp , num pop ebx pop esi ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , hexvar bl hexvar mov r2 , r0 ldr r3 , [ sp , hexvar ] str r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar mov r3 , num str r3 , [ sp , num ] b hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ r3 , num ] ldr r3 , [ sp , num ] lsl r3 , r3 , num add r3 , r2 , r3 mov r2 , num str r2 , [ r3 ] ldr r3 , [ sp , num ] add r3 , r3 , num str r3 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num ble hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ sp , num ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 ] ldr r3 , [ sp , hexvar ] mov r2 , num str r2 , [ r3 , num ] ldr r3 , [ sp , hexvar ] b hexvar mov r0 , r0 b hexvar mov r0 , r0 ldr r3 , [ sp , hexvar ] cmp r3 , num beq hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s2 , hexvar ( sp ) move s2 , a0 sw s0 , hexvar ( sp ) addiu a1 , s1 , - hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , s1 , - hexvar jalr t9 addiu a0 , zero , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , num ( s0 ) sw zero , ( v0 ) sw zero , num ( v0 ) sw zero , num ( v0 ) sw zero , hexvar ( v0 ) addiu v0 , zero , num sw s2 , hexvar ( s0 ) sw v0 , hexvar ( s0 ) sw zero , ( s0 ) sw zero , num ( s0 ) lw ra , hexvar ( sp ) move v0 , s0 lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) move a0 , s0 jalr t9 move s0 , zero move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp push rbx lea rsi , [ rip + hexvar ] mov rbp , rdi mov edx , hexvar mov edi , hexvar sub rsp , num call hexvar test rax , rax mov rbx , rax je hexvar lea rsi , [ rip + hexvar ] mov edx , hexvar mov edi , hexvar call hexvar test rax , rax mov qword ptr [ rbx + num ] , rax je hexvar mov qword ptr [ rax ] , num mov qword ptr [ rax + num ] , num mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num movabs rax , hexvar mov qword ptr [ rbx + hexvar ] , rbp mov dword ptr [ rbx ] , num mov qword ptr [ rbx + hexvar ] , rax add rsp , num mov rax , rbx pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 lw v0 , hexvar ( sp ) sw v1 , num ( v0 ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 ) beqz v0 , hexvar nop sw zero , hexvar ( sp ) b hexvar nop lw v0 , hexvar ( sp ) lw v1 , num ( v0 ) lw v0 , hexvar ( sp ) sll v0 , v0 , num addu v0 , v1 , v0 sw zero , ( v0 ) lw v0 , hexvar ( sp ) addiu v0 , v0 , num sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) slti v0 , v0 , num bnez v0 , hexvar nop lw v0 , hexvar ( sp ) lw v1 , hexvar ( sp ) sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) addiu v1 , zero , num sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) sw zero , ( v0 ) lw v0 , hexvar ( sp ) sw zero , num ( v0 ) lw v0 , hexvar ( sp ) b hexvar nop nop b hexvar nop nop lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r14 push rbx push rax mov r14 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov qword ptr [ rax ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + num ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbx + num ] mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx ] , num movabs rax , hexvar mov qword ptr [ rbx + hexvar ] , rax jmp hexvar mov rdi , rbx call hexvar xor ebx , ebx mov rax , rbx add rsp , num pop rbx pop r14 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 addiu a2 , zero , hexvar lui a1 , hexvar addiu a1 , a1 , - hexvar addiu a0 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar sw v0 , num ( s0 )
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num lea edi , [ ebx - hexvar ] push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi ] , num mov dword ptr [ esi + num ] , num mov dword ptr [ esi + hexvar ] , eax mov eax , esi pop ebx pop esi pop edi ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov dword ptr [ esp + num ] , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ esp + num ] shl edx , num add eax , edx mov dword ptr [ eax ] , num add dword ptr [ esp + num ] , num cmp dword ptr [ esp + num ] , num jle hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] jmp hexvar nop jmp hexvar nop cmp dword ptr [ esp + hexvar ] , num je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r8 mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rcx ] mov qword ptr [ rsi ] , rax mov rdi , qword ptr [ rdx ] mov rsi , qword ptr [ rsi ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , rsp add rdx , - hexvar mov rsp , rdx mov rsi , rsp add rsi , - hexvar mov rsp , rsi mov rdi , qword ptr [ rbp - num ] mov qword ptr [ rax ] , rdi mov r8 , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , r8 mov rax , qword ptr [ rax ] mov qword ptr [ rdx ] , rax mov rax , qword ptr [ rcx ] mov qword ptr [ rsi ] , rax mov rdi , qword ptr [ rdx ] mov rsi , qword ptr [ rsi ] call hexvar mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jl hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jl hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + num ] add ecx , - num mov dword ptr [ eax + num ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + ecx * num + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + hexvar ] , num js hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp + hexvar ] , eax jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] add edx , num shl edx , num lea ecx , [ eax + edx ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] shl edx , num add edx , eax mov eax , dword ptr [ ecx ] mov dword ptr [ edx ] , eax add dword ptr [ ebp + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp + hexvar ] , eax jl hexvar jmp hexvar nop pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] shr rsi , hexvar mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + num ] sub rax , rcx setge dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rax + num ] add rcx , - num mov qword ptr [ rax + num ] , rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rcx + num ] sub rax , rcx setl dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + rcx * num + num ] mov qword ptr [ rax + rcx * num ] , rdx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax pop rbp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + hexvar ] , num js hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp + hexvar ] , eax jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] add edx , num shl edx , num lea ecx , [ eax + edx ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] shl edx , num add edx , eax mov eax , dword ptr [ ecx ] mov dword ptr [ edx ] , eax add dword ptr [ ebp + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp + hexvar ] , eax jl hexvar jmp hexvar nop pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jl hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jl hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + num ] add ecx , - num mov dword ptr [ eax + num ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + ecx * num + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar add esp , num pop ebp ret
test edx , edx js hexvar mov ecx , dword ptr [ eax + num ] cmp ecx , edx jle hexvar sub ecx , num mov dword ptr [ eax + num ] , ecx cmp ecx , edx jle hexvar push esi push ebx lea ecx , [ edx * num + num ] mov ebx , dword ptr [ eax + num ] mov esi , dword ptr [ ebx + ecx ] mov dword ptr [ ebx + ecx - num ] , esi add edx , num add ecx , num cmp dword ptr [ eax + num ] , edx jg hexvar pop ebx pop esi ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + hexvar ] , num js hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp + hexvar ] , eax jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] add edx , num shl edx , num lea ecx , [ eax + edx ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] shl edx , num add edx , eax mov eax , dword ptr [ ecx ] mov dword ptr [ edx ] , eax add dword ptr [ ebp + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp + hexvar ] , eax jl hexvar jmp hexvar nop pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jl hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jl hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + num ] sub ecx , hexvar add ecx , - num add ecx , hexvar mov dword ptr [ eax + num ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + ecx * num + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + edx * num ] , eax xor eax , eax mov ecx , dword ptr [ ebp + hexvar ] sub eax , num sub ecx , eax mov dword ptr [ ebp + hexvar ] , ecx jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp dword ptr [ ebp + hexvar ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jl hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jl hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ eax + num ] add ecx , - num mov dword ptr [ eax + num ] , ecx mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + ecx * num + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ecx + edx * num ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , num mov dword ptr [ ebp + hexvar ] , eax jmp hexvar add esp , num pop ebp ret
push ebp mov ebp , esp call hexvar add eax , hexvar cmp dword ptr [ ebp + hexvar ] , num js hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp + hexvar ] , eax jge hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] lea edx , [ eax - num ] mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax + num ] , edx jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] add edx , num shl edx , num lea ecx , [ eax + edx ] mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + hexvar ] shl edx , num add edx , eax mov eax , dword ptr [ ecx ] mov dword ptr [ edx ] , eax add dword ptr [ ebp + hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp + hexvar ] , eax jl hexvar jmp hexvar nop pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + num ] , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + num ] , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , r6 , r7 , lr } mov r4 , r0 mov r6 , r2 mov r7 , r3 ldr r2 , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] bl hexvar mov r2 , r6 mov r3 , r7 mov r1 , r4 pop { r4 , r6 , r7 , lr } mov r0 , num b hexvar andeq sp , r1 , r4 , lsl num andeq sp , r1 , r0 , lsl num
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + num ] , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , ebx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , ecx lea edx , [ hexvar ] mov dword ptr [ esp + num ] , edx lea edx , [ hexvar ] mov dword ptr [ esp + hexvar ] , edx call hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rdx lea rcx , [ rip + hexvar ] lea rdx , [ rip + hexvar ] call hexvar mov rdx , rbp mov rsi , rbx mov edi , num mov eax , num call hexvar add rsp , num pop rbx pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx - hexvar ] , ebx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ edx - hexvar ] , esi mov esi , dword ptr [ eax - hexvar ] mov ecx , dword ptr [ ecx - hexvar ] sub esp , hexvar mov edi , esp mov dword ptr [ edi + num ] , ecx mov dword ptr [ edi ] , esi mov dword ptr [ edi + hexvar ] , hexvar mov dword ptr [ edi + num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx - hexvar ] mov edi , dword ptr [ edx - hexvar ] sub esp , hexvar mov ebx , esp mov dword ptr [ ebx + num ] , edi mov dword ptr [ ebx + num ] , esi mov dword ptr [ ebx ] , ecx call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) lui a3 , hexvar move s2 , a2 sw s0 , hexvar ( sp ) lui a2 , hexvar sw ra , hexvar ( sp ) addiu gp , gp , - hexvar addiu a3 , a3 , hexvar addiu a2 , a2 , hexvar sw gp , hexvar ( sp ) jal hexvar move s0 , a0 move a3 , s3 lw gp , hexvar ( sp ) move a2 , s2 lw ra , hexvar ( sp ) move a1 , s0 lw s3 , hexvar ( sp ) addiu a0 , zero , num lw s2 , hexvar ( sp ) lw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + num ] , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + num ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax ] , edi mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ eax + num ] , hexvar mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi call hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + num ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub ecx , hexvar sbb eax , num setb dl movzx esi , dl movsd xmm0 , qword ptr [ esi * num + hexvar ] cvtsd2ss xmm0 , xmm0 mov esi , dword ptr [ ebp - hexvar ] movss dword ptr [ esi + hexvar ] , xmm0 mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + num ] , ebx mov dword ptr [ eax + num ] , edi mov dword ptr [ eax ] , esi mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax setne al movzx ecx , al mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov edx , dword ptr [ eax + hexvar ] sub ecx , hexvar sbb edx , num setb bl movzx esi , bl movsd xmm0 , qword ptr [ esi * num + hexvar ] cvtsd2ss xmm0 , xmm0 movss dword ptr [ eax + hexvar ] , xmm0 mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] dec ecx mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebx sub esp , num call hexvar add ebx , hexvar mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] call hexvar mov edx , eax mov eax , num test edx , edx je hexvar cmp dword ptr [ edx + hexvar ] , num ja hexvar cmp dword ptr [ edx + hexvar ] , hexvar jbe hexvar fld dword ptr [ ebx - hexvar ] fstp dword ptr [ edx + hexvar ] mov eax , num add esp , num pop ebx ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub ecx , hexvar sbb eax , num setb dl movzx esi , dl movsd xmm0 , qword ptr [ esi * num + hexvar ] cvtsd2ss xmm0 , xmm0 mov esi , dword ptr [ ebp - hexvar ] movss dword ptr [ esi + hexvar ] , xmm0 mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub ecx , hexvar sbb eax , num setb dl movzx esi , dl movsd xmm0 , qword ptr [ esi * num + hexvar ] cvtsd2ss xmm0 , xmm0 mov esi , dword ptr [ ebp - hexvar ] movss dword ptr [ esi + hexvar ] , xmm0 mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub ecx , hexvar sbb eax , num setb dl movzx esi , dl movsd xmm0 , qword ptr [ esi * num + hexvar ] cvtsd2ss xmm0 , xmm0 mov esi , dword ptr [ ebp - hexvar ] movss dword ptr [ esi + hexvar ] , xmm0 mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbx mov rax , rdi mov rdi , rsi mov rbx , rdx mov rdx , rax mov rsi , rbx call hexvar test rax , rax je hexvar movss xmm0 , dword ptr [ rip + hexvar ] cmp qword ptr [ rax + hexvar ] , hexvar jbe hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rax + hexvar ] , xmm0 mov eax , num jmp hexvar sub dword ptr [ rbx ] , num mov eax , num pop rbx ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] add r4 , r3 , hexvar ldm r4 , { r3 , r4 } cmp r4 , num cmpeq r3 , hexvar bhi hexvar ldr r2 , [ pc , hexvar ] b hexvar ldr r2 , [ pc , hexvar ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , hexvar ] mov r3 , num b hexvar ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] sub r2 , r3 , num ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] mov r3 , num mov r0 , r3 sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub ecx , hexvar sbb eax , num setb dl movzx esi , dl movsd xmm0 , qword ptr [ esi * num + hexvar ] cvtsd2ss xmm0 , xmm0 mov esi , dword ptr [ ebp - hexvar ] movss dword ptr [ esi + hexvar ] , xmm0 mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] sub ecx , hexvar sbb eax , num setb dl movzx esi , dl movsd xmm0 , qword ptr [ esi * num + hexvar ] cvtsd2ss xmm0 , xmm0 mov esi , dword ptr [ ebp - hexvar ] movss dword ptr [ esi + hexvar ] , xmm0 mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx mov byte ptr [ ebp - hexvar ] , num mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esi + num ] cmp dword ptr [ edi + num ] , num je hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 ) lw v0 , num ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw zero , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbx + num ] mov r12d , num cmp dword ptr [ rax + num ] , num je hexvar mov eax , r12d add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbx + num ] cmp dword ptr [ rax + num ] , num je hexvar xor eax , eax add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbx + num ] mov r12d , num cmp dword ptr [ rax + num ] , num je hexvar mov eax , r12d add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + num ] , ecx mov edi , dword ptr [ eax + hexvar ] mov esi , dword ptr [ edi + num ] cmp dword ptr [ esi + num ] , num je hexvar mov esi , num mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esi + num ] cmp dword ptr [ edi + num ] , num je hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ eax + hexvar ] mov edi , dword ptr [ esi + num ] cmp dword ptr [ edi + num ] , num je hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s0 , hexvar ( a0 ) lw v0 , num ( s0 )
sub rsp , num lea rcx , [ rip + hexvar ] mov edx , num lea rax , [ rip + hexvar ] jmp hexvar add edx , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar add rcx , num mov rax , qword ptr [ rcx ] test rax , rax je hexvar test rax , rax jne hexvar jmp hexvar lea edi , [ rdx + num ] movsxd rdi , edi shl rdi , num call hexvar test rax , rax je hexvar mov rcx , rax lea rdi , [ rip + hexvar ] lea rdx , [ rip + hexvar ] jmp hexvar mov rsi , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rsi add rcx , num mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx jne hexvar add rdi , num mov rdx , qword ptr [ rdi ] test rdx , rdx je hexvar test rdx , rdx jne hexvar jmp hexvar mov qword ptr [ rcx ] , num add rsp , num ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar move a1 , zero sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) b hexvar lw v0 , - hexvar ( gp ) move a1 , v1 lw v0 , hexvar ( v0 ) bnez v0 , hexvar addiu v1 , a1 , num addiu a1 , a1 , num lui t9 , hexvar move a0 , zero addiu t9 , t9 , hexvar bal hexvar sll a1 , a1 , num beqz v0 , hexvar lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp ) move a0 , v0 lw a1 , hexvar ( v1 ) addiu a0 , a0 , num lw v1 , hexvar ( v1 ) bnez v1 , hexvar sw a1 , - num ( a0 )
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , num mov dword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num cdqe shl rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num jne hexvar add qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] test rax , rax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] leave ret
sub rsp , num lea rcx , [ rip + hexvar ] mov edx , num lea rax , [ rip + hexvar ] jmp hexvar add edx , num mov rax , qword ptr [ rax + hexvar ] test rax , rax jne hexvar add rcx , num mov rax , qword ptr [ rcx ] test rax , rax je hexvar test rax , rax jne hexvar jmp hexvar lea edi , [ rdx + num ] movsxd rdi , edi shl rdi , num call hexvar test rax , rax je hexvar mov rcx , rax lea rdi , [ rip + hexvar ] lea rdx , [ rip + hexvar ] jmp hexvar mov rsi , qword ptr [ rdx + hexvar ] mov qword ptr [ rcx ] , rsi add rcx , num mov rdx , qword ptr [ rdx + hexvar ] test rdx , rdx jne hexvar add rdi , num mov rdx , qword ptr [ rdi ] test rdx , rdx je hexvar test rdx , rdx jne hexvar jmp hexvar mov qword ptr [ rcx ] , num add rsp , num ret
sub rsp , num lea rdi , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor edx , edx lea rax , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov edx , ecx mov rax , qword ptr [ rax + hexvar ] lea ecx , [ rdx + num ] test rax , rax jne hexvar add rsi , num test rdi , rdi je hexvar mov rax , rdi mov edx , ecx mov rdi , qword ptr [ rsi + num ] jmp hexvar nop word ptr [ rax + rax ] lea edi , [ rdx + num ] movsxd rdi , edi shl rdi , num call hexvar test rax , rax je hexvar lea r8 , [ rip + hexvar ] lea rdi , [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rcx , rax nop dword ptr [ rax ] mov rsi , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] add rcx , num mov qword ptr [ rcx - num ] , rsi test rdx , rdx jne hexvar add rdi , num test r8 , r8 je hexvar mov rdx , r8 mov r8 , qword ptr [ rdi + num ] jmp hexvar nop mov qword ptr [ rcx ] , num add rsp , num ret
push { r4 , lr } ldr r2 , [ pc , hexvar ] mov r0 , num ldr r3 , [ pc , hexvar ] b hexvar add r0 , r0 , num ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ r2 , num ] ! cmp r3 , num beq hexvar cmp r3 , num bne hexvar b hexvar add r0 , r0 , num lsl r0 , r0 , num bl hexvar cmp r0 , num popeq { r4 , pc } mov r2 , r0 ldr ip , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] b hexvar ldr r1 , [ r3 , hexvar ] str r1 , [ r2 ] , num ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ ip , num ] ! cmp r3 , num beq hexvar cmp r3 , num bne hexvar b hexvar mov r3 , num str r3 , [ r2 ] pop { r4 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
sub rsp , num lea rdi , [ rip + hexvar ] lea rsi , [ rip + hexvar ] xor edx , edx lea rax , [ rip + hexvar ] jmp hexvar nop dword ptr [ rax ] mov edx , ecx mov rax , qword ptr [ rax + hexvar ] lea ecx , [ rdx + num ] test rax , rax jne hexvar add rsi , num test rdi , rdi je hexvar mov rax , rdi mov edx , ecx mov rdi , qword ptr [ rsi + num ] jmp hexvar nop word ptr [ rax + rax ] lea edi , [ rdx + num ] movsxd rdi , edi shl rdi , num call hexvar test rax , rax je hexvar lea r8 , [ rip + hexvar ] lea rdi , [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rcx , rax nop dword ptr [ rax ] mov rsi , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] add rcx , num mov qword ptr [ rcx - num ] , rsi test rdx , rdx jne hexvar add rdi , num test r8 , r8 je hexvar mov rdx , r8 mov r8 , qword ptr [ rdi + num ] jmp hexvar nop mov qword ptr [ rcx ] , num add rsp , num ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui a2 , hexvar sw s0 , hexvar ( sp ) move v1 , zero addiu s0 , a2 , - hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) move a0 , s0 lw v0 , hexvar ( v0 ) move a1 , v1 bnez v0 , hexvar addiu v1 , v1 , num addiu a0 , a0 , num lw v0 , ( a0 ) bnez v0 , hexvar addiu a1 , a1 , num lw t9 , - hexvar ( gp ) move a0 , zero bal hexvar sll a1 , a1 , num beqz v0 , hexvar lw gp , hexvar ( sp ) lw v1 , - hexvar ( gp ) move a0 , v0 move a2 , s0 lw a1 , hexvar ( v1 ) addiu a0 , a0 , num lw v1 , hexvar ( v1 ) bnez v1 , hexvar sw a1 , - num ( a0 ) addiu a2 , a2 , num lw v1 , ( a2 ) bnez v1 , hexvar nop sw zero , ( a0 ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
lea rsi , [ rip + hexvar ] lea rax , [ rip + hexvar ] sub rsp , num xor edx , edx nop dword ptr [ rax ] mov rax , qword ptr [ rax + hexvar ] mov ecx , edx add edx , num test rax , rax jne hexvar add rsi , num mov rax , qword ptr [ rsi ] test rax , rax jne hexvar lea edi , [ rcx + num ] movsxd rdi , edi shl rdi , num call hexvar test rax , rax je hexvar lea rdi , [ rip + hexvar ] lea rdx , [ rip + hexvar ] mov rcx , rax nop word ptr [ rax + rax ] mov rsi , qword ptr [ rdx + hexvar ] mov rdx , qword ptr [ rdx + hexvar ] add rcx , num mov qword ptr [ rcx - num ] , rsi test rdx , rdx jne hexvar add rdi , num mov rdx , qword ptr [ rdi ] test rdx , rdx jne hexvar mov qword ptr [ rcx ] , num add rsp , num ret
call hexvar add eax , hexvar push edi push esi xor edx , edx push ebx lea ebx , [ eax - hexvar ] lea esi , [ eax - hexvar ] mov edi , esi mov eax , ebx nop mov eax , dword ptr [ eax + hexvar ] mov ecx , edx add edx , num test eax , eax jne hexvar add edi , num mov eax , dword ptr [ edi ] test eax , eax jne hexvar lea eax , [ ecx * num + num ] sub esp , num xor edx , edx push edx push eax call hexvar add esp , hexvar test eax , eax je hexvar mov ecx , eax mov edx , ebx nop lea esi , [ esi ] mov ebx , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] add ecx , num mov dword ptr [ ecx - num ] , ebx test edx , edx jne hexvar add esi , num mov edx , dword ptr [ esi ] test edx , edx jne hexvar mov dword ptr [ ecx ] , num pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ecx , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + num ] mov edi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov ebx , dword ptr [ ebp + hexvar ] lea edx , [ ebx + num ] mov dword ptr [ ebp + hexvar ] , edx mov edx , dword ptr [ edi + hexvar ] movzx edx , byte ptr [ edx + num ] imul ebx , edx add ebx , eax add edx , ebx add eax , dword ptr [ ebp + hexvar ] cmp edx , eax ja hexvar sub esp , num mov eax , dword ptr [ edi + hexvar ] push ebx push dword ptr [ esp + hexvar ] push esi call dword ptr [ eax + hexvar ] add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rdx + hexvar ] mov eax , dword ptr [ rdx + hexvar ] mov ecx , eax add ecx , num mov dword ptr [ rdx + hexvar ] , ecx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] movzx ecx , byte ptr [ rdx + num ] imul eax , ecx mov edx , eax add rsi , rdx mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] movzx edx , byte ptr [ rcx + num ] mov ecx , edx add rax , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rcx + hexvar ] mov rcx , qword ptr [ rcx + hexvar ] add rcx , rsi sub rax , rcx setbe dil movzx edx , dil mov ecx , edx mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov edi , hexvar mov esi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] jmp rdi mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r0 mov r7 , r2 ldr r3 , [ r0 , num ] ldr r6 , [ r3 , hexvar ] ldr r3 , [ r1 , hexvar ] ldr r0 , [ r1 , hexvar ] add r2 , r0 , num str r2 , [ r1 , hexvar ] ldr r2 , [ r6 , hexvar ] ldrb r2 , [ r2 , num ] mla r4 , r2 , r0 , r3 add r2 , r4 , r2 ldr r1 , [ r1 , hexvar ] add r3 , r3 , r1 cmp r2 , r3 bhi hexvar ldr r3 , [ r6 , hexvar ] ldr r3 , [ r3 , hexvar ] mov r2 , r4 mov r1 , r7 mov r0 , r5 blx r3 pop { r4 , r5 , r6 , r7 , r8 , pc }
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov r13 , rdx mov rax , qword ptr [ rdi + num ] mov r12 , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov ecx , dword ptr [ rsi + hexvar ] lea eax , [ rcx + num ] mov dword ptr [ rsi + hexvar ] , eax mov rax , qword ptr [ r12 + hexvar ] movzx eax , byte ptr [ rax + num ] movzx ebx , al imul ebx , ecx add rbx , rdx movzx eax , al add rax , rbx add rdx , qword ptr [ rsi + hexvar ] cmp rax , rdx ja hexvar mov rax , qword ptr [ r12 + hexvar ] mov rdx , rbx mov rsi , r13 mov rdi , rbp call qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s1 , a0 lw v0 , num ( a0 )
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov r13 , rdx mov rax , qword ptr [ rdi + num ] mov r12 , qword ptr [ rax + hexvar ] mov rdx , qword ptr [ rsi + hexvar ] mov ecx , dword ptr [ rsi + hexvar ] lea eax , [ rcx + num ] mov dword ptr [ rsi + hexvar ] , eax mov rax , qword ptr [ r12 + hexvar ] movzx eax , byte ptr [ rax + num ] movzx ebx , al imul ebx , ecx add rbx , rdx movzx eax , al add rax , rbx add rdx , qword ptr [ rsi + hexvar ] cmp rax , rdx ja hexvar mov rax , qword ptr [ r12 + hexvar ] mov rdx , rbx mov rsi , r13 mov rdi , rbp call qword ptr [ rax + hexvar ] add rsp , num pop rbx pop rbp pop r12 pop r13 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push r12 push rbp mov rbp , rdx push rbx mov rbx , rdi sub rsp , hexvar mov rax , qword ptr [ rdi + num ] mov r8d , dword ptr [ rsi + hexvar ] mov rcx , qword ptr [ rsi + hexvar ] mov r12 , qword ptr [ rax + hexvar ] lea eax , [ r8 + num ] mov dword ptr [ rsi + hexvar ] , eax mov rdi , qword ptr [ r12 + hexvar ] movzx edx , byte ptr [ rdi + num ] mov rax , rdx imul edx , r8d add rdx , rcx add rcx , qword ptr [ rsi + hexvar ] add rax , rdx cmp rax , rcx jbe hexvar lea rdi , [ rip + hexvar ] mov esi , hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rdi , qword ptr [ r12 + hexvar ] mov rdx , qword ptr [ rsp + num ] mov rax , qword ptr [ rdi + hexvar ] add rsp , hexvar mov rsi , rbp mov rdi , rbx pop rbx pop rbp pop r12 jmp rax nop word ptr [ rax + rax ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rdx + num ] mov rdx , qword ptr [ rdx + hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rdx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rsi + hexvar ] mov ecx , eax add ecx , num mov dword ptr [ rsi + hexvar ] , ecx mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + hexvar ] movzx ecx , byte ptr [ rsi + num ] imul eax , ecx mov eax , eax mov esi , eax add rdx , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] movzx edx , byte ptr [ rcx + num ] movsxd rcx , edx add rax , rcx mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx + hexvar ] mov rsi , qword ptr [ rbp - hexvar ] add rcx , qword ptr [ rsi + hexvar ] cmp rax , rcx jbe hexvar movabs rdi , hexvar mov esi , hexvar call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] call rax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push r12 push rbp push rbx mov rbp , rdi mov r12 , rsi call hexvar mov ebx , eax mov rdi , r12 call hexvar cmp bl , al ja hexvar mov eax , num jb hexvar mov r12 , qword ptr [ r12 ] mov esi , hexvar mov rdi , r12 call hexvar mov rbx , rax mov rbp , qword ptr [ rbp ] mov esi , hexvar mov rdi , rbp call hexvar test rax , rax je hexvar test rbx , rbx je hexvar mov rsi , rax mov rdi , rbx jmp hexvar mov rsi , rax mov edi , hexvar call hexvar test eax , eax jne hexvar mov rsi , rbp mov rdi , r12 call hexvar jmp hexvar mov eax , hexvar jmp hexvar mov esi , hexvar test rbx , rbx jne hexvar jmp hexvar pop rbx pop rbp pop r12 ret
mov edx , dword ptr [ rsi + hexvar ] mov ecx , dword ptr [ rdi + hexvar ] cmp edx , num sete al cmp edx , num sete dl or eax , edx cmp ecx , num je hexvar cmp ecx , num je hexvar mov edx , dword ptr [ rdi + hexvar ] and edx , hexvar test al , al je hexvar cmp edx , hexvar je hexvar mov eax , num ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx call hexvar and al , num mov byte ptr [ ebp - num ] , al test byte ptr [ ebp - num ] , num je hexvar test byte ptr [ ebp - num ] , num jne hexvar mov dword ptr [ ebp - num ] , hexvar jmp hexvar test byte ptr [ ebp - num ] , num jne hexvar test byte ptr [ ebp - num ] , num je hexvar mov dword ptr [ ebp - num ] , num jmp hexvar jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov byte ptr [ ebp - num ] , al mov ecx , dword ptr [ ebp + hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx call hexvar mov byte ptr [ ebp - num ] , al movzx ecx , byte ptr [ ebp - num ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax movzx eax , byte ptr [ ebp - num ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax mov dword ptr [ edx + num ] , hexvar call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ edi + hexvar ] cmp eax , num sete cl cmp eax , num sete al or ecx , eax cmp edx , num sete al cmp edx , num sete dl or dl , al jne hexvar test cl , cl jne hexvar test cl , cl jne hexvar test dl , dl mov eax , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num mov byte ptr [ ebp - hexvar ] , al push dword ptr [ ebp + hexvar ] call hexvar add esp , num mov byte ptr [ ebp - num ] , al cmp byte ptr [ ebp - hexvar ] , num je hexvar movzx eax , byte ptr [ ebp - num ] xor eax , num test al , al je hexvar mov eax , hexvar jmp hexvar movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al je hexvar cmp byte ptr [ ebp - num ] , num je hexvar mov eax , num jmp hexvar sub esp , num mov eax , dword ptr [ ebx + hexvar ] push eax push dword ptr [ ebp + num ] push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov ebx , dword ptr [ ebp - num ] leave ret
ldr r2 , [ r1 , hexvar ] ldr r3 , [ r0 , hexvar ] cmp r2 , num cmpne r2 , num moveq r2 , num movne r2 , num cmp r3 , num cmpne r3 , num moveq r3 , num movne r3 , num eor ip , r2 , num tst r3 , ip bne hexvar eor r3 , r3 , num tst r2 , r3 beq hexvar mov r0 , num bx lr push { r4 , r5 , r6 , lr } ldr r6 , [ r1 ] mov r4 , r0 mov r1 , hexvar mov r0 , r6 bl hexvar mov r5 , r0 ldr r4 , [ r4 ] mov r1 , hexvar mov r0 , r4 bl hexvar cmp r5 , num beq hexvar ldr r3 , [ pc , hexvar ] cmp r0 , num moveq r0 , r3 mov r1 , r0 mov r0 , r5 bl hexvar cmp r0 , num popne { r4 , r5 , r6 , pc } mov r1 , r4 mov r0 , r6 pop { r4 , r5 , r6 , lr } b hexvar cmp r0 , num ldrne r5 , [ pc , hexvar ] bne hexvar b hexvar mvn r0 , num bx lr andeq r7 , r2 , r8 , ror num
push edi push esi push ebx call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] sub esp , hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + hexvar ] mov edi , dword ptr [ edi + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar mov edx , eax mov dword ptr [ edi ] , eax add esp , hexvar mov eax , num test edx , edx je hexvar mov eax , dword ptr [ esi + num ] mov dword ptr [ edi + num ] , eax mov eax , num pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push hexvar push eax push num call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , esi mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ edi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax je hexvar mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , eax mov eax , num pop ebx pop esi pop edi ret
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov r15 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ r15 + hexvar ] , rax mov r14 , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov rax , qword ptr [ r14 + num ] mov qword ptr [ rbx + num ] , rax mov ebp , num mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) move s1 , a1 lui a1 , hexvar sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) addiu a1 , a1 , - hexvar sw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num beqz v0 , hexvar lw gp , hexvar ( sp ) sw zero , ( v0 )
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov r15 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ r15 + hexvar ] , rax mov r14 , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov rax , qword ptr [ r14 + num ] mov qword ptr [ rbx + num ] , rax mov ebp , num mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov r15 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ r15 + hexvar ] , rax mov r14 , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov rax , qword ptr [ r14 + num ] mov qword ptr [ rbx + num ] , rax mov ebp , num mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov r15 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ r15 + hexvar ] , rax mov r14 , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov rax , qword ptr [ r14 + num ] mov qword ptr [ rbx + num ] , rax mov ebp , num mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push hexvar push eax push num call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , esi mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ edi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax je hexvar mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , eax mov eax , num pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push hexvar push eax push num call hexvar add esp , hexvar test eax , eax je hexvar mov esi , eax mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , esi mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ edi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi ] , eax je hexvar mov eax , dword ptr [ edi + num ] mov dword ptr [ esi + num ] , eax mov eax , num pop ebx pop esi pop edi ret
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov r15 , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor ebp , ebp test rax , rax je hexvar mov rbx , rax xorps xmm0 , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ r15 + hexvar ] , rax mov r14 , qword ptr [ r14 + hexvar ] mov rdi , qword ptr [ r14 ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx ] , rax test rax , rax je hexvar mov rax , qword ptr [ r14 + num ] mov qword ptr [ rbx + num ] , rax mov ebp , num mov eax , ebp add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r1 , num mov r2 , r4 mov r5 , r0 bl hexvar cmp r0 , num subne r0 , r0 , r5 addne r0 , r0 , num moveq r0 , r4 pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov r4 , r1 mov r1 , num mov r2 , r4 mov r5 , r0 bl hexvar cmp r0 , num subne r0 , r0 , r5 addne r0 , r0 , num moveq r0 , r4 pop { r4 , r5 , r6 , pc }
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] sub esp , num call hexvar add ebx , hexvar push esi push num push edi call hexvar mov edx , eax add esp , hexvar sub edx , edi add edx , num test eax , eax mov eax , esi pop ebx cmovne eax , edx pop esi pop edi ret
push rbp push rbx sub rsp , num mov rbx , rdi mov rbp , rsi mov rdx , rsi mov esi , num call hexvar test rax , rax je hexvar sub rax , rbx add rax , num jmp hexvar mov rax , rbp add rsp , num pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] xor esi , esi call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx esi , cl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx add rax , num mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp + hexvar ] mov ecx , esp mov dword ptr [ ecx + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + num ] , num call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num je hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] sub ecx , eax add ecx , num mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] mov r1 , num ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] sub r3 , r2 , r3 add r3 , r3 , num b hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , esp mov dword ptr [ edi + num ] , esi mov dword ptr [ edi ] , edx mov dword ptr [ edi + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx add eax , num mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , num pop ebp ret
push rbx mov rbx , rdi mov qword ptr [ rdi + hexvar ] , hexvar mov edi , hexvar call hexvar mov byte ptr [ rbx + num ] , num mov qword ptr [ rbx + hexvar ] , rax mov dword ptr [ rbx ] , num pop rbx ret
push rbx mov rbx , rdi mov qword ptr [ rdi + hexvar ] , hexvar mov edi , hexvar call hexvar mov byte ptr [ rbx + num ] , num mov qword ptr [ rbx + hexvar ] , rax mov dword ptr [ rbx ] , num pop rbx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu v0 , zero , hexvar sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) addiu a0 , zero , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar sw v0 , hexvar ( s0 )
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , hexvar push hexvar call hexvar mov byte ptr [ esi + num ] , num mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi ] , num add esp , hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , num pop ebp ret
push ebx sub esp , num mov ebx , dword ptr [ esp + hexvar ] mov eax , ebx call hexvar mov byte ptr [ ebx + num ] , num mov dword ptr [ ebx ] , num add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ ebp + num ] mov byte ptr [ eax + num ] , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , num add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw v0 , hexvar ( fp ) sb zero , num ( v0 ) lw v0 , hexvar ( fp ) addiu v1 , zero , num sw v1 , ( v0 )
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ eax ] cmp edi , dword ptr [ ecx ] setae bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - num ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmovae ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jb hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jb hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rcx mov rdx , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , rcx jb hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jb hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] cmp edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx jb hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rbp - num ] , rax cmovae rax , qword ptr [ rbp - num ] pop rbp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , esi mov edi , dword ptr [ eax ] cmp edi , dword ptr [ ecx ] setae bl mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ fp , - hexvar ] cmp r2 , r3 movhs r3 , r2 movlo r3 , r3 mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov edi , esp add edi , - hexvar mov esp , edi mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , ebx mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , ebx mov eax , dword ptr [ eax - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ edx - hexvar ] , eax mov eax , dword ptr [ ecx - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ edi ] , eax mov eax , dword ptr [ esi ] cmp eax , dword ptr [ edi ] setl al mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] cmp ecx , dword ptr [ edx ] setg bl and bl , num movzx ecx , bl mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - hexvar ] pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov ecx , dword ptr [ ebp - num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ecx ] mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , ecx mov ecx , dword ptr [ edx ] cmp ecx , dword ptr [ esi ] jge hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp eax , ecx setg dl mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] and al , num movzx ecx , al mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - num ] cmp edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jge hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp - num ] setg cl and cl , num movzx eax , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp - num ] cmp edx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jge hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp - num ] setg cl and cl , num movzx eax , cl mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push { r4 , fp } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldm r3 , { r3 , r4 } str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldm r3 , { r3 , r4 } str r3 , [ fp , - num ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] cmp r2 , r3 blt hexvar ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - num ] cmp r2 , r3 movgt r3 , num movle r3 , num and r3 , r3 , hexvar b hexvar mvn r3 , num mov r0 , r3 sub sp , fp , num pop { r4 , fp } bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - num ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ eax + num ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] cmp eax , dword ptr [ ebp - num ] jge hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp - num ] setg cl and cl , num movzx edx , cl mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] jl hexvar mov eax , dword ptr [ rbp - num ] cmp eax , dword ptr [ rbp - num ] setg al movzx eax , al jmp hexvar mov eax , hexvar pop rbp ret
mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax ] cmp edx , eax jl hexvar setg al movzx eax , al ret
mov eax , dword ptr [ rsi ] cmp dword ptr [ rdi ] , eax jl hexvar setg al movzx eax , al ret
push r13 push r12 push rbp push rbx sub rsp , num mov r13 , rdi mov rbp , rsi mov r12 , rdx call hexvar mov rbx , rax test rax , rax je hexvar mov rsi , rax mov rdi , rbp call hexvar test rax , rax je hexvar mov qword ptr [ rbx + hexvar ] , r12 mov rcx , - num mov eax , num mov rdi , r13 repne scasb al , byte ptr [ rdi ] not rcx mov rbp , rcx mov rdi , rcx call hexvar mov r12 , rax test rax , rax je hexvar mov rdx , rbp mov rsi , r13 mov rdi , rax call hexvar mov qword ptr [ rbx ] , r12 movzx eax , byte ptr [ rbx + hexvar ] and eax , hexvar or eax , num mov byte ptr [ rbx + hexvar ] , al mov rdi , rbx call hexvar test eax , eax je hexvar mov rax , rbx add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } mov r5 , r0 mov r0 , hexvar mov r6 , r1 mov r7 , r2 bl hexvar subs r4 , r0 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r1 , [ r3 ] cmp r1 , num ldrne r2 , [ r3 , num ] ldreq r2 , [ r3 , num ] subne r2 , r2 , num subne r1 , r1 , num addeq r1 , r2 , num str r2 , [ r4 , hexvar ] stmne r3 , { r1 , r2 } streq r1 , [ r3 , num ] bl hexvar cmp r0 , num mov r8 , r0 str r0 , [ r4 , hexvar ] beq hexvar ldr r3 , [ pc , hexvar ] add r8 , r4 , hexvar str r3 , [ r4 , hexvar ] mov r0 , r8 mov r3 , hexvar mov r2 , hexvar ldr r1 , [ pc , hexvar ] bl hexvar subs sb , r0 , num beq hexvar mov r0 , r6 mov r1 , r4 bl hexvar cmp r0 , num beq hexvar str r7 , [ r4 , num ] mov r0 , r5 bl hexvar add r6 , r0 , num mov r0 , r6 bl hexvar subs r7 , r0 , num beq hexvar mov r2 , r6 mov r1 , r5 bl hexvar ldrb r3 , [ r4 , hexvar ] str r7 , [ r4 ] bic r3 , r3 , hexvar orr r3 , r3 , num strb r3 , [ r4 , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push { r4 , r5 , r6 , r7 , r8 , lr } mov r5 , r0 mov r6 , r1 mov r7 , r2 bl hexvar subs r4 , r0 , num beq hexvar mov r1 , r4 mov r0 , r6 bl hexvar cmp r0 , num beq hexvar str r7 , [ r4 , num ] mov r0 , r5 bl hexvar add r6 , r0 , num mov r0 , r6 bl hexvar subs r7 , r0 , num beq hexvar mov r2 , r6 mov r1 , r5 mov r0 , r7 bl hexvar str r7 , [ r4 ] ldrb r3 , [ r4 , hexvar ] bic r3 , r3 , hexvar orr r3 , r3 , num strb r3 , [ r4 , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } mov r6 , r0 mov r5 , r1 mov r7 , r2 bl hexvar subs r4 , r0 , num beq hexvar mov r1 , r4 mov r0 , r5 bl hexvar cmp r0 , num beq hexvar str r7 , [ r4 , num ] mov r0 , r6 bl hexvar str r0 , [ r4 ] ldrb r3 , [ r4 , hexvar ] bic r3 , r3 , hexvar orr r3 , r3 , num strb r3 , [ r4 , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 pop { r4 , r5 , r6 , r7 , r8 , pc }
push r13 push r12 mov r13 , rdx push rbp push rbx mov r12 , rdi mov rbp , rsi sub rsp , num call hexvar test rax , rax mov rbx , rax je hexvar mov rsi , rax mov rdi , rbp call hexvar test rax , rax je hexvar mov rdi , r12 mov qword ptr [ rbx + hexvar ] , r13 call hexvar lea rbp , [ rax + num ] mov rdi , rbp call hexvar test rax , rax je hexvar mov rdx , rbp mov rsi , r12 mov rdi , rax call hexvar mov qword ptr [ rbx ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov rdi , rbx and eax , hexvar or eax , num mov byte ptr [ rbx + hexvar ] , al call hexvar test eax , eax je hexvar add rsp , num mov rax , rbx pop rbx pop rbp pop r12 pop r13 ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push num push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar mov edx , dword ptr [ ebx + hexvar ] test edx , edx jne hexvar mov eax , dword ptr [ ebx + hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebx + hexvar ] , edx mov dword ptr [ esi + hexvar ] , eax call hexvar test eax , eax mov dword ptr [ esi + hexvar ] , eax je hexvar lea eax , [ ebx - hexvar ] lea edi , [ esi + hexvar ] mov dword ptr [ esi + hexvar ] , eax push hexvar push hexvar push dword ptr [ ebx + hexvar ] push edi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , hexvar mov dword ptr [ esi + num ] , eax push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi ] , eax movzx eax , byte ptr [ esi + hexvar ] and eax , hexvar or eax , num mov byte ptr [ esi + hexvar ] , al mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , esi pop ebx pop esi pop edi ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar call hexvar mov esi , eax test eax , eax je hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + num ] , eax mov ecx , hexvar mov eax , num mov edi , dword ptr [ esp + hexvar ] repne scasb al , byte ptr es : [ edi ] not ecx mov ebp , ecx sub esp , num mov edx , num push edx push ecx call hexvar mov edi , eax add esp , hexvar test eax , eax je hexvar sub esp , num push ebp push dword ptr [ esp + hexvar ] push eax call hexvar mov dword ptr [ esi ] , edi movzx eax , byte ptr [ esi + hexvar ] and eax , hexvar or eax , num mov byte ptr [ esi + hexvar ] , al mov dword ptr [ esp ] , esi call hexvar add esp , hexvar test eax , eax je hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push num push hexvar call hexvar add esp , hexvar test eax , eax mov edi , eax je hexvar mov edx , dword ptr [ ebx + hexvar ] test edx , edx jne hexvar mov eax , dword ptr [ ebx + hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebx + hexvar ] , edx mov dword ptr [ edi + hexvar ] , eax call hexvar test eax , eax mov dword ptr [ edi + hexvar ] , eax je hexvar lea eax , [ ebx - hexvar ] lea esi , [ edi + hexvar ] mov dword ptr [ edi + hexvar ] , eax lea eax , [ ebx - hexvar ] push hexvar push hexvar push eax push esi call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push edi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , hexvar mov dword ptr [ edi + num ] , eax push dword ptr [ esp + hexvar ] call hexvar pop ebp lea ebp , [ eax + num ] pop edx xor edx , edx push edx push ebp call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push ebp push dword ptr [ esp + hexvar ] push eax mov dword ptr [ esp + hexvar ] , eax call hexvar movzx eax , byte ptr [ edi + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ edi ] , edx and eax , hexvar or eax , num mov byte ptr [ edi + hexvar ] , al mov dword ptr [ esp ] , edi call hexvar add esp , hexvar test eax , eax je hexvar add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push r14 push r13 mov r14 , rdx push r12 push rbp mov r12 , rdi push rbx mov edi , hexvar mov rbp , rsi call hexvar test rax , rax mov rbx , rax je hexvar mov edx , dword ptr [ rip + hexvar ] test edx , edx jne hexvar mov eax , dword ptr [ rip + hexvar ] lea edx , [ rax + num ] mov dword ptr [ rip + hexvar ] , edx mov dword ptr [ rbx + hexvar ] , eax call hexvar test rax , rax mov qword ptr [ rbx + hexvar ] , rax je hexvar lea rax , [ rip + hexvar ] lea r13 , [ rbx + hexvar ] lea rsi , [ rip + hexvar ] mov ecx , hexvar mov edx , hexvar mov qword ptr [ rbx + hexvar ] , rax mov rdi , r13 call hexvar test eax , eax je hexvar mov rsi , rbx mov rdi , rbp call hexvar test rax , rax je hexvar mov rdi , r12 mov qword ptr [ rbx + hexvar ] , r14 call hexvar mov qword ptr [ rbx ] , rax movzx eax , byte ptr [ rbx + hexvar ] mov rdi , rbx and eax , hexvar or eax , num mov byte ptr [ rbx + hexvar ] , al call hexvar test eax , eax je hexvar mov rax , rbx pop rbx pop rbp pop r12 pop r13 pop r14 ret
addiu sp , sp , - hexvar lui gp , hexvar lui t9 , hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) sw s1 , hexvar ( sp ) move s3 , a0 move s1 , a1 sw s2 , hexvar ( sp ) addiu a1 , zero , hexvar sw s0 , hexvar ( sp ) move a0 , zero sw gp , hexvar ( sp ) addiu t9 , t9 , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) bal hexvar move s2 , a2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lui a0 , hexvar lw v0 , hexvar ( a0 ) bnez v0 , hexvar lui a1 , hexvar lui v1 , hexvar lw v0 , - hexvar ( v1 ) addiu a0 , v0 , num sw a0 , - hexvar ( v1 ) lw t9 , - hexvar ( gp ) jalr t9 sw v0 , hexvar ( s0 )
push rax movsxd rdx , esi mov esi , hexvar xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar xor ecx , ecx test al , num setne cl mov eax , ecx pop rcx ret
push rax movsxd rdx , esi mov esi , hexvar xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar xor ecx , ecx test al , num setne cl mov eax , ecx pop rcx ret
push rax movsxd rdx , esi mov esi , hexvar xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar xor ecx , ecx test al , num setne cl mov eax , ecx pop rcx ret
push rax movsxd rdx , esi mov esi , hexvar xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar xor ecx , ecx test al , num setne cl mov eax , ecx pop rcx ret
push rbp push r15 push r14 push rbx push rax movsxd rdx , esi mov esi , hexvar xor ecx , ecx xor r8d , r8d call hexvar mov dword ptr [ rsp + num ] , eax mov ecx , hexvar mov r14d , hexvar mov r15d , hexvar mov ebx , hexvar mov ebp , hexvar jmp hexvar mov ecx , hexvar xor eax , eax nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp ecx , hexvar jle hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar nop word ptr cs : [ rax + rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar jmp hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp dword ptr [ rsp + num ] , num mov ecx , hexvar cmovs ecx , ebp jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar test byte ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , r15d jmp hexvar test byte ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , r14d jmp hexvar test byte ptr [ rsp + num ] , num mov ecx , hexvar cmove ecx , ebx jmp hexvar mov ecx , hexvar mov eax , num jmp hexvar add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rax movsxd rdx , esi mov esi , hexvar xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar xor ecx , ecx test al , num setne cl mov eax , ecx pop rcx ret
push rax movsxd rdx , esi mov esi , hexvar xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar xor ecx , ecx test al , num setne cl mov eax , ecx pop rcx ret
push rax movsxd rdx , esi mov esi , hexvar xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar xor ecx , ecx test al , num setne cl mov eax , ecx pop rcx ret
push rax movsxd rdx , esi mov esi , hexvar xor ecx , ecx xor r8d , r8d call hexvar test eax , eax js hexvar xor ecx , ecx test al , num setne cl mov eax , ecx pop rcx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar push num push num push dword ptr [ esp + hexvar ] push hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov edx , eax test al , num setne al test edx , edx movzx eax , al js hexvar add esp , num pop ebx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] sub ecx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) bltz v0 , hexvar nop lw v0 , num ( fp ) slti v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero andi v0 , v0 , num andi v0 , v0 , hexvar move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] add eax , num cmp eax , hexvar ja hexvar mov eax , num jmp hexvar mov eax , num pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , hexvar mov eax , hexvar mov ecx , hexvar cmovbe ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov byte ptr [ ebp - num ] , num mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
addiu sp , sp , - num sw fp , num ( sp ) move fp , sp sw a0 , num ( fp ) lw v0 , num ( fp ) addiu v0 , v0 , num sltiu v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero move sp , fp lw fp , num ( sp ) addiu sp , sp , num jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] sub ecx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] sub ecx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] add r3 , r3 , num cmp r3 , hexvar bhi hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax ja hexvar jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov byte ptr [ ebp - num ] , num jmp hexvar mov al , byte ptr [ ebp - num ] mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] and al , num movzx eax , al add esp , hexvar pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] add r3 , r3 , num cmp r3 , hexvar bhi hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , fp , num pop { fp } bx lr
push { r4 , r5 , r6 , r7 , r8 , sb , sl , lr } ldr r7 , [ r1 , hexvar ] sub sp , sp , num ldr ip , [ r7 , hexvar ] cmp ip , num beq hexvar mov r0 , num add sp , sp , num pop { r4 , r5 , r6 , r7 , r8 , sb , sl , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] cmp dword ptr [ edi + hexvar ] , num je hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw s2 , hexvar ( a1 )
addiu sp , sp , - hexvar lui gp , hexvar addiu v1 , zero , num sw s0 , hexvar ( sp ) addiu gp , gp , hexvar lw s0 , hexvar ( a1 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edi + hexvar ] mov eax , num cmp dword ptr [ ebp + hexvar ] , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) lw v1 , hexvar ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , lr } sub sp , sp , hexvar ldr r7 , [ r1 , hexvar ] ldr ip , [ r7 , hexvar ] cmp ip , num movne r0 , num beq hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edi + hexvar ] cmp dword ptr [ esi + hexvar ] , num je hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , r7 , r8 , sb , lr } sub sp , sp , hexvar ldr r7 , [ r1 , hexvar ] ldr ip , [ r7 , hexvar ] cmp ip , num movne r0 , num beq hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ edi + hexvar ] mov eax , num cmp dword ptr [ ebp + hexvar ] , num je hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov edi , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , edi mov ebx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , ebx xor ebx , ebx mov dword ptr [ ebp - hexvar ] , edx mov edx , ebx div dword ptr [ ecx ]
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx ret
mov rax , rdi sub rsp , num mul rsi seto dl test rax , rax js hexvar movzx edx , dl test rdx , rdx jne hexvar call hexvar test rax , rax je hexvar add rsp , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) move a0 , zero lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) multu v1 , v0 mflo v1 mfhi v0 srl a3 , v0 , num move a2 , zero beqz a3 , hexvar nop addiu a0 , zero , num bgez v1 , hexvar nop addiu a0 , zero , num move v0 , a0 andi v0 , v0 , num andi v0 , v0 , hexvar bnez v0 , hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ecx , num mov eax , dword ptr [ ebp + num ] mul dword ptr [ ebp + hexvar ] jno hexvar mov ecx , num test eax , eax jns hexvar mov ecx , num mov eax , ecx and eax , num test al , al jne hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar call hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , hexvar mov dword ptr [ ebp - num ] , eax mov eax , edx xor edx , edx div dword ptr [ ebp + hexvar ]
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] xor esi , esi mov edi , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , edi mov dword ptr [ ebp - hexvar ] , edx mov edx , esi mov esi , dword ptr [ ebp - hexvar ] div esi
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] test rsi , rsi sete al movzx ecx , al mov esi , ecx mov rsi , qword ptr [ rsi * num + hexvar ] jmp rsi mov rax , qword ptr [ rbp - hexvar ] test rax , rax sete cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] imul rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
sub rsp , num mov rax , rdi mul rsi seto dl movzx edx , dl test rax , rax mov eax , num cmovns rax , rdx test al , al jne hexvar call hexvar test rax , rax jne hexvar call hexvar add rsp , num ret
push { fp , lr } umull fp , ip , r0 , r1 adds r3 , ip , num movne r3 , num cmp fp , num blt hexvar cmp r3 , num bne hexvar bl hexvar cmp r0 , num popne { fp , pc }
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] lea ecx , [ hexvar ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , num and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] lea ecx , [ hexvar ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , num and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] lea ecx , [ hexvar ] cmp eax , ecx mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - hexvar ] , ecx jmp hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov dword ptr [ ebp - hexvar ] , hexvar jmp hexvar mov al , num and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax lea eax , [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] cmp dword ptr [ ecx ] , eax jne hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 jmp hexvar mov al , num and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sb zero , hexvar ( v0 ) sb zero , hexvar ( v0 ) sb zero , hexvar ( v0 ) sb zero , hexvar ( v0 ) lw a0 , ( v0 ) lw v1 , - hexvar ( gp ) beq a0 , v1 , hexvar lui v1 , hexvar lwc1 f0 , - hexvar ( v1 ) swc1 f0 , hexvar ( v0 ) addiu v0 , zero , num lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui v1 , hexvar lwc1 f0 , - hexvar ( v1 ) b hexvar swc1 f0 , hexvar ( v0 )
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] call hexvar mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num mov byte ptr [ eax + hexvar ] , num add esp , hexvar lea edx , [ ebx - hexvar ] cmp dword ptr [ eax ] , edx je hexvar mov dword ptr [ eax + hexvar ] , hexvar mov eax , num add esp , num pop ebx ret
sub rsp , num call hexvar mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num mov byte ptr [ rax + hexvar ] , num cmp qword ptr [ rax ] , hexvar jne hexvar mov dword ptr [ rax + hexvar ] , hexvar jmp hexvar mov dword ptr [ rax + hexvar ] , hexvar mov eax , num add rsp , num ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + num ] mov dword ptr [ esp ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - num ] lea ecx , [ hexvar ] cmp dword ptr [ eax ] , ecx jne hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - num ] movss dword ptr [ eax + hexvar ] , xmm0 jmp hexvar movss xmm0 , dword ptr [ hexvar ] mov eax , dword ptr [ ebp - num ] movss dword ptr [ eax + hexvar ] , xmm0 mov al , num and al , num movzx eax , al add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] lea edx , [ ebx - hexvar ] cmp eax , edx jne hexvar mov eax , dword ptr [ ebp - hexvar ] fld dword ptr [ ebx - hexvar ] fstp dword ptr [ eax + hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] fld dword ptr [ ebx - hexvar ] fstp dword ptr [ eax + hexvar ] mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] movzx edx , byte ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax + hexvar ] , dl mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] lea edx , [ ebx - hexvar ] cmp eax , edx jne hexvar mov eax , dword ptr [ ebp - hexvar ] fld dword ptr [ ebx - hexvar ] fstp dword ptr [ eax + hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] fld dword ptr [ ebx - hexvar ] fstp dword ptr [ eax + hexvar ] mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
cmp r1 , num ldr r3 , [ pc , hexvar ] beq hexvar b hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , r0 bne hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , r1 bne hexvar mov r0 , r3 bx lr ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num bne hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , r0 bne hexvar b hexvar strheq fp , [ lr ] , -r8
ldr ip , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] cmp r1 , num beq hexvar b hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r0 , r2 bne hexvar ldr r2 , [ r3 , hexvar ] cmp r1 , r2 bne hexvar mov r0 , r3 bx lr ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num bne hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , r0 beq hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar ldr r3 , [ ip , num ] ! cmp r3 , num bne hexvar b hexvar andseq pc , r3 , r8 , lsr lr andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi movabs rsi , hexvar mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rbp - hexvar ] jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rbp - num ] pop rbp ret
call hexvar add eax , hexvar push esi push ebx lea ebx , [ eax - hexvar ] mov edx , dword ptr [ esp + hexvar ] lea esi , [ eax - hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , ebx jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp dword ptr [ eax + hexvar ] , edx jne hexvar cmp dword ptr [ eax + hexvar ] , ecx je hexvar test ecx , ecx jne hexvar mov ebx , dword ptr [ eax + hexvar ] test ebx , ebx je hexvar pop ebx pop esi ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar lea eax , [ eax - hexvar ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp + num ] , eax jne hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp + hexvar ] , eax je hexvar cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ ebp - num ] jmp hexvar mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jne hexvar add dword ptr [ ebp - num ] , num mov eax , dword ptr [ ebp - num ] mov eax , dword ptr [ eax ] test eax , eax jne hexvar mov eax , num leave ret
ldr ip , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , r0 bne hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , r1 beq hexvar cmp r1 , num bne hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar mov r0 , r3 bx lr ldr r3 , [ ip , num ] ! cmp r3 , num beq hexvar cmp r3 , num bne hexvar b hexvar mov r3 , num b hexvar andeq fp , sb , ip , lsr num strdeq r7 , r8 , [ sl ] , -r0
push rbp mov rbp , rsp mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi movabs rsi , hexvar mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar cmp qword ptr [ rbp - hexvar ] , num setne al mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] cmp ecx , dword ptr [ rbp - hexvar ] sete dl mov byte ptr [ rbp - hexvar ] , dl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar cmp qword ptr [ rbp - hexvar ] , num sete al mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num setne cl mov byte ptr [ rbp - hexvar ] , cl mov al , byte ptr [ rbp - hexvar ] test al , num jne hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] pop rbp ret
lui gp , hexvar addiu gp , gp , - hexvar lui a2 , hexvar addiu a2 , a2 , - hexvar b hexvar lw v0 , - hexvar ( gp ) lw v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v1 , hexvar ( v0 ) bne v1 , a0 , hexvar nop lw v1 , hexvar ( v0 ) beq v1 , a1 , hexvar nop bnez a1 , hexvar nop lw v1 , hexvar ( v0 ) beqz v1 , hexvar nop jr ra nop addiu a2 , a2 , num lw v0 , ( a2 ) beqz v0 , hexvar nop bnez v0 , hexvar nop b hexvar addiu a2 , a2 , num jr ra move v0 , zero
call hexvar add eax , hexvar push ebx mov edx , dword ptr [ esp + num ] lea ebx , [ eax - hexvar ] mov ecx , dword ptr [ esp + hexvar ] lea eax , [ eax - hexvar ] test ecx , ecx je hexvar jmp hexvar lea esi , [ esi ] mov eax , dword ptr [ eax + hexvar ] test eax , eax je hexvar cmp edx , dword ptr [ eax + hexvar ] jne hexvar cmp ecx , dword ptr [ eax + hexvar ] jne hexvar pop ebx ret
ldr ip , [ pc , hexvar ] ldr r3 , [ pc , hexvar ] b hexvar ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , r0 bne hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , r1 beq hexvar cmp r1 , num bne hexvar ldr r2 , [ r3 , hexvar ] cmp r2 , num beq hexvar mov r0 , r3 bx lr ldr r3 , [ ip , num ] ! cmp r3 , num beq hexvar cmp r3 , num bne hexvar b hexvar mov r3 , num b hexvar andeq ip , sb , r0 , lsr num strheq r8 , [ sl ] , -r8
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] bl hexvar mov r2 , r0 mov r3 , hexvar str r3 , [ r2 ] mvn r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , num pop ebp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] mov dword ptr [ esp + hexvar ] , eax cmp dword ptr [ esp + hexvar ] , num jne hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] sub esp , hexvar push eax call hexvar add esp , hexvar cmp eax , hexvar je hexvar sub esp , hexvar push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar push hexvar push hexvar call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] sub esp , num lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar lui gp , hexvar sw s0 , hexvar ( sp ) addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw s0 , num ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v0 , num ( v0 )
push rbp push r14 push rbx sub rsp , hexvar mov rax , qword ptr [ rdi + num ] mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov r14d , hexvar mov ebp , hexvar jmp hexvar call hexvar mov eax , hexvar xor ebx , ebx nop cmp eax , hexvar jle hexvar cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + num ] mov rdi , qword ptr [ rax ] call hexvar cmp eax , hexvar mov eax , hexvar cmove eax , ebp jmp hexvar nop dword ptr [ rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + num ] mov rdi , qword ptr [ rax + num ] mov esi , hexvar call hexvar mov rbx , rax mov eax , hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r14d jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar jmp hexvar mov rax , rbx add rsp , hexvar pop rbx pop r14 pop rbp ret
push rbx mov rbx , qword ptr [ rdi + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] call hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rbx + num ] mov esi , hexvar call hexvar pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + num ] test esi , esi je hexvar sub esp , hexvar push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , hexvar jne hexvar sub esp , num push dword ptr [ ebx + hexvar ] push dword ptr [ esi + num ] call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + num ] test esi , esi je hexvar sub esp , hexvar push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , hexvar jne hexvar sub esp , num push dword ptr [ ebx + hexvar ] push dword ptr [ esi + num ] call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + num ] test esi , esi je hexvar sub esp , hexvar push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , hexvar jne hexvar sub esp , num push dword ptr [ ebx + hexvar ] push dword ptr [ esi + num ] call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push rbx mov rbx , qword ptr [ rdi + num ] test rbx , rbx je hexvar mov rdi , qword ptr [ rbx ] call hexvar cmp eax , hexvar jne hexvar mov rdi , qword ptr [ rbx + num ] mov esi , hexvar call hexvar pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ eax + num ] test esi , esi je hexvar sub esp , hexvar push dword ptr [ esi ] call hexvar add esp , hexvar cmp eax , hexvar jne hexvar sub esp , num push dword ptr [ ebx + hexvar ] push dword ptr [ esi + num ] call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a2 , hexvar nop addiu s1 , sp , hexvar move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s3 move a1 , s2 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) addiu a1 , zero , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui s0 , hexvar b hexvar addiu s0 , s0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax cmp dword ptr [ esp + num ] , num jne hexvar lea eax , [ ebx + hexvar ] mov dword ptr [ esp + num ] , eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , num sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar sub esp , num lea eax , [ esp + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar sub esp , num push hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push r15 push r14 push r12 push rbx sub rsp , hexvar test rdx , rdx mov r15d , hexvar cmovne r15 , rdx movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax xorps xmm0 , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 test rsi , rsi je hexvar mov rbx , rsi mov r14 , rdi lea rax , [ rsi * num ] mov rcx , rsi shr rcx , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , rax cmp rsi , hexvar jb hexvar mov rdx , rbx shr rdx , num mov rdi , rsp mov rsi , r14 call hexvar mov r12d , ebx and r12d , hexvar test r12 , r12 je hexvar add r14 , rbx sub r14 , r12 jmp hexvar mov r12 , rbx lea rdi , [ rsp + hexvar ] mov rsi , r14 mov rdx , r12 call hexvar mov dword ptr [ rsp + hexvar ] , r12d mov rbx , rsp mov rdi , r15 mov rsi , rbx call hexvar mov esi , hexvar mov rdi , rbx call hexvar mov rax , r15 add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 move s0 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) beqz a2 , hexvar nop addiu s1 , sp , hexvar move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move a2 , s3 move a1 , s2 move a0 , s1 jal hexvar nop lw gp , hexvar ( sp ) move a1 , s1 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) addiu a1 , zero , hexvar move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lui s0 , hexvar b hexvar addiu s0 , s0 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 nop nop
push r15 push r14 push r12 push rbx sub rsp , hexvar test rdx , rdx mov r15d , hexvar cmovne r15 , rdx movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax xorps xmm0 , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 test rsi , rsi je hexvar mov rbx , rsi mov r14 , rdi lea rax , [ rsi * num ] mov rcx , rsi shr rcx , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , rax cmp rsi , hexvar jb hexvar mov rdx , rbx shr rdx , num mov rdi , rsp mov rsi , r14 call hexvar mov r12d , ebx and r12d , hexvar test r12 , r12 je hexvar add r14 , rbx sub r14 , r12 jmp hexvar mov r12 , rbx lea rdi , [ rsp + hexvar ] mov rsi , r14 mov rdx , r12 call hexvar mov dword ptr [ rsp + hexvar ] , r12d mov rbx , rsp mov rdi , r15 mov rsi , rbx call hexvar mov esi , hexvar mov rdi , rbx call hexvar mov rax , r15 add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) addiu v0 , sp , hexvar lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , v0 jal hexvar nop lw gp , hexvar ( sp ) addiu v0 , sp , hexvar move a1 , v0 lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) addiu v0 , sp , hexvar addiu a1 , zero , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push r15 push r14 push r12 push rbx sub rsp , hexvar test rdx , rdx mov r15d , hexvar cmovne r15 , rdx movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax xorps xmm0 , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 test rsi , rsi je hexvar mov rbx , rsi mov r14 , rdi lea rax , [ rsi * num ] mov rcx , rsi shr rcx , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , rax cmp rsi , hexvar jb hexvar mov rdx , rbx shr rdx , num mov rdi , rsp mov rsi , r14 call hexvar mov r12d , ebx and r12d , hexvar test r12 , r12 je hexvar add r14 , rbx sub r14 , r12 jmp hexvar mov r12 , rbx lea rdi , [ rsp + hexvar ] mov rsi , r14 mov rdx , r12 call hexvar mov dword ptr [ rsp + hexvar ] , r12d mov rbx , rsp mov rdi , r15 mov rsi , rbx call hexvar mov esi , hexvar mov rdi , rbx call hexvar mov rax , r15 add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx sub rsp , hexvar test rdx , rdx mov r15d , hexvar cmovne r15 , rdx movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax xorps xmm0 , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 test rsi , rsi je hexvar mov rbx , rsi mov r14 , rdi lea rax , [ rsi * num ] mov rcx , rsi shr rcx , hexvar mov qword ptr [ rsp + hexvar ] , rcx mov qword ptr [ rsp + hexvar ] , rax cmp rsi , hexvar jb hexvar mov rdx , rbx shr rdx , num mov rdi , rsp mov rsi , r14 call hexvar mov r12d , ebx and r12d , hexvar test r12 , r12 je hexvar add r14 , rbx sub r14 , r12 jmp hexvar mov r12 , rbx lea rdi , [ rsp + hexvar ] mov rsi , r14 mov rdx , r12 call hexvar mov dword ptr [ rsp + hexvar ] , r12d mov rbx , rsp mov rdi , r15 mov rsi , rbx call hexvar mov esi , hexvar mov rdi , rbx call hexvar mov rax , r15 add rsp , hexvar pop rbx pop r12 pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ ebx + hexvar ] test esi , esi cmove esi , eax lea edi , [ esp + num ] push edi call hexvar push dword ptr [ esp + hexvar ] push ebp push edi call hexvar add esp , num push edi push esi call hexvar add esp , num push hexvar push edi call hexvar add esp , hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r14 push rbx sub rsp , hexvar mov rax , rdx mov rdx , rsi mov rsi , rdi lea rcx , [ rsp + hexvar ] mov qword ptr [ rsp + num ] , rcx mov rcx , qword ptr [ rsp + num ] test rax , rax mov edi , hexvar mov ecx , hexvar cmove ecx , edi mov edi , hexvar jmp hexvar mov rbx , rax mov edi , ecx nop cmp edi , hexvar je hexvar cmp edi , hexvar je hexvar cmp edi , hexvar jne hexvar mov edi , hexvar mov ebx , hexvar jmp hexvar movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movaps xmm0 , xmmword ptr [ rip + hexvar ] movaps xmmword ptr [ rsp + hexvar ] , xmm0 movabs rax , hexvar mov qword ptr [ rsp + hexvar ] , rax xorps xmm0 , xmm0 movaps xmmword ptr [ rsp + hexvar ] , xmm0 lea r14 , [ rsp + hexvar ] mov rdi , r14 call hexvar mov rdi , rbx mov rsi , r14 call hexvar mov rdi , qword ptr [ rsp + num ] mov esi , hexvar call hexvar mov rax , qword ptr [ rsp + num ] mov rax , rbx add rsp , hexvar pop rbx pop r14 ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] mov ecx , num mov edx , dword ptr [ esp + hexvar ] mov eax , num call hexvar call hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move a3 , a1 addiu a2 , zero , num move a1 , a0 addiu a0 , zero , num jal hexvar nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar nop word ptr [ eax + eax ]
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar nop word ptr [ eax + eax ]
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar nop word ptr [ eax + eax ]
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar push dword ptr [ ebp + hexvar ] push num push dword ptr [ ebp + num ] push num call hexvar add esp , hexvar call hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a3 , hexvar ( fp ) addiu a2 , zero , num lw a1 , hexvar ( fp ) addiu a0 , zero , num jal hexvar nop lw gp , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov esi , eax mov edi , num call hexvar call hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - num ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - num ] mov rcx , rdx mov edx , num mov esi , eax mov edi , num call hexvar call hexvar
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar call hexvar nop word ptr [ eax + eax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp sub esp , num mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ eax ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov esp , ebp pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp push eax mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , ecx add esp , num pop ebp ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r3 , [ sp , num ] str r3 , [ sp , num ] ldr r3 , [ sp ] str r3 , [ sp , hexvar ] ldr r1 , [ sp , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
push rbp push r14 push rbx sub rsp , hexvar mov r14 , rsi mov rbx , rdi mov rax , qword ptr [ rdi + num ] mov qword ptr [ rsp + num ] , rax mov eax , hexvar mov ebp , hexvar jmp hexvar cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , ebp nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp eax , hexvar je hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar jmp hexvar mov rdi , r14 mov rsi , rbx call hexvar mov eax , hexvar jmp hexvar add rsp , hexvar pop rbx pop r14 pop rbp ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] test edx , edx je hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar nop add esp , hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lw v0 , num ( a0 ) beqz v0 , hexvar move v0 , a1 move a1 , a0 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] test edx , edx je hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] test edx , edx je hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , num mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + num ] test edx , edx je hexvar sub esp , num push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , num pop ebx ret
str lr , [ sp , - num ] ! mov r5 , r1 sub sp , sp , hexvar mov r6 , r0 mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar mov r1 , r5 mov r2 , num mov r4 , r0 mov r0 , num bl hexvar mov r5 , r0 mov r0 , r6 bl hexvar mov r3 , r5 str r0 , [ sp ] mov r2 , r4 mov r1 , num mov r0 , num bl hexvar bl hexvar andeq r4 , r2 , r4 , lsl r5
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , num sw s0 , hexvar ( sp ) move s0 , a1 lui a1 , hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero addiu a2 , zero , num lw gp , hexvar ( sp ) move a0 , zero move a1 , s0 lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , v0 move a1 , zero lw gp , hexvar ( sp ) addiu a0 , zero , num sw v0 , hexvar ( sp ) move a3 , s1 lw t9 , - hexvar ( gp ) jalr t9 move a2 , s0
push edi push esi mov esi , edx push ebx call hexvar add ebx , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov edi , eax push num push esi push num call hexvar mov esi , eax lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar mov dword ptr [ esp ] , edi push esi push eax push num push num call hexvar add esp , hexvar call hexvar lea esi , [ esi ] lea edi , [ edi ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar nop word ptr [ eax + eax ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s1 , a1 addiu a2 , zero , num lui a1 , hexvar addiu a1 , a1 , - hexvar move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s0 , v0 addiu a2 , zero , num move a1 , s1 move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) move a3 , s1 move a2 , s0 move a1 , zero addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , num sw s0 , hexvar ( sp ) move s0 , a1 lui a1 , hexvar sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) move s1 , a0 sw gp , hexvar ( sp ) addiu a1 , a1 , - hexvar lw t9 , - hexvar ( gp ) jalr t9 move a0 , zero addiu a2 , zero , num lw gp , hexvar ( sp ) move a0 , zero move a1 , s0 lw t9 , - hexvar ( gp ) jalr t9 move s0 , v0 move a0 , s1 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s1 , v0 move a1 , zero lw gp , hexvar ( sp ) addiu a0 , zero , num sw v0 , hexvar ( sp ) move a3 , s1 lw t9 , - hexvar ( gp ) jalr t9 move a2 , s0
push { r4 , r5 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , r0 ldr r0 , [ fp , - hexvar ] bl hexvar mov r5 , r0 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 str r3 , [ sp ] mov r3 , r5 mov r2 , r4 mov r1 , num mov r0 , num bl hexvar andeq r2 , r3 , r4 , lsr num
push edi push esi push ebx call hexvar add ebx , hexvar mov esi , edx sub esp , hexvar push eax call hexvar mov edi , eax add esp , hexvar push num push esi push num call hexvar mov esi , eax add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar mov dword ptr [ esp ] , edi push esi push eax push num push num call hexvar add esp , hexvar call hexvar
push edi push esi mov esi , edx push ebx call hexvar add ebx , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov edi , eax push num push esi push num call hexvar mov esi , eax lea eax , [ ebx - hexvar ] add esp , hexvar push num push eax push num call hexvar mov dword ptr [ esp ] , edi push esi push eax push num push num call hexvar add esp , hexvar call hexvar lea esi , [ esi ] lea edi , [ edi ]
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , esi mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar nop dword ptr [ eax + eax ]
push r12 push rbp push rbx mov r12 , rdi mov esi , hexvar call hexvar test rax , rax je hexvar sub rax , r12 mov rbx , rax lea rdi , [ rax + hexvar ] call hexvar mov rbp , rax mov rdx , rbx mov rsi , r12 mov rdi , rax call hexvar lea rax , [ rbx + num ] mov byte ptr [ rbp + rbx ] , hexvar add rax , rbp movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov byte ptr [ rax + num ] , num mov rax , rbp pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 addiu a1 , zero , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar subu s0 , v0 , s2 addiu a0 , s0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move s1 , v0 move a2 , s0 move a1 , s2 move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) addiu v0 , s0 , num addu s0 , s1 , s0 addiu v1 , zero , hexvar sb v1 , ( s0 )
push r12 push rbp push rbx mov r12 , rdi mov esi , hexvar call hexvar test rax , rax je hexvar sub rax , r12 mov rbx , rax lea rdi , [ rax + hexvar ] call hexvar mov rbp , rax mov rdx , rbx mov rsi , r12 mov rdi , rax call hexvar lea rax , [ rbx + num ] mov byte ptr [ rbp + rbx ] , hexvar add rax , rbp movabs rcx , hexvar mov qword ptr [ rax ] , rcx mov byte ptr [ rax + num ] , num mov rax , rbp pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] sub rdx , rax mov rax , rdx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax + num ] mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] add rax , rdx mov byte ptr [ rax ] , hexvar jmp hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] add rax , rdx mov edx , num lea rsi , [ rip + hexvar ] mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , eax push hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar sub eax , ebp mov edi , eax sub esp , hexvar lea eax , [ eax + hexvar ] push eax call hexvar mov esi , eax add esp , hexvar push edi push ebp push eax call hexvar lea edx , [ edi + num ] mov byte ptr [ esi + edi ] , hexvar add esp , hexvar lea eax , [ esi + edx ] mov dword ptr [ eax ] , hexvar mov dword ptr [ eax + num ] , hexvar mov byte ptr [ eax + num ] , num mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push { r4 , r5 , r6 , lr } mov r6 , r0 mov r1 , hexvar bl hexvar cmp r0 , num beq hexvar sub r4 , r0 , r6 add r0 , r4 , hexvar bl hexvar mov r5 , r0 mov r2 , r4 mov r1 , r6 bl hexvar add r0 , r4 , num mov r3 , hexvar strb r3 , [ r5 , r4 ] mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , r0 bl hexvar mov r0 , r5 pop { r4 , r5 , r6 , pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push rbp push rbx mov esi , hexvar mov rbp , rdi sub rsp , num call hexvar test rax , rax je hexvar sub rax , rbp lea rdi , [ rax + hexvar ] mov rbx , rax call hexvar mov rdx , rbx mov rsi , rbp mov rdi , rax call hexvar mov rcx , rax lea rax , [ rbx + num ] mov byte ptr [ rcx + rbx ] , hexvar add rax , rcx movabs rdx , hexvar mov qword ptr [ rax ] , rdx mov byte ptr [ rax + num ] , num add rsp , num mov rax , rcx pop rbx pop rbp ret
push ebp push edi mov ebp , eax push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push hexvar push eax call hexvar add esp , hexvar test eax , eax je hexvar sub eax , ebp sub esp , hexvar mov esi , eax lea eax , [ eax + hexvar ] push eax call hexvar add esp , hexvar mov edi , eax push esi push ebp push eax call hexvar lea edx , [ esi + num ] mov byte ptr [ edi + esi ] , hexvar add esp , hexvar lea eax , [ edi + edx ] mov dword ptr [ eax ] , hexvar mov dword ptr [ eax + num ] , hexvar mov byte ptr [ eax + num ] , num add esp , hexvar mov eax , edi pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov esi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar xor eax , eax mov ecx , eax mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] sub rdx , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - hexvar ] add rdx , num sub rcx , num sub rdx , rcx mov rdi , rdx call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] movabs rdx , hexvar mov rsi , rcx sub rsi , rdx add rsi , num add rsi , rdx mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rax + rcx ] , hexvar jmp hexvar mov edi , num call hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ hexvar ] mov qword ptr [ rax + rcx ] , rdx mov sil , byte ptr [ hexvar ] mov byte ptr [ rax + rcx + num ] , sil mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , num push hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + num ] sub edx , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] lea edx , [ eax + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] add eax , edx mov byte ptr [ eax ] , hexvar jmp hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] add edx , eax sub esp , num push num lea eax , [ ebx - hexvar ] push eax push edx call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] cmp rax , qword ptr [ rsi + hexvar ] jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] shl rcx , num add rax , rcx add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] cmp rax , qword ptr [ rsi + hexvar ] jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] shl rcx , num add rax , rcx add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] cmp rax , qword ptr [ rsi + hexvar ] jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] shl rcx , num add rax , rcx add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] sub esp , num push edx push dword ptr [ ebp + hexvar ] call eax add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp - hexvar ] , eax jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rsi + hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , rax mov rax , qword ptr [ rbp - hexvar ] call rax mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] cmp rax , qword ptr [ rsi + hexvar ] jb hexvar call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] shl rcx , num add rax , rcx add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov edi , dword ptr [ edi + num ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] cmp eax , dword ptr [ ecx + num ] jb hexvar call hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) addiu v0 , zero , - num beq v1 , v0 , hexvar move a0 , zero lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lui v1 , hexvar sw v0 , - hexvar ( v1 ) move a0 , v0 lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbx mov ebx , dword ptr [ rip + hexvar ] cmp ebx , - num je hexvar mov eax , ebx pop rbx ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] sub eax , - num sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp edx mov eax , esp mov dword ptr [ eax ] , num call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebx + hexvar ] cmp eax , - num jne hexvar sub esp , hexvar push num call hexvar add esp , hexvar mov dword ptr [ ebx + hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebx + hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop move a0 , zero lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar sw v1 , - hexvar ( v0 ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] sub eax , - num sete cl movzx edx , cl mov edx , dword ptr [ edx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp edx mov eax , esp mov dword ptr [ eax ] , num call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , dword ptr [ hexvar ] add esp , hexvar pop ebp ret
push { r4 , r5 , r6 , lr } ldr r5 , [ pc , hexvar ] ldr r4 , [ r5 , num ] cmn r4 , num beq hexvar mov r0 , r4 pop { r4 , r5 , r6 , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , - num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , - num mov eax , hexvar mov ecx , hexvar cmove ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar xor eax , eax mov dword ptr [ esp ] , num mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar sub esp , num push num push num push dword ptr [ ebp + num ] mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , num mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push esi push ebx sub esp , num call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] push num push num push esi call hexvar mov edx , eax add esp , hexvar mov eax , num test edx , edx je hexvar mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ edx ] , num mov dword ptr [ edx + num ] , num mov eax , num add esp , num pop ebx pop esi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a3 , zero , num move a2 , zero sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 beqz v0 , hexvar lw ra , hexvar ( sp ) addiu v1 , zero , num sw v0 , hexvar ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a3 , zero , num move a2 , zero sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 beqz v0 , hexvar lw ra , hexvar ( sp ) addiu v1 , zero , num sw v0 , hexvar ( s0 ) sw zero , ( v0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu a3 , zero , num move a2 , zero sw s0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) bal hexvar move s0 , a0 beqz v0 , hexvar lw ra , hexvar ( sp ) addiu v1 , zero , num sw v0 , hexvar ( s0 ) sw zero , ( v0 ) sw zero , num ( v0 ) move v0 , v1 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move v1 , zero lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra move v0 , v1
push { r4 , lr } mov r4 , r0 mov r1 , num bl hexvar cmp r0 , num strne r0 , [ r4 , hexvar ] movne r3 , num strne r3 , [ r0 ] strne r3 , [ r0 , num ] movne r0 , num moveq r0 , num pop { r4 , pc }
push rbx mov rbx , rdi mov esi , hexvar call hexvar mov rdx , rax mov eax , num test rdx , rdx je hexvar mov qword ptr [ rbx + hexvar ] , rdx mov qword ptr [ rdx ] , num mov qword ptr [ rdx + num ] , num mov eax , num pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] push num push num push esi call hexvar mov edx , eax add esp , hexvar xor eax , eax test edx , edx je hexvar mov dword ptr [ esi + hexvar ] , edx mov eax , num mov dword ptr [ edx ] , num mov dword ptr [ edx + num ] , num add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov esi , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov qword ptr [ rax + hexvar ] , rdx mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax ] , num mov rax , qword ptr [ rbp - num ] mov qword ptr [ rax + num ] , num mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 addiu a3 , zero , num move a2 , zero lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop sw v0 , hexvar ( s0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov r14 , rsi mov r15 , rdx mov r12d , ecx call hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov edi , r12d call hexvar mov r13d , eax mov r12d , dword ptr [ rbx ] lea rsi , [ rbx + num ] mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi xor edx , edx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , esi call hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar jb hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov ebp , num mov eax , dword ptr [ edx + num ] mov edi , dword ptr [ edx ] lea ecx , [ edx + num ] test eax , eax je hexvar mov eax , dword ptr [ edx + num ] sub esp , num mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + num ] , ecx push num push hexvar mov edx , edi mov eax , esi call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esi + hexvar ] , edx push eax call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar jb hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov edi , num xor ebp , ebp mov eax , dword ptr [ edx ] lea ecx , [ edx + num ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ edx + num ] test eax , eax je hexvar mov eax , dword ptr [ edx + num ] sub esp , num mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + num ] , ecx push num push hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esi + hexvar ] , edx push eax call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar jb hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov edi , num xor ebp , ebp mov eax , dword ptr [ edx ] lea ecx , [ edx + num ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ edx + num ] test eax , eax je hexvar mov eax , dword ptr [ edx + num ] sub esp , num mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + num ] , ecx push num push hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esi + hexvar ] , edx push eax call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar jb hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov edi , num xor ebp , ebp mov eax , dword ptr [ edx ] lea ecx , [ edx + num ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ edx + num ] test eax , eax je hexvar mov eax , dword ptr [ edx + num ] sub esp , num mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + num ] , ecx push num push hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov r14 , rsi mov r15 , rdx mov r12d , ecx call hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov edi , r12d call hexvar mov r13d , eax mov r12d , dword ptr [ rbx ] lea rsi , [ rbx + num ] mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r4 , r0 ldr r0 , [ r0 , hexvar ] cmp r0 , num beq hexvar mov r6 , r3 ldr r3 , [ r0 ] mov r8 , r2 str r3 , [ r4 , hexvar ] mov r7 , r1 bl hexvar ldr r2 , [ r4 , hexvar ] cmp r2 , num beq hexvar ldr r5 , [ r2 , hexvar ] cmp r5 , num beq hexvar cmp r6 , num beq hexvar blo hexvar cmp r6 , num moveq sl , num bne hexvar mov r6 , r5 ldr fp , [ r5 , num ] ldr sb , [ r6 ] , num cmp fp , num beq hexvar ldr r0 , [ r5 , num ] str r0 , [ r4 , hexvar ] str r6 , [ r4 , num ] mov r2 , hexvar mov r1 , sb mov r0 , r4 bl hexvar cmp r0 , num bne hexvar mov r0 , num pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax ] sub esp , hexvar mov dword ptr [ esi + hexvar ] , edx push eax call hexvar mov eax , dword ptr [ esi + hexvar ] add esp , hexvar test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar jb hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov edi , num xor ebp , ebp mov eax , dword ptr [ edx ] lea ecx , [ edx + num ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ edx + num ] test eax , eax je hexvar mov eax , dword ptr [ edx + num ] sub esp , num mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + num ] , ecx push num push hexvar mov eax , esi mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov r14 , rsi mov r15 , rdx mov r12d , ecx call hexvar mov rax , qword ptr [ rbp + hexvar ] test rax , rax je hexvar mov rbx , qword ptr [ rax + hexvar ] test rbx , rbx je hexvar mov edi , r12d call hexvar mov r13d , eax mov r12d , dword ptr [ rbx ] lea rsi , [ rbx + num ] mov rdi , rbp call hexvar test eax , eax jne hexvar add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi xor edx , edx push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , esi call hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar jb hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov ebp , num mov eax , dword ptr [ edx + num ] mov edi , dword ptr [ edx ] lea ecx , [ edx + num ] test eax , eax je hexvar mov eax , dword ptr [ edx + num ] sub esp , num mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ esi + num ] , ecx push num push hexvar mov edx , edi mov eax , esi call hexvar add esp , hexvar test eax , eax jne hexvar xor eax , eax add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop lw v0 , hexvar ( sp ) lw v0 , ( v0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov rbx , rdi test rdi , rdi mov eax , hexvar mov ebp , hexvar cmove ebp , eax mov eax , hexvar mov r14d , hexvar mov r15d , hexvar mov r12d , hexvar mov r13d , hexvar jmp hexvar mov rdi , rbx call hexvar mov eax , hexvar nop dword ptr [ rax ] mov ecx , eax cmp eax , hexvar jle hexvar cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar jmp hexvar nop word ptr cs : [ rax + rax ] nop cmp ecx , hexvar jle hexvar cmp ecx , hexvar je hexvar mov eax , ebp cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar jmp hexvar nop dword ptr [ rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar jmp hexvar nop dword ptr [ rax + rax ] cmp ecx , hexvar je hexvar mov eax , ecx cmp ecx , hexvar jne hexvar mov rax , qword ptr [ rbx ] mov qword ptr [ rsp + num ] , rax cmp qword ptr [ rsp + num ] , num mov eax , hexvar cmove eax , r15d jmp hexvar mov rax , qword ptr [ rbx + num ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r13d jmp hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r12d jmp hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar mov eax , hexvar jmp hexvar mov rax , qword ptr [ rbx + hexvar ] mov qword ptr [ rsp + hexvar ] , rax cmp qword ptr [ rsp + hexvar ] , num mov eax , hexvar cmove eax , r14d jmp hexvar add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx pop rbx jmp hexvar ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] test esi , esi je hexvar mov eax , dword ptr [ esi ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar sub esp , hexvar push esi call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx pop rbx jmp hexvar ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar beqz a0 , hexvar sw gp , hexvar ( sp ) move s0 , a0 lw a0 , ( a0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r0 , [ sp , num ] bl hexvar b hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , num ] mov r0 , r3 bl hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ sp , num ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar ldr r0 , [ sp , num ] bl hexvar b hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
test rdi , rdi je hexvar push rbx mov rbx , rdi mov rdi , qword ptr [ rdi ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + num ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , qword ptr [ rbx + hexvar ] test rdi , rdi je hexvar call hexvar mov rdi , rbx pop rbx jmp hexvar ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , num lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test al , al je hexvar lea eax , [ ebx + hexvar ] movzx eax , word ptr [ eax + hexvar ] cmp ax , num jbe hexvar mov eax , dword ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar test al , al je hexvar mov eax , dword ptr [ ebp - hexvar ] sub esp , num push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar fstp dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num jmp hexvar lea eax , [ ebx + hexvar ] mov eax , dword ptr [ eax + hexvar ] and eax , num test eax , eax je hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebx + hexvar ] mov eax , dword ptr [ eax ] sub esp , num push edx lea edx , [ ebx - hexvar ] push edx push eax call hexvar add esp , hexvar call hexvar jmp hexvar mov eax , num mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar mov r2 , r3 ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldrh r3 , [ r3 , hexvar ] cmp r3 , num bls hexvar ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] mov r1 , r3 ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , hexvar ] mov r3 , num b hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] and r3 , r3 , num cmp r3 , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ fp , - hexvar ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar bl hexvar mov r3 , r0 b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
test rsi , rsi je hexvar movsxd rcx , dword ptr [ rdx ] mov eax , num cmp qword ptr [ rsi + rcx * num ] , num je hexvar push rbp push rbx sub rsp , num mov rbx , rdx mov rbp , rsi call hexvar movsxd rdx , dword ptr [ rbx ] mov rdx , qword ptr [ rbp + rdx * num ] mov qword ptr [ rax + hexvar ] , rdx add dword ptr [ rbx ] , num mov eax , num jmp hexvar mov eax , num ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax lea eax , [ ebp - hexvar ] push eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test al , al je hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] sub esp , hexvar push eax call hexvar add esp , hexvar fstp dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num jmp hexvar mov eax , num mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , rdi mov rdi , rsi mov rsi , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rdx , [ rsp + num ] call hexvar mov ebp , eax test al , al je hexvar cmp word ptr [ rip + hexvar ] , num jbe hexvar mov r12 , qword ptr [ rsp + num ] cmp byte ptr [ r12 ] , hexvar jne hexvar cmp byte ptr [ r12 + num ] , hexvar jne hexvar cmp byte ptr [ r12 + num ] , hexvar jne hexvar cmp byte ptr [ r12 + num ] , num je hexvar mov edi , num call hexvar mov rbx , rax test rax , rax je hexvar mov rsi , qword ptr [ rbx + hexvar ] mov rdi , r12 call hexvar test eax , eax je hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar jmp hexvar mov rsi , qword ptr [ rsp + num ] mov rdi , r13 call hexvar mov rbx , rax mov r12 , qword ptr [ rsp + num ] mov qword ptr [ rax + hexvar ] , r12 lea rdx , [ rsp + hexvar ] mov esi , hexvar mov edi , num call hexvar movss xmm0 , dword ptr [ rip + hexvar ] test eax , eax jne hexvar mov esi , hexvar lea rdi , [ rsp + hexvar ] call hexvar mov rsi , rax mov rdi , r12 call hexvar movss xmm0 , dword ptr [ rip + hexvar ] test eax , eax je hexvar movss xmm0 , dword ptr [ rip + hexvar ] movss dword ptr [ rbx + hexvar ] , xmm0 jmp hexvar mov rcx , qword ptr [ rsp + num ] mov edx , hexvar mov esi , num mov rdi , qword ptr [ rip + hexvar ] mov eax , num call hexvar call hexvar mov ebp , eax mov eax , ebp mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar jmp hexvar test byte ptr [ rip + hexvar ] , num je hexvar jmp hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r12 push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rsi , rsi je hexvar movsxd rcx , dword ptr [ rdx ] mov rbp , qword ptr [ rsi + rcx * num ] mov rax , rcx test rbp , rbp je hexvar add eax , num cmp word ptr [ rip + hexvar ] , num mov r12 , rdi mov dword ptr [ rdx ] , eax jbe hexvar cmp byte ptr [ rbp ] , hexvar je hexvar xor edi , edi call hexvar test rax , rax mov rbx , rax je hexvar nop dword ptr [ rax ] mov rsi , qword ptr [ rbx + hexvar ] mov rdi , rbp call hexvar test eax , eax je hexvar mov rbx , qword ptr [ rbx + hexvar ] test rbx , rbx jne hexvar test byte ptr [ rip + hexvar ] , num jne hexvar call hexvar jmp hexvar nop dword ptr [ rax ] cmp byte ptr [ rbp + num ] , hexvar jne hexvar cmp byte ptr [ rbp + num ] , hexvar jne hexvar cmp byte ptr [ rbp + num ] , num jne hexvar mov rsi , rbp mov rdi , r12 call hexvar mov rdx , rsp mov qword ptr [ rax + hexvar ] , rbp mov esi , hexvar mov edi , num mov rbx , rax call hexvar test eax , eax movss xmm0 , dword ptr [ rip + hexvar ] je hexvar movss dword ptr [ rbx + hexvar ] , xmm0 mov eax , num mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - num ] sub r3 , fp , hexvar mov r2 , r3 ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num beq hexvar ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r2 , r0 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 , hexvar ] mov r3 , num b hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - num ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test al , num jne hexvar jmp hexvar movzx eax , word ptr [ hexvar ] cmp eax , num jl hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar fstp dword ptr [ ebp - hexvar ] movss xmm0 , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , hexvar xor ecx , num mov edx , eax xor edx , ecx and edx , eax cmp edx , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov esi , dword ptr [ esp + hexvar ] test edx , edx je hexvar mov ecx , dword ptr [ esi ] mov edi , dword ptr [ edx + ecx * num ] test edi , edi je hexvar sub esp , hexvar add ecx , num mov dword ptr [ esi ] , ecx push ebp call hexvar add esp , hexvar lea edx , [ ebx - hexvar ] mov dword ptr [ eax + hexvar ] , edi lea ebp , [ esp + hexvar ] mov esi , eax push ebp push edx mov dword ptr [ esp + hexvar ] , edx push num call hexvar add esp , hexvar test eax , eax fld1 mov edx , dword ptr [ esp + hexvar ] je hexvar fstp dword ptr [ esi + hexvar ] mov eax , num mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi lea esi , [ ebp - hexvar ] mov dword ptr [ esp + num ] , esi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar test al , num jne hexvar jmp hexvar movzx eax , word ptr [ hexvar ] cmp eax , num jl hexvar mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx + hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar fstp dword ptr [ ebp - hexvar ] movss xmm0 , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] movss dword ptr [ eax + hexvar ] , xmm0 mov byte ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ hexvar ] mov ecx , hexvar xor ecx , num mov edx , eax xor edx , ecx and edx , eax cmp edx , num je hexvar mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar and al , num mov byte ptr [ ebp - num ] , al jmp hexvar mov byte ptr [ ebp - num ] , num mov al , byte ptr [ ebp - num ] and al , num movzx eax , al add esp , hexvar pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s4 , - hexvar ( gp ) lw s0 , hexvar ( a0 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rbp , qword ptr [ rdi + hexvar ] test rbp , rbp je hexvar mov r15d , edx mov r13 , rdi cmp edx , - num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov r15 , rax xor ebx , ebx lea rdx , [ rsp + hexvar ] mov rdi , r13 xor esi , esi xor ecx , ecx call rbp test eax , eax jle hexvar movsxd rcx , r15d mov qword ptr [ rsp + hexvar ] , rcx movsxd r12 , eax xor ebp , ebp nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] mov ecx , dword ptr [ rax + rbp * num ] mov rdi , r13 lea rsi , [ rsp + hexvar ] xor edx , edx call qword ptr [ r13 + hexvar ]
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rbp , qword ptr [ rdi + hexvar ] test rbp , rbp je hexvar mov r15d , edx mov r13 , rdi cmp edx , - num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov r15 , rax xor ebx , ebx lea rdx , [ rsp + hexvar ] mov rdi , r13 xor esi , esi xor ecx , ecx call rbp test eax , eax jle hexvar movsxd rcx , r15d mov qword ptr [ rsp + hexvar ] , rcx movsxd r12 , eax xor ebp , ebp nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] mov ecx , dword ptr [ rax + rbp * num ] mov rdi , r13 lea rsi , [ rsp + hexvar ] xor edx , edx call qword ptr [ r13 + hexvar ]
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esi + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edi , edi je hexvar cmp dword ptr [ esp + hexvar ] , - num jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax push num lea eax , [ esp + hexvar ] push eax push num push esi call edi mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax jle hexvar lea eax , [ esp + hexvar ] xor ebp , ebp mov dword ptr [ esp + num ] , eax jmp hexvar lea esi , [ esi ] add ebp , num cmp dword ptr [ esp + num ] , ebp je hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + ebp * num ] push num push dword ptr [ esp + hexvar ] push esi call dword ptr [ esi + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ esp ] cmp eax , dword ptr [ esp + hexvar ] jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ecx call hexvar add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esi + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test edi , edi je hexvar cmp dword ptr [ esp + hexvar ] , - num jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ esp + hexvar ] , eax push num lea eax , [ esp + hexvar ] push eax push num push esi call edi mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax jle hexvar lea eax , [ esp + hexvar ] xor ebp , ebp mov dword ptr [ esp + num ] , eax jmp hexvar lea esi , [ esi ] add ebp , num cmp dword ptr [ esp + num ] , ebp je hexvar mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax + ebp * num ] push num push dword ptr [ esp + hexvar ] push esi call dword ptr [ esi + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ edi + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar mov ecx , dword ptr [ esp ] cmp eax , dword ptr [ esp + hexvar ] jne hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push ecx call hexvar add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] mov eax , edi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw s4 , - hexvar ( gp ) lw s0 , hexvar ( a0 )
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] cmn r3 , num bne hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , hexvar ] add r2 , sp , hexvar mov r3 , num mov r1 , num ldr r0 , [ sp , hexvar ] blx r4 str r0 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 ] add r1 , sp , hexvar mov r2 , num ldr r0 , [ sp , hexvar ] blx r4 ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 mov r2 , r3 ldr r3 , [ sp , num ] cmp r3 , r2 bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 blt hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { r4 , pc } ldrshteq r4 , [ fp ] , - hexvar andeq r0 , r0 , r0
push { r4 , lr } sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] cmn r3 , num bne hexvar ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 str r3 , [ sp , num ] ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , hexvar ] add r2 , sp , hexvar mov r3 , num mov r1 , num ldr r0 , [ sp , hexvar ] blx r4 str r0 , [ sp , hexvar ] mov r3 , num str r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] ldr r4 , [ r3 , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 ] add r1 , sp , hexvar mov r2 , num ldr r0 , [ sp , hexvar ] blx r4 ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] mov r0 , r3 bl hexvar mov r3 , r0 mov r2 , r3 ldr r3 , [ sp , num ] cmp r3 , r2 bne hexvar ldr r3 , [ sp , hexvar ] ldr r3 , [ r3 , hexvar ] ldr r2 , [ sp , num ] ldr r1 , [ sp , num ] mov r0 , r3 bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ sp , hexvar ] b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , num str r3 , [ sp , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r2 , r3 blt hexvar mov r3 , num mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ sp , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar add sp , sp , hexvar pop { r4 , pc } ldmdbls pc ! , { r0 , r1 , r3 , r4 , r5 , r7 , sl , ip , sp , pc } ^ ldmdbls pc ! , { r0 , r1 , r3 , r4 , r5 , r7 , sl , ip , sp , pc } ^
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rbp , qword ptr [ rdi + hexvar ] test rbp , rbp je hexvar mov r15d , edx mov r13 , rdi cmp edx , - num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov r15 , rax xor ebx , ebx lea rdx , [ rsp + hexvar ] mov rdi , r13 xor esi , esi xor ecx , ecx call rbp test eax , eax jle hexvar movsxd rcx , r15d mov qword ptr [ rsp + hexvar ] , rcx movsxd r12 , eax xor ebp , ebp nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] mov ecx , dword ptr [ rax + rbp * num ] mov rdi , r13 lea rsi , [ rsp + hexvar ] xor edx , edx call qword ptr [ r13 + hexvar ]
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi mov rbp , qword ptr [ rdi + hexvar ] test rbp , rbp je hexvar mov r15d , edx mov r13 , rdi cmp edx , - num jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov r15 , rax xor ebx , ebx lea rdx , [ rsp + hexvar ] mov rdi , r13 xor esi , esi xor ecx , ecx call rbp test eax , eax jle hexvar movsxd rcx , r15d mov qword ptr [ rsp + hexvar ] , rcx movsxd r12 , eax xor ebp , ebp nop dword ptr [ rax ] mov rax , qword ptr [ rsp + hexvar ] mov ecx , dword ptr [ rax + rbp * num ] mov rdi , r13 lea rsi , [ rsp + hexvar ] xor edx , edx call qword ptr [ r13 + hexvar ]
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdi mov r8 , qword ptr [ hexvar ] and r8 , hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl xor cl , hexvar xor cl , hexvar and cl , num movzx edx , cl mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi ] mov cl , dl mov r8b , byte ptr [ rdi + hexvar ] and cl , num shl cl , num and r8b , hexvar or r8b , cl mov byte ptr [ rdi + hexvar ] , r8b mov rdi , qword ptr [ rsi ] mov cl , byte ptr [ rdi + hexvar ] and cl , hexvar or cl , hexvar mov byte ptr [ rdi + hexvar ] , cl mov rdi , qword ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ hexvar ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , eax cmp dword ptr [ rcx ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax shl rcx , num movabs rdx , hexvar add rdx , rcx mov qword ptr [ rbp - hexvar ] , rdx movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] add rax , qword ptr [ rcx ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] lea edx , [ ebx + hexvar ] mov esi , dword ptr [ edx ] mov edx , esi shr edx , hexvar and edx , num mov ecx , edx shl ecx , num movzx edx , byte ptr [ eax + hexvar ] and edx , hexvar or edx , ecx or edx , hexvar mov byte ptr [ eax + hexvar ] , dl push esi mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num mov eax , dword ptr [ ebx + eax * num - hexvar ] lea eax , [ ebx + eax - hexvar ] push eax push num call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , rsp add rax , - hexvar mov rsp , rax mov rcx , rsp add rcx , - hexvar mov rsp , rcx mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdx mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdi mov r8 , qword ptr [ hexvar ] and r8 , hexvar mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rcx mov qword ptr [ rbp - hexvar ] , r8 mov rax , qword ptr [ rbp - hexvar ] cmp rax , num setne cl xor cl , hexvar xor cl , hexvar and cl , num movzx edx , cl mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi ] mov cl , dl mov r8b , byte ptr [ rdi + hexvar ] and cl , num shl cl , num and r8b , hexvar or r8b , cl mov byte ptr [ rdi + hexvar ] , r8b mov rdi , qword ptr [ rsi ] mov cl , byte ptr [ rdi + hexvar ] and cl , hexvar or cl , hexvar mov byte ptr [ rdi + hexvar ] , cl mov rdi , qword ptr [ rsi ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ hexvar ] call hexvar mov rcx , qword ptr [ rbp - hexvar ] mov dword ptr [ rcx ] , eax cmp dword ptr [ rcx ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , ecx mov eax , dword ptr [ rbp - hexvar ] movsxd rcx , eax shl rcx , num movabs rdx , hexvar add rdx , rcx mov qword ptr [ rbp - hexvar ] , rdx movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] add rax , qword ptr [ rcx ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rsp , rbp pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea edx , [ ebx + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx ] mov edx , esi shr edx , hexvar and edx , num mov ecx , edx movzx edx , byte ptr [ eax + hexvar ] shl ecx , num and edx , hexvar or edx , ecx or edx , hexvar mov byte ptr [ eax + hexvar ] , dl push esi mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebx + eax * num - hexvar ] sub esp , num push num lea eax , [ ebx + eax - hexvar ] push eax push num call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ hexvar ] and esi , hexvar cmp esi , num setne bl xor bl , hexvar xor bl , hexvar and bl , num movzx ebx , bl mov esi , dword ptr [ ebp + hexvar ] mov bh , byte ptr [ esi + hexvar ] and bl , num shl bl , num and bh , hexvar or bh , bl mov byte ptr [ esi + hexvar ] , bh mov esi , dword ptr [ ebp + hexvar ] mov bl , byte ptr [ esi + hexvar ] and bl , hexvar or bl , hexvar mov byte ptr [ esi + hexvar ] , bl mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , ebx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] lea ecx , [ hexvar ] add ecx , dword ptr [ eax * num + hexvar ] mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ hexvar ] and rdx , hexvar cmp rdx , num setne al xor al , hexvar xor al , hexvar and al , num movzx ecx , al mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx add rsi , hexvar mov al , cl mov r8b , byte ptr [ rdx + hexvar ] and al , num shl al , num mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , r8b mov byte ptr [ rbp - hexvar ] , al mov al , byte ptr [ rbp - hexvar ] and al , hexvar mov cl , byte ptr [ rbp - hexvar ] or al , cl mov rdx , qword ptr [ rbp - hexvar ] mov byte ptr [ rdx ] , al mov rsi , qword ptr [ rbp - hexvar ] mov al , byte ptr [ rsi + hexvar ] and al , hexvar or al , hexvar mov byte ptr [ rsi + hexvar ] , al mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , num jmp hexvar movsxd rax , dword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax movabs rax , hexvar mov rcx , qword ptr [ rbp - hexvar ] add rax , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea edx , [ ebx + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov esi , dword ptr [ edx ] mov edx , esi shr edx , hexvar and edx , num mov ecx , edx movzx edx , byte ptr [ eax + hexvar ] shl ecx , num and edx , hexvar or edx , ecx or edx , hexvar mov byte ptr [ eax + hexvar ] , dl push esi mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebx + eax * num - hexvar ] sub esp , num push num lea eax , [ ebx + eax - hexvar ] push eax push num call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
lui gp , hexvar lbu v0 , hexvar ( a2 ) move v1 , a2 addiu gp , gp , - hexvar move a2 , a1 move a1 , a0 lw a0 , - hexvar ( gp ) addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw a3 , ( a0 ) move a0 , v1 sw gp , hexvar ( sp ) ext t0 , a3 , hexvar , num ins v0 , t0 , num , num addiu t0 , zero , num ins v0 , t0 , num , num jal hexvar sb v0 , hexvar ( v1 ) beqz v0 , hexvar lui v1 , hexvar sll v0 , v0 , num addiu v1 , v1 , hexvar addu v0 , v0 , v1 lw v1 , ( v0 ) lui v0 , hexvar addiu v0 , v0 , hexvar addu v0 , v0 , v1 lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero
sub rsp , num mov rcx , qword ptr [ rip + hexvar ] mov r8 , rdi mov rdi , rdx movzx edx , byte ptr [ rdx + hexvar ] mov rax , rcx shr rax , hexvar and eax , num and edx , hexvar shl eax , num or eax , edx mov rdx , rsi mov rsi , r8 or eax , hexvar mov byte ptr [ rdi + hexvar ] , al call hexvar test eax , eax je hexvar cdqe mov rax , qword ptr [ rax * num + hexvar ] add rsp , num add rax , hexvar ret
push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] lea edx , [ ebx + hexvar ] mov esi , dword ptr [ edx ] mov edx , esi shr edx , hexvar and edx , num mov ecx , edx shl ecx , num movzx edx , byte ptr [ eax + hexvar ] and edx , hexvar or edx , ecx or edx , hexvar mov byte ptr [ eax + hexvar ] , dl push esi mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num mov eax , dword ptr [ ebx + eax * num - hexvar ] lea eax , [ ebx + eax - hexvar ] push eax push num call hexvar add esp , hexvar add esp , num pop ebx pop esi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 move s2 , a3 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 mul a2 , s0 , s2 bnez a2 , hexvar move a1 , zero move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , s1
push { r4 , r5 , r6 , lr } mov r4 , r0 mov r5 , r1 bl hexvar subs r6 , r0 , num beq hexvar muls r2 , r5 , r4 bne hexvar mov r0 , r6 pop { r4 , r5 , r6 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] imul rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num je hexvar mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] leave ret
mov rdx , rdi mov eax , hexvar push rbx or rdx , rsi cmp rdx , rax jbe hexvar test rsi , rsi je hexvar mov rax , rdi mul rsi jo hexvar mov rbx , rdi imul rbx , rsi test rbx , rbx js hexvar mov esi , num mov rdi , rbx call hexvar test rax , rax jne hexvar test rbx , rbx je hexvar mov edi , num call hexvar xor eax , eax pop rbx ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx push edx push eax push edi push esi call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar imul esi , dword ptr [ esp + num ] test esi , esi jne hexvar mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r12 push rbp push rbx mov rbx , rdi mov r12 , rsi call hexvar mov rbp , rax test rax , rax je hexvar imul rbx , r12 test rbx , rbx jne hexvar mov rax , rbp pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] imul eax , edx mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar sub esp , num push dword ptr [ ebp - hexvar ] push num push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - num ] leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a3 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar move s0 , a1 lw gp , hexvar ( sp ) beqz v0 , hexvar move v1 , v0 mul a2 , s0 , s1 bnez a2 , hexvar lw t9 , - hexvar ( gp ) lw ra , hexvar ( sp ) move v0 , v1 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a1 , zero jalr t9 move a0 , v0 lw ra , hexvar ( sp ) move v1 , v0 lw s1 , hexvar ( sp ) move v0 , v1 lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdi , qword ptr [ rbp - num ] mov rsi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] imul rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rdi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] xor esi , esi call hexvar mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s0 , a1 move s2 , a3 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s1 , v0 mul a2 , s0 , s2 bnez a2 , hexvar move a1 , zero move v0 , s1 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a0 , v0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , s1
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push num push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar ret
push r15 push r14 push rbx mov r14 , rdx mov rdx , qword ptr [ rsi ] test rdx , rdx je hexvar mov rbx , rsi cmp qword ptr [ rsi + num ] , num je hexvar mov r15 , rdi cmp dword ptr [ rbx + hexvar ] , - num je hexvar mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbx ] jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar mov ecx , dword ptr [ esi + num ] test ecx , ecx je hexvar mov edx , dword ptr [ esi + hexvar ] cmp edx , - num jne hexvar mov dword ptr [ esi + hexvar ] , num sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax setne al movzx eax , al add esp , num pop ebx pop esi ret
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esi ] test eax , eax je hexvar mov ecx , dword ptr [ esi + num ] test ecx , ecx je hexvar mov edx , dword ptr [ esi + hexvar ] cmp edx , - num jne hexvar mov dword ptr [ esi + hexvar ] , num sub esp , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esi + hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax setne al movzx eax , al add esp , num pop ebx pop esi ret
push r15 push r14 push rbx mov r14 , rdx mov rdx , qword ptr [ rsi ] test rdx , rdx je hexvar mov rbx , rsi cmp qword ptr [ rsi + num ] , num je hexvar mov r15 , rdi cmp dword ptr [ rbx + hexvar ] , - num je hexvar mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbx ] jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov r14 , rdx mov rdx , qword ptr [ rsi ] test rdx , rdx je hexvar mov rbx , rsi cmp qword ptr [ rsi + num ] , num je hexvar mov r15 , rdi cmp dword ptr [ rbx + hexvar ] , - num je hexvar mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbx ] jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , num ] ldr r2 , [ sp , num ] mov r1 , num ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push r15 push r14 push rbx mov r14 , rdx mov rdx , qword ptr [ rsi ] test rdx , rdx je hexvar mov rbx , rsi cmp qword ptr [ rsi + num ] , num je hexvar mov r15 , rdi cmp dword ptr [ rbx + hexvar ] , - num je hexvar mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbx ] jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov r14 , rdx mov rdx , qword ptr [ rsi ] test rdx , rdx je hexvar mov rbx , rsi cmp qword ptr [ rsi + num ] , num je hexvar mov r15 , rdi cmp dword ptr [ rbx + hexvar ] , - num je hexvar mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbx ] jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push r15 push r14 push rbx mov r14 , rdx mov rdx , qword ptr [ rsi ] test rdx , rdx je hexvar mov rbx , rsi cmp qword ptr [ rsi + num ] , num je hexvar mov r15 , rdi cmp dword ptr [ rbx + hexvar ] , - num je hexvar mov rdi , rbx mov rsi , r14 call hexvar test eax , eax je hexvar mov rdx , qword ptr [ rbx ] jmp hexvar mov ecx , hexvar mov edi , num mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar xor eax , eax pop rbx pop r14 pop r15 ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , ebp call hexvar mov edi , eax mov dword ptr [ esp + hexvar ] , eax mov ecx , hexvar mov eax , num repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub esp , hexvar add eax , hexvar push eax call hexvar mov esi , eax add esp , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov byte ptr [ eax ] , num mov dword ptr [ esp + num ] , num mov ecx , hexvar mov eax , num mov edi , esi repne scasb al , byte ptr es : [ edi ] mov edx , ecx not edx sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] push edi lea eax , [ ebx - hexvar ] push eax push - num push num lea eax , [ esi + edx - num ] push eax call hexvar add esp , hexvar push edi call hexvar add esp , num push num push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , esi mov eax , ebp call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , ebp call hexvar mov edi , eax mov dword ptr [ esp + hexvar ] , eax mov ecx , hexvar mov eax , num repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub esp , hexvar add eax , hexvar push eax call hexvar mov esi , eax add esp , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov byte ptr [ eax ] , num mov dword ptr [ esp + num ] , num mov ecx , hexvar mov eax , num mov edi , esi repne scasb al , byte ptr es : [ edi ] mov edx , ecx not edx sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] push edi lea eax , [ ebx - hexvar ] push eax push - num push num lea eax , [ esi + edx - num ] push eax call hexvar add esp , hexvar push edi call hexvar add esp , num push num push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , esi mov eax , ebp call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov byte ptr [ eax ] , num mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax + hexvar ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , num sub esp , num push dword ptr [ ebp - hexvar ] lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] add edx , eax sub esp , num push dword ptr [ ebp - hexvar ] lea eax , [ ebx - hexvar ] push eax push edx call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , hexvar push num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , ebp call hexvar mov edi , eax mov dword ptr [ esp + hexvar ] , eax mov ecx , hexvar mov eax , num repne scasb al , byte ptr es : [ edi ] mov eax , ecx not eax sub esp , hexvar add eax , hexvar push eax call hexvar mov esi , eax add esp , hexvar cmp dword ptr [ esp + hexvar ] , num jne hexvar mov byte ptr [ eax ] , num mov dword ptr [ esp + num ] , num mov ecx , hexvar mov eax , num mov edi , esi repne scasb al , byte ptr es : [ edi ] mov edx , ecx not edx sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] push edi lea eax , [ ebx - hexvar ] push eax push - num push num lea eax , [ esi + edx - num ] push eax call hexvar add esp , hexvar push edi call hexvar add esp , num push num push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , esi mov eax , ebp call hexvar add esp , hexvar test eax , eax jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov eax , dword ptr [ rax + hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar add rax , hexvar mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp dword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] mov byte ptr [ rax ] , num mov qword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov dword ptr [ rbp - hexvar ] , num mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] lea rsi , [ rip + hexvar ] mov rdi , rax mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] lea rcx , [ rdx + rax ] mov rax , qword ptr [ rbp - hexvar ] mov rdx , rax lea rsi , [ rip + hexvar ] mov rdi , rcx mov eax , num call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov ecx , dword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov r8d , num mov rdi , rax call hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar mov eax , num leave ret
push r14 push r13 mov r14d , esi push r12 mov r12 , rdi push rbp push rbx mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdi ] mov rbx , qword ptr [ rdi + num ] mov r13d , dword ptr [ rdi + hexvar ] mov qword ptr [ r12 + hexvar ] , rax call hexvar mov rdi , rbx call hexvar lea rdi , [ rax + hexvar ] call hexvar test r14d , r14d mov rbp , rax jne hexvar mov byte ptr [ rax ] , num xor r14d , r14d mov rdi , rbp call hexvar lea rcx , [ rip + hexvar ] lea rdi , [ rbp + rax ] mov r8 , rbx mov rdx , - num mov esi , num xor eax , eax call hexvar mov rdi , rbx call hexvar mov edi , hexvar call hexvar mov rdi , rbp mov rbx , rax call hexvar mov qword ptr [ rbx + num ] , rax mov rax , qword ptr [ r12 + hexvar ] mov rdi , rbp mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx + hexvar ] , r13d mov qword ptr [ r12 + hexvar ] , rbx mov dword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx ] , rax mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num mov qword ptr [ rbx + hexvar ] , num call hexvar pop rbx mov eax , num pop rbp pop r12 pop r13 pop r14 ret
push r15 push r14 mov r15 , rdi push r13 push r12 lea r12 , [ rdi + hexvar ] push rbp push rbx mov r13d , esi sub rsp , num mov rax , qword ptr [ rdi + hexvar ] mov rdi , r12 mov r14d , dword ptr [ rax + hexvar ] call hexvar mov rdi , rax mov rbp , rax call hexvar lea rdi , [ rax + hexvar ] call hexvar test r13d , r13d mov rbx , rax jne hexvar mov byte ptr [ rax ] , num xor r13d , r13d mov rdi , rbx call hexvar lea rcx , [ rip + hexvar ] lea rdi , [ rbx + rax ] mov r8 , rbp mov rdx , - num mov esi , num xor eax , eax call hexvar mov rdi , rbp call hexvar xor r8d , r8d mov ecx , r14d mov rdx , r13 mov rsi , rbx mov rdi , r12 call hexvar test eax , eax je hexvar mov rdi , rbx call hexvar mov eax , num add rsp , num pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s3 , a1 lw v0 , hexvar ( a0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ edx + hexvar ] lea ebp , [ edx + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , ebp call hexvar sub esp , hexvar mov edi , eax push eax call hexvar add eax , hexvar mov dword ptr [ esp ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov esi , eax mov edx , dword ptr [ esp + hexvar ] test ecx , ecx jne hexvar mov byte ptr [ eax ] , num xor ecx , ecx mov dword ptr [ esp + hexvar ] , ecx sub esp , hexvar push esi call hexvar lea edx , [ ebx - hexvar ] add eax , esi mov dword ptr [ esp ] , edi push edx push - num push num push eax call hexvar add esp , hexvar push edi call hexvar pop eax pop edx push num push dword ptr [ esp + hexvar ] mov edx , esi mov ecx , dword ptr [ esp + hexvar ] mov eax , ebp call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a2 , hexvar addiu a2 , a2 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lui v0 , hexvar addiu a2 , v0 , hexvar lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a2 , hexvar addiu a2 , a2 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r2 , [ pc , hexvar ] ldr r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push { r4 , r5 , r6 , lr } sub sp , sp , hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs r4 , r0 , num beq hexvar mov r2 , sp mov r1 , r4 mov r0 , num bl hexvar cmp r0 , num blt hexvar ldr r3 , [ sp , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar beq hexvar cmp r3 , hexvar bne hexvar add r1 , sp , hexvar ldm r1 , { r0 , r1 } cmp r0 , num sbcs r3 , r1 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) move s0 , a0 addiu a2 , sp , hexvar addiu a0 , zero , num jalr t9 move a1 , s0 bltz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , zero , hexvar andi v0 , v0 , hexvar beq v0 , v1 , hexvar lw t9 , - hexvar ( gp ) ori v1 , zero , hexvar bne v0 , v1 , hexvar addiu a2 , zero , num lw v0 , hexvar ( sp ) bltz v0 , hexvar lw v1 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , ( s1 ) bne a1 , a0 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , num lw gp , hexvar ( sp ) move s2 , v0 lw v0 , ( v0 ) addiu a2 , zero , num beq v0 , v1 , hexvar lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , - num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar cmp eax , num jge hexvar call hexvar cmp dword ptr [ rax ] , num jne hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov edi , dword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , rax mov al , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , hexvar xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , hexvar jne hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar je hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jge hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar jmp hexvar jmp hexvar mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) lw s1 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s1 ) sw v0 , hexvar ( sp ) beqz a0 , hexvar lw t9 , - hexvar ( gp ) move s0 , a0 addiu a2 , sp , hexvar addiu a0 , zero , num jalr t9 move a1 , s0 bltz v0 , hexvar lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) addiu v1 , zero , hexvar andi v0 , v0 , hexvar beq v0 , v1 , hexvar lw t9 , - hexvar ( gp ) ori v1 , zero , hexvar bne v0 , v1 , hexvar addiu a2 , zero , num lw v0 , hexvar ( sp ) bltz v0 , hexvar lw v1 , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , ( s1 ) bne a1 , a0 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop addiu v1 , zero , num lw gp , hexvar ( sp ) move s2 , v0 lw v0 , ( v0 ) addiu a2 , zero , num beq v0 , v1 , hexvar lw t9 , - hexvar ( gp )
push { r4 , r5 , r6 , r7 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 ] subs r5 , r0 , num str r3 , [ sp , hexvar ] beq hexvar mov r2 , sp mov r1 , r5 mov r0 , num bl hexvar cmp r0 , num blt hexvar ldr r3 , [ sp , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar moveq r2 , num ldreq r1 , [ pc , hexvar ] beq hexvar cmp r3 , hexvar movne r2 , num ldrne r1 , [ pc , hexvar ] bne hexvar add r1 , sp , hexvar ldm r1 , { r0 , r1 } cmp r0 , num sbcs r3 , r1 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , - num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar cmp eax , num jge hexvar call hexvar cmp dword ptr [ rax ] , num jne hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov edi , dword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , rax mov al , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , hexvar xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , hexvar jne hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , hexvar xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , hexvar je hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jge hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar jmp hexvar jmp hexvar mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov qword ptr [ rbp - num ] , - num jmp hexvar mov rdi , qword ptr [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] call hexvar cmp eax , num jge hexvar call hexvar cmp dword ptr [ rax ] , num jne hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov qword ptr [ rbp - hexvar ] , rsi call hexvar mov edi , dword ptr [ rax ] call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rdx , rax mov al , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , hexvar xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , hexvar jne hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] xor eax , hexvar mov ecx , hexvar mov edx , ecx xor edx , hexvar xor ecx , hexvar or eax , edx or ecx , hexvar xor eax , hexvar and eax , ecx cmp eax , hexvar je hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar cmp qword ptr [ rbp - hexvar ] , num jge hexvar movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax jmp hexvar jmp hexvar jmp hexvar jmp hexvar mov qword ptr [ rbp - num ] , - num mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , - num jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar test eax , eax jns hexvar call hexvar mov eax , dword ptr [ rax ] cmp eax , num jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx mov eax , num call hexvar jmp hexvar call hexvar mov eax , dword ptr [ rax ] mov edi , eax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rcx , rax mov rax , qword ptr [ rbp - hexvar ] mov rdx , rbx mov rsi , rax mov rdi , rcx mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx mov eax , num call hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] and eax , hexvar cmp eax , hexvar je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] test rax , rax jns hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx mov eax , num call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] jmp hexvar mov rax , - num mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test rdi , rdi je hexvar mov rbx , rdi mov rdx , rsp mov rsi , rdi mov edi , num call hexvar test eax , eax js hexvar mov eax , dword ptr [ rsp + hexvar ] and eax , hexvar cmp eax , hexvar je hexvar cmp eax , hexvar jne hexvar mov rax , qword ptr [ rsp + hexvar ] test rax , rax js hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push { r4 , r5 , r6 , r7 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ r4 ] subs r5 , r0 , num str r3 , [ sp , hexvar ] beq hexvar mov r2 , sp mov r1 , r5 mov r0 , num bl hexvar cmp r0 , num blt hexvar ldr r3 , [ sp , hexvar ] and r3 , r3 , hexvar cmp r3 , hexvar moveq r2 , num ldreq r1 , [ pc , hexvar ] beq hexvar cmp r3 , hexvar movne r2 , num ldrne r1 , [ pc , hexvar ] bne hexvar add r1 , sp , hexvar ldm r1 , { r0 , r1 } cmp r0 , num sbcs r3 , r1 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + hexvar ] , eax mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ecx + num ] mov edx , num div dword ptr [ ebx + hexvar ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , num ( v0 ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) teq v0 , zero , num divu zero , v1 , v0 mfhi v0 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , ( v0 ) lw v0 , hexvar ( fp ) sll v0 , v0 , num addu v0 , v1 , v0 sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lw v1 , hexvar ( fp ) beq v1 , v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ esp + hexvar ] , eax mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebx + num ] mov edx , num div dword ptr [ esi + hexvar ]
push ebp push edi push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax ] mov eax , dword ptr [ ecx + num ] mov ebp , edx mov dword ptr [ esp + hexvar ] , edx xor edx , edx div ebp lea eax , [ esi + edx * num ] mov edx , dword ptr [ eax ] test edx , edx je hexvar cmp ecx , edx jne hexvar jmp hexvar nop cmp eax , ecx je hexvar mov edx , eax mov eax , dword ptr [ edx ] test eax , eax jne hexvar lea eax , [ edi - hexvar ] sub esp , num push eax lea eax , [ edi - hexvar ] push hexvar push eax call hexvar mov esi , esi lea edi , [ edi ] mov eax , edx mov edx , dword ptr [ ecx ] test ebx , ebx mov dword ptr [ eax ] , edx mov dword ptr [ ecx + num ] , ebx je hexvar movzx ebp , byte ptr [ ebx ] xor edx , edx lea edi , [ ebx + num ] test ebp , ebp je hexvar lea esi , [ esi ] mov eax , ebp add edi , num shl eax , hexvar add ebp , eax add edx , ebp movzx ebp , byte ptr [ edi - num ] mov eax , edx shr eax , num xor edx , eax test ebp , ebp jne hexvar sub edi , ebx lea eax , [ edi - num ] add edx , eax shl eax , hexvar add eax , edx mov edx , eax shr edx , num xor eax , edx xor edx , edx mov dword ptr [ ecx + num ] , eax div dword ptr [ esp + hexvar ]
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov edi , dword ptr [ eax ] mov eax , dword ptr [ ecx + num ] mov ebp , edx mov dword ptr [ esp + hexvar ] , edx xor edx , edx div ebp lea eax , [ edi + edx * num ] mov edx , dword ptr [ eax ] test edx , edx je hexvar cmp edx , ecx jne hexvar jmp hexvar nop cmp eax , ecx je hexvar mov edx , eax mov eax , dword ptr [ edx ] test eax , eax jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push hexvar push eax call hexvar mov esi , esi lea edi , [ edi ] mov eax , edx mov edx , dword ptr [ ecx ] lea ebx , [ esi + num ] mov dword ptr [ eax ] , edx mov dword ptr [ ecx + num ] , esi xor edx , edx movzx ebp , byte ptr [ esi ] test ebp , ebp je hexvar lea esi , [ esi ] mov eax , ebp add ebx , num shl eax , hexvar add ebp , eax add edx , ebp movzx ebp , byte ptr [ ebx - num ] mov eax , edx shr eax , num xor edx , eax test ebp , ebp jne hexvar sub ebx , esi lea eax , [ ebx - num ] add edx , eax shl eax , hexvar add eax , edx mov edx , eax shr edx , num xor eax , edx xor edx , edx mov dword ptr [ ecx + num ] , eax div dword ptr [ esp + hexvar ]
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v1 , num ( a2 )
push r12 push rbp push rbx mov rbp , rdi mov r12 , rsi mov rbx , rdx mov ecx , dword ptr [ rdi + hexvar ] mov rax , qword ptr [ rdx + hexvar ] mov edx , num div rcx mov rax , qword ptr [ rdi ] lea rcx , [ rax + rdx * num ] mov rdx , qword ptr [ rcx ] cmp rbx , rdx je hexvar test rdx , rdx jne hexvar mov rax , rdx jmp hexvar mov rdx , rax mov rax , qword ptr [ rdx ] test rax , rax sete sil cmp rax , rbx sete cl or sil , cl je hexvar mov rcx , rdx test rax , rax je hexvar mov rax , qword ptr [ rbx ] mov qword ptr [ rcx ] , rax mov qword ptr [ rbx + num ] , r12 test r12 , r12 je hexvar lea rsi , [ r12 + num ] movzx eax , byte ptr [ r12 ] test eax , eax je hexvar mov ecx , num mov edx , eax shl edx , hexvar add edx , eax mov eax , edx add rax , rcx mov rcx , rax shr rcx , num xor rcx , rax add rsi , num movzx eax , byte ptr [ rsi - num ] test eax , eax jne hexvar sub rsi , r12 sub esi , num mov eax , esi shl eax , hexvar lea eax , [ rax + rsi ] add rax , rcx mov rdx , rax shr rdx , num xor rax , rdx mov qword ptr [ rbx + hexvar ] , rax mov ecx , dword ptr [ rbp + hexvar ] mov edx , num div rcx mov edx , edx mov rax , qword ptr [ rbp ] mov rax , qword ptr [ rax + rdx * num ] mov qword ptr [ rbx ] , rax mov rax , qword ptr [ rbp ] mov qword ptr [ rax + rdx * num ] , rbx pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + num ] mov ebx , dword ptr [ edx + hexvar ] mov edx , num div ebx
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ eax + hexvar ] mov edi , dword ptr [ eax ] mov eax , dword ptr [ ecx + num ] mov ebp , edx mov dword ptr [ esp + hexvar ] , edx xor edx , edx div ebp lea eax , [ edi + edx * num ] mov edx , dword ptr [ eax ] test edx , edx je hexvar cmp edx , ecx jne hexvar jmp hexvar nop cmp eax , ecx je hexvar mov edx , eax mov eax , dword ptr [ edx ] test eax , eax jne hexvar lea eax , [ ebx - hexvar ] sub esp , num push eax lea eax , [ ebx - hexvar ] push hexvar push eax call hexvar mov esi , esi lea edi , [ edi ] mov eax , edx mov edx , dword ptr [ ecx ] lea ebx , [ esi + num ] mov dword ptr [ eax ] , edx mov dword ptr [ ecx + num ] , esi xor edx , edx movzx ebp , byte ptr [ esi ] test ebp , ebp je hexvar lea esi , [ esi ] mov eax , ebp add ebx , num shl eax , hexvar add ebp , eax add edx , ebp movzx ebp , byte ptr [ ebx - num ] mov eax , edx shr eax , num xor edx , eax test ebp , ebp jne hexvar sub ebx , esi lea eax , [ ebx - num ] add edx , eax shl eax , hexvar add eax , edx mov edx , eax shr edx , num xor eax , edx xor edx , edx mov dword ptr [ ecx + num ] , eax div dword ptr [ esp + hexvar ]
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ecx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + num ] mov ebx , dword ptr [ edx + hexvar ] mov edx , num div ebx
push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov r12 , rsi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax lea rcx , [ rsp + hexvar ] lea rsi , [ rsp + num ] lea r8 , [ rip + hexvar ] mov edx , hexvar call hexvar cmp eax , num ja hexvar mov eax , eax lea rdx , [ rip + hexvar ] movsxd rax , dword ptr [ rdx + rax * num ] add rax , rdx jmp rax mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r12 ] , rax mov rax , qword ptr [ rsp + num ] mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push rbp mov rbp , rsp push r12 push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rdx , [ rbp - hexvar ] lea rsi , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] lea r8 , [ rip + hexvar ] mov rcx , rdx mov edx , hexvar mov rdi , rax call hexvar cmp eax , num ja hexvar mov eax , eax lea rdx , [ rax * num ] lea rax , [ rip + hexvar ] mov eax , dword ptr [ rdx + rax ] movsxd rdx , eax lea rax , [ rip + hexvar ] add rax , rdx jmp rax mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - hexvar ] cmp rdx , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , - num jmp hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov r12 , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov r8 , r12 mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop r12 pop rbp ret
push r13 push r12 mov r8d , hexvar push rbp push rbx mov rbp , rsi mov r12 , rdx mov edx , hexvar mov rbx , rdi sub rsp , hexvar lea rcx , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar cmp eax , num ja hexvar mov eax , eax jmp qword ptr [ rax * num + hexvar ] nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbp ] , rax mov rbp , qword ptr [ rsp + num ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push ebp push edi mov ebp , edx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov edi , ecx mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ ebx - hexvar ] push eax lea eax , [ esp + hexvar ] push eax push hexvar lea eax , [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar cmp eax , num ja hexvar mov edx , dword ptr [ ebx + eax * num - hexvar ] add edx , ebx jmp edx
push r12 push rbp push rbx sub rsp , hexvar mov rbx , rdi mov r12 , rsi mov rbp , rdx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov r8d , hexvar lea rcx , [ rsp + hexvar ] mov edx , hexvar lea rsi , [ rsp + num ] call hexvar cmp eax , num ja hexvar mov eax , eax jmp qword ptr [ rax * num + hexvar ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ r12 ] , rax jmp hexvar mov eax , num test rbp , rbp je hexvar mov r12 , qword ptr [ rsp + num ] sub r12 , rbx mov edx , num mov rsi , rbp mov edi , num call hexvar mov rbp , rax mov edx , num mov esi , hexvar mov edi , num call hexvar mov r9 , rbx mov r8d , r12d mov rcx , rbp mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar mov eax , num test rbp , rbp je hexvar mov rdi , rbx call hexvar mov r12 , rax mov edx , num mov rsi , rbp mov edi , num call hexvar mov rbx , rax mov edx , num mov esi , hexvar mov edi , num call hexvar mov r8 , r12 mov rcx , rbx mov rdx , rax mov esi , num mov edi , num mov eax , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rsp + num ] mov rbx , qword ptr [ rsp + hexvar ] xor rbx , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 move s1 , a2 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) addiu a3 , sp , hexvar addiu a2 , zero , hexvar addiu a1 , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) sltiu v1 , v0 , num beqz v1 , hexvar sll v1 , v0 , num lui v0 , hexvar addiu v0 , v0 , - hexvar addu v0 , v0 , v1 lw v0 , ( v0 ) jr v0 nop lw v1 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v1 , hexvar sw v0 , ( s0 )
push ebp push edi mov ebp , edx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov edi , ecx mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax lea eax , [ ebx - hexvar ] push eax lea eax , [ esp + hexvar ] push eax push hexvar lea eax , [ esp + hexvar ] push eax push esi call hexvar add esp , hexvar cmp eax , num ja hexvar mov edx , dword ptr [ ebx + eax * num - hexvar ] add edx , ebx jmp edx
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdi , qword ptr [ rbp - hexvar ] mov r8d , hexvar lea rsi , [ rbp - hexvar ] mov edx , hexvar lea rcx , [ rbp - hexvar ] call hexvar mov edx , eax mov ecx , edx sub eax , num mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , eax ja hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax * num + hexvar ] jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx sete dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , - num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] test rax , rax setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax movabs rdi , hexvar call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rax call hexvar xor esi , esi mov edi , num mov rdx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov r8 , rax mov al , num call hexvar mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , r5 , fp , lr } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r2 , fp , hexvar sub r1 , fp , hexvar ldr r3 , [ pc , hexvar ] str r3 , [ sp ] mov r3 , r2 mov r2 , hexvar ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 cmp r3 , num ldrls pc , [ pc , r3 , lsl num ] b hexvar andeq ip , r1 , r0 , lsr r1 andeq ip , r1 , r8 , ror num andeq ip , r1 , r0 , lsr r1 andeq ip , r1 , r8 , ror num andeq ip , r1 , r8 , ror r1 sub r4 , fp , hexvar ldm r4 , { r3 , r4 } mov r2 , r3 ldr r3 , [ fp , - hexvar ] str r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r2 , num sub r4 , fp , hexvar ldm r4 , { r3 , r4 } cmp r2 , r4 cmpeq r1 , r3 beq hexvar ldr r3 , [ fp , - hexvar ] mvn r2 , num str r2 , [ r3 ] b hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r4 , r0 ldr r0 , [ fp , - hexvar ] bl hexvar mov r5 , r0 ldr r0 , [ fp , - hexvar ] bl hexvar mov r3 , r0 str r3 , [ sp ] mov r3 , r5 mov r2 , r4 mov r1 , num mov r0 , num bl hexvar mov r3 , num b hexvar mov r0 , r0 ldr r3 , [ fp , - hexvar ] mov r0 , r3 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , hexvar pop { r4 , r5 , fp , pc }
push r13 push r12 mov r8d , hexvar push rbp push rbx mov rbp , rsi mov r12 , rdx mov edx , hexvar mov rbx , rdi sub rsp , hexvar lea rcx , [ rsp + hexvar ] lea rsi , [ rsp + num ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar cmp eax , num ja hexvar mov eax , eax jmp qword ptr [ rax * num + hexvar ] nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsp + hexvar ] mov qword ptr [ rbp ] , rax mov rbp , qword ptr [ rsp + num ] mov rdx , qword ptr [ rsp + hexvar ] xor rdx , qword ptr fs : [ hexvar ] mov rax , rbp jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar str r1 , [ sp , num ] mov sb , r0 bl hexvar subs r7 , r0 , num moveq r0 , r7 beq hexvar ldr r1 , [ pc , hexvar ] mov r0 , sb bl hexvar subs r6 , r0 , num beq hexvar ldr r5 , [ pc , hexvar ] mov fp , num mov r8 , r5 ldr r4 , [ pc , hexvar ] mov r3 , r6 mov r2 , hexvar mov r1 , num mov r0 , r8 bl hexvar subs sl , r0 , num beq hexvar add r0 , r5 , sl cmp r0 , r5 mvn r2 , fp bls hexvar ldr r1 , [ pc , hexvar ] ldrb r3 , [ r1 ] , num eor r3 , r3 , r2 and r3 , r3 , hexvar ldr r3 , [ r4 , r3 , lsl num ] cmp r0 , r1 eor r2 , r3 , r2 , lsr num bne hexvar mvn fp , r2 b hexvar mov r0 , r6 bl hexvar ldr r3 , [ sp , num ] ldr r2 , [ r3 ] cmp r2 , fp moveq r0 , num beq hexvar mov r0 , r7 bl hexvar mov r2 , num ldr r1 , [ pc , hexvar ] mov r0 , sl bl hexvar mov r1 , sb bl hexvar mov r0 , sl add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi call hexvar xor ecx , ecx test rax , rax mov qword ptr [ rsp + hexvar ] , rax je hexvar lea rsi , [ rip + hexvar ] mov rdi , r12 mov dword ptr [ rsp + hexvar ] , ecx xor r15d , r15d lea r13 , [ rip + hexvar ] mov ebp , hexvar call hexvar test rax , rax mov rbx , rax lea r14 , [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] je hexvar nop dword ptr [ rax ] mov rcx , rbx mov edx , hexvar mov esi , num mov rdi , r13 call hexvar test rax , rax je hexvar mov rdx , r15 add rax , r13 xor rdx , rbp cmp rax , r13 jbe hexvar lea rcx , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx esi , byte ptr [ rcx ] add rcx , num xor esi , edx shr rdx , num movzx esi , sil xor rdx , qword ptr [ r14 + rsi * num ] cmp rax , rcx jne hexvar mov r15d , edx not r15d jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar mov rax , qword ptr [ rsp + num ] mov ecx , num cmp qword ptr [ rax ] , r15 je hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar xor ecx , ecx add rsp , hexvar mov eax , ecx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp mov ebp , esp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ ebp - hexvar ] , num sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar mov eax , num jmp hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar mov eax , num jmp hexvar push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] lea eax , [ ebx + hexvar ] push eax push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax push dword ptr [ ebp - hexvar ] push hexvar push num lea eax , [ ebx + hexvar ] push eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] xor ah , num mov esi , eax mov eax , dword ptr [ ebp - hexvar ] xor ah , num mov edi , eax mov eax , edi or eax , esi test eax , eax jne hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] cmp dword ptr [ ebp - hexvar ] , eax je hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + num ] push eax call hexvar add esp , hexvar mov eax , num jmp hexvar mov eax , num lea esp , [ ebp - hexvar ] pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r15 , rdi mov qword ptr [ rsp ] , rsi call hexvar mov rsi , rax mov qword ptr [ rsp + num ] , rax mov eax , num test rsi , rsi je hexvar lea rsi , [ rip + hexvar ] mov rdi , r15 call hexvar mov r13 , rax mov ebx , num lea r12 , [ rip + hexvar ] mov r14d , hexvar lea rbp , [ rip + hexvar ] test rax , rax jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , r15 mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar not ebx mov rcx , r13 mov edx , hexvar mov esi , num mov rdi , r12 call hexvar test rax , rax je hexvar xor rbx , r14 add rax , r12 cmp rax , r12 jbe hexvar lea rdx , [ rip + hexvar ] mov ecx , ebx xor cl , byte ptr [ rdx ] movzx ecx , cl shr rbx , num xor rbx , qword ptr [ rbp + rcx * num ] add rdx , num cmp rax , rdx jne hexvar jmp hexvar mov rdi , r13 call hexvar mov eax , num mov rdi , qword ptr [ rsp ] cmp qword ptr [ rdi ] , rbx je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , r15 mov rdi , rax mov eax , num call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r15 , rdi mov qword ptr [ rsp ] , rsi call hexvar mov rsi , rax mov qword ptr [ rsp + num ] , rax mov eax , num test rsi , rsi je hexvar lea rsi , [ rip + hexvar ] mov rdi , r15 call hexvar mov r13 , rax mov ebx , num lea r12 , [ rip + hexvar ] mov r14d , hexvar lea rbp , [ rip + hexvar ] test rax , rax jne hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , r15 mov rdi , rax mov eax , num call hexvar mov eax , num jmp hexvar not ebx mov rcx , r13 mov edx , hexvar mov esi , num mov rdi , r12 call hexvar test rax , rax je hexvar xor rbx , r14 add rax , r12 cmp rax , r12 jbe hexvar lea rdx , [ rip + hexvar ] mov ecx , ebx xor cl , byte ptr [ rdx ] movzx ecx , cl shr rbx , num xor rbx , qword ptr [ rbp + rcx * num ] add rdx , num cmp rax , rdx jne hexvar jmp hexvar mov rdi , r13 call hexvar mov eax , num mov rdi , qword ptr [ rsp ] cmp qword ptr [ rdi ] , rbx je hexvar mov rdi , qword ptr [ rsp + num ] call hexvar mov edx , num lea rsi , [ rip + hexvar ] mov edi , num call hexvar mov rsi , r15 mov rdi , rax mov eax , num call hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push ebp push edi xor ebp , ebp push esi push ebx call hexvar add edi , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , edi push dword ptr [ esp + hexvar ] mov ebx , edi call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar lea eax , [ edi - hexvar ] sub esp , num xor esi , esi lea edi , [ edi + hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esp + hexvar ] , eax add esp , hexvar test eax , eax je hexvar mov ebp , dword ptr [ esp + num ] push ebp push hexvar push num push edi mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar add eax , edi not esi cmp eax , edi mov edx , esi jbe hexvar mov esi , dword ptr [ esp + num ] mov ecx , edi lea esi , [ esi - hexvar ] nop movzx ebx , byte ptr [ ecx ] add ecx , num xor ebx , edx shr edx , num movzx ebx , bl xor edx , dword ptr [ esi + ebx * num ] cmp eax , ecx jne hexvar mov esi , edx not esi jmp hexvar nop lea esi , [ esi ] sub esp , hexvar mov ebp , num push dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , edi call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] cmp dword ptr [ eax ] , esi je hexvar sub esp , hexvar xor ebp , ebp push dword ptr [ esp + hexvar ] call hexvar lea eax , [ edi - hexvar ] add esp , hexvar push num push eax push num call hexvar pop edx pop ecx push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar add esp , hexvar mov eax , ebp pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] call hexvar mov edi , eax mov dword ptr [ esp + hexvar ] , eax add esp , hexvar mov eax , num test edi , edi je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax add esp , hexvar mov esi , num lea edi , [ ebx + hexvar ] test eax , eax jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , num jmp hexvar not edx mov esi , edx push ebp push hexvar push num push edi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , esi not edx add eax , edi cmp eax , edi jbe hexvar lea ecx , [ ebx + hexvar ] mov dword ptr [ esp + num ] , eax movzx esi , byte ptr [ ecx ] xor esi , edx mov eax , esi movzx esi , al shr edx , num xor edx , dword ptr [ ebx + esi * num - hexvar ] add ecx , num cmp dword ptr [ esp + num ] , ecx jne hexvar jmp hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov eax , num mov edx , dword ptr [ esp + hexvar ] cmp dword ptr [ edx ] , esi je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar push dword ptr [ esp + hexvar ] call hexvar mov edi , eax mov dword ptr [ esp + hexvar ] , eax add esp , hexvar mov eax , num test edi , edi je hexvar sub esp , num lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax add esp , hexvar mov esi , num lea edi , [ ebx + hexvar ] test eax , eax jne hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , num jmp hexvar not edx mov esi , edx push ebp push hexvar push num push edi call hexvar add esp , hexvar test eax , eax je hexvar mov edx , esi not edx add eax , edi cmp eax , edi jbe hexvar lea ecx , [ ebx + hexvar ] mov dword ptr [ esp + num ] , eax movzx esi , byte ptr [ ecx ] xor esi , edx mov eax , esi movzx esi , al shr edx , num xor edx , dword ptr [ ebx + esi * num - hexvar ] add ecx , num cmp dword ptr [ esp + num ] , ecx jne hexvar jmp hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar mov eax , num mov edx , dword ptr [ esp + hexvar ] cmp dword ptr [ edx ] , esi je hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar push num lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , num push dword ptr [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi call hexvar xor ecx , ecx test rax , rax mov qword ptr [ rsp + hexvar ] , rax je hexvar lea rsi , [ rip + hexvar ] mov rdi , r12 mov dword ptr [ rsp + hexvar ] , ecx xor r15d , r15d lea r13 , [ rip + hexvar ] mov ebp , hexvar call hexvar test rax , rax mov rbx , rax lea r14 , [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] je hexvar nop dword ptr [ rax ] mov rcx , rbx mov edx , hexvar mov esi , num mov rdi , r13 call hexvar test rax , rax je hexvar mov rdx , r15 add rax , r13 xor rdx , rbp cmp rax , r13 jbe hexvar lea rcx , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx esi , byte ptr [ rcx ] add rcx , num xor esi , edx shr rdx , num movzx esi , sil xor rdx , qword ptr [ r14 + rsi * num ] cmp rax , rcx jne hexvar mov r15d , edx not r15d jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar mov rax , qword ptr [ rsp + num ] mov ecx , num cmp qword ptr [ rax ] , r15 je hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar xor ecx , ecx add rsp , hexvar mov eax , ecx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 mov r12 , rdi push rbp push rbx sub rsp , hexvar mov qword ptr [ rsp + num ] , rsi call hexvar xor ecx , ecx test rax , rax mov qword ptr [ rsp + hexvar ] , rax je hexvar lea rsi , [ rip + hexvar ] mov rdi , r12 mov dword ptr [ rsp + hexvar ] , ecx xor r15d , r15d lea r13 , [ rip + hexvar ] mov ebp , hexvar call hexvar test rax , rax mov rbx , rax lea r14 , [ rip + hexvar ] mov ecx , dword ptr [ rsp + hexvar ] je hexvar nop dword ptr [ rax ] mov rcx , rbx mov edx , hexvar mov esi , num mov rdi , r13 call hexvar test rax , rax je hexvar mov rdx , r15 add rax , r13 xor rdx , rbp cmp rax , r13 jbe hexvar lea rcx , [ rip + hexvar ] nop word ptr [ rax + rax ] movzx esi , byte ptr [ rcx ] add rcx , num xor esi , edx shr rdx , num movzx esi , sil xor rdx , qword ptr [ r14 + rsi * num ] cmp rax , rcx jne hexvar mov r15d , edx not r15d jmp hexvar nop word ptr [ rax + rax ] mov rdi , rbx call hexvar mov rax , qword ptr [ rsp + num ] mov ecx , num cmp qword ptr [ rax ] , r15 je hexvar mov rdi , qword ptr [ rsp + hexvar ] call hexvar lea rsi , [ rip + hexvar ] mov edx , num xor edi , edi call hexvar mov rsi , r12 mov rdi , rax xor eax , eax call hexvar xor ecx , ecx add rsp , hexvar mov eax , ecx pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov ecx , edx sub rsp , num xor edx , edx xor r8d , r8d push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov ecx , edx sub rsp , num xor edx , edx xor r8d , r8d push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) move a3 , a2 move a2 , zero sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw a3 , hexvar ( sp ) move a2 , zero lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) sw zero , hexvar ( sp ) move a3 , a2 move a2 , zero jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
addiu sp , sp , - hexvar lw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) move a3 , a2 move a2 , zero sw zero , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw ra , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov ecx , edx sub rsp , num xor edx , edx xor r8d , r8d push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
push rax mov rax , r9 mov r10d , r8d mov r9 , rcx mov ecx , edx sub rsp , num xor edx , edx xor r8d , r8d push qword ptr [ rsp + hexvar ] push rax push r10 call hexvar add rsp , hexvar pop rcx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw zero , hexvar ( sp ) lw a3 , hexvar ( sp ) move a2 , zero lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx mov ebx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , ecx xor ecx , ecx mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ebx pop ebx jmp hexvar jmp hexvar nop nop nop nop nop nop nop nop nop nop nop nop nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) bnez a1 , hexvar sw gp , hexvar ( sp ) bnez a0 , hexvar lw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jr t9 addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop beqz v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rdx , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - num ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar cmp qword ptr [ rbp - hexvar ] , num je hexvar call hexvar mov rax , qword ptr [ rbp - num ] leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v0 , zero b hexvar nop lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , num b hexvar ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar bl hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar bnez a1 , hexvar sw gp , hexvar ( sp ) bnez a0 , hexvar move a1 , zero move a0 , zero lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) b hexvar move v0 , zero lw t9 , - hexvar ( gp )
test rsi , rsi push rbx mov rbx , rsi jne hexvar test rdi , rdi jne hexvar mov rsi , rbx call hexvar test rax , rax jne hexvar test rbx , rbx jne hexvar pop rbx ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar test esi , esi jne hexvar add esp , num pop ebx pop esi ret
push { fp , lr } add fp , sp , num sub sp , sp , num str r0 , [ fp , - num ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ fp , - num ] cmp r3 , num beq hexvar ldr r0 , [ fp , - num ] bl hexvar mov r3 , num b hexvar ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - num ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num beq hexvar bl hexvar ldr r3 , [ fp , - num ] mov r0 , r3 sub sp , fp , num pop { fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) jal hexvar nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) addiu v0 , v0 , hexvar lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea edi , [ ebx - hexvar ] lea ebp , [ ebx - hexvar ] push edi push edi push ebp push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num add esi , hexvar push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar mov esi , eax add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push rbx mov ebx , esi call hexvar test rax , rax je hexvar add rax , hexvar mov rdi , rax mov esi , ebx pop rbx jmp hexvar xor eax , eax pop rbx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) beqz v0 , hexvar move a1 , s0 addiu a0 , v0 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move v0 , zero nop
push rbx mov ebx , esi call hexvar test rax , rax je hexvar add rax , hexvar mov rdi , rax mov esi , ebx pop rbx jmp hexvar xor eax , eax pop rbx ret
push rbx mov ebx , esi call hexvar test rax , rax je hexvar add rax , hexvar mov rdi , rax mov esi , ebx pop rbx jmp hexvar xor eax , eax pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] str r1 , [ sp ] ldr r0 , [ sp , num ] bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , num b hexvar ldr r3 , [ sp , hexvar ] add r3 , r3 , hexvar ldr r1 , [ sp ] mov r0 , r3 bl hexvar mov r3 , r0 mov r0 , r3 add sp , sp , hexvar pop { pc }
push rbx mov ebx , esi call hexvar test rax , rax je hexvar add rax , hexvar mov rdi , rax mov esi , ebx pop rbx jmp hexvar xor eax , eax pop rbx ret
push rbp push rbx push rax mov ebx , esi call hexvar mov qword ptr [ rsp ] , rax mov ecx , hexvar mov ebp , hexvar jmp hexvar mov rdi , qword ptr [ rsp ] add rdi , hexvar mov esi , ebx call hexvar mov ecx , hexvar nop cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar mov ecx , hexvar xor eax , eax jmp hexvar nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebp jmp hexvar add rsp , num pop rbx pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar lea edi , [ ebx - hexvar ] lea ebp , [ ebx - hexvar ] push edi push edi push ebp push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , num add esi , hexvar push dword ptr [ esp + hexvar ] push esi call hexvar add esp , hexvar mov esi , eax add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
push ebx call hexvar add ebx , hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar pop ebx ret
push ebx sub esp , num call hexvar add eax , hexvar sub esp , num lea edx , [ eax - hexvar ] push edx push dword ptr [ esp + hexvar ] mov ebx , eax call hexvar add esp , hexvar nop add esp , num pop ebx ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , hexvar lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal - hexvar nop lw gp , hexvar ( sp ) nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , num ] ldr r1 , [ pc , hexvar ] ldr r0 , [ sp , num ] bl hexvar mov r0 , r0 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) lui a1 , hexvar addiu a1 , a1 , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov esi , edx mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx test eax , eax js hexvar mov eax , num cmp dword ptr [ esp + hexvar ] , num je hexvar mov dword ptr [ esp + hexvar ] , num jmp hexvar neg dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num lea eax , [ ebx + hexvar ] mov ebp , dword ptr [ eax ] test ebp , ebp jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num test eax , eax jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov edi , dword ptr [ esp + hexvar ] cmp edi , ebp jg hexvar mov eax , ebp mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar lui gp , hexvar addiu gp , gp , - hexvar sw s3 , hexvar ( sp ) lui s3 , hexvar sw s2 , hexvar ( sp ) sw s6 , hexvar ( sp ) move s6 , a1 lw s2 , - hexvar ( gp ) move a1 , a0 lw v1 , hexvar ( s3 ) sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) move s5 , a3 sw s4 , hexvar ( sp ) move s4 , a2 sw s1 , hexvar ( sp ) addiu s1 , sp , hexvar sw gp , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) lw v0 , ( s2 ) lw t9 , hexvar ( v1 ) lw a0 , hexvar ( sp ) sw v0 , hexvar ( sp ) jalr t9 nop move a2 , s1 lw v0 , num ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a3 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , - hexvar ( v0 ) lw v0 , hexvar ( v0 ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r4 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs sb , r0 , num rsblt sb , sb , num movlt sl , num movge sl , num cmp sb , num beq hexvar ldr r3 , [ pc , hexvar ] ldr r6 , [ r3 ] cmp r6 , num bne hexvar mov r5 , sb mov r3 , num str r3 , [ sp , num ] str r3 , [ sp , num ] cmp sb , r3 bne hexvar b hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar add r2 , r0 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar sub r5 , r5 , num add r6 , r6 , num mov r4 , r7 cmp r5 , num beq hexvar add r7 , r4 , num ldrb r3 , [ r4 ] cmp r3 , num beq hexvar mov r0 , r3 lsl r3 , r3 , num ldrh r3 , [ r8 , r3 ] tst r3 , num beq hexvar cmp r5 , num bhi hexvar cmp sb , r6 movle sl , num andgt sl , sl , num cmp sl , num bne hexvar mov r0 , r6 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a3 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lui v0 , hexvar lw v0 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } ldr fp , [ pc , hexvar ] sub sp , sp , hexvar ldr r3 , [ fp ] subs sb , r0 , num mov r6 , r1 str r3 , [ sp , hexvar ] blt hexvar moveq r0 , sb beq hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r3 , num beq hexvar mov r3 , num str r3 , [ sp , num ] b hexvar mov r7 , r0 ldr r3 , [ sp , num ] cmp r7 , sb movge r3 , num andlt r3 , r3 , num cmp r3 , num bne hexvar mov r0 , r7 ldr r2 , [ sp , hexvar ] ldr r3 , [ fp ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ esp + hexvar ] , eax mov esi , edx mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx test eax , eax js hexvar mov eax , num cmp dword ptr [ esp + hexvar ] , num je hexvar mov dword ptr [ esp + hexvar ] , num jmp hexvar neg dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , num lea eax , [ ebx + hexvar ] mov ebp , dword ptr [ eax ] test ebp , ebp jne hexvar mov eax , dword ptr [ esp + hexvar ] mov edi , eax mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , num test eax , eax jne hexvar cmp dword ptr [ esp + hexvar ] , num je hexvar mov edi , dword ptr [ esp + hexvar ] cmp edi , ebp jg hexvar mov eax , ebp mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push r15 push r14 mov r15 , rsi push r13 push r12 mov r12d , edi push rbp push rbx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax test edi , edi js hexvar mov eax , num je hexvar mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar mov byte ptr [ rsp + hexvar ] , num jmp hexvar nop dword ptr [ rax + rax ] cmp ebx , r12d jge hexvar cmp byte ptr [ rsp + hexvar ] , num je hexvar mov edx , r12d lea rcx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] sub edx , ebx mov edi , num xor eax , eax mov ebx , r12d call hexvar mov eax , ebx mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r15d , edi mov rbx , rsi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax mov dword ptr [ rsp + hexvar ] , num test edi , edi js hexvar test r15d , r15d je hexvar mov r12d , dword ptr [ rip + hexvar ] test r12d , r12d jne hexvar mov ebp , r15d mov qword ptr [ rsp + hexvar ] , num test r15d , r15d jne hexvar jmp hexvar neg r15d mov dword ptr [ rsp + hexvar ] , num jmp hexvar lea rcx , [ rip + hexvar ] mov edx , hexvar lea rsi , [ rip + hexvar ] lea rdi , [ rip + hexvar ] call hexvar lea edx , [ rdi + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar sub ebp , num add r12d , num mov rbx , r13 test ebp , ebp je hexvar lea r13 , [ rbx + num ] movzx eax , byte ptr [ rbx ] test al , al je hexvar movsx edi , al movzx eax , al movzx eax , word ptr [ r14 + rax * num ] test al , num je hexvar cmp ebp , num ja hexvar cmp dword ptr [ rsp + hexvar ] , num je hexvar cmp r15d , r12d jle hexvar mov edx , r15d sub edx , r12d lea rcx , [ rip + hexvar ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar mov r12d , r15d mov eax , r12d mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } sub sp , sp , hexvar mov r4 , r1 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] subs sb , r0 , num rsblt sb , sb , num movlt sl , num blt hexvar cmp sb , num moveq r0 , num beq hexvar mov sl , num ldr r3 , [ pc , hexvar ] ldr r6 , [ r3 ] cmp r6 , num bne hexvar mov r5 , sb mov r3 , num str r3 , [ sp , num ] str r3 , [ sp , num ] cmp sb , r3 bne hexvar cmp sb , r6 movle sl , num andgt sl , sl , num cmp sl , num bne hexvar mov r0 , r6 ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
push { r4 , r5 , r6 , r7 , r8 , lr } mov r4 , r0 mov r0 , r2 mov r8 , r3 mov r6 , r1 mov r5 , r2 bl hexvar mov r1 , r5 mov r7 , r0 mov r2 , r0 ldr r0 , [ r4 ] bl hexvar cmp r0 , num moveq r0 , num ldreq r3 , [ r6 ] movne r0 , num strbeq r8 , [ r3 ] ldreq r3 , [ r4 ] addeq r7 , r3 , r7 streq r7 , [ r4 ] ldreq r3 , [ r6 ] addeq r3 , r3 , r0 streq r3 , [ r6 ] pop { r4 , r5 , r6 , r7 , r8 , pc }
push r13 push r12 push rbp push rbx sub rsp , num mov rbp , rdi mov r12 , rsi mov rsi , rdx mov r13d , ecx mov rcx , - num mov eax , num mov rdi , rdx repne scasb al , byte ptr [ rdi ] mov rbx , rcx not rbx lea rbx , [ rbx - num ] mov rdx , rbx mov rdi , qword ptr [ rbp ] call hexvar mov edx , num test eax , eax jne hexvar mov rax , qword ptr [ r12 ] mov byte ptr [ rax ] , r13b add qword ptr [ rbp ] , rbx add qword ptr [ r12 ] , num mov edx , num mov eax , edx add rsp , num pop rbx pop rbp pop r12 pop r13 ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al sub esp , hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movzx edx , byte ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi mov edi , ecx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax push ecx call hexvar add esp , hexvar mov ebp , eax push eax push edi push dword ptr [ esi ] call hexvar add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] movzx ecx , byte ptr [ esp + num ] mov eax , dword ptr [ edx ] mov byte ptr [ eax ] , cl add dword ptr [ esi ] , ebp mov eax , num add dword ptr [ edx ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi mov edi , ecx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax push ecx call hexvar add esp , hexvar mov ebp , eax push eax push edi push dword ptr [ esi ] call hexvar add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] movzx ecx , byte ptr [ esp + num ] mov eax , dword ptr [ edx ] mov byte ptr [ eax ] , cl add dword ptr [ esi ] , ebp mov eax , num add dword ptr [ edx ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov eax , ecx mov byte ptr [ rbp - hexvar ] , al mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - num ] mov rcx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] movzx edx , byte ptr [ rbp - hexvar ] mov byte ptr [ rax ] , dl mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax ] mov rax , qword ptr [ rbp - num ] add rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] lea rdx , [ rax + num ] mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rax ] , rdx mov eax , num leave ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) move s4 , a3 sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) move s2 , a1 sw s1 , hexvar ( sp ) move s1 , a2 sw s0 , hexvar ( sp ) move s0 , a0 sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , a2 move a1 , s1 lw gp , hexvar ( sp ) move a2 , v0 lw a0 , ( s0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al sub esp , hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movzx edx , byte ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push ebp push edi mov edi , ecx push esi push ebx mov esi , eax call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax push ecx call hexvar add esp , hexvar mov ebp , eax push eax push edi push dword ptr [ esi ] call hexvar add esp , hexvar test eax , eax jne hexvar mov edx , dword ptr [ esp + hexvar ] movzx ecx , byte ptr [ esp + num ] mov eax , dword ptr [ edx ] mov byte ptr [ eax ] , cl add dword ptr [ esi ] , ebp mov eax , num add dword ptr [ edx ] , num add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ ebp - hexvar ] , al sub esp , hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] movzx edx , byte ptr [ ebp - hexvar ] mov byte ptr [ eax ] , dl mov eax , dword ptr [ ebp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] add edx , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] lea edx , [ eax + num ] mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ eax ] , edx mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push r15 push r14 push r12 push rbx push rax mov r14 , rdx mov r15 , rsi mov r12 , rdi cmp qword ptr [ rip + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov qword ptr [ rax ] , num mov rdi , r12 call hexvar mov qword ptr [ rbx + num ] , rax mov qword ptr [ rbx + hexvar ] , r15 mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar xor ebx , ebx xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar lea eax , [ ebx - hexvar ] sub esp , num push hexvar push eax push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , hexvar mov dword ptr [ eax ] , num push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax pop eax pop edx push esi push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num add esp , hexvar pop ebx pop esi ret
sub esp , hexvar push dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov eax , num call hexvar test eax , eax setne al movzx eax , al add esp , hexvar ret
push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar lea eax , [ ebx - hexvar ] sub esp , num push hexvar push eax push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar sub esp , hexvar mov dword ptr [ eax ] , num push dword ptr [ esp + hexvar ] call hexvar mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , num mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esi + hexvar ] , eax pop eax pop edx push esi push dword ptr [ ebx + hexvar ] call hexvar add esp , hexvar test eax , eax je hexvar mov eax , num add esp , hexvar pop ebx pop esi ret
push r15 push r14 push r12 push rbx push rax mov r14 , rdx mov r15 , rsi mov r12 , rdi cmp qword ptr [ rip + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov qword ptr [ rax ] , num mov rdi , r12 call hexvar mov qword ptr [ rbx + num ] , rax mov qword ptr [ rbx + hexvar ] , r15 mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar xor ebx , ebx xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r12 pop r14 pop r15 ret
push r15 push r14 push r12 push rbx push rax mov r14 , rdx mov r15 , rsi mov r12 , rdi cmp qword ptr [ rip + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov qword ptr [ rax ] , num mov rdi , r12 call hexvar mov qword ptr [ rbx + num ] , rax mov qword ptr [ rbx + hexvar ] , r15 mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar xor ebx , ebx xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar lui gp , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar addiu gp , gp , hexvar sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s4 , a0 sw s2 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , hexvar ( s1 ) beqz v0 , hexvar move s2 , a2 lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar addiu a1 , a1 , hexvar jalr t9 addiu a0 , zero , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) move a0 , s4 jalr t9 sw zero , ( v0 ) move a1 , s0 lw gp , hexvar ( sp ) lw a0 , hexvar ( s1 ) sw v0 , num ( s0 ) sw s3 , num ( s0 ) sw s2 , hexvar ( s0 ) lw t9 , - hexvar ( gp ) jalr t9 sw zero , hexvar ( s0 ) beqz v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar sw v0 , hexvar ( s1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) move a3 , a2 move a2 , a1 move a1 , a0 move a0 , zero jal hexvar nop sltu v0 , zero , v0 lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push r15 push r14 push r12 push rbx push rax mov r14 , rdx mov r15 , rsi mov r12 , rdi cmp qword ptr [ rip + hexvar ] , num jne hexvar call hexvar mov qword ptr [ rip + hexvar ] , rax test rax , rax je hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar mov rbx , rax mov qword ptr [ rax ] , num mov rdi , r12 call hexvar mov qword ptr [ rbx + num ] , rax mov qword ptr [ rbx + hexvar ] , r15 mov qword ptr [ rbx + hexvar ] , r14 mov dword ptr [ rbx + hexvar ] , num mov rdi , qword ptr [ rip + hexvar ] mov rsi , rbx call hexvar test eax , eax jne hexvar mov rdi , rbx call hexvar xor ebx , ebx xor eax , eax test rbx , rbx setne al add rsp , num pop rbx pop r12 pop r14 pop r15 ret
addiu sp , sp , - hexvar move a3 , a2 move a2 , a1 move a1 , a0 sw ra , hexvar ( sp ) jal hexvar move a0 , zero lw ra , hexvar ( sp ) sltu v0 , zero , v0 jr ra addiu sp , sp , hexvar
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov dl , cl mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , num cmp ecx , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push edi push esi mov esi , eax push ebx mov eax , dword ptr [ eax + hexvar ] call hexvar add ebx , hexvar mov edi , eax and edi , num jne hexvar test ah , num jne hexvar sub esp , hexvar push dword ptr [ esi + hexvar ] call hexvar add esp , hexvar test eax , eax setne al movzx eax , al mov edi , eax lea eax , [ esi + hexvar ] call hexvar mov eax , edi pop ebx pop esi pop edi ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) lw v0 , hexvar ( a0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov dl , cl mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , num cmp ecx , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx mov dl , cl mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , num cmp ecx , num mov dword ptr [ ebp - num ] , eax mov byte ptr [ ebp - num ] , dl jne hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , num call hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - num ] , cl mov al , byte ptr [ ebp - num ] and al , num movzx ecx , al mov dword ptr [ ebp - num ] , ecx mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx call hexvar mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , num bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , hexvar beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) b hexvar nop addiu v0 , zero , - hexvar addiu a2 , zero , num move a1 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 ) b hexvar nop addiu v0 , zero , - hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , hexvar move a0 , v0 jal hexvar nop lw gp , hexvar ( fp ) lw v0 , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push rbx mov rbx , rdi sub rsp , num mov edx , dword ptr [ rdi + hexvar ] mov ebp , edx and ebp , num jne hexvar and dh , num jne hexvar mov edi , dword ptr [ rdi + hexvar ] xor ebp , ebp call hexvar test eax , eax setne bpl lea rdi , [ rbx + hexvar ] call hexvar add rsp , num mov eax , ebp pop rbx pop rbp ret
push rbp push rbx mov rbx , rdi sub rsp , num mov edx , dword ptr [ rdi + hexvar ] mov ebp , edx and ebp , num jne hexvar and dh , num jne hexvar mov edi , dword ptr [ rdi + hexvar ] xor ebp , ebp call hexvar test eax , eax setne bpl lea rdi , [ rbx + hexvar ] call hexvar add rsp , num mov eax , ebp pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , num test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , hexvar mov rcx , qword ptr [ rbp - hexvar ] mov edx , num mov esi , eax mov rdi , rcx call hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] and eax , hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] jmp hexvar mov eax , hexvar mov edi , eax call hexvar test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num mov dword ptr [ rbp - num ] , eax mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov rdi , rax call hexvar mov eax , dword ptr [ rbp - num ] leave ret
mov r3 , r0 cmp r1 , num beq hexvar mov r0 , num tst r1 , num ldrne r2 , [ r3 ] eorne r0 , r0 , r2 add r3 , r3 , num lsrs r1 , r1 , num bne hexvar bx lr mov r0 , r1 bx lr
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] xor dword ptr [ ebp - num ] , eax shr dword ptr [ ebp + hexvar ] , num add dword ptr [ ebp + num ] , num cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] and eax , num test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] xor qword ptr [ rbp - num ] , rax shr qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , num cmp qword ptr [ rbp - hexvar ] , num jne hexvar mov rax , qword ptr [ rbp - num ] pop rbp ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , num ( fp ) b hexvar nop lw v0 , hexvar ( fp ) andi v0 , v0 , num beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 )
mov ecx , eax test edx , edx je hexvar mov eax , num jmp hexvar add ecx , num shr edx , num je hexvar test dl , num je hexvar xor eax , dword ptr [ ecx ] jmp hexvar ret mov eax , edx ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] xor dword ptr [ ebp - num ] , eax shr dword ptr [ ebp + hexvar ] , num add dword ptr [ ebp + num ] , num cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] and eax , num test eax , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] xor dword ptr [ ebp - num ] , eax shr dword ptr [ ebp + hexvar ] , num add dword ptr [ ebp + num ] , num cmp dword ptr [ ebp + hexvar ] , num jne hexvar mov eax , dword ptr [ ebp - num ] leave ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , num ( fp ) b hexvar nop lw v0 , hexvar ( fp ) andi v0 , v0 , num beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 ) lw v1 , num ( fp ) xor v0 , v1 , v0 sw v0 , num ( fp ) lw v0 , hexvar ( fp ) srl v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) bnez v0 , hexvar nop lw v0 , num ( fp ) move sp , fp lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov ecx , eax test edx , edx je hexvar mov eax , num jmp hexvar add ecx , num shr edx , num je hexvar test dl , num je hexvar xor eax , dword ptr [ ecx ] jmp hexvar ret mov eax , edx ret
addiu sp , sp , - hexvar sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , num ( fp ) b hexvar nop lw v0 , hexvar ( fp ) andi v0 , v0 , num beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lw v0 , ( v0 )
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , num ] bl hexvar add sp , sp , hexvar pop { pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov edi , dword ptr [ rbp - hexvar ] push rdi mov r9 , r8 mov r8d , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov dword ptr [ rbp - hexvar ] , r8d lea rax , [ rip + hexvar ] mov qword ptr [ rbp - num ] , rax mov r8 , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] sub rsp , num mov edi , dword ptr [ rbp - hexvar ] push rdi mov r9 , r8 mov r8d , hexvar mov rdi , rax call hexvar add rsp , hexvar leave ret
sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push hexvar lea eax , [ eax - hexvar ] push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar ret
push r15 push r14 mov r14 , rdi push r13 push r12 lea r12d , [ r8 + num ] push rbp push rbx mov rdi , rsi and r12d , hexvar mov r15 , rdx mov ebx , r8d sub rsp , hexvar movsxd rsi , dword ptr [ rdx ] movsxd r12 , r12d add r12 , hexvar mov qword ptr [ rsp + num ] , rcx add rsi , r12 call hexvar test rax , rax mov r13 , rax je hexvar movsxd rbp , dword ptr [ r15 ] mov edi , num mov rax , rbp add rbp , r13 add r12d , eax mov rax , qword ptr [ r14 + num ] mov rsi , rbp mov dword ptr [ r15 ] , r12d call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] movsxd rdi , ebx lea rsi , [ rbp + num ] mov r12 , rdi call qword ptr [ rax + hexvar ] mov rax , qword ptr [ r14 + num ] lea rsi , [ rbp + num ] mov edi , hexvar call qword ptr [ rax + hexvar ] lea rcx , [ rbp + hexvar ] mov rsi , qword ptr [ rsp + num ] xor edx , edx mov eax , hexvar mov word ptr [ rbp + hexvar ] , dx mov dword ptr [ rbp + hexvar ] , hexvar mov rdi , rcx mov word ptr [ rbp + hexvar ] , ax mov rdx , r12 call hexvar test bl , num lea rdi , [ rax + r12 ] je hexvar add ebx , num add rdi , num mov byte ptr [ rdi - num ] , num test bl , num jne hexvar add rsp , hexvar mov rax , r13 pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar ldr ip , [ sp , hexvar ] str ip , [ sp , num ] str r3 , [ sp , num ] mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , num ] bl hexvar add sp , sp , hexvar pop { pc }
push { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , lr } mov r6 , r2 mov r2 , r1 ldr r4 , [ sp , hexvar ] ldr r1 , [ r6 ] add ip , r4 , num bic ip , ip , num add fp , ip , hexvar mov sl , r0 add r1 , fp , r1 mov r0 , r2 mov sb , r3 bl hexvar subs r7 , r0 , num beq hexvar mov r8 , num ldr r5 , [ r6 ] ldr r2 , [ sl , num ] add r3 , fp , r5 add r5 , r7 , r5 str r3 , [ r6 ] mov r1 , r5 ldr r3 , [ r2 , hexvar ] mov r0 , num blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , r4 blx r3 ldr r3 , [ sl , num ] add r1 , r5 , num ldr r3 , [ r3 , hexvar ] mov r0 , hexvar blx r3 add r6 , r5 , hexvar mov r2 , num ldr r1 , [ pc , hexvar ] add r0 , r5 , hexvar bl hexvar mov r1 , sb mov r0 , r6 strb r8 , [ r5 , hexvar ] strb r8 , [ r5 , hexvar ] mov r2 , r4 bl hexvar tst r4 , num add r0 , r6 , r4 beq hexvar mov r1 , r8 mov r2 , r0 strb r1 , [ r2 ] , num add r3 , r2 , r4 sub r3 , r3 , r0 tst r3 , num bne hexvar mov r0 , r7 pop { r3 , r4 , r5 , r6 , r7 , r8 , sb , sl , fp , pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) sw a3 , hexvar ( sp ) addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui a3 , hexvar addiu a3 , a3 , hexvar jal hexvar nop lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar
push ebp push edi push esi push ebx call hexvar add ecx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov ebx , ecx mov dword ptr [ esp + hexvar ] , ecx mov ebp , dword ptr [ esp + hexvar ] lea edi , [ esi + num ] mov eax , dword ptr [ edx ] mov dword ptr [ esp + hexvar ] , edx and edi , hexvar add edi , hexvar add eax , edi push eax push dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar test eax , eax mov ecx , eax je hexvar mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , ecx sub esp , num mov eax , dword ptr [ edx ] lea ebx , [ ecx + eax ] add edi , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ edx ] , edi push ebx push num push num call dword ptr [ eax + hexvar ] lea eax , [ ebx + num ] add esp , hexvar mov edi , dword ptr [ ebp + num ] push eax mov eax , esi cdq push edx push esi call dword ptr [ edi + hexvar ] lea edx , [ ebx + num ] add esp , hexvar mov eax , dword ptr [ ebp + num ] lea edi , [ ebx + hexvar ] push edx push num push hexvar call dword ptr [ eax + hexvar ] add esp , hexvar xor edx , edx mov eax , hexvar mov dword ptr [ ebx + hexvar ] , hexvar mov word ptr [ ebx + hexvar ] , ax mov word ptr [ ebx + hexvar ] , dx push esi push dword ptr [ esp + hexvar ] push edi mov ebx , dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test esi , num mov ecx , dword ptr [ esp + hexvar ] je hexvar nop mov byte ptr [ edi + esi ] , num add esi , num test esi , num jne hexvar add esp , hexvar mov eax , ecx pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] and r3 , r3 , hexvar cmp r3 , num beq hexvar mov r3 , num str r3 , [ sp ] mov r2 , num mov r3 , num ldr r0 , [ fp , - num ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] and ecx , hexvar mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , eax sub ecx , hexvar mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax je hexvar jmp hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] cmp eax , num mov eax , hexvar mov ecx , hexvar cmovne ecx , eax mov dword ptr [ ebp - num ] , ecx jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar mov dword ptr [ ebp - num ] , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] and eax , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + num ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax ] and eax , hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov edx , num mov esi , num mov rdi , rax call hexvar nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - num ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov ecx , esp mov dword ptr [ ecx ] , eax mov dword ptr [ ecx + hexvar ] , num mov dword ptr [ ecx + num ] , num mov dword ptr [ ecx + num ] , num call hexvar mov dword ptr [ ebp - num ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] and edx , esi sub edx , - num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jne hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] lea edx , [ ebp - hexvar ] mov esi , dword ptr [ hexvar ] mov edi , dword ptr [ hexvar ] mov ebx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ eax + hexvar ] , edi mov dword ptr [ eax + hexvar ] , ebx mov dword ptr [ eax + hexvar ] , esi mov dword ptr [ eax + num ] , edx mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } mvn r1 , num mvn r2 , num cmp r4 , r2 cmpeq r3 , r1 bne hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 b hexvar ldr r3 , [ pc , hexvar ] ldr r1 , [ r3 ] ldr r3 , [ pc , hexvar ] ldm r3 , { r3 , r4 } sub r2 , fp , hexvar str r3 , [ sp , num ] str r4 , [ sp , hexvar ] mov r3 , num mov r4 , num stm sp , { r3 , r4 } mov r3 , r1 sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] sub rdi , - num sete al movzx ecx , al mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi jmp rdx mov edi , hexvar call hexvar mov rdi , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rdi mov rdi , qword ptr [ rbp - num ] mov edx , dword ptr [ rip + hexvar ] mov r8 , qword ptr [ rip + hexvar ] lea rsi , [ rbp - hexvar ] mov ecx , num call hexvar mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ hexvar ] mov rdi , rax call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a1 , hexvar ( fp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 b hexvar nop lui v0 , hexvar lw a1 , - hexvar ( v0 ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lw v0 , - hexvar ( v0 ) addiu a0 , fp , hexvar sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v1 , zero , num move v0 , zero sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a3 , a1 move a2 , a0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop lw v0 , - hexvar ( gp ) lw v1 , hexvar ( fp ) lw v0 , ( v0 ) beq v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , zero , - num sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) sw v1 , hexvar ( sp ) beq a0 , v0 , hexvar nop move v0 , zero lw t9 , - hexvar ( gp ) addiu v1 , zero , num sw v0 , hexvar ( sp ) lui v0 , hexvar sw v1 , hexvar ( sp ) addiu a2 , sp , hexvar lw a3 , hexvar ( v0 ) lui v0 , hexvar lw v1 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) sw v1 , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 lw a1 , ( v0 ) lw v1 , hexvar ( sp ) lw v0 , ( s0 ) bne v1 , v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bne a1 , a0 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero b hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push { r4 , fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] sub r4 , fp , hexvar ldm r4 , { r3 , r4 } mvn r1 , num mvn r2 , num cmp r4 , r2 cmpeq r3 , r1 bne hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 b hexvar ldr r3 , [ pc , hexvar ] ldr r1 , [ r3 ] ldr r3 , [ pc , hexvar ] ldm r3 , { r3 , r4 } sub r2 , fp , hexvar str r3 , [ sp , num ] str r4 , [ sp , hexvar ] mov r3 , num mov r4 , num stm sp , { r3 , r4 } mov r3 , r1 sub r1 , fp , hexvar ldm r1 , { r0 , r1 } bl hexvar mov r2 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar mov r0 , r0 ldr r3 , [ pc , hexvar ] ldr r2 , [ fp , - hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 beq hexvar bl hexvar sub sp , fp , num pop { r4 , fp , pc }
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] and edx , esi sub edx , - num sete bl movzx esi , bl mov esi , dword ptr [ esi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ hexvar ] mov esi , dword ptr [ hexvar ] mov edi , dword ptr [ hexvar ] mov ebx , esp mov dword ptr [ ebx + hexvar ] , edi mov dword ptr [ ebx + hexvar ] , esi mov dword ptr [ ebx + hexvar ] , edx lea edx , [ ebp - hexvar ] mov dword ptr [ ebx + num ] , edx mov dword ptr [ ebx + num ] , ecx mov dword ptr [ ebx ] , eax mov dword ptr [ ebx + hexvar ] , num mov dword ptr [ ebx + hexvar ] , num call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop esi pop edi pop ebx pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a1 , hexvar ( fp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 b hexvar nop lui v0 , hexvar lw a1 , - hexvar ( v0 ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lw v0 , - hexvar ( v0 ) addiu a0 , fp , hexvar sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v1 , zero , num move v0 , zero sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a3 , a1 move a2 , a0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop lw v0 , - hexvar ( gp ) lw v1 , hexvar ( fp ) lw v0 , ( v0 ) beq v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar addiu v0 , zero , - num sw s0 , hexvar ( sp ) lw s0 , - hexvar ( gp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s0 ) sw v1 , hexvar ( sp ) beq a0 , v0 , hexvar nop move v0 , zero lw t9 , - hexvar ( gp ) addiu v1 , zero , num sw v0 , hexvar ( sp ) lui v0 , hexvar sw v1 , hexvar ( sp ) addiu a2 , sp , hexvar lw a3 , hexvar ( v0 ) lui v0 , hexvar lw v1 , hexvar ( v0 ) lw v0 , hexvar ( v0 ) sw v1 , hexvar ( sp ) bal hexvar sw v0 , hexvar ( sp ) lw gp , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) jalr t9 lw a1 , ( v0 ) lw v1 , hexvar ( sp ) lw v0 , ( s0 ) bne v1 , v0 , hexvar lw gp , hexvar ( sp ) lw ra , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar bne a1 , a0 , hexvar lw t9 , - hexvar ( gp ) lui a1 , hexvar addiu a2 , zero , num addiu a1 , a1 , - hexvar jalr t9 move a0 , zero b hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a1 , hexvar ( fp ) sw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop lw v1 , hexvar ( fp ) addiu v0 , zero , - num bne v1 , v0 , hexvar nop lui v0 , hexvar addiu a0 , v0 , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 b hexvar nop lui v0 , hexvar lw a1 , - hexvar ( v0 ) lui v0 , hexvar lw v1 , - hexvar ( v0 ) lw v0 , - hexvar ( v0 ) addiu a0 , fp , hexvar sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu v1 , zero , num move v0 , zero sw v1 , hexvar ( sp ) sw v0 , hexvar ( sp ) move a3 , a1 move a2 , a0 lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a1 , v0 move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) nop lw v0 , - hexvar ( gp ) lw v1 , hexvar ( fp ) lw v0 , ( v0 ) beq v1 , v0 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
mov rdx , qword ptr [ rdi ] mov rax , qword ptr [ rsi ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rdx + hexvar ] , rax jb hexvar seta al movzx eax , al ret
push esi push ebx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ eax + hexvar ] mov ebx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ eax + hexvar ] mov esi , dword ptr [ eax + hexvar ] cmp ecx , edx jae hexvar mov eax , hexvar pop ebx pop esi ret
ldr r2 , [ r0 ] ldr r3 , [ r1 ] add r1 , r2 , hexvar ldm r1 , { r0 , r1 } add r3 , r3 , hexvar ldm r3 , { r2 , r3 } cmp r1 , r3 cmpeq r0 , r2 blo hexvar movhi r0 , num movls r0 , num bx lr mvn r0 , num bx lr
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi ] mov ebx , dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + hexvar ] sub esi , ebx sbb edx , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx jae hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub ecx , esi sbb eax , edx setb bl movzx edx , bl mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi ] mov ebx , dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + hexvar ] sub esi , ebx sbb edx , edi setb bl movzx edi , bl mov edi , dword ptr [ edi * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx jmp edi mov eax , hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub ecx , esi sbb eax , edx setb bl movzx edx , bl mov esi , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx jmp esi mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi ] mov ebx , dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + hexvar ] sub esi , ebx sbb edx , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx jae hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub ecx , esi sbb eax , edx setb bl movzx edx , bl mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
mov rax , qword ptr [ rdi ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rsi ] mov rax , qword ptr [ rax + hexvar ] cmp rdx , rax jb hexvar seta al movzx eax , al ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi ] mov ebx , dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + hexvar ] sub esi , ebx sbb edx , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx jae hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub ecx , esi sbb eax , edx setb bl movzx edx , bl mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
ldr r2 , [ r0 ] ldr r3 , [ r1 ] add r1 , r2 , hexvar ldm r1 , { r0 , r1 } add r3 , r3 , hexvar ldm r3 , { r2 , r3 } cmp r1 , r3 cmpeq r0 , r2 blo hexvar movhi r0 , num movls r0 , num bx lr mvn r0 , num bx lr
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] mov edi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ edi ] mov ebx , dword ptr [ edi + hexvar ] mov edi , dword ptr [ edi + hexvar ] sub esi , ebx sbb edx , edi mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edx jae hexvar jmp hexvar mov eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov esi , dword ptr [ edx + hexvar ] mov edx , dword ptr [ edx + hexvar ] sub ecx , esi sbb eax , edx setb bl movzx edx , bl mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov dword ptr [ rbp - hexvar ] , esi mov qword ptr [ rbp - hexvar ] , rdx call hexvar mov dword ptr [ rax ] , hexvar mov eax , hexvar leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , esp add edx , - hexvar mov esp , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ edx ] , ecx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move v1 , v0 addiu v0 , zero , hexvar sw v0 , ( v1 ) addiu v0 , zero , - num move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ eax ] , hexvar mov eax , hexvar lea esp , [ ebp - num ] pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop addiu a2 , zero , num lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bgtz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu a2 , zero , num lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bgtz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , num push num push esi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar test edi , edi cmove edi , esi sub esp , num push num push edi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , hexvar mov esi , num pop ebx mov eax , esi pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov ebp , num test edi , edi je hexvar sub esp , num push num push edi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar test esi , esi cmove esi , edi sub esp , num push num push esi push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar mov ebp , eax add esp , hexvar test eax , eax je hexvar mov ebp , num mov eax , ebp add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] test esi , esi je hexvar sub esp , num push num push esi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar test edi , edi cmove edi , esi sub esp , num push num push edi push ebp call hexvar add esp , hexvar test eax , eax jle hexvar sub esp , hexvar push ebp call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar add esp , hexvar mov esi , num pop ebx mov eax , esi pop esi pop edi pop ebp ret
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov rbp , rdx mov rbx , rsi mov r15 , rdi mov edx , num call hexvar test eax , eax jle hexvar test rbp , rbp cmovne rbx , rbp mov r14d , num mov rdi , r15 mov rsi , rbx mov edx , num call hexvar test eax , eax jle hexvar mov rdi , r15 call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov r14d , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar mov rdx , rbx xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov eax , r14d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop addiu a2 , zero , num lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bgtz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu a2 , zero , num lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bgtz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp push r15 push r14 push rbx push rax test rsi , rsi je hexvar mov rbp , rdx mov rbx , rsi mov r15 , rdi mov edx , num call hexvar test eax , eax jle hexvar test rbp , rbp cmovne rbx , rbp mov r14d , num mov rdi , r15 mov rsi , rbx mov edx , num call hexvar test eax , eax jle hexvar mov rdi , r15 call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar xor eax , eax call hexvar jmp hexvar mov r14d , num jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar jmp hexvar mov rdi , qword ptr [ rip + hexvar ] xor r14d , r14d mov esi , hexvar mov rdx , rbx xor eax , eax call hexvar mov rdi , qword ptr [ rip + hexvar ] call hexvar mov eax , r14d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz a1 , hexvar sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) move s0 , a2 addiu a2 , zero , num move s1 , a1 jalr t9 move s2 , a0 blez v0 , hexvar lw gp , hexvar ( sp ) movz s0 , s1 , s0 addiu a2 , zero , num move a0 , s2 lw t9 , - hexvar ( gp ) jalr t9 move a1 , s0 blez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 move a0 , s2 lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw ra , hexvar ( sp ) addiu s0 , zero , num lw s2 , hexvar ( sp ) move v0 , s0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw v0 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a1 , a1 , hexvar jalr t9 lw a0 , ( v0 ) move v0 , s0 lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw s0 , - hexvar ( gp ) lui a1 , hexvar lw t9 , - hexvar ( gp ) move a2 , s1 addiu a1 , a1 , hexvar jalr t9 lw a0 , ( s0 ) lw gp , hexvar ( sp ) lw a0 , ( s0 ) lw t9 , - hexvar ( gp )
str lr , [ sp , - num ] ! sub sp , sp , hexvar str r0 , [ sp , hexvar ] str r1 , [ sp , num ] str r2 , [ sp , num ] ldr r3 , [ sp , num ] cmp r3 , num beq hexvar mov r2 , num ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ sp , num ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , num b hexvar ldr r3 , [ sp , num ] cmp r3 , num bne hexvar ldr r3 , [ sp , num ] str r3 , [ sp , num ] mov r2 , num ldr r1 , [ sp , num ] ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bgt hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r2 , [ sp , num ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r0 , r3 bl hexvar mov r3 , num b hexvar ldr r0 , [ sp , hexvar ] bl hexvar mov r3 , r0 cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] ldr r1 , [ pc , hexvar ] mov r0 , r3 bl hexvar mov r3 , num b hexvar mov r3 , num mov r0 , r3 add sp , sp , hexvar pop { pc }
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) lw v0 , hexvar ( sp ) beqz v0 , hexvar nop addiu a2 , zero , num lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bgtz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw v0 , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , hexvar ( sp ) sw v0 , hexvar ( sp ) addiu a2 , zero , num lw a1 , hexvar ( sp ) lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bgtz v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lw a2 , hexvar ( sp ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop lw v0 , - hexvar ( gp ) lw v1 , ( v0 ) lui v0 , hexvar addiu a1 , v0 , - hexvar move a0 , v1 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu v0 , zero , num lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ ebx + hexvar ] mov dword ptr [ esp + hexvar ] , eax lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov edi , eax xor ebp , ebp mov esi , hexvar sub esp , hexvar push edi call hexvar add esp , hexvar test eax , eax je hexvar cmp byte ptr [ eax + hexvar ] , hexvar jne hexvar movzx edx , byte ptr [ eax + hexvar ] cmp dl , hexvar je hexvar test dl , dl je hexvar sub esp , num add eax , hexvar mov ebp , num push num push eax call hexvar add esp , hexvar cmp esi , eax cmovl esi , eax sub esp , hexvar push edi call hexvar add esp , hexvar test eax , eax jne hexvar sub esp , hexvar push edi call hexvar add esp , hexvar cmp esi , - num je hexvar test ebp , ebp lea edx , [ esp + hexvar ] je hexvar xor eax , eax cmp esi , hexvar setne al add esi , eax mov eax , dword ptr [ esp + num ] mov dword ptr [ esp + hexvar ] , num mov dword ptr [ esp + hexvar ] , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + num ] mov dword ptr [ esp + hexvar ] , eax mov eax , esi call hexvar mov esi , dword ptr [ esp + hexvar ] test esi , esi jns hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jl hexvar mov dword ptr [ ebp - num ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp dword ptr [ ebp - num ] , num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jl hexvar mov dword ptr [ ebp - num ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar xor ecx , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp dword ptr [ ebp - num ] , num je hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop ebp ret
push { fp , lr } add fp , sp , num sub sp , sp , num mov r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] ldr r2 , [ r3 ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] mov r1 , r3 mov r0 , r2 bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num blt hexvar mov r3 , num str r3 , [ fp , - hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r2 , r0 ldr r3 , [ fp , - num ] mov r1 , num mov r0 , num bl hexvar ldr r3 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r3 , [ pc , hexvar ] ldr r2 , [ pc , hexvar ] ldr r1 , [ pc , hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num jl hexvar mov dword ptr [ ebp - num ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx ] , eax call hexvar mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] not eax shr eax , hexvar mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov dword ptr [ ebp - num ] , num mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ ebp - num ] mov edx , esp mov dword ptr [ edx + hexvar ] , ecx mov dword ptr [ edx + num ] , eax mov dword ptr [ edx + num ] , num mov dword ptr [ edx ] , num call hexvar mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov dword ptr [ ebp - num ] , num mov eax , dword ptr [ hexvar ] mov ecx , dword ptr [ hexvar ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num jl hexvar mov dword ptr [ ebp - num ] , num lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , num mov dword ptr [ esp + num ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax lea eax , [ hexvar ] mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , hexvar lea eax , [ hexvar ] mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s0 , hexvar ( sp ) lui v1 , hexvar sw s2 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw s2 , hexvar ( v0 ) sw s1 , hexvar ( sp ) sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v0 , ( s0 ) lw s1 , hexvar ( v1 ) sw v0 , hexvar ( sp ) jal hexvar nop bltz v0 , hexvar nop lui v1 , hexvar ori v1 , v1 , hexvar beq v0 , v1 , hexvar lui a1 , hexvar addiu v0 , v0 , num sw s1 , hexvar ( sp ) addiu v1 , zero , - num sw s2 , hexvar ( sp ) addiu a2 , sp , hexvar sw zero , hexvar ( sp ) addiu a1 , a1 , hexvar sw v1 , hexvar ( sp ) jal hexvar move a0 , v0 lw s1 , hexvar ( sp ) bgez s1 , hexvar lw gp , hexvar ( sp ) lw v1 , hexvar ( sp ) lw v0 , ( s0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jal hexvar nop b hexvar lui v1 , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lui a1 , hexvar lw t9 , - hexvar ( gp ) addiu a2 , zero , num addiu a1 , a1 , hexvar jalr t9 move a0 , zero move a1 , zero lw gp , hexvar ( sp ) move a0 , zero move a3 , s1 lw t9 , - hexvar ( gp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar lui v0 , hexvar sw s1 , hexvar ( sp ) lui v1 , hexvar sw s4 , hexvar ( sp ) lw s1 , - hexvar ( gp ) lw s4 , hexvar ( v0 ) sw s3 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw v0 , ( s1 ) lw s3 , hexvar ( v1 ) sw v0 , hexvar ( sp ) jal hexvar nop bltz v0 , hexvar lw gp , hexvar ( sp ) addiu s2 , sp , hexvar move s0 , v0 lui v0 , hexvar ori v0 , v0 , hexvar beq s0 , v0 , hexvar addiu v0 , zero , - num addiu s0 , s0 , num sw s4 , hexvar ( sp ) move a0 , s0 sw s3 , hexvar ( sp ) move a1 , s2 sw zero , hexvar ( sp ) jal hexvar sw v0 , hexvar ( sp ) lw s0 , hexvar ( sp ) bgez s0 , hexvar lw gp , hexvar ( sp ) lw v1 , hexvar ( sp ) lw v0 , ( s1 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , num addiu v1 , zero , - num lw gp , hexvar ( sp ) beq v0 , v1 , hexvar move s0 , v0 lw t9 , - hexvar ( gp )
push rbp push rbx sub rsp , hexvar mov rbx , qword ptr [ rip + hexvar ] mov rbp , qword ptr [ rip + hexvar ] mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test eax , eax js hexvar xor edx , edx cmp eax , hexvar mov esi , hexvar setne dl mov qword ptr [ rsp + num ] , rbx mov qword ptr [ rsp ] , rbp add eax , edx mov rdx , rsp mov qword ptr [ rsp + hexvar ] , num mov edi , eax mov dword ptr [ rsp + hexvar ] , hexvar call hexvar mov ebx , dword ptr [ rsp + hexvar ] test ebx , ebx js hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov ecx , ebx mov rdx , rax xor esi , esi xor edi , edi xor eax , eax call hexvar mov ecx , hexvar mov edx , hexvar mov esi , hexvar mov edi , hexvar call hexvar nop dword ptr [ rax + rax ] mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp ] mov dword ptr [ esp + hexvar ] , eax push esi lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test al , hexvar jne hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , hexvar jle hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar xor esi , esi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov ebp , ecx mov rbx , rdx mov r15 , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + hexvar ] , rax lea rdi , [ rsp + hexvar ] lea rsi , [ rsp + num ] lea rdx , [ rsp + num ] lea rcx , [ rsp + hexvar ] mov r8 , rbx call hexvar test al , al js hexvar mov edi , dword ptr [ rsp + num ] mov edx , hexvar cmp edi , hexvar jg hexvar call hexvar movsxd rcx , ebp test rax , rcx je hexvar cmp dword ptr [ rsp + num ] , num jne hexvar mov rdi , r14 mov rsi , r15 mov rdx , rbx call hexvar mov rbx , rax jmp hexvar xor edx , edx jmp hexvar mov edx , hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov ebp , ecx mov rbx , rdx mov r15 , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + hexvar ] , rax lea rdi , [ rsp + hexvar ] lea rsi , [ rsp + num ] lea rdx , [ rsp + num ] lea rcx , [ rsp + hexvar ] mov r8 , rbx call hexvar test al , al js hexvar mov edi , dword ptr [ rsp + num ] mov edx , hexvar cmp edi , hexvar jg hexvar call hexvar movsxd rcx , ebp test rax , rcx je hexvar cmp dword ptr [ rsp + num ] , num jne hexvar mov rdi , r14 mov rsi , r15 mov rdx , rbx call hexvar mov rbx , rax jmp hexvar xor edx , edx jmp hexvar mov edx , hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov ebp , ecx mov rbx , rdx mov r15 , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + hexvar ] , rax lea rdi , [ rsp + hexvar ] lea rsi , [ rsp + num ] lea rdx , [ rsp + num ] lea rcx , [ rsp + hexvar ] mov r8 , rbx call hexvar test al , al js hexvar mov edi , dword ptr [ rsp + num ] mov edx , hexvar cmp edi , hexvar jg hexvar call hexvar movsxd rcx , ebp test rax , rcx je hexvar cmp dword ptr [ rsp + num ] , num jne hexvar mov rdi , r14 mov rsi , r15 mov rdx , rbx call hexvar mov rbx , rax jmp hexvar xor edx , edx jmp hexvar mov edx , hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp ] mov dword ptr [ esp + hexvar ] , eax push esi lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test al , hexvar jne hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , hexvar jle hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar xor esi , esi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov ebp , ecx mov rbx , rdx mov r15 , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + hexvar ] , rax lea rdi , [ rsp + hexvar ] lea rsi , [ rsp + num ] lea rdx , [ rsp + num ] lea rcx , [ rsp + hexvar ] mov r8 , rbx call hexvar test al , al js hexvar mov edi , dword ptr [ rsp + num ] mov edx , hexvar cmp edi , hexvar jg hexvar call hexvar movsxd rcx , ebp test rax , rcx je hexvar cmp dword ptr [ rsp + num ] , num jne hexvar mov rdi , r14 mov rsi , r15 mov rdx , rbx call hexvar mov rbx , rax jmp hexvar xor edx , edx jmp hexvar mov edx , hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r12 push rbx sub rsp , hexvar mov ebp , ecx mov rbx , rdx mov r15 , rsi mov r14 , rdi mov rax , qword ptr [ rsi ] mov qword ptr [ rsp + hexvar ] , rax lea rdi , [ rsp + hexvar ] lea rsi , [ rsp + num ] lea rdx , [ rsp + num ] lea rcx , [ rsp + hexvar ] mov r8 , rbx call hexvar test al , al js hexvar mov edi , dword ptr [ rsp + num ] mov edx , hexvar cmp edi , hexvar jg hexvar call hexvar movsxd rcx , ebp test rax , rcx je hexvar cmp dword ptr [ rsp + num ] , num jne hexvar mov rdi , r14 mov rsi , r15 mov rdx , rbx call hexvar mov rbx , rax jmp hexvar xor edx , edx jmp hexvar mov edx , hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov r8d , hexvar call hexvar xor ebx , ebx mov rax , rbx add rsp , hexvar pop rbx pop r12 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ esp + hexvar ] mov eax , dword ptr [ ebp ] mov dword ptr [ esp + hexvar ] , eax push esi lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test al , hexvar jne hexvar mov eax , dword ptr [ esp + hexvar ] cmp eax , hexvar jle hexvar lea eax , [ ebx - hexvar ] sub esp , hexvar push hexvar push eax push hexvar push hexvar push hexvar xor esi , esi call hexvar add esp , hexvar mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] mov eax , esi jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp ] mov dword ptr [ esp + hexvar ] , eax push esi lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test al , hexvar jne hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , hexvar cmp edx , hexvar jle hexvar sub esp , hexvar push hexvar lea edx , [ ebx - hexvar ] push edx push eax push hexvar push hexvar call hexvar add esp , hexvar mov esi , num mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ ebp ] mov dword ptr [ esp + hexvar ] , eax push esi lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test al , hexvar jne hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , hexvar cmp edx , hexvar jle hexvar sub esp , hexvar push hexvar lea edx , [ ebx - hexvar ] push edx push eax push hexvar push hexvar call hexvar add esp , hexvar mov esi , num mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
sub esp , hexvar fld xword ptr [ esp + hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar fld st ( num ) fstp xword ptr [ esp + hexvar ] add esp , hexvar ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar ret
push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx ret
sub esp , hexvar fld xword ptr [ esp + hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar fld st ( num ) fstp xword ptr [ esp + hexvar ] add esp , hexvar ret
push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx ret
sub esp , hexvar fld xword ptr [ esp + hexvar ] mov eax , esp fstp xword ptr [ eax ] call hexvar fld st ( num ) fstp xword ptr [ esp + hexvar ] add esp , hexvar ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar ret
sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , eax call hexvar add esp , hexvar ret
push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov dword ptr [ esp ] , ebx mov dword ptr [ esp + num ] , edi mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , eax call hexvar add esp , hexvar pop esi pop edi pop ebx ret
cmp r0 , num push { r4 , lr } ldr r3 , [ r1 ] beq hexvar ldr r2 , [ pc , hexvar ] cmp r3 , r2 bhi hexvar add r2 , r3 , num add r3 , r2 , r3 , lsr num str r3 , [ r1 ] mov r1 , r3 bl hexvar cmp r0 , num popne { r4 , pc }
sub rsp , num test rdi , rdi mov rax , qword ptr [ rsi ] je hexvar movabs rdx , hexvar cmp rax , rdx ja hexvar mov rdx , rax shr rdx , num lea rax , [ rdx + rax + num ] mov qword ptr [ rsi ] , rax mov rsi , rax add rsp , num jmp hexvar nop dword ptr [ rax ] test rax , rax mov edx , hexvar cmove rax , rdx test rax , rax js hexvar xor edx , edx test rdx , rdx je hexvar call hexvar nop nop word ptr cs : [ rax + rax ]
push esi push ebx call hexvar add ebx , hexvar sub esp , num mov edx , dword ptr [ esp + hexvar ] mov ecx , dword ptr [ esp + hexvar ] test edx , edx mov eax , dword ptr [ ecx ] je hexvar cmp eax , hexvar ja hexvar lea esi , [ eax + num ] shr esi , num add eax , esi test eax , eax mov dword ptr [ ecx ] , eax je hexvar sub esp , num push eax push edx call hexvar add esp , hexvar test eax , eax je hexvar add esp , num pop ebx pop esi ret
push ebp mov ebp , esp sub esp , num call hexvar add eax , hexvar sub esp , num push num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar leave ret
test rdi , rdi mov rax , qword ptr [ rsi ] je hexvar movabs rdx , hexvar cmp rax , rdx ja hexvar lea rdx , [ rax + num ] shr rdx , num add rax , rdx mov qword ptr [ rsi ] , rax mov rsi , rax jmp hexvar nop dword ptr [ rax ] test rax , rax mov edx , hexvar cmove rax , rdx mov qword ptr [ rsi ] , rax mov rsi , rax jmp hexvar push rax call hexvar nop word ptr [ rax + rax ]
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , edx mov esi , dword ptr [ ebp - num ] mov dword ptr [ ecx ] , esi mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , num call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] mov esi , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop esi pop ebp ret
sub rsp , num mov rax , qword ptr [ rsi ] test rdi , rdi je hexvar movabs rdx , hexvar cmp rax , rdx ja hexvar lea rdx , [ rax + num ] shr rdx , num add rax , rdx mov qword ptr [ rsi ] , rax mov rsi , rax call hexvar add rsp , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) addiu a2 , zero , num lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lhu v0 , num ( a1 ) ori v1 , zero , hexvar beq v0 , v1 , hexvar lw a0 , hexvar ( a1 )
push edi push esi push ebx mov ebx , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] movzx edx , word ptr [ ebx + num ] movzx eax , dx mov ecx , num cmp dx , - num cmove eax , dword ptr [ ebx + hexvar ] mov edx , hexvar cmove ecx , edx test edi , edi je hexvar mov dword ptr [ edi ] , eax test esi , esi je hexvar mov dword ptr [ esi ] , ecx pop ebx pop esi pop edi ret
push edi push esi mov ecx , num push ebx mov ebx , dword ptr [ esp + hexvar ] mov edx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] movzx eax , word ptr [ ebx + num ] cmp ax , - num cmove eax , dword ptr [ ebx + hexvar ] cmove ecx , edx test edi , edi je hexvar mov dword ptr [ edi ] , eax test esi , esi je hexvar mov dword ptr [ esi ] , ecx pop ebx pop esi pop edi ret
movzx edi , word ptr [ rsi + num ] mov r8d , dword ptr [ rsi + num ] mov r9d , dword ptr [ rsi + hexvar ] movzx eax , di mov esi , num cmp di , - num je hexvar test rdx , rdx je hexvar mov qword ptr [ rdx ] , rax test rcx , rcx je hexvar mov qword ptr [ rcx ] , rsi ret shl r8 , hexvar mov eax , r9d or rax , r8 mov esi , hexvar jmp hexvar
movzx edi , word ptr [ rsi + num ] mov r8d , dword ptr [ rsi + num ] mov r9d , dword ptr [ rsi + hexvar ] movzx eax , di mov esi , num cmp di , - num je hexvar test rdx , rdx je hexvar mov qword ptr [ rdx ] , rax test rcx , rcx je hexvar mov qword ptr [ rcx ] , rsi ret shl r8 , hexvar mov eax , r9d or rax , r8 mov esi , hexvar jmp hexvar
movzx eax , word ptr [ rsi + num ] mov r8d , dword ptr [ rsi + num ] mov r9d , dword ptr [ rsi + hexvar ] mov esi , num cmp ax , - num jne hexvar shl r8 , hexvar mov eax , r9d mov esi , hexvar or rax , r8 test rdx , rdx je hexvar mov qword ptr [ rdx ] , rax test rcx , rcx je hexvar mov qword ptr [ rcx ] , rsi ret nop dword ptr [ rax + rax ]
movzx edi , word ptr [ rsi + num ] mov r8d , dword ptr [ rsi + num ] mov r9d , dword ptr [ rsi + hexvar ] movzx eax , di mov esi , num cmp di , - num je hexvar test rdx , rdx je hexvar mov qword ptr [ rdx ] , rax test rcx , rcx je hexvar mov qword ptr [ rcx ] , rsi ret shl r8 , hexvar mov eax , r9d or rax , r8 mov esi , hexvar jmp hexvar
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] movzx eax , word ptr [ rax + num ] movzx edi , ax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + num ] mov eax , eax shl rax , hexvar mov rdx , rax mov rax , qword ptr [ rbp - num ] mov eax , dword ptr [ rax + hexvar ] mov eax , eax or rdx , rax mov r8 , rdx mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] push hexvar push num push hexvar mov r9 , rdi mov rdi , rax call hexvar add rsp , hexvar leave ret
push edi push esi mov ecx , num push ebx mov ebx , dword ptr [ esp + hexvar ] mov edx , hexvar mov edi , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] movzx eax , word ptr [ ebx + num ] cmp ax , - num cmove eax , dword ptr [ ebx + hexvar ] cmove ecx , edx test edi , edi je hexvar mov dword ptr [ edi ] , eax test esi , esi je hexvar mov dword ptr [ esi ] , ecx pop ebx pop esi pop edi ret
movzx edi , word ptr [ rsi + num ] mov r8d , dword ptr [ rsi + num ] mov r9d , dword ptr [ rsi + hexvar ] movzx eax , di mov esi , num cmp di , - num je hexvar test rdx , rdx je hexvar mov qword ptr [ rdx ] , rax test rcx , rcx je hexvar mov qword ptr [ rcx ] , rsi ret shl r8 , hexvar mov eax , r9d or rax , r8 mov esi , hexvar jmp hexvar
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12d , r8d mov r15 , rcx mov ebp , edx mov r13 , rsi mov r14 , rdi lea rbx , [ rsp + num ] mov rdi , rbx call hexvar call hexvar mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov edx , ebp lea rdi , [ rsp + num ] mov rsi , r13 call hexvar test eax , eax je hexvar movsxd rdx , r12d lea rdi , [ rsp + num ] mov rsi , r15 call hexvar test eax , eax je hexvar lea rdi , [ rsp + num ] mov rsi , r14 xor edx , edx call hexvar mov ebx , num test eax , eax jne hexvar xor ebx , ebx lea rdi , [ rsp + num ] call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12d , r8d mov r15 , rcx mov ebp , edx mov r13 , rsi mov r14 , rdi lea rbx , [ rsp + num ] mov rdi , rbx call hexvar call hexvar mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov edx , ebp lea rdi , [ rsp + num ] mov rsi , r13 call hexvar test eax , eax je hexvar movsxd rdx , r12d lea rdi , [ rsp + num ] mov rsi , r15 call hexvar test eax , eax je hexvar lea rdi , [ rsp + num ] mov rsi , r14 xor edx , edx call hexvar mov ebx , num test eax , eax jne hexvar xor ebx , ebx lea rdi , [ rsp + num ] call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12d , r8d mov r15 , rcx mov ebp , edx mov r13 , rsi mov r14 , rdi lea rbx , [ rsp + num ] mov rdi , rbx call hexvar call hexvar mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov edx , ebp lea rdi , [ rsp + num ] mov rsi , r13 call hexvar test eax , eax je hexvar movsxd rdx , r12d lea rdi , [ rsp + num ] mov rsi , r15 call hexvar test eax , eax je hexvar lea rdi , [ rsp + num ] mov rsi , r14 xor edx , edx call hexvar mov ebx , num test eax , eax jne hexvar xor ebx , ebx lea rdi , [ rsp + num ] call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( sp ) sw a1 , hexvar ( sp ) sw a2 , hexvar ( sp ) sw a3 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu v0 , zero , num sw v0 , hexvar ( sp ) addiu v0 , sp , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v1 , v0 addiu v0 , sp , hexvar move a2 , zero move a1 , v1 move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop addiu v0 , sp , hexvar lw a2 , hexvar ( sp ) lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop lw v1 , hexvar ( sp ) addiu v0 , sp , hexvar move a2 , v1 lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar nop addiu v0 , sp , hexvar move a2 , zero lw a1 , hexvar ( sp ) move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar nop sw zero , hexvar ( sp ) addiu v0 , sp , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( sp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov dword ptr [ esp + hexvar ] , num sub esp , hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar call hexvar sub esp , num push num push eax lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ esp + hexvar ] sub esp , num push eax push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax je hexvar sub esp , num push num push dword ptr [ esp + hexvar ] lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar test eax , eax jne hexvar mov dword ptr [ esp + hexvar ] , num sub esp , hexvar lea eax , [ esp + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] je hexvar call hexvar add esp , hexvar pop ebx ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12d , r8d mov r15 , rcx mov ebp , edx mov r13 , rsi mov r14 , rdi lea rbx , [ rsp + num ] mov rdi , rbx call hexvar call hexvar mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov edx , ebp lea rdi , [ rsp + num ] mov rsi , r13 call hexvar test eax , eax je hexvar movsxd rdx , r12d lea rdi , [ rsp + num ] mov rsi , r15 call hexvar test eax , eax je hexvar lea rdi , [ rsp + num ] mov rsi , r14 xor edx , edx call hexvar mov ebx , num test eax , eax jne hexvar xor ebx , ebx lea rdi , [ rsp + num ] call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12d , r8d mov r15 , rcx mov ebp , edx mov r13 , rsi mov r14 , rdi lea rbx , [ rsp + num ] mov rdi , rbx call hexvar call hexvar mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov edx , ebp lea rdi , [ rsp + num ] mov rsi , r13 call hexvar test eax , eax je hexvar movsxd rdx , r12d lea rdi , [ rsp + num ] mov rsi , r15 call hexvar test eax , eax je hexvar lea rdi , [ rsp + num ] mov rsi , r14 xor edx , edx call hexvar mov ebx , num test eax , eax jne hexvar xor ebx , ebx lea rdi , [ rsp + num ] call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12d , r8d mov r15 , rcx mov ebp , edx mov r13 , rsi mov r14 , rdi lea rbx , [ rsp + num ] mov rdi , rbx call hexvar call hexvar mov rdi , rbx mov rsi , rax xor edx , edx call hexvar test eax , eax je hexvar mov edx , ebp lea rdi , [ rsp + num ] mov rsi , r13 call hexvar test eax , eax je hexvar movsxd rdx , r12d lea rdi , [ rsp + num ] mov rsi , r15 call hexvar test eax , eax je hexvar lea rdi , [ rsp + num ] mov rsi , r14 xor edx , edx call hexvar mov ebx , num test eax , eax jne hexvar xor ebx , ebx lea rdi , [ rsp + num ] call hexvar mov eax , ebx add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s4 , a0 move s1 , a1 move s2 , a2 move s3 , a3 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu s0 , sp , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , zero move a1 , v0 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar move s0 , v0 addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move v0 , s0 lw a0 , hexvar ( sp ) lw v1 , - hexvar ( gp ) lw v1 , ( v1 ) bne a0 , v1 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a2 , s2 move a1 , s1 addiu a0 , sp , hexvar lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw a2 , hexvar ( sp ) move a1 , s3 addiu a0 , sp , hexvar lw t9 , - hexvar ( gp )
push ebp push edi mov ebp , ecx push esi push ebx mov edi , edx call hexvar add ebx , hexvar sub esp , hexvar mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] lea esi , [ esp + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar call hexvar add esp , hexvar push num push eax push esi call hexvar add esp , hexvar test eax , eax jne hexvar xor edi , edi sub esp , hexvar push esi call hexvar add esp , hexvar mov eax , edi mov edx , dword ptr [ esp + hexvar ] xor edx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - hexvar ] , num mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov byte ptr [ ebp - hexvar ] , num lea esi , [ ebp - hexvar ] add esi , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor eax , eax mov cl , al test byte ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , cl je hexvar cmp dword ptr [ ebp - hexvar ] , num sete al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] xor al , hexvar test al , num jne hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] sub eax , edx add ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jb hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , eax sub edx , ecx mov ecx , eax sub ecx , num add edx , ecx sub eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , num mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , esp lea ecx , [ ebp - hexvar ] mov dword ptr [ eax ] , ecx call hexvar movzx eax , byte ptr [ ebp - hexvar ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] xor ecx , ecx mov dl , cl mov byte ptr [ ebp - hexvar ] , dl jmp eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax sete cl mov eax , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , cl jmp eax mov al , byte ptr [ ebp - hexvar ] not al movzx ecx , al and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] sub eax , ecx setae dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , num mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov byte ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov dword ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , num mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , esp lea ecx , [ ebp - hexvar ] mov dword ptr [ eax ] , ecx call hexvar movzx eax , byte ptr [ ebp - hexvar ] and eax , num mov eax , dword ptr [ eax * num + hexvar ] xor ecx , ecx mov dl , cl mov byte ptr [ ebp - hexvar ] , dl jmp eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax sete cl mov eax , dword ptr [ hexvar ] mov byte ptr [ ebp - hexvar ] , cl jmp eax mov al , byte ptr [ ebp - hexvar ] not al movzx ecx , al and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] jmp ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + hexvar ] sub eax , ecx setae dl movzx ecx , dl mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] inc eax mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , num mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - hexvar ] , num mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov byte ptr [ ebp - hexvar ] , num lea esi , [ ebp - hexvar ] add esi , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor eax , eax mov cl , al test byte ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , cl je hexvar cmp dword ptr [ ebp - hexvar ] , num sete al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] xor al , hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi lea rdi , [ rbp - hexvar ] call hexvar movzx eax , byte ptr [ rbp - hexvar ] mov edi , eax mov eax , edi and eax , num mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] xor eax , eax mov cl , al mov byte ptr [ rbp - hexvar ] , cl jmp rdi mov eax , dword ptr [ rbp - hexvar ] test eax , eax sete cl mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rdx mov al , byte ptr [ rbp - hexvar ] not al movzx ecx , al mov edx , ecx mov ecx , edx and ecx , num mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] sub rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setae dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( fp ) sw zero , hexvar ( fp ) lw v0 , hexvar ( fp ) sw v0 , hexvar ( fp ) sb zero , hexvar ( fp ) addiu v0 , fp , hexvar addiu v0 , v0 , num addiu a2 , zero , num move a1 , zero move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) sb zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) move v1 , v0 lw v0 , hexvar ( fp ) subu v0 , v1 , v0 sw v0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) sltu v0 , v0 , v1 beqz v0 , hexvar nop lw v0 , hexvar ( fp ) addiu v0 , v0 , num sw v0 , hexvar ( fp ) lw v1 , hexvar ( fp ) lw v0 , hexvar ( fp ) addu v0 , v1 , v0 sw v0 , hexvar ( fp ) sb zero , hexvar ( fp ) addiu v0 , fp , hexvar move a0 , v0 lw v0 , - hexvar ( gp ) move t9 , v0 bal hexvar nop lw gp , hexvar ( fp ) lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar bnez v0 , hexvar nop lw v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop move v0 , zero bnez v0 , hexvar nop b hexvar nop nop lw v0 , hexvar ( fp ) lw v1 , - hexvar ( gp ) lw a0 , hexvar ( fp ) lw v1 , ( v1 ) beq a0 , v1 , hexvar nop lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - hexvar ] , num mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov byte ptr [ ebp - hexvar ] , num lea esi , [ ebp - hexvar ] add esi , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor eax , eax mov cl , al test byte ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , cl je hexvar cmp dword ptr [ ebp - hexvar ] , num sete al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] xor al , hexvar test al , num jne hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + num ] sub eax , edx add ecx , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jb hexvar jmp hexvar xor eax , eax mov ecx , dword ptr [ ebp - hexvar ] mov edx , eax sub edx , ecx mov ecx , eax sub ecx , num add edx , ecx sub eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rbp - num ] mov qword ptr [ rbp - hexvar ] , rsi mov byte ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , num mov byte ptr [ rbp - hexvar ] , num mov rsi , qword ptr [ rip + hexvar ] jmp rsi lea rdi , [ rbp - hexvar ] call hexvar movzx eax , byte ptr [ rbp - hexvar ] mov edi , eax mov eax , edi and eax , num mov edi , eax mov rdi , qword ptr [ rdi * num + hexvar ] xor eax , eax mov cl , al mov byte ptr [ rbp - hexvar ] , cl jmp rdi mov eax , dword ptr [ rbp - hexvar ] test eax , eax sete cl mov rdx , qword ptr [ rip + hexvar ] mov byte ptr [ rbp - hexvar ] , cl jmp rdx mov al , byte ptr [ rbp - hexvar ] not al movzx ecx , al mov edx , ecx mov ecx , edx and ecx , num mov edx , ecx mov rdx , qword ptr [ rdx * num + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] sub rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] sub rax , rcx setae dl movzx esi , dl mov ecx , esi mov rcx , qword ptr [ rcx * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rax , num mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rax , rcx mov qword ptr [ rbp - hexvar ] , rax mov byte ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax mov dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , num sub esp , num push num push num lea eax , [ ebp - hexvar ] add eax , num push eax call hexvar add esp , hexvar mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , eax mov eax , dword ptr [ ebp - hexvar ] sub edx , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ ebp + hexvar ] , eax jbe hexvar add dword ptr [ ebp - hexvar ] , num mov edx , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp - hexvar ] add eax , edx mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , num sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar movzx eax , byte ptr [ ebp - hexvar ] xor eax , num test al , al jne hexvar mov eax , dword ptr [ ebp - hexvar ] test eax , eax je hexvar mov eax , num jmp hexvar mov eax , num test eax , eax jne hexvar jmp hexvar nop mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] xor ecx , dword ptr gs : [ hexvar ] je hexvar call hexvar mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] xor edx , edx mov dword ptr [ ebp - hexvar ] , num mov esi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , esi mov byte ptr [ ebp - hexvar ] , num lea esi , [ ebp - hexvar ] add esi , num mov dword ptr [ esp ] , esi mov dword ptr [ esp + num ] , num mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx call hexvar mov byte ptr [ ebp - hexvar ] , num lea eax , [ ebp - hexvar ] mov dword ptr [ esp ] , eax call hexvar xor eax , eax mov cl , al test byte ptr [ ebp - hexvar ] , num mov byte ptr [ ebp - hexvar ] , cl je hexvar cmp dword ptr [ ebp - hexvar ] , num sete al mov byte ptr [ ebp - hexvar ] , al mov al , byte ptr [ ebp - hexvar ] xor al , hexvar test al , num jne hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp + num ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] cmp eax , dword ptr [ ebp + hexvar ] jb hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar mov edi , dword ptr [ esp + hexvar ] mov ebx , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] movzx eax , byte ptr [ edi + hexvar ] mov ecx , dword ptr [ edi + hexvar ] or eax , num test ecx , ecx mov byte ptr [ edi + hexvar ] , al je hexvar mov dword ptr [ esp + hexvar ] , num mov eax , dword ptr [ edi ] mov edx , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ eax + edx * num ] test ebp , ebp jne hexvar jmp hexvar nop lea esi , [ esi ] mov ebp , dword ptr [ ebp ] test ebp , ebp je hexvar sub esp , num push esi push ebp call ebx add esp , hexvar test eax , eax jne hexvar movzx eax , byte ptr [ edi + hexvar ] and eax , hexvar mov byte ptr [ edi + hexvar ] , al add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rbp - num ] mov al , byte ptr [ rdx + hexvar ] and al , hexvar mov cl , al and cl , num xor al , num or cl , al mov byte ptr [ rdx + hexvar ] , cl mov dword ptr [ rbp - hexvar ] , num mov eax , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - num ] cmp eax , dword ptr [ rcx + hexvar ] jae hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov ecx , dword ptr [ rbp - hexvar ] mov edx , ecx mov rax , qword ptr [ rax + rdx * num ] mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] call rax cmp eax , num jne hexvar jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar jmp hexvar mov eax , dword ptr [ rbp - hexvar ] add eax , num mov dword ptr [ rbp - hexvar ] , eax jmp hexvar jmp hexvar mov rax , qword ptr [ rbp - num ] mov cl , byte ptr [ rax + hexvar ] and cl , hexvar mov byte ptr [ rax + hexvar ] , cl add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , rdx mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] or edx , num mov byte ptr [ rax + hexvar ] , dl mov dword ptr [ rbp - hexvar ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov edx , dword ptr [ rbp - hexvar ] shl rdx , num add rax , rdx mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax jmp hexvar mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test eax , eax je hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov qword ptr [ rbp - num ] , rax cmp qword ptr [ rbp - num ] , num jne hexvar add dword ptr [ rbp - hexvar ] , num mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] cmp dword ptr [ rbp - hexvar ] , eax jb hexvar jmp hexvar nop mov rax , qword ptr [ rbp - hexvar ] movzx edx , byte ptr [ rax + hexvar ] and edx , hexvar mov byte ptr [ rax + hexvar ] , dl nop leave ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] movzx edx , byte ptr [ eax + hexvar ] or edx , num mov byte ptr [ eax + hexvar ] , dl mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] mov eax , dword ptr [ ebp + hexvar ] call eax add esp , hexvar test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num jne hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] cmp dword ptr [ ebp - hexvar ] , eax jb hexvar jmp hexvar nop mov eax , dword ptr [ ebp + num ] movzx edx , byte ptr [ eax + hexvar ] and edx , hexvar mov byte ptr [ eax + hexvar ] , dl nop leave ret
addiu sp , sp , - hexvar lbu v0 , hexvar ( a0 ) lw v1 , hexvar ( a0 )
addiu sp , sp , - hexvar lbu v0 , hexvar ( a0 ) lw v1 , hexvar ( a0 )
push r14 push r13 push r12 push rbp push rbx mov r13 , rdi or byte ptr [ rdi + hexvar ] , num cmp dword ptr [ rdi + hexvar ] , num je hexvar mov rbp , rsi mov r12 , rdx mov r14d , num mov eax , r14d mov rdx , qword ptr [ r13 ] mov rbx , qword ptr [ rdx + rax * num ] test rbx , rbx je hexvar mov rsi , r12 mov rdi , rbx call rbp test eax , eax je hexvar mov rbx , qword ptr [ rbx ] test rbx , rbx jne hexvar add r14d , num cmp dword ptr [ r13 + hexvar ] , r14d ja hexvar and byte ptr [ r13 + hexvar ] , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 ret
addiu sp , sp , - hexvar lbu v0 , hexvar ( a0 ) lw v1 , hexvar ( a0 ) sw s3 , hexvar ( sp ) move s3 , a0 addiu a0 , zero , num sw ra , hexvar ( sp ) sw s4 , hexvar ( sp ) ins v0 , a0 , num , num sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) beqz v1 , hexvar sb v0 , hexvar ( s3 ) move s4 , zero move s1 , a1 move s2 , a2 lw v0 , ( s3 ) sll a0 , s4 , num addu v0 , v0 , a0 lw s0 , ( v0 ) bnez s0 , hexvar move a0 , s0 b hexvar addiu s4 , s4 , num lw s0 , ( s0 )
push { r4 , r5 , r6 , r7 , r8 , lr } mov r7 , r0 ldrb r3 , [ r0 , hexvar ] ldr r0 , [ r0 , hexvar ] orr r3 , r3 , num cmp r0 , num strb r3 , [ r7 , hexvar ] beq hexvar mov r5 , r1 mov r6 , r2 mov r8 , num ldr r3 , [ r7 ] ldr r4 , [ r3 , r8 , lsl num ] cmp r4 , num bne hexvar b hexvar ldr r4 , [ r4 ] cmp r4 , num beq hexvar mov r1 , r6 mov r0 , r4 blx r5 cmp r0 , num bne hexvar ldrb r3 , [ r7 , hexvar ] bic r3 , r3 , num strb r3 , [ r7 , hexvar ] pop { r4 , r5 , r6 , r7 , r8 , pc } rschi r8 , r2 , ip , ror r5 andeq r0 , r0 , r0
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v1 , hexvar ( fp ) lbu v0 , hexvar ( v1 ) addiu a0 , zero , num ins v0 , a0 , num , num sb v0 , hexvar ( v1 ) sw zero , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lw v1 , ( v0 )
mov eax , num mov rcx , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx ja hexvar mov rax , qword ptr [ rdi + hexvar ] sub rax , qword ptr [ rdi + num ] mov rdx , rax mov eax , num test dword ptr [ rdi ] , hexvar je hexvar mov rax , qword ptr [ rdi + hexvar ] sub rax , qword ptr [ rdi + hexvar ] add rax , rdx ret nop dword ptr [ rax + rax ]
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] cmp ecx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - num ] , eax jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub eax , hexvar sub eax , ecx add eax , hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] add eax , hexvar sub eax , ecx sub eax , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] cmp ecx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - num ] , eax jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub eax , ecx mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
xor eax , eax mov rcx , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx ja hexvar mov rax , qword ptr [ rdi + hexvar ] sub rax , qword ptr [ rdi + num ] test dword ptr [ rdi ] , hexvar je hexvar mov rdx , qword ptr [ rdi + hexvar ] sub rdx , qword ptr [ rdi + hexvar ] add rax , rdx ret nop dword ptr [ rax ]
str fp , [ sp , - num ] ! add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] cmp r2 , r3 bls hexvar mov r3 , num b hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] mov r2 , r3 ldr r3 , [ fp , - num ] ldr r3 , [ r3 , num ] sub r2 , r2 , r3 ldr r3 , [ fp , - num ] ldr r3 , [ r3 ] and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] mov r1 , r3 ldr r3 , [ fp , - num ] ldr r3 , [ r3 , hexvar ] sub r3 , r1 , r3 b hexvar mov r3 , num add r3 , r3 , r2 mov r0 , r3 add sp , fp , num pop { fp } bx lr
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] cmp ecx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - num ] , eax jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub eax , ecx mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] add esp , hexvar pop ebp ret
push rbp mov rbp , rsp mov qword ptr [ rbp - hexvar ] , rdi mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ rdi + hexvar ] sub rdi , rax seta cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rdi jmp rax mov qword ptr [ rbp - num ] , num mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + num ] mov rdx , qword ptr [ rax + hexvar ] sub rdx , rcx movzx esi , byte ptr [ rax + num ] mov eax , esi mov esi , eax and esi , num mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov qword ptr [ rbp - hexvar ] , rdx jmp rax mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rax + hexvar ] sub rax , rcx mov rcx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp rcx xor eax , eax mov ecx , eax mov rdx , qword ptr [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rcx jmp rdx mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] add rcx , rax mov qword ptr [ rbp - num ] , rcx mov rax , qword ptr [ rip + hexvar ] jmp rax mov rax , qword ptr [ rbp - num ] pop rbp ret
xor eax , eax mov rcx , qword ptr [ rdi + hexvar ] cmp qword ptr [ rdi + hexvar ] , rcx ja hexvar mov rax , qword ptr [ rdi + hexvar ] sub rax , qword ptr [ rdi + num ] mov rdx , rax xor eax , eax test dword ptr [ rdi ] , hexvar je hexvar mov rax , qword ptr [ rdi + hexvar ] sub rax , qword ptr [ rdi + hexvar ] add rax , rdx ret nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebp + num ] cmp ecx , dword ptr [ edx + hexvar ] jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax + num ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx + num ] sub ecx , edx mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] mov dword ptr [ ebp - hexvar ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] and eax , hexvar cmp eax , num je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] mov edx , dword ptr [ ebp + num ] cmp ecx , dword ptr [ edx + hexvar ] mov dword ptr [ ebp - num ] , eax jbe hexvar mov dword ptr [ ebp - num ] , num jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + num ] sub eax , ecx mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] and ecx , hexvar cmp ecx , num mov dword ptr [ ebp - hexvar ] , eax je hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx + hexvar ] sub eax , ecx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar xor eax , eax mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] add ecx , eax mov dword ptr [ ebp - num ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov esi , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax sub esp , num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push esi push edx push - num push hexvar lea eax , [ ebx - hexvar ] push eax push - num call hexvar add esp , hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - num ] , eax call hexvar mov dword ptr [ esp ] , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov edx , dword ptr [ ebp - num ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov esi , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov edx , eax sub esp , num lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax lea eax , [ ebx - hexvar ] push eax push esi push edx push - num push hexvar lea eax , [ ebx - hexvar ] push eax push - num call hexvar add esp , hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a3 , zero , - num addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , - num jal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax lea rax , [ rip + hexvar ] push rax lea rax , [ rip + hexvar ] push rax lea rax , [ rip + hexvar ] push rax lea rax , [ rip + hexvar ] push rax mov r9 , rbx mov r8 , rdx mov ecx , hexvar mov edx , hexvar lea rsi , [ rip + hexvar ] mov edi , hexvar call hexvar add rsp , hexvar nop mov rbx , qword ptr [ rbp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , ecx sub esp , hexvar lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax call hexvar add esp , hexvar mov ecx , dword ptr [ ebp - num ] mov edx , dword ptr [ ecx ] sub esp , hexvar mov dword ptr [ esp ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar sub esp , hexvar mov dword ptr [ esp ] , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar mov esp , ebp pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a3 , zero , - num addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , - num jal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a3 , zero , - num addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , - num jal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , eax lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ esp ] , hexvar lea ecx , [ hexvar ] mov dword ptr [ esp + num ] , ecx mov dword ptr [ esp + num ] , hexvar mov dword ptr [ esp + hexvar ] , hexvar mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + hexvar ] , edx mov dword ptr [ esp + hexvar ] , eax mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx mov dword ptr [ esp + hexvar ] , ecx call hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lui v0 , hexvar addiu a0 , v0 , - hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( fp ) move s0 , v0 lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move v1 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( sp ) sw v1 , hexvar ( sp ) sw s0 , hexvar ( sp ) addiu a3 , zero , - num addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , - hexvar addiu a0 , zero , - num jal hexvar nop lw gp , hexvar ( fp ) nop move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s0 , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ esp + hexvar ] , hexvar mov edi , dword ptr [ esp + hexvar ] jbe hexvar lea eax , [ edi + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov edi , ebp mov ebp , dword ptr [ esp + hexvar ] sub eax , hexvar shr eax , hexvar mov dword ptr [ esp + hexvar ] , eax shl eax , hexvar lea eax , [ esi + eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] lea ecx , [ eax + hexvar ] push ecx lea ecx , [ eax + hexvar ] push ecx push dword ptr [ esp + hexvar ] push eax push hexvar push esi push edi add esi , hexvar add edi , hexvar call hexvar add esp , hexvar cmp esi , dword ptr [ esp + num ] jne hexvar mov eax , dword ptr [ esp + hexvar ] and dword ptr [ esp + hexvar ] , hexvar mov edi , ebp add eax , num shl eax , hexvar add dword ptr [ esp + hexvar ] , eax add dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ edi + hexvar ] lea edx , [ edi + hexvar ] push dword ptr [ edi + num ] lea ecx , [ eax + hexvar ] push ecx lea ecx , [ eax + hexvar ] push ecx push edx push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov r12 , rdx mov rbx , rsi mov r15 , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ r15 + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rax , [ rax + num ] mov qword ptr [ rsp + num ] , rax movabs r14 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov eax , dword ptr [ r15 + hexvar ] lea rbp , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , qword ptr [ rsp + num ] mov r8 , qword ptr [ rsp + hexvar ] push rax push rbp call hexvar add rsp , hexvar add r12 , r14 add rbx , r14 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov r10d , dword ptr [ r15 + hexvar ] add r15 , hexvar lea rax , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , r13 mov r8 , r15 push r10 push rax call hexvar add rsp , hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov r12 , rdx mov rbx , rsi mov r15 , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ r15 + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rax , [ rax + num ] mov qword ptr [ rsp + num ] , rax movabs r14 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov eax , dword ptr [ r15 + hexvar ] lea rbp , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , qword ptr [ rsp + num ] mov r8 , qword ptr [ rsp + hexvar ] push rax push rbp call hexvar add rsp , hexvar add r12 , r14 add rbx , r14 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov r10d , dword ptr [ r15 + hexvar ] add r15 , hexvar lea rax , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , r13 mov r8 , r15 push r10 push rax call hexvar add rsp , hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move fp , a1 move s7 , a2 lui v0 , hexvar sltu v0 , a3 , v0 bnez v0 , hexvar move s4 , a3 move s2 , a3 move s1 , a2 move s0 , a1 addiu s6 , a0 , hexvar lui s5 , hexvar lw a3 , hexvar ( s3 ) lw v0 , num ( s3 ) sw v0 , hexvar ( sp ) addiu v0 , a3 , hexvar sw v0 , hexvar ( sp ) addiu v0 , a3 , hexvar sw v0 , hexvar ( sp ) sw s6 , hexvar ( sp ) lui a2 , hexvar move a1 , s0 move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) addu s2 , s2 , s5 lui v0 , hexvar addu s1 , s1 , v0 addu s0 , s0 , v0 sltu v0 , s2 , v0 beqz v0 , hexvar ext a2 , s4 , num , hexvar lui v0 , hexvar addu v0 , s4 , v0 srl v0 , v0 , hexvar addiu v0 , v0 , num sll v0 , v0 , hexvar addu s7 , s7 , v0 addu fp , fp , v0 bnez a2 , hexvar move a1 , fp addiu v0 , zero , num lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move a2 , a3 lw a3 , hexvar ( s3 ) lw v0 , num ( s3 ) sw v0 , hexvar ( sp ) addiu v0 , a3 , hexvar sw v0 , hexvar ( sp ) addiu v0 , a3 , hexvar sw v0 , hexvar ( sp ) addiu s3 , s3 , hexvar sw s3 , hexvar ( sp ) move a0 , s7 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar addiu v0 , zero , num
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov r12 , rdx mov rbx , rsi mov r15 , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ r15 + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea r14 , [ rax + num ] mov qword ptr [ rsp + num ] , r13 nop word ptr cs : [ rax + rax ] nop dword ptr [ rax ] movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov eax , dword ptr [ r15 + hexvar ] lea rbp , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , r14 mov r8 , qword ptr [ rsp + hexvar ] push rax push rbp call hexvar add rsp , hexvar movabs rax , hexvar add rbx , rax add r12 , rax movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp + num ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov r10d , dword ptr [ r15 + hexvar ] add r15 , hexvar lea rax , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , r13 mov r8 , r15 push r10 push rax call hexvar add rsp , hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov r12 , rdx mov rbx , rsi mov r15 , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ r15 + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rax , [ rax + num ] mov qword ptr [ rsp + num ] , rax movabs r14 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov eax , dword ptr [ r15 + hexvar ] lea rbp , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , qword ptr [ rsp + num ] mov r8 , qword ptr [ rsp + hexvar ] push rax push rbp call hexvar add rsp , hexvar add r12 , r14 add rbx , r14 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov r10d , dword ptr [ r15 + hexvar ] add r15 , hexvar lea rax , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , r13 mov r8 , r15 push r10 push rax call hexvar add rsp , hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r13 , rcx mov r12 , rdx mov rbx , rsi mov r15 , rdi mov rax , rcx shr rax , hexvar je hexvar movabs rax , hexvar lea rcx , [ r15 + hexvar ] mov qword ptr [ rsp + hexvar ] , rcx lea rax , [ rax + num ] mov qword ptr [ rsp + num ] , rax movabs r14 , hexvar mov qword ptr [ rsp ] , r13 nop word ptr cs : [ rax + rax ] nop dword ptr [ rax + rax ] movabs rax , hexvar add r13 , rax mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov eax , dword ptr [ r15 + hexvar ] lea rbp , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , qword ptr [ rsp + num ] mov r8 , qword ptr [ rsp + hexvar ] push rax push rbp call hexvar add rsp , hexvar add r12 , r14 add rbx , r14 movabs rax , hexvar cmp r13 , rax ja hexvar mov r13 , qword ptr [ rsp ] movabs rax , hexvar and r13 , rax test r13 , r13 je hexvar mov rcx , qword ptr [ r15 + hexvar ] mov r9 , rcx sub r9 , - hexvar mov r10d , dword ptr [ r15 + hexvar ] add r15 , hexvar lea rax , [ rcx + hexvar ] mov rdi , r12 mov rsi , rbx mov rdx , r13 mov r8 , r15 push r10 push rax call hexvar add rsp , hexvar mov eax , num add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar lui v0 , hexvar addiu gp , gp , hexvar sltu v0 , a3 , v0 sw fp , hexvar ( sp ) sw s4 , hexvar ( sp ) move fp , a0 sw s2 , hexvar ( sp ) move s4 , a3 sw s1 , hexvar ( sp ) move s2 , a1 sw ra , hexvar ( sp ) move s1 , a2 sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s0 , hexvar ( sp ) bnez v0 , hexvar sw gp , hexvar ( sp ) addiu s6 , a0 , hexvar lui s5 , hexvar move s7 , a3 move s3 , a2 move s0 , a1 lw a3 , hexvar ( fp )
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar cmp dword ptr [ esp + hexvar ] , hexvar mov edi , dword ptr [ esp + hexvar ] jbe hexvar lea eax , [ edi + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov edi , ebp mov ebp , dword ptr [ esp + hexvar ] sub eax , hexvar shr eax , hexvar mov dword ptr [ esp + hexvar ] , eax shl eax , hexvar lea eax , [ esi + eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ ebp + hexvar ] push dword ptr [ ebp + num ] lea ecx , [ eax + hexvar ] push ecx lea ecx , [ eax + hexvar ] push ecx push dword ptr [ esp + hexvar ] push eax push hexvar push esi push edi add esi , hexvar add edi , hexvar call hexvar add esp , hexvar cmp esi , dword ptr [ esp + num ] jne hexvar mov eax , dword ptr [ esp + hexvar ] and dword ptr [ esp + hexvar ] , hexvar mov edi , ebp add eax , num shl eax , hexvar add dword ptr [ esp + hexvar ] , eax add dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] test eax , eax je hexvar mov eax , dword ptr [ edi + hexvar ] lea edx , [ edi + hexvar ] push dword ptr [ edi + num ] lea ecx , [ eax + hexvar ] push ecx lea ecx , [ eax + hexvar ] push ecx push edx push eax push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar add esp , hexvar mov eax , num pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s7 , hexvar ( sp ) sw s6 , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s3 , a0 move fp , a1 move s7 , a2 lui v0 , hexvar sltu v0 , a3 , v0 bnez v0 , hexvar move s4 , a3 move s2 , a3 move s1 , a2 move s0 , a1 addiu s6 , a0 , hexvar lui s5 , hexvar lw a3 , hexvar ( s3 ) lw v0 , num ( s3 ) sw v0 , hexvar ( sp ) addiu v0 , a3 , hexvar sw v0 , hexvar ( sp ) addiu v0 , a3 , hexvar sw v0 , hexvar ( sp ) sw s6 , hexvar ( sp ) lui a2 , hexvar move a1 , s0 move a0 , s1 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) addu s2 , s2 , s5 lui v0 , hexvar addu s1 , s1 , v0 addu s0 , s0 , v0 sltu v0 , s2 , v0 beqz v0 , hexvar ext a2 , s4 , num , hexvar lui v0 , hexvar addu v0 , s4 , v0 srl v0 , v0 , hexvar addiu v0 , v0 , num sll v0 , v0 , hexvar addu s7 , s7 , v0 addu fp , fp , v0 bnez a2 , hexvar move a1 , fp addiu v0 , zero , num lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) lw s7 , hexvar ( sp ) lw s6 , hexvar ( sp ) lw s5 , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar b hexvar move a2 , a3 lw a3 , hexvar ( s3 ) lw v0 , num ( s3 ) sw v0 , hexvar ( sp ) addiu v0 , a3 , hexvar sw v0 , hexvar ( sp ) addiu v0 , a3 , hexvar sw v0 , hexvar ( sp ) addiu s3 , s3 , hexvar sw s3 , hexvar ( sp ) move a0 , s7 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) b hexvar addiu v0 , zero , num
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , hexvar mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , eax dec ecx mov dword ptr [ ebp + num ] , ecx test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ eax + hexvar ] test cl , cl setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov cx , word ptr [ eax ] sub cx , num sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] mov word ptr [ ebp - hexvar ] , cx jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , hexvar call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] add eax , hexvar mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num mov dword ptr [ ebp - num ] , hexvar mov edx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx jmp edx mov eax , dword ptr [ ebp + num ] mov ecx , eax dec ecx mov dword ptr [ ebp + num ] , ecx test eax , eax setne dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov cl , byte ptr [ eax + hexvar ] test cl , cl setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] mov cx , word ptr [ eax ] sub cx , num sete dl movzx eax , dl mov eax , dword ptr [ eax * num + hexvar ] mov word ptr [ ebp - hexvar ] , cx jmp eax mov eax , dword ptr [ ebp + hexvar ] mov ecx , esp mov dword ptr [ ecx ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx + num ] , ecx mov dword ptr [ edx + num ] , eax mov dword ptr [ edx ] , hexvar call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov edx , esp mov dword ptr [ edx ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - num ] , hexvar mov eax , dword ptr [ ebp - num ] inc eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp + hexvar ] add eax , hexvar mov dword ptr [ ebp + hexvar ] , eax mov eax , dword ptr [ hexvar ] jmp eax lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lb v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lh v1 , ( v0 )
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ pc , hexvar ] str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] ldrb r3 , [ r3 , hexvar ] cmp r3 , num beq hexvar ldr r3 , [ fp , - hexvar ] ldrsh r3 , [ r3 ] cmp r3 , num bne hexvar ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r2 , [ fp , - num ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ pc , hexvar ] bl hexvar ldr r0 , [ fp , - num ] bl hexvar ldr r3 , [ pc , hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r3 , r3 , hexvar str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] sub r2 , r3 , num str r2 , [ fp , - hexvar ] cmp r3 , num bne hexvar ldr r0 , [ pc , hexvar ] bl hexvar mov r3 , r0 ldr r1 , [ fp , - hexvar ] mov r0 , r3 bl hexvar mov r0 , r0 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , hexvar mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - num ] mov rcx , rax add rcx , - num mov qword ptr [ rbp - num ] , rcx test rax , rax setne dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] test cl , cl setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cx , word ptr [ rax ] sub cx , num sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov word ptr [ rbp - hexvar ] , cx jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov edi , hexvar xor ecx , ecx mov r8b , cl mov al , r8b call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num mov qword ptr [ rbp - hexvar ] , hexvar mov rsi , qword ptr [ rip + hexvar ] jmp rsi mov rax , qword ptr [ rbp - num ] mov rcx , rax add rcx , - num mov qword ptr [ rbp - num ] , rcx test rax , rax setne dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cl , byte ptr [ rax + hexvar ] test cl , cl setne cl movzx edx , cl mov eax , edx mov rax , qword ptr [ rax * num + hexvar ] jmp rax mov rax , qword ptr [ rbp - hexvar ] mov cx , word ptr [ rax ] sub cx , num sete dl movzx esi , dl mov eax , esi mov rax , qword ptr [ rax * num + hexvar ] mov word ptr [ rbp - hexvar ] , cx jmp rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar mov qword ptr [ rbp - hexvar ] , rax mov rsi , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov edi , hexvar xor ecx , ecx mov r8b , cl mov al , r8b call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax call hexvar mov qword ptr [ rbp - hexvar ] , hexvar mov rdx , qword ptr [ rbp - hexvar ] add rdx , num mov qword ptr [ rbp - hexvar ] , rdx mov rdx , qword ptr [ rip + hexvar ] jmp rdx mov rax , qword ptr [ rbp - hexvar ] add rax , hexvar mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rip + hexvar ] jmp rax movabs rdi , hexvar call hexvar mov rsi , qword ptr [ rbp - hexvar ] mov rdi , rax mov al , num call hexvar mov dword ptr [ rbp - hexvar ] , eax add rsp , hexvar pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , num lea edx , [ hexvar ] mov dword ptr [ ebp - num ] , edx mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , eax add ecx , - num mov dword ptr [ ebp + num ] , ecx cmp eax , num je hexvar mov eax , dword ptr [ ebp + hexvar ] movsx eax , byte ptr [ eax + hexvar ] cmp eax , num je hexvar mov eax , dword ptr [ ebp + hexvar ] movsx eax , word ptr [ eax ] cmp eax , num jne hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] mov ecx , dword ptr [ ebp - hexvar ] lea edx , [ hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar lea eax , [ hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] add eax , num mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + hexvar ] add eax , hexvar mov dword ptr [ ebp + hexvar ] , eax jmp hexvar lea eax , [ hexvar ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ esp ] , eax mov dword ptr [ esp + num ] , ecx call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw zero , hexvar ( fp ) lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( fp ) b hexvar nop lw v0 , hexvar ( fp ) lb v0 , hexvar ( v0 ) beqz v0 , hexvar nop lw v0 , hexvar ( fp ) lh v1 , ( v0 )
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar mov dword ptr [ ebp - hexvar ] , num lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + hexvar ] movzx eax , byte ptr [ eax + hexvar ] test al , al je hexvar mov eax , dword ptr [ ebp + hexvar ] movzx eax , word ptr [ eax ] cmp ax , num jne hexvar sub esp , hexvar push dword ptr [ ebp + hexvar ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax sub esp , num push dword ptr [ ebp - hexvar ] push dword ptr [ ebp - hexvar ] lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , hexvar push dword ptr [ ebp - hexvar ] call hexvar add esp , hexvar lea eax , [ ebx - hexvar ] mov dword ptr [ ebp - hexvar ] , eax add dword ptr [ ebp - hexvar ] , num add dword ptr [ ebp + hexvar ] , hexvar mov eax , dword ptr [ ebp + num ] lea edx , [ eax - num ] mov dword ptr [ ebp + num ] , edx test eax , eax jne hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp - hexvar ] push eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov qword ptr [ rbp - hexvar ] , num lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , byte ptr [ rax + hexvar ] test al , al je hexvar mov rax , qword ptr [ rbp - hexvar ] movzx eax , word ptr [ rax ] cmp ax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar mov qword ptr [ rbp - num ] , rax mov rdx , qword ptr [ rbp - num ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax lea rdi , [ rip + hexvar ] mov eax , num call hexvar mov rax , qword ptr [ rbp - num ] mov rdi , rax call hexvar lea rax , [ rip + hexvar ] mov qword ptr [ rbp - hexvar ] , rax add qword ptr [ rbp - hexvar ] , num add qword ptr [ rbp - hexvar ] , hexvar mov rax , qword ptr [ rbp - hexvar ] lea rdx , [ rax - num ] mov qword ptr [ rbp - hexvar ] , rdx test rax , rax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rdx , rax mov rax , qword ptr [ rbp - hexvar ] mov rsi , rax mov rdi , rdx mov eax , num call hexvar nop leave ret
mov edx , dword ptr [ rsi + hexvar ] mov ecx , dword ptr [ rdi + hexvar ] cmp edx , num sete al cmp edx , num sete dl or eax , edx cmp ecx , num je hexvar cmp ecx , num je hexvar mov edx , dword ptr [ rdi + hexvar ] and edx , hexvar test al , al je hexvar cmp edx , hexvar je hexvar mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) sb v0 , hexvar ( fp ) lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lbu v0 , hexvar ( fp ) xori v0 , v0 , num andi v0 , v0 , hexvar beqz v0 , hexvar nop lbu v0 , hexvar ( fp ) beqz v0 , hexvar nop addiu v0 , zero , num b hexvar nop lw a2 , - hexvar ( gp ) lw a1 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop lw gp , hexvar ( fp ) move sp , fp lw ra , hexvar ( sp ) lw fp , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
lw v0 , hexvar ( a0 ) addiu a2 , zero , num beq v0 , a2 , hexvar lw v1 , hexvar ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw a1 , ( s0 )
lw v0 , hexvar ( a0 ) addiu a2 , zero , num beq v0 , a2 , hexvar lw v1 , hexvar ( a1 )
mov edx , dword ptr [ rsi + hexvar ] mov ecx , dword ptr [ rdi + hexvar ] cmp edx , num sete al cmp edx , num sete dl or eax , edx cmp ecx , num je hexvar cmp ecx , num je hexvar mov edx , dword ptr [ rdi + hexvar ] and edx , hexvar test al , al je hexvar cmp edx , hexvar je hexvar mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw a1 , ( s0 )
mov edx , dword ptr [ rsi + hexvar ] mov ecx , dword ptr [ rdi + hexvar ] cmp edx , num sete al cmp edx , num sete dl or eax , edx cmp ecx , num je hexvar cmp ecx , num je hexvar mov edx , dword ptr [ rdi + hexvar ] and edx , hexvar test al , al je hexvar cmp edx , hexvar je hexvar mov eax , num ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s2 , a0 move s0 , a1 jal hexvar nop lw gp , hexvar ( sp ) move s1 , v0 move a0 , s0 jal hexvar nop lw gp , hexvar ( sp ) beqz s1 , hexvar nop beqz v0 , hexvar addiu v0 , zero , - num lw a1 , ( s0 )
lw v0 , hexvar ( a0 ) addiu a2 , zero , num beq v0 , a2 , hexvar lw v1 , hexvar ( a1 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v0 , hexvar ( v0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - num ] mov rsi , rcx mov rdi , rdx call rax nop leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test eax , eax jne hexvar call hexvar mov edi , eax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov rsi , rcx mov rax , qword ptr [ rbp - hexvar ] call rax cmp eax , num jne hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar add rsp , hexvar pop rbp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov rsi , rcx mov rax , qword ptr [ rbp - hexvar ] call rax cmp eax , num jne hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push esi push ebx call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + num ] mov eax , dword ptr [ eax + hexvar ] mov edx , dword ptr [ ebx + hexvar ] mov edx , dword ptr [ edx ] sub esp , num push edx push dword ptr [ ebp + num ] call eax add esp , hexvar test eax , eax jne hexvar call hexvar sub esp , hexvar push eax call hexvar add esp , hexvar mov esi , eax sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push esi push eax call hexvar add esp , hexvar nop lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov rdi , qword ptr [ rbp - num ] mov rdi , qword ptr [ rdi + num ] mov rdi , qword ptr [ rdi + hexvar ] mov rax , qword ptr [ rbp - num ] mov rcx , qword ptr [ hexvar ] mov qword ptr [ rbp - hexvar ] , rdi mov rdi , rax mov rsi , rcx mov rax , qword ptr [ rbp - hexvar ] call rax cmp eax , num jne hexvar movabs rdi , hexvar call hexvar mov qword ptr [ rbp - hexvar ] , rax call hexvar mov edi , eax call hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rsi , rax mov al , num call hexvar add rsp , hexvar pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) sw s0 , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 )
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rax , qword ptr [ rax + hexvar ] mov rcx , qword ptr [ rip + hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rcx mov rdi , rdx call rax test eax , eax jne hexvar call hexvar mov edi , eax call hexvar mov rbx , rax lea rdi , [ rip + hexvar ] call hexvar mov rsi , rbx mov rdi , rax mov eax , num call hexvar nop add rsp , hexvar pop rbx pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sw a0 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , num ( v0 ) lw v0 , hexvar ( v0 )
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bxeq lr cmp r0 , num ldr r3 , [ r1 ] beq hexvar ldr r2 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num b hexvar mov r2 , r3 ldr r1 , [ pc , hexvar ] mov r0 , num b hexvar andeq r1 , sp , r8 , asr r4 andeq sl , sb , r0 , lsl num andeq sl , sb , ip , lsl num
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , num ] cmp r3 , num bxeq lr push { r4 , lr } cmp r0 , num beq hexvar ldr r3 , [ r1 ] ldr r2 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num bl hexvar pop { r4 , pc }
lui v0 , hexvar lw v0 , hexvar ( v0 ) beqz v0 , hexvar lui gp , hexvar lw a3 , ( a1 ) beqz a0 , hexvar addiu gp , gp , - hexvar lui a1 , hexvar lw a2 , ( a0 )
mov eax , dword ptr [ rip + hexvar ] test eax , eax je hexvar test rdi , rdi mov rcx , qword ptr [ rsi ] je hexvar mov rdx , qword ptr [ rdi ] lea rsi , [ rip + hexvar ] mov edi , num xor eax , eax jmp hexvar nop dword ptr [ rax + rax ] ret nop word ptr [ rax + rax ] lea rsi , [ rip + hexvar ] mov rdx , rcx mov edi , num xor eax , eax jmp hexvar nop
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov edx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ edx ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] sub esp , num push ecx push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar jmp hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] sub esp , num push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebx call hexvar add ebx , hexvar sub esp , num mov ecx , dword ptr [ ebx + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] test edx , edx mov eax , dword ptr [ eax ] je hexvar push eax mov eax , dword ptr [ esp + hexvar ] push dword ptr [ eax ] lea eax , [ ebx - hexvar ] push eax push num call hexvar add esp , hexvar add esp , num pop ebx ret
ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 , hexvar ] cmp r3 , num bxeq lr cmp r0 , num ldr r3 , [ r1 ] beq hexvar ldr r2 , [ r0 ] ldr r1 , [ pc , hexvar ] mov r0 , num b hexvar mov r2 , r3 ldr r1 , [ pc , hexvar ] mov r0 , num b hexvar andeq r5 , pc , r0 , asr r4 andeq sp , fp , r4 , ror num strdeq sp , lr , [ fp ] , -r0
lui v0 , hexvar lw v0 , - hexvar ( v0 ) beqz v0 , hexvar lui gp , hexvar lw a3 , ( a1 )
push ebp mov ebp , esp push ebx sub esp , num call hexvar add eax , hexvar mov edx , dword ptr [ eax + hexvar ] test edx , edx je hexvar cmp dword ptr [ ebp + num ] , num je hexvar mov edx , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ edx ] mov edx , dword ptr [ ebp + num ] mov edx , dword ptr [ edx ] sub esp , num push ecx push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar jmp hexvar mov edx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ edx ] sub esp , num push edx lea edx , [ eax - hexvar ] push edx mov ebx , eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
cmp dword ptr [ rip + hexvar ] , num je hexvar sub rsp , num test rdi , rdi je hexvar mov rcx , qword ptr [ rsi ] mov rdx , qword ptr [ rdi ] lea rsi , [ rip + hexvar ] mov edi , num mov eax , num call hexvar add rsp , num ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] cmp esi , num ja hexvar sub esp , hexvar push esi call hexvar mov dword ptr [ esp + hexvar ] , eax call hexvar mov edi , dword ptr [ eax ] mov ebp , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ ebp ] , edi add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] cmp esi , num ja hexvar sub esp , hexvar push esi call hexvar mov dword ptr [ esp + hexvar ] , eax call hexvar mov edi , dword ptr [ eax ] mov ebp , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ ebp ] , edi add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi cmp dword ptr [ rbp - hexvar ] , num js hexvar cmp dword ptr [ rbp - hexvar ] , num jg hexvar mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov eax , dword ptr [ rax ] mov dword ptr [ rbp - num ] , eax mov eax , dword ptr [ rbp - hexvar ] mov edi , eax call hexvar call hexvar mov rdx , rax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rdx ] , eax mov eax , dword ptr [ rbp - num ] mov dword ptr [ rbp - hexvar ] , eax mov eax , dword ptr [ rbp - hexvar ] leave ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov esi , dword ptr [ esp + hexvar ] cmp esi , num ja hexvar sub esp , hexvar push esi call hexvar mov dword ptr [ esp + hexvar ] , eax call hexvar mov edi , dword ptr [ eax ] mov ebp , eax mov dword ptr [ esp ] , esi call hexvar add esp , hexvar mov esi , dword ptr [ esp + hexvar ] mov dword ptr [ ebp ] , edi add esp , hexvar mov eax , esi pop ebx pop esi pop edi pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov esi , dword ptr [ esp + hexvar ] cmp esi , num jbe hexvar mov eax , esi add esp , hexvar pop ebx pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) sltiu v0 , a0 , num bnez v0 , hexvar move s0 , a0 move v0 , s0 lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 lw t9 , - hexvar ( gp )
push rbp mov rbp , rsp sub rsp , hexvar xor eax , eax mov dword ptr [ rbp - num ] , edi cmp eax , dword ptr [ rbp - num ] jg hexvar cmp dword ptr [ rbp - num ] , num jg hexvar mov edi , dword ptr [ rbp - num ] call hexvar mov dword ptr [ rbp - num ] , eax call hexvar mov edi , dword ptr [ rax ] mov dword ptr [ rbp - hexvar ] , edi mov edi , dword ptr [ rbp - num ] call hexvar mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - hexvar ] , eax mov dword ptr [ rbp - hexvar ] , edi call hexvar mov edi , dword ptr [ rbp - hexvar ] mov dword ptr [ rax ] , edi mov edi , dword ptr [ rbp - num ] mov dword ptr [ rbp - num ] , edi mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar cmp dword ptr [ ebp + num ] , num js hexvar cmp dword ptr [ ebp + num ] , num jg hexvar sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax sub esp , hexvar push dword ptr [ ebp + num ] call hexvar add esp , hexvar call hexvar mov edx , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] xor ecx , ecx cmp ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jg hexvar cmp dword ptr [ ebp + num ] , num jg hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov dword ptr [ ebp - num ] , eax call hexvar mov eax , dword ptr [ eax ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp + num ] mov dword ptr [ esp ] , eax call hexvar mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp + num ] , eax mov eax , dword ptr [ ebp + num ] add esp , hexvar pop ebp ret
push ebp push edi push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov ebp , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ esp + num ] , eax mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov edi , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ edi + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ edi + hexvar ] cmp edx , num je hexvar cmp edx , num jne hexvar mov edx , dword ptr [ ebp + num ] mov edi , dword ptr [ edx + hexvar ] sub esp , hexvar push eax call hexvar push edi push dword ptr [ esp + hexvar ] push esi lea edx , [ esp + hexvar ] push edx push dword ptr [ esp + hexvar ] push num push num push eax call hexvar add esp , hexvar mov esi , dword ptr [ esp + hexvar ] test eax , eax jle hexvar test esi , esi js hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ eax ] , esi mov esi , num mov eax , esi mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 lw s1 , hexvar ( a0 ) lw s2 , - hexvar ( gp ) sw s5 , hexvar ( sp ) move s5 , a3 sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s2 ) lw a0 , hexvar ( s1 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r8 mov r13 , rcx mov rbx , rsi mov rbp , rdi mov r14 , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ r14 + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ r14 + hexvar ] cmp eax , num je hexvar mov r15d , hexvar cmp eax , num jne hexvar mov qword ptr [ rsp + num ] , rdx mov rdx , qword ptr [ r14 + hexvar ] test rdx , rdx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov rdx , rax mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov edi , r12d mov rsi , r13 mov r8d , num call hexvar xor r15d , r15d test eax , eax jle hexvar movsxd rbp , eax mov rdi , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] movzx r12d , byte ptr [ rax + rbp - num ] call hexvar mov edi , eax call hexvar cmp eax , r12d jne hexvar add rbp , - num mov rdi , qword ptr [ r14 + hexvar ] call hexvar cmp ebp , eax jne hexvar test rbx , rbx je hexvar mov rsi , qword ptr [ r14 + hexvar ] mov rdi , rbx mov rdx , rbp call hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov r8d , dword ptr [ r14 + hexvar ] mov edi , r12d mov rsi , r13 mov rdx , rbx call hexvar mov r15d , eax test r15d , r15d jns hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rbp , qword ptr [ rbp + hexvar ] xor r15d , r15d lea r8 , [ rsp + hexvar ] mov edi , eax xor esi , esi xor edx , edx mov rcx , rbx mov r9 , r13 push qword ptr [ rbp + hexvar ] push r12 call hexvar add rsp , hexvar test eax , eax jle hexvar mov r15d , dword ptr [ rsp + hexvar ] test r15d , r15d js hexvar movsxd rbp , r15d mov r15 , qword ptr [ rsp + num ] mov qword ptr [ r15 ] , rbp mov r15d , num mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r8 mov r13 , rcx mov rbx , rsi mov rbp , rdi mov r14 , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ r14 + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ r14 + hexvar ] cmp eax , num je hexvar mov r15d , hexvar cmp eax , num jne hexvar mov qword ptr [ rsp + num ] , rdx mov rdx , qword ptr [ r14 + hexvar ] test rdx , rdx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov rdx , rax mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov edi , r12d mov rsi , r13 mov r8d , num call hexvar xor r15d , r15d test eax , eax jle hexvar movsxd rbp , eax mov rdi , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] movzx r12d , byte ptr [ rax + rbp - num ] call hexvar mov edi , eax call hexvar cmp eax , r12d jne hexvar add rbp , - num mov rdi , qword ptr [ r14 + hexvar ] call hexvar cmp ebp , eax jne hexvar test rbx , rbx je hexvar mov rsi , qword ptr [ r14 + hexvar ] mov rdi , rbx mov rdx , rbp call hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov r8d , dword ptr [ r14 + hexvar ] mov edi , r12d mov rsi , r13 mov rdx , rbx call hexvar mov r15d , eax test r15d , r15d jns hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rbp , qword ptr [ rbp + hexvar ] xor r15d , r15d lea r8 , [ rsp + hexvar ] mov edi , eax xor esi , esi xor edx , edx mov rcx , rbx mov r9 , r13 push qword ptr [ rbp + hexvar ] push r12 call hexvar add rsp , hexvar test eax , eax jle hexvar mov r15d , dword ptr [ rsp + hexvar ] test r15d , r15d js hexvar movsxd rbp , r15d mov r15 , qword ptr [ rsp + num ] mov qword ptr [ r15 ] , rbp mov r15d , num mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ esp + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ esp + hexvar ] mov ebp , dword ptr [ esp + hexvar ] mov esi , dword ptr [ ecx + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax mov eax , dword ptr [ esi + hexvar ] mov edx , dword ptr [ esi + hexvar ] test eax , eax je hexvar cmp edx , num je hexvar cmp edx , num jne hexvar mov edx , dword ptr [ ecx + num ] sub esp , hexvar mov esi , dword ptr [ edx + hexvar ] push eax call hexvar push esi push dword ptr [ esp + hexvar ] push ebp lea edx , [ esp + hexvar ] push edx push edi push num push num push eax call hexvar add esp , hexvar test eax , eax mov ebp , dword ptr [ esp + hexvar ] jle hexvar test ebp , ebp js hexvar mov eax , dword ptr [ esp + num ] mov dword ptr [ eax ] , ebp mov ebp , num mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] mov eax , ebp jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r8 mov r13 , rcx mov rbx , rsi mov rbp , rdi mov r14 , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ r14 + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ r14 + hexvar ] cmp eax , num je hexvar mov r15d , hexvar cmp eax , num jne hexvar mov qword ptr [ rsp + num ] , rdx mov rdx , qword ptr [ r14 + hexvar ] test rdx , rdx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov rdx , rax mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov edi , r12d mov rsi , r13 mov r8d , num call hexvar xor r15d , r15d test eax , eax jle hexvar movsxd rbp , eax mov rdi , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] movzx r12d , byte ptr [ rax + rbp - num ] call hexvar mov edi , eax call hexvar cmp eax , r12d jne hexvar add rbp , - num mov rdi , qword ptr [ r14 + hexvar ] call hexvar cmp ebp , eax jne hexvar test rbx , rbx je hexvar mov rsi , qword ptr [ r14 + hexvar ] mov rdi , rbx mov rdx , rbp call hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov r8d , dword ptr [ r14 + hexvar ] mov edi , r12d mov rsi , r13 mov rdx , rbx call hexvar mov r15d , eax test r15d , r15d jns hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rbp , qword ptr [ rbp + hexvar ] xor r15d , r15d lea r8 , [ rsp + hexvar ] mov edi , eax xor esi , esi xor edx , edx mov rcx , rbx mov r9 , r13 push qword ptr [ rbp + hexvar ] push r12 call hexvar add rsp , hexvar test eax , eax jle hexvar mov r15d , dword ptr [ rsp + hexvar ] test r15d , r15d js hexvar movsxd rbp , r15d mov r15 , qword ptr [ rsp + num ] mov qword ptr [ r15 ] , rbp mov r15d , num mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r8 mov r13 , rcx mov rbx , rsi mov rbp , rdi mov r14 , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ r14 + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ r14 + hexvar ] cmp eax , num je hexvar mov r15d , hexvar cmp eax , num jne hexvar mov qword ptr [ rsp + num ] , rdx mov rdx , qword ptr [ r14 + hexvar ] test rdx , rdx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov rdx , rax mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov edi , r12d mov rsi , r13 mov r8d , num call hexvar xor r15d , r15d test eax , eax jle hexvar movsxd rbp , eax mov rdi , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] movzx r12d , byte ptr [ rax + rbp - num ] call hexvar mov edi , eax call hexvar cmp eax , r12d jne hexvar add rbp , - num mov rdi , qword ptr [ r14 + hexvar ] call hexvar cmp ebp , eax jne hexvar test rbx , rbx je hexvar mov rsi , qword ptr [ r14 + hexvar ] mov rdi , rbx mov rdx , rbp call hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov r8d , dword ptr [ r14 + hexvar ] mov edi , r12d mov rsi , r13 mov rdx , rbx call hexvar mov r15d , eax test r15d , r15d jns hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rbp , qword ptr [ rbp + hexvar ] xor r15d , r15d lea r8 , [ rsp + hexvar ] mov edi , eax xor esi , esi xor edx , edx mov rcx , rbx mov r9 , r13 push qword ptr [ rbp + hexvar ] push r12 call hexvar add rsp , hexvar test eax , eax jle hexvar mov r15d , dword ptr [ rsp + hexvar ] test r15d , r15d js hexvar movsxd rbp , r15d mov r15 , qword ptr [ rsp + num ] mov qword ptr [ r15 ] , rbp mov r15d , num mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s5 , hexvar ( sp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s2 , a1 move s3 , a2 move s4 , a3 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) lw s1 , hexvar ( a0 ) lw a0 , hexvar ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 lw s1 , hexvar ( a0 ) lw s2 , - hexvar ( gp ) sw s5 , hexvar ( sp ) move s5 , a3 sw s4 , hexvar ( sp ) move s4 , a2 sw s3 , hexvar ( sp ) move s3 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s2 ) lw a0 , hexvar ( s1 )
push rbp push r15 push r14 push r13 push r12 push rbx sub rsp , hexvar mov r12 , r8 mov r13 , rcx mov rbx , rsi mov rbp , rdi mov r14 , qword ptr [ rdi + hexvar ] mov rdi , qword ptr [ r14 + hexvar ] test rdi , rdi je hexvar mov eax , dword ptr [ r14 + hexvar ] cmp eax , num je hexvar mov r15d , hexvar cmp eax , num jne hexvar mov qword ptr [ rsp + num ] , rdx mov rdx , qword ptr [ r14 + hexvar ] test rdx , rdx jne hexvar mov rdi , qword ptr [ rbp + hexvar ] call hexvar mov esi , hexvar mov edi , eax mov edx , hexvar call hexvar mov rdx , rax mov qword ptr [ r14 + hexvar ] , rax test rax , rax je hexvar mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov edi , r12d mov rsi , r13 mov r8d , num call hexvar xor r15d , r15d test eax , eax jle hexvar movsxd rbp , eax mov rdi , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] movzx r12d , byte ptr [ rax + rbp - num ] call hexvar mov edi , eax call hexvar cmp eax , r12d jne hexvar add rbp , - num mov rdi , qword ptr [ r14 + hexvar ] call hexvar cmp ebp , eax jne hexvar test rbx , rbx je hexvar mov rsi , qword ptr [ r14 + hexvar ] mov rdi , rbx mov rdx , rbp call hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx mov rax , qword ptr [ rbp + hexvar ] mov rcx , qword ptr [ rax + hexvar ] mov r8d , dword ptr [ r14 + hexvar ] mov edi , r12d mov rsi , r13 mov rdx , rbx call hexvar mov r15d , eax test r15d , r15d jns hexvar jmp hexvar mov qword ptr [ rsp + num ] , rdx call hexvar mov rbp , qword ptr [ rbp + hexvar ] xor r15d , r15d lea r8 , [ rsp + hexvar ] mov edi , eax xor esi , esi xor edx , edx mov rcx , rbx mov r9 , r13 push qword ptr [ rbp + hexvar ] push r12 call hexvar add rsp , hexvar test eax , eax jle hexvar mov r15d , dword ptr [ rsp + hexvar ] test r15d , r15d js hexvar movsxd rbp , r15d mov r15 , qword ptr [ rsp + num ] mov qword ptr [ r15 ] , rbp mov r15d , num mov eax , r15d add rsp , hexvar pop rbx pop r12 pop r13 pop r14 pop r15 pop rbp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx movzx eax , byte ptr [ eax + num ] cmp al , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx mov eax , dword ptr [ eax ] mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax je hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num setne al movzx eax , al test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp - hexvar ] , eax jl hexvar mov eax , num leave ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx movzx eax , byte ptr [ eax + num ] cmp al , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx mov eax , dword ptr [ eax ] mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax je hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num setne al movzx eax , al test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp - hexvar ] , eax jl hexvar mov eax , num leave ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi + num ] , num je hexvar mov qword ptr [ rsp + num ] , rdx mov rbp , rsi mov r14 , rdi mov ebx , num mov rax , qword ptr [ rbp + hexvar ] mov r12 , qword ptr [ rax + rbx * num ] mov rax , r12 shl rax , num add rax , qword ptr [ r13 ] cmp byte ptr [ rax + num ] , num jne hexvar mov rax , qword ptr [ rax ] cmp rax , hexvar ja hexvar mov rdx , qword ptr [ r13 + hexvar ] bt rdx , rax jae hexvar mov rax , qword ptr [ r14 + hexvar ] cmp rax , qword ptr [ r14 + hexvar ] jne hexvar mov rdi , qword ptr [ r14 + hexvar ] movabs rcx , hexvar cmp rax , rcx ja hexvar lea r15 , [ rax + rax + num ] lea rsi , [ r15 * num ] call hexvar test rax , rax jne hexvar jmp hexvar mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] lea r15 , [ rax + rdx * num ] mov esi , hexvar mov edi , num call hexvar mov qword ptr [ r15 ] , rax mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar mov qword ptr [ rax + num ] , r12 mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] lea rcx , [ rax + num ] mov qword ptr [ r14 + hexvar ] , rcx mov rax , qword ptr [ rdx + rax * num ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rcx add rbx , num cmp qword ptr [ rbp + num ] , rbx ja hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , hexvar jmp hexvar mov qword ptr [ r14 + hexvar ] , rax mov qword ptr [ r14 + hexvar ] , r15 jmp hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi + num ] , num je hexvar mov qword ptr [ rsp + num ] , rdx mov rbp , rsi mov r14 , rdi mov ebx , num jmp hexvar lea r15 , [ rsi + rsi ] shl rsi , num mov rdi , qword ptr [ r14 + hexvar ] call hexvar test rax , rax je hexvar mov qword ptr [ r14 + hexvar ] , rax mov qword ptr [ r14 + hexvar ] , r15 jmp hexvar add rbx , num cmp qword ptr [ rbp + num ] , rbx jbe hexvar mov rax , qword ptr [ rbp + hexvar ] mov r12 , qword ptr [ rax + rbx * num ] mov rax , r12 shl rax , num add rax , qword ptr [ r13 ] cmp byte ptr [ rax + num ] , num jne hexvar mov rax , qword ptr [ rax ] cmp rax , hexvar ja hexvar mov rdx , qword ptr [ r13 + hexvar ] bt rdx , rax jae hexvar mov rsi , qword ptr [ r14 + hexvar ] cmp rsi , qword ptr [ r14 + hexvar ] je hexvar mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] lea r15 , [ rax + rdx * num ] mov esi , hexvar mov edi , num call hexvar mov qword ptr [ r15 ] , rax mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar mov qword ptr [ rax + num ] , r12 mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] lea rcx , [ rax + num ] mov qword ptr [ r14 + hexvar ] , rcx mov rax , qword ptr [ rdx + rax * num ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , num jmp hexvar mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx movzx eax , byte ptr [ eax + num ] cmp al , num jne hexvar mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] shl edx , num add eax , edx mov eax , dword ptr [ eax ] cmp eax , hexvar jg hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] mov ecx , dword ptr [ ebp - hexvar ] shl ecx , num add eax , ecx mov eax , dword ptr [ eax ] mov ecx , eax shr edx , cl mov eax , edx and eax , num test eax , eax je hexvar sub esp , num push dword ptr [ ebp + hexvar ] push dword ptr [ ebp - hexvar ] push dword ptr [ ebp + num ] call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num setne al movzx eax , al test eax , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar add dword ptr [ ebp - hexvar ] , num mov eax , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ eax + num ] cmp dword ptr [ ebp - hexvar ] , eax jl hexvar mov eax , num leave ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi + num ] , num je hexvar mov qword ptr [ rsp + num ] , rdx mov rbp , rsi mov r14 , rdi mov ebx , num jmp hexvar lea r15 , [ rsi + rsi ] shl rsi , num mov rdi , qword ptr [ r14 + hexvar ] call hexvar test rax , rax je hexvar mov qword ptr [ r14 + hexvar ] , rax mov qword ptr [ r14 + hexvar ] , r15 jmp hexvar add rbx , num cmp qword ptr [ rbp + num ] , rbx jbe hexvar mov rax , qword ptr [ rbp + hexvar ] mov r12 , qword ptr [ rax + rbx * num ] mov rax , r12 shl rax , num add rax , qword ptr [ r13 ] cmp byte ptr [ rax + num ] , num jne hexvar mov rax , qword ptr [ rax ] cmp rax , hexvar ja hexvar mov rdx , qword ptr [ r13 + hexvar ] bt rdx , rax jae hexvar mov rsi , qword ptr [ r14 + hexvar ] cmp rsi , qword ptr [ r14 + hexvar ] je hexvar mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] lea r15 , [ rax + rdx * num ] mov esi , hexvar mov edi , num call hexvar mov qword ptr [ r15 ] , rax mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar mov qword ptr [ rax + num ] , r12 mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] lea rcx , [ rax + num ] mov qword ptr [ r14 + hexvar ] , rcx mov rax , qword ptr [ rdx + rax * num ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rcx jmp hexvar mov eax , num add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push r15 push r14 push r13 push r12 push rbp push rbx sub rsp , hexvar mov r13 , qword ptr [ rdi + hexvar ] cmp qword ptr [ rsi + num ] , num je hexvar mov qword ptr [ rsp + num ] , rdx mov rbp , rsi mov r14 , rdi mov ebx , num mov rax , qword ptr [ rbp + hexvar ] mov r12 , qword ptr [ rax + rbx * num ] mov rax , r12 shl rax , num add rax , qword ptr [ r13 ] cmp byte ptr [ rax + num ] , num jne hexvar mov rax , qword ptr [ rax ] cmp rax , hexvar ja hexvar mov rdx , qword ptr [ r13 + hexvar ] bt rdx , rax jae hexvar mov rsi , qword ptr [ r14 + hexvar ] cmp rsi , qword ptr [ r14 + hexvar ] jne hexvar lea r15 , [ rsi + rsi ] shl rsi , num mov rdi , qword ptr [ r14 + hexvar ] call hexvar test rax , rax je hexvar mov qword ptr [ r14 + hexvar ] , rax mov qword ptr [ r14 + hexvar ] , r15 mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] lea r15 , [ rax + rdx * num ] mov esi , hexvar mov edi , num call hexvar mov qword ptr [ r15 ] , rax mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ rax + rdx * num ] test rax , rax je hexvar mov qword ptr [ rax + num ] , r12 mov rdx , qword ptr [ r14 + hexvar ] mov rax , qword ptr [ r14 + hexvar ] lea rcx , [ rax + num ] mov qword ptr [ r14 + hexvar ] , rcx mov rax , qword ptr [ rdx + rax * num ] mov rcx , qword ptr [ rsp + num ] mov qword ptr [ rax ] , rcx add rbx , num cmp qword ptr [ rbp + num ] , rbx ja hexvar mov eax , num jmp hexvar mov eax , num jmp hexvar mov eax , hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 pop r14 pop r15 ret
push { fp , lr } add fp , sp , num sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] str r2 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , hexvar ] str r3 , [ fp , - hexvar ] mov r3 , num str r3 , [ fp , - hexvar ] b hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , num ] ldr r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldrb r3 , [ r3 , num ] cmp r3 , num bne hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 ] ldr r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r2 , r3 ldr r3 , [ r3 ] cmp r3 , hexvar bgt hexvar ldr r3 , [ fp , - hexvar ] ldr r2 , [ r3 , hexvar ] ldr r3 , [ fp , - hexvar ] ldr r1 , [ r3 ] ldr r3 , [ fp , - hexvar ] lsl r3 , r3 , num add r3 , r1 , r3 ldr r3 , [ r3 ] lsr r3 , r2 , r3 and r3 , r3 , num cmp r3 , num beq hexvar ldr r2 , [ fp , - hexvar ] ldr r1 , [ fp , - hexvar ] ldr r0 , [ fp , - hexvar ] bl hexvar str r0 , [ fp , - num ] ldr r3 , [ fp , - num ] cmp r3 , num movne r3 , num moveq r3 , num and r3 , r3 , hexvar cmp r3 , num beq hexvar ldr r3 , [ fp , - num ] b hexvar ldr r3 , [ fp , - hexvar ] add r3 , r3 , num str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] ldr r3 , [ r3 , num ] ldr r2 , [ fp , - hexvar ] cmp r2 , r3 blt hexvar mov r3 , num mov r0 , r3 sub sp , fp , num pop { fp , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - num ] , rax xor eax , eax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov edx , num mov esi , num mov rdi , rax call hexvar test eax , eax jne hexvar mov rdx , qword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov esi , num mov rdi , rax call hexvar cmp rax , num je hexvar mov eax , num jmp hexvar movzx eax , byte ptr [ rbp - hexvar ] cmp al , hexvar jne hexvar movzx eax , byte ptr [ rbp - num ] cmp al , hexvar je hexvar mov edi , num call hexvar mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdi , rax call hexvar test eax , eax jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp qword ptr [ rbp - hexvar ] , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] test rax , rax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rax + hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov qword ptr [ rax + hexvar ] , rdx mov eax , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] test eax , eax je hexvar mov rax , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rax + hexvar ] or eax , hexvar mov edx , eax mov rax , qword ptr [ rbp - hexvar ] mov dword ptr [ rax + hexvar ] , edx mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + num ] mov rcx , qword ptr [ rbp - num ] xor rcx , qword ptr fs : [ hexvar ] je hexvar call hexvar leave ret
push { r4 , r5 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] bl hexvar mov r3 , num str r3 , [ sp ] mov r2 , num mov r3 , num mov r0 , r4 bl hexvar cmp r0 , num movne r0 , num bne hexvar mov r2 , r4 mov r1 , num add r0 , sp , num bl hexvar cmp r0 , num movne r0 , num bne hexvar ldrb r3 , [ sp , num ] cmp r3 , hexvar bne hexvar ldrb r3 , [ sp , num ] cmp r3 , hexvar bne hexvar ldr r5 , [ r4 , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num ldrne r3 , [ r4 , hexvar ] orrne r3 , r3 , hexvar strne r3 , [ r4 , hexvar ] ldr r0 , [ r4 , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) sw s2 , hexvar ( sp ) lui s2 , hexvar lw s1 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) lw v0 , hexvar ( s2 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) move a3 , zero move a2 , zero sw zero , hexvar ( sp ) bal hexvar move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a3 , zero , num move a2 , zero sw s0 , hexvar ( sp ) bal hexvar addiu a0 , sp , hexvar bnez v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num bne v1 , v0 , hexvar lb v0 , hexvar ( sp ) addiu v1 , zero , hexvar bne v0 , v1 , hexvar lb v1 , hexvar ( sp ) bne v1 , v0 , hexvar lw v0 , hexvar ( s2 ) beqz v0 , hexvar lw s3 , hexvar ( s0 )
push { r4 , r5 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] bl hexvar mov r3 , num str r3 , [ sp ] mov r2 , num mov r3 , num mov r0 , r4 bl hexvar cmp r0 , num movne r0 , num bne hexvar mov r2 , r4 mov r1 , num add r0 , sp , num bl hexvar cmp r0 , num movne r0 , num bne hexvar ldrb r3 , [ sp , num ] cmp r3 , hexvar bne hexvar ldrb r3 , [ sp , num ] cmp r3 , hexvar bne hexvar ldr r5 , [ r4 , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num ldrne r3 , [ r4 , hexvar ] orrne r3 , r3 , hexvar strne r3 , [ r4 , hexvar ] ldr r0 , [ r4 , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar xor eax , eax mov esi , eax xor edx , edx mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar lea rdi , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , num call hexvar cmp rax , num je hexvar mov qword ptr [ rbp - num ] , num jmp hexvar movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar jne hexvar movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar je hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] or ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx movabs rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr [ ebx + hexvar ] mov esi , dword ptr [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax test ecx , ecx je hexvar push num push num push num push esi call hexvar add esp , hexvar test eax , eax jne hexvar push esi push num push num lea eax , [ esp + hexvar ] push eax call hexvar xor eax , num add esp , hexvar or edx , eax jne hexvar cmp byte ptr [ esp + hexvar ] , hexvar jne hexvar cmp byte ptr [ esp + hexvar ] , hexvar jne hexvar mov edx , dword ptr [ ebx + hexvar ] mov edi , dword ptr [ esi + hexvar ] test edx , edx je hexvar sub esp , num push num push hexvar push esi call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ esi + hexvar ] , eax mov dword ptr [ eax + num ] , num mov dword ptr [ eax ] , num mov dword ptr [ eax + num ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov eax , esi call hexvar test eax , eax je hexvar mov eax , dword ptr [ esi + hexvar ] test eax , eax je hexvar or dword ptr [ esi + hexvar ] , hexvar mov eax , dword ptr [ esi + num ] jmp hexvar nop sub esp , hexvar push num call hexvar add esp , hexvar xor eax , eax mov ecx , dword ptr [ esp + hexvar ] xor ecx , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) sw s2 , hexvar ( sp ) lui s2 , hexvar lw s1 , - hexvar ( gp ) sw s0 , hexvar ( sp ) move s0 , a0 sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw gp , hexvar ( sp ) lw v1 , ( s1 ) lw v0 , - hexvar ( s2 ) sw v1 , hexvar ( sp ) beqz v0 , hexvar lw t9 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) move a3 , zero move a2 , zero sw zero , hexvar ( sp ) jalr t9 move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a3 , zero , num move a2 , zero sw s0 , hexvar ( sp ) jalr t9 addiu a0 , sp , hexvar bnez v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num bne v1 , v0 , hexvar lb v0 , hexvar ( sp ) addiu v1 , zero , hexvar bne v0 , v1 , hexvar lb v1 , hexvar ( sp ) bne v1 , v0 , hexvar lw v0 , - hexvar ( s2 ) beqz v0 , hexvar lw s3 , hexvar ( s0 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar lui v0 , hexvar sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s0 , a0 lw s1 , - hexvar ( gp ) lw v1 , - hexvar ( v0 ) sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) lw a0 , ( s1 ) sw a0 , hexvar ( sp ) beqz v1 , hexvar lw t9 , - hexvar ( gp ) lw t9 , - hexvar ( gp ) move a3 , zero move a2 , zero sw zero , hexvar ( sp ) bal hexvar move a0 , s0 bnez v0 , hexvar lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) addiu a3 , zero , num move a2 , zero sw s0 , hexvar ( sp ) bal hexvar addiu a0 , sp , hexvar bnez v0 , hexvar lw gp , hexvar ( sp ) addiu v0 , zero , num bne v1 , v0 , hexvar lb v0 , hexvar ( sp ) addiu v1 , zero , hexvar bne v0 , v1 , hexvar lb v1 , hexvar ( sp ) bne v1 , v0 , hexvar move a0 , s0 jal hexvar lw s2 , hexvar ( s0 )
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi call hexvar xor eax , eax mov esi , eax xor edx , edx mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar lea rdi , [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov esi , num call hexvar cmp rax , num je hexvar mov qword ptr [ rbp - num ] , num jmp hexvar movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar jne hexvar movsx eax , byte ptr [ rbp - hexvar ] cmp eax , hexvar je hexvar mov edi , num call hexvar mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] mov qword ptr [ rbp - hexvar ] , rax mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] call hexvar cmp eax , num jne hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax + hexvar ] cmp rax , qword ptr [ rbp - hexvar ] je hexvar mov rax , qword ptr [ rbp - hexvar ] cmp qword ptr [ rax + hexvar ] , num je hexvar mov rdi , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rax + hexvar ] call hexvar mov rax , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov qword ptr [ rcx + hexvar ] , rax mov qword ptr [ rbp - num ] , num jmp hexvar mov rax , qword ptr [ rbp - hexvar ] cmp dword ptr [ rax + hexvar ] , num jbe hexvar mov rax , qword ptr [ rbp - hexvar ] mov ecx , dword ptr [ rax + hexvar ] or ecx , hexvar mov dword ptr [ rax + hexvar ] , ecx movabs rax , hexvar mov qword ptr [ rbp - num ] , rax mov rax , qword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
push { r4 , r5 , lr } sub sp , sp , hexvar mov r4 , r0 ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] str r3 , [ sp , hexvar ] bl hexvar mov r3 , num str r3 , [ sp ] mov r2 , num mov r3 , num mov r0 , r4 bl hexvar cmp r0 , num movne r0 , num bne hexvar mov r2 , r4 mov r1 , num add r0 , sp , num bl hexvar cmp r0 , num movne r0 , num bne hexvar ldrb r3 , [ sp , num ] cmp r3 , hexvar bne hexvar ldrb r3 , [ sp , num ] cmp r3 , hexvar bne hexvar ldr r5 , [ r4 , hexvar ] mov r0 , r4 bl hexvar cmp r0 , num beq hexvar mov r0 , r4 bl hexvar cmp r0 , num beq hexvar ldr r3 , [ r4 , hexvar ] cmp r3 , num ldrne r3 , [ r4 , hexvar ] orrne r3 , r3 , hexvar strne r3 , [ r4 , hexvar ] ldr r0 , [ r4 , num ] ldr r2 , [ sp , hexvar ] ldr r3 , [ pc , hexvar ] ldr r3 , [ r3 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , pc }
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , edx mov eax , num leave ret
test rdi , rdi je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar push rbx mov r10d , ecx mov r11d , edx mov ebx , esi call hexvar test eax , eax jne hexvar mov rdi , qword ptr [ rdi + hexvar ] mov dword ptr [ rdi + hexvar ] , ebx mov dword ptr [ rdi + hexvar ] , r11d mov dword ptr [ rdi + hexvar ] , r10d mov dword ptr [ rdi + hexvar ] , r8d pop rbx ret
push ebp push edi push esi push ebx mov ecx , dword ptr [ esp + hexvar ] test ecx , ecx je hexvar mov edx , dword ptr [ ecx + hexvar ] test edx , edx je hexvar mov eax , dword ptr [ ecx + hexvar ] test eax , eax je hexvar mov edx , dword ptr [ ecx + hexvar ] mov eax , hexvar test edx , edx je hexvar cmp ecx , dword ptr [ edx ] je hexvar pop ebx pop esi pop edi pop ebp ret
beqz a0 , hexvar nop lw v1 , hexvar ( a0 ) beqz v1 , hexvar move t0 , a0 lw v1 , hexvar ( a0 ) beqz v1 , hexvar nop addiu sp , sp , - hexvar sw ra , hexvar ( sp ) jal hexvar nop bnez v0 , hexvar lw a0 , hexvar ( sp ) lw v1 , hexvar ( t0 ) sw a1 , hexvar ( v1 ) sw a2 , hexvar ( v1 ) sw a3 , hexvar ( v1 ) sw a0 , hexvar ( v1 ) lw ra , hexvar ( sp ) jr ra addiu sp , sp , hexvar jr ra addiu v0 , zero , - num b hexvar addiu v0 , zero , - num
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop beqz v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar push dword ptr [ ebp + num ] call hexvar add esp , num test eax , eax je hexvar mov eax , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ ebp - num ] , eax mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov eax , dword ptr [ ebp - num ] mov dword ptr [ eax + hexvar ] , edx mov eax , num leave ret
test rdi , rdi mov r10d , ecx je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r9 , qword ptr [ rdi + hexvar ] mov eax , hexvar test r9 , r9 je hexvar cmp rdi , qword ptr [ r9 ] je hexvar ret nop mov eax , dword ptr [ r9 + num ] mov edi , num lea ecx , [ rax - hexvar ] cmp ecx , hexvar ja hexvar movabs rdi , hexvar shr rdi , cl not rdi and edi , num cmp eax , hexvar setne cl cmp eax , hexvar setne al test cl , al je hexvar test dil , dil mov eax , hexvar jne hexvar mov dword ptr [ r9 + hexvar ] , esi mov dword ptr [ r9 + hexvar ] , edx xor eax , eax mov dword ptr [ r9 + hexvar ] , r10d mov dword ptr [ r9 + hexvar ] , r8d ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw fp , hexvar ( sp ) move fp , sp sw a0 , hexvar ( fp ) sw a1 , hexvar ( fp ) sw a2 , hexvar ( fp ) sw a3 , hexvar ( fp ) lw a0 , hexvar ( fp ) jal hexvar nop beqz v0 , hexvar nop addiu v0 , zero , - num b hexvar nop lw v0 , hexvar ( fp ) lw v0 , hexvar ( v0 )
test rdi , rdi mov r10d , ecx je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar cmp qword ptr [ rdi + hexvar ] , num je hexvar mov r9 , qword ptr [ rdi + hexvar ] mov eax , hexvar test r9 , r9 je hexvar cmp rdi , qword ptr [ r9 ] je hexvar ret nop mov eax , dword ptr [ r9 + num ] mov edi , num lea ecx , [ rax - hexvar ] cmp ecx , hexvar ja hexvar movabs rdi , hexvar shr rdi , cl not rdi and edi , num cmp eax , hexvar setne cl cmp eax , hexvar setne al test cl , al je hexvar test dil , dil mov eax , hexvar jne hexvar mov dword ptr [ r9 + hexvar ] , esi mov dword ptr [ r9 + hexvar ] , edx xor eax , eax mov dword ptr [ r9 + hexvar ] , r10d mov dword ptr [ r9 + hexvar ] , r8d ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) move s3 , a0 move s2 , a1 move s1 , a2 move s0 , a3 jal hexvar nop bnez v0 , hexvar nop lw v1 , hexvar ( s3 ) sw s2 , hexvar ( v1 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , ecx mov dl , byte ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num je hexvar sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar jmp hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ebp - num ] , ecx mov dl , byte ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov byte ptr [ ebp - hexvar ] , dl mov al , byte ptr [ ebp - hexvar ] test al , num je hexvar sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - num ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] cmp eax , num setne cl mov byte ptr [ ebp - hexvar ] , cl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp - hexvar ] add eax , - num mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx ] , eax jmp hexvar jmp hexvar mov esp , ebp pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - num ] mov dword ptr [ eax ] , edx mov bl , byte ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov byte ptr [ ebp - hexvar ] , bl mov al , byte ptr [ ebp - hexvar ] test al , num jne hexvar jmp hexvar sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ edx ] , ecx jmp hexvar mov eax , dword ptr [ ebp - hexvar ] cmp dword ptr [ eax ] , num je hexvar sub esp , hexvar mov dword ptr [ esp ] , hexvar call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , - num mov dword ptr [ eax ] , ecx jmp hexvar jmp hexvar lea esp , [ ebp - num ] pop ebx pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] test byte ptr [ hexvar ] , num mov dword ptr [ ebp - num ] , eax je hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax cmp dword ptr [ ebp - num ] , num je hexvar mov dword ptr [ esp ] , hexvar call hexvar mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - num ] add eax , - num mov dword ptr [ ebp - num ] , eax jmp hexvar jmp hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add ebx , hexvar movzx eax , byte ptr [ ebx + hexvar ] test al , al je hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar jmp hexvar mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax jmp hexvar sub esp , hexvar push hexvar call hexvar add esp , hexvar sub dword ptr [ ebp - hexvar ] , num cmp dword ptr [ ebp - hexvar ] , num jne hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] movzx ecx , byte ptr [ hexvar ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - num ] dec eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] movzx ecx , byte ptr [ hexvar ] and ecx , num mov ecx , dword ptr [ ecx * num + hexvar ] mov dword ptr [ ebp - num ] , eax jmp ecx mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ ebp - num ] test eax , eax setne cl movzx eax , cl mov eax , dword ptr [ eax * num + hexvar ] jmp eax mov eax , esp mov dword ptr [ eax ] , hexvar call hexvar mov ecx , dword ptr [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax jmp ecx mov eax , dword ptr [ ebp - num ] dec eax mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ hexvar ] jmp eax mov eax , dword ptr [ hexvar ] jmp eax add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) addiu a2 , zero , hexvar lui v0 , hexvar addiu a1 , v0 , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) sw v0 , hexvar ( sp ) lw v0 , hexvar ( sp ) bnez v0 , hexvar nop addiu v0 , zero , hexvar sw v0 , hexvar ( sp ) lui v0 , hexvar addiu a3 , v0 , hexvar addiu a2 , zero , hexvar addiu a1 , zero , hexvar addiu a0 , zero , hexvar lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) move v0 , zero b hexvar nop addiu a2 , zero , hexvar move a1 , zero lw a0 , hexvar ( sp ) lw v0 , - hexvar ( gp ) move t9 , v0 jalr t9 nop lw gp , hexvar ( sp ) lw v0 , hexvar ( sp ) lui v1 , hexvar addiu v1 , v1 , - hexvar sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) lui v1 , hexvar addiu v1 , v1 , - hexvar sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) lui v1 , hexvar addiu v1 , v1 , - hexvar sw v1 , hexvar ( v0 ) lw v0 , hexvar ( sp ) lw ra , hexvar ( sp ) addiu sp , sp , hexvar jr ra nop
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rax + hexvar ] , hexvar pop rcx ret
push rbx sub rsp , hexvar mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar mov qword ptr [ rsp + num ] , rax mov rax , qword ptr [ rsp + num ] mov qword ptr [ rsp ] , rax mov ecx , hexvar mov ebx , hexvar jmp hexvar mov rax , qword ptr [ rsp + num ] xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num mov rax , qword ptr [ rsp ] mov qword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ rax + hexvar ] , hexvar mov rax , qword ptr [ rsp ] mov qword ptr [ rax + hexvar ] , hexvar mov ecx , hexvar mov rax , qword ptr [ rsp ] nop dword ptr [ rax ] cmp ecx , hexvar jg hexvar cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar cmp qword ptr [ rsp ] , num mov ecx , hexvar cmove ecx , ebx jmp hexvar nop word ptr [ rax + rax ] cmp ecx , hexvar je hexvar cmp ecx , hexvar jne hexvar jmp hexvar mov ecx , hexvar mov edi , hexvar mov esi , hexvar mov edx , hexvar mov r8d , hexvar call hexvar mov ecx , hexvar xor eax , eax jmp hexvar add rsp , hexvar pop rbx ret
str lr , [ sp , - num ] ! sub sp , sp , hexvar mov r2 , hexvar ldr r1 , [ pc , hexvar ] mov r0 , hexvar bl hexvar str r0 , [ sp , hexvar ] ldr r3 , [ sp , hexvar ] cmp r3 , num bne hexvar mov r3 , hexvar str r3 , [ sp ] ldr r3 , [ pc , hexvar ] mov r2 , hexvar mov r1 , hexvar mov r0 , hexvar bl hexvar mov r3 , num b hexvar mov r2 , hexvar mov r1 , num ldr r0 , [ sp , hexvar ] bl hexvar ldr r3 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] ldr r2 , [ pc , hexvar ] str r2 , [ r3 , hexvar ] ldr r3 , [ sp , hexvar ] mov r0 , r3 add sp , sp , hexvar pop { pc } andeq r0 , r0 , r0 andeq r0 , r0 , r0
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num lea edi , [ ebx - hexvar ] push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar lea edi , [ eax + num ] mov ecx , eax mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num xor eax , eax and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , esi pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num push hexvar lea eax , [ ebx - hexvar ] push eax push hexvar call hexvar mov esi , eax add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num lea edi , [ eax + num ] and edi , hexvar mov ecx , eax sub ecx , edi add ecx , hexvar shr ecx , num mov eax , num rep stosd dword ptr es : [ edi ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , esi pop ebx pop esi pop edi ret
push edi push esi push ebx call hexvar add ebx , hexvar sub esp , num lea edi , [ ebx - hexvar ] push hexvar push edi push hexvar call hexvar add esp , hexvar test eax , eax mov esi , eax je hexvar lea edi , [ eax + num ] mov ecx , eax mov dword ptr [ eax ] , num mov dword ptr [ eax + hexvar ] , num xor eax , eax and edi , hexvar sub ecx , edi add ecx , hexvar shr ecx , num rep stosd dword ptr es : [ edi ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esi + hexvar ] , eax lea eax , [ ebx - hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , esi pop ebx pop esi pop edi ret
push rax mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar test rax , rax je hexvar xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 movups xmmword ptr [ rax ] , xmm0 mov qword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rax + hexvar ] , hexvar pop rcx ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s0 , hexvar ( sp ) addiu a0 , zero , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , s1 , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar move a1 , zero jalr t9 move a0 , v0 lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( s0 ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( s0 ) lui v0 , hexvar addiu v0 , v0 , hexvar sw v0 , hexvar ( s0 ) lw ra , hexvar ( sp ) move v0 , s0 lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu v0 , zero , hexvar addiu a3 , s1 , hexvar addiu a2 , zero , hexvar sw v0 , hexvar ( sp ) addiu a1 , zero , hexvar jalr t9 addiu a0 , zero , hexvar b hexvar lw ra , hexvar ( sp )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) lui s1 , hexvar sw s0 , hexvar ( sp ) addiu a0 , zero , hexvar sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a1 , s1 , hexvar lw gp , hexvar ( sp ) beqz v0 , hexvar move s0 , v0 lw t9 , - hexvar ( gp ) addiu a2 , zero , hexvar move a1 , zero jalr t9 move a0 , v0 lui v0 , hexvar addiu v0 , v0 , - hexvar sw v0 , hexvar ( s0 )
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s0 , a0 move s2 , a1 addiu s1 , a0 , num move a0 , s1 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a1 , s2 lw a0 , ( s0 )
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] add edx , num mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push r12 push rbp push rbx mov rbx , rdi mov r12 , rsi lea rbp , [ rdi + num ] mov rdi , rbp call hexvar mov rsi , r12 mov rdi , qword ptr [ rbx ] call hexvar mov byte ptr [ r12 + hexvar ] , num lea rdi , [ rbx + hexvar ] call hexvar mov rdi , rbp call hexvar pop rbx pop rbp pop r12 ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] add edx , num mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] add edx , num mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] add edx , num mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - num ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rax , qword ptr [ rbp - num ] add rax , num mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] mov rax , qword ptr [ rax ] mov rdx , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov rax , qword ptr [ rbp - hexvar ] mov byte ptr [ rax + hexvar ] , num mov rax , qword ptr [ rbp - num ] add rax , hexvar mov rdi , rax call hexvar mov rax , qword ptr [ rbp - num ] add rax , num mov rdi , rax call hexvar nop leave ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] add edx , num mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + num ] add edx , num mov dword ptr [ esp ] , edx mov dword ptr [ ebp - num ] , eax mov dword ptr [ ebp - num ] , ecx call hexvar mov ecx , dword ptr [ ebp + num ] mov ecx , dword ptr [ ecx ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ esp + num ] , edx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + hexvar ] mov byte ptr [ ecx + hexvar ] , num mov ecx , dword ptr [ ebp + num ] add ecx , hexvar mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] add ecx , num mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , eax add esp , hexvar pop ebp ret
push ebp mov ebp , esp push ebx sub esp , num call hexvar add ebx , hexvar mov eax , dword ptr [ ebp + num ] add eax , num sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] mov eax , dword ptr [ eax ] sub esp , num push dword ptr [ ebp + hexvar ] push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov byte ptr [ eax + hexvar ] , num mov eax , dword ptr [ ebp + num ] add eax , num sub esp , hexvar push eax call hexvar add esp , hexvar mov eax , dword ptr [ ebp + num ] add eax , hexvar sub esp , hexvar push eax call hexvar add esp , hexvar nop mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax lea rax , [ rbp - hexvar ] mov rdi , rax call hexvar mov edx , dword ptr [ rbp - hexvar ] lea rax , [ rbp - hexvar ] mov esi , edx mov rdi , rax call hexvar lea rax , [ rbp - hexvar ] mov edx , num mov rsi , rax mov edi , num call hexvar test eax , eax je hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar nop mov rax , qword ptr [ rbp - hexvar ] xor rax , qword ptr fs : [ hexvar ] je hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + num ] lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebp - hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar nop mov eax , dword ptr [ ebp - hexvar ] xor eax , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , hexvar sw gp , hexvar ( sp ) move s1 , a0 lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) addiu s0 , sp , hexvar move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a1 , s1 move a0 , s0 lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) move a2 , zero move a1 , s0 addiu a0 , zero , num lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bnez v0 , hexvar lw t9 , - hexvar ( gp ) lw v1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) bne v1 , v0 , hexvar lw ra , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar jalr t9 nop lw gp , hexvar ( sp ) lw s0 , ( v0 )
push edi push esi mov edi , eax push ebx call hexvar add ebx , hexvar sub esp , hexvar lea esi , [ esp + hexvar ] mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , eax xor eax , eax push esi call hexvar pop edx pop ecx push edi push esi call hexvar add esp , hexvar push num push esi push num call hexvar add esp , hexvar test eax , eax je hexvar push eax lea eax , [ ebx - hexvar ] push num push eax push num call hexvar mov esi , eax call hexvar add esp , hexvar push esi push dword ptr [ eax ] push num call hexvar add esp , hexvar mov eax , dword ptr [ esp + hexvar ] xor eax , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi ret
push rbx mov ebx , edi sub rsp , hexvar mov rdi , rsp mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar mov esi , ebx mov rdi , rsp call hexvar xor edx , edx mov rsi , rsp mov edi , num call hexvar test eax , eax je hexvar mov edx , num mov esi , hexvar xor edi , edi call hexvar mov rbx , rax call hexvar mov esi , dword ptr [ rax ] mov rdx , rbx xor edi , edi xor eax , eax call hexvar mov rax , qword ptr [ rsp + hexvar ] xor rax , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + num ] lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebp - hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar nop mov eax , dword ptr [ ebp - hexvar ] xor eax , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar mov eax , dword ptr [ ebp + num ] lea ecx , [ ebp - hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar mov ecx , dword ptr [ ebp + num ] lea edx , [ ebp - hexvar ] mov dword ptr [ esp ] , edx mov dword ptr [ esp + num ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num lea edx , [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , num mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar cmp eax , num je hexvar call hexvar mov eax , dword ptr [ eax ] lea ecx , [ hexvar ] mov dword ptr [ esp ] , ecx mov dword ptr [ ebp - hexvar ] , eax call hexvar xor ecx , ecx mov dword ptr [ esp ] , num mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ esp + num ] , edx mov dword ptr [ esp + num ] , eax mov dword ptr [ ebp - hexvar ] , ecx call hexvar add esp , hexvar pop ebp ret
push ebp mov ebp , esp push esi push ebx sub esp , hexvar call hexvar add ebx , hexvar mov eax , dword ptr gs : [ hexvar ] mov dword ptr [ ebp - hexvar ] , eax xor eax , eax sub esp , hexvar lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push dword ptr [ ebp + num ] lea eax , [ ebp - hexvar ] push eax call hexvar add esp , hexvar sub esp , num push num lea eax , [ ebp - hexvar ] push eax push num call hexvar add esp , hexvar test eax , eax je hexvar sub esp , hexvar lea eax , [ ebx - hexvar ] push eax call hexvar add esp , hexvar mov esi , eax call hexvar mov eax , dword ptr [ eax ] sub esp , num push esi push eax push num call hexvar add esp , hexvar nop mov eax , dword ptr [ ebp - hexvar ] xor eax , dword ptr gs : [ hexvar ] je hexvar call hexvar lea esp , [ ebp - num ] pop ebx pop esi pop ebp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s0 , hexvar ( sp ) sw s1 , hexvar ( sp ) lw s0 , - hexvar ( gp ) lw s1 , hexvar ( sp ) lw t9 , - hexvar ( gp ) sw s4 , hexvar ( sp ) sw s3 , hexvar ( sp ) move s3 , a3 sw s2 , hexvar ( sp ) move s2 , a2 sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) lw v0 , ( s0 ) lw s4 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw v0 , hexvar ( sp ) jalr t9 nop bltz v0 , hexvar lw gp , hexvar ( sp ) lw a1 , hexvar ( sp ) lw a0 , ( s0 ) bne a1 , a0 , hexvar lw ra , hexvar ( sp ) lw s4 , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar lw t9 , - hexvar ( gp ) addiu a2 , sp , hexvar move a1 , s3 bal hexvar move a0 , s2 lw gp , hexvar ( sp ) lw t9 , - hexvar ( gp )
push r12 push rbp mov r12 , rcx push rbx mov rbp , rsi mov ebx , edx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax js hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push r13 push r12 mov r12 , rcx push rbp push rbx mov rbp , rsi mov ebx , edx sub rsp , hexvar mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax js hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 pop r13 ret
push r12 push rbp push rbx sub rsp , hexvar mov rbp , rsi mov ebx , edx mov r12 , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rsp + hexvar ] , rax xor eax , eax call hexvar test rax , rax js hexvar mov rcx , qword ptr [ rsp + hexvar ] xor rcx , qword ptr fs : [ hexvar ] jne hexvar add rsp , hexvar pop rbx pop rbp pop r12 ret
push ebp push edi mov edi , ecx push esi push ebx mov esi , edx call hexvar add ebx , hexvar sub esp , hexvar mov ecx , dword ptr gs : [ hexvar ] mov dword ptr [ esp + hexvar ] , ecx xor ecx , ecx mov ebp , dword ptr [ esp + hexvar ] push dword ptr [ esp + hexvar ] push edi push edx push eax call hexvar add esp , hexvar test edx , edx js hexvar mov edi , dword ptr [ esp + hexvar ] xor edi , dword ptr gs : [ hexvar ] jne hexvar add esp , hexvar pop ebx pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov ecx , dword ptr [ ebp - hexvar ] mov ebx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov eax , esp mov dword ptr [ ebp - hexvar ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + hexvar ] , ecx mov dword ptr [ eax + num ] , ebx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax + num ] , ecx mov ecx , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , ecx mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax js hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebx pop ebp ret
push rbp mov rbp , rsp push rbx sub rsp , hexvar mov dword ptr [ rbp - hexvar ] , edi mov qword ptr [ rbp - hexvar ] , rsi mov dword ptr [ rbp - hexvar ] , edx mov qword ptr [ rbp - hexvar ] , rcx mov rax , qword ptr fs : [ hexvar ] mov qword ptr [ rbp - hexvar ] , rax xor eax , eax mov edx , dword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rbp - hexvar ] mov eax , dword ptr [ rbp - hexvar ] mov rsi , rcx mov edi , eax call hexvar mov qword ptr [ rbp - hexvar ] , rax cmp qword ptr [ rbp - hexvar ] , num js hexvar mov rax , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rbp - hexvar ] xor rsi , qword ptr fs : [ hexvar ] je hexvar jmp hexvar lea rdx , [ rbp - hexvar ] mov rax , qword ptr [ rbp - hexvar ] mov rsi , rdx mov rdi , rax call hexvar mov qword ptr [ rbp - hexvar ] , rax mov eax , dword ptr [ rbp - hexvar ] cmp eax , num je hexvar cmp eax , num je hexvar test eax , eax jne hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar lea rdi , [ rip + hexvar ] call hexvar mov rbx , rax call hexvar mov eax , dword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rdx , qword ptr [ rbp - hexvar ] mov r8 , rcx mov rcx , rdx mov rdx , rbx mov esi , eax mov edi , num mov eax , num call hexvar jmp hexvar call hexvar mov edi , num call hexvar call hexvar add rsp , hexvar pop rbx pop rbp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , dword ptr [ ebp + hexvar ] mov edi , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , esi mov dword ptr [ ebp - hexvar ] , edi mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp + hexvar ] mov esi , esp mov dword ptr [ esi + hexvar ] , edx mov dword ptr [ esi + num ] , ecx mov dword ptr [ esi + num ] , eax mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ esi ] , eax call hexvar mov dword ptr [ ebp - hexvar ] , edx mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] test eax , eax js hexvar jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , edx mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ ebp - hexvar ] add esp , hexvar pop esi pop edi pop ebp ret
addiu sp , sp , - hexvar sw ra , hexvar ( sp ) sw s3 , hexvar ( sp ) sw s2 , hexvar ( sp ) sw s1 , hexvar ( sp ) sw s0 , hexvar ( sp ) lui gp , hexvar addiu gp , gp , - hexvar sw gp , hexvar ( sp ) move s3 , a3 move s2 , a2 lw s0 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw v0 , - hexvar ( gp ) lw v0 , ( v0 ) sw v0 , hexvar ( sp ) sw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 nop lw gp , hexvar ( sp ) bltz v0 , hexvar addiu a2 , sp , hexvar lw a1 , hexvar ( sp ) lw a0 , - hexvar ( gp ) lw a0 , ( a0 ) bne a1 , a0 , hexvar lw ra , hexvar ( sp ) lw s3 , hexvar ( sp ) lw s2 , hexvar ( sp ) lw s1 , hexvar ( sp ) lw s0 , hexvar ( sp ) jr ra addiu sp , sp , hexvar move a1 , s3 move a0 , s2 lw t9 , - hexvar ( gp ) bal hexvar nop lw gp , hexvar ( sp ) move s2 , v0 addiu v0 , zero , num beq s0 , v0 , hexvar addiu v0 , zero , num beq s0 , v0 , hexvar lw t9 , - hexvar ( gp )
push { r4 , r5 , r6 , r7 , r8 , lr } ldr r4 , [ pc , hexvar ] sub sp , sp , hexvar ldr r5 , [ sp , hexvar ] ldr r1 , [ r4 ] str r5 , [ sp ] mov r7 , r3 str r1 , [ sp , hexvar ] mov r6 , r2 ldr r8 , [ sp , hexvar ] bl hexvar cmp r0 , num sbcs r3 , r1 , num blt hexvar ldr r2 , [ sp , hexvar ] ldr r3 , [ r4 ] cmp r2 , r3 bne hexvar add sp , sp , hexvar pop { r4 , r5 , r6 , r7 , r8 , pc }
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov rbp , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor r15d , r15d test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rbp + hexvar ] , rax add rax , hexvar mov qword ptr [ rbp + hexvar ] , rax mov dword ptr [ rbp + hexvar ] , num mov rbp , qword ptr [ r14 + hexvar ] mov eax , dword ptr [ rbp ] mov dword ptr [ rbx ] , eax mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov eax , dword ptr [ rbp + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov r15d , num mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) move s1 , a1 lui a1 , hexvar sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) addiu a1 , a1 , - hexvar sw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) sw zero , num ( v0 )
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov rbp , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor r15d , r15d test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rbp + hexvar ] , rax add rax , hexvar mov qword ptr [ rbp + hexvar ] , rax mov dword ptr [ rbp + hexvar ] , num mov rbp , qword ptr [ r14 + hexvar ] mov eax , dword ptr [ rbp ] mov dword ptr [ rbx ] , eax mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov eax , dword ptr [ rbp + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov r15d , num mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov rbp , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor r15d , r15d test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rbp + hexvar ] , rax add rax , hexvar mov qword ptr [ rbp + hexvar ] , rax mov dword ptr [ rbp + hexvar ] , num mov rbp , qword ptr [ r14 + hexvar ] mov eax , dword ptr [ rbp ] mov dword ptr [ rbx ] , eax mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov eax , dword ptr [ rbp + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov r15d , num mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num add esp , hexvar pop ebx ret
push rbp push r15 push r14 push rbx push rax mov r14 , rsi mov rbp , rdi mov esi , hexvar mov edi , hexvar mov edx , hexvar call hexvar xor r15d , r15d test rax , rax je hexvar mov rbx , rax mov dword ptr [ rax ] , hexvar mov qword ptr [ rax + num ] , num mov dword ptr [ rax + hexvar ] , num mov qword ptr [ rax + hexvar ] , num xorps xmm0 , xmm0 movups xmmword ptr [ rax + hexvar ] , xmm0 mov dword ptr [ rax + hexvar ] , hexvar mov qword ptr [ rbp + hexvar ] , rax add rax , hexvar mov qword ptr [ rbp + hexvar ] , rax mov dword ptr [ rbp + hexvar ] , num mov rbp , qword ptr [ r14 + hexvar ] mov eax , dword ptr [ rbp ] mov dword ptr [ rbx ] , eax mov rdi , qword ptr [ rbp + num ] test rdi , rdi je hexvar call hexvar mov qword ptr [ rbx + num ] , rax test rax , rax je hexvar mov eax , dword ptr [ rbp + hexvar ] mov dword ptr [ rbx + hexvar ] , eax mov rax , qword ptr [ rbp + hexvar ] mov qword ptr [ rbx + hexvar ] , rax mov r15d , num mov eax , r15d add rsp , num pop rbx pop r14 pop r15 pop rbp ret
push ebx sub esp , hexvar call hexvar add ebx , hexvar sub esp , hexvar push dword ptr [ esp + hexvar ] call hexvar add esp , hexvar test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + num ] , eax mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + hexvar ] mov dword ptr [ esp + hexvar ] , eax mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax ] , edx mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] test eax , eax je hexvar mov eax , dword ptr [ esp + num ] mov eax , dword ptr [ eax + num ] sub esp , hexvar push eax call hexvar add esp , hexvar mov edx , eax mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + num ] , edx mov eax , dword ptr [ esp + hexvar ] mov eax , dword ptr [ eax + num ] test eax , eax jne hexvar mov eax , num jmp hexvar mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , dword ptr [ esp + num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ esp + hexvar ] mov dword ptr [ eax + hexvar ] , edx mov eax , num add esp , hexvar pop ebx ret
push edi push esi push ebx mov edi , dword ptr [ esp + hexvar ] call hexvar add ebx , hexvar sub esp , num lea eax , [ ebx - hexvar ] push hexvar push eax push hexvar call hexvar add esp , hexvar test eax , eax je hexvar mov dword ptr [ eax ] , hexvar mov dword ptr [ eax + num ] , num mov esi , eax mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , num mov dword ptr [ eax + hexvar ] , hexvar mov dword ptr [ edi + hexvar ] , eax lea eax , [ eax + num ] mov dword ptr [ edi + hexvar ] , num mov dword ptr [ edi + hexvar ] , eax mov eax , dword ptr [ esp + hexvar ] mov edi , dword ptr [ eax + hexvar ] mov eax , dword ptr [ edi ] mov dword ptr [ esi ] , eax mov eax , dword ptr [ edi + num ] test eax , eax je hexvar sub esp , hexvar push eax call hexvar add esp , hexvar test eax , eax mov dword ptr [ esi + num ] , eax je hexvar mov eax , dword ptr [ edi + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , dword ptr [ edi + hexvar ] mov dword ptr [ esi + hexvar ] , eax mov eax , num pop ebx pop esi pop edi ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) sw gp , hexvar ( sp ) sw ra , hexvar ( sp ) jal hexvar move s0 , a1 beqz v0 , hexvar lw gp , hexvar ( sp ) lw s0 , hexvar ( s0 ) lw s1 , hexvar ( s1 )
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , hexvar addiu a2 , zero , hexvar sw s1 , hexvar ( sp ) move s1 , a1 lui a1 , hexvar sw s2 , hexvar ( sp ) sw gp , hexvar ( sp ) move s2 , a0 sw ra , hexvar ( sp ) addiu a1 , a1 , - hexvar sw s0 , hexvar ( sp ) lw t9 , - hexvar ( gp ) jalr t9 addiu a0 , zero , hexvar beqz v0 , hexvar lw gp , hexvar ( sp ) sw zero , num ( v0 ) move s0 , v0 sw zero , hexvar ( v0 ) addiu v0 , zero , hexvar addiu v1 , zero , - num sw zero , hexvar ( s0 ) sw v0 , ( s0 ) addiu v0 , zero , num sw zero , hexvar ( s0 ) sw v0 , hexvar ( s0 ) addiu v0 , s0 , num sw v1 , hexvar ( s0 ) sw s0 , hexvar ( s2 ) lw s1 , hexvar ( s1 )
push ebp mov ebp , esp push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp add eax , - hexvar mov esp , eax mov ecx , esp add ecx , - hexvar mov esp , ecx mov edx , dword ptr [ ebp - hexvar ] mov dword ptr [ ebp - num ] , edx mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax ] , esi mov eax , dword ptr [ eax ] mov dword ptr [ ecx ] , eax mov eax , dword ptr [ ecx ] add eax , num mov dword ptr [ ebp - hexvar ] , eax mov eax , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ eax ] add ecx , num adc dword ptr [ eax + num ] , num mov dword ptr [ eax ] , ecx mov eax , num lea esp , [ ebp - num ] pop esi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , num mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , eax mov dword ptr [ ebp - hexvar ] , ecx mov eax , esp mov ecx , eax add ecx , - hexvar mov esp , ecx mov ecx , esp mov edx , ecx add edx , - hexvar mov esp , edx mov edx , esp mov esi , edx add esi , - hexvar mov esp , esi mov esi , dword ptr [ ebp - hexvar ] mov dword ptr [ eax - hexvar ] , esi mov eax , dword ptr [ ebp - hexvar ] mov dword ptr [ ecx - hexvar ] , eax mov ecx , dword ptr [ ecx - hexvar ] mov dword ptr [ edx - hexvar ] , ecx mov ecx , dword ptr [ edx - hexvar ] mov edx , dword ptr [ ecx + num ] mov edi , dword ptr [ ecx + hexvar ] add edx , num adc edi , num mov dword ptr [ ecx + num ] , edx mov dword ptr [ ecx + hexvar ] , edi mov eax , num lea esp , [ ebp - num ] pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , num mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] add eax , num adc edx , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , num leave ret
push { r4 , r5 , r6 , fp } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r4 , r3 , num ldm r4 , { r3 , r4 } adds r5 , r3 , num adc r6 , r4 , num ldr r3 , [ fp , - hexvar ] str r5 , [ r3 , num ] str r6 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 sub sp , fp , hexvar pop { r4 , r5 , r6 , fp } bx lr
push { r4 , r5 , r6 , fp } add fp , sp , hexvar sub sp , sp , hexvar str r0 , [ fp , - hexvar ] str r1 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] str r3 , [ fp , - hexvar ] ldr r3 , [ fp , - hexvar ] add r4 , r3 , num ldm r4 , { r3 , r4 } adds r5 , r3 , num adc r6 , r4 , num ldr r3 , [ fp , - hexvar ] str r5 , [ r3 , num ] str r6 , [ r3 , hexvar ] mov r3 , num mov r0 , r3 sub sp , fp , hexvar pop { r4 , r5 , r6 , fp } bx lr
push ebp mov ebp , esp sub esp , hexvar call hexvar add eax , hexvar mov eax , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - num ] , eax mov eax , dword ptr [ ebp - num ] mov edx , dword ptr [ eax + hexvar ] mov eax , dword ptr [ eax + num ] add eax , num adc edx , num mov ecx , dword ptr [ ebp - num ] mov dword ptr [ ecx + num ] , eax mov dword ptr [ ecx + hexvar ] , edx mov eax , num leave ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , num mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push edi push esi sub esp , hexvar mov eax , dword ptr [ ebp + hexvar ] mov ecx , dword ptr [ ebp + num ] mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov esi , dword ptr [ edx + num ] mov edi , dword ptr [ edx + hexvar ] add esi , num adc edi , num mov dword ptr [ edx + num ] , esi mov dword ptr [ edx + hexvar ] , edi mov edx , num mov dword ptr [ ebp - hexvar ] , eax mov eax , edx mov dword ptr [ ebp - hexvar ] , ecx add esp , hexvar pop esi pop edi pop ebp ret
push ebp mov ebp , esp push ebx sub esp , hexvar call hexvar add eax , hexvar mov edx , dword ptr [ ebp + num ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp + hexvar ] mov dword ptr [ ebp - hexvar ] , edx mov edx , dword ptr [ ebp - hexvar ] mov ecx , dword ptr [ edx + num ] mov edx , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ edx + num ] sub esp , num push ecx push edx mov ebx , eax call hexvar add esp , hexvar mov dword ptr [ ebp - hexvar ] , eax cmp dword ptr [ ebp - hexvar ] , num je hexvar mov eax , dword ptr [ ebp - hexvar ] jmp hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] cmp edx , eax je hexvar mov eax , dword ptr [ ebp - hexvar ] mov edx , dword ptr [ eax ] mov eax , dword ptr [ ebp - hexvar ] mov eax , dword ptr [ eax ] cmp edx , eax jbe hexvar mov eax , num jmp hexvar mov eax , hexvar jmp hexvar mov eax , num mov ebx , dword ptr [ ebp - num ] leave ret
push rbp mov rbp , rsp sub rsp , hexvar mov qword ptr [ rbp - hexvar ] , rdi mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov qword ptr [ rbp - hexvar ] , rsi mov rsi , qword ptr [ rbp - hexvar ] mov rdi , qword ptr [ rsi + num ] mov rsi , qword ptr [ rbp - hexvar ] mov rsi , qword ptr [ rsi + num ] call hexvar mov dword ptr [ rbp - hexvar ] , eax cmp dword ptr [ rbp - hexvar ] , num je hexvar mov eax , dword ptr [ rbp - hexvar ] mov dword ptr [ rbp - num ] , eax jmp hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] cmp rax , qword ptr [ rcx ] je hexvar mov rax , qword ptr [ rbp - hexvar ] mov rax , qword ptr [ rax ] mov rcx , qword ptr [ rbp - hexvar ] mov rcx , qword ptr [ rcx ] cmp rax , rcx mov edx , num mov esi , hexvar cmova esi , edx mov dword ptr [ rbp - num ] , esi jmp hexvar mov dword ptr [ rbp - num ] , num mov eax , dword ptr [ rbp - num ] add rsp , hexvar pop rbp ret
lui gp , hexvar addiu sp , sp , - hexvar addiu gp , gp , - hexvar sw s1 , hexvar ( sp ) move s1 , a0 sw s0 , hexvar ( sp ) move s0 , a1 sw ra , hexvar ( sp ) sw gp , hexvar ( sp ) lw t9 , - hexvar ( gp ) lw a0 , num ( a0 ) jalr t9 lw a1 , num ( a1 )
